{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ThreeChart.js","webpack:///webpack/bootstrap d25ec2d15a9c15a0f671","webpack:///./index.ts","webpack:///./src/index.ts","webpack:///./src/deps/deps.ts","webpack:///./~/three/examples/js/libs/stats.min.js","webpack:///./~/three/examples/js/renderers/CanvasRenderer.js","webpack:///./~/three/examples/js/renderers/Projector.js","webpack:///./~/is-plain-object/index.js","webpack:///./~/isobject/index.js","webpack:///./~/eventemitter2/lib/eventemitter2.js","webpack:///./src/polyfills/es6-promise.js","webpack:///./~/css-element-queries/src/ResizeSensor.js","webpack:///./~/deep-extend/lib/deep-extend.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./src/ChartView.ts","webpack:///./src/Plugin.ts","webpack:///./src/Utils.ts","webpack:///./src/deps/index.ts","webpack:///./src/EventEmmiter.ts","webpack:///./src/Chart.ts","webpack:///./src/Trend.ts","webpack:///./src/TrendSegmentsManager.ts","webpack:///./src/TrendsManager.ts","webpack:///./src/Viewport.ts","webpack:///./src/InterpolatedViewport.ts","webpack:///./src/AnimationManager.ts","webpack:///./src/Easing.ts","webpack:///./src/interfaces.ts","webpack:///./src/Widget.ts","webpack:///./src/widgets/AxisWidget.ts","webpack:///./src/widgets/GridWidget.ts","webpack:///./src/Color.ts","webpack:///./src/widgets/TrendsGradientWidget.ts","webpack:///./src/widgets/TrendsWidget.ts","webpack:///./src/widgets/TrendsLineWidget.ts","webpack:///./src/widgets/TrendsCandleWidget.ts","webpack:///./src/UniqCollection.ts","webpack:///./src/widgets/index.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","__export","hasOwnProperty","window","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","deepExtend","h","a","appendChild","dom","k","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","g","performance","Date","now","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","devicePixelRatio","u","n","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","THREE","SpriteCanvasMaterial","parameters","Material","type","color","Color","program","context","setValues","prototype","Object","create","constructor","clone","material","copy","CanvasRenderer","console","log","_this","_renderData","_elements","_lights","_projector","Projector","_canvas","canvas","undefined","_canvasWidth","_canvasHeight","_canvasWidthHalf","floor","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_context","alpha","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_camera","_v1","_v2","_v3","_v4","_v5","RenderableVertex","_v6","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_v4x","_v4y","_v5x","_v5y","_v6x","_v6y","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_clipBox","Box2","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_vector3","Vector3","_centroid","_normal","_normalViewMatrix","Matrix3","setLineDash","autoClear","sortObjects","sortElements","info","render","vertices","faces","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","setPixelRatio","value","setSize","updateStyle","set","setViewport","x","y","setScissor","setScissorTest","setClearColor","setClearColorHex","hex","warn","getClearColor","getClearAlpha","getMaxAnisotropy","clear","isEmpty","intersect","expandByScalar","clearRect","setBlending","NormalBlending","setOpacity","setFillStyle","makeEmpty","clearColor","clearDepth","clearStencil","scene","camera","Camera","error","setTransform","translate","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","calculateLights","el","element","opacity","RenderableSprite","renderSprite","RenderableLine","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","RenderableFace","v3","z","overdraw","expand","renderFace3","union","setRGB","ll","light","lightColor","AmbientLight","add","DirectionalLight","PointLight","calculateLight","position","normal","lightPosition","setFromMatrixPosition","matrixWorld","normalize","amount","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","blending","scaleX","scale","scaleY","dist","sqrt","SpriteMaterial","texture","map","pattern","version","textureToPattern","bitmap","image","ox","offset","oy","sx","repeat","sy","cx","cy","save","rotation","rotate","restore","getStyle","setStrokeStyle","beginPath","moveTo","lineTo","LineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","LineDashedMaterial","dashSize","gapSize","uv1","uv2","uv3","drawTriangle","MeshLambertMaterial","MeshPhongMaterial","emissive","FaceColors","multiply","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","MeshBasicMaterial","mapping","UVMapping","uvs","patternPath","envMap","SphericalReflectionMapping","vertexNormalsModel","applyMatrix3","MeshNormalMaterial","addScalar","x0","y0","x1","y1","x2","y2","closePath","fill","CompressedTexture","DataTexture","complete","repeatX","wrapS","RepeatWrapping","repeatY","wrapT","createPattern","onUpdate","u0","v0","u1","u2","det","idet","offsetX","offsetY","transform","clipImage","clip","pixels","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","MultiplyBlending","lineWidth","lineCap","lineJoin","strokeStyle","RenderableObject","object","renderOrder","vertexNormalsLength","Vector2","Vector4","visible","vertex","_object","_objectCount","_objectPool","_objectPoolLength","_vertex","_vertexCount","_vertexPool","_vertexPoolLength","_face","_faceCount","_facePool","_facePoolLength","_line","_lineCount","_linePool","_linePoolLength","_sprite","_spriteCount","_spritePool","_spritePoolLength","objects","_vector4","Box3","_boundingBox","_points3","Array","_points4","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","project","unprojectVector","unproject","pickingRay","RenderList","normals","normalMatrix","setObject","projectVertex","applyMatrix4","invW","w","pushVertex","getNextVertexInPool","pushNormal","push","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","getNextLineInPool","pushTriangle","side","DoubleSide","getNextFaceInPool","fromArray","i","arguments","uv","renderList","autoUpdate","updateMatrixWorld","parent","getInverse","multiplyMatrices","projectionMatrix","setFromMatrix","addObject","getNextObjectInPool","applyProjection","traverseVisible","Light","Mesh","Line","frustumCulled","intersectsObject","Sprite","intersectsSprite","sort","painterSort","o","ol","geometry","BufferGeometry","attributes","groups","positions","array","index","indices","group","start","count","Geometry","faceVertexUvs","isFaceMaterial","MultiMaterial","objectMaterials","vl","morphTargets","morphInfluences","morphTargetInfluences","tl","influence","target","targetVertex","fl","face","materials","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","clipLine","colors","getNextSpriteInPool","abs","line","sprite","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","isObject","isObjectObject","toString","ctor","prot","val","isArray","__WEBPACK_AMD_DEFINE_RESULT__","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","concat","**","growListenerTree","listener","split","slice","name","shift","warned","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","apply","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","callback","EventQueue","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","Buffer","isSpecificValue","RegExp","cloneSpecificValue","getTime","deepCloneArray","arr","forEach","item","src","keys","key","global","base64","ieee754","SlowBuffer","INSPECT_MAX_BYTES","TYPED_ARRAY_SUPPORT","typedArraySupport","kMaxLength","Uint8Array","__proto__","foo","subarray","byteLength","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","poolSize","_augment","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","Symbol","species","defineProperty","configurable","assertSize","size","alloc","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","fromArrayLike","byteOffset","isBuffer","buffer","isnan","data","_isBuffer","compare","String","toLowerCase","list","pos","buf","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","equals","inspect","str","match","join","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","toByteArray","dst","lookup","revLookup","Arr","placeHoldersCount","b64","tmp","placeHolders","L","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","LN2","__extends","__","Plugin_1","OrthographicCamera","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","ChartBlankView","state","$container","pluginsAndWidgets","widgets","Utils","plugins","filter","pluginOrWidget","ChartPlugin","chart","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","showStats","autoRender","Scene","isStopped","enabled","renderer","ChartView","renderers","antialias","backgroundColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","preinstalledWidgets","customWidgets","ChartWidget","pluginWidgetClasses","providedWidgets","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","fpsLimit","fps","delay_1","setTimeout","requestAnimationFrame","stop","run","destroy","unbindEvents","forceContextLoss","wtf","getState","getTrend","trendName","setState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","interpolatedViewport","onInterpolation","options","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","viewport","getCameraSettings","left","right","top","bottom","near","far","updateProjectionMatrix","cameraInitialPosition","params","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","NAME","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChangedHandler","getOptions","pluginsState","changedState","_i","unsubscriber","obj1","obj2","mergeArrays","deepCopy","JSON","parse","stringify","patch","objectToPatch","idKey","_loop_1","patchItem","subObject","find","this_1","travers","allowTraverseDeeper","canTraverseDeeper","setIdsToArrayItems","sourceObject","arr_1","getUid","toFixed","digitsCount","maxDigits","result","intVal","intStr","lengthDiff","afterPointDigitsCount","afterPointStr","createTexture","ctx","Texture","needsUpdate","createNearestTexture","minFilter","NearestFilter","createPixelPerfectTexture","magFilter","msg","currentId","getDistance","num1","num2","binarySearchClosestInd","mid","binarySearchClosest","ind","binarySearchInd","binarySearch","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","getRandomItem","random","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Trend_1","TrendsManager_1","Viewport_1","InterpolatedViewport_1","AnimationManager_1","Easing_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","VIEWPORT_CHANGE","DRAG_STATE_CHAGED","PLUGINS_STATE_CHANGED","LIGHT_BLUE","prevState","xAxis","range","AXIS_RANGE_TYPE","ALL","to","scroll","padding","margin","dataType","AXIS_DATA_TYPE","NUMBER","grid","minSizePx","yAxis","RELATIVE_END","animations","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","EASING","Quadratic","Out","zoomEase","autoScrollSpeed","autoScrollEase","Linear","None","autoScroll","trendDefaultState","TREND_TYPE","LINE","maxSegmentLength","lineColor","hasBackground","hasBeacon","settingsForTypes","CANDLE","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","inertialScroll","isReady","trendsManager","TrendsManager","trends","calculatedOptions","installPlugins","animationManager","AnimationManager","setAimationsEnabled","Viewport","computedData","getComputedData","savePrevState","InterpolatedViewport","onChange","onTrendChange","onTrendsChange","onDragStateChanged","onZoom","onViewportChange","tick","newState","eventData","silent","trendsData","trendOptions","newStateContainsData","currentStateData","newStateObj","changedProps","recalculateResult","recalculateState","emitChangedStateEvents","actualData","cursorOptions","isMouseDrag","oldX","currentX","currentScroll","deltaXVal","pxToValByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","zeroVal","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","maxXVal","getEndXVal","minXVal","getStartXVal","dragEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","viewportChangeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","getPlugin","changedTrends","newData","handleTrendsChange","dragState","onDragStateChangedHandler","animationOptions","isAnimationsEnabled","oldTrendsMaxX","trendsMaxXDelta","maxVisibleXVal","getRightVal","paddingRightVal","getValByViewportX","marginRightVal","scrollDelta","isDragMode","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","maxLength","rangeLessThenMinValue","minLength","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getViewportYByVal","minScreenY","currentAxisRange","newZoom","currentRange","nextRange","newScroll","resolve","animationTime","zoomToRange","scrollToEnd","endXVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","dataset","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","appendData","rawData","getData","updatedTrendData","changeData","prependData","allData","newData_1","xVal","yVal","statePatch","fromX","toX","filteredData","data_1","getFirstItem","getLastItem","setOptions","onPrependRequest","onDataChange","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","reject","then","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","unbindList","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","unbind","tryToRebuildSegments","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","segmentLength","currentSegmentLengthInPx","valToPxByXAxis","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","getNext","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","unshift","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","currentAnimationState","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","items","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","getPrev","prevPoint","getFrameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","onSegmentsRebuilded","updateParams","scrollXVal","scrollYVal","valToPxByYAxis","zoomX","zoomY","getWorldXByVal","getWorldYByVal","getWorldXByViewportX","viewportX","getWorldYByViewportY","viewportY","getValByViewportY","getValByWorldX","worldX","getValByWorldY","worldY","pxToValByYAxis","getViewportXByVal","getViewportXByWorldX","pixelsCount","getTop","getRight","getBottom","getLeft","getTopVal","getBottomVal","getLeftVal","INTERPOLATION_EVENT","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","TRANSFORMATION_EVENT","interpolationInProgress","setParams","onZoomInterpolation","onScrollInterpolation","onInterpolationEvent","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","hasActiveAnimations","scrollYAnimation","zoomYAnimation","interpolationStarted","interpolationFinished","STARTED","scrollEventNeeded","zoomEventNeeded","FINISHED","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","zoomXChanged","isAutoscroll","targetX","onTick","targetY","targetZoom","lastTickTime","timingFunction","Animation","animateObj","source","isEnabled","i_1","completeAndStop","createdTime","easing","progress","delay","startTime","setProgress","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","targetIteralable","onTickCb","onFinishCb","withDelay","initialVal","targetVal","In","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","Circular","Elastic","Back","Bounce","AXIS_TYPE","unbindEvent","widgetName","Object3D","object3D","axisXObject","axisYObject","setupAxis","X","Y","updateAxisXRequest","updateAxis","onScrollChange","onZoomFrame","orientation","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","rgbaStr","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","edgeOffset","segmentsCount","startVal","endVal","displayedValue","pxVal","textAlign","DATE","getDateStr","gridParams","sec","hour","day","tf","getHours","getMinutes","getSeconds","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","xLinesCount","yLinesCount","lineSegments","setZ","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","exec","numberToHexStr","colorStr","rgba","hexStr","getTransparent","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","onTransformationFrame","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","stateData","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","UniqCollectionItem","getId","_id","ID_KEY","CREATE","UPDATE","REMOVE","UniqCollection","models","models_1","model","getItemInd","justCreated","createInstance","prevProps","getItem","getLast","onCreate","onRemove"],"mappings":"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","file":"ThreeChart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__webpack_require__(2);\r\n\t__export(__webpack_require__(16));\r\n\t__export(__webpack_require__(29));\r\n\t__export(__webpack_require__(26));\r\n\t__export(__webpack_require__(21));\r\n\t__export(__webpack_require__(22));\r\n\t__export(__webpack_require__(23));\r\n\t__export(__webpack_require__(24));\r\n\t__export(__webpack_require__(18));\r\n\t__export(__webpack_require__(38));\r\n\t__export(__webpack_require__(30));\r\n\t__export(__webpack_require__(39));\r\n\t__export(__webpack_require__(17));\r\n\t__export(__webpack_require__(33));\r\n\t__export(__webpack_require__(27));\r\n\t__export(__webpack_require__(20));\r\n\t__export(__webpack_require__(28));\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"./ResizeSensor.ts\" />\r\n\t\"use strict\";\r\n\twindow.TweenLite = TweenMax;\r\n\twindow.Stats = __webpack_require__(3);\r\n\t// require('gsap/src/uncompressed/easing/EasePack.js');\r\n\t__webpack_require__(4);\r\n\t__webpack_require__(5);\r\n\texports.isPlainObject = __webpack_require__(6);\r\n\texports.EE2 = __webpack_require__(8);\r\n\tvar es6_promise_1 = __webpack_require__(9);\r\n\texports.Promise = es6_promise_1.Promise;\r\n\texports.ResizeSensor = __webpack_require__(10);\r\n\texports.deepExtend = __webpack_require__(11);\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// stats.js - http://github.com/mrdoob/stats.js\n\tvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\n\tif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\n\tStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\n\tv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\t\n\tTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\t\n\t\tTHREE.Material.call( this );\n\t\n\t\tthis.type = 'SpriteCanvasMaterial';\n\t\n\t\tthis.color = new THREE.Color( 0xffffff );\n\t\tthis.program = function ( context, color ) {};\n\t\n\t\tthis.setValues( parameters );\n\t\n\t};\n\t\n\tTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t\n\tTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\t\n\t\tvar material = new THREE.SpriteCanvasMaterial();\n\t\n\t\tmaterial.copy( this );\n\t\tmaterial.color.copy( this.color );\n\t\tmaterial.program = this.program;\n\t\n\t\treturn material;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.CanvasRenderer = function ( parameters ) {\n\t\n\t\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\t\n\t\tparameters = parameters || {};\n\t\n\t\tvar _this = this,\n\t\t_renderData, _elements, _lights,\n\t\t_projector = new THREE.Projector(),\n\t\n\t\t_canvas = parameters.canvas !== undefined\n\t\t\t\t ? parameters.canvas\n\t\t\t\t : document.createElement( 'canvas' ),\n\t\n\t\t_canvasWidth = _canvas.width,\n\t\t_canvasHeight = _canvas.height,\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\t\n\t\t_viewportX = 0,\n\t\t_viewportY = 0,\n\t\t_viewportWidth = _canvasWidth,\n\t\t_viewportHeight = _canvasHeight,\n\t\n\t\t_pixelRatio = 1,\n\t\n\t\t_context = _canvas.getContext( '2d', {\n\t\t\talpha: parameters.alpha === true\n\t\t} ),\n\t\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\t\n\t\t_contextGlobalAlpha = 1,\n\t\t_contextGlobalCompositeOperation = 0,\n\t\t_contextStrokeStyle = null,\n\t\t_contextFillStyle = null,\n\t\t_contextLineWidth = null,\n\t\t_contextLineCap = null,\n\t\t_contextLineJoin = null,\n\t\t_contextLineDash = [],\n\t\n\t\t_camera,\n\t\n\t\t_v1, _v2, _v3, _v4,\n\t\t_v5 = new THREE.RenderableVertex(),\n\t\t_v6 = new THREE.RenderableVertex(),\n\t\n\t\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\t\n\t\t_color = new THREE.Color(),\n\t\t_color1 = new THREE.Color(),\n\t\t_color2 = new THREE.Color(),\n\t\t_color3 = new THREE.Color(),\n\t\t_color4 = new THREE.Color(),\n\t\n\t\t_diffuseColor = new THREE.Color(),\n\t\t_emissiveColor = new THREE.Color(),\n\t\n\t\t_lightColor = new THREE.Color(),\n\t\n\t\t_patterns = {},\n\t\n\t\t_image, _uvs,\n\t\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\t\n\t\t_clipBox = new THREE.Box2(),\n\t\t_clearBox = new THREE.Box2(),\n\t\t_elemBox = new THREE.Box2(),\n\t\n\t\t_ambientLight = new THREE.Color(),\n\t\t_directionalLights = new THREE.Color(),\n\t\t_pointLights = new THREE.Color(),\n\t\n\t\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t\t_centroid = new THREE.Vector3(),\n\t\t_normal = new THREE.Vector3(),\n\t\t_normalViewMatrix = new THREE.Matrix3();\n\t\n\t\t/* TODO\n\t\t_canvas.mozImageSmoothingEnabled = false;\n\t\t_canvas.webkitImageSmoothingEnabled = false;\n\t\t_canvas.msImageSmoothingEnabled = false;\n\t\t_canvas.imageSmoothingEnabled = false;\n\t\t*/\n\t\n\t\t// dash+gap fallbacks for Firefox and everything else\n\t\n\t\tif ( _context.setLineDash === undefined ) {\n\t\n\t\t\t_context.setLineDash = function () {};\n\t\n\t\t}\n\t\n\t\tthis.domElement = _canvas;\n\t\n\t\tthis.autoClear = true;\n\t\tthis.sortObjects = true;\n\t\tthis.sortElements = true;\n\t\n\t\tthis.info = {\n\t\n\t\t\trender: {\n\t\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t// WebGLRenderer compatibility\n\t\n\t\tthis.supportsVertexTextures = function () {};\n\t\tthis.setFaceCulling = function () {};\n\t\n\t\t// API\n\t\n\t\tthis.getContext = function () {\n\t\n\t\t\treturn _context;\n\t\n\t\t};\n\t\n\t\tthis.getContextAttributes = function () {\n\t\n\t\t\treturn _context.getContextAttributes();\n\t\n\t\t};\n\t\n\t\tthis.getPixelRatio = function () {\n\t\n\t\t\treturn _pixelRatio;\n\t\n\t\t};\n\t\n\t\tthis.setPixelRatio = function ( value ) {\n\t\n\t\t\tif ( value !== undefined ) _pixelRatio = value;\n\t\n\t\t};\n\t\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\t\n\t\t\t_canvasWidth = width * _pixelRatio;\n\t\t\t_canvasHeight = height * _pixelRatio;\n\t\n\t\t\t_canvas.width = _canvasWidth;\n\t\t\t_canvas.height = _canvasHeight;\n\t\n\t\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\t\n\t\t\tif ( updateStyle !== false ) {\n\t\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\n\t\t\t}\n\t\n\t\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\t\n\t\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\t\n\t\t\t_contextGlobalAlpha = 1;\n\t\t\t_contextGlobalCompositeOperation = 0;\n\t\t\t_contextStrokeStyle = null;\n\t\t\t_contextFillStyle = null;\n\t\t\t_contextLineWidth = null;\n\t\t\t_contextLineCap = null;\n\t\t\t_contextLineJoin = null;\n\t\n\t\t\tthis.setViewport( 0, 0, width, height );\n\t\n\t\t};\n\t\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\t\n\t\t\t_viewportX = x * _pixelRatio;\n\t\t\t_viewportY = y * _pixelRatio;\n\t\n\t\t\t_viewportWidth = width * _pixelRatio;\n\t\t\t_viewportHeight = height * _pixelRatio;\n\t\n\t\t};\n\t\n\t\tthis.setScissor = function () {};\n\t\tthis.setScissorTest = function () {};\n\t\n\t\tthis.setClearColor = function ( color, alpha ) {\n\t\n\t\t\t_clearColor.set( color );\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\t\n\t\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\t\n\t\t};\n\t\n\t\tthis.setClearColorHex = function ( hex, alpha ) {\n\t\n\t\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\t\tthis.setClearColor( hex, alpha );\n\t\n\t\t};\n\t\n\t\tthis.getClearColor = function () {\n\t\n\t\t\treturn _clearColor;\n\t\n\t\t};\n\t\n\t\tthis.getClearAlpha = function () {\n\t\n\t\t\treturn _clearAlpha;\n\t\n\t\t};\n\t\n\t\tthis.getMaxAnisotropy = function () {\n\t\n\t\t\treturn 0;\n\t\n\t\t};\n\t\n\t\tthis.clear = function () {\n\t\n\t\t\tif ( _clearBox.isEmpty() === false ) {\n\t\n\t\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t\t_clearBox.expandByScalar( 2 );\n\t\n\t\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\t\n\t\t\t\tif ( _clearAlpha < 1 ) {\n\t\n\t\t\t\t\t_context.clearRect(\n\t\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t\t);\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( _clearAlpha > 0 ) {\n\t\n\t\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\t\tsetOpacity( 1 );\n\t\n\t\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\t\n\t\t\t\t\t_context.fillRect(\n\t\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t\t);\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_clearBox.makeEmpty();\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t// compatibility\n\t\n\t\tthis.clearColor = function () {};\n\t\tthis.clearDepth = function () {};\n\t\tthis.clearStencil = function () {};\n\t\n\t\tthis.render = function ( scene, camera ) {\n\t\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\n\t\n\t\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\t\n\t\t\t}\n\t\n\t\t\tif ( this.autoClear === true ) this.clear();\n\t\n\t\t\t_this.info.render.vertices = 0;\n\t\t\t_this.info.render.faces = 0;\n\t\n\t\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\t\n\t\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t\t_elements = _renderData.elements;\n\t\t\t_lights = _renderData.lights;\n\t\t\t_camera = camera;\n\t\n\t\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\t\n\t\t\t/* DEBUG\n\t\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t\t*/\n\t\n\t\t\tcalculateLights();\n\t\n\t\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\t\n\t\t\t\tvar element = _elements[ e ];\n\t\n\t\t\t\tvar material = element.material;\n\t\n\t\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\t\n\t\t\t\t_elemBox.makeEmpty();\n\t\n\t\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\t\n\t\t\t\t\t_v1 = element;\n\t\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\t\n\t\t\t\t\trenderSprite( _v1, element, material );\n\t\n\t\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\t\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\t\n\t\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen\n\t\t\t\t\t] );\n\t\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\t\n\t\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\t\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\t\n\t\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\t\n\t\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\t\n\t\t\t\t\tif ( material.overdraw > 0 ) {\n\t\n\t\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t\t_v3.positionScreen\n\t\t\t\t\t] );\n\t\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\t\n\t\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t/* DEBUG\n\t\t\t\tsetLineWidth( 1 );\n\t\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t\t*/\n\t\n\t\t\t\t_clearBox.union( _elemBox );\n\t\n\t\t\t}\n\t\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t\t*/\n\t\n\t\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tfunction calculateLights() {\n\t\n\t\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t\t_pointLights.setRGB( 0, 0, 0 );\n\t\n\t\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\t\n\t\t\t\tvar light = _lights[ l ];\n\t\t\t\tvar lightColor = light.color;\n\t\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\t\n\t\t\t\t\t_ambientLight.add( lightColor );\n\t\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\t\n\t\t\t\t\t// for sprites\n\t\n\t\t\t\t\t_directionalLights.add( lightColor );\n\t\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\t\n\t\t\t\t\t// for sprites\n\t\n\t\t\t\t\t_pointLights.add( lightColor );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction calculateLight( position, normal, color ) {\n\t\n\t\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\t\n\t\t\t\tvar light = _lights[ l ];\n\t\n\t\t\t\t_lightColor.copy( light.color );\n\t\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\t\n\t\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\t\n\t\t\t\t\tvar amount = normal.dot( lightPosition );\n\t\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\t\n\t\t\t\t\tamount *= light.intensity;\n\t\n\t\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\t\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\t\n\t\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\t\n\t\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\t\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\t\n\t\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\t\n\t\t\t\t\tif ( amount == 0 ) continue;\n\t\n\t\t\t\t\tamount *= light.intensity;\n\t\n\t\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction renderSprite( v1, element, material ) {\n\t\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\t\n\t\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\t\n\t\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\t\n\t\t\tif ( material instanceof THREE.SpriteMaterial ) {\n\t\n\t\t\t\tvar texture = material.map;\n\t\n\t\t\t\tif ( texture !== null ) {\n\t\n\t\t\t\t\tvar pattern = _patterns[ texture.id ];\n\t\n\t\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\t\n\t\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( pattern.canvas !== undefined ) {\n\t\n\t\t\t\t\t\tsetFillStyle( pattern.canvas );\n\t\n\t\t\t\t\t\tvar bitmap = texture.image;\n\t\n\t\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\t\n\t\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\t\n\t\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\t\tvar cy = scaleY / sy;\n\t\n\t\t\t\t\t\t_context.save();\n\t\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t\t_context.restore();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// no texture\n\t\n\t\t\t\t\tsetFillStyle( material.color.getStyle() );\n\t\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t\t_context.restore();\n\t\n\t\t\t\t}\n\t\n\t\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\t\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\t\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, scaleY );\n\t\n\t\t\t\tmaterial.program( _context );\n\t\n\t\t\t\t_context.restore();\n\t\n\t\t\t}\n\t\n\t\t\t/* DEBUG\n\t\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t\t_context.stroke();\n\t\t\t*/\n\t\n\t\t}\n\t\n\t\tfunction renderLine( v1, v2, element, material ) {\n\t\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\t\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\t\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\t\n\t\t\t\tsetLineWidth( material.linewidth );\n\t\t\t\tsetLineCap( material.linecap );\n\t\t\t\tsetLineJoin( material.linejoin );\n\t\n\t\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\t\n\t\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\t\n\t\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\t\n\t\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\t\n\t\t\t\t\t\t} catch ( exception ) {\n\t\n\t\t\t\t\t\t\tgrad = colorStyle1;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tsetStrokeStyle( grad );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_context.stroke();\n\t\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\t\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\t\n\t\t\t\tsetLineWidth( material.linewidth );\n\t\t\t\tsetLineCap( material.linecap );\n\t\t\t\tsetLineJoin( material.linejoin );\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\t\n\t\t\t\t_context.stroke();\n\t\n\t\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\t\n\t\t\t\tsetLineDash( [] );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\t\n\t\t\t_this.info.render.vertices += 3;\n\t\t\t_this.info.render.faces ++;\n\t\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\t\n\t\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\t\n\t\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\t\n\t\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\t\n\t\t\t\t_diffuseColor.copy( material.color );\n\t\t\t\t_emissiveColor.copy( material.emissive );\n\t\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\t\n\t\t\t\t\t_diffuseColor.multiply( element.color );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_color.copy( _ambientLight );\n\t\n\t\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\t\n\t\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\t\n\t\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\t\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t} else if ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t    material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t    material instanceof THREE.MeshPhongMaterial ) {\n\t\n\t\t\t\tif ( material.map !== null ) {\n\t\n\t\t\t\t\tvar mapping = material.map.mapping;\n\t\n\t\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\t\n\t\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( material.envMap !== null ) {\n\t\n\t\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\t\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\t\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\t\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\t\n\t\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t_color.copy( material.color );\n\t\n\t\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\t\n\t\t\t\t\t\t_color.multiply( element.color );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t\t}\n\t\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\t\n\t\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\t\n\t\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\t\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t} else {\n\t\n\t\t\t\t_color.setRGB( 1, 1, 1 );\n\t\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\t\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( x0, y0 );\n\t\t\t_context.lineTo( x1, y1 );\n\t\t\t_context.lineTo( x2, y2 );\n\t\t\t_context.closePath();\n\t\n\t\t}\n\t\n\t\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\t\n\t\t\tsetLineWidth( linewidth );\n\t\t\tsetLineCap( linecap );\n\t\t\tsetLineJoin( linejoin );\n\t\t\tsetStrokeStyle( color.getStyle() );\n\t\n\t\t\t_context.stroke();\n\t\n\t\t\t_elemBox.expandByScalar( linewidth * 2 );\n\t\n\t\t}\n\t\n\t\tfunction fillPath( color ) {\n\t\n\t\t\tsetFillStyle( color.getStyle() );\n\t\t\t_context.fill();\n\t\n\t\t}\n\t\n\t\tfunction textureToPattern( texture ) {\n\t\n\t\t\tif ( texture.version === 0 ||\n\t\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\t\ttexture instanceof THREE.DataTexture ) {\n\t\n\t\t\t\treturn {\n\t\t\t\t\tcanvas: undefined,\n\t\t\t\t\tversion: texture.version\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tvar image = texture.image;\n\t\n\t\t\tif ( image.complete === false ) {\n\t\n\t\t\t\treturn {\n\t\t\t\t\tcanvas: undefined,\n\t\t\t\t\tversion: 0\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\t\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\t\tcontext.drawImage( image, 0, 0 );\n\t\n\t\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t\n\t\t\tvar repeat = 'no-repeat';\n\t\n\t\t\tif ( repeatX === true && repeatY === true ) {\n\t\n\t\t\t\trepeat = 'repeat';\n\t\n\t\t\t} else if ( repeatX === true ) {\n\t\n\t\t\t\trepeat = 'repeat-x';\n\t\n\t\t\t} else if ( repeatY === true ) {\n\t\n\t\t\t\trepeat = 'repeat-y';\n\t\n\t\t\t}\n\t\n\t\t\tvar pattern = _context.createPattern( canvas, repeat );\n\t\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\t\n\t\t\treturn {\n\t\t\t\tcanvas: pattern,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\t\n\t\t\tvar pattern = _patterns[ texture.id ];\n\t\n\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\t\n\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t_patterns[ texture.id ] = pattern;\n\t\n\t\t\t}\n\t\n\t\t\tif ( pattern.canvas !== undefined ) {\n\t\n\t\t\t\tsetFillStyle( pattern.canvas );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t\t_context.fill();\n\t\t\t\treturn;\n\t\n\t\t\t}\n\t\n\t\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\t\n\t\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\t\twidth = texture.image.width * texture.repeat.x,\n\t\t\theight = texture.image.height * texture.repeat.y;\n\t\n\t\t\tu0 = ( u0 + offsetX ) * width;\n\t\t\tv0 = ( v0 + offsetY ) * height;\n\t\n\t\t\tu1 = ( u1 + offsetX ) * width;\n\t\t\tv1 = ( v1 + offsetY ) * height;\n\t\n\t\t\tu2 = ( u2 + offsetX ) * width;\n\t\t\tv2 = ( v2 + offsetY ) * height;\n\t\n\t\t\tx1 -= x0; y1 -= y0;\n\t\t\tx2 -= x0; y2 -= y0;\n\t\n\t\t\tu1 -= u0; v1 -= v0;\n\t\t\tu2 -= u0; v2 -= v0;\n\t\n\t\t\tdet = u1 * v2 - u2 * v1;\n\t\n\t\t\tif ( det === 0 ) return;\n\t\n\t\t\tidet = 1 / det;\n\t\n\t\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\t\n\t\t\te = x0 - a * u0 - c * v0;\n\t\t\tf = y0 - b * u0 - d * v0;\n\t\n\t\t\t_context.save();\n\t\t\t_context.transform( a, b, c, d, e, f );\n\t\t\t_context.fill();\n\t\t\t_context.restore();\n\t\n\t\t}\n\t\n\t\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\t\n\t\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\t\n\t\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\twidth = image.width - 1,\n\t\t\theight = image.height - 1;\n\t\n\t\t\tu0 *= width; v0 *= height;\n\t\t\tu1 *= width; v1 *= height;\n\t\t\tu2 *= width; v2 *= height;\n\t\n\t\t\tx1 -= x0; y1 -= y0;\n\t\t\tx2 -= x0; y2 -= y0;\n\t\n\t\t\tu1 -= u0; v1 -= v0;\n\t\t\tu2 -= u0; v2 -= v0;\n\t\n\t\t\tdet = u1 * v2 - u2 * v1;\n\t\n\t\t\tidet = 1 / det;\n\t\n\t\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\t\n\t\t\te = x0 - a * u0 - c * v0;\n\t\t\tf = y0 - b * u0 - d * v0;\n\t\n\t\t\t_context.save();\n\t\t\t_context.transform( a, b, c, d, e, f );\n\t\t\t_context.clip();\n\t\t\t_context.drawImage( image, 0, 0 );\n\t\t\t_context.restore();\n\t\n\t\t}\n\t\n\t\t// Hide anti-alias gaps\n\t\n\t\tfunction expand( v1, v2, pixels ) {\n\t\n\t\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\t\tdet = x * x + y * y, idet;\n\t\n\t\t\tif ( det === 0 ) return;\n\t\n\t\t\tidet = pixels / Math.sqrt( det );\n\t\n\t\t\tx *= idet; y *= idet;\n\t\n\t\t\tv2.x += x; v2.y += y;\n\t\t\tv1.x -= x; v1.y -= y;\n\t\n\t\t}\n\t\n\t\t// Context cached methods.\n\t\n\t\tfunction setOpacity( value ) {\n\t\n\t\t\tif ( _contextGlobalAlpha !== value ) {\n\t\n\t\t\t\t_context.globalAlpha = value;\n\t\t\t\t_contextGlobalAlpha = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setBlending( value ) {\n\t\n\t\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\t\n\t\t\t\tif ( value === THREE.NormalBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\t\n\t\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\t\n\t\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'darker';\n\t\n\t\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_contextGlobalCompositeOperation = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineWidth( value ) {\n\t\n\t\t\tif ( _contextLineWidth !== value ) {\n\t\n\t\t\t\t_context.lineWidth = value;\n\t\t\t\t_contextLineWidth = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineCap( value ) {\n\t\n\t\t\t// \"butt\", \"round\", \"square\"\n\t\n\t\t\tif ( _contextLineCap !== value ) {\n\t\n\t\t\t\t_context.lineCap = value;\n\t\t\t\t_contextLineCap = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineJoin( value ) {\n\t\n\t\t\t// \"round\", \"bevel\", \"miter\"\n\t\n\t\t\tif ( _contextLineJoin !== value ) {\n\t\n\t\t\t\t_context.lineJoin = value;\n\t\t\t\t_contextLineJoin = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setStrokeStyle( value ) {\n\t\n\t\t\tif ( _contextStrokeStyle !== value ) {\n\t\n\t\t\t\t_context.strokeStyle = value;\n\t\t\t\t_contextStrokeStyle = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setFillStyle( value ) {\n\t\n\t\t\tif ( _contextFillStyle !== value ) {\n\t\n\t\t\t\t_context.fillStyle = value;\n\t\t\t\t_contextFillStyle = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineDash( value ) {\n\t\n\t\t\tif ( _contextLineDash.length !== value.length ) {\n\t\n\t\t\t\t_context.setLineDash( value );\n\t\t\t\t_contextLineDash = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author julianwa / https://github.com/julianwa\n\t */\n\t\n\tTHREE.RenderableObject = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.object = null;\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableFace = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.v1 = new THREE.RenderableVertex();\n\t\tthis.v2 = new THREE.RenderableVertex();\n\t\tthis.v3 = new THREE.RenderableVertex();\n\t\n\t\tthis.normalModel = new THREE.Vector3();\n\t\n\t\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t\tthis.vertexNormalsLength = 0;\n\t\n\t\tthis.color = new THREE.Color();\n\t\tthis.material = null;\n\t\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableVertex = function () {\n\t\n\t\tthis.position = new THREE.Vector3();\n\t\tthis.positionWorld = new THREE.Vector3();\n\t\tthis.positionScreen = new THREE.Vector4();\n\t\n\t\tthis.visible = true;\n\t\n\t};\n\t\n\tTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\t\n\t\tthis.positionWorld.copy( vertex.positionWorld );\n\t\tthis.positionScreen.copy( vertex.positionScreen );\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableLine = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.v1 = new THREE.RenderableVertex();\n\t\tthis.v2 = new THREE.RenderableVertex();\n\t\n\t\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t\tthis.material = null;\n\t\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableSprite = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.object = null;\n\t\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\n\t\tthis.rotation = 0;\n\t\tthis.scale = new THREE.Vector2();\n\t\n\t\tthis.material = null;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.Projector = function () {\n\t\n\t\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\t\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\t\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\t\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\t\t_points4 = new Array( 4 ),\n\t\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\t\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\t\n\t\t_normalMatrix = new THREE.Matrix3(),\n\t\n\t\t_frustum = new THREE.Frustum(),\n\t\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\t\n\t\t//\n\t\n\t\tthis.projectVector = function ( vector, camera ) {\n\t\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\t\n\t\t};\n\t\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\t\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\t\n\t\t};\n\t\n\t\tthis.pickingRay = function ( vector, camera ) {\n\t\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tvar RenderList = function () {\n\t\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\tvar object = null;\n\t\t\tvar material = null;\n\t\n\t\t\tvar normalMatrix = new THREE.Matrix3();\n\t\n\t\t\tfunction setObject( value ) {\n\t\n\t\t\t\tobject = value;\n\t\t\t\tmaterial = object.material;\n\t\n\t\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\t\n\t\t\t\tnormals.length = 0;\n\t\t\t\tuvs.length = 0;\n\t\n\t\t\t}\n\t\n\t\t\tfunction projectVertex( vertex ) {\n\t\n\t\t\t\tvar position = vertex.position;\n\t\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\t\tvar positionScreen = vertex.positionScreen;\n\t\n\t\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\t\n\t\t\t\tvar invW = 1 / positionScreen.w;\n\t\n\t\t\t\tpositionScreen.x *= invW;\n\t\t\t\tpositionScreen.y *= invW;\n\t\t\t\tpositionScreen.z *= invW;\n\t\n\t\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushVertex( x, y, z ) {\n\t\n\t\t\t\t_vertex = getNextVertexInPool();\n\t\t\t\t_vertex.position.set( x, y, z );\n\t\n\t\t\t\tprojectVertex( _vertex );\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushNormal( x, y, z ) {\n\t\n\t\t\t\tnormals.push( x, y, z );\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushUv( x, y ) {\n\t\n\t\t\t\tuvs.push( x, y );\n\t\n\t\t\t}\n\t\n\t\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\t\n\t\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\t\n\t\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t\t_points3[ 2 ] = v3.positionScreen;\n\t\n\t\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\t\n\t\t\t}\n\t\n\t\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\t\n\t\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushLine( a, b ) {\n\t\n\t\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\t\tvar v2 = _vertexPool[ b ];\n\t\n\t\t\t\t_line = getNextLineInPool();\n\t\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\t\n\t\t\t\t_line.material = object.material;\n\t\n\t\t\t\t_renderData.elements.push( _line );\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushTriangle( a, b, c ) {\n\t\n\t\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\t\tvar v3 = _vertexPool[ c ];\n\t\n\t\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\t\n\t\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\t\n\t\t\t\t\t_face = getNextFaceInPool();\n\t\n\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\t\n\t\t\t\t\t// use first vertex normal as face normal\n\t\n\t\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\t\n\t\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_face.vertexNormalsLength = 3;\n\t\n\t\t\t\t\t_face.material = object.material;\n\t\n\t\t\t\t\t_renderData.elements.push( _face );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tsetObject: setObject,\n\t\t\t\tprojectVertex: projectVertex,\n\t\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\t\tpushVertex: pushVertex,\n\t\t\t\tpushNormal: pushNormal,\n\t\t\t\tpushUv: pushUv,\n\t\t\t\tpushLine: pushLine,\n\t\t\t\tpushTriangle: pushTriangle\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tvar renderList = new RenderList();\n\t\n\t\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\t\n\t\t\t_faceCount = 0;\n\t\t\t_lineCount = 0;\n\t\t\t_spriteCount = 0;\n\t\n\t\t\t_renderData.elements.length = 0;\n\t\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\t\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\t\n\t\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\t\n\t\t\t//\n\t\n\t\t\t_objectCount = 0;\n\t\n\t\t\t_renderData.objects.length = 0;\n\t\t\t_renderData.lights.length = 0;\n\t\n\t\t\tfunction addObject( object ) {\n\t\n\t\t\t\t_object = getNextObjectInPool();\n\t\t\t\t_object.id = object.id;\n\t\t\t\t_object.object = object;\n\t\n\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t_vector3.applyProjection( _viewProjectionMatrix );\n\t\t\t\t_object.z = _vector3.z;\n\t\t\t\t_object.renderOrder = object.renderOrder;\n\t\n\t\t\t\t_renderData.objects.push( _object );\n\t\n\t\t\t}\n\t\n\t\t\tscene.traverseVisible( function ( object ) {\n\t\n\t\t\t\tif ( object instanceof THREE.Light ) {\n\t\n\t\t\t\t\t_renderData.lights.push( object );\n\t\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {\n\t\n\t\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\t\n\t\t\t\t\taddObject( object );\n\t\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\t\n\t\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\t\n\t\t\t\t\taddObject( object );\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tif ( sortObjects === true ) {\n\t\n\t\t\t\t_renderData.objects.sort( painterSort );\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\t\n\t\t\t\tvar object = _renderData.objects[ o ].object;\n\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\trenderList.setObject( object );\n\t\n\t\t\t\t_modelMatrix = object.matrixWorld;\n\t\n\t\t\t\t_vertexCount = 0;\n\t\n\t\t\t\tif ( object instanceof THREE.Mesh ) {\n\t\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\t\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\t\tvar groups = geometry.groups;\n\t\n\t\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\t\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar normals = attributes.normal.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\t\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\t\n\t\t\t\t\t\t\tif ( groups.length > 0 ) {\n\t\n\t\t\t\t\t\t\t\tfor ( var o = 0; o < groups.length; o ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tvar group = groups[ o ];\n\t\n\t\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\t\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\n\t\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\t\n\t\t\t\t\t\tvar material = object.material;\n\t\n\t\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\t\n\t\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\t\n\t\t\t\t\t\t\tvar vertex = vertices[ v ];\n\t\n\t\t\t\t\t\t\t_vector3.copy( vertex );\n\t\n\t\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\t\n\t\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\t\n\t\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\t\n\t\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\t\n\t\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\t\n\t\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\t\tvar face = faces[ f ];\n\t\n\t\t\t\t\t\t\tmaterial = isFaceMaterial === true\n\t\t\t\t\t\t\t\t ? objectMaterials.materials[ face.materialIndex ]\n\t\t\t\t\t\t\t\t : object.material;\n\t\n\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\t\n\t\t\t\t\t\t\tvar side = material.side;\n\t\n\t\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\t\n\t\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\t\n\t\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\t\n\t\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\t\n\t\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face = getNextFaceInPool();\n\t\n\t\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t\t_face.v3.copy( v3 );\n\t\n\t\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\t\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\t\n\t\t\t\t\t\t\t\t_face.normalModel.negate();\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\t\n\t\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\t\n\t\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\t\n\t\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\t\n\t\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\t\n\t\t\t\t\t\t\t\t\tnormalModel.negate();\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\t\n\t\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\t\n\t\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\t\n\t\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t\t_face.material = material;\n\t\n\t\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\t\n\t\t\t\t\t\t\t_renderData.elements.push( _face );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( object instanceof THREE.Line ) {\n\t\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\t\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\n\t\t\t\t\t\tif ( attributes.position !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( geometry.index !== null ) {\n\t\n\t\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\t\n\t\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\t\n\t\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\t\n\t\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\t\n\t\t\t\t\t\tvar vertices = object.geometry.vertices;\n\t\n\t\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\t\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\t\n\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\t\n\t\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\t\n\t\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\t\n\t\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\t\n\t\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\t\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\t\n\t\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\t\n\t\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\t\n\t\t\t\t\t\t\t\t_line = getNextLineInPool();\n\t\n\t\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\t\n\t\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\t\n\t\t\t\t\t\t\t\t_line.material = object.material;\n\t\n\t\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\t\n\t\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\t\n\t\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\t\n\t\t\t\t\tvar invW = 1 / _vector4.w;\n\t\n\t\t\t\t\t_vector4.z *= invW;\n\t\n\t\t\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\t\n\t\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t\t_sprite.object = object;\n\t\n\t\t\t\t\t\t_sprite.rotation = object.rotation;\n\t\n\t\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\t\n\t\t\t\t\t\t_sprite.material = object.material;\n\t\n\t\t\t\t\t\t_renderData.elements.push( _sprite );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tif ( sortElements === true ) {\n\t\n\t\t\t\t_renderData.elements.sort( painterSort );\n\t\n\t\t\t}\n\t\n\t\t\treturn _renderData;\n\t\n\t\t};\n\t\n\t\t// Pools\n\t\n\t\tfunction getNextObjectInPool() {\n\t\n\t\t\tif ( _objectCount === _objectPoolLength ) {\n\t\n\t\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t\t_objectPool.push( object );\n\t\t\t\t_objectPoolLength ++;\n\t\t\t\t_objectCount ++;\n\t\t\t\treturn object;\n\t\n\t\t\t}\n\t\n\t\t\treturn _objectPool[ _objectCount ++ ];\n\t\n\t\t}\n\t\n\t\tfunction getNextVertexInPool() {\n\t\n\t\t\tif ( _vertexCount === _vertexPoolLength ) {\n\t\n\t\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t\t_vertexPool.push( vertex );\n\t\t\t\t_vertexPoolLength ++;\n\t\t\t\t_vertexCount ++;\n\t\t\t\treturn vertex;\n\t\n\t\t\t}\n\t\n\t\t\treturn _vertexPool[ _vertexCount ++ ];\n\t\n\t\t}\n\t\n\t\tfunction getNextFaceInPool() {\n\t\n\t\t\tif ( _faceCount === _facePoolLength ) {\n\t\n\t\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t\t_facePool.push( face );\n\t\t\t\t_facePoolLength ++;\n\t\t\t\t_faceCount ++;\n\t\t\t\treturn face;\n\t\n\t\t\t}\n\t\n\t\t\treturn _facePool[ _faceCount ++ ];\n\t\n\t\n\t\t}\n\t\n\t\tfunction getNextLineInPool() {\n\t\n\t\t\tif ( _lineCount === _linePoolLength ) {\n\t\n\t\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t\t_linePool.push( line );\n\t\t\t\t_linePoolLength ++;\n\t\t\t\t_lineCount ++;\n\t\t\t\treturn line;\n\t\n\t\t\t}\n\t\n\t\t\treturn _linePool[ _lineCount ++ ];\n\t\n\t\t}\n\t\n\t\tfunction getNextSpriteInPool() {\n\t\n\t\t\tif ( _spriteCount === _spritePoolLength ) {\n\t\n\t\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t\t_spritePool.push( sprite );\n\t\t\t\t_spritePoolLength ++;\n\t\t\t\t_spriteCount ++;\n\t\t\t\treturn sprite;\n\t\n\t\t\t}\n\t\n\t\t\treturn _spritePool[ _spriteCount ++ ];\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction painterSort( a, b ) {\n\t\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\t\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\t\n\t\t\t} else if ( a.z !== b.z ) {\n\t\n\t\t\t\treturn b.z - a.z;\n\t\n\t\t\t} else if ( a.id !== b.id ) {\n\t\n\t\t\t\treturn a.id - b.id;\n\t\n\t\t\t} else {\n\t\n\t\t\t\treturn 0;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction clipLine( s1, s2 ) {\n\t\n\t\t\tvar alpha1 = 0, alpha2 = 1,\n\t\n\t\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t\t// Z = -1 and Z = +1, respectively.\n\t\t\tbc1near =  s1.z + s1.w,\n\t\t\tbc2near =  s2.z + s2.w,\n\t\t\tbc1far =  - s1.z + s1.w,\n\t\t\tbc2far =  - s2.z + s2.w;\n\t\n\t\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\t\n\t\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\t\treturn true;\n\t\n\t\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\t\n\t\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\t\treturn false;\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// The line segment spans at least one clip plane.\n\t\n\t\t\t\tif ( bc1near < 0 ) {\n\t\n\t\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\t\n\t\t\t\t} else if ( bc2near < 0 ) {\n\t\n\t\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( bc1far < 0 ) {\n\t\n\t\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\t\n\t\t\t\t} else if ( bc2far < 0 ) {\n\t\n\t\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( alpha2 < alpha1 ) {\n\t\n\t\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar isObject = __webpack_require__(7);\n\t\n\tfunction isObjectObject(o) {\n\t  return isObject(o) === true\n\t    && Object.prototype.toString.call(o) === '[object Object]';\n\t}\n\t\n\tmodule.exports = function isPlainObject(o) {\n\t  var ctor,prot;\n\t  \n\t  if (isObjectObject(o) === false) return false;\n\t  \n\t  // If has modified constructor\n\t  ctor = o.constructor;\n\t  if (typeof ctor !== 'function') return false;\n\t  \n\t  // If has modified prototype\n\t  prot = ctor.prototype;\n\t  if (isObjectObject(prot) === false) return false;\n\t  \n\t  // If constructor does not have an Object-specific method\n\t  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n\t    return false;\n\t  }\n\t  \n\t  // Most likely a plain Object\n\t  return true;\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = function isObject(val) {\n\t  return val != null && typeof val === 'object'\n\t    && !Array.isArray(val);\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * EventEmitter2\n\t * https://github.com/hij1nx/EventEmitter2\n\t *\n\t * Copyright (c) 2013 hij1nx\n\t * Licensed under the MIT license.\n\t */\n\t;!function(undefined) {\n\t\n\t  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t    return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t  };\n\t  var defaultMaxListeners = 10;\n\t\n\t  function init() {\n\t    this._events = {};\n\t    if (this._conf) {\n\t      configure.call(this, this._conf);\n\t    }\n\t  }\n\t\n\t  function configure(conf) {\n\t    if (conf) {\n\t\n\t      this._conf = conf;\n\t\n\t      conf.delimiter && (this.delimiter = conf.delimiter);\n\t      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t      conf.wildcard && (this.wildcard = conf.wildcard);\n\t      conf.newListener && (this.newListener = conf.newListener);\n\t\n\t      if (this.wildcard) {\n\t        this.listenerTree = {};\n\t      }\n\t    }\n\t  }\n\t\n\t  function EventEmitter(conf) {\n\t    this._events = {};\n\t    this.newListener = false;\n\t    configure.call(this, conf);\n\t  }\n\t\n\t  //\n\t  // Attention, function return type now is array, always !\n\t  // It has zero elements if no any matches found and one or more\n\t  // elements (leafs) if there are matches\n\t  //\n\t  function searchListenerTree(handlers, type, tree, i) {\n\t    if (!tree) {\n\t      return [];\n\t    }\n\t    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n\t        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n\t    if (i === typeLength && tree._listeners) {\n\t      //\n\t      // If at the end of the event(s) list and the tree has listeners\n\t      // invoke those listeners.\n\t      //\n\t      if (typeof tree._listeners === 'function') {\n\t        handlers && handlers.push(tree._listeners);\n\t        return [tree];\n\t      } else {\n\t        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t          handlers && handlers.push(tree._listeners[leaf]);\n\t        }\n\t        return [tree];\n\t      }\n\t    }\n\t\n\t    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n\t      //\n\t      // If the event emitted is '*' at this part\n\t      // or there is a concrete match at this patch\n\t      //\n\t      if (currentType === '*') {\n\t        for (branch in tree) {\n\t          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n\t            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n\t          }\n\t        }\n\t        return listeners;\n\t      } else if(currentType === '**') {\n\t        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n\t        if(endReached && tree._listeners) {\n\t          // The next element has a _listeners, add it to the handlers.\n\t          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t        }\n\t\n\t        for (branch in tree) {\n\t          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n\t            if(branch === '*' || branch === '**') {\n\t              if(tree[branch]._listeners && !endReached) {\n\t                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t              }\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t            } else if(branch === nextType) {\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n\t            } else {\n\t              // No match on this one, shift into the tree but not in the type array.\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t            }\n\t          }\n\t        }\n\t        return listeners;\n\t      }\n\t\n\t      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n\t    }\n\t\n\t    xTree = tree['*'];\n\t    if (xTree) {\n\t      //\n\t      // If the listener tree will allow any match for this part,\n\t      // then recursively explore all branches of the tree\n\t      //\n\t      searchListenerTree(handlers, type, xTree, i+1);\n\t    }\n\t\n\t    xxTree = tree['**'];\n\t    if(xxTree) {\n\t      if(i < typeLength) {\n\t        if(xxTree._listeners) {\n\t          // If we have a listener on a '**', it will catch all, so add its handler.\n\t          searchListenerTree(handlers, type, xxTree, typeLength);\n\t        }\n\t\n\t        // Build arrays of matching next branches and others.\n\t        for(branch in xxTree) {\n\t          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n\t            if(branch === nextType) {\n\t              // We know the next element will match, so jump twice.\n\t              searchListenerTree(handlers, type, xxTree[branch], i+2);\n\t            } else if(branch === currentType) {\n\t              // Current node matches, move into the tree.\n\t              searchListenerTree(handlers, type, xxTree[branch], i+1);\n\t            } else {\n\t              isolatedBranch = {};\n\t              isolatedBranch[branch] = xxTree[branch];\n\t              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n\t            }\n\t          }\n\t        }\n\t      } else if(xxTree._listeners) {\n\t        // We have reached the end and still on a '**'\n\t        searchListenerTree(handlers, type, xxTree, typeLength);\n\t      } else if(xxTree['*'] && xxTree['*']._listeners) {\n\t        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n\t      }\n\t    }\n\t\n\t    return listeners;\n\t  }\n\t\n\t  function growListenerTree(type, listener) {\n\t\n\t    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t\n\t    //\n\t    // Looks for two consecutive '**', if so, don't add the event at all.\n\t    //\n\t    for(var i = 0, len = type.length; i+1 < len; i++) {\n\t      if(type[i] === '**' && type[i+1] === '**') {\n\t        return;\n\t      }\n\t    }\n\t\n\t    var tree = this.listenerTree;\n\t    var name = type.shift();\n\t\n\t    while (name) {\n\t\n\t      if (!tree[name]) {\n\t        tree[name] = {};\n\t      }\n\t\n\t      tree = tree[name];\n\t\n\t      if (type.length === 0) {\n\t\n\t        if (!tree._listeners) {\n\t          tree._listeners = listener;\n\t        }\n\t        else if(typeof tree._listeners === 'function') {\n\t          tree._listeners = [tree._listeners, listener];\n\t        }\n\t        else if (isArray(tree._listeners)) {\n\t\n\t          tree._listeners.push(listener);\n\t\n\t          if (!tree._listeners.warned) {\n\t\n\t            var m = defaultMaxListeners;\n\t\n\t            if (typeof this._events.maxListeners !== 'undefined') {\n\t              m = this._events.maxListeners;\n\t            }\n\t\n\t            if (m > 0 && tree._listeners.length > m) {\n\t\n\t              tree._listeners.warned = true;\n\t              console.error('(node) warning: possible EventEmitter memory ' +\n\t                            'leak detected. %d listeners added. ' +\n\t                            'Use emitter.setMaxListeners() to increase limit.',\n\t                            tree._listeners.length);\n\t              console.trace();\n\t            }\n\t          }\n\t        }\n\t        return true;\n\t      }\n\t      name = type.shift();\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // By default EventEmitters will print a warning if more than\n\t  // 10 listeners are added to it. This is a useful default which\n\t  // helps finding memory leaks.\n\t  //\n\t  // Obviously not all Emitters should be limited to 10. This function allows\n\t  // that to be increased. Set to zero for unlimited.\n\t\n\t  EventEmitter.prototype.delimiter = '.';\n\t\n\t  EventEmitter.prototype.setMaxListeners = function(n) {\n\t    this._events || init.call(this);\n\t    this._events.maxListeners = n;\n\t    if (!this._conf) this._conf = {};\n\t    this._conf.maxListeners = n;\n\t  };\n\t\n\t  EventEmitter.prototype.event = '';\n\t\n\t  EventEmitter.prototype.once = function(event, fn) {\n\t    this.many(event, 1, fn);\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.many = function(event, ttl, fn) {\n\t    var self = this;\n\t\n\t    if (typeof fn !== 'function') {\n\t      throw new Error('many only accepts instances of Function');\n\t    }\n\t\n\t    function listener() {\n\t      if (--ttl === 0) {\n\t        self.off(event, listener);\n\t      }\n\t      fn.apply(this, arguments);\n\t    }\n\t\n\t    listener._origin = fn;\n\t\n\t    this.on(event, listener);\n\t\n\t    return self;\n\t  };\n\t\n\t  EventEmitter.prototype.emit = function() {\n\t\n\t    this._events || init.call(this);\n\t\n\t    var type = arguments[0];\n\t\n\t    if (type === 'newListener' && !this.newListener) {\n\t      if (!this._events.newListener) { return false; }\n\t    }\n\t\n\t    // Loop through the *_all* functions and invoke them.\n\t    if (this._all) {\n\t      var l = arguments.length;\n\t      var args = new Array(l - 1);\n\t      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t      for (i = 0, l = this._all.length; i < l; i++) {\n\t        this.event = type;\n\t        this._all[i].apply(this, args);\n\t      }\n\t    }\n\t\n\t    // If there is no 'error' event listener then throw.\n\t    if (type === 'error') {\n\t\n\t      if (!this._all &&\n\t        !this._events.error &&\n\t        !(this.wildcard && this.listenerTree.error)) {\n\t\n\t        if (arguments[1] instanceof Error) {\n\t          throw arguments[1]; // Unhandled 'error' event\n\t        } else {\n\t          throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t        }\n\t        return false;\n\t      }\n\t    }\n\t\n\t    var handler;\n\t\n\t    if(this.wildcard) {\n\t      handler = [];\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t    }\n\t    else {\n\t      handler = this._events[type];\n\t    }\n\t\n\t    if (typeof handler === 'function') {\n\t      this.event = type;\n\t      if (arguments.length === 1) {\n\t        handler.call(this);\n\t      }\n\t      else if (arguments.length > 1)\n\t        switch (arguments.length) {\n\t          case 2:\n\t            handler.call(this, arguments[1]);\n\t            break;\n\t          case 3:\n\t            handler.call(this, arguments[1], arguments[2]);\n\t            break;\n\t          // slower\n\t          default:\n\t            var l = arguments.length;\n\t            var args = new Array(l - 1);\n\t            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t            handler.apply(this, args);\n\t        }\n\t      return true;\n\t    }\n\t    else if (handler) {\n\t      var l = arguments.length;\n\t      var args = new Array(l - 1);\n\t      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t\n\t      var listeners = handler.slice();\n\t      for (var i = 0, l = listeners.length; i < l; i++) {\n\t        this.event = type;\n\t        listeners[i].apply(this, args);\n\t      }\n\t      return (listeners.length > 0) || !!this._all;\n\t    }\n\t    else {\n\t      return !!this._all;\n\t    }\n\t\n\t  };\n\t\n\t  EventEmitter.prototype.on = function(type, listener) {\n\t\n\t    if (typeof type === 'function') {\n\t      this.onAny(type);\n\t      return this;\n\t    }\n\t\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('on only accepts instances of Function');\n\t    }\n\t    this._events || init.call(this);\n\t\n\t    // To avoid recursion in the case that type == \"newListeners\"! Before\n\t    // adding it to the listeners, first emit \"newListeners\".\n\t    this.emit('newListener', type, listener);\n\t\n\t    if(this.wildcard) {\n\t      growListenerTree.call(this, type, listener);\n\t      return this;\n\t    }\n\t\n\t    if (!this._events[type]) {\n\t      // Optimize the case of one listener. Don't need the extra array object.\n\t      this._events[type] = listener;\n\t    }\n\t    else if(typeof this._events[type] === 'function') {\n\t      // Adding the second element, need to change to array.\n\t      this._events[type] = [this._events[type], listener];\n\t    }\n\t    else if (isArray(this._events[type])) {\n\t      // If we've already got an array, just append.\n\t      this._events[type].push(listener);\n\t\n\t      // Check for listener leak\n\t      if (!this._events[type].warned) {\n\t\n\t        var m = defaultMaxListeners;\n\t\n\t        if (typeof this._events.maxListeners !== 'undefined') {\n\t          m = this._events.maxListeners;\n\t        }\n\t\n\t        if (m > 0 && this._events[type].length > m) {\n\t\n\t          this._events[type].warned = true;\n\t          console.error('(node) warning: possible EventEmitter memory ' +\n\t                        'leak detected. %d listeners added. ' +\n\t                        'Use emitter.setMaxListeners() to increase limit.',\n\t                        this._events[type].length);\n\t          console.trace();\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.onAny = function(fn) {\n\t\n\t    if (typeof fn !== 'function') {\n\t      throw new Error('onAny only accepts instances of Function');\n\t    }\n\t\n\t    if(!this._all) {\n\t      this._all = [];\n\t    }\n\t\n\t    // Add the function to the event listener collection.\n\t    this._all.push(fn);\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t  EventEmitter.prototype.off = function(type, listener) {\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('removeListener only takes instances of Function');\n\t    }\n\t\n\t    var handlers,leafs=[];\n\t\n\t    if(this.wildcard) {\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t    }\n\t    else {\n\t      // does not use listeners(), so no side effect of creating _events[type]\n\t      if (!this._events[type]) return this;\n\t      handlers = this._events[type];\n\t      leafs.push({_listeners:handlers});\n\t    }\n\t\n\t    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n\t      var leaf = leafs[iLeaf];\n\t      handlers = leaf._listeners;\n\t      if (isArray(handlers)) {\n\t\n\t        var position = -1;\n\t\n\t        for (var i = 0, length = handlers.length; i < length; i++) {\n\t          if (handlers[i] === listener ||\n\t            (handlers[i].listener && handlers[i].listener === listener) ||\n\t            (handlers[i]._origin && handlers[i]._origin === listener)) {\n\t            position = i;\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (position < 0) {\n\t          continue;\n\t        }\n\t\n\t        if(this.wildcard) {\n\t          leaf._listeners.splice(position, 1);\n\t        }\n\t        else {\n\t          this._events[type].splice(position, 1);\n\t        }\n\t\n\t        if (handlers.length === 0) {\n\t          if(this.wildcard) {\n\t            delete leaf._listeners;\n\t          }\n\t          else {\n\t            delete this._events[type];\n\t          }\n\t        }\n\t        return this;\n\t      }\n\t      else if (handlers === listener ||\n\t        (handlers.listener && handlers.listener === listener) ||\n\t        (handlers._origin && handlers._origin === listener)) {\n\t        if(this.wildcard) {\n\t          delete leaf._listeners;\n\t        }\n\t        else {\n\t          delete this._events[type];\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.offAny = function(fn) {\n\t    var i = 0, l = 0, fns;\n\t    if (fn && this._all && this._all.length > 0) {\n\t      fns = this._all;\n\t      for(i = 0, l = fns.length; i < l; i++) {\n\t        if(fn === fns[i]) {\n\t          fns.splice(i, 1);\n\t          return this;\n\t        }\n\t      }\n\t    } else {\n\t      this._all = [];\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t\n\t  EventEmitter.prototype.removeAllListeners = function(type) {\n\t    if (arguments.length === 0) {\n\t      !this._events || init.call(this);\n\t      return this;\n\t    }\n\t\n\t    if(this.wildcard) {\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t\n\t      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n\t        var leaf = leafs[iLeaf];\n\t        leaf._listeners = null;\n\t      }\n\t    }\n\t    else {\n\t      if (!this._events[type]) return this;\n\t      this._events[type] = null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.listeners = function(type) {\n\t    if(this.wildcard) {\n\t      var handlers = [];\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t      return handlers;\n\t    }\n\t\n\t    this._events || init.call(this);\n\t\n\t    if (!this._events[type]) this._events[type] = [];\n\t    if (!isArray(this._events[type])) {\n\t      this._events[type] = [this._events[type]];\n\t    }\n\t    return this._events[type];\n\t  };\n\t\n\t  EventEmitter.prototype.listenersAny = function() {\n\t\n\t    if(this._all) {\n\t      return this._all;\n\t    }\n\t    else {\n\t      return [];\n\t    }\n\t\n\t  };\n\t\n\t  if (true) {\n\t     // AMD. Register as an anonymous module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return EventEmitter;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // CommonJS\n\t    exports.EventEmitter2 = EventEmitter;\n\t  }\n\t  else {\n\t    // Browser global.\n\t    window.EventEmitter2 = EventEmitter;\n\t  }\n\t}();\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {Promise: window['Promise']}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n\t * directory of this distribution and at\n\t * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n\t */\n\t;\n\t(function() {\n\t\n\t    /**\n\t     * Class for dimension change detection.\n\t     *\n\t     * @param {Element|Element[]|Elements|jQuery} element\n\t     * @param {Function} callback\n\t     *\n\t     * @constructor\n\t     */\n\t    var ResizeSensor = function(element, callback) {\n\t        /**\n\t         *\n\t         * @constructor\n\t         */\n\t        function EventQueue() {\n\t            this.q = [];\n\t            this.add = function(ev) {\n\t                this.q.push(ev);\n\t            };\n\t\n\t            var i, j;\n\t            this.call = function() {\n\t                for (i = 0, j = this.q.length; i < j; i++) {\n\t                    this.q[i].call();\n\t                }\n\t            };\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} element\n\t         * @param {String}      prop\n\t         * @returns {String|Number}\n\t         */\n\t        function getComputedStyle(element, prop) {\n\t            if (element.currentStyle) {\n\t                return element.currentStyle[prop];\n\t            } else if (window.getComputedStyle) {\n\t                return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t            } else {\n\t                return element.style[prop];\n\t            }\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param {HTMLElement} element\n\t         * @param {Function}    resized\n\t         */\n\t        function attachResizeEvent(element, resized) {\n\t            if (!element.resizedAttached) {\n\t                element.resizedAttached = new EventQueue();\n\t                element.resizedAttached.add(resized);\n\t            } else if (element.resizedAttached) {\n\t                element.resizedAttached.add(resized);\n\t                return;\n\t            }\n\t\n\t            element.resizeSensor = document.createElement('div');\n\t            element.resizeSensor.className = 'resize-sensor';\n\t            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n\t            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\t\n\t            element.resizeSensor.style.cssText = style;\n\t            element.resizeSensor.innerHTML =\n\t                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n\t                    '<div style=\"' + styleChild + '\"></div>' +\n\t                '</div>' +\n\t                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n\t                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n\t                '</div>';\n\t            element.appendChild(element.resizeSensor);\n\t\n\t            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n\t                element.style.position = 'relative';\n\t            }\n\t\n\t            var expand = element.resizeSensor.childNodes[0];\n\t            var expandChild = expand.childNodes[0];\n\t            var shrink = element.resizeSensor.childNodes[1];\n\t            var shrinkChild = shrink.childNodes[0];\n\t\n\t            var lastWidth, lastHeight;\n\t\n\t            var reset = function() {\n\t                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n\t                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n\t                expand.scrollLeft = expand.scrollWidth;\n\t                expand.scrollTop = expand.scrollHeight;\n\t                shrink.scrollLeft = shrink.scrollWidth;\n\t                shrink.scrollTop = shrink.scrollHeight;\n\t                lastWidth = element.offsetWidth;\n\t                lastHeight = element.offsetHeight;\n\t            };\n\t\n\t            reset();\n\t\n\t            var changed = function() {\n\t                if (element.resizedAttached) {\n\t                    element.resizedAttached.call();\n\t                }\n\t            };\n\t\n\t            var addEvent = function(el, name, cb) {\n\t                if (el.attachEvent) {\n\t                    el.attachEvent('on' + name, cb);\n\t                } else {\n\t                    el.addEventListener(name, cb);\n\t                }\n\t            };\n\t\n\t            var onScroll = function() {\n\t              if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                  changed();\n\t              }\n\t              reset();\n\t            };\n\t\n\t            addEvent(expand, 'scroll', onScroll);\n\t            addEvent(shrink, 'scroll', onScroll);\n\t        }\n\t\n\t        var elementType = Object.prototype.toString.call(element);\n\t        var isCollectionTyped = ('[object Array]' === elementType\n\t            || ('[object NodeList]' === elementType)\n\t            || ('[object HTMLCollection]' === elementType)\n\t            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n\t            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n\t        );\n\t\n\t        if (isCollectionTyped) {\n\t            var i = 0, j = element.length;\n\t            for (; i < j; i++) {\n\t                attachResizeEvent(element[i], callback);\n\t            }\n\t        } else {\n\t            attachResizeEvent(element, callback);\n\t        }\n\t\n\t        this.detach = function() {\n\t            if (isCollectionTyped) {\n\t                var i = 0, j = element.length;\n\t                for (; i < j; i++) {\n\t                    ResizeSensor.detach(element[i]);\n\t                }\n\t            } else {\n\t                ResizeSensor.detach(element);\n\t            }\n\t        };\n\t    };\n\t\n\t    ResizeSensor.detach = function(element) {\n\t        if (element.resizeSensor) {\n\t            element.removeChild(element.resizeSensor);\n\t            delete element.resizeSensor;\n\t            delete element.resizedAttached;\n\t        }\n\t    };\n\t\n\t    // make available to common module loader\n\t    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t        module.exports = ResizeSensor;\n\t    }\n\t    else {\n\t        window.ResizeSensor = ResizeSensor;\n\t    }\n\t\n\t})();\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/*!\n\t * @description Recursive object extending\n\t * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n\t * @license MIT\n\t *\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t * this software and associated documentation files (the \"Software\"), to deal in\n\t * the Software without restriction, including without limitation the rights to\n\t * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n\t * the Software, and to permit persons to whom the Software is furnished to do so,\n\t * subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all\n\t * copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\t * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\t * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n\t * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t'use strict';\n\t\n\tfunction isSpecificValue(val) {\n\t\treturn (\n\t\t\tval instanceof Buffer\n\t\t\t|| val instanceof Date\n\t\t\t|| val instanceof RegExp\n\t\t) ? true : false;\n\t}\n\t\n\tfunction cloneSpecificValue(val) {\n\t\tif (val instanceof Buffer) {\n\t\t\tvar x = new Buffer(val.length);\n\t\t\tval.copy(x);\n\t\t\treturn x;\n\t\t} else if (val instanceof Date) {\n\t\t\treturn new Date(val.getTime());\n\t\t} else if (val instanceof RegExp) {\n\t\t\treturn new RegExp(val);\n\t\t} else {\n\t\t\tthrow new Error('Unexpected situation');\n\t\t}\n\t}\n\t\n\t/**\n\t * Recursive cloning array.\n\t */\n\tfunction deepCloneArray(arr) {\n\t\tvar clone = [];\n\t\tarr.forEach(function (item, index) {\n\t\t\tif (typeof item === 'object' && item !== null) {\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t\t} else {\n\t\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tclone[index] = item;\n\t\t\t}\n\t\t});\n\t\treturn clone;\n\t}\n\t\n\t/**\n\t * Extening object that entered in first argument.\n\t *\n\t * Returns extended object or false if have no target object or incorrect type.\n\t *\n\t * If you wish to clone source object (without modify it), just use empty new\n\t * object as first argument, like this:\n\t *   deepExtend({}, yourObj_1, [yourObj_N]);\n\t */\n\tvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\t\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (arguments.length < 2) {\n\t\t\treturn arguments[0];\n\t\t}\n\t\n\t\tvar target = arguments[0];\n\t\n\t\t// convert arguments to array and cut off target object\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\n\t\tvar val, src, clone;\n\t\n\t\targs.forEach(function (obj) {\n\t\t\t// skip argument if it is array or isn't object\n\t\t\tif (typeof obj !== 'object' || Array.isArray(obj)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tObject.keys(obj).forEach(function (key) {\n\t\t\t\tsrc = target[key]; // source value\n\t\t\t\tval = obj[key]; // new value\n\t\n\t\t\t\t// recursion prevention\n\t\t\t\tif (val === target) {\n\t\t\t\t\treturn;\n\t\n\t\t\t\t/**\n\t\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t\t * instead of extending.\n\t\t\t\t */\n\t\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\t\ttarget[key] = val;\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// source value and new value is objects both, extending...\n\t\t\t\t} else {\n\t\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\n\t\treturn target;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12).Buffer))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(13)\n\tvar ieee754 = __webpack_require__(14)\n\tvar isArray = __webpack_require__(15)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Plugin_1 = __webpack_require__(17);\r\n\tvar OrthographicCamera = THREE.OrthographicCamera;\r\n\tvar Chart_1 = __webpack_require__(21);\r\n\tvar Widget_1 = __webpack_require__(30);\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar AxisWidget_1 = __webpack_require__(31);\r\n\tvar GridWidget_1 = __webpack_require__(32);\r\n\tvar TrendsGradientWidget_1 = __webpack_require__(34);\r\n\tvar TrendsLineWidget_1 = __webpack_require__(36);\r\n\tvar TrendsCandleWidget_1 = __webpack_require__(37);\r\n\tvar deps_1 = __webpack_require__(19);\r\n\tvar Color_1 = __webpack_require__(33);\r\n\tvar ChartBlankView = (function () {\r\n\t    function ChartBlankView(state, $container, pluginsAndWidgets) {\r\n\t        var _this = this;\r\n\t        if (pluginsAndWidgets === void 0) { pluginsAndWidgets = []; }\r\n\t        this.widgets = [];\r\n\t        if (!THREE || !THREE.REVISION)\r\n\t            Utils_1.Utils.error('three.js not found');\r\n\t        if (!$container) {\r\n\t            Utils_1.Utils.error('$el must be set');\r\n\t        }\r\n\t        // calculate state size\r\n\t        var style = getComputedStyle($container);\r\n\t        state.width = parseInt(style.width);\r\n\t        state.height = parseInt(style.height);\r\n\t        var plugins = pluginsAndWidgets.filter(function (pluginOrWidget) { return pluginOrWidget instanceof Plugin_1.ChartPlugin; });\r\n\t        this.chart = new Chart_1.Chart(state, plugins);\r\n\t        this.pluginsAndWidgets = pluginsAndWidgets;\r\n\t        this.zoomThrottled = Utils_1.Utils.throttle(function (zoomValue, origin) { return _this.zoom(zoomValue, origin); }, 200);\r\n\t        this.$container = $container;\r\n\t        this.init($container);\r\n\t    }\r\n\t    ;\r\n\t    ChartBlankView.prototype.init = function ($container) {\r\n\t        var chart = this.chart;\r\n\t        var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\r\n\t        this.scene = new THREE.Scene();\r\n\t        this.isStopped = !autoRender.enabled;\r\n\t        var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\r\n\t            antialias: true,\r\n\t            alpha: true\r\n\t        });\r\n\t        var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\r\n\t        renderer.setSize(w, h);\r\n\t        renderer.setPixelRatio(ChartView.devicePixelRatio);\r\n\t        renderer.setClearColor(backgroundColor.value, backgroundColor.a);\r\n\t        $container.appendChild(renderer.domElement);\r\n\t        this.$el = renderer.domElement;\r\n\t        this.$el.style.display = 'block';\r\n\t        if (showStats) {\r\n\t            this.stats = new Stats();\r\n\t            $container.appendChild(this.stats.domElement);\r\n\t        }\r\n\t        this.setupCamera();\r\n\t        this.initWidgets();\r\n\t        this.bindEvents();\r\n\t        this.renderLoop();\r\n\t    };\r\n\t    /**\r\n\t     * collect and init widgets from preinstalled widgets, plugins widgets and custom widgets\r\n\t     */\r\n\t    ChartBlankView.prototype.initWidgets = function () {\r\n\t        var _this = this;\r\n\t        var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\r\n\t        var customWidgets = [];\r\n\t        this.pluginsAndWidgets.forEach(function (pluginOrWidget) {\r\n\t            if (pluginOrWidget instanceof Widget_1.ChartWidget) {\r\n\t                customWidgets.push(pluginOrWidget);\r\n\t                return;\r\n\t            }\r\n\t            if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin))\r\n\t                return;\r\n\t            var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\r\n\t            preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\r\n\t        });\r\n\t        this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function (WidgetClass) { return new WidgetClass(); }));\r\n\t        this.widgets.forEach(function (widget) {\r\n\t            widget.setupChart(_this.chart);\r\n\t            widget.onReadyHandler();\r\n\t            _this.scene.add(widget.getObject3D());\r\n\t        });\r\n\t    };\r\n\t    ChartBlankView.prototype.renderLoop = function () {\r\n\t        var _this = this;\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        this.stats && this.stats.begin();\r\n\t        this.render();\r\n\t        if (this.isStopped)\r\n\t            return;\r\n\t        var fpsLimit = this.chart.state.autoRender.fps;\r\n\t        if (fpsLimit) {\r\n\t            var delay_1 = 1000 / fpsLimit;\r\n\t            setTimeout(function () { return requestAnimationFrame(function () { return _this.renderLoop(); }); }, delay_1);\r\n\t        }\r\n\t        else {\r\n\t            requestAnimationFrame(function () { return _this.renderLoop(); });\r\n\t        }\r\n\t        this.stats && this.stats.end();\r\n\t    };\r\n\t    ChartBlankView.prototype.render = function () {\r\n\t        this.chart.render();\r\n\t        this.renderer.render(this.scene, this.camera);\r\n\t    };\r\n\t    ChartBlankView.prototype.stop = function () {\r\n\t        this.isStopped = true;\r\n\t    };\r\n\t    ChartBlankView.prototype.run = function () {\r\n\t        this.isStopped = false;\r\n\t        this.renderLoop();\r\n\t    };\r\n\t    /**\r\n\t     * call to destroy state an init garbage collection\r\n\t     */\r\n\t    ChartBlankView.prototype.destroy = function () {\r\n\t        this.isDestroyed = true;\r\n\t        this.stop();\r\n\t        this.chart.destroy();\r\n\t        this.unbindEvents();\r\n\t        // WARNING! undocumented method for free webgl context\r\n\t        try {\r\n\t            this.renderer.forceContextLoss();\r\n\t        }\r\n\t        catch (wtf) {\r\n\t        }\r\n\t        this.renderer.context = null;\r\n\t        this.renderer.domElement = null;\r\n\t        this.renderer = null;\r\n\t    };\r\n\t    ChartBlankView.prototype.getState = function () {\r\n\t        return this.chart.state;\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for ChartView.state.getTrend\r\n\t     */\r\n\t    ChartBlankView.prototype.getTrend = function (trendName) {\r\n\t        return this.chart.getTrend(trendName);\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for ChartView.state.setState\r\n\t     */\r\n\t    ChartBlankView.prototype.setState = function (state) {\r\n\t        return this.chart.setState(state);\r\n\t    };\r\n\t    ChartBlankView.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var $el = this.$el;\r\n\t        if (this.chart.state.controls.enabled) {\r\n\t            $el.addEventListener('mousewheel', function (ev) {\r\n\t                _this.onMouseWheel(ev);\r\n\t            });\r\n\t            $el.addEventListener('mousemove', function (ev) {\r\n\t                _this.onMouseMove(ev);\r\n\t            });\r\n\t            $el.addEventListener('mousedown', function (ev) { return _this.onMouseDown(ev); });\r\n\t            $el.addEventListener('mouseup', function (ev) { return _this.onMouseUp(ev); });\r\n\t            $el.addEventListener('touchmove', function (ev) {\r\n\t                _this.onTouchMove(ev);\r\n\t            });\r\n\t            $el.addEventListener('touchend', function (ev) {\r\n\t                _this.onTouchEnd(ev);\r\n\t            });\r\n\t        }\r\n\t        if (this.chart.state.autoResize) {\r\n\t            this.resizeSensor = new deps_1.ResizeSensor(this.$container, function () {\r\n\t                _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\r\n\t            });\r\n\t        }\r\n\t        this.unsubscribers = [\r\n\t            this.chart.interpolatedViewport.onInterpolation(function (options) { return _this.onScreenTransformHandler(options); }),\r\n\t            this.chart.onResize(function (options) { return _this.onChartResize(); })\r\n\t        ];\r\n\t    };\r\n\t    ChartBlankView.prototype.unbindEvents = function () {\r\n\t        // TODO: unbind events correctly\r\n\t        try {\r\n\t            this.resizeSensor && this.resizeSensor.detach();\r\n\t        }\r\n\t        catch (e) {\r\n\t        }\r\n\t        this.$el.remove();\r\n\t        this.unsubscribers.forEach(function (unsubscribe) { return unsubscribe(); });\r\n\t    };\r\n\t    ChartBlankView.prototype.setupCamera = function () {\r\n\t        var camSettings = this.chart.viewport.getCameraSettings();\r\n\t        if (!this.camera) {\r\n\t            this.camera = new OrthographicCamera(camSettings.left, camSettings.right, camSettings.top, camSettings.bottom, camSettings.near, camSettings.far);\r\n\t            this.scene.add(this.camera);\r\n\t        }\r\n\t        else {\r\n\t            this.camera.left = camSettings.left;\r\n\t            this.camera.right = camSettings.right;\r\n\t            this.camera.top = camSettings.top;\r\n\t            this.camera.bottom = camSettings.bottom;\r\n\t            this.camera.near = camSettings.near;\r\n\t            this.camera.far = camSettings.far;\r\n\t            this.camera.updateProjectionMatrix();\r\n\t        }\r\n\t        this.camera.position.set(camSettings.left, camSettings.bottom, 0);\r\n\t        this.cameraInitialPosition = this.camera.position.clone();\r\n\t        this.onScreenTransformHandler(this.chart.interpolatedViewport.params);\r\n\t    };\r\n\t    ChartBlankView.prototype.onScreenTransformHandler = function (options) {\r\n\t        if (options.scrollX != void 0) {\r\n\t            var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\r\n\t            this.camera.position.setX(scrollX_1);\r\n\t        }\r\n\t        if (options.scrollY != void 0) {\r\n\t            var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\r\n\t            this.camera.position.setY(scrollY_1);\r\n\t        }\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseDown = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: true, x: ev.clientX, y: ev.clientY } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseUp = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: false } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseMove = function (ev) {\r\n\t        if (this.chart.state.cursor.dragMode) {\r\n\t            this.setState({ cursor: { dragMode: true, x: ev.clientX, y: ev.clientY } });\r\n\t        }\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseWheel = function (ev) {\r\n\t        ev.stopPropagation();\r\n\t        ev.preventDefault();\r\n\t        var zoomOrigin = ev.layerX / this.chart.state.width;\r\n\t        var zoomValue = 1 + ev.wheelDeltaY * 0.001;\r\n\t        this.zoom(zoomValue, zoomOrigin);\r\n\t    };\r\n\t    ChartBlankView.prototype.onTouchMove = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: true, x: ev.touches[0].clientX, y: ev.touches[0].clientY } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onTouchEnd = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: false } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onChartContainerResizeHandler = function (width, height) {\r\n\t        this.setState({ width: width, height: height });\r\n\t    };\r\n\t    ChartBlankView.prototype.onChartResize = function () {\r\n\t        var _a = this.chart.state, width = _a.width, height = _a.height;\r\n\t        this.renderer.setSize(width, height);\r\n\t        this.setupCamera();\r\n\t    };\r\n\t    ChartBlankView.prototype.zoom = function (zoomValue, zoomOrigin) {\r\n\t        var MAX_ZOOM_VALUE = 1.5;\r\n\t        var MIN_ZOOM_VALUE = 0.7;\r\n\t        zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\r\n\t        zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\r\n\t        this.chart.zoom(zoomValue, zoomOrigin);\r\n\t    };\r\n\t    ChartBlankView.devicePixelRatio = window.devicePixelRatio;\r\n\t    ChartBlankView.preinstalledWidgets = [];\r\n\t    ChartBlankView.renderers = {\r\n\t        CanvasRenderer: THREE.CanvasRenderer,\r\n\t        WebGLRenderer: THREE.WebGLRenderer\r\n\t    };\r\n\t    return ChartBlankView;\r\n\t}());\r\n\texports.ChartBlankView = ChartBlankView;\r\n\tvar ChartView = (function (_super) {\r\n\t    __extends(ChartView, _super);\r\n\t    function ChartView() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    ChartView.preinstalledWidgets = [\r\n\t        TrendsLineWidget_1.TrendsLineWidget,\r\n\t        TrendsCandleWidget_1.TrendsCandlesWidget,\r\n\t        AxisWidget_1.AxisWidget,\r\n\t        GridWidget_1.GridWidget,\r\n\t        TrendsGradientWidget_1.TrendsGradientWidget\r\n\t    ];\r\n\t    return ChartView;\r\n\t}(ChartBlankView));\r\n\texports.ChartView = ChartView;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\texports.DEFAULT_CONFIG = {\r\n\t    installPluginWidgets: true\r\n\t};\r\n\t/**\r\n\t * base class for all plugins\r\n\t * NAME is mandatory\r\n\t */\r\n\tvar ChartPlugin = (function () {\r\n\t    function ChartPlugin(options, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        this.unsubscribers = [];\r\n\t        this.initialState = options;\r\n\t        this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\r\n\t        this.name = this.constructor.NAME;\r\n\t        if (!this.name)\r\n\t            Utils_1.Utils.error('Unnamed plugin detected');\r\n\t    }\r\n\t    ChartPlugin.prototype.setupChart = function (chart) {\r\n\t        var _this = this;\r\n\t        this.chart = chart;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.bindEvent(this.chart.onInitialStateApplied(function (initialState) { return _this.onInitialStateAppliedHandler(initialState); }), this.chart.onReady(function () { return _this.onReadyHandler(); }), this.chart.onDestroy(function () { return _this.onDestroyHandler(); }), this.chart.onPluginsStateChange(function (changedPluginsStates) { return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]); }));\r\n\t    };\r\n\t    ChartPlugin.prototype.getOptions = function () {\r\n\t        return this.chart.state.pluginsState[this.name];\r\n\t    };\r\n\t    ChartPlugin.prototype.onInitialStateAppliedHandler = function (initialState) {\r\n\t    };\r\n\t    ChartPlugin.prototype.onReadyHandler = function () {\r\n\t    };\r\n\t    ChartPlugin.prototype.onStateChangedHandler = function (changedState) {\r\n\t    };\r\n\t    ChartPlugin.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t    };\r\n\t    ChartPlugin.prototype.bindEvent = function () {\r\n\t        var args = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            args[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        var unsubscribers = [];\r\n\t        if (!Array.isArray(args[0])) {\r\n\t            unsubscribers.push(args[0]);\r\n\t        }\r\n\t        else {\r\n\t            unsubscribers.push.apply(unsubscribers, (args));\r\n\t        }\r\n\t        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\r\n\t        var _a;\r\n\t    };\r\n\t    ChartPlugin.prototype.unbindEvents = function () {\r\n\t        this.unsubscribers.forEach(function (unsubscriber) { return unsubscriber(); });\r\n\t        this.unsubscribers.length = 0;\r\n\t    };\r\n\t    ChartPlugin.NAME = '';\r\n\t    ChartPlugin.providedWidgets = [];\r\n\t    return ChartPlugin;\r\n\t}());\r\n\texports.ChartPlugin = ChartPlugin;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar deps_1 = __webpack_require__(19);\r\n\t/**\r\n\t * project utils static class\r\n\t */\r\n\tvar Utils = (function () {\r\n\t    function Utils() {\r\n\t    }\r\n\t    /**\r\n\t     * deepMerge based on https://www.npmjs.com/package/deepmerge\r\n\t     */\r\n\t    Utils.deepMerge = function (obj1, obj2, mergeArrays) {\r\n\t        return deps_1.deepExtend({}, obj1, obj2);\r\n\t    };\r\n\t    /**\r\n\t     * deepCopy based on JSON.stringify function\r\n\t     * @deprecated\r\n\t     */\r\n\t    Utils.deepCopy = function (obj) {\r\n\t        // TODO: use deepMerge function to copy\r\n\t        return JSON.parse(JSON.stringify(obj));\r\n\t    };\r\n\t    Utils.patch = function (objectToPatch, patch) {\r\n\t        var idKey = '_id';\r\n\t        for (var key in patch) {\r\n\t            if (!patch.hasOwnProperty(key))\r\n\t                continue;\r\n\t            if (objectToPatch[key]) {\r\n\t                if (Array.isArray(patch[key])) {\r\n\t                    var _loop_1 = function(patchItem) {\r\n\t                        var subObject = objectToPatch[key].find(function (item) {\r\n\t                            return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\r\n\t                        });\r\n\t                        if (subObject) {\r\n\t                            this_1.patch(subObject, patchItem);\r\n\t                        }\r\n\t                        else {\r\n\t                            objectToPatch[key].push(patchItem);\r\n\t                        }\r\n\t                    };\r\n\t                    var this_1 = this;\r\n\t                    for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\r\n\t                        var patchItem = _a[_i];\r\n\t                        _loop_1(patchItem);\r\n\t                    }\r\n\t                    continue;\r\n\t                }\r\n\t                else if (typeof patch[key] === 'object' && objectToPatch[key] != void 0) {\r\n\t                    if (patch[idKey] && Object.keys(patch).length == 1) {\r\n\t                        delete objectToPatch[key];\r\n\t                    }\r\n\t                    else {\r\n\t                        this.patch(objectToPatch[key], patch[key]);\r\n\t                    }\r\n\t                    continue;\r\n\t                }\r\n\t            }\r\n\t            objectToPatch[key] = patch[key];\r\n\t        }\r\n\t        if (objectToPatch['_onUpdate'])\r\n\t            objectToPatch['_onUpdate'].call(objectToPatch, patch);\r\n\t        return objectToPatch;\r\n\t    };\r\n\t    Utils.travers = function (object, fn) {\r\n\t        for (var key in object) {\r\n\t            if (!object.hasOwnProperty(key))\r\n\t                continue;\r\n\t            var allowTraverseDeeper = fn(object[key]);\r\n\t            var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == 'object';\r\n\t            if (canTraverseDeeper)\r\n\t                this.travers(object[key], fn);\r\n\t        }\r\n\t    };\r\n\t    Utils.setIdsToArrayItems = function (sourceObject) {\r\n\t        var idKey = '_id';\r\n\t        Utils.travers(sourceObject, function (item) {\r\n\t            if (!Array.isArray(item))\r\n\t                return true;\r\n\t            var arr = item;\r\n\t            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\r\n\t                var obj = arr_1[_i];\r\n\t                if (typeof obj !== 'object' || Array.isArray(obj))\r\n\t                    continue;\r\n\t                if (!obj[idKey])\r\n\t                    obj[idKey] = Utils.getUid();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     *\r\n\t     * @example\r\n\t     * // returns \"000015\"\r\n\t     * Utils.toFixed(15, 6);\r\n\t     */\r\n\t    Utils.toFixed = function (num, digitsCount) {\r\n\t        var maxDigits = 15;\r\n\t        var result = '';\r\n\t        var intVal = Math.floor(num);\r\n\t        var intStr = intVal.toString();\r\n\t        var lengthDiff = digitsCount - intStr.length;\r\n\t        if (lengthDiff > 0) {\r\n\t            result = '0'.repeat(lengthDiff) + intStr;\r\n\t        }\r\n\t        else {\r\n\t            result = intStr;\r\n\t        }\r\n\t        var afterPointDigitsCount = maxDigits - intStr.length;\r\n\t        var afterPointStr = num.toString().split('.')[1];\r\n\t        if (afterPointStr) {\r\n\t            result += '.' + afterPointStr.substr(0, afterPointDigitsCount);\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    Utils.bindEvent = function () {\r\n\t    };\r\n\t    /**\r\n\t     * generate texture from canvas context\r\n\t     * @example\r\n\t     * \t// create texture with rect\r\n\t     *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\r\n\t     */\r\n\t    Utils.createTexture = function (width, height, fn) {\r\n\t        var canvas = document.createElement('canvas');\r\n\t        canvas.width = width;\r\n\t        canvas.height = height;\r\n\t        var ctx = canvas.getContext('2d');\r\n\t        fn && fn(ctx, width, height);\r\n\t        var texture = new THREE.Texture(canvas);\r\n\t        texture.needsUpdate = true;\r\n\t        return texture;\r\n\t    };\r\n\t    /**\r\n\t     * generate texture from canvas context with NearestFilter\r\n\t     * @example\r\n\t     * \t// create texture with rect\r\n\t     *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\r\n\t     */\r\n\t    Utils.createNearestTexture = function (width, height, fn) {\r\n\t        var texture = this.createTexture(width, height, fn);\r\n\t        texture.minFilter = THREE.NearestFilter;\r\n\t        return texture;\r\n\t    };\r\n\t    Utils.createPixelPerfectTexture = function (width, height, fn) {\r\n\t        var texture = this.createTexture(width, height, fn);\r\n\t        texture.magFilter = THREE.NearestFilter;\r\n\t        texture.minFilter = THREE.NearestFilter;\r\n\t        return texture;\r\n\t    };\r\n\t    /**\r\n\t     * throw error\r\n\t     */\r\n\t    Utils.error = function (msg) {\r\n\t        console.error('Chart error: ' + msg);\r\n\t        throw 'Chart: ' + msg;\r\n\t    };\r\n\t    /**\r\n\t     * throw error\r\n\t     */\r\n\t    Utils.warn = function (msg) {\r\n\t        console.warn('Chart warning: ' + msg);\r\n\t    };\r\n\t    /**\r\n\t     * @returns new unique id\r\n\t     */\r\n\t    Utils.getUid = function () {\r\n\t        return this.currentId++;\r\n\t    };\r\n\t    /**\r\n\t     * @returns distance between numbers\r\n\t     */\r\n\t    Utils.getDistance = function (num1, num2) {\r\n\t        return Math.max(num1, num2) - Math.min(num1, num2);\r\n\t    };\r\n\t    // TODO: refactor binary search functions\r\n\t    Utils.binarySearchClosestInd = function (arr, num, key) {\r\n\t        var mid;\r\n\t        var lo = 0;\r\n\t        var hi = arr.length - 1;\r\n\t        while (hi - lo > 1) {\r\n\t            mid = Math.floor((lo + hi) / 2);\r\n\t            if (arr[mid][key] < num) {\r\n\t                lo = mid;\r\n\t            }\r\n\t            else {\r\n\t                hi = mid;\r\n\t            }\r\n\t        }\r\n\t        if (num - arr[lo][key] <= arr[hi][key] - num) {\r\n\t            return lo;\r\n\t        }\r\n\t        return hi;\r\n\t    };\r\n\t    Utils.binarySearchClosest = function (arr, num, key) {\r\n\t        var ind = this.binarySearchClosestInd(arr, num, key);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.binarySearchInd = function (arr, num, key) {\r\n\t        var mid;\r\n\t        var lo = 0;\r\n\t        var hi = arr.length - 1;\r\n\t        while (hi - lo > 1) {\r\n\t            mid = Math.floor((hi - lo) / 2);\r\n\t            if (arr[mid][key] < num) {\r\n\t                lo = mid;\r\n\t            }\r\n\t            else {\r\n\t                hi = mid;\r\n\t            }\r\n\t            if (arr[lo][key] == num) {\r\n\t                return lo;\r\n\t            }\r\n\t            else if (arr[hi][key] == num) {\r\n\t                return hi;\r\n\t            }\r\n\t        }\r\n\t        return (arr[lo] && arr[lo][key] == num) ? lo : -1;\r\n\t    };\r\n\t    Utils.binarySearch = function (arr, num, key) {\r\n\t        var ind = this.binarySearchInd(arr, num, key);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.rectsIntersect = function (r1, r2) {\r\n\t        var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\r\n\t        var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\r\n\t        var _a = [left1 + width1, left2 + width2, top1 + height1, top2 + height2], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\r\n\t        return !(left2 > right1 ||\r\n\t            right2 < left1 ||\r\n\t            top2 > bottom1 ||\r\n\t            bottom2 < top1);\r\n\t    };\r\n\t    Utils.throttle = function (func, ms) {\r\n\t        var isThrottled = false, savedArgs, savedThis;\r\n\t        function wrapper() {\r\n\t            if (isThrottled) {\r\n\t                savedArgs = arguments;\r\n\t                savedThis = this;\r\n\t                return;\r\n\t            }\r\n\t            func.apply(this, arguments); // (1)\r\n\t            isThrottled = true;\r\n\t            setTimeout(function () {\r\n\t                isThrottled = false; // (3)\r\n\t                if (savedArgs) {\r\n\t                    wrapper.apply(savedThis, savedArgs);\r\n\t                    savedArgs = savedThis = null;\r\n\t                }\r\n\t            }, ms);\r\n\t        }\r\n\t        return wrapper;\r\n\t    };\r\n\t    Utils.msToTimeString = function (timestamp) {\r\n\t        var h = Math.floor(timestamp / 360000);\r\n\t        var m = Math.floor(timestamp / 60000);\r\n\t        var s = Math.floor(timestamp / 1000);\r\n\t        return h + ':' + m + ':' + s;\r\n\t    };\r\n\t    Utils.getRandomItem = function (arr) {\r\n\t        var ind = Math.floor(Math.random() * arr.length);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.copyProps = function (srcObject, dstObject, props, excludeProps) {\r\n\t        if (excludeProps === void 0) { excludeProps = []; }\r\n\t        for (var key in props) {\r\n\t            if (excludeProps.indexOf(key) !== -1)\r\n\t                continue;\r\n\t            if (srcObject[key] == void 0)\r\n\t                continue;\r\n\t            if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\r\n\t                this.copyProps(srcObject[key], dstObject[key], props[key]);\r\n\t            }\r\n\t            else if (typeof srcObject[key] == 'function') {\r\n\t                dstObject[key] = srcObject[key];\r\n\t            }\r\n\t            else {\r\n\t                dstObject[key] = this.deepCopy(srcObject[key]);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Utils.currentId = 1;\r\n\t    return Utils;\r\n\t}());\r\n\texports.Utils = Utils;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(2));\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar deps_1 = __webpack_require__(19);\r\n\t/**\r\n\t * this class uses as proxy for EventEmitter2\r\n\t */\r\n\tvar EventEmitter = (function () {\r\n\t    // TODO: allow to create EE instances only in Chart class\r\n\t    function EventEmitter() {\r\n\t        this.ee = new deps_1.EE2();\r\n\t    }\r\n\t    EventEmitter.prototype.emit = function (eventName) {\r\n\t        var args = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            args[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        (_a = this.ee).emit.apply(_a, [eventName].concat(args));\r\n\t        var _a;\r\n\t    };\r\n\t    EventEmitter.prototype.on = function (eventName, callback) {\r\n\t        return this.ee.on(eventName, callback);\r\n\t    };\r\n\t    EventEmitter.prototype.off = function (eventName, callback) {\r\n\t        return this.ee.off(eventName, callback);\r\n\t    };\r\n\t    EventEmitter.prototype.subscribe = function (eventName, callback) {\r\n\t        var _this = this;\r\n\t        this.on(eventName, callback);\r\n\t        return function () { return _this.off(eventName, callback); };\r\n\t    };\r\n\t    EventEmitter.prototype.setMaxListeners = function (listenersCount) {\r\n\t        this.ee.setMaxListeners(listenersCount);\r\n\t    };\r\n\t    EventEmitter.prototype.removeAllListeners = function (eventName) {\r\n\t        this.ee.removeAllListeners(eventName);\r\n\t    };\r\n\t    return EventEmitter;\r\n\t}());\r\n\texports.EventEmitter = EventEmitter;\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Trend_1 = __webpack_require__(22);\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar TrendsManager_1 = __webpack_require__(24);\r\n\tvar Viewport_1 = __webpack_require__(25);\r\n\tvar InterpolatedViewport_1 = __webpack_require__(26);\r\n\tvar deps_1 = __webpack_require__(2);\r\n\tvar AnimationManager_1 = __webpack_require__(27);\r\n\tvar Easing_1 = __webpack_require__(28);\r\n\tvar interfaces_1 = __webpack_require__(29);\r\n\tvar CHART_STATE_EVENTS = {\r\n\t    INITIAL_STATE_APPLIED: 'initialStateApplied',\r\n\t    READY: 'ready',\r\n\t    DESTROY: 'destroy',\r\n\t    CHANGE: 'change',\r\n\t    TREND_CHANGE: 'trendChange',\r\n\t    TRENDS_CHANGE: 'trendsChange',\r\n\t    ZOOM: 'zoom',\r\n\t    RESIZE: 'resize',\r\n\t    SCROLL: 'scroll',\r\n\t    VIEWPORT_CHANGE: 'viewportChange',\r\n\t    DRAG_STATE_CHAGED: 'scrollStop',\r\n\t    PLUGINS_STATE_CHANGED: 'pluginsStateChanged'\r\n\t};\r\n\tvar LIGHT_BLUE = '#5273bd';\r\n\t/**\r\n\t *  all state changes caused only by Chart.setState method\r\n\t */\r\n\tvar Chart = (function () {\r\n\t    function Chart(initialState, plugins) {\r\n\t        if (plugins === void 0) { plugins = []; }\r\n\t        this.state = {\r\n\t            prevState: {},\r\n\t            zoom: 0,\r\n\t            xAxis: {\r\n\t                range: {\r\n\t                    type: interfaces_1.AXIS_RANGE_TYPE.ALL,\r\n\t                    from: 0,\r\n\t                    to: 0,\r\n\t                    scroll: 0,\r\n\t                    zoom: 1,\r\n\t                    padding: { start: 0, end: 5 },\r\n\t                    margin: { start: 0, end: 5 }\r\n\t                },\r\n\t                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\r\n\t                grid: { enabled: true, minSizePx: 100, color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\" },\r\n\t                color: LIGHT_BLUE\r\n\t            },\r\n\t            yAxis: {\r\n\t                range: {\r\n\t                    type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\r\n\t                    from: 0,\r\n\t                    to: 0,\r\n\t                    zoom: 1,\r\n\t                    padding: { start: 5, end: 5 },\r\n\t                    margin: { start: 5, end: 5 },\r\n\t                },\r\n\t                grid: { enabled: true, minSizePx: 50, color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\" },\r\n\t                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\r\n\t                color: LIGHT_BLUE\r\n\t            },\r\n\t            animations: {\r\n\t                enabled: true,\r\n\t                trendChangeSpeed: 0.5,\r\n\t                trendChangeEase: void 0,\r\n\t                zoomSpeed: 250,\r\n\t                scrollSpeed: 1000,\r\n\t                scrollEase: Easing_1.EASING.Quadratic.Out,\r\n\t                zoomEase: Easing_1.EASING.Quadratic.Out,\r\n\t                autoScrollSpeed: 1100,\r\n\t                autoScrollEase: Easing_1.EASING.Linear.None,\r\n\t            },\r\n\t            autoRender: { enabled: true, fps: 0 },\r\n\t            autoResize: true,\r\n\t            renderer: 'WebGLRenderer',\r\n\t            autoScroll: true,\r\n\t            controls: { enabled: true },\r\n\t            trendDefaultState: {\r\n\t                enabled: true,\r\n\t                type: Trend_1.TREND_TYPE.LINE,\r\n\t                data: [],\r\n\t                maxSegmentLength: 1000,\r\n\t                lineWidth: 2,\r\n\t                lineColor: 0xFFFFFF,\r\n\t                hasBackground: true,\r\n\t                backgroundColor: 'rgba(#FFFFFF, 0.07)',\r\n\t                hasBeacon: false,\r\n\t                settingsForTypes: {\r\n\t                    CANDLE: {\r\n\t                        minSegmentLengthInPx: 20,\r\n\t                        maxSegmentLengthInPx: 40,\r\n\t                    },\r\n\t                    LINE: {\r\n\t                        minSegmentLengthInPx: 2,\r\n\t                        maxSegmentLengthInPx: 10,\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            cursor: {\r\n\t                dragMode: false,\r\n\t                x: 0,\r\n\t                y: 0\r\n\t            },\r\n\t            font: {\r\n\t                s: '11px Arial',\r\n\t                m: '12px Arial',\r\n\t                l: '13px Arial'\r\n\t            },\r\n\t            backgroundColor: 0x000c2a,\r\n\t            showStats: false,\r\n\t            pluginsState: {},\r\n\t            eventEmitterMaxListeners: 20,\r\n\t            maxVisibleSegments: 1280,\r\n\t            inertialScroll: false\r\n\t        };\r\n\t        this.plugins = {};\r\n\t        /**\r\n\t         * true then state was initialized and ready to use\r\n\t         */\r\n\t        this.isReady = false;\r\n\t        this.isDestroyed = false;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\r\n\t        this.state = Utils_1.Utils.patch(this.state, initialState); //Utils.deepMerge(this.state, initialState);\r\n\t        this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\r\n\t        initialState.trends = this.trendsManager.calculatedOptions;\r\n\t        initialState = this.installPlugins(plugins, initialState);\r\n\t        this.animationManager = new AnimationManager_1.AnimationManager();\r\n\t        this.animationManager.setAimationsEnabled(this.state.animations.enabled);\r\n\t        this.viewport = new Viewport_1.Viewport(this);\r\n\t        this.setState(initialState);\r\n\t        this.setState({ computedData: this.getComputedData() });\r\n\t        this.savePrevState();\r\n\t        this.interpolatedViewport = new InterpolatedViewport_1.InterpolatedViewport(this);\r\n\t        this.bindEvents();\r\n\t        // message to other modules that Chart.state is ready for use\r\n\t        this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\r\n\t        // message to other modules that Chart is ready for use\r\n\t        this.isReady = true;\r\n\t        this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\r\n\t    }\r\n\t    /**\r\n\t     * destroy chart, use ChartView.destroy to completely destroy Chart\r\n\t     */\r\n\t    Chart.prototype.destroy = function () {\r\n\t        this.ee.emit(CHART_STATE_EVENTS.DESTROY);\r\n\t        this.ee.removeAllListeners();\r\n\t        this.state = {};\r\n\t        this.isDestroyed = true;\r\n\t    };\r\n\t    Chart.prototype.onDestroy = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\r\n\t    };\r\n\t    Chart.prototype.onInitialStateApplied = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\r\n\t    };\r\n\t    Chart.prototype.onReady = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\r\n\t    };\r\n\t    Chart.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onTrendChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onTrendsChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onDragStateChanged = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\r\n\t    };\r\n\t    Chart.prototype.onScroll = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\r\n\t    };\r\n\t    Chart.prototype.onZoom = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\r\n\t    };\r\n\t    Chart.prototype.onResize = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\r\n\t    };\r\n\t    Chart.prototype.onViewportChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onPluginsStateChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\r\n\t    };\r\n\t    Chart.prototype.getTrend = function (trendName) {\r\n\t        return this.trendsManager.getTrend(trendName);\r\n\t    };\r\n\t    Chart.prototype.render = function () {\r\n\t        this.animationManager.tick();\r\n\t    };\r\n\t    Chart.prototype.setState = function (newState, eventData, silent) {\r\n\t        if (silent === void 0) { silent = false; }\r\n\t        if (this.isDestroyed) {\r\n\t            Utils_1.Utils.error('You have tried to change state of destroyed Chart instance');\r\n\t        }\r\n\t        // temporary remove trends state from newState by performance reasons\r\n\t        var trendsData = {};\r\n\t        if (newState.trends)\r\n\t            for (var trendName in newState.trends) {\r\n\t                var trendOptions = newState.trends[trendName];\r\n\t                if (trendOptions.data)\r\n\t                    trendsData[trendName] = trendOptions.data;\r\n\t                delete trendOptions.data;\r\n\t            }\r\n\t        var newStateContainsData = Object.keys(trendsData).length > 0;\r\n\t        // setup ids to array items\r\n\t        newState = Utils_1.Utils.deepMerge({}, newState);\r\n\t        Utils_1.Utils.setIdsToArrayItems(newState);\r\n\t        var currentStateData = this.state;\r\n\t        var newStateObj = newState;\r\n\t        var changedProps = {};\r\n\t        for (var key in newStateObj) {\r\n\t            if (currentStateData[key] !== newStateObj[key]) {\r\n\t                changedProps[key] = newStateObj[key];\r\n\t            }\r\n\t        }\r\n\t        this.savePrevState(changedProps);\r\n\t        this.state = Utils_1.Utils.patch(this.state, newState); //Utils.deepMerge(this.state, newState, false);\r\n\t        // return trends to state\r\n\t        if (newStateContainsData)\r\n\t            for (var trendName in trendsData) {\r\n\t                this.state.trends[trendName].data = trendsData[trendName];\r\n\t            }\r\n\t        if (silent)\r\n\t            return;\r\n\t        // recalculate all dynamic state props\r\n\t        var recalculateResult = this.recalculateState(changedProps);\r\n\t        changedProps = recalculateResult.changedProps;\r\n\t        this.emitChangedStateEvents(changedProps, eventData);\r\n\t    };\r\n\t    /**\r\n\t     * recalculate all computed state props\r\n\t     */\r\n\t    Chart.prototype.recalculateState = function (changedProps) {\r\n\t        var data = this.state;\r\n\t        var patch = {};\r\n\t        var actualData = Utils_1.Utils.patch({}, data); //Utils.deepMerge({}, data);\r\n\t        // recalculate scroll position by changed cursor params\r\n\t        var cursorOptions = changedProps.cursor;\r\n\t        var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\r\n\t        if (isMouseDrag) {\r\n\t            var oldX = data.prevState.cursor.x;\r\n\t            var currentX = cursorOptions.x;\r\n\t            var currentScroll = data.xAxis.range.scroll;\r\n\t            var deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\r\n\t            patch.xAxis = { range: { scroll: currentScroll + deltaXVal } };\r\n\t            actualData = Utils_1.Utils.patch(actualData, { xAxis: patch.xAxis }); //Utils.deepMerge(actualData, {xAxis: patch.xAxis} as IChartState)\r\n\t        }\r\n\t        var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\r\n\t        var scrollXChanged = false;\r\n\t        var needToRecalculateXAxis = (isMouseDrag ||\r\n\t            chartWasResized ||\r\n\t            (changedProps.xAxis && (changedProps.xAxis.range)) ||\r\n\t            this.state.xAxis.range.zeroVal == void 0);\r\n\t        if (needToRecalculateXAxis) {\r\n\t            var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\r\n\t            if (xAxisPatch) {\r\n\t                scrollXChanged = true;\r\n\t                //patch = Utils.deepMerge(patch, {xAxis: xAxisPatch});\r\n\t                Utils_1.Utils.patch(patch, { xAxis: xAxisPatch });\r\n\t                //actualData = Utils.deepMerge(actualData, {xAxis: xAxisPatch} as IChartState);\r\n\t                Utils_1.Utils.patch(actualData, { xAxis: xAxisPatch });\r\n\t            }\r\n\t        }\r\n\t        // recalculate axis \"from\" and \"to\" for dynamics AXIS_RANGE_TYPE\r\n\t        var needToRecalculateYAxis = (chartWasResized ||\r\n\t            (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END ||\r\n\t                data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO ||\r\n\t                data.yAxis.range.isMirrorMode) &&\r\n\t                (scrollXChanged || changedProps.trends || changedProps.yAxis) ||\r\n\t            this.state.yAxis.range.zeroVal == void 0);\r\n\t        if (needToRecalculateYAxis) {\r\n\t            var yAxisPatch = this.recalculateYAxis(actualData);\r\n\t            if (yAxisPatch) {\r\n\t                // patch = Utils.deepMerge(patch, {yAxis: yAxisPatch});\r\n\t                // actualData = Utils.deepMerge(actualData, {yAxis: yAxisPatch} as IChartState);\r\n\t                Utils_1.Utils.patch(patch, { yAxis: yAxisPatch });\r\n\t                Utils_1.Utils.patch(actualData, { yAxis: yAxisPatch });\r\n\t            }\r\n\t        }\r\n\t        this.savePrevState(patch);\r\n\t        var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\r\n\t        patch.computedData = this.getComputedData(allChangedProps);\r\n\t        this.savePrevState(patch);\r\n\t        // this.state = Utils.deepMerge(this.state, patch);\r\n\t        Utils_1.Utils.patch(this.state, patch);\r\n\t        return { changedProps: allChangedProps, patch: patch };\r\n\t    };\r\n\t    Chart.prototype.getComputedData = function (changedProps) {\r\n\t        var computeAll = !changedProps;\r\n\t        var computedData = {};\r\n\t        if (computeAll || changedProps.trends && this.trendsManager) {\r\n\t            computedData.trends = {\r\n\t                maxXVal: this.trendsManager.getEndXVal(),\r\n\t                minXVal: this.trendsManager.getStartXVal()\r\n\t            };\r\n\t        }\r\n\t        return computedData;\r\n\t    };\r\n\t    Chart.prototype.savePrevState = function (changedProps) {\r\n\t        if (!changedProps)\r\n\t            changedProps = this.state;\r\n\t        var prevState = this.state.prevState;\r\n\t        // prevent to store prev trend state by performance reasons\r\n\t        Utils_1.Utils.copyProps(this.state, prevState, changedProps, ['trends']);\r\n\t    };\r\n\t    Chart.prototype.emitChangedStateEvents = function (changedProps, eventData) {\r\n\t        var prevState = this.state.prevState;\r\n\t        // emit common change event\r\n\t        this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\r\n\t        // emit event for each changed state property\r\n\t        for (var key in changedProps) {\r\n\t            this.ee.emit(key + 'Change', changedProps[key], eventData);\r\n\t        }\r\n\t        if (!this.isReady)\r\n\t            return;\r\n\t        // emit special events based on changed state\r\n\t        var dragEventNeeded = (changedProps.cursor &&\r\n\t            (changedProps.cursor.dragMode != prevState.cursor.dragMode));\r\n\t        dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\r\n\t        var scrollChangeEventsNeeded = (changedProps.xAxis &&\r\n\t            changedProps.xAxis.range &&\r\n\t            changedProps.xAxis.range.scroll != void 0);\r\n\t        scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\r\n\t        var zoomEventsNeeded = ((changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom) ||\r\n\t            (changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom));\r\n\t        zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\r\n\t        var resizeEventNeeded = (changedProps.width || changedProps.height);\r\n\t        resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\r\n\t        var viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\r\n\t        if (viewportChangeEventNeeded)\r\n\t            this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\r\n\t        var pluginStateChangedEventNeeded = !!(changedProps.pluginsState);\r\n\t        pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\r\n\t    };\r\n\t    /**\r\n\t     * init plugins and save plugins params in initialState\r\n\t     */\r\n\t    Chart.prototype.installPlugins = function (plugins, initialState) {\r\n\t        var _this = this;\r\n\t        initialState.pluginsState = {};\r\n\t        plugins.forEach(function (plugin) {\r\n\t            var PluginClass = plugin.constructor;\r\n\t            var pluginName = PluginClass.NAME;\r\n\t            initialState.pluginsState[pluginName] = plugin.initialState;\r\n\t            _this.plugins[pluginName] = plugin;\r\n\t            plugin.setupChart(_this);\r\n\t        });\r\n\t        return initialState;\r\n\t    };\r\n\t    /**\r\n\t     * returns plugin instance by plugin name\r\n\t     * @example\r\n\t     */\r\n\t    Chart.prototype.getPlugin = function (pluginName) {\r\n\t        return this.plugins[pluginName];\r\n\t    };\r\n\t    Chart.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function (changedTrends, newData) {\r\n\t            _this.handleTrendsChange(changedTrends, newData);\r\n\t        });\r\n\t        this.onDragStateChanged(function (dragState) { return _this.onDragStateChangedHandler(dragState); });\r\n\t        this.ee.on('animationsChange', function (animationOptions) {\r\n\t            if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\r\n\t                _this.animationManager.setAimationsEnabled(animationOptions.enabled);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Chart.prototype.handleTrendsChange = function (changedTrends, newData) {\r\n\t        for (var trendName in changedTrends) {\r\n\t            this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\r\n\t        }\r\n\t        // process autoscroll\r\n\t        var state = this.state;\r\n\t        if (!state.autoScroll || state.cursor.dragMode)\r\n\t            return;\r\n\t        var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\r\n\t        var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\r\n\t        if (trendsMaxXDelta > 0) {\r\n\t            var maxVisibleXVal = this.viewport.getRightVal();\r\n\t            var paddingRightVal = this.viewport.getValByViewportX(this.state.width -\r\n\t                state.xAxis.range.padding.end -\r\n\t                state.xAxis.range.margin.end);\r\n\t            var marginRightVal = this.viewport.getValByViewportX(this.state.width -\r\n\t                state.xAxis.range.margin.end);\r\n\t            var currentScroll = state.xAxis.range.scroll;\r\n\t            if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\r\n\t                return;\r\n\t            }\r\n\t            var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\r\n\t            this.setState({ xAxis: { range: { scroll: currentScroll + scrollDelta } } });\r\n\t        }\r\n\t    };\r\n\t    Chart.prototype.onDragStateChangedHandler = function (isDragMode) {\r\n\t        // process inertial scroll\r\n\t        var state = this.state;\r\n\t        if (!state.inertialScroll || isDragMode)\r\n\t            return;\r\n\t        // TODO:\r\n\t        // let currentScroll = state.xAxis.range.scroll;\r\n\t        // let currentX = state.cursor.x;\r\n\t        // let prevX = state.prevState.cursor.x;\r\n\t        // let scrollDelta = this.pxToValueByXAxis(prevX - currentX) * 10;\r\n\t        // this.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}})\r\n\t    };\r\n\t    Chart.prototype.recalculateXAxis = function (actualData, changedProps) {\r\n\t        var axisRange = actualData.xAxis.range;\r\n\t        var patch = { range: {} };\r\n\t        var isInitialize = axisRange.zeroVal == void 0;\r\n\t        var zeroVal, scaleFactor;\r\n\t        var zoom = axisRange.zoom;\r\n\t        if (axisRange.isMirrorMode) {\r\n\t            Utils_1.Utils.error('range.isMirrorMode available only for yAxis.range');\r\n\t        }\r\n\t        if (isInitialize) {\r\n\t            zeroVal = axisRange.from;\r\n\t            scaleFactor = actualData.width / (axisRange.to - axisRange.from);\r\n\t            patch = { range: { zeroVal: zeroVal, scaleFactor: scaleFactor } };\r\n\t        }\r\n\t        else {\r\n\t            zeroVal = axisRange.zeroVal;\r\n\t            scaleFactor = axisRange.scaleFactor;\r\n\t            // recalculate range.zoom and range.scroll then range.from or range.to was changed\r\n\t            if (changedProps.xAxis &&\r\n\t                (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\r\n\t                if (changedProps.xAxis.range.zoom) {\r\n\t                    Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\r\n\t                }\r\n\t                var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\r\n\t                patch.range.scroll = axisRange.from - zeroVal;\r\n\t                patch.range.zoom = currentScaleFactor / scaleFactor;\r\n\t                return patch;\r\n\t            }\r\n\t        }\r\n\t        // recalculate range.from and range.to then range.zoom or range.scroll was changed\r\n\t        do {\r\n\t            var from = zeroVal + axisRange.scroll;\r\n\t            var to = from + actualData.width / (scaleFactor * zoom);\r\n\t            var rangeLength = to - from;\r\n\t            var needToRecalculateZoom = false;\r\n\t            var rangeMoreThenMaxValue = (axisRange.maxLength && rangeLength > axisRange.maxLength);\r\n\t            var rangeLessThenMinValue = (axisRange.minLength && rangeLength < axisRange.minLength);\r\n\t            needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\r\n\t            if (needToRecalculateZoom) {\r\n\t                var fixScale = rangeLength > axisRange.maxLength ?\r\n\t                    rangeLength / axisRange.maxLength :\r\n\t                    rangeLength / axisRange.minLength;\r\n\t                var zoom = zoom * fixScale;\r\n\t                patch.range.zoom = zoom;\r\n\t            }\r\n\t        } while (needToRecalculateZoom);\r\n\t        patch.range.from = from;\r\n\t        patch.range.to = to;\r\n\t        return patch;\r\n\t    };\r\n\t    Chart.prototype.recalculateYAxis = function (actualData) {\r\n\t        var patch = { range: {} };\r\n\t        var yAxisRange = actualData.yAxis.range;\r\n\t        var isInitialize = yAxisRange.scaleFactor == void 0;\r\n\t        var trends = this.trendsManager;\r\n\t        var trendsEndXVal = trends.getEndXVal();\r\n\t        var trendsStartXVal = trends.getStartXVal();\r\n\t        var xRange = actualData.xAxis.range;\r\n\t        var xFrom = xRange.from, xTo = xRange.to;\r\n\t        var xRangeLength = xTo - xFrom;\r\n\t        var zeroVal, scaleFactor, scroll, zoom, needToZoom;\r\n\t        // check situation when state was scrolled behind trends end or before trends start\r\n\t        if (xTo > trendsEndXVal) {\r\n\t            xTo = trendsEndXVal;\r\n\t            xFrom = xTo - xRangeLength;\r\n\t        }\r\n\t        else if (xFrom < trendsStartXVal) {\r\n\t            xFrom = trendsStartXVal;\r\n\t            xTo = xFrom + xRangeLength;\r\n\t        }\r\n\t        var maxY = trends.getMaxYVal(xFrom, xTo);\r\n\t        var minY = trends.getMinYVal(xFrom, xTo);\r\n\t        var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\r\n\t        if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\r\n\t            if (trendLastY > maxY)\r\n\t                maxY = trendLastY;\r\n\t            if (trendLastY < minY)\r\n\t                minY = trendLastY;\r\n\t        }\r\n\t        if (yAxisRange.isMirrorMode) {\r\n\t            if (yAxisRange.zeroVal == void 0)\r\n\t                Utils_1.Utils.error('range.zeroVal must be set when range.isMirrorMode');\r\n\t            var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\r\n\t            var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\r\n\t            var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\r\n\t            maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\r\n\t            minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\r\n\t        }\r\n\t        var margin = yAxisRange.margin;\r\n\t        var padding = {\r\n\t            start: yAxisRange.padding.start + margin.start,\r\n\t            end: yAxisRange.padding.end + margin.end\r\n\t        };\r\n\t        if (padding.end + padding.start >= actualData.height) {\r\n\t            Utils_1.Utils.warn('Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly');\r\n\t        }\r\n\t        var rangeLength = maxY - minY;\r\n\t        var paddingTopInPercents = padding.end / actualData.height;\r\n\t        var paddingBottomInPercents = padding.start / actualData.height;\r\n\t        var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\r\n\t        var visibleRangeLength = rangeLength / rangeLengthInPercents;\r\n\t        var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\r\n\t        var toVal = maxY + visibleRangeLength * paddingTopInPercents;\r\n\t        if (isInitialize) {\r\n\t            zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\r\n\t            scaleFactor = actualData.height / (toVal - fromVal);\r\n\t            patch = { range: { zeroVal: zeroVal, scaleFactor: scaleFactor } };\r\n\t            needToZoom = true;\r\n\t        }\r\n\t        else {\r\n\t            scaleFactor = yAxisRange.scaleFactor;\r\n\t            zeroVal = yAxisRange.zeroVal;\r\n\t            var maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\r\n\t            var minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\r\n\t            needToZoom = (maxScreenY > actualData.height - margin.end ||\r\n\t                maxScreenY < actualData.height - padding.end ||\r\n\t                minScreenY < margin.start ||\r\n\t                minScreenY > padding.start);\r\n\t        }\r\n\t        if (!needToZoom)\r\n\t            return null;\r\n\t        scroll = fromVal - zeroVal;\r\n\t        zoom = (actualData.height / (toVal - fromVal)) / scaleFactor;\r\n\t        var currentAxisRange = this.state.yAxis.range;\r\n\t        if (currentAxisRange.from !== fromVal)\r\n\t            patch.range.from = fromVal;\r\n\t        if (currentAxisRange.to !== toVal)\r\n\t            patch.range.to = toVal;\r\n\t        if (currentAxisRange.scroll !== scroll)\r\n\t            patch.range.scroll = scroll;\r\n\t        if (currentAxisRange.zoom !== zoom)\r\n\t            patch.range.zoom = zoom;\r\n\t        return patch;\r\n\t    };\r\n\t    Chart.prototype.zoom = function (zoomValue, origin) {\r\n\t        var _this = this;\r\n\t        if (origin === void 0) { origin = 0.5; }\r\n\t        var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\r\n\t        var newZoom = zoom * zoomValue;\r\n\t        var currentRange = this.state.width / (scaleFactor * zoom);\r\n\t        var nextRange = this.state.width / (scaleFactor * newZoom);\r\n\t        var newScroll = scroll + (currentRange - nextRange) * origin;\r\n\t        this.setState({ xAxis: { range: { zoom: newZoom, scroll: newScroll } } });\r\n\t        return new deps_1.Promise(function (resolve) {\r\n\t            var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\r\n\t            setTimeout(resolve, animationTime * 1000);\r\n\t        });\r\n\t    };\r\n\t    Chart.prototype.zoomToRange = function (range, origin) {\r\n\t        var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\r\n\t        var currentRange = this.state.width / (scaleFactor * zoom);\r\n\t        return this.zoom(currentRange / range, origin);\r\n\t    };\r\n\t    Chart.prototype.scrollToEnd = function () {\r\n\t        var state = this.state;\r\n\t        var endXVal = this.trendsManager.getEndXVal();\r\n\t        var range = state.xAxis.range;\r\n\t        var scroll = (endXVal - this.viewport.pxToValByXAxis(state.width) +\r\n\t            this.viewport.pxToValByXAxis(range.padding.end + range.margin.end) -\r\n\t            range.zeroVal);\r\n\t        this.setState({ xAxis: { range: { scroll: scroll } } });\r\n\t        return new deps_1.Promise(function (resolve) {\r\n\t            var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\r\n\t            setTimeout(resolve, animationTime);\r\n\t        });\r\n\t    };\r\n\t    return Chart;\r\n\t}());\r\n\texports.Chart = Chart;\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar TrendSegmentsManager_1 = __webpack_require__(23);\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\tvar deps_1 = __webpack_require__(2);\r\n\tvar EVENTS = {\r\n\t    CHANGE: 'Change',\r\n\t    PREPEND_REQUEST: 'prependRequest'\r\n\t};\r\n\t(function (TREND_TYPE) {\r\n\t    TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\r\n\t    TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\r\n\t})(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\r\n\tvar TREND_TYPE = exports.TREND_TYPE;\r\n\tvar Trend = (function () {\r\n\t    function Trend(chartState, trendName, initialState) {\r\n\t        this.minXVal = Infinity;\r\n\t        this.minYVal = Infinity;\r\n\t        this.maxXVal = -Infinity;\r\n\t        this.maxYVal = -Infinity;\r\n\t        var options = initialState.trends[trendName];\r\n\t        this.name = trendName;\r\n\t        this.chart = chartState;\r\n\t        this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\r\n\t        this.calculatedOptions.name = trendName;\r\n\t        if (options.dataset)\r\n\t            this.calculatedOptions.data = Trend.prepareData(options.dataset);\r\n\t        this.calculatedOptions.dataset = [];\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    // private onInitialStateApplied() {\r\n\t    // \tthis.segmentsManager = new TrendSegmentsManager(this.chart, this);\r\n\t    // }\r\n\t    Trend.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var chartState = this.chart;\r\n\t        // chart.onInitialStateApplied(() => this.onInitialStateApplied());\r\n\t        chartState.onDragStateChanged(function () { return _this.checkForPrependRequest(); });\r\n\t        chartState.onZoom(function () { return _this.checkForPrependRequest(); });\r\n\t        chartState.onTrendChange(function (trendName, changedOptions, newData) { return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData); });\r\n\t        chartState.onDestroy(function () { return _this.ee.removeAllListeners(); });\r\n\t    };\r\n\t    Trend.prototype.getCalculatedOptions = function () {\r\n\t        return this.calculatedOptions;\r\n\t    };\r\n\t    Trend.prototype.appendData = function (rawData) {\r\n\t        var options = this.getOptions();\r\n\t        var newData = Trend.prepareData(rawData, this.getData());\r\n\t        var updatedTrendData = options.data.concat(newData);\r\n\t        this.changeData(updatedTrendData, newData);\r\n\t    };\r\n\t    Trend.prototype.prependData = function (rawData) {\r\n\t        var options = this.getOptions();\r\n\t        var newData = Trend.prepareData(rawData, this.getData(), true);\r\n\t        var updatedTrendData = newData.concat(options.data);\r\n\t        this.changeData(updatedTrendData, newData);\r\n\t    };\r\n\t    Trend.prototype.changeData = function (allData, newData) {\r\n\t        for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\r\n\t            var item = newData_1[_i];\r\n\t            if (item.xVal < this.minXVal)\r\n\t                this.minXVal = item.xVal;\r\n\t            if (item.xVal > this.maxXVal)\r\n\t                this.maxXVal = item.xVal;\r\n\t            if (item.yVal < this.minYVal)\r\n\t                this.minYVal = item.yVal;\r\n\t            if (item.yVal > this.maxYVal)\r\n\t                this.maxYVal = item.yVal;\r\n\t        }\r\n\t        var options = this.getOptions();\r\n\t        var statePatch = { trends: (_a = {}, _a[options.name] = { data: allData }, _a) };\r\n\t        this.chart.setState(statePatch, newData);\r\n\t        var _a;\r\n\t    };\r\n\t    Trend.prototype.getData = function (fromX, toX) {\r\n\t        var data = this.getOptions().data;\r\n\t        if (fromX == void 0 && toX == void 0)\r\n\t            return data;\r\n\t        fromX = fromX !== void 0 ? fromX : data[0].xVal;\r\n\t        toX = toX !== void 0 ? toX : data[data.length].xVal;\r\n\t        var filteredData = [];\r\n\t        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n\t            var item = data_1[_i];\r\n\t            if (item.xVal < fromX)\r\n\t                continue;\r\n\t            if (item.xVal > toX)\r\n\t                break;\r\n\t            filteredData.push(item);\r\n\t        }\r\n\t        return filteredData;\r\n\t    };\r\n\t    Trend.prototype.getFirstItem = function () {\r\n\t        return this.getOptions().data[0];\r\n\t    };\r\n\t    Trend.prototype.getLastItem = function () {\r\n\t        var data = this.getOptions().data;\r\n\t        return data[data.length - 1];\r\n\t    };\r\n\t    Trend.prototype.getOptions = function () {\r\n\t        return this.chart.state.trends[this.name];\r\n\t    };\r\n\t    Trend.prototype.setOptions = function (options) {\r\n\t        this.chart.setState({ trends: (_a = {}, _a[this.name] = options, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    Trend.prototype.onPrependRequest = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on(EVENTS.PREPEND_REQUEST, cb);\r\n\t        return function () {\r\n\t            _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for Chart.onTrendChange\r\n\t     */\r\n\t    Trend.prototype.onChange = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on(EVENTS.CHANGE, cb);\r\n\t        return function () { _this.ee.off(EVENTS.CHANGE, cb); };\r\n\t    };\r\n\t    Trend.prototype.onDataChange = function (cb) {\r\n\t        var _this = this;\r\n\t        var onChangeCb = function (changedOptions, newData) {\r\n\t            if (newData)\r\n\t                cb(newData);\r\n\t        };\r\n\t        this.ee.on(EVENTS.CHANGE, onChangeCb);\r\n\t        return function () {\r\n\t            _this.ee.off(EVENTS.CHANGE, onChangeCb);\r\n\t        };\r\n\t    };\r\n\t    Trend.prototype.checkForPrependRequest = function () {\r\n\t        var _this = this;\r\n\t        if (this.prependRequest)\r\n\t            return;\r\n\t        var chartState = this.chart;\r\n\t        var minXVal = chartState.state.computedData.trends.minXVal;\r\n\t        var minScreenX = chartState.viewport.getViewportYByVal(minXVal);\r\n\t        var needToRequest = minScreenX > 0;\r\n\t        var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\r\n\t        var requestedDataLength = to - from;\r\n\t        if (!needToRequest)\r\n\t            return;\r\n\t        this.prependRequest = new deps_1.Promise(function (resolve, reject) {\r\n\t            _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\r\n\t        });\r\n\t        this.prependRequest.then(function (newData) {\r\n\t            _this.prependData(newData);\r\n\t            _this.prependRequest = null;\r\n\t        }, function () {\r\n\t            _this.prependRequest = null;\r\n\t        });\r\n\t    };\r\n\t    Trend.prepareData = function (newData, currentData, isPrepend) {\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var data = [];\r\n\t        if (typeof newData[0] == 'number') {\r\n\t            currentData = currentData || [];\r\n\t            var initialItem = void 0;\r\n\t            var xVal = void 0;\r\n\t            if (isPrepend) {\r\n\t                initialItem = currentData[0];\r\n\t                xVal = initialItem.xVal - newData.length;\r\n\t            }\r\n\t            else {\r\n\t                initialItem = currentData[currentData.length - 1];\r\n\t                xVal = initialItem ? initialItem.xVal + 1 : 0;\r\n\t            }\r\n\t            for (var _i = 0, _a = newData; _i < _a.length; _i++) {\r\n\t                var yVal = _a[_i];\r\n\t                data.push({ xVal: xVal, yVal: yVal, id: Utils_1.Utils.getUid() });\r\n\t                xVal++;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            data = newData;\r\n\t        }\r\n\t        return data;\r\n\t    };\r\n\t    return Trend;\r\n\t}());\r\n\texports.Trend = Trend;\r\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Trend_1 = __webpack_require__(22);\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar MAX_ANIMATED_SEGMENTS = 100;\r\n\tvar EVENTS = {\r\n\t    REBUILD: 'rebuild',\r\n\t    DISLPAYED_RANGE_CHANGED: 'displayedRangeChanged',\r\n\t    ANIMATION_FRAME: 'animationFrame'\r\n\t};\r\n\t/**\r\n\t *  Class helps to display and animate trends segments\r\n\t */\r\n\tvar TrendSegmentsManager = (function () {\r\n\t    function TrendSegmentsManager(chart, trend) {\r\n\t        this.segmentsById = {};\r\n\t        this.segments = [];\r\n\t        this.animatedSegmentsIds = [];\r\n\t        this.segmentsLength = 0;\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        this.animatedSegmentsForPrepend = [];\r\n\t        this.nextEmptyId = 0;\r\n\t        this.startSegmentId = 0;\r\n\t        this.endSegmentId = 0;\r\n\t        // TODO: make subscriptions array\r\n\t        this.unbindList = [];\r\n\t        this.chart = chart;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.trend = trend;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendSegmentsManager.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.trend.onChange(function (changedOptions, newData) { return _this.onTrendChangeHandler(changedOptions, newData); });\r\n\t        this.unbindList = [\r\n\t            this.chart.onInitialStateApplied(function () { return _this.onInitialStateAppliedHandler(); }),\r\n\t            this.chart.onZoom(function () { return _this.onZoomHandler(); }),\r\n\t            this.chart.onScroll(function () { return _this.recalculateDisplayedRange(); }),\r\n\t            this.chart.onDestroy(function () { return _this.onDestroyHandler(); })\r\n\t        ];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.unbindEvents = function () {\r\n\t        this.unbindList.forEach(function (unbind) { return unbind(); });\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\r\n\t        this.tryToRebuildSegments();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t        this.unbindEvents();\r\n\t        this.appendAnimation && this.appendAnimation.kill();\r\n\t        this.prependAnimation && this.prependAnimation.kill();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onZoomHandler = function () {\r\n\t        var segmentsRebuilded = this.tryToRebuildSegments();\r\n\t        if (!segmentsRebuilded) {\r\n\t            this.recalculateDisplayedRange();\r\n\t        }\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onTrendChangeHandler = function (changedOptions, newData) {\r\n\t        var needToRebuildSegments = (changedOptions.type != void 0 ||\r\n\t            changedOptions.maxSegmentLength != void 0);\r\n\t        if (needToRebuildSegments) {\r\n\t            this.tryToRebuildSegments(true);\r\n\t            return;\r\n\t        }\r\n\t        if (!newData)\r\n\t            return;\r\n\t        var data = this.trend.getData();\r\n\t        var isAppend = (!data.length || data[0].xVal < newData[0].xVal);\r\n\t        isAppend ? this.appendData(newData) : this.prependData(newData);\r\n\t        this.recalculateDisplayedRange();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getSegment = function (id) {\r\n\t        return this.segmentsById[id];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getEndSegment = function () {\r\n\t        return this.segmentsById[this.endSegmentId];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getStartSegment = function () {\r\n\t        return this.segmentsById[this.startSegmentId];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.tryToRebuildSegments = function (force) {\r\n\t        if (force === void 0) { force = false; }\r\n\t        var options = this.trend.getOptions();\r\n\t        var trendTypeName = Trend_1.TREND_TYPE[options.type];\r\n\t        var trendTypesSettings = options.settingsForTypes;\r\n\t        var trendTypeSettings = trendTypesSettings[trendTypeName];\r\n\t        var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\r\n\t        var needToRebuild = this.segments.length === 0 || force;\r\n\t        var segmentLength = this.maxSegmentLength;\r\n\t        // call toFixed(2) to prevent floating segment error compare\r\n\t        var currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\r\n\t        var currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\r\n\t        if (currentSegmentLengthInPx < minSegmentLengthInPx) {\r\n\t            needToRebuild = true;\r\n\t            segmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\r\n\t        }\r\n\t        else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\r\n\t            needToRebuild = true;\r\n\t            segmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\r\n\t        }\r\n\t        if (!needToRebuild)\r\n\t            return false;\r\n\t        this.maxSegmentLength = segmentLength;\r\n\t        this.segmentsById = {};\r\n\t        this.segments = [];\r\n\t        this.nextEmptyId = 0;\r\n\t        this.startSegmentId = 0;\r\n\t        this.endSegmentId = 0;\r\n\t        this.segmentsLength = 0;\r\n\t        this.stopAllAnimations();\r\n\t        this.appendData(null, true);\r\n\t        this.recalculateDisplayedRange(true);\r\n\t        this.ee.emit(EVENTS.REBUILD);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.stopAllAnimations = function () {\r\n\t        this.animatedSegmentsIds = [];\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        if (this.prependAnimation)\r\n\t            this.prependAnimation.kill();\r\n\t        if (this.appendAnimation)\r\n\t            this.appendAnimation.kill();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.recalculateDisplayedRange = function (segmentsAreRebuilded) {\r\n\t        if (segmentsAreRebuilded === void 0) { segmentsAreRebuilded = false; }\r\n\t        var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\r\n\t        var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\r\n\t        var displayedRange = to - from;\r\n\t        this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, 'startXVal');\r\n\t        this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\r\n\t        this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, 'endXVal');\r\n\t        this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\r\n\t        if (segmentsAreRebuilded)\r\n\t            return;\r\n\t        var displayedRangeChanged = (firstDisplayedSegment.id !== this.firstDisplayedSegment.id ||\r\n\t            lastDisplayedSegment.id !== this.lastDisplayedSegment.id);\r\n\t        if (displayedRangeChanged)\r\n\t            this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\r\n\t    };\r\n\t    // getSegments(fromX?: number, toX?: number): TrendSegment[] {\r\n\t    // \tvar segments = this.segments;\r\n\t    // \tif (fromX == void 0 && toX == void 0) return segments;\r\n\t    // \tfromX = fromX !== void 0 ? fromX : segments[0].startXVal;\r\n\t    // \ttoX = toX !== void 0 ? toX : segments[this.segmentsLength].endXVal;\r\n\t    // \tvar startSegmentInd = Utils.closestBinarySearch(segments, fromX, 'xVal');\r\n\t    // \tvar endSegmentInd = Utils.closestBinarySearch(segments, toX, 'xVal');\r\n\t    // \treturn segments.slice(startSegmentInd, endSegmentInd);\r\n\t    // }\r\n\t    /**\r\n\t     * returns array of segments for values array\r\n\t     * values must be sorted!\r\n\t     */\r\n\t    TrendSegmentsManager.prototype.getSegmentsForXValues = function (values) {\r\n\t        var valueInd = 0;\r\n\t        var value = values[valueInd];\r\n\t        var lastValueInd = values.length - 1;\r\n\t        var results = [];\r\n\t        var segment = this.getStartSegment();\r\n\t        if (!segment.hasValue)\r\n\t            return [];\r\n\t        while (segment) {\r\n\t            while (value < segment.startXVal) {\r\n\t                results.push(void 0);\r\n\t                value = values[++valueInd];\r\n\t            }\r\n\t            while (value > segment.endXVal) {\r\n\t                segment = segment.getNext();\r\n\t                if (!segment)\r\n\t                    break;\r\n\t            }\r\n\t            var valueInPoint = (segment.startXVal == value || segment.endXVal == value ||\r\n\t                (segment.startXVal < value && segment.endXVal > value));\r\n\t            if (valueInPoint) {\r\n\t                results.push(segment);\r\n\t                value = values[++valueInd];\r\n\t            }\r\n\t            if (valueInd > lastValueInd)\r\n\t                break;\r\n\t        }\r\n\t        return results;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onAnimationFrame = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onRebuild = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.REBUILD, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onDisplayedRangeChanged = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.allocateNextSegment = function () {\r\n\t        var id = this.nextEmptyId++;\r\n\t        var segment = new TrendSegment(this, id);\r\n\t        var prevSegment = this.segmentsById[this.endSegmentId];\r\n\t        if (prevSegment && prevSegment.hasValue) {\r\n\t            prevSegment.nextId = id;\r\n\t            segment.prevId = prevSegment.id;\r\n\t        }\r\n\t        this.endSegmentId = id;\r\n\t        this.segmentsLength++;\r\n\t        this.segmentsById[id] = segment;\r\n\t        this.segments.push(segment);\r\n\t        return segment;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.allocatePrevSegment = function () {\r\n\t        var id = this.nextEmptyId++;\r\n\t        var segment = new TrendSegment(this, id);\r\n\t        var nextSegment = this.segmentsById[this.startSegmentId];\r\n\t        if (nextSegment && nextSegment.hasValue) {\r\n\t            nextSegment.prevId = id;\r\n\t            segment.nextId = nextSegment.id;\r\n\t        }\r\n\t        this.startSegmentId = id;\r\n\t        this.segmentsLength++;\r\n\t        this.segmentsById[id] = segment;\r\n\t        this.segments.unshift(segment);\r\n\t        return segment;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.appendData = function (newData, needRebuildSegments) {\r\n\t        // WARNING: bottleneck method!\r\n\t        if (needRebuildSegments === void 0) { needRebuildSegments = false; }\r\n\t        // var t1 = performance.now();\r\n\t        var trendData = this.trend.getData();\r\n\t        if (needRebuildSegments) {\r\n\t            newData = trendData;\r\n\t            this.animatedSegmentsForAppend = [];\r\n\t        }\r\n\t        var startItemInd = trendData.length - newData.length;\r\n\t        var segment = this.getEndSegment() || this.allocateNextSegment();\r\n\t        var initialSegment = segment.hasValue ? segment : null;\r\n\t        var initialAnimationState = segment.createAnimationState();\r\n\t        var itemInd = 0;\r\n\t        while (itemInd < newData.length) {\r\n\t            var item = newData[itemInd];\r\n\t            var itemIsInserted = segment.appendItem(item);\r\n\t            var isLastItem = itemInd == newData.length - 1;\r\n\t            if (itemIsInserted) {\r\n\t                if (!isLastItem)\r\n\t                    itemInd++;\r\n\t            }\r\n\t            else {\r\n\t                if (!segment.isCompleted)\r\n\t                    segment.complete();\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted) {\r\n\t                segment.recalculateItems();\r\n\t            }\r\n\t            var segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\r\n\t            if (segmentIsReadyForAnimate) {\r\n\t                var id = segment.id;\r\n\t                if (!initialSegment)\r\n\t                    initialSegment = segment;\r\n\t                if (!initialAnimationState) {\r\n\t                    initialAnimationState = initialSegment.createAnimationState();\r\n\t                }\r\n\t                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                if (this.animatedSegmentsForAppend.length > 0) {\r\n\t                    segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\r\n\t                    segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\r\n\t                }\r\n\t                segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                segment.targetAnimationState = segment.createAnimationState();\r\n\t                this.animatedSegmentsForAppend.push(id);\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted)\r\n\t                break;\r\n\t            if (!segment.isCompleted)\r\n\t                continue;\r\n\t            segment = this.allocateNextSegment();\r\n\t            var prevItem = trendData[startItemInd + itemInd - 1];\r\n\t            segment.appendItem(prevItem);\r\n\t        }\r\n\t        var animationsOptions = this.chart.state.animations;\r\n\t        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\r\n\t        // var t2 = performance.now();\r\n\t        // console.log(t2 - t1);\r\n\t        // do not create animation if segments was rebuilded\r\n\t        if (needRebuildSegments) {\r\n\t            for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\r\n\t                var segmentId = _a[_i];\r\n\t                var segment_1 = this.segmentsById[segmentId];\r\n\t                segment_1.currentAnimationState = segment_1.createAnimationState();\r\n\t            }\r\n\t            this.animatedSegmentsForAppend = [];\r\n\t            return;\r\n\t        }\r\n\t        if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS)\r\n\t            time = 0;\r\n\t        this.animate(time);\r\n\t    };\r\n\t    // TODO: refactor duplicated code from appendData\r\n\t    TrendSegmentsManager.prototype.prependData = function (newData) {\r\n\t        var trendData = this.trend.getData();\r\n\t        var segment = this.getStartSegment() || this.segmentsById[0];\r\n\t        var initialSegment = segment.hasValue ? segment : null;\r\n\t        var itemInd = newData.length - 1;\r\n\t        var initialAnimationState = segment.createAnimationState();\r\n\t        while (itemInd >= 0) {\r\n\t            var item = newData[itemInd];\r\n\t            var itemIsInserted = segment.prependItem(item);\r\n\t            var isLastItem = itemInd == 0;\r\n\t            if (itemIsInserted) {\r\n\t                if (!isLastItem)\r\n\t                    itemInd--;\r\n\t            }\r\n\t            else {\r\n\t                if (!segment.isCompleted)\r\n\t                    segment.complete();\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted) {\r\n\t                segment.recalculateItems();\r\n\t            }\r\n\t            var segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\r\n\t            if (segmentIsReadyForAnimate) {\r\n\t                var id = segment.id;\r\n\t                if (!initialSegment)\r\n\t                    initialSegment = segment;\r\n\t                if (!initialAnimationState)\r\n\t                    initialAnimationState = initialSegment.createAnimationState();\r\n\t                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                if (this.animatedSegmentsForPrepend.length > 0) {\r\n\t                    segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\r\n\t                    segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\r\n\t                }\r\n\t                segment.targetAnimationState = segment.createAnimationState();\r\n\t                this.animatedSegmentsForPrepend.push(id);\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted)\r\n\t                break;\r\n\t            if (!segment.isCompleted)\r\n\t                continue;\r\n\t            segment = this.allocatePrevSegment();\r\n\t            var nextItem = trendData[itemInd + 1];\r\n\t            segment.prependItem(nextItem);\r\n\t        }\r\n\t        var animationsOptions = this.chart.state.animations;\r\n\t        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\r\n\t        if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS)\r\n\t            time = 0;\r\n\t        this.animate(time, true);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.animate = function (time, isPrepend) {\r\n\t        var _this = this;\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\r\n\t        var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\r\n\t        if ((animation && animation.isActive()) || time == 0) {\r\n\t            if (animation)\r\n\t                animation.kill();\r\n\t            this.onAnimationFrameHandler(1, isPrepend);\r\n\t            animatedSegmentsIds.length = 0;\r\n\t            return;\r\n\t        }\r\n\t        var animationsOptions = this.chart.state.animations;\r\n\t        var ease = animationsOptions.trendChangeEase;\r\n\t        var objectToAnimate = { animationValue: 0 };\r\n\t        animation = TweenLite.to(objectToAnimate, time, { animationValue: 1, ease: ease });\r\n\t        animation.eventCallback('onUpdate', function () { return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend); });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animatedSegmentsIds.length = 0;\r\n\t            _this.appendAnimation = null;\r\n\t        });\r\n\t        if (isPrepend) {\r\n\t            this.prependAnimation = animation;\r\n\t        }\r\n\t        else {\r\n\t            this.appendAnimation = animation;\r\n\t        }\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onAnimationFrameHandler = function (coefficient, isPrepend) {\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\r\n\t        for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\r\n\t            var segmentId = animatedSegmentsIds_1[_i];\r\n\t            var segment = this.segmentsById[segmentId];\r\n\t            for (var key in segment.targetAnimationState) {\r\n\t                var targetValue = segment.targetAnimationState[key];\r\n\t                var initialValue = segment.initialAnimationState[key];\r\n\t                var currentValue = initialValue + (targetValue - initialValue) * coefficient;\r\n\t                segment.currentAnimationState[key] = currentValue;\r\n\t            }\r\n\t        }\r\n\t        this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\r\n\t        this.ee.emit(EVENTS.ANIMATION_FRAME, this);\r\n\t    };\r\n\t    return TrendSegmentsManager;\r\n\t}());\r\n\texports.TrendSegmentsManager = TrendSegmentsManager;\r\n\tvar TrendSegment = (function () {\r\n\t    function TrendSegment(trendPoints, id) {\r\n\t        this.isCompleted = false;\r\n\t        this.items = [];\r\n\t        this.initialAnimationState = {};\r\n\t        this.targetAnimationState = {};\r\n\t        this.currentAnimationState = {};\r\n\t        this.trendSegments = trendPoints;\r\n\t        this.id = id;\r\n\t        this.maxLength = trendPoints.maxSegmentLength;\r\n\t    }\r\n\t    TrendSegment.prototype.createAnimationState = function () {\r\n\t        var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\r\n\t        return {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal,\r\n\t            startXVal: startXVal,\r\n\t            startYVal: startYVal,\r\n\t            endXVal: endXVal,\r\n\t            endYVal: endYVal,\r\n\t            maxYVal: maxYVal,\r\n\t            minYVal: minYVal,\r\n\t            maxLength: maxLength\r\n\t        };\r\n\t    };\r\n\t    ;\r\n\t    TrendSegment.prototype.appendItem = function (item) {\r\n\t        if (this.isCompleted)\r\n\t            return false;\r\n\t        var items = this.items;\r\n\t        if (items.length < 2) {\r\n\t            this.items.push(item);\r\n\t            this.hasValue = true;\r\n\t            return true;\r\n\t        }\r\n\t        var startXVal = items[0].xVal;\r\n\t        if (item.xVal - startXVal > this.maxLength)\r\n\t            return false;\r\n\t        items.push(item);\r\n\t        return true;\r\n\t    };\r\n\t    TrendSegment.prototype.prependItem = function (item) {\r\n\t        if (this.isCompleted)\r\n\t            return false;\r\n\t        var items = this.items;\r\n\t        if (items.length < 2) {\r\n\t            this.items.unshift(item);\r\n\t            this.hasValue = true;\r\n\t            return true;\r\n\t        }\r\n\t        var endXVal = items[items.length - 1].xVal;\r\n\t        if (endXVal - item.xVal > this.maxLength)\r\n\t            return false;\r\n\t        items.unshift(item);\r\n\t        return true;\r\n\t    };\r\n\t    TrendSegment.prototype.complete = function () {\r\n\t        this.isCompleted = true;\r\n\t        this.recalculateItems();\r\n\t        this.items = []; // free memory for completed ranges\r\n\t    };\r\n\t    TrendSegment.prototype.recalculateItems = function () {\r\n\t        var items = this.items;\r\n\t        var itemsLength = items.length;\r\n\t        if (itemsLength === 0)\r\n\t            Utils_1.Utils.error('Unable to create TrendSegment without TrendItems');\r\n\t        var endItem = items[itemsLength - 1];\r\n\t        var endXVal = endItem.xVal, endYVal = endItem.yVal;\r\n\t        var startXVal, startYVal;\r\n\t        var startItem = items[0];\r\n\t        startXVal = startItem.xVal;\r\n\t        startYVal = startItem.yVal;\r\n\t        var minX = Math.min(startXVal, endXVal);\r\n\t        var maxX = Math.max(startXVal, endXVal);\r\n\t        var middleXVal = minX + (maxX - minX) / 2;\r\n\t        var minY = Math.min(startYVal, endYVal);\r\n\t        var maxY = Math.max(startYVal, endYVal);\r\n\t        var middleYVal = minY + (maxY - minY) / 2;\r\n\t        var yVals = items.map(function (item) { return item.yVal; });\r\n\t        this.startXVal = startXVal;\r\n\t        this.startYVal = startYVal;\r\n\t        this.endXVal = endXVal;\r\n\t        this.endYVal = endYVal;\r\n\t        this.xVal = middleXVal;\r\n\t        this.yVal = middleYVal;\r\n\t        this.maxYVal = Math.max.apply(Math, yVals);\r\n\t        this.minYVal = Math.min.apply(Math, yVals);\r\n\t        this.currentAnimationState = this.createAnimationState();\r\n\t    };\r\n\t    TrendSegment.prototype.getNext = function () {\r\n\t        var nextPoint = this.trendSegments.segmentsById[this.nextId];\r\n\t        return nextPoint && nextPoint.hasValue ? nextPoint : null;\r\n\t    };\r\n\t    TrendSegment.prototype.getPrev = function () {\r\n\t        var prevPoint = this.trendSegments.segmentsById[this.prevId];\r\n\t        return prevPoint && prevPoint.hasValue ? prevPoint : null;\r\n\t    };\r\n\t    TrendSegment.prototype.getFrameVal = function () {\r\n\t        var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\r\n\t        return new Vector3(xVal, yVal, 0);\r\n\t    };\r\n\t    return TrendSegment;\r\n\t}());\r\n\texports.TrendSegment = TrendSegment;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Trend_1 = __webpack_require__(22);\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\tvar EVENTS = {\r\n\t    SEGMENTS_REBUILDED: 'segmentsRebuilded'\r\n\t};\r\n\t/**\r\n\t * Trends manager\r\n\t */\r\n\tvar TrendsManager = (function () {\r\n\t    function TrendsManager(state, initialState) {\r\n\t        this.trends = {};\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.chartState = state;\r\n\t        var trendsCalculatedOptions = {};\r\n\t        for (var trendName in initialState.trends) {\r\n\t            var trend = this.createTrend(state, trendName, initialState);\r\n\t            trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\r\n\t        }\r\n\t        this.calculatedOptions = trendsCalculatedOptions;\r\n\t    }\r\n\t    TrendsManager.prototype.getTrend = function (trendName) {\r\n\t        return this.trends[trendName];\r\n\t    };\r\n\t    TrendsManager.prototype.getEnabledTrends = function () {\r\n\t        var enabledTrends = [];\r\n\t        var allTrends = this.trends;\r\n\t        for (var trendName in allTrends) {\r\n\t            var trend = allTrends[trendName];\r\n\t            trend.getOptions().enabled && enabledTrends.push(trend);\r\n\t        }\r\n\t        return enabledTrends;\r\n\t    };\r\n\t    TrendsManager.prototype.getStartXVal = function () {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        return trends[0].getData()[0].xVal;\r\n\t    };\r\n\t    TrendsManager.prototype.getEndXVal = function () {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        var firstTrendData = trends[0].getData();\r\n\t        return firstTrendData[firstTrendData.length - 1].xVal;\r\n\t    };\r\n\t    TrendsManager.prototype.getExtremumYVal = function (extremumIsMax, fromX, toX) {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        var compareFn;\r\n\t        var result;\r\n\t        if (extremumIsMax) {\r\n\t            result = -Infinity;\r\n\t            compareFn = Math.max;\r\n\t        }\r\n\t        else {\r\n\t            result = Infinity;\r\n\t            compareFn = Math.min;\r\n\t        }\r\n\t        for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\r\n\t            var trend = trends_1[_i];\r\n\t            var trendData = trend.getData(fromX, toX);\r\n\t            var trendYValues = trendData.map(function (dataItem) { return dataItem.yVal; });\r\n\t            result = compareFn.apply(void 0, [result].concat(trendYValues));\r\n\t        }\r\n\t        if (result == Infinity || result == -Infinity)\r\n\t            result = NaN;\r\n\t        return result;\r\n\t    };\r\n\t    TrendsManager.prototype.getMaxYVal = function (fromX, toX) { return this.getExtremumYVal(true, fromX, toX); };\r\n\t    TrendsManager.prototype.getMinYVal = function (fromX, toX) { return this.getExtremumYVal(false, fromX, toX); };\r\n\t    TrendsManager.prototype.onSegmentsRebuilded = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\r\n\t    };\r\n\t    TrendsManager.prototype.createTrend = function (state, trendName, initialState) {\r\n\t        var _this = this;\r\n\t        var trend = new Trend_1.Trend(state, trendName, initialState);\r\n\t        this.trends[trendName] = trend;\r\n\t        trend.segmentsManager.onRebuild(function () { return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName); });\r\n\t        return trend;\r\n\t    };\r\n\t    return TrendsManager;\r\n\t}());\r\n\texports.TrendsManager = TrendsManager;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Viewport = (function () {\r\n\t    function Viewport(chart) {\r\n\t        this.params = {};\r\n\t        this.chart = chart;\r\n\t        this.updateParams();\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    Viewport.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.onChange(function () { return _this.updateParams(); });\r\n\t    };\r\n\t    Viewport.prototype.updateParams = function () {\r\n\t        var state = this.chart.state;\r\n\t        this.params.scrollXVal = state.xAxis.range.scroll;\r\n\t        this.params.scrollYVal = state.yAxis.range.scroll;\r\n\t        this.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\r\n\t        this.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\r\n\t        this.params.zoomX = state.xAxis.range.zoom;\r\n\t        this.params.zoomY = state.yAxis.range.zoom;\r\n\t    };\r\n\t    Viewport.prototype.getCameraSettings = function () {\r\n\t        var _a = this.chart.state, width = _a.width, height = _a.height;\r\n\t        // move 0,0 to left-bottom corner\r\n\t        return {\r\n\t            left: 0,\r\n\t            right: width,\r\n\t            top: height,\r\n\t            bottom: 0,\r\n\t            near: -500,\r\n\t            far: 1000\r\n\t        };\r\n\t    };\r\n\t    // get world coordinates\r\n\t    Viewport.prototype.getWorldXByVal = function (xVal) {\r\n\t        var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\r\n\t        var zoom = this.params.zoomX;\r\n\t        return (xVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    Viewport.prototype.getWorldYByVal = function (yVal) {\r\n\t        var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\r\n\t        var zoom = this.params.zoomY;\r\n\t        return (yVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    Viewport.prototype.getWorldXByViewportX = function (viewportX) {\r\n\t        return this.getWorldXByVal(this.getValByViewportX(viewportX));\r\n\t    };\r\n\t    Viewport.prototype.getWorldYByViewportY = function (viewportY) {\r\n\t        return this.getWorldYByVal(this.getValByViewportY(viewportY));\r\n\t    };\r\n\t    // get value\r\n\t    Viewport.prototype.getValByWorldX = function (worldX) {\r\n\t        return this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\r\n\t    };\r\n\t    Viewport.prototype.getValByWorldY = function (worldY) {\r\n\t        return this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\r\n\t    };\r\n\t    Viewport.prototype.getValByViewportX = function (x) {\r\n\t        return this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\r\n\t    };\r\n\t    Viewport.prototype.getValByViewportY = function (y) {\r\n\t        return this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\r\n\t    };\r\n\t    // get viewport coordinates\r\n\t    Viewport.prototype.getViewportXByVal = function (xVal) {\r\n\t        return this.getWorldXByVal(xVal) - this.params.scrollX;\r\n\t    };\r\n\t    Viewport.prototype.getViewportYByVal = function (yVal) {\r\n\t        return this.getWorldYByVal(yVal) - this.params.scrollY;\r\n\t    };\r\n\t    Viewport.prototype.getViewportXByWorldX = function (worldX) {\r\n\t        return worldX - this.params.scrollX;\r\n\t    };\r\n\t    // pixels converters\r\n\t    Viewport.prototype.valToPxByXAxis = function (val) {\r\n\t        return val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\r\n\t    };\r\n\t    Viewport.prototype.valToPxByYAxis = function (val) {\r\n\t        return val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\r\n\t    };\r\n\t    Viewport.prototype.pxToValByXAxis = function (pixelsCount) {\r\n\t        return pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\r\n\t    };\r\n\t    Viewport.prototype.pxToValByYAxis = function (pixelsCount) {\r\n\t        return pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\r\n\t    };\r\n\t    // get viewport edges\r\n\t    Viewport.prototype.getTop = function () {\r\n\t        return this.params.scrollY + this.chart.state.height;\r\n\t    };\r\n\t    Viewport.prototype.getRight = function () {\r\n\t        return this.params.scrollX + this.chart.state.width;\r\n\t    };\r\n\t    Viewport.prototype.getBottom = function () {\r\n\t        return this.params.scrollY;\r\n\t    };\r\n\t    Viewport.prototype.getLeft = function () {\r\n\t        return this.params.scrollX;\r\n\t    };\r\n\t    Viewport.prototype.getTopVal = function () {\r\n\t        return this.getValByWorldY(this.getTop());\r\n\t    };\r\n\t    Viewport.prototype.getRightVal = function () {\r\n\t        return this.getValByWorldX(this.getRight());\r\n\t    };\r\n\t    Viewport.prototype.getBottomVal = function () {\r\n\t        return this.getValByWorldY(this.getBottom());\r\n\t    };\r\n\t    Viewport.prototype.getLeftVal = function () {\r\n\t        return this.getValByWorldX(this.getLeft());\r\n\t    };\r\n\t    return Viewport;\r\n\t}());\r\n\texports.Viewport = Viewport;\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\tvar Viewport_1 = __webpack_require__(25);\r\n\t(function (INTERPOLATION_EVENT) {\r\n\t    INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\r\n\t    INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\r\n\t})(exports.INTERPOLATION_EVENT || (exports.INTERPOLATION_EVENT = {}));\r\n\tvar INTERPOLATION_EVENT = exports.INTERPOLATION_EVENT;\r\n\tvar SCREEN_EVENTS = {\r\n\t    ZOOM_FRAME: 'zoomFrame',\r\n\t    SCROLL_FRAME: 'scrollFrame',\r\n\t    TRANSFORMATION_FRAME: 'transformationFrame',\r\n\t    TRANSFORMATION_EVENT: 'transformationStateChanged',\r\n\t};\r\n\t/**\r\n\t * manage camera, and contains methods for transforming pixels to values\r\n\t */\r\n\tvar InterpolatedViewport = (function (_super) {\r\n\t    __extends(InterpolatedViewport, _super);\r\n\t    function InterpolatedViewport(chart) {\r\n\t        _super.call(this, chart);\r\n\t        this.interpolationInProgress = false;\r\n\t        var _a = chart.state, w = _a.width, h = _a.height;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.setParams(chart.viewport.params);\r\n\t    }\r\n\t    InterpolatedViewport.prototype.onZoomInterpolation = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onScrollInterpolation = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onInterpolation = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onInterpolationEvent = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.cameraIsMoving = function () {\r\n\t        return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished ||\r\n\t            this.zoomXAnimation && !this.zoomXAnimation.isFinished);\r\n\t    };\r\n\t    /**\r\n\t     * setup zoom and scroll\r\n\t     */\r\n\t    InterpolatedViewport.prototype.setParams = function (options, silent) {\r\n\t        if (silent === void 0) { silent = false; }\r\n\t        var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\r\n\t        if (scrollX != void 0)\r\n\t            this.params.scrollX = scrollX;\r\n\t        if (scrollY != void 0)\r\n\t            this.params.scrollY = scrollY;\r\n\t        if (zoomX != void 0)\r\n\t            this.params.zoomX = zoomX;\r\n\t        if (zoomY != void 0)\r\n\t            this.params.zoomY = zoomY;\r\n\t        if (scrollX != void 0 || zoomX) {\r\n\t            options.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\r\n\t            this.params.scrollXVal = options.scrollXVal;\r\n\t        }\r\n\t        if (scrollY != void 0 || zoomY) {\r\n\t            options.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\r\n\t            this.params.scrollYVal = options.scrollYVal;\r\n\t        }\r\n\t        if (silent)\r\n\t            return;\r\n\t        var hasActiveAnimations = ((this.scrollXAnimation && !this.scrollXAnimation.isStopped) ||\r\n\t            (this.scrollYAnimation && !this.scrollYAnimation.isStopped) ||\r\n\t            (this.zoomXAnimation && !this.zoomXAnimation.isStopped) ||\r\n\t            (this.zoomYAnimation && !this.zoomYAnimation.isStopped));\r\n\t        var interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\r\n\t        var interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\r\n\t        if (interpolationStarted) {\r\n\t            this.interpolationInProgress = true;\r\n\t            this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\r\n\t        }\r\n\t        if (interpolationFinished) {\r\n\t            this.interpolationInProgress = false;\r\n\t        }\r\n\t        if (!this.interpolationInProgress) {\r\n\t            // prevent to set camera between pixels\r\n\t            this.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\r\n\t            this.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\r\n\t        }\r\n\t        this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\r\n\t        var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\r\n\t        if (scrollEventNeeded)\r\n\t            this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\r\n\t        var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\r\n\t        if (zoomEventNeeded)\r\n\t            this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\r\n\t        if (interpolationFinished) {\r\n\t            this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\r\n\t        }\r\n\t    };\r\n\t    InterpolatedViewport.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chart;\r\n\t        // handle scroll and zoom\r\n\t        state.onChange(function (changedProps) {\r\n\t            if (changedProps.xAxis && changedProps.xAxis.range) {\r\n\t                if (changedProps.xAxis.range.scroll != void 0)\r\n\t                    _this.onScrollXHandler(changedProps);\r\n\t                if (changedProps.xAxis.range.zoom)\r\n\t                    _this.onZoomXHandler();\r\n\t            }\r\n\t            if (changedProps.yAxis && changedProps.yAxis.range) {\r\n\t                if (changedProps.yAxis.range.scroll != void 0)\r\n\t                    _this.onScrollYHandler();\r\n\t                if (changedProps.yAxis.range.zoom)\r\n\t                    _this.onZoomYHandler();\r\n\t            }\r\n\t        });\r\n\t        state.onDestroy(function () { return _this.onDestroyHandler(); });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onScrollXHandler = function (changedProps) {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var isDragMode = chart.state.cursor.dragMode;\r\n\t        var animations = chart.state.animations;\r\n\t        var zoomXChanged = changedProps.xAxis.range.zoom;\r\n\t        var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\r\n\t        var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\r\n\t        var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\r\n\t        var range = chart.state.xAxis.range;\r\n\t        var targetX = range.scroll * range.scaleFactor * range.zoom;\r\n\t        if (isDragMode && !chart.state.inertialScroll)\r\n\t            time = 0;\r\n\t        if (this.scrollXAnimation)\r\n\t            this.scrollXAnimation.stop();\r\n\t        this.scrollXAnimation = chart.animationManager.animate(time, ease)\r\n\t            .from(this.params.scrollX)\r\n\t            .to(targetX)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ scrollX: value });\r\n\t        });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onScrollYHandler = function () {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var animations = chart.state.animations;\r\n\t        var range = chart.state.yAxis.range;\r\n\t        var targetY = range.scroll * range.scaleFactor * range.zoom;\r\n\t        if (this.scrollYAnimation)\r\n\t            this.scrollYAnimation.stop();\r\n\t        this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase)\r\n\t            .from(this.params.scrollY)\r\n\t            .to(targetY)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ scrollY: value });\r\n\t        });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onZoomXHandler = function () {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var animations = chart.state.animations;\r\n\t        var targetZoom = chart.state.xAxis.range.zoom;\r\n\t        if (this.zoomXAnimation)\r\n\t            this.zoomXAnimation.stop();\r\n\t        this.zoomXAnimation = chart.animationManager\r\n\t            .animate(animations.zoomSpeed, animations.zoomEase)\r\n\t            .from(this.params.zoomX)\r\n\t            .to(targetZoom)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ zoomX: value });\r\n\t        });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onZoomYHandler = function () {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var targetZoom = chart.state.yAxis.range.zoom;\r\n\t        var animations = chart.state.animations;\r\n\t        if (this.zoomYAnimation)\r\n\t            this.zoomYAnimation.stop();\r\n\t        this.zoomYAnimation = chart.animationManager\r\n\t            .animate(animations.zoomSpeed, animations.zoomEase)\r\n\t            .from(this.params.zoomY)\r\n\t            .to(targetZoom)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ zoomY: value });\r\n\t        });\r\n\t    };\r\n\t    return InterpolatedViewport;\r\n\t}(Viewport_1.Viewport));\r\n\texports.InterpolatedViewport = InterpolatedViewport;\r\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Easing_1 = __webpack_require__(28);\r\n\t// TODO: transfer AnimationManager to own repo\r\n\tvar AnimationManager = (function () {\r\n\t    function AnimationManager() {\r\n\t        this.isAnimationsEnabled = true;\r\n\t        this.animations = [];\r\n\t        this.lastTickTime = Date.now();\r\n\t    }\r\n\t    AnimationManager.prototype.animate = function (time, timingFunction) {\r\n\t        var animation = new Animation(this, time, this.lastTickTime, timingFunction);\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationManager.prototype.animateObj = function (source, target) {\r\n\t    };\r\n\t    AnimationManager.prototype.setAimationsEnabled = function (isEnabled) {\r\n\t        this.isAnimationsEnabled = isEnabled;\r\n\t    };\r\n\t    AnimationManager.prototype.tick = function () {\r\n\t        var now = Date.now();\r\n\t        var animations = this.animations;\r\n\t        // call tick for each animation\r\n\t        for (var i_1 = 0; i_1 < animations.length; i_1++) {\r\n\t            var animation = animations[i_1];\r\n\t            if (this.isAnimationsEnabled) {\r\n\t                animation.tick(now);\r\n\t            }\r\n\t            else {\r\n\t                animation.completeAndStop();\r\n\t            }\r\n\t        }\r\n\t        // cleanup completed animations\r\n\t        var i = animations.length;\r\n\t        while (i--)\r\n\t            if (animations[i].isStopped)\r\n\t                animations.splice(i, 1);\r\n\t        this.lastTickTime = now;\r\n\t    };\r\n\t    AnimationManager.prototype.hasActiveAnimations = function () {\r\n\t        return this.animations.length > 0;\r\n\t    };\r\n\t    return AnimationManager;\r\n\t}());\r\n\texports.AnimationManager = AnimationManager;\r\n\tvar Animation = (function () {\r\n\t    function Animation(animationManager, time, createdTime, easing) {\r\n\t        if (easing === void 0) { easing = Easing_1.EASING.Quadratic.Out; }\r\n\t        this.animationManager = animationManager;\r\n\t        this.time = time;\r\n\t        this.createdTime = createdTime;\r\n\t        this.easing = easing;\r\n\t        this.progress = 0;\r\n\t        this.delay = 0;\r\n\t        this.isFinished = false;\r\n\t        this.isStopped = false;\r\n\t        this.startTime = createdTime;\r\n\t    }\r\n\t    Animation.prototype.tick = function (now) {\r\n\t        if (!this.isStopped) {\r\n\t            var progress = this.time > 0 ? ((now - this.startTime) / this.time) : 1;\r\n\t            this.setProgress(progress);\r\n\t        }\r\n\t    };\r\n\t    Animation.prototype.from = function (sourceObj) {\r\n\t        if (typeof sourceObj == 'object') {\r\n\t            this.sourceObj = sourceObj;\r\n\t            this.initialObj = {};\r\n\t            var sourceIteralable = sourceObj;\r\n\t            for (var key in sourceIteralable)\r\n\t                if (typeof sourceIteralable[key] == 'number') {\r\n\t                    this.initialObj[key] = sourceIteralable[key];\r\n\t                }\r\n\t        }\r\n\t        else if (typeof sourceObj == 'number') {\r\n\t            this.sourceObj = sourceObj;\r\n\t            this.initialObj = sourceObj;\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.to = function (targetObj) {\r\n\t        this.targetObject = targetObj;\r\n\t        // clear unused fields\r\n\t        if (typeof this.initialObj == 'object') {\r\n\t            var initialIteralable = this.initialObj;\r\n\t            for (var key in this.targetObject) {\r\n\t                if (initialIteralable[key] == void 0)\r\n\t                    delete initialIteralable[key];\r\n\t            }\r\n\t            var targetIteralable = this.targetObject;\r\n\t            for (var key in initialIteralable) {\r\n\t                if (targetIteralable[key] == void 0)\r\n\t                    delete initialIteralable[key];\r\n\t            }\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.onTick = function (onTickCb) {\r\n\t        this.onTickCb = onTickCb;\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.then = function (onFinishCb) {\r\n\t        this.onFinishCb = onFinishCb;\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.stop = function () {\r\n\t        this.isStopped = true;\r\n\t    };\r\n\t    Animation.prototype.completeAndStop = function () {\r\n\t        this.setProgress(1);\r\n\t    };\r\n\t    Animation.prototype.withDelay = function (delay) {\r\n\t        this.delay = delay;\r\n\t        this.startTime = this.createdTime + delay;\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.setProgress = function (progress) {\r\n\t        if (progress < 0)\r\n\t            return;\r\n\t        progress = Math.min(progress, 1);\r\n\t        this.progress = progress;\r\n\t        var k = this.easing(progress);\r\n\t        if (typeof this.sourceObj == 'number') {\r\n\t            var initialVal = this.initialObj;\r\n\t            var targetVal = this.targetObject;\r\n\t            this.sourceObj = (initialVal + (targetVal - initialVal) * k);\r\n\t        }\r\n\t        else if (this.sourceObj && this.targetObject) {\r\n\t            for (var key in this.initialObj) {\r\n\t                var initialVal = this.initialObj[key];\r\n\t                var targetVal = this.targetObject[key];\r\n\t                this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\r\n\t            }\r\n\t        }\r\n\t        if (progress == 1) {\r\n\t            this.isStopped = true;\r\n\t            this.isFinished = true;\r\n\t        }\r\n\t        if (this.onTickCb)\r\n\t            this.onTickCb(this.sourceObj, progress, k, this);\r\n\t        if (progress == 1 && this.onFinishCb)\r\n\t            this.onFinishCb(this.sourceObj, this);\r\n\t    };\r\n\t    return Animation;\r\n\t}());\r\n\texports.Animation = Animation;\r\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Easing from tween.js lib https://github.com/tweenjs/tween.js\r\n\t **/\r\n\texports.EASING = {\r\n\t    Linear: {\r\n\t        None: function (k) {\r\n\t            return k;\r\n\t        }\r\n\t    },\r\n\t    Quadratic: {\r\n\t        In: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        }\r\n\t    },\r\n\t    Cubic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Quartic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        }\r\n\t    },\r\n\t    Quintic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Sinusoidal: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        }\r\n\t    },\r\n\t    Exponential: {\r\n\t        In: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        }\r\n\t    },\r\n\t    Circular: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        }\r\n\t    },\r\n\t    Elastic: {\r\n\t        In: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            k *= 2;\r\n\t            if (k < 1) {\r\n\t                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t            }\r\n\t            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\t        }\r\n\t    },\r\n\t    Back: {\r\n\t        In: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        }\r\n\t    },\r\n\t    Bounce: {\r\n\t        In: function (k) {\r\n\t            return 1 - exports.EASING.Bounce.Out(1 - k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return exports.EASING.Bounce.In(k * 2) * 0.5;\r\n\t            }\r\n\t            return exports.EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (AXIS_RANGE_TYPE) {\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\"; // TODO: AXIS_RANGE_TYPE.ALL\r\n\t})(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\r\n\tvar AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\r\n\t;\r\n\t(function (AXIS_TYPE) {\r\n\t    AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\r\n\t    AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\r\n\t})(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\r\n\tvar AXIS_TYPE = exports.AXIS_TYPE;\r\n\t(function (AXIS_DATA_TYPE) {\r\n\t    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\r\n\t    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\r\n\t})(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\r\n\tvar AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\r\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * base class for all widgets\r\n\t * each widget must have widgetName static property\r\n\t */\r\n\tvar ChartWidget = (function () {\r\n\t    function ChartWidget() {\r\n\t        this.unbindList = [];\r\n\t    }\r\n\t    ChartWidget.prototype.setupChart = function (chart) {\r\n\t        this.chart = chart;\r\n\t    };\r\n\t    ChartWidget.prototype.bindEvent = function () {\r\n\t        var args = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            args[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        var unbindList = [];\r\n\t        if (!Array.isArray(args[0])) {\r\n\t            unbindList.push(args[0]);\r\n\t        }\r\n\t        else {\r\n\t            unbindList.push.apply(unbindList, (args));\r\n\t        }\r\n\t        (_a = this.unbindList).push.apply(_a, unbindList);\r\n\t        var _a;\r\n\t    };\r\n\t    ChartWidget.prototype.unbindEvents = function () {\r\n\t        this.unbindList.forEach(function (unbindEvent) { return unbindEvent(); });\r\n\t        this.unbindList.length = 0;\r\n\t    };\r\n\t    ChartWidget.widgetName = '';\r\n\t    return ChartWidget;\r\n\t}());\r\n\texports.ChartWidget = ChartWidget;\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Widget_1 = __webpack_require__(30);\r\n\tvar GridWidget_1 = __webpack_require__(32);\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar interfaces_1 = __webpack_require__(29);\r\n\tvar Color_1 = __webpack_require__(33);\r\n\t/**\r\n\t * widget for drawing axis\r\n\t */\r\n\tvar AxisWidget = (function (_super) {\r\n\t    __extends(AxisWidget, _super);\r\n\t    function AxisWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isDestroyed = false;\r\n\t    }\r\n\t    AxisWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisXObject = new Object3D();\r\n\t        this.axisYObject = new Object3D();\r\n\t        this.object3D.add(this.axisXObject);\r\n\t        this.object3D.add(this.axisYObject);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t        // canvas drawing is expensive operation, so when we scroll, redraw must be called only once per second\r\n\t        this.updateAxisXRequest = Utils_1.Utils.throttle(function () { return _this.updateAxis(interfaces_1.AXIS_TYPE.X); }, 1000);\r\n\t        this.onScrollChange(this.chart.interpolatedViewport.params.scrollX, this.chart.interpolatedViewport.params.scrollY);\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chart;\r\n\t        this.bindEvent(state.interpolatedViewport.onInterpolation(function (options) {\r\n\t            _this.onScrollChange(options.scrollX, options.scrollY);\r\n\t        }), state.interpolatedViewport.onZoomInterpolation(function (options) { _this.onZoomFrame(options); }), state.onDestroy(function () { return _this.onDestroy(); }), state.onResize(function () { return _this.onResize(); }));\r\n\t    };\r\n\t    AxisWidget.prototype.onDestroy = function () {\r\n\t        this.isDestroyed = true;\r\n\t        this.unbindEvents();\r\n\t    };\r\n\t    AxisWidget.prototype.onScrollChange = function (x, y) {\r\n\t        if (y != void 0) {\r\n\t            this.axisYObject.position.y = y;\r\n\t            this.axisXObject.position.y = y;\r\n\t        }\r\n\t        if (x != void 0) {\r\n\t            this.axisYObject.position.x = x;\r\n\t            this.updateAxisXRequest();\r\n\t        }\r\n\t    };\r\n\t    AxisWidget.prototype.onResize = function () {\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t    };\r\n\t    AxisWidget.prototype.setupAxis = function (orientation) {\r\n\t        var _this = this;\r\n\t        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\r\n\t        var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\r\n\t        var canvasWidth = 0, canvasHeight = 0;\r\n\t        var axisOptions;\r\n\t        // clean meshes\r\n\t        if (isXAxis) {\r\n\t            this.axisXObject.traverse(function (obj) { return _this.axisXObject.remove(obj); });\r\n\t            canvasWidth = visibleWidth * 3;\r\n\t            canvasHeight = 50;\r\n\t            axisOptions = this.chart.state.xAxis;\r\n\t        }\r\n\t        else {\r\n\t            this.axisYObject.traverse(function (obj) { return _this.axisYObject.remove(obj); });\r\n\t            canvasWidth = 50;\r\n\t            canvasHeight = visibleHeight * 3;\r\n\t            axisOptions = this.chart.state.yAxis;\r\n\t        }\r\n\t        var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function (ctx) {\r\n\t            var color = new Color_1.Color(axisOptions.color);\r\n\t            ctx.beginPath();\r\n\t            ctx.font = _this.chart.state.font.m;\r\n\t            ctx.fillStyle = color.rgbaStr;\r\n\t            ctx.strokeStyle = color.rgbaStr;\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide });\r\n\t        material.transparent = true;\r\n\t        //var material = new THREE.MeshBasicMaterial( {color: 0xFF00FF, side: THREE.DoubleSide} );\r\n\t        var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\r\n\t        if (isXAxis) {\r\n\t            axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\r\n\t            this.axisXObject.add(axisMesh);\r\n\t        }\r\n\t        else {\r\n\t            axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\r\n\t            this.axisYObject.add(axisMesh);\r\n\t        }\r\n\t        this.updateAxis(orientation);\r\n\t    };\r\n\t    AxisWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisWidget.prototype.updateAxis = function (orientation) {\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\r\n\t        var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\r\n\t        var _b = this.chart.interpolatedViewport.params, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\r\n\t        var axisOptions;\r\n\t        var axisMesh;\r\n\t        var axisGridParams;\r\n\t        if (isXAxis) {\r\n\t            axisMesh = this.axisXObject.children[0];\r\n\t            axisOptions = this.chart.state.xAxis;\r\n\t            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\r\n\t        }\r\n\t        else {\r\n\t            axisMesh = this.axisYObject.children[0];\r\n\t            axisOptions = this.chart.state.yAxis;\r\n\t            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\r\n\t        }\r\n\t        var geometry = axisMesh.geometry;\r\n\t        var canvasWidth = geometry.parameters.width;\r\n\t        var canvasHeight = geometry.parameters.height;\r\n\t        if (isXAxis) {\r\n\t            axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\r\n\t        }\r\n\t        var texture = axisMesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\t        // TODO: draw text and lines in different loops\r\n\t        var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\r\n\t        var startVal = axisGridParams.start - edgeOffset;\r\n\t        var endVal = axisGridParams.end + edgeOffset;\r\n\t        ctx.beginPath();\r\n\t        for (var val = startVal; val <= endVal; val += axisGridParams.step) {\r\n\t            var displayedValue = '';\r\n\t            if (isXAxis) {\r\n\t                var pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\r\n\t                ctx.textAlign = \"center\";\r\n\t                // uncomment for dots\r\n\t                // ctx.moveTo(pxVal + 0.5, canvasHeight);\r\n\t                // ctx.lineTo(pxVal + 0.5, canvasHeight - 5);\r\n\t                if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\r\n\t                    displayedValue = AxisWidget.getDateStr(val, axisGridParams);\r\n\t                }\r\n\t                else {\r\n\t                    displayedValue = Number(val.toFixed(14)).toString();\r\n\t                }\r\n\t                ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\r\n\t            }\r\n\t            else {\r\n\t                var pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\r\n\t                ctx.textAlign = \"right\";\r\n\t                // uncomment for dots\r\n\t                // ctx.moveTo(canvasWidth, pxVal + 0.5);\r\n\t                // ctx.lineTo(canvasWidth - 5, pxVal + 0.5);\r\n\t                displayedValue = Number(val.toFixed(14)).toString();\r\n\t                ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\r\n\t            }\r\n\t            ctx.stroke();\r\n\t        }\r\n\t        // uncomment to preview canvas borders\r\n\t        // ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n\t        ctx.stroke();\r\n\t        ctx.closePath();\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisWidget.prototype.onZoomFrame = function (options) {\r\n\t        if (options.zoomX) {\r\n\t            this.updateAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        }\r\n\t        if (options.zoomY) {\r\n\t            this.updateAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t        }\r\n\t    };\r\n\t    // private temporaryHideAxis(orientation: AXIS_TYPE) {\r\n\t    // \tvar isXAxis = orientation == AXIS_TYPE.X;\r\n\t    // \tvar timeoutId = setTimeout(() => {\r\n\t    // \t\t\tthis.showAxis(orientation);\r\n\t    // \t}, 200);\r\n\t    //\r\n\t    // \tif (isXAxis) {\r\n\t    // \t\t(this.axisXObject.children[0] as Mesh).material.opacity = 0;\r\n\t    // \t\tclearTimeout(this.showAxisXTimeout);\r\n\t    // \t\tthis.showAxisXTimeout =\ttimeoutId;\r\n\t    // \t} else {\r\n\t    // \t\tclearTimeout(this.showAxisYTimeout);\r\n\t    // \t\t(this.axisYObject.children[0] as Mesh).material.opacity = 0;\r\n\t    // \t\tthis.showAxisYTimeout = timeoutId;\r\n\t    // \t}\r\n\t    // }\r\n\t    // private showAxis(orientation: AXIS_TYPE) {\r\n\t    // \tvar isXAxis = orientation == AXIS_TYPE.X;\r\n\t    // \tvar material: MeshBasicMaterial;\r\n\t    // \tif (isXAxis) {\r\n\t    // \t\tmaterial = (this.axisXObject.children[0] as Mesh).material as MeshBasicMaterial;\r\n\t    // \t} else {\r\n\t    // \t\tmaterial = (this.axisYObject.children[0] as Mesh).material as MeshBasicMaterial;\r\n\t    // \t}\r\n\t    // \tthis.updateAxis(orientation);\r\n\t    // \tTweenLite.to(material, 0.3, {opacity: 1});\r\n\t    // }\r\n\t    AxisWidget.getDateStr = function (timestamp, gridParams) {\r\n\t        var sec = 1000;\r\n\t        var min = sec * 60;\r\n\t        var hour = min * 60;\r\n\t        var day = hour * 60;\r\n\t        var step = gridParams.step;\r\n\t        var d = new Date(timestamp);\r\n\t        var tf = function (num) { return Utils_1.Utils.toFixed(num, 2); };\r\n\t        return tf(d.getHours()) + ':' + tf(d.getMinutes()) + ':' + tf(d.getSeconds());\r\n\t    };\r\n\t    AxisWidget.widgetName = 'Axis';\r\n\t    return AxisWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.AxisWidget = AxisWidget;\r\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Widget_1 = __webpack_require__(30);\r\n\tvar LineSegments = THREE.LineSegments;\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar Color_1 = __webpack_require__(33);\r\n\t/**\r\n\t * widget for drawing state grid\r\n\t */\r\n\tvar GridWidget = (function (_super) {\r\n\t    __extends(GridWidget, _super);\r\n\t    function GridWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isDestroyed = false;\r\n\t    }\r\n\t    GridWidget.prototype.onReadyHandler = function () {\r\n\t        var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\r\n\t        this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\r\n\t        this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\r\n\t        this.initGrid();\r\n\t        this.updateGrid();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    GridWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        // grid is bigger then interpolatedViewport, so it's no need to update it on each scroll event\r\n\t        var updateGridThrottled = Utils_1.Utils.throttle(function () { return _this.updateGrid(); }, 1000);\r\n\t        this.bindEvent(this.chart.onScroll(function () { return updateGridThrottled(); }), this.chart.interpolatedViewport.onZoomInterpolation(function (options) {\r\n\t            updateGridThrottled();\r\n\t            _this.onZoomFrame(options);\r\n\t        }), this.chart.onDestroy(function () {\r\n\t            _this.isDestroyed = true;\r\n\t            _this.unbindEvents();\r\n\t        }), this.chart.onResize(function () {\r\n\t            _this.updateGrid();\r\n\t        }));\r\n\t    };\r\n\t    GridWidget.prototype.initGrid = function () {\r\n\t        var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\r\n\t        var geometry = new THREE.Geometry();\r\n\t        var material = new THREE.LineBasicMaterial({ linewidth: 1, color: color.value, opacity: color.a, transparent: true });\r\n\t        var xLinesCount = this.gridSizeH;\r\n\t        var yLinesCount = this.gridSizeV;\r\n\t        while (xLinesCount--)\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t        while (yLinesCount--)\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t        this.lineSegments = new LineSegments(geometry, material);\r\n\t        this.lineSegments.position.setZ(-1);\r\n\t        this.lineSegments.frustumCulled = false;\r\n\t    };\r\n\t    GridWidget.prototype.updateGrid = function () {\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\r\n\t        var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\r\n\t        var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\r\n\t        var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\r\n\t        var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\r\n\t        var gridScrollXVal = scrollXInSegments * axisXGrid.step;\r\n\t        var gridScrollYVal = scrollYInSegments * axisYGrid.step;\r\n\t        var startXVal = axisXGrid.start + gridScrollXVal;\r\n\t        var startYVal = axisYGrid.start + gridScrollYVal;\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        var vertices = geometry.vertices;\r\n\t        var lineInd = 0;\r\n\t        for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\r\n\t            var value = startXVal + i * axisXGrid.step;\r\n\t            var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\r\n\t            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\r\n\t            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\r\n\t            lineInd++;\r\n\t        }\r\n\t        for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\r\n\t            var value = startYVal + i * axisYGrid.step;\r\n\t            var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\r\n\t            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\r\n\t            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\r\n\t            lineInd++;\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t        this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\r\n\t    };\r\n\t    GridWidget.prototype.getHorizontalLineSegment = function (yVal, scrollXVal, scrollYVal) {\r\n\t        var chartState = this.chart;\r\n\t        var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\r\n\t        var widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\r\n\t        return [\r\n\t            new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0),\r\n\t            new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0)\r\n\t        ];\r\n\t    };\r\n\t    GridWidget.prototype.getVerticalLineSegment = function (xVal, scrollXVal, scrollYVal) {\r\n\t        var chart = this.chart;\r\n\t        var localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\r\n\t        var heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\r\n\t        return [\r\n\t            new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0),\r\n\t            new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0)\r\n\t        ];\r\n\t    };\r\n\t    GridWidget.prototype.onZoomFrame = function (options) {\r\n\t        var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\r\n\t        if (options.zoomX)\r\n\t            this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\r\n\t    };\r\n\t    // TODO: move this code to core\r\n\t    GridWidget.getGridParamsForAxis = function (axisOptions, axisWidth, zoom) {\r\n\t        var axisRange = axisOptions.range;\r\n\t        var from = axisRange.from;\r\n\t        var to = axisRange.to;\r\n\t        var axisLength = to - from;\r\n\t        var gridStep = 0;\r\n\t        var gridStepInPixels = 0;\r\n\t        var minGridStepInPixels = axisOptions.grid.minSizePx;\r\n\t        var axisLengthStr = String(axisLength);\r\n\t        var axisLengthPointPosition = axisLengthStr.indexOf('.');\r\n\t        var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\r\n\t        var gridStepFound = false;\r\n\t        var digitPos = 0;\r\n\t        while (!gridStepFound) {\r\n\t            var power = intPartLength - digitPos - 1;\r\n\t            var multiplier = (Math.pow(10, power) || 1);\r\n\t            var dividers = [1, 2, 5];\r\n\t            for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\r\n\t                var nextGridStep = multiplier / dividers[dividerInd];\r\n\t                var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\r\n\t                if (nextGridStepInPixels >= minGridStepInPixels) {\r\n\t                    gridStep = nextGridStep;\r\n\t                    gridStepInPixels = nextGridStepInPixels;\r\n\t                }\r\n\t                else {\r\n\t                    gridStepFound = true;\r\n\t                    if (gridStep === 0) {\r\n\t                        gridStep = nextGridStep;\r\n\t                        gridStepInPixels = nextGridStepInPixels;\r\n\t                    }\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (!gridStepFound)\r\n\t                digitPos++;\r\n\t        }\r\n\t        var gridStart = Math.floor(from / gridStep) * gridStep;\r\n\t        var gridEnd = Math.floor(to / gridStep) * gridStep;\r\n\t        return {\r\n\t            start: gridStart,\r\n\t            end: gridEnd,\r\n\t            step: gridStep,\r\n\t            stepInPx: gridStepInPixels,\r\n\t            length: gridEnd - gridStart,\r\n\t            segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\r\n\t        };\r\n\t    };\r\n\t    GridWidget.prototype.getObject3D = function () {\r\n\t        return this.lineSegments;\r\n\t    };\r\n\t    GridWidget.widgetName = 'Grid';\r\n\t    return GridWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.GridWidget = GridWidget;\r\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Color = (function () {\r\n\t    function Color(color) {\r\n\t        this.set(color);\r\n\t    }\r\n\t    /**!\r\n\t     * @preserve $.parseColor\r\n\t     * Copyright 2011 THEtheChad Elliott\r\n\t     * Released under the MIT and GPL licenses.\r\n\t     */\r\n\t    /**\r\n\t     * Parse hex/rgb{a} color syntax.\r\n\t     * @input string\r\n\t     * @returns array [r,g,b{,o}]\r\n\t     */\r\n\t    Color.parseColor = function (color) {\r\n\t        var cache, p = parseInt // Use p as a byte saving reference to parseInt\r\n\t        , color = color.replace(/\\s\\s*/g, ''); //var\r\n\t        // Checks for 6 digit hex and converts string to integer\r\n\t        if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\r\n\t        else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\r\n\t            cache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\r\n\t        else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\r\n\t        else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3], +cache[4]];\r\n\t        else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3]];\r\n\t        else\r\n\t            throw Error(color + ' is not supported by parseColor');\r\n\t        // Performs RGBA conversion by default\r\n\t        isNaN(cache[3]) && (cache[3] = 1);\r\n\t        return cache;\r\n\t        // Adds or removes 4th xVal based on rgba support\r\n\t        // Support is flipped twice to prevent erros if\r\n\t        // it's not defined\r\n\t        //return cache.slice(0,3 + !!$.support.rgba);\r\n\t    };\r\n\t    Color.numberToHexStr = function (value) {\r\n\t        var result = value.toString(16);\r\n\t        return '#' + '0'.repeat(6 - result.length) + result;\r\n\t    };\r\n\t    Color.prototype.set = function (color) {\r\n\t        if (typeof color == 'number')\r\n\t            color = Color.numberToHexStr(color);\r\n\t        var colorStr = color;\r\n\t        var rgba = Color.parseColor(colorStr);\r\n\t        this.r = rgba[0];\r\n\t        this.g = rgba[1];\r\n\t        this.b = rgba[2];\r\n\t        this.a = rgba[3];\r\n\t        this.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\r\n\t        this.hexStr = Color.numberToHexStr(this.value);\r\n\t        this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\r\n\t    };\r\n\t    Color.prototype.getTransparent = function (opacity) {\r\n\t        return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\r\n\t    };\r\n\t    return Color;\r\n\t}());\r\n\texports.Color = Color;\r\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar TrendsWidget_1 = __webpack_require__(35);\r\n\tvar Color_1 = __webpack_require__(33);\r\n\tvar TrendsGradientWidget = (function (_super) {\r\n\t    __extends(TrendsGradientWidget, _super);\r\n\t    function TrendsGradientWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsGradientWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendGradient;\r\n\t    };\r\n\t    TrendsGradientWidget.widgetName = \"TrendsGradient\";\r\n\t    return TrendsGradientWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsGradientWidget = TrendsGradientWidget;\r\n\tvar TrendGradient = (function (_super) {\r\n\t    __extends(TrendGradient, _super);\r\n\t    function TrendGradient(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        this.visibleSegmentsCnt = 0;\r\n\t        this.trend = chartState.trendsManager.getTrend(trendName);\r\n\t        this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\r\n\t        this.initGradient();\r\n\t        this.updateSegments();\r\n\t    }\r\n\t    TrendGradient.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBackground;\r\n\t    };\r\n\t    TrendGradient.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            // TODO: optimize updateSegments for onDisplayedRangeChanged\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.chart.onZoom(function () {\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t    };\r\n\t    TrendGradient.prototype.getObject3D = function () {\r\n\t        return this.gradient;\r\n\t    };\r\n\t    TrendGradient.prototype.initGradient = function () {\r\n\t        var geometry = new Geometry();\r\n\t        for (var i = 0; i < this.segmentsIds.length; i++) {\r\n\t            geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\r\n\t            var ind = i * 4;\r\n\t            // gradient segment scheme\r\n\t            //\r\n\t            // vert0 +---+ vert3\r\n\t            //       |\\  |\r\n\t            // face1 | \\ | face2\r\n\t            // \t     |  \\|\r\n\t            // vert1 +---+ vert2\r\n\t            geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\r\n\t        }\r\n\t        var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\r\n\t        this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color: color.value, transparent: true, opacity: color.a }));\r\n\t        var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.gradient.frustumCulled = false;\r\n\t    };\r\n\t    TrendGradient.prototype.onZoomFrame = function (options) {\r\n\t        var state = this.chart.state;\r\n\t        var scaleXFactor = state.xAxis.range.scaleFactor;\r\n\t        var scaleYFactor = state.yAxis.range.scaleFactor;\r\n\t        var currentScale = this.gradient.scale;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendGradient.prototype.onSegmentsAnimate = function (trendSegmentsManager) {\r\n\t        var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\r\n\t        for (var i = 0; i < this.visibleSegmentsCnt; i++) {\r\n\t            var segmentId = this.segmentsIds[i];\r\n\t            if (!animatedSegmentsIds.includes(segmentId))\r\n\t                continue;\r\n\t            this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\r\n\t        }\r\n\t        this.gradient.geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendGradient.prototype.updateSegments = function () {\r\n\t        var geometry = this.gradient.geometry;\r\n\t        var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\r\n\t        var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\r\n\t        this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\r\n\t        var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\r\n\t        if (segmentsToProcessCnt > this.segmentsIds.length) {\r\n\t            Utils_1.Utils.error(TrendsGradientWidget.widgetName + ': MAX_SEGMENTS reached');\r\n\t        }\r\n\t        // setup visible segments and collapse invisible\r\n\t        for (var i = 0; i < segmentsToProcessCnt; i++) {\r\n\t            if (segmentInd <= lastDisplayedSegmentInd) {\r\n\t                var segment = trendSegments[segmentInd];\r\n\t                this.setupSegmentVertices(i, segment.currentAnimationState);\r\n\t                this.segmentsIds[i] = segment.id;\r\n\t                segmentInd++;\r\n\t            }\r\n\t            else {\r\n\t                this.setupSegmentVertices(i);\r\n\t            }\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    /**\r\n\t     * setup gradient segment by segmentState\r\n\t     * if segmentState is undefined, then collapse vertices to 0,0,0\r\n\t     */\r\n\t    TrendGradient.prototype.setupSegmentVertices = function (segmentInd, segmentState) {\r\n\t        var gradientSegmentInd = segmentInd * 4;\r\n\t        var vertices = this.gradient.geometry.vertices;\r\n\t        var topLeft = vertices[gradientSegmentInd];\r\n\t        var bottomLeft = vertices[gradientSegmentInd + 1];\r\n\t        var bottomRight = vertices[gradientSegmentInd + 2];\r\n\t        var topRight = vertices[gradientSegmentInd + 3];\r\n\t        var screenHeightVal = Math.max(this.chart.viewport.pxToValByYAxis(this.chart.state.height), this.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height));\r\n\t        if (segmentState) {\r\n\t            var startX = this.toLocalX(segmentState.startXVal);\r\n\t            var startY = this.toLocalY(segmentState.startYVal);\r\n\t            var endX = this.toLocalX(segmentState.endXVal);\r\n\t            var endY = this.toLocalY(segmentState.endYVal);\r\n\t            topLeft.set(startX, startY, 0);\r\n\t            topRight.set(endX, endY, 0);\r\n\t            bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\r\n\t            bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\r\n\t        }\r\n\t        else {\r\n\t            topLeft.set(0, 0, 0);\r\n\t            topRight.set(0, 0, 0);\r\n\t            bottomLeft.set(0, 0, 0);\r\n\t            bottomRight.set(0, 0, 0);\r\n\t        }\r\n\t    };\r\n\t    TrendGradient.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chart.state.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendGradient.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chart.state.yAxis.range.zeroVal;\r\n\t    };\r\n\t    return TrendGradient;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendGradient = TrendGradient;\r\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Widget_1 = __webpack_require__(30);\r\n\tvar Object3D = THREE.Object3D;\r\n\t/**\r\n\t * abstract manager class for all trends widgets\r\n\t */\r\n\tvar TrendsWidget = (function (_super) {\r\n\t    __extends(TrendsWidget, _super);\r\n\t    function TrendsWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.widgets = {};\r\n\t    }\r\n\t    TrendsWidget.prototype.onReadyHandler = function () {\r\n\t        this.object3D = new Object3D();\r\n\t        this.onTrendsChange();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chart;\r\n\t        state.onTrendsChange(function () { return _this.onTrendsChange(); });\r\n\t        state.onTrendChange(function (trendName, changedOptions, newData) {\r\n\t            _this.onTrendChange(trendName, changedOptions, newData);\r\n\t        });\r\n\t    };\r\n\t    TrendsWidget.prototype.onTrendsChange = function () {\r\n\t        var trendsOptions = this.chart.state.trends;\r\n\t        var TrendWidgetClass = this.getTrendWidgetClass();\r\n\t        for (var trendName in trendsOptions) {\r\n\t            var trendOptions = trendsOptions[trendName];\r\n\t            var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\r\n\t            if (widgetCanBeEnabled && !this.widgets[trendName]) {\r\n\t                this.createTrendWidget(trendName);\r\n\t            }\r\n\t            else if (!widgetCanBeEnabled && this.widgets[trendName]) {\r\n\t                this.destroyTrendWidget(trendName);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TrendsWidget.prototype.onTrendChange = function (trendName, changedOptions, newData) {\r\n\t        var widget = this.widgets[trendName];\r\n\t        if (!widget)\r\n\t            return;\r\n\t        widget.onTrendChange(changedOptions);\r\n\t        if (newData) {\r\n\t            var data = this.chart.getTrend(trendName).getData();\r\n\t            var isAppend = (!data.length || data[0].xVal < newData[0].xVal);\r\n\t            isAppend ? widget.appendData(newData) : widget.prependData(newData);\r\n\t        }\r\n\t    };\r\n\t    TrendsWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendsWidget.prototype.createTrendWidget = function (trendName) {\r\n\t        var WidgetConstructor = this.getTrendWidgetClass();\r\n\t        var widget = new WidgetConstructor(this.chart, trendName);\r\n\t        this.widgets[trendName] = widget;\r\n\t        var widgetObject = widget.getObject3D();\r\n\t        widgetObject.name = trendName;\r\n\t        this.object3D.add(widget.getObject3D());\r\n\t    };\r\n\t    TrendsWidget.prototype.destroyTrendWidget = function (trendName) {\r\n\t        this.widgets[trendName].onDestroy();\r\n\t        delete this.widgets[trendName];\r\n\t        var widgetObject = this.object3D.getObjectByName(trendName);\r\n\t        this.object3D.remove(widgetObject);\r\n\t    };\r\n\t    return TrendsWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.TrendsWidget = TrendsWidget;\r\n\t/**\r\n\t * based class for all trends widgets\r\n\t */\r\n\tvar TrendWidget = (function () {\r\n\t    function TrendWidget(chart, trendName) {\r\n\t        this.chart = chart;\r\n\t        this.trendName = trendName;\r\n\t        this.unbindList = [];\r\n\t        this.trend = chart.trendsManager.getTrend(trendName);\r\n\t        this.chart = chart;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendWidget.widgetIsEnabled = function (trendOptions, chart) {\r\n\t        return trendOptions.enabled;\r\n\t    };\r\n\t    TrendWidget.prototype.appendData = function (newData) { };\r\n\t    ;\r\n\t    TrendWidget.prototype.prependData = function (newData) { };\r\n\t    ;\r\n\t    TrendWidget.prototype.onTrendChange = function (changedOptions) { };\r\n\t    TrendWidget.prototype.onDestroy = function () {\r\n\t        for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\r\n\t            var unsubscriber = _a[_i];\r\n\t            unsubscriber();\r\n\t        }\r\n\t    };\r\n\t    TrendWidget.prototype.onSegmentsAnimate = function (segments) {\r\n\t    };\r\n\t    TrendWidget.prototype.onZoomFrame = function (options) {\r\n\t    };\r\n\t    TrendWidget.prototype.onTransformationFrame = function (options) {\r\n\t    };\r\n\t    TrendWidget.prototype.onZoom = function () {\r\n\t    };\r\n\t    TrendWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function (trendPoints) { return _this.onSegmentsAnimate(trendPoints); }));\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function (options) { return _this.onTransformationFrame(options); }));\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(function (options) { return _this.onZoomFrame(options); }));\r\n\t        this.bindEvent(this.chart.onZoom(function () { return _this.onZoom(); }));\r\n\t    };\r\n\t    ;\r\n\t    TrendWidget.prototype.bindEvent = function (unbind) {\r\n\t        this.unbindList.push(unbind);\r\n\t    };\r\n\t    return TrendWidget;\r\n\t}());\r\n\texports.TrendWidget = TrendWidget;\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar LineBasicMaterial = THREE.LineBasicMaterial;\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar TrendsWidget_1 = __webpack_require__(35);\r\n\tvar LineSegments = THREE.LineSegments;\r\n\tvar Trend_1 = __webpack_require__(22);\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\t/**\r\n\t * widget for drawing trends lines\r\n\t */\r\n\tvar TrendsLineWidget = (function (_super) {\r\n\t    __extends(TrendsLineWidget, _super);\r\n\t    function TrendsLineWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLineWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLine;\r\n\t    };\r\n\t    TrendsLineWidget.widgetName = \"TrendsLine\";\r\n\t    return TrendsLineWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsLineWidget = TrendsLineWidget;\r\n\tvar TrendLine = (function (_super) {\r\n\t    __extends(TrendLine, _super);\r\n\t    function TrendLine(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        // contains indexes of free segments\r\n\t        this.freeSegmentsInds = [];\r\n\t        // contains segments to display\r\n\t        this.displayedSegments = {};\r\n\t        var options = this.trend.getOptions();\r\n\t        this.material = new LineBasicMaterial({ color: options.lineColor, linewidth: options.lineWidth });\r\n\t        this.initLine();\r\n\t    }\r\n\t    TrendLine.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendLine.prototype.getObject3D = function () {\r\n\t        return this.lineSegments;\r\n\t    };\r\n\t    TrendLine.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.destroySegments();\r\n\t            _this.setupSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            _this.setupSegments();\r\n\t        }));\r\n\t    };\r\n\t    TrendLine.prototype.initLine = function () {\r\n\t        var geometry = new Geometry();\r\n\t        var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.lineSegments = new LineSegments(geometry, this.material);\r\n\t        this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.lineSegments.frustumCulled = false;\r\n\t        for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t            this.freeSegmentsInds.push(i);\r\n\t        }\r\n\t        this.vertices = geometry.vertices;\r\n\t        this.setupSegments();\r\n\t    };\r\n\t    TrendLine.prototype.setupSegments = function () {\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\r\n\t        for (var segmentId in this.displayedSegments) {\r\n\t            var lineSegment = this.displayedSegments[segmentId];\r\n\t            var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\r\n\t            var segmentIsNotDisplayed = (segment_1.startXVal < firstDisplayedSegment.startXVal ||\r\n\t                segment_1.endXVal > lastDisplayedSegment.endXVal);\r\n\t            if (segmentIsNotDisplayed)\r\n\t                this.destroySegment(Number(segmentId));\r\n\t        }\r\n\t        var segment = firstDisplayedSegment;\r\n\t        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\r\n\t            this.setupSegment(segment.id, segment.currentAnimationState);\r\n\t            segment = segment.getNext();\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendLine.prototype.setupSegment = function (segmentId, segmentState) {\r\n\t        var lineSegment = this.displayedSegments[segmentId];\r\n\t        if (!lineSegment) {\r\n\t            if (this.freeSegmentsInds.length == 0)\r\n\t                Utils_1.Utils.error('Max allocated segments reached');\r\n\t            var ind = this.freeSegmentsInds.pop();\r\n\t            lineSegment = this.displayedSegments[segmentId] = { segmentId: segmentId, ind: ind };\r\n\t        }\r\n\t        var segmentInd = lineSegment.ind;\r\n\t        var lineStartVertex = this.vertices[segmentInd * 2];\r\n\t        var lineEndVertex = this.vertices[segmentInd * 2 + 1];\r\n\t        lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\r\n\t        lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\r\n\t    };\r\n\t    TrendLine.prototype.destroySegments = function () {\r\n\t        for (var segmentId in this.displayedSegments)\r\n\t            this.destroySegment(Number(segmentId));\r\n\t    };\r\n\t    TrendLine.prototype.destroySegment = function (segmentId) {\r\n\t        var lineSegment = this.displayedSegments[segmentId];\r\n\t        var lineStartVertex = this.vertices[lineSegment.ind * 2];\r\n\t        var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\r\n\t        lineStartVertex.set(0, 0, 0);\r\n\t        lineEndVertex.set(0, 0, 0);\r\n\t        delete this.displayedSegments[segmentId];\r\n\t        this.freeSegmentsInds.push(lineSegment.ind);\r\n\t    };\r\n\t    TrendLine.prototype.onZoomFrame = function (options) {\r\n\t        var currentScale = this.lineSegments.scale;\r\n\t        var state = this.chart.state;\r\n\t        var scaleXFactor = state.xAxis.range.scaleFactor;\r\n\t        var scaleYFactor = state.yAxis.range.scaleFactor;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendLine.prototype.onSegmentsAnimate = function (trendSegments) {\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\r\n\t            var segmentId = _a[_i];\r\n\t            if (!this.displayedSegments[segmentId])\r\n\t                continue;\r\n\t            this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chart.state.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chart.state.yAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalVec = function (vec) {\r\n\t        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\r\n\t    };\r\n\t    return TrendLine;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendLine = TrendLine;\r\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar TrendsWidget_1 = __webpack_require__(35);\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Line = THREE.Line;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar PlaneGeometry = THREE.PlaneGeometry;\r\n\tvar Trend_1 = __webpack_require__(22);\r\n\tvar LineBasicMaterial = THREE.LineBasicMaterial;\r\n\tvar RISE_COLOR = 0x2CAC40;\r\n\tvar FALL_COLOR = 0xEE5533;\r\n\tvar MARGIN_PERCENT = 0.3;\r\n\tvar MAX_CANDLES = 100;\r\n\t/**\r\n\t * widget for drawing trends candles\r\n\t */\r\n\tvar TrendsCandlesWidget = (function (_super) {\r\n\t    __extends(TrendsCandlesWidget, _super);\r\n\t    function TrendsCandlesWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsCandlesWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendCandlesWidget;\r\n\t    };\r\n\t    TrendsCandlesWidget.widgetName = \"TrendsCandles\";\r\n\t    return TrendsCandlesWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsCandlesWidget = TrendsCandlesWidget;\r\n\tvar TrendCandlesWidget = (function (_super) {\r\n\t    __extends(TrendCandlesWidget, _super);\r\n\t    function TrendCandlesWidget(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        // contains indexes of free candles\r\n\t        this.freeCandlesInds = [];\r\n\t        this.candlesPool = [];\r\n\t        this.candles = {};\r\n\t        this.initObject();\r\n\t    }\r\n\t    TrendCandlesWidget.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.destroyCandles();\r\n\t            _this.setupCandles();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            _this.setupCandles();\r\n\t        }));\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.initObject = function () {\r\n\t        var stateData = this.chart.state;\r\n\t        var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.scaleXFactor = scaleXFactor;\r\n\t        this.scaleYFactor = scaleYFactor;\r\n\t        this.object3D = new Object3D();\r\n\t        this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.object3D.frustumCulled = false;\r\n\t        for (var i = 0; i < MAX_CANDLES; i++)\r\n\t            this.freeCandlesInds.push(i);\r\n\t        this.setupCandles();\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.setupCandles = function () {\r\n\t        // remove invisible\r\n\t        var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\r\n\t        for (var segmentId in this.candles) {\r\n\t            var segment_1 = this.candles[segmentId].segment;\r\n\t            var segmentIsNotDisplayed = (segment_1.startXVal < firstDisplayedSegment.startXVal ||\r\n\t                segment_1.endXVal > lastDisplayedSegment.endXVal);\r\n\t            if (segmentIsNotDisplayed)\r\n\t                this.destroyCandle(Number(segmentId));\r\n\t        }\r\n\t        var segment = firstDisplayedSegment;\r\n\t        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\r\n\t            this.setupCandle(segment.id, segment.currentAnimationState);\r\n\t            segment = segment.getNext();\r\n\t        }\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.destroyCandles = function () {\r\n\t        for (var segmentId in this.candles)\r\n\t            this.destroyCandle(Number(segmentId));\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.destroyCandle = function (segmentId) {\r\n\t        var candle = this.candles[segmentId];\r\n\t        this.object3D.remove(candle.getObject3D());\r\n\t        delete this.candles[segmentId];\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.onZoomFrame = function (options) {\r\n\t        var currentScale = this.object3D.scale;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(this.scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(this.scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.onSegmentsAnimate = function (trendSegments) {\r\n\t        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\r\n\t            var segmentId = _a[_i];\r\n\t            if (!this.candles[segmentId])\r\n\t                continue;\r\n\t            var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\r\n\t            this.setupCandle(segmentId, segmentState);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * create or modify candle\r\n\t     */\r\n\t    TrendCandlesWidget.prototype.setupCandle = function (candleId, segmentState) {\r\n\t        var candleInd = candleId % MAX_CANDLES;\r\n\t        // get candle from candlesPool to avoid creating new Objects by performance reasons\r\n\t        var candle = this.candlesPool[candleInd];\r\n\t        if (!candle) {\r\n\t            candle = this.candlesPool[candleInd] = new CandleWidget();\r\n\t        }\r\n\t        if (!this.candles[candleId]) {\r\n\t            this.candles[candleId] = candle;\r\n\t            this.object3D.add(candle.getObject3D());\r\n\t        }\r\n\t        candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\r\n\t        candle.setSegment(segmentState);\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chart.state.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chart.state.yAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalVec = function (vec) {\r\n\t        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\r\n\t    };\r\n\t    return TrendCandlesWidget;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendCandlesWidget = TrendCandlesWidget;\r\n\tvar CandleWidget = (function () {\r\n\t    function CandleWidget() {\r\n\t        this.initObject();\r\n\t    }\r\n\t    CandleWidget.prototype.getObject3D = function () {\r\n\t        return this.rect;\r\n\t    };\r\n\t    CandleWidget.prototype.setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\r\n\t        // update rect\r\n\t        var geometry = this.rect.geometry;\r\n\t        var material = this.rect.material;\r\n\t        var width = segment.endXVal - segment.startXVal;\r\n\t        width -= width * MARGIN_PERCENT;\r\n\t        var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\r\n\t        var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\r\n\t        leftTop.set(-width / 2, height / 2, 0);\r\n\t        rightTop.set(width / 2, height / 2, 0);\r\n\t        leftBottom.set(-width / 2, -height / 2, 0);\r\n\t        rightBottom.set(width / 2, -height / 2, 0);\r\n\t        // // prevent to draw bars with height < 1px\r\n\t        // if (Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\r\n\t        // \tleftBottom.setY(leftBottom.y + 1);\r\n\t        // \trightBottom.setY(rightBottom.y + 1);\r\n\t        // }\r\n\t        material.color.set(color);\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t        // update lines\r\n\t        var vLineGeometry = this.vLine.geometry;\r\n\t        var vLineMaterial = this.vLine.material;\r\n\t        var lineTop = segment.maxYVal - segment.yVal;\r\n\t        var lineBottom = segment.minYVal - segment.yVal;\r\n\t        vLineGeometry.vertices[0].set(0, lineTop, 0);\r\n\t        vLineGeometry.vertices[1].set(0, lineBottom, 0);\r\n\t        vLineMaterial.color.set(color);\r\n\t        vLineGeometry.verticesNeedUpdate = true;\r\n\t        var hLineGeometry = this.hLine.geometry;\r\n\t        var hLineMaterial = this.hLine.material;\r\n\t        var lineLeft = (-width) / 2;\r\n\t        var lineRight = width / 2;\r\n\t        hLineGeometry.vertices[0].set(lineLeft, 0, 0);\r\n\t        hLineGeometry.vertices[1].set(lineRight, 0, 0);\r\n\t        hLineMaterial.color.set(color);\r\n\t        hLineGeometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    CandleWidget.prototype.initObject = function () {\r\n\t        this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({ side: THREE.DoubleSide }));\r\n\t        var vLineGeometry = new Geometry();\r\n\t        var hLineGeometry = new Geometry();\r\n\t        vLineGeometry.vertices.push(new Vector3(), new Vector3);\r\n\t        hLineGeometry.vertices.push(new Vector3(), new Vector3);\r\n\t        this.vLine = new Line(vLineGeometry, new LineBasicMaterial({ linewidth: 1 }));\r\n\t        this.hLine = new Line(hLineGeometry, new LineBasicMaterial({ linewidth: 1 }));\r\n\t        this.rect.add(this.vLine);\r\n\t        this.rect.add(this.hLine);\r\n\t    };\r\n\t    return CandleWidget;\r\n\t}());\r\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(18);\r\n\tvar EventEmmiter_1 = __webpack_require__(20);\r\n\tvar UniqCollectionItem = (function () {\r\n\t    function UniqCollectionItem() {\r\n\t    }\r\n\t    UniqCollectionItem.prototype.getId = function () {\r\n\t        return this._id;\r\n\t    };\r\n\t    return UniqCollectionItem;\r\n\t}());\r\n\texports.UniqCollectionItem = UniqCollectionItem;\r\n\tvar ID_KEY = '_id';\r\n\tvar EVENTS = {\r\n\t    CREATE: 'create',\r\n\t    UPDATE: 'update',\r\n\t    REMOVE: 'remove'\r\n\t};\r\n\t/**\r\n\t * useful for patching collections with id key\r\n\t */\r\n\tvar UniqCollection = (function () {\r\n\t    function UniqCollection(options) {\r\n\t        this.items = [];\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.options = options;\r\n\t    }\r\n\t    UniqCollection.prototype.patch = function (models) {\r\n\t        var options = this.options;\r\n\t        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\r\n\t            var model = models_1[_i];\r\n\t            var id = model[ID_KEY];\r\n\t            if (!id)\r\n\t                Utils_1.Utils.error('Collection item without id detected');\r\n\t            var ind = this.getItemInd(id);\r\n\t            var item = this.items[ind];\r\n\t            var justCreated = false;\r\n\t            // create\r\n\t            if (!item) {\r\n\t                justCreated = true;\r\n\t                item = options.createInstance(model);\r\n\t                this.items.push(item);\r\n\t            }\r\n\t            // update\r\n\t            if (Object.keys(model).length > 1) {\r\n\t                var prevProps = {};\r\n\t                Utils_1.Utils.copyProps(item, prevProps, model);\r\n\t                Utils_1.Utils.patch(item, model);\r\n\t                justCreated && this.ee.emit(EVENTS.CREATE, item);\r\n\t                this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\r\n\t            }\r\n\t            else {\r\n\t                this.items.splice(ind, 1);\r\n\t                this.ee.emit(EVENTS.REMOVE, item);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    UniqCollection.prototype.getItem = function (id) {\r\n\t        return this.items[this.getItemInd(id)];\r\n\t    };\r\n\t    UniqCollection.prototype.getLast = function () {\r\n\t        return this.items[this.items.length - 1];\r\n\t    };\r\n\t    UniqCollection.prototype.forEach = function (cb) {\r\n\t        for (var key in this.items)\r\n\t            cb(this.items[key]);\r\n\t    };\r\n\t    UniqCollection.prototype.filter = function (cb) {\r\n\t        var result = [];\r\n\t        this.forEach(function (item) { return cb(item) && result.push(item); });\r\n\t        return result;\r\n\t    };\r\n\t    UniqCollection.prototype.onCreate = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.CREATE, cb);\r\n\t    };\r\n\t    UniqCollection.prototype.onUpdate = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.UPDATE, cb);\r\n\t    };\r\n\t    UniqCollection.prototype.onRemove = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.REMOVE, cb);\r\n\t    };\r\n\t    UniqCollection.prototype.getItemInd = function (id) {\r\n\t        return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\r\n\t    };\r\n\t    return UniqCollection;\r\n\t}());\r\n\texports.UniqCollection = UniqCollection;\r\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(31));\r\n\t__export(__webpack_require__(32));\r\n\t__export(__webpack_require__(35));\r\n\t__export(__webpack_require__(36));\r\n\t__export(__webpack_require__(34));\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ThreeChart.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d25ec2d15a9c15a0f671\n **/","export * from './src/index';\n\n\n/** WEBPACK FOOTER **\n ** ./index.ts\n **/","require('./deps/deps');\nexport * from './ChartView';\nexport * from './interfaces';\nexport * from './InterpolatedViewport';\nexport * from './Chart';\nexport * from './Trend';\nexport * from './TrendSegmentsManager';\nexport * from './TrendsManager';\nexport * from './Utils';\nexport * from './UniqCollection'\nexport * from './Widget';\nexport * from './widgets';\nexport * from './Plugin';\nexport * from './Color';\nexport * from './AnimationManager';\nexport * from './EventEmmiter';\nexport * from './Easing';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","/// <reference path=\"./ResizeSensor.ts\" />\n\n// TODO: think about different bundles\n\nimport { ResizeSensorType } from './ResizeSensor';\n(<any>window).TweenLite = TweenMax;\n(<any>window).Stats = require('three/examples/js/libs/stats.min');\n\n// require('gsap/src/uncompressed/easing/EasePack.js');\nrequire('three/examples/js/renderers/CanvasRenderer.js');\nrequire('three/examples/js/renderers/Projector.js');\nexport const isPlainObject = require('is-plain-object') as Function;\nexport const EE2 = require('eventemitter2') as typeof EventEmitter2;\n\n\nexport { Promise } from '../polyfills/es6-promise';\n\nexport * from './ResizeSensor';\nexport const ResizeSensor = require('css-element-queries/src/ResizeSensor') as ResizeSensorType;\nexport const deepExtend = require('deep-extend') as <T>(dst: T, ...src: T[]) => T;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/deps/deps.ts\n **/","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/libs/stats.min.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function ( context, color ) {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t_renderData, _elements, _lights,\n\t_projector = new THREE.Projector(),\n\n\t_canvas = parameters.canvas !== undefined\n\t\t\t ? parameters.canvas\n\t\t\t : document.createElement( 'canvas' ),\n\n\t_canvasWidth = _canvas.width,\n\t_canvasHeight = _canvas.height,\n\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t_viewportX = 0,\n\t_viewportY = 0,\n\t_viewportWidth = _canvasWidth,\n\t_viewportHeight = _canvasHeight,\n\n\t_pixelRatio = 1,\n\n\t_context = _canvas.getContext( '2d', {\n\t\talpha: parameters.alpha === true\n\t} ),\n\n\t_clearColor = new THREE.Color( 0x000000 ),\n\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t_contextGlobalAlpha = 1,\n\t_contextGlobalCompositeOperation = 0,\n\t_contextStrokeStyle = null,\n\t_contextFillStyle = null,\n\t_contextLineWidth = null,\n\t_contextLineCap = null,\n\t_contextLineJoin = null,\n\t_contextLineDash = [],\n\n\t_camera,\n\n\t_v1, _v2, _v3, _v4,\n\t_v5 = new THREE.RenderableVertex(),\n\t_v6 = new THREE.RenderableVertex(),\n\n\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n\t_color = new THREE.Color(),\n\t_color1 = new THREE.Color(),\n\t_color2 = new THREE.Color(),\n\t_color3 = new THREE.Color(),\n\t_color4 = new THREE.Color(),\n\n\t_diffuseColor = new THREE.Color(),\n\t_emissiveColor = new THREE.Color(),\n\n\t_lightColor = new THREE.Color(),\n\n\t_patterns = {},\n\n\t_image, _uvs,\n\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t_clipBox = new THREE.Box2(),\n\t_clearBox = new THREE.Box2(),\n\t_elemBox = new THREE.Box2(),\n\n\t_ambientLight = new THREE.Color(),\n\t_directionalLights = new THREE.Color(),\n\t_pointLights = new THREE.Color(),\n\n\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t_centroid = new THREE.Vector3(),\n\t_normal = new THREE.Vector3(),\n\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.autoClear === true ) this.clear();\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\t\t_camera = camera;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderSprite( v1, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\tif ( material instanceof THREE.SpriteMaterial ) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif ( texture !== null ) {\n\n\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\tmaterial.program( _context );\n\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t_context.stroke();\n\t\t*/\n\n\t}\n\n\tfunction renderLine( v1, v2, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\tsetLineDash( [] );\n\n\t\t}\n\n\t}\n\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces ++;\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\n\t\t\t_diffuseColor.copy( material.color );\n\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t}\n\n\t\t\t_color.copy( _ambientLight );\n\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else if ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t    material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t    material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else {\n\n\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( x0, y0 );\n\t\t_context.lineTo( x1, y1 );\n\t\t_context.lineTo( x2, y2 );\n\t\t_context.closePath();\n\n\t}\n\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\tsetLineWidth( linewidth );\n\t\tsetLineCap( linecap );\n\t\tsetLineJoin( linejoin );\n\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t}\n\n\tfunction fillPath( color ) {\n\n\t\tsetFillStyle( color.getStyle() );\n\t\t_context.fill();\n\n\t}\n\n\tfunction textureToPattern( texture ) {\n\n\t\tif ( texture.version === 0 ||\n\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tif ( image.complete === false ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: 0\n\t\t\t};\n\n\t\t}\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\trepeat = 'repeat';\n\n\t\t} else if ( repeatX === true ) {\n\n\t\t\trepeat = 'repeat-x';\n\n\t\t} else if ( repeatY === true ) {\n\n\t\t\trepeat = 'repeat-y';\n\n\t\t}\n\n\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\treturn {\n\t\t\tcanvas: pattern,\n\t\t\tversion: texture.version\n\t\t};\n\n\t}\n\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\tvar pattern = _patterns[ texture.id ];\n\n\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\tpattern = textureToPattern( texture );\n\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t}\n\n\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t} else {\n\n\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t_context.fill();\n\t\t\treturn;\n\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\twidth = texture.image.width * texture.repeat.x,\n\t\theight = texture.image.height * texture.repeat.y;\n\n\t\tu0 = ( u0 + offsetX ) * width;\n\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\tu1 = ( u1 + offsetX ) * width;\n\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\tu2 = ( u2 + offsetX ) * width;\n\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.fill();\n\t\t_context.restore();\n\n\t}\n\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\twidth = image.width - 1,\n\t\theight = image.height - 1;\n\n\t\tu0 *= width; v0 *= height;\n\t\tu1 *= width; v1 *= height;\n\t\tu2 *= width; v2 *= height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.clip();\n\t\t_context.drawImage( image, 0, 0 );\n\t\t_context.restore();\n\n\t}\n\n\t// Hide anti-alias gaps\n\n\tfunction expand( v1, v2, pixels ) {\n\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\tdet = x * x + y * y, idet;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = pixels / Math.sqrt( det );\n\n\t\tx *= idet; y *= idet;\n\n\t\tv2.x += x; v2.y += y;\n\t\tv1.x -= x; v1.y -= y;\n\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity( value ) {\n\n\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\n\t\t}\n\n\t}\n\n\tfunction setBlending( value ) {\n\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineWidth( value ) {\n\n\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineCap( value ) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineJoin( value ) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\n\t\t}\n\n\t}\n\n\tfunction setStrokeStyle( value ) {\n\n\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setFillStyle( value ) {\n\n\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineDash( value ) {\n\n\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t_context.setLineDash( value );\n\t\t\t_contextLineDash = value;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/renderers/CanvasRenderer.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t_vector3 = new THREE.Vector3(),\n\t_vector4 = new THREE.Vector4(),\n\n\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t_boundingBox = new THREE.Box3(),\n\t_points3 = new Array( 3 ),\n\t_points4 = new Array( 4 ),\n\n\t_viewMatrix = new THREE.Matrix4(),\n\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t_modelMatrix,\n\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t_normalMatrix = new THREE.Matrix3(),\n\n\t_frustum = new THREE.Frustum(),\n\n\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function ( vector, camera ) {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t_line = getNextLineInPool();\n\n\t\t\t_line.id = object.id;\n\t\t\t_line.v1.copy( v1 );\n\t\t\t_line.v2.copy( v2 );\n\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t_line.material = object.material;\n\n\t\t\t_renderData.elements.push( _line );\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t}\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tfunction addObject( object ) {\n\n\t\t\t_object = getNextObjectInPool();\n\t\t\t_object.id = object.id;\n\t\t\t_object.object = object;\n\n\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t_vector3.applyProjection( _viewProjectionMatrix );\n\t\t\t_object.z = _vector3.z;\n\t\t\t_object.renderOrder = object.renderOrder;\n\n\t\t\t_renderData.objects.push( _object );\n\n\t\t}\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\t_renderData.lights.push( object );\n\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = _renderData.objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var o = 0; o < groups.length; o ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isFaceMaterial === true\n\t\t\t\t\t\t\t ? objectMaterials.materials[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tvar invW = 1 / _vector4.w;\n\n\t\t\t\t_vector4.z *= invW;\n\n\t\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t_sprite.object = object;\n\n\t\t\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t\t\t_sprite.material = object.material;\n\n\t\t\t\t\t_renderData.elements.push( _sprite );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\t\tbc1near =  s1.z + s1.w,\n\t\tbc2near =  s2.z + s2.w,\n\t\tbc1far =  - s1.z + s1.w,\n\t\tbc2far =  - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/renderers/Projector.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n  \n  if (isObjectObject(o) === false) return false;\n  \n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n  \n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n  \n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n  \n  // Most likely a plain Object\n  return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-plain-object/index.js\n ** module id = 6\n ** module chunks = 0\n **/","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object'\n    && !Array.isArray(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isobject/index.js\n ** module id = 7\n ** module chunks = 0\n **/","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    configure.call(this, conf);\n  }\n\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n        return [tree];\n      }\n    }\n\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n          }\n        }\n        return listeners;\n      } else if(currentType === '**') {\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n        if(endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if(branch === '*' || branch === '**') {\n              if(tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if(branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n    }\n\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i+1);\n    }\n\n    xxTree = tree['**'];\n    if(xxTree) {\n      if(i < typeLength) {\n        if(xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        for(branch in xxTree) {\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if(branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\n            } else if(branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n            }\n          }\n        }\n      } else if(xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    for(var i = 0, len = type.length; i+1 < len; i++) {\n      if(type[i] === '**' && type[i+1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name) {\n\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        }\n        else if(typeof tree._listeners === 'function') {\n          tree._listeners = [tree._listeners, listener];\n        }\n        else if (isArray(tree._listeners)) {\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned) {\n\n            var m = defaultMaxListeners;\n\n            if (typeof this._events.maxListeners !== 'undefined') {\n              m = this._events.maxListeners;\n            }\n\n            if (m > 0 && tree._listeners.length > m) {\n\n              tree._listeners.warned = true;\n              console.error('(node) warning: possible EventEmitter memory ' +\n                            'leak detected. %d listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit.',\n                            tree._listeners.length);\n              console.trace();\n            }\n          }\n        }\n        return true;\n      }\n      name = type.shift();\n    }\n    return true;\n  }\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    this._events || init.call(this);\n    this._events.maxListeners = n;\n    if (!this._conf) this._conf = {};\n    this._conf.maxListeners = n;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn) {\n    this.many(event, 1, fn);\n    return this;\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this.on(event, listener);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function() {\n\n    this._events || init.call(this);\n\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) { return false; }\n    }\n\n    // Loop through the *_all* functions and invoke them.\n    if (this._all) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        this._all[i].apply(this, args);\n      }\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (type === 'error') {\n\n      if (!this._all &&\n        !this._events.error &&\n        !(this.wildcard && this.listenerTree.error)) {\n\n        if (arguments[1] instanceof Error) {\n          throw arguments[1]; // Unhandled 'error' event\n        } else {\n          throw new Error(\"Uncaught, unspecified 'error' event.\");\n        }\n        return false;\n      }\n    }\n\n    var handler;\n\n    if(this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    }\n    else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      if (arguments.length === 1) {\n        handler.call(this);\n      }\n      else if (arguments.length > 1)\n        switch (arguments.length) {\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          // slower\n          default:\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n            handler.apply(this, args);\n        }\n      return true;\n    }\n    else if (handler) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\n      var listeners = handler.slice();\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        this.event = type;\n        listeners[i].apply(this, args);\n      }\n      return (listeners.length > 0) || !!this._all;\n    }\n    else {\n      return !!this._all;\n    }\n\n  };\n\n  EventEmitter.prototype.on = function(type, listener) {\n\n    if (typeof type === 'function') {\n      this.onAny(type);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    this.emit('newListener', type, listener);\n\n    if(this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    }\n    else if(typeof this._events[type] === 'function') {\n      // Adding the second element, need to change to array.\n      this._events[type] = [this._events[type], listener];\n    }\n    else if (isArray(this._events[type])) {\n      // If we've already got an array, just append.\n      this._events[type].push(listener);\n\n      // Check for listener leak\n      if (!this._events[type].warned) {\n\n        var m = defaultMaxListeners;\n\n        if (typeof this._events.maxListeners !== 'undefined') {\n          m = this._events.maxListeners;\n        }\n\n        if (m > 0 && this._events[type].length > m) {\n\n          this._events[type].warned = true;\n          console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n          console.trace();\n        }\n      }\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if(!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    this._all.push(fn);\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    }\n    else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function(type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    }\n    else {\n      if (!this._events[type]) return this;\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function(type) {\n    if(this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n\n    if (!this._events[type]) this._events[type] = [];\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    exports.EventEmitter2 = EventEmitter;\n  }\n  else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eventemitter2/lib/eventemitter2.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = {Promise: window['Promise']}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/polyfills/es6-promise.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function() {\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            this.q = [];\n            this.add = function(ev) {\n                this.q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = this.q.length; i < j; i++) {\n                    this.q[i].call();\n                }\n            };\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var shrinkChild = shrink.childNodes[0];\n\n            var lastWidth, lastHeight;\n\n            var reset = function() {\n                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n                expand.scrollLeft = expand.scrollWidth;\n                expand.scrollTop = expand.scrollHeight;\n                shrink.scrollLeft = shrink.scrollWidth;\n                shrink.scrollTop = shrink.scrollHeight;\n                lastWidth = element.offsetWidth;\n                lastHeight = element.offsetHeight;\n            };\n\n            reset();\n\n            var changed = function() {\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            var onScroll = function() {\n              if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                  changed();\n              }\n              reset();\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        var elementType = Object.prototype.toString.call(element);\n        var isCollectionTyped = ('[object Array]' === elementType\n            || ('[object NodeList]' === elementType)\n            || ('[object HTMLCollection]' === elementType)\n            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n        );\n\n        if (isCollectionTyped) {\n            var i = 0, j = element.length;\n            for (; i < j; i++) {\n                attachResizeEvent(element[i], callback);\n            }\n        } else {\n            attachResizeEvent(element, callback);\n        }\n\n        this.detach = function() {\n            if (isCollectionTyped) {\n                var i = 0, j = element.length;\n                for (; i < j; i++) {\n                    ResizeSensor.detach(element[i]);\n                }\n            } else {\n                ResizeSensor.detach(element);\n            }\n        };\n    };\n\n    ResizeSensor.detach = function(element) {\n        if (element.resizeSensor) {\n            element.removeChild(element.resizeSensor);\n            delete element.resizeSensor;\n            delete element.resizedAttached;\n        }\n    };\n\n    // make available to common module loader\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = ResizeSensor;\n    }\n    else {\n        window.ResizeSensor = ResizeSensor;\n    }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-element-queries/src/ResizeSensor.js\n ** module id = 10\n ** module chunks = 0\n **/","/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if it is array or isn't object\n\t\tif (typeof obj !== 'object' || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = target[key]; // source value\n\t\t\tval = obj[key]; // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-extend/lib/deep-extend.js\n ** module id = 11\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/buffer/index.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-js/index.js\n ** module id = 13\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ieee754/index.js\n ** module id = 14\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 15\n ** module chunks = 0\n **/","\nimport { ChartPlugin } from './Plugin';\nimport { Trend } from \"./Trend\";\nimport Vector3 = THREE.Vector3;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport Scene = THREE.Scene;\nimport Renderer = THREE.Renderer;\nimport WebGLRenderer = THREE.WebGLRenderer;\nimport OrthographicCamera = THREE.OrthographicCamera;\nimport Object3D = THREE.Object3D;\nimport { Chart, IChartState } from \"./Chart\";\nimport { ChartWidget, IChartWidgetConstructor } from \"./Widget\";\nimport { Utils } from \"./Utils\";\nimport { IViewportParams } from \"./Viewport\";\nimport { AxisWidget } from \"./widgets/AxisWidget\";\nimport { GridWidget } from \"./widgets/GridWidget\";\nimport { TrendsGradientWidget } from \"./widgets/TrendsGradientWidget\";\nimport { TrendsLineWidget } from \"./widgets/TrendsLineWidget\";\nimport { TrendsCandlesWidget } from './widgets/TrendsCandleWidget';\nimport { ResizeSensor, ResizeSensorType } from './deps';\nimport {Color} from \"./Color\";\n\n\nexport class ChartBlankView {\n\n\tstatic devicePixelRatio = window.devicePixelRatio;\n\tstatic preinstalledWidgets: typeof ChartWidget[] = [];\n\tstatic renderers: {[rendererName: string]: any} = {\n\t\tCanvasRenderer: (THREE as any).CanvasRenderer,\n\t\tWebGLRenderer: THREE.WebGLRenderer\n\t};\n\n\tchart: Chart;\n\tisStopped: boolean;\n\tisDestroyed: boolean;\n\tprivate $container: Element;\n\tprivate $el: HTMLElement;\n\tprivate renderer: Renderer;\n\tprivate scene: Scene;\n\tprivate camera: OrthographicCamera;\n\tprivate cameraInitialPosition: Vector3;\n\tprivate widgets: Array<ChartWidget> = [];\n\tprivate stats: Stats;\n\tprivate zoomThrottled: Function;\n\tprivate unsubscribers: Function[];\n\tprivate resizeSensor: ResizeSensorType;\n\tprivate pluginsAndWidgets: Array<ChartPlugin<any> | ChartWidget>;\n\n\tconstructor(state: IChartState, $container: Element, pluginsAndWidgets: Array<ChartPlugin<any> | ChartWidget> = []) {\n\n\t\tif (!THREE || !THREE.REVISION) Utils.error('three.js not found');\n\n\t\tif (!$container) {\n\t\t\tUtils.error('$el must be set');\n\t\t}\n\t\t// calculate state size\n\t\tlet style = getComputedStyle($container);\n\t\tstate.width = parseInt(style.width);\n\t\tstate.height = parseInt(style.height);\n\n\t\tlet plugins = pluginsAndWidgets.filter(pluginOrWidget => pluginOrWidget instanceof ChartPlugin) as ChartPlugin<any>[];\n\n\t\tthis.chart = new Chart(state, plugins);\n\t\tthis.pluginsAndWidgets = pluginsAndWidgets;\n\t\tthis.zoomThrottled = Utils.throttle((zoomValue: number, origin: number) => this.zoom(zoomValue, origin), 200);\n\t\tthis.$container = $container;\n\t\tthis.init($container);\n\t};\n\n\tprivate init($container: Element) {\n\t\tvar chart = this.chart;\n\t\tvar {width: w, height: h, showStats, autoRender} = chart.state;\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.isStopped = !autoRender.enabled;\n\n\t\tvar renderer = this.renderer = new (ChartView.renderers[this.chart.state.renderer] as any)({\n\t\t\tantialias: true,\n\t\t\talpha: true\n\t\t});\n\t\tlet backgroundColor = new Color(chart.state.backgroundColor);\n\t\trenderer.setSize(w, h);\n\t\trenderer.setPixelRatio(ChartView.devicePixelRatio);\n\t\trenderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t\t$container.appendChild(renderer.domElement);\n\t\tthis.$el = renderer.domElement;\n\t\tthis.$el.style.display = 'block';\n\n\t\tif (showStats) {\n\t\t\tthis.stats = new Stats();\n\t\t\t$container.appendChild(this.stats.domElement);\n\t\t}\n\n\t\tthis.setupCamera();\n\t\tthis.initWidgets();\n\t\tthis.bindEvents();\n\t\tthis.renderLoop();\n\t}\n\n\t/**\n\t * collect and init widgets from preinstalled widgets, plugins widgets and custom widgets\n\t */\n\tprivate initWidgets() {\n\t\tlet preinstalledWidgetsClasses = (this.constructor as typeof ChartView).preinstalledWidgets.slice();\n\t\tlet customWidgets: ChartWidget[] = [];\n\n\t\tthis.pluginsAndWidgets.forEach(pluginOrWidget => {\n\t\t\tif (pluginOrWidget instanceof ChartWidget) {\n\t\t\t\tcustomWidgets.push(pluginOrWidget);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(pluginOrWidget instanceof ChartPlugin)) return;\n\t\t\tlet pluginWidgetClasses = (pluginOrWidget.constructor as typeof ChartPlugin).providedWidgets;\n\t\t\tpreinstalledWidgetsClasses.push(...pluginWidgetClasses);\n\t\t});\n\n\t\tthis.widgets = customWidgets.concat(\n\t\t\tpreinstalledWidgetsClasses.map((WidgetClass: IChartWidgetConstructor) => new WidgetClass())\n\t\t);\n\n\t\tthis.widgets.forEach(widget => {\n\t\t\twidget.setupChart(this.chart);\n\t\t\twidget.onReadyHandler();\n\t\t\tthis.scene.add(widget.getObject3D());\n\t\t});\n\t}\n\n\tprivate renderLoop() {\n\t\tif (this.isDestroyed) return;\n\t\tthis.stats && this.stats.begin();\n\t\tthis.render();\n\t\tif (this.isStopped) return;\n\t\tvar fpsLimit = this.chart.state.autoRender.fps;\n\n\t\tif (fpsLimit) {\n\t\t\tlet delay = 1000 / fpsLimit;\n\t\t\tsetTimeout(() => requestAnimationFrame(() => this.renderLoop()), delay);\n\t\t} else {\n\t\t\trequestAnimationFrame(() => this.renderLoop());\n\t\t}\n\t\tthis.stats && this.stats.end();\n\t}\n\n\trender() {\n\t\tthis.chart.render();\n\t\tthis.renderer.render(this.scene, this.camera);\n\t}\n\n\tstop() {\n\t\tthis.isStopped = true;\n\t}\n\n\trun() {\n\t\tthis.isStopped = false;\n\t\tthis.renderLoop();\n\t}\n\n\t/**\n\t * call to destroy state an init garbage collection\n\t */\n\tdestroy() {\n\t\tthis.isDestroyed = true;\n\t\tthis.stop();\n\t\tthis.chart.destroy();\n\t\tthis.unbindEvents();\n\t\t// WARNING! undocumented method for free webgl context\n\t\ttry {\n\t\t\t(this.renderer as any).forceContextLoss();\n\t\t} catch (wtf) {\n\t\t\t// sometimes with many state instances forceContextLoss not working\n\t\t}\n\t\t(this.renderer as any).context = null;\n\t\tthis.renderer.domElement = null;\n\t\tthis.renderer = null;\n\t}\n\n\tgetState(): IChartState {\n\t\treturn this.chart.state\n\t}\n\n\t/**\n\t * shortcut for ChartView.state.getTrend\n\t */\n\tgetTrend(trendName: string): Trend {\n\t\treturn this.chart.getTrend(trendName);\n\t}\n\n\t/**\n\t * shortcut for ChartView.state.setState\n\t */\n\tsetState(state: IChartState) {\n\t\treturn this.chart.setState(state);\n\t}\n\n\n\tprivate bindEvents() {\n\t\tvar $el = this.$el;\n\t\tif (this.chart.state.controls.enabled) {\n\t\t\t$el.addEventListener('mousewheel', (ev: MouseWheelEvent) => {\n\t\t\t\tthis.onMouseWheel(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('mousemove', (ev: MouseEvent) => {\n\t\t\t\tthis.onMouseMove(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('mousedown', (ev: MouseEvent) => this.onMouseDown(ev));\n\t\t\t$el.addEventListener('mouseup', (ev: MouseEvent) => this.onMouseUp(ev));\n\t\t\t$el.addEventListener('touchmove', (ev: TouchEvent) => {\n\t\t\t\tthis.onTouchMove(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('touchend', (ev: TouchEvent) => {\n\t\t\t\tthis.onTouchEnd(ev)\n\t\t\t});\n\t\t}\n\t\tif (this.chart.state.autoResize) {\n\t\t\tthis.resizeSensor = new ResizeSensor(this.$container, () => {\n\t\t\t\tthis.onChartContainerResizeHandler(this.$container.clientWidth, this.$container.clientHeight);\n\t\t\t});\n\t\t}\n\n\t\tthis.unsubscribers = [\n\t\t\tthis.chart.interpolatedViewport.onInterpolation((options) => this.onScreenTransformHandler(options)),\n\t\t\tthis.chart.onResize((options) => this.onChartResize())\n\t\t];\n\t}\n\n\tprivate unbindEvents() {\n\t\t// TODO: unbind events correctly\n\t\ttry {\n\t\t\tthis.resizeSensor && this.resizeSensor.detach();\n\t\t} catch (e) {\n\t\t\t// ups.. somebody already removed resizeSensor childNode\n\t\t\t// detected in angular2 apps\n\t\t}\n\t\tthis.$el.remove();\n\t\tthis.unsubscribers.forEach(unsubscribe => unsubscribe());\n\t}\n\n\tprivate setupCamera() {\n\t\tlet camSettings = this.chart.viewport.getCameraSettings();\n\t\tif (!this.camera) {\n\t\t\tthis.camera = new OrthographicCamera(\n\t\t\t\tcamSettings.left,\n\t\t\t\tcamSettings.right,\n\t\t\t\tcamSettings.top,\n\t\t\t\tcamSettings.bottom,\n\t\t\t\tcamSettings.near,\n\t\t\t\tcamSettings.far\n\t\t\t);\n\t\t\tthis.scene.add(this.camera);\n\t\t} else {\n\t\t\tthis.camera.left = camSettings.left;\n\t\t\tthis.camera.right = camSettings.right;\n\t\t\tthis.camera.top = camSettings.top;\n\t\t\tthis.camera.bottom = camSettings.bottom;\n\t\t\tthis.camera.near = camSettings.near;\n\t\t\tthis.camera.far = camSettings.far;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\t\tthis.camera.position.set(camSettings.left, camSettings.bottom, 0);\n\t\tthis.cameraInitialPosition = this.camera.position.clone();\n\t\tthis.onScreenTransformHandler(this.chart.interpolatedViewport.params);\n\t}\n\n\tprivate onScreenTransformHandler(options: IViewportParams) {\n\t\tif (options.scrollX != void 0) {\n\t\t\tlet scrollX = this.cameraInitialPosition.x + options.scrollX;\n\t\t\tthis.camera.position.setX(scrollX);\n\t\t}\n\t\tif (options.scrollY != void 0) {\n\t\t\tlet scrollY = this.cameraInitialPosition.y + options.scrollY;\n\t\t\tthis.camera.position.setY(scrollY);\n\t\t}\n\t}\n\n\tprivate onMouseDown(ev: MouseEvent) {\n\t\tthis.setState({cursor: {dragMode: true, x: ev.clientX, y: ev.clientY}});\n\t}\n\n\tprivate onMouseUp(ev: MouseEvent) {\n\t\tthis.setState({cursor: {dragMode: false}});\n\t}\n\n\tprivate onMouseMove(ev: MouseEvent) {\n\t\tif (this.chart.state.cursor.dragMode) {\n\t\t\tthis.setState({cursor: {dragMode: true, x: ev.clientX, y: ev.clientY}});\n\t\t}\n\t}\n\n\tprivate onMouseWheel(ev: MouseWheelEvent) {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\t\tlet zoomOrigin = ev.layerX / this.chart.state.width;\n\t\tlet zoomValue = 1 + ev.wheelDeltaY * 0.001;\n\t\tthis.zoom(zoomValue, zoomOrigin);\n\t}\n\n\tprivate onTouchMove(ev: TouchEvent) {\n\t\tthis.setState({cursor: {dragMode: true, x: ev.touches[0].clientX, y: ev.touches[0].clientY}});\n\t}\n\n\tprivate onTouchEnd(ev: TouchEvent) {\n\t\tthis.setState({cursor: {dragMode: false}});\n\t}\n\n\tprivate onChartContainerResizeHandler(width: number, height: number) {\n\t\tthis.setState({width, height});\n\t}\n\n\tprivate onChartResize() {\n\t\tlet {width, height} = this.chart.state;\n\t\tthis.renderer.setSize(width, height);\n\t\tthis.setupCamera();\n\t}\n\n\tprivate zoom(zoomValue: number, zoomOrigin: number) {\n\t\tconst MAX_ZOOM_VALUE = 1.5;\n\t\tconst MIN_ZOOM_VALUE = 0.7;\n\t\tzoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t\tzoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t\tthis.chart.zoom(zoomValue, zoomOrigin);\n\t}\n\n\n}\n\n\nexport class ChartView extends ChartBlankView {\n\tstatic preinstalledWidgets: typeof ChartWidget[] = [\n\t\tTrendsLineWidget,\n\t\tTrendsCandlesWidget,\n\t\tAxisWidget,\n\t\tGridWidget,\n\t\tTrendsGradientWidget\n\t]\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ChartView.ts\n **/","import { Chart, IChartState } from \"./Chart\";\nimport { Utils } from './Utils';\nimport { EventEmitter } from './EventEmmiter';\nimport { ChartWidget } from './Widget';\n\nexport interface IChartPluginState {\n}\n\nexport interface IChartPluginConfig {\n\tinstallPluginWidgets?: boolean;\n}\n\nexport const DEFAULT_CONFIG: IChartPluginConfig = {\n\tinstallPluginWidgets: true\n};\n\n/**\n * base class for all plugins\n * NAME is mandatory\n */\nexport abstract class ChartPlugin<TPluginState> {\n\tstatic NAME: string = '';\n\tstatic providedWidgets: typeof ChartWidget[] = [];\n\n\tinitialState: IChartPluginState;\n\tconfig: IChartPluginConfig;\n\tname: string;\n\tprotected chart: Chart;\n\tprotected unsubscribers: Function[] = [];\n\tprotected ee: EventEmitter;\n\n\tconstructor (options?: TPluginState, config: IChartPluginConfig = {}) {\n\t\tthis.initialState = options;\n\t\tthis.config = Utils.deepMerge(DEFAULT_CONFIG, config);\n\t\tthis.name = (this.constructor as typeof ChartPlugin).NAME;\n\t\tif (!this.name) Utils.error('Unnamed plugin detected');\n\t}\n\n\tsetupChart(chart: Chart) {\n\t\tthis.chart = chart;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.bindEvent(\n\t\t\tthis.chart.onInitialStateApplied(initialState => this.onInitialStateAppliedHandler(initialState)),\n\t\t\tthis.chart.onReady(() => this.onReadyHandler()),\n\t\t\tthis.chart.onDestroy(() => this.onDestroyHandler()),\n\t\t\tthis.chart.onPluginsStateChange(changedPluginsStates => changedPluginsStates[this.name] && this.onStateChangedHandler(changedPluginsStates[this.name] as any as TPluginState))\n\t\t)\n\t}\n\n\tgetOptions(): TPluginState {\n\t\treturn this.chart.state.pluginsState[this.name];\n\t}\n\n\tprotected onInitialStateAppliedHandler(initialState: IChartState) {\n\t}\n\n\tprotected onReadyHandler() {\n\t}\n\n\tprotected onStateChangedHandler(changedState: TPluginState) {\n\t}\n\n\tprotected onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t}\n\n\tprotected bindEvent(...args: Array<Function | Function[]>): void {\n\t\tlet unsubscribers: Function[] = [];\n\t\tif (!Array.isArray(args[0])) {\n\t\t\tunsubscribers.push(args[0] as Function);\n\t\t} else {\n\t\t\tunsubscribers.push(...args as Function[]);\n\t\t}\n\t\tthis.unsubscribers.push(...unsubscribers);\n\t}\n\n\n\tprotected unbindEvents() {\n\t\tthis.unsubscribers.forEach(unsubscriber => unsubscriber());\n\t\tthis.unsubscribers.length = 0;\n\t}\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Plugin.ts\n **/","import Texture = THREE.Texture;\nimport Color = THREE.Color;\nimport { TIteralable, IIteralable } from \"./interfaces\";\nimport { isPlainObject, deepExtend } from './deps';\n\n// function deepmerge(target: any, src: any, mergeArrays = true) {\n//\n// \treturn deepExtend(target, src);\n//\n// \t// var array = Array.isArray(src);\n// \t// var dst: any = array && [] || {};\n//     //\n// \t// if (array) {\n// \t// \ttarget = target || [];\n// \t// \tif (mergeArrays) {\n// \t// \t\tdst = dst.concat(target);\n// \t// \t}\n// \t// \tsrc.forEach(function(e: any, i: any) {\n// \t// \t\tif (typeof dst[i] === 'undefined') {\n// \t// \t\t\tdst[i] = e;\n// \t// \t\t} else if (typeof e === 'object') {\n// \t// \t\t\tdst[i] = deepmerge(target[i], e, mergeArrays);\n// \t// \t\t} else {\n// \t// \t\t\tif (target.indexOf(e) === -1) {\n// \t// \t\t\t\tdst.push(e);\n// \t// \t\t\t}\n// \t// \t\t}\n// \t// \t});\n// \t// } else {\n// \t// \tif (target && typeof target === 'object') {\n// \t// \t\tObject.keys(target).forEach(function (key) {\n// \t// \t\t\tdst[key] = target[key];\n// \t// \t\t})\n// \t// \t}\n// \t// \tObject.keys(src).forEach(function (key) {\n// \t// \t\tif (typeof src[key] !== 'object' || !src[key]) {\n// \t// \t\t\tdst[key] = src[key];\n// \t// \t\t}\n// \t// \t\telse {\n// \t// \t\t\tif (!target[key]) {\n// \t// \t\t\t\tdst[key] = src[key];\n// \t// \t\t\t} else {\n// \t// \t\t\t\tdst[key] = deepmerge(target[key], src[key], mergeArrays);\n// \t// \t\t\t}\n// \t// \t\t}\n// \t// \t});\n// \t// }\n//     //\n// \t// return dst;\n// }\n\n\n\nexport declare type TUid = number;\n\n/**\n * project utils static class\n */\nexport class Utils {\n\n\tprivate static currentId: TUid = 1;\n\n\t/**\n\t * deepMerge based on https://www.npmjs.com/package/deepmerge\n\t */\n\tstatic deepMerge<T> (obj1: T, obj2: T, mergeArrays?: boolean) {\n\t\treturn deepExtend({}, obj1, obj2) as T;\n\t}\n\n\t/**\n\t * deepCopy based on JSON.stringify function\n\t * @deprecated\n\t */\n\tstatic deepCopy<T> (obj: T) {\n\t\t// TODO: use deepMerge function to copy\n\t\treturn JSON.parse(JSON.stringify(obj)) as T;\n\t}\n\n\tstatic patch<T extends IIteralable>(objectToPatch: T, patch: T) {\n\t\tlet idKey = '_id';\n\t\tfor (let key in patch) {\n\n\t\t\tif (!patch.hasOwnProperty(key)) continue;\n\n\t\t\tif (objectToPatch[key]) {\n\n\t\t\t\tif (Array.isArray(patch[key])) {\n\t\t\t\t\tfor (let patchItem of patch[key]) {\n\n\t\t\t\t\t\tlet subObject = objectToPatch[key].find((item: any) => {\n\t\t\t\t\t\t\treturn item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (subObject) {\n\t\t\t\t\t\t\tthis.patch(subObject, patchItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobjectToPatch[key].push(patchItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\n\t\t\t\t} else if (typeof patch[key] === 'object' && objectToPatch[key] != void 0) {\n\n\t\t\t\t\tif (patch[idKey] && Object.keys(patch).length == 1) {\n\t\t\t\t\t\tdelete objectToPatch[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.patch(objectToPatch[key], patch[key]);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobjectToPatch[key] = patch[key];\n\t\t}\n\t\tif (objectToPatch['_onUpdate']) (objectToPatch['_onUpdate'] as Function).call(objectToPatch, patch);\n\t\treturn objectToPatch;\n\t}\n\n\tstatic travers(object: IIteralable, fn: (item: any) => boolean) {\n\t\tfor (let key in object) {\n\t\t\tif (!object.hasOwnProperty(key)) continue;\n\t\t\tlet allowTraverseDeeper = fn(object[key]);\n\t\t\tlet canTraverseDeeper = allowTraverseDeeper && typeof object[key] == 'object';\n\t\t\tif (canTraverseDeeper) this.travers(object[key], fn);\n\t\t}\n\t}\n\n\tstatic setIdsToArrayItems(sourceObject: any) {\n\t\tlet idKey = '_id';\n\t\tUtils.travers(sourceObject, (item: any) => {\n\t\t\tif (!Array.isArray(item)) return true;\n\t\t\tlet arr = item as any[];\n\t\t\tfor (let obj of arr) {\n\t\t\t\tif (typeof obj !== 'object' || Array.isArray(obj)) continue;\n\t\t\t\tif (!obj[idKey]) obj[idKey] = Utils.getUid();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @example\n\t * // returns \"000015\"\n\t * Utils.toFixed(15, 6);\n\t */\n\tstatic toFixed(num: number, digitsCount: number): string {\n\t\tvar maxDigits = 15;\n\t\tvar result = '';\n\t\tvar intVal = Math.floor(num);\n\t\tvar intStr = intVal.toString();\n\t\tvar lengthDiff = digitsCount - intStr.length;\n\t\tif (lengthDiff > 0 ) {\n\t\t\tresult = (<any>'0').repeat(lengthDiff) + intStr;\n\t\t} else {\n\t\t\tresult = intStr;\n\t\t}\n\t\tvar afterPointDigitsCount = maxDigits - intStr.length;\n\t\tvar afterPointStr = num.toString().split('.')[1];\n\t\tif (afterPointStr) {\n\t\t\tresult += '.' + afterPointStr.substr(0, afterPointDigitsCount);\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic bindEvent() {\n\n\t}\n\n\t/**\n\t * generate texture from canvas context\n\t * @example\n\t * \t// create texture with rect\n\t *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\n\t */\n\tstatic createTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D, width: number, height: number) => void ): Texture {\n\t\tvar canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tvar ctx = canvas.getContext('2d');\n\t\tfn && fn(ctx, width, height);\n\t\tvar texture = new THREE.Texture(canvas);\n\t\ttexture.needsUpdate = true;\n\t\treturn texture;\n\t}\n\n\t/**\n\t * generate texture from canvas context with NearestFilter\n\t * @example\n\t * \t// create texture with rect\n\t *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\n\t */\n\tstatic createNearestTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D) => void ): Texture{\n\t\tvar texture = this.createTexture(width, height, fn);\n\t\ttexture.minFilter = THREE.NearestFilter;\n\t\treturn texture;\n\t}\n\n\tstatic createPixelPerfectTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D) => void ): Texture{\n\t\tvar texture = this.createTexture(width, height, fn);\n\t\ttexture.magFilter = THREE.NearestFilter;\n\t\ttexture.minFilter = THREE.NearestFilter;\n\t\treturn texture;\n\t}\n\n\t/**\n\t * throw error\n\t */\n\tstatic error(msg: string) {\n\t\tconsole.error('Chart error: ' + msg);\n\t\tthrow 'Chart: ' + msg;\n\t}\n\n\t/**\n\t * throw error\n\t */\n\tstatic warn(msg: string) {\n\t\tconsole.warn('Chart warning: ' + msg);\n\t}\n\n\t/**\n\t * @returns new unique id\n\t */\n\tstatic getUid(): TUid {\n\t\treturn this.currentId++;\n\t}\n\n\t/**\n\t * @returns distance between numbers\n\t */\n\tstatic getDistance(num1: number, num2: number) {\n\t\treturn Math.max(num1, num2) - Math.min(num1, num2);\n\t}\n\n\t// TODO: refactor binary search functions\n\tstatic binarySearchClosestInd(arr: IIteralable[], num: number, key: string): number {\n\t\tvar mid: number;\n\t\tvar lo = 0;\n\t\tvar hi = arr.length - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor ((lo + hi) / 2);\n\t\t\tif (arr[mid][key] < num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\tif (num - arr[lo][key] <= arr[hi][key] - num) {\n\t\t\treturn lo;\n\t\t}\n\t\treturn hi;\n\t}\n\n\tstatic binarySearchClosest<ArrayItem>(arr: ArrayItem[], num: number, key: string): ArrayItem {\n\t\tlet ind = this.binarySearchClosestInd(arr, num, key);\n\t\treturn arr[ind];\n\t}\n\n\tstatic binarySearchInd<ArrayItem>(arr: IIteralable[], num: number, key: string): number {\n\t\tlet mid: number;\n\t\tlet lo = 0;\n\t\tlet hi = arr.length - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor (( hi - lo) / 2);\n\t\t\tif (arr[mid][key] < num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t\tif (arr[lo][key] == num) {\n\t\t\t\treturn lo;\n\t\t\t} else if (arr[hi][key] == num) {\n\t\t\t\treturn hi;\n\t\t\t}\n\t\t}\n\t\treturn (arr[lo] && arr[lo][key] == num) ? lo : -1;\n\t}\n\n\tstatic binarySearch<ArrayItem>(arr: ArrayItem[], num: number, key: string): ArrayItem {\n\t\tlet ind = this.binarySearchInd(arr, num, key);\n\t\treturn arr[ind];\n\t}\n\n\n\tstatic rectsIntersect(r1: number[], r2: number[]) {\n\t\tlet [left1, top1, width1, height1] = r1;\n\t\tlet [left2, top2, width2, height2] = r2;\n\t\tlet [right1, right2, bottom1, bottom2] = [left1 + width1, left2 + width2, top1 + height1, top2 + height2];\n\t\treturn !(left2 > right1 ||\n\t\t\tright2 < left1 ||\n\t\t\ttop2 > bottom1 ||\n\t\t\tbottom2 < top1\n\t\t);\n\t}\n\n\n\tstatic throttle(func: Function, ms: number) {\n\n\t\tvar isThrottled = false,\n\t\t\tsavedArgs: any,\n\t\t\tsavedThis: any;\n\n\t\tfunction wrapper() {\n\n\t\t\tif (isThrottled) { // (2)\n\t\t\t\tsavedArgs = arguments;\n\t\t\t\tsavedThis = this;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunc.apply(this, arguments); // (1)\n\n\t\t\tisThrottled = true;\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tisThrottled = false; // (3)\n\t\t\t\tif (savedArgs) {\n\t\t\t\t\twrapper.apply(savedThis, savedArgs);\n\t\t\t\t\tsavedArgs = savedThis = null;\n\t\t\t\t}\n\t\t\t}, ms);\n\t\t}\n\n\t\treturn wrapper;\n\t}\n\n\tstatic msToTimeString(timestamp: number) {\n\t\tvar h = Math.floor(timestamp / 360000);\n\t\tvar m =  Math.floor(timestamp / 60000);\n\t\tvar s =  Math.floor(timestamp / 1000);\n\t\treturn h + ':' + m + ':' + s;\n\t}\n\t\n\tstatic getRandomItem<T>(arr: Array<T>): T {\n\t\tvar ind = Math.floor(Math.random() * arr.length);\n\t\treturn arr[ind];\n\t}\n\n\tstatic copyProps(srcObject: TIteralable, dstObject: TIteralable, props: TIteralable, excludeProps: string[] = []) {\n\t\tfor (var key in props) {\n\t\t\tif (excludeProps.indexOf(key) !== -1) continue;\n\t\t\tif (srcObject[key] == void 0) continue;\n\t\t\tif (isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t\t\t\tthis.copyProps(srcObject[key], dstObject[key], props[key])\n\t\t\t} else if (typeof srcObject[key] == 'function') {\n\t\t\t\tdstObject[key] = srcObject[key];\n\t\t\t} else {\n\t\t\t\tdstObject[key] = this.deepCopy(srcObject[key]);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Utils.ts\n **/","export * from './deps'\n\n\n/** WEBPACK FOOTER **\n ** ./src/deps/index.ts\n **/","import {EE2} from './deps';\n\n/**\n * this class uses as proxy for EventEmitter2\n */\nexport class EventEmitter {\n\tprivate ee: EventEmitter2;\n\n\t// TODO: allow to create EE instances only in Chart class\n\tconstructor() {\n\t\tthis.ee = new EE2();\n\t}\n\temit(eventName: string, ...args: any[]) {\n\t\tthis.ee.emit(eventName, ...args)\n\t}\n\ton(eventName: string, callback: Function) {\n\t\treturn this.ee.on(eventName, callback)\n\t}\n\toff(eventName: string, callback: Function) {\n\t\treturn this.ee.off(eventName, callback);\n\t}\n\tsubscribe(eventName: string, callback: Function): Function {\n\t\tthis.on(eventName, callback);\n\t\treturn () => this.off(eventName, callback);\n\t}\n\tsetMaxListeners(listenersCount: number) {\n\t\tthis.ee.setMaxListeners(listenersCount);\n\t}\n\tremoveAllListeners(eventName?: string) {\n\t\tthis.ee.removeAllListeners(eventName);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/EventEmmiter.ts\n **/","import Vector3 = THREE.Vector3;\nimport { ITrendOptions, Trend, ITrendData, TREND_TYPE } from \"./Trend\";\nimport { EventEmitter } from './EventEmmiter';\nimport { Utils } from './Utils';\nimport { TrendsManager, ITrendsOptions } from \"./TrendsManager\";\nimport { Viewport } from \"./Viewport\";\nimport { InterpolatedViewport } from \"./InterpolatedViewport\";\nimport { Promise } from './deps/deps';\nimport { ChartPlugin } from './Plugin';\nimport { TColor } from \"./Color\";\nimport { AnimationManager } from \"./AnimationManager\";\nimport { EASING } from './Easing';\nimport {\n\tAXIS_TYPE, AXIS_DATA_TYPE, IAxisOptions, IAnimationsOptions, AXIS_RANGE_TYPE\n} from \"./interfaces\";\n\ninterface IRecalculatedStateResult {\n\tchangedProps: IChartState,\n\tpatch: IChartState\n}\n\nconst CHART_STATE_EVENTS = {\n\tINITIAL_STATE_APPLIED: 'initialStateApplied',\n\tREADY: 'ready',\n\tDESTROY: 'destroy',\n\tCHANGE: 'change',\n\tTREND_CHANGE: 'trendChange',\n\tTRENDS_CHANGE: 'trendsChange',\n\tZOOM: 'zoom',\n\tRESIZE: 'resize',\n\tSCROLL: 'scroll',\n\tVIEWPORT_CHANGE: 'viewportChange',\n\tDRAG_STATE_CHAGED: 'scrollStop',\n\tPLUGINS_STATE_CHANGED: 'pluginsStateChanged'\n};\n\n/**\n * readonly computed state state\n * calculated after recalculateState() call\n * contains cached values\n */\nexport interface IChartStateComputedData {\n\ttrends?: {\n\t\tmaxXVal: number,\n\t\tminXVal: number\n\t}\n}\n\nexport interface IChartState {\n\tprevState?: IChartState,\n\twidth?: number;\n\theight?: number;\n\tzoom?: number;\n\txAxis?: IAxisOptions,\n\tyAxis?: IAxisOptions,\n\tanimations?: IAnimationsOptions,\n\ttrends?: ITrendsOptions,\n\ttrendDefaultState?: ITrendOptions;\n\tcursor?: {\n\t\tdragMode?: boolean,\n\t\tx?: number,\n\t\ty?: number\n\t},\n\n\t/**\n\t * use fps = 0 for no limits\n\t */\n\tautoRender?: {enabled?: boolean, fps?: number};\n\n\t/**\n\t * by default 'WebGLRenderer'\n\t * also available 'CanvasRenderer'\n\t */\n\trenderer?: 'WebGLRenderer' | 'CanvasRenderer';\n\tfont?: {s?: string, m?: string, l?:string}\n\n\t/**\n\t * set to false for smooth animations\n\t */\n\tenablePixelPerfectRender?: boolean,\n\n\t/**\n\t * buffer size for displayed segments\n\t * used by widgets\n\t */\n\tmaxVisibleSegments?: number;\n\tautoResize?: boolean;\n\tcontrols?: {enabled: boolean};\n\tautoScroll?: boolean;\n\tinertialScroll?: boolean\n\n\t//TODO: exclude stats in plugin\n\tshowStats?: boolean;\n\tbackgroundColor?: TColor;\n\tcomputedData?: IChartStateComputedData,\n\tpluginsState?: {[pluginName: string]: any};\n\teventEmitterMaxListeners?: number;\n}\n\nconst LIGHT_BLUE = '#5273bd';\n\n/**\n *  all state changes caused only by Chart.setState method\n */\nexport class Chart {\n\n\tstate: IChartState = {\n\t\tprevState: {},\n\t\tzoom: 0,\n\t\txAxis: {\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.ALL,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 0,\n\t\t\t\tscroll: 0,\n\t\t\t\tzoom: 1,\n\t\t\t\tpadding: {start: 0, end: 5},\n\t\t\t\tmargin: {start: 0, end: 5}\n\t\t\t},\n\t\t\tdataType: AXIS_DATA_TYPE.NUMBER,\n\t\t\tgrid: {enabled: true, minSizePx:  100, color: `rgba(${LIGHT_BLUE}, 0.12)`},\n\t\t\tcolor: LIGHT_BLUE\n\t\t},\n\t\tyAxis: {\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.RELATIVE_END,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 0,\n\t\t\t\tzoom: 1,\n\t\t\t\tpadding: {start: 5, end: 5},\n\t\t\t\tmargin: {start: 5, end: 5},\n\t\t\t},\n\t\t\tgrid: {enabled: true, minSizePx:  50, color: `rgba(${LIGHT_BLUE}, 0.12)`},\n\t\t\tdataType: AXIS_DATA_TYPE.NUMBER,\n\t\t\tcolor: LIGHT_BLUE\n\t\t},\n\t\tanimations: {\n\t\t\tenabled: true,\n\t\t\ttrendChangeSpeed: 0.5,\n\t\t\ttrendChangeEase: void 0,\n\t\t\tzoomSpeed: 250,\n\t\t\tscrollSpeed: 1000,\n\t\t\tscrollEase: EASING.Quadratic.Out,\n\t\t\tzoomEase: EASING.Quadratic.Out,\n\t\t\tautoScrollSpeed: 1100,\n\t\t\tautoScrollEase: EASING.Linear.None,\n\t\t},\n\t\tautoRender: {enabled: true, fps: 0},\n\t\tautoResize: true,\n\t\trenderer: 'WebGLRenderer',//'WebGLRenderer',\n\t\tautoScroll: true,\n\t\tcontrols: {enabled: true},\n\t\ttrendDefaultState: {\n\t\t\tenabled: true,\n\t\t\ttype: TREND_TYPE.LINE,\n\t\t\tdata: [],\n\t\t\tmaxSegmentLength: 1000,\n\t\t\tlineWidth: 2,\n\t\t\tlineColor: 0xFFFFFF,\n\t\t\thasBackground: true,\n\t\t\tbackgroundColor: 'rgba(#FFFFFF, 0.07)',\n\t\t\thasBeacon: false,\n\t\t\tsettingsForTypes: {\n\t\t\t\tCANDLE: {\n\t\t\t\t\tminSegmentLengthInPx: 20,\n\t\t\t\t\tmaxSegmentLengthInPx: 40,\n\t\t\t\t},\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 2,\n\t\t\t\t\tmaxSegmentLengthInPx: 10,\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcursor: {\n\t\t\tdragMode: false,\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\tfont: {\n\t\t\ts: '11px Arial',\n\t\t\tm: '12px Arial',\n\t\t\tl: '13px Arial'\n\t\t},\n\t\tbackgroundColor: 0x000c2a,\n\t\tshowStats: false,\n\t\tpluginsState: {},\n\t\teventEmitterMaxListeners: 20,\n\t\tmaxVisibleSegments: 1280,\n\t\tinertialScroll: false\n\t};\n\tplugins: {[pluginName: string]: ChartPlugin<any>} = {};\n\ttrendsManager: TrendsManager;\n\tanimationManager: AnimationManager;\n\tviewport: Viewport;\n\tinterpolatedViewport: InterpolatedViewport;\n\n\t/**\n\t * true then state was initialized and ready to use\n\t */\n\tisReady = false;\n\tisDestroyed = false;\n\n\n\tprivate ee: EventEmitter;\n\n\tconstructor(\n\t\tinitialState: IChartState,\n\t\tplugins: ChartPlugin<any>[] = []\n\t) {\n\t\tthis.ee = new EventEmitter();\n\t\tthis.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\n\t\tthis.state = Utils.patch(this.state, initialState); //Utils.deepMerge(this.state, initialState);\n\t\tthis.trendsManager = new TrendsManager(this, initialState);\n\t\tinitialState.trends = this.trendsManager.calculatedOptions;\n\t\tinitialState = this.installPlugins(plugins, initialState);\n\n\t\tthis.animationManager = new AnimationManager();\n\t\tthis.animationManager.setAimationsEnabled(this.state.animations.enabled);\n\t\tthis.viewport = new Viewport(this);\n\n\t\tthis.setState(initialState);\n\t\tthis.setState({computedData: this.getComputedData()});\n\t\tthis.savePrevState();\n\n\t\tthis.interpolatedViewport = new InterpolatedViewport(this);\n\t\tthis.bindEvents();\n\n\n\t\t\n\t\t// message to other modules that Chart.state is ready for use\n\t\tthis.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\n\t\t// message to other modules that Chart is ready for use\n\t\tthis.isReady = true;\n\t\tthis.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\n\t}\n\n\t/**\n\t * destroy chart, use ChartView.destroy to completely destroy Chart\n\t */\n\tdestroy() {\n\t\tthis.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t\tthis.ee.removeAllListeners();\n\t\tthis.state = {};\n\t\tthis.isDestroyed = true;\n\t}\n\n\tonDestroy(cb: Function) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t}\n\n\tonInitialStateApplied(cb: (initialState: IChartState) => void ): Function {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t}\n\n\tonReady(cb: (initialState: IChartState) => void ): Function {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t}\n\n\tonChange(cb: (changedProps: IChartState) => void ) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t}\n\n\tonTrendChange(cb: (trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t}\n\n\tonTrendsChange(cb: (trendsOptions: ITrendsOptions) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t}\n\n\tonDragStateChanged(cb: (isDragMode: boolean, changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n\t}\n\n\tonScroll(cb: (scrollOptions: {deltaX: number}) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t}\n\n\tonZoom(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t}\n\n\tonResize(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t}\n\n\tonViewportChange(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\n\t}\n\n\tonPluginsStateChange(cb: (changedPluginsStates: {[pluginName: string]: Plugin}) => any) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t}\n\t\n\tgetTrend(trendName: string): Trend {\n\t\treturn this.trendsManager.getTrend(trendName);\n\t}\n\n\trender() {\n\t\tthis.animationManager.tick();\n\t}\n\n\tsetState(newState: IChartState, eventData?: any, silent = false) {\n\n\t\tif (this.isDestroyed) {\n\t\t\tUtils.error('You have tried to change state of destroyed Chart instance');\n\t\t}\n\n\t\t// temporary remove trends state from newState by performance reasons\n\t\tlet trendsData: {[trendName: string]: ITrendData} = {};\n\t\tif (newState.trends) for (let trendName in newState.trends) {\n\t\t\tlet trendOptions = newState.trends[trendName];\n\t\t\tif (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t\t\tdelete trendOptions.data;\n\t\t}\n\t\tlet newStateContainsData = Object.keys(trendsData).length > 0;\n\n\n\t\t// setup ids to array items\n\t\tnewState = Utils.deepMerge({}, newState);\n\t\tUtils.setIdsToArrayItems(newState);\n\n\t\tlet currentStateData = this.state as {[key: string]: any};\n\t\tlet newStateObj = newState as {[key: string]: any};\n\n\t\tvar changedProps: {[key: string]: any} = {};\n\t\tfor (let key in newStateObj) {\n\t\t\tif (currentStateData[key] !== newStateObj[key]) {\n\t\t\t\tchangedProps[key] = newStateObj[key] as any;\n\t\t\t}\n\t\t}\n\n\t\tthis.savePrevState(changedProps as IChartState);\n\t\tthis.state = Utils.patch(this.state, newState); //Utils.deepMerge(this.state, newState, false);\n\n\n\t\t// return trends to state\n\t\tif (newStateContainsData) for (let trendName in trendsData) {\n\t\t\tthis.state.trends[trendName].data = trendsData[trendName];\n\t\t}\n\n\t\tif (silent) return;\n\n\t\t// recalculate all dynamic state props\n\t\tvar recalculateResult = this.recalculateState(changedProps);\n\t\tchangedProps = recalculateResult.changedProps;\n\t\t\n\t\tthis.emitChangedStateEvents(changedProps, eventData);\n\n\t}\n\n\t/**\n\t * recalculate all computed state props\n\t */\n\tprivate recalculateState(changedProps?: IChartState): IRecalculatedStateResult {\n\t\tvar data = this.state;\n\t\tvar patch: IChartState = {};\n\t\tvar actualData = Utils.patch({}, data); //Utils.deepMerge({}, data);\n\n\t\t// recalculate scroll position by changed cursor params\n\t\tvar cursorOptions = changedProps.cursor;\n\t\tvar isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t\tif (isMouseDrag) {\n\t\t\tvar oldX = data.prevState.cursor.x;\n\t\t\tvar currentX =  cursorOptions.x;\n\t\t\tvar currentScroll = data.xAxis.range.scroll;\n\t\t\tvar deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\n\t\t\tpatch.xAxis = {range: {scroll: currentScroll + deltaXVal}};\n\t\t\tactualData = Utils.patch(actualData, {xAxis: patch.xAxis} as IChartState);//Utils.deepMerge(actualData, {xAxis: patch.xAxis} as IChartState)\n\t\t}\n\n\t\tlet chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\n\t\tlet scrollXChanged = false;\n\t\tlet needToRecalculateXAxis = (\n\t\t\tisMouseDrag ||\n\t\t\tchartWasResized ||\n\t\t\t(changedProps.xAxis && (changedProps.xAxis.range)) ||\n\t\t\tthis.state.xAxis.range.zeroVal == void 0\n\t\t);\n\t\tif (needToRecalculateXAxis) {\n\t\t\tlet xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t\t\tif (xAxisPatch) {\n\t\t\t\tscrollXChanged = true;\n\t\t\t\t//patch = Utils.deepMerge(patch, {xAxis: xAxisPatch});\n\t\t\t\tUtils.patch(patch, {xAxis: xAxisPatch});\n\t\t\t\t//actualData = Utils.deepMerge(actualData, {xAxis: xAxisPatch} as IChartState);\n\t\t\t\tUtils.patch(actualData, {xAxis: xAxisPatch} as IChartState);\n\t\t\t}\n\t\t}\n\n\n\n\t\t// recalculate axis \"from\" and \"to\" for dynamics AXIS_RANGE_TYPE\n\t\tlet needToRecalculateYAxis = (\n\t\t\tchartWasResized ||\n\t\t\t(\n\t\t\t\tdata.yAxis.range.type === AXIS_RANGE_TYPE.RELATIVE_END ||\n\t\t\t\tdata.yAxis.range.type === AXIS_RANGE_TYPE.AUTO ||\n\t\t\t\tdata.yAxis.range.isMirrorMode\n\t\t\t) &&\n\t\t\t(scrollXChanged || changedProps.trends || changedProps.yAxis) ||\n\t\t\tthis.state.yAxis.range.zeroVal == void 0\n\t\t);\n\t\tif (needToRecalculateYAxis){\n\t\t\tlet yAxisPatch = this.recalculateYAxis(actualData);\n\t\t\tif (yAxisPatch) {\n\t\t\t\t// patch = Utils.deepMerge(patch, {yAxis: yAxisPatch});\n\t\t\t\t// actualData = Utils.deepMerge(actualData, {yAxis: yAxisPatch} as IChartState);\n\t\t\t\tUtils.patch(patch, {yAxis: yAxisPatch});\n\t\t\t\tUtils.patch(actualData, {yAxis: yAxisPatch} as IChartState);\n\t\t\t}\n\t\t}\n\n\t\tthis.savePrevState(patch);\n\t\tlet allChangedProps = Utils.deepMerge(changedProps, patch);\n\t\tpatch.computedData = this.getComputedData(allChangedProps);\n\t\tthis.savePrevState(patch);\n\t\t// this.state = Utils.deepMerge(this.state, patch);\n\t\tUtils.patch(this.state, patch);\n\t\treturn {changedProps: allChangedProps, patch: patch}\n\t}\n\n\tprivate getComputedData(changedProps?: IChartState): IChartStateComputedData {\n\t\tvar computeAll = !changedProps;\n\t\tvar computedData: IChartStateComputedData = {};\n\n\t\tif (computeAll || changedProps.trends && this.trendsManager) {\n\t\t\tcomputedData.trends = {\n\t\t\t\tmaxXVal: this.trendsManager.getEndXVal(),\n\t\t\t\tminXVal: this.trendsManager.getStartXVal()\n\t\t\t}\n\t\t}\n\t\treturn computedData;\n\t}\n\n\tprivate savePrevState(changedProps?: IChartState) {\n\t\tif (!changedProps) changedProps = this.state;\n\t\tvar prevState = this.state.prevState;\n\n\t\t// prevent to store prev trend state by performance reasons\n\t\tUtils.copyProps(this.state, prevState, changedProps, ['trends']);\n\n\t}\n\n\tprivate emitChangedStateEvents(changedProps: IChartState, eventData: any) {\n\t\tvar prevState = this.state.prevState;\n\n\t\t// emit common change event\n\t\tthis.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\n\t\t// emit event for each changed state property\n\t\tfor (let key in changedProps) {\n\t\t\tthis.ee.emit(key + 'Change', (changedProps as {[key: string]: any})[key], eventData);\n\t\t}\n\n\t\tif (!this.isReady) return;\n\n\t\t// emit special events based on changed state\n\t\tlet dragEventNeeded = (\n\t\t\tchangedProps.cursor &&\n\t\t\t(changedProps.cursor.dragMode != prevState.cursor.dragMode)\n\t\t);\n\t\tdragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n\n\t\tlet scrollChangeEventsNeeded = (\n\t\t\tchangedProps.xAxis &&\n\t\t\tchangedProps.xAxis.range &&\n\t\t\tchangedProps.xAxis.range.scroll != void 0\n\t\t);\n\t\tscrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\n\t\tlet zoomEventsNeeded = (\n\t\t\t(changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom) ||\n\t\t\t(changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom)\n\t\t);\n\t\tzoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\n\t\tlet resizeEventNeeded = (changedProps.width || changedProps.height);\n\t\tresizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\n\t\tlet viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\n\t\tif (viewportChangeEventNeeded) this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\n\n\t\tlet pluginStateChangedEventNeeded = !!(changedProps.pluginsState);\n\t\tpluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t}\n\n\n\t/**\n\t * init plugins and save plugins params in initialState\n\t */\n\tprivate installPlugins(plugins: ChartPlugin<any>[], initialState: IChartState): IChartState {\n\t\tinitialState.pluginsState = {};\n\t\tplugins.forEach(plugin => {\n\t\t\tlet PluginClass = plugin.constructor as typeof ChartPlugin;\n\t\t\tlet pluginName = PluginClass.NAME;\n\t\t\tinitialState.pluginsState[pluginName] = plugin.initialState;\n\t\t\tthis.plugins[pluginName] = plugin;\n\t\t\tplugin.setupChart(this);\n\t\t});\n\t\treturn initialState;\n\t}\n\n\n\t/**\n\t * returns plugin instance by plugin name\n\t * @example\n\t */\n\tgetPlugin(pluginName: string): ChartPlugin<any> {\n\t\treturn this.plugins[pluginName];\n\t}\n\n\n\tprivate bindEvents() {\n\t\tthis.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, (changedTrends: ITrendsOptions, newData: ITrendData) => {\n\t\t\tthis.handleTrendsChange(changedTrends, newData)\n\t\t});\n\n\t\tthis.onDragStateChanged(dragState => this.onDragStateChangedHandler(dragState));\n\n\t\tthis.ee.on('animationsChange', (animationOptions: IAnimationsOptions) => {\n\t\t\tif (animationOptions.enabled !== this.animationManager.isAnimationsEnabled) {\n\t\t\t\tthis.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate handleTrendsChange(changedTrends: ITrendsOptions, newData: ITrendData) {\n\t\tfor (let trendName in changedTrends) {\n\t\t\tthis.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t\t}\n\n\t\t// process autoscroll\n\t\tlet state = this.state;\n\t\tif (!state.autoScroll || state.cursor.dragMode) return;\n\t\tlet oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n\t\tlet trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n\n\t\tif (trendsMaxXDelta > 0) {\n\t\t\tlet maxVisibleXVal = this.viewport.getRightVal();\n\t\t\tlet paddingRightVal = this.viewport.getValByViewportX(\n\t\t\t\tthis.state.width -\n\t\t\t\tstate.xAxis.range.padding.end -\n\t\t\t\tstate.xAxis.range.margin.end\n\t\t\t);\n\t\t\tlet marginRightVal = this.viewport.getValByViewportX(\n\t\t\t\tthis.state.width -\n\t\t\t\tstate.xAxis.range.margin.end\n\t\t\t);\n\t\t\tvar currentScroll = state.xAxis.range.scroll;\n\t\t\tif (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n\n\t\t\tthis.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}});\n\t\t}\n\t}\n\n\tprivate onDragStateChangedHandler(isDragMode: boolean) {\n\n\t\t// process inertial scroll\n\t\tlet state = this.state;\n\t\tif (!state.inertialScroll || isDragMode) return;\n\n\t\t// TODO:\n\t\t// let currentScroll = state.xAxis.range.scroll;\n\t\t// let currentX = state.cursor.x;\n\t\t// let prevX = state.prevState.cursor.x;\n\t\t// let scrollDelta = this.pxToValueByXAxis(prevX - currentX) * 10;\n\t\t// this.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}})\n\t}\n\n\tprivate recalculateXAxis(actualData: IChartState, changedProps: IChartState): IAxisOptions {\n\t\tvar axisRange = actualData.xAxis.range;\n\t\tvar patch: IAxisOptions = {range: {}};\n\t\tvar isInitialize = axisRange.zeroVal == void 0;\n\t\tvar zeroVal: number, scaleFactor: number;\n\t\tvar zoom = axisRange.zoom;\n\n\t\tif (axisRange.isMirrorMode) {\n\t\t\tUtils.error('range.isMirrorMode available only for yAxis.range');\n\t\t}\n\n\t\tif (isInitialize) {\n\t\t\tzeroVal = axisRange.from;\n\t\t\tscaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t\t\tpatch = { range: {zeroVal: zeroVal, scaleFactor: scaleFactor}};\n\t\t} else {\n\t\t\tzeroVal = axisRange.zeroVal;\n\t\t\tscaleFactor = axisRange.scaleFactor;\n\n\t\t\t// recalculate range.zoom and range.scroll then range.from or range.to was changed\n\t\t\tif (\n\t\t\t\tchangedProps.xAxis &&\n\t\t\t\t(changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)\n\t\t\t) {\n\t\t\t\tif (changedProps.xAxis.range.zoom) {\n\t\t\t\t\tUtils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t\t\t\t}\n\t\t\t\tlet currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t\t\t\tpatch.range.scroll = axisRange.from - zeroVal;\n\t\t\t\tpatch.range.zoom = currentScaleFactor / scaleFactor;\n\t\t\t\treturn patch;\n\t\t\t}\n\t\t}\n\n\n\t\t// recalculate range.from and range.to then range.zoom or range.scroll was changed\n\t\tdo {\n\t\t\tvar from = zeroVal + axisRange.scroll;\n\t\t\tvar to = from + actualData.width / (scaleFactor * zoom);\n\t\t\tvar rangeLength = to - from;\n\t\t\tvar needToRecalculateZoom = false;\n\t\t\tvar rangeMoreThenMaxValue = (axisRange.maxLength && rangeLength > axisRange.maxLength);\n\t\t\tvar rangeLessThenMinValue = (axisRange.minLength && rangeLength < axisRange.minLength);\n\t\t\tneedToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t\t\tif (needToRecalculateZoom) {\n\t\t\t\tvar fixScale = rangeLength > axisRange.maxLength ?\n\t\t\t\t\trangeLength / axisRange.maxLength :\n\t\t\t\t\trangeLength / axisRange.minLength;\n\t\t\t\tvar zoom = zoom * fixScale;\n\t\t\t\tpatch.range.zoom = zoom;\n\t\t\t}\n\t\t} while (needToRecalculateZoom);\n\n\t\tpatch.range.from = from;\n\t\tpatch.range.to = to;\n\t\treturn patch;\n\t}\n\n\n\tprivate recalculateYAxis(actualData: IChartState): IAxisOptions {\n\t\tvar patch: IAxisOptions = {range: {}};\n\t\tvar yAxisRange = actualData.yAxis.range;\n\t\tvar isInitialize = yAxisRange.scaleFactor == void 0;\n\t\tvar trends = this.trendsManager;\n\t\tvar trendsEndXVal = trends.getEndXVal();\n\t\tvar trendsStartXVal = trends.getStartXVal();\n\t\tvar xRange = actualData.xAxis.range;\n\t\tvar {from: xFrom, to: xTo} = xRange;\n\t\tvar xRangeLength = xTo - xFrom;\n\t\tvar zeroVal: number, scaleFactor: number, scroll: number, zoom: number, needToZoom: boolean;\n\n\t\t// check situation when state was scrolled behind trends end or before trends start\n\t\tif (xTo > trendsEndXVal) {\n\t\t\txTo = trendsEndXVal;\n\t\t\txFrom = xTo - xRangeLength;\n\t\t} else if (xFrom < trendsStartXVal) {\n\t\t\txFrom = trendsStartXVal;\n\t\t\txTo = xFrom + xRangeLength;\n\t\t}\n\n\t\tvar maxY = trends.getMaxYVal(xFrom, xTo);\n\t\tvar minY = trends.getMinYVal(xFrom, xTo);\n\n\t\tvar trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t\tif (yAxisRange.type == AXIS_RANGE_TYPE.RELATIVE_END) {\n\t\t\tif (trendLastY > maxY) maxY = trendLastY;\n\t\t\tif (trendLastY < minY) minY = trendLastY;\n\t\t}\n\n\t\tif (yAxisRange.isMirrorMode) {\n\t\t\tif (yAxisRange.zeroVal == void 0) Utils.error('range.zeroVal must be set when range.isMirrorMode');\n\t\t\tlet distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t\t\tlet distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t\t\tlet maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t\t\tmaxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t\t\tminY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t\t}\n\t\tlet margin = yAxisRange.margin;\n\t\tlet padding = {\n\t\t\tstart: yAxisRange.padding.start + margin.start,\n\t\t\tend: yAxisRange.padding.end + margin.end\n\t\t};\n\n\t\tif (padding.end + padding.start >= actualData.height) {\n\t\t\tUtils.warn('Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly');\n\t\t}\n\n\t\tlet rangeLength = maxY - minY;\n\t\tlet paddingTopInPercents = padding.end / actualData.height;\n\t\tlet paddingBottomInPercents = padding.start / actualData.height;\n\t\tlet rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t\tlet visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t\tlet fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t\tlet toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t\t\n\t\tif (isInitialize) {\n\t\t\tzeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t\t\tscaleFactor = actualData.height / (toVal - fromVal);\n\t\t\tpatch = { range: {zeroVal: zeroVal, scaleFactor: scaleFactor}};\n\t\t\tneedToZoom = true;\n\t\t} else {\n\t\t\tscaleFactor = yAxisRange.scaleFactor;\n\t\t\tzeroVal = yAxisRange.zeroVal;\n\n\t\t\tlet maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\n\t\t\tlet minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\n\t\t\tneedToZoom = (\n\t\t\t\tmaxScreenY > actualData.height - margin.end ||\n\t\t\t\tmaxScreenY < actualData.height - padding.end ||\n\t\t\t\tminScreenY < margin.start ||\n\t\t\t\tminScreenY > padding.start\n\t\t\t);\n\t\t}\n\n\t\tif (!needToZoom) return null;\n\n\t\tscroll = fromVal - zeroVal;\n\t\tzoom = (actualData.height / (toVal - fromVal)) / scaleFactor ;\n\n\t\tvar currentAxisRange = this.state.yAxis.range;\n\t\tif (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t\tif (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t\tif (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t\tif (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t\t\n\t\treturn patch;\n\t}\n\n\tzoom(zoomValue: number, origin = 0.5): Promise<void> {\n\t\tlet {zoom, scroll, scaleFactor} = this.state.xAxis.range;\n\t\tlet newZoom = zoom * zoomValue;\n\t\tlet currentRange = this.state.width / (scaleFactor * zoom);\n\t\tlet nextRange = this.state.width / (scaleFactor * newZoom);\n\t\tlet newScroll = scroll + (currentRange - nextRange) * origin;\n\t\tthis.setState({xAxis: {range: {zoom: newZoom, scroll: newScroll}}});\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet animationTime = this.state.animations.enabled ? this.state.animations.zoomSpeed : 0;\n\t\t\tsetTimeout(resolve, animationTime * 1000);\n\t\t});\n\t}\n\t\n\tzoomToRange(range: number, origin?: number): Promise<void> {\n\t\tvar {scaleFactor, zoom} = this.state.xAxis.range;\n\t\tlet currentRange = this.state.width / (scaleFactor * zoom);\n\t\treturn this.zoom(currentRange / range, origin);\n\t}\n\n\tscrollToEnd(): Promise<void> {\n\t\tlet state = this.state;\n\t\tlet endXVal = this.trendsManager.getEndXVal();\n\t\tlet range = state.xAxis.range;\n\t\tlet scroll = (\n\t\t\tendXVal - this.viewport.pxToValByXAxis(state.width) +\n\t\t\tthis.viewport.pxToValByXAxis(range.padding.end + range.margin.end) -\n\t\t\trange.zeroVal\n\t\t);\n\t\tthis.setState({xAxis: {range: {scroll: scroll}}});\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n\t\t\tsetTimeout(resolve, animationTime);\n\t\t});\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Chart.ts\n **/","import {Chart, IChartState} from \"./Chart\";\nimport {Utils} from \"./Utils\";\nimport {TrendSegmentsManager} from \"./TrendSegmentsManager\";\nimport {EventEmitter} from './EventEmmiter';\nimport {Promise} from './deps/deps';\nimport { TColor } from './Color';\n\nexport interface IPrependPromiseExecutor {\n\t(requestedDataLength: number, resolve: (data: TTrendRawData) => void, reject: () => void): void;\n}\nconst EVENTS = {\n\tCHANGE: 'Change',\n\tPREPEND_REQUEST: 'prependRequest'\n};\nexport enum TREND_TYPE {LINE, CANDLE}\nexport type TTrendRawData = ITrendData | number[];\nexport interface ITrendItem {xVal: number, yVal: number, id?: number}\nexport interface ITrendData extends Array<ITrendItem>{}\nexport interface ITrendTypeSettings {\n\tminSegmentLengthInPx?: number;\n\tmaxSegmentLengthInPx?: number;\n}\nexport interface ITrendOptions {\n\tenabled?: boolean,\n\tdata?: ITrendData\n\tdataset?: ITrendData | number[];\n\tname?: string;\n\ttype?: TREND_TYPE;\n\tlineWidth?: number;\n\tlineColor?: TColor;\n\tbackgroundColor?: TColor;\n\thasIndicator?: boolean;\n\thasBackground?: boolean;\n\thasBeacon?: boolean;\n\tmaxSegmentLength?: number;\n\tsettingsForTypes?: {\n\t\tCANDLE?: ITrendTypeSettings,\n\t\tLINE?: ITrendTypeSettings\n\t}\n}\n\nexport class Trend {\n\tname: string;\n\tsegmentsManager: TrendSegmentsManager;\n\tminXVal = Infinity;\n\tminYVal = Infinity;\n\tmaxXVal = -Infinity;\n\tmaxYVal = -Infinity;\n\tprivate chart: Chart;\n\tprivate calculatedOptions: ITrendOptions;\n\tprivate prependRequest: Promise<TTrendRawData>;\n\tprivate ee: EventEmitter;\n\t\n\tconstructor(chartState: Chart, trendName: string, initialState: IChartState) {\n\t\tvar options = initialState.trends[trendName];\n\t\tthis.name = trendName;\n\t\tthis.chart = chartState;\n\t\tthis.calculatedOptions = Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t\tthis.calculatedOptions.name = trendName;\n\t\tif (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t\tthis.calculatedOptions.dataset = [];\n\t\tthis.ee = new EventEmitter();\n\t\tthis.segmentsManager = new TrendSegmentsManager(this.chart, this);\n\t\tthis.bindEvents();\n\t}\n\n\t// private onInitialStateApplied() {\n\t// \tthis.segmentsManager = new TrendSegmentsManager(this.chart, this);\n\t// }\n\n\tprivate bindEvents() {\n\t\tvar chartState = this.chart;\n\t\t// chart.onInitialStateApplied(() => this.onInitialStateApplied());\n\t\tchartState.onDragStateChanged(() => this.checkForPrependRequest());\n\t\tchartState.onZoom(() => this.checkForPrependRequest());\n\t\tchartState.onTrendChange((trendName, changedOptions, newData) => this.ee.emit(EVENTS.CHANGE, changedOptions, newData));\n\t\tchartState.onDestroy(() => this.ee.removeAllListeners());\n\t}\n\n\tgetCalculatedOptions() {\n\t\treturn this.calculatedOptions;\n\t}\n\n\tappendData(rawData: TTrendRawData) {\n\t\tvar options = this.getOptions();\n\t\tvar newData = Trend.prepareData(rawData, this.getData());\n\t\tvar updatedTrendData = options.data.concat(newData);\n\t\tthis.changeData(updatedTrendData, newData);\n\t}\n\n\tprependData(rawData: TTrendRawData) {\n\t\tvar options = this.getOptions();\n\t\tvar newData = Trend.prepareData(rawData, this.getData(), true);\n\t\tvar updatedTrendData = newData.concat(options.data);\n\t\tthis.changeData(updatedTrendData, newData);\n\t}\n\n\tprivate changeData(allData: ITrendData, newData: ITrendData) {\n\t\tfor (let item of newData) {\n\t\t\tif (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t\t\tif (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t\t\tif (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t\t\tif (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t\t}\n\t\tvar options = this.getOptions();\n\t\tvar statePatch: IChartState = {trends: {[options.name]: {data: allData}}};\n\t\tthis.chart.setState(statePatch, newData);\n\t}\n\t\n\tgetData(fromX?: number, toX?: number): ITrendData {\n\t\tvar data = this.getOptions().data;\n\t\tif (fromX == void 0 && toX == void 0) return data;\n\n\t\tfromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t\ttoX = toX !== void 0 ? toX : data[data.length].xVal;\n\t\tvar filteredData: ITrendData = [];\n\t\tfor (let item of data) {\n\t\t\tif (item.xVal < fromX) continue;\n\t\t\tif (item.xVal > toX) break;\n\t\t\tfilteredData.push(item)\n\t\t}\n\t\treturn filteredData;\n\t}\n\n\tgetFirstItem(): ITrendItem {\n\t\treturn this.getOptions().data[0];\n\t}\n\t\n\tgetLastItem(): ITrendItem {\n\t\tvar data = this.getOptions().data;\n\t\treturn data[data.length - 1];\n\t}\n\n\tgetOptions() {\n\t\treturn this.chart.state.trends[this.name]\n\t}\n\n\tsetOptions(options: ITrendOptions) {\n\t\tthis.chart.setState({trends: {[this.name]: options}});\n\t}\n\n\tonPrependRequest(cb: IPrependPromiseExecutor): Function {\n\t\tthis.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t\treturn () => {\n\t\t\tthis.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t\t}\n\t}\n\n\t/**\n\t * shortcut for Chart.onTrendChange\n\t */\n\tonChange(cb: (changedOptions: ITrendOptions, newData: ITrendData) => void): Function {\n\t\tthis.ee.on(EVENTS.CHANGE, cb);\n\t\treturn () => { this.ee.off(EVENTS.CHANGE, cb);}\n\t}\n\n\tonDataChange(cb: (newData: ITrendData) => void): Function {\n\t\tvar onChangeCb = (changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tif (newData) cb(newData);\n\t\t};\n\t\tthis.ee.on(EVENTS.CHANGE, onChangeCb);\n\t\treturn () => {\n\t\t\tthis.ee.off(EVENTS.CHANGE, onChangeCb);\n\t\t}\n\t}\n\n\tprivate checkForPrependRequest() {\n\t\tif (this.prependRequest) return;\n\t\tvar chartState = this.chart;\n\t\tvar minXVal = chartState.state.computedData.trends.minXVal;\n\t\tvar minScreenX = chartState.viewport.getViewportYByVal(minXVal);\n\t\tvar needToRequest = minScreenX > 0;\n\t\tvar {from, to} = chartState.state.xAxis.range;\n\t\tvar requestedDataLength = to - from;\n\t\tif (!needToRequest) return;\n\t\t\n\t\tthis.prependRequest = new Promise<TTrendRawData>((resolve: Function, reject: Function) => {\n\t\t\tthis.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t\t});\n\n\t\tthis.prependRequest.then((newData: TTrendRawData) => {\n\t\t\tthis.prependData(newData);\n\t\t\tthis.prependRequest = null;\n\t\t}, () => {\n\t\t\tthis.prependRequest = null;\n\t\t})\n\t\n\t}\n\n\tstatic prepareData (newData: TTrendRawData, currentData?: ITrendData, isPrepend = false): ITrendData {\n\t\tvar data: ITrendData = [];\n\t\tif (typeof newData[0] == 'number') {\n\t\t\tcurrentData = currentData || [];\n\t\t\tlet initialItem: ITrendItem;\n\t\t\tlet xVal: number;\n\t\t\tif (isPrepend) {\n\t\t\t\tinitialItem = currentData[0];\n\t\t\t\txVal = initialItem.xVal - newData.length;\n\t\t\t} else {\n\t\t\t\tinitialItem = currentData[currentData.length - 1];\n\t\t\t\txVal = initialItem ? initialItem.xVal + 1 : 0;\n\t\t\t}\n\t\t\tfor (let yVal of newData as number[]) {\n\t\t\t\tdata.push({xVal: xVal, yVal: yVal, id: Utils.getUid()});\n\t\t\t\txVal++;\n\t\t\t}\n\t\t} else {\n\t\t\tdata = newData as ITrendData;\n\t\t}\n\t\treturn data;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Trend.ts\n **/","import { IIteralable } from \"./interfaces\";\nimport { EventEmitter } from './EventEmmiter';\nimport { Chart } from \"./Chart\";\nimport Vector3 = THREE.Vector3;\nimport { ITrendData, ITrendOptions, ITrendItem, Trend, TREND_TYPE, ITrendTypeSettings } from \"./Trend\";\nimport { Utils } from \"./Utils\";\n\nconst MAX_ANIMATED_SEGMENTS = 100;\nconst EVENTS = {\n\tREBUILD: 'rebuild',\n\tDISLPAYED_RANGE_CHANGED: 'displayedRangeChanged',\n\tANIMATION_FRAME: 'animationFrame'\n};\n\n/**\n *  Class helps to display and animate trends segments\n */\nexport class TrendSegmentsManager {\n\tsegmentsById: {[id: string]: TrendSegment} = {};\n\tsegments: TrendSegment[] = [];\n\tchart: Chart;\n\tanimatedSegmentsIds: number[] = [];\n\tmaxSegmentLength: number;\n\tsegmentsLength = 0;\n\tfirstDisplayedSegmentInd: number;\n\tfirstDisplayedSegment: TrendSegment;\n\tlastDisplayedSegmentInd: number;\n\tlastDisplayedSegment: TrendSegment;\n\tprivate appendAnimation: TweenLite;\n\tprivate prependAnimation: TweenLite;\n\tprivate animatedSegmentsForAppend: number[] = [];\n\tprivate animatedSegmentsForPrepend: number[] = [];\n\tprivate nextEmptyId = 0;\n\tprivate startSegmentId = 0;\n\tprivate endSegmentId = 0;\n\tprivate trend: Trend;\n\tprivate ee: EventEmitter;\n\n\t// TODO: make subscriptions array\n\tprivate unbindList: Function[] = [];\n\n\tconstructor (chart: Chart, trend: Trend) {\n\t\tthis.chart = chart;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.trend = trend;\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.trend.onChange((changedOptions, newData) => this.onTrendChangeHandler(changedOptions, newData));\n\t\tthis.unbindList = [\n\t\t\tthis.chart.onInitialStateApplied(() => this.onInitialStateAppliedHandler()),\n\t\t\tthis.chart.onZoom(() => this.onZoomHandler()),\n\t\t\tthis.chart.onScroll(() => this.recalculateDisplayedRange()),\n\t\t\tthis.chart.onDestroy(() => this.onDestroyHandler())\n\t\t]\n\t}\n\n\tprivate unbindEvents() {\n\t\tthis.unbindList.forEach(unbind => unbind())\n\t}\n\n\tprivate onInitialStateAppliedHandler() {\n\t\tthis.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n\t\tthis.tryToRebuildSegments();\n\t}\n\n\tprivate onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t\tthis.unbindEvents();\n\t\tthis.appendAnimation && this.appendAnimation.kill();\n\t\tthis.prependAnimation && this.prependAnimation.kill();\n\t}\n\n\tprivate onZoomHandler() {\n\t\tlet segmentsRebuilded = this.tryToRebuildSegments();\n\t\tif (!segmentsRebuilded) {\n\t\t\tthis.recalculateDisplayedRange()\n\t\t}\n\t}\n\n\tprivate onTrendChangeHandler(changedOptions: ITrendOptions, newData: ITrendData) {\n\t\tvar needToRebuildSegments = (\n\t\t\tchangedOptions.type != void 0 ||\n\t\t\tchangedOptions.maxSegmentLength != void 0\n\t\t);\n\n\n\t\tif (needToRebuildSegments) {\n\t\t\tthis.tryToRebuildSegments(true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!newData) return;\n\n\t\tvar data = this.trend.getData();\n\t\tvar isAppend = (!data.length || data[0].xVal < newData[0].xVal);\n\t\tisAppend ? this.appendData(newData) : this.prependData(newData);\n\t\tthis.recalculateDisplayedRange();\n\t}\n\n\tgetSegment(id: number) {\n\t\treturn this.segmentsById[id];\n\t}\n\n\tgetEndSegment(): TrendSegment {\n\t\treturn this.segmentsById[this.endSegmentId];\n\t}\n\n\tgetStartSegment(): TrendSegment {\n\t\treturn this.segmentsById[this.startSegmentId];\n\t}\n\t\n\tprivate tryToRebuildSegments(force = false): boolean {\n\t\tlet options = this.trend.getOptions();\n\t\tlet trendTypeName = TREND_TYPE[options.type] as string;\n\t\tlet trendTypesSettings =  options.settingsForTypes as IIteralable;\n\t\tlet trendTypeSettings = trendTypesSettings[trendTypeName] as ITrendTypeSettings;\n\t\tlet {\n\t\t\tminSegmentLengthInPx,\n\t\t\tmaxSegmentLengthInPx\n\t\t} = trendTypeSettings;\n\n\t\tlet needToRebuild = this.segments.length === 0 || force;\n\t\tlet segmentLength = this.maxSegmentLength;\n\n\t\t// call toFixed(2) to prevent floating segment error compare\n\t\tlet currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\n\t\tlet currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\n\t\tif (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t\t\tneedToRebuild = true;\n\t\t\tsegmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\n\t\t} else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t\t\tneedToRebuild = true;\n\t\t\tsegmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\n\t\t}\n\n\t\tif (!needToRebuild) return false;\n\n\t\tthis.maxSegmentLength = segmentLength;\n\t\tthis.segmentsById = {};\n\t\tthis.segments = [];\n\t\tthis.nextEmptyId = 0;\n\t\tthis.startSegmentId = 0;\n\t\tthis.endSegmentId = 0;\n\t\tthis.segmentsLength = 0;\n\t\tthis.stopAllAnimations();\n\t\tthis.appendData(null, true);\n\t\tthis.recalculateDisplayedRange(true);\n\t\tthis.ee.emit(EVENTS.REBUILD);\n\t}\n\n\tprivate stopAllAnimations() {\n\t\tthis.animatedSegmentsIds = [];\n\t\tthis.animatedSegmentsForAppend = [];\n\t\tthis.animatedSegmentsForAppend = [];\n\t\tif (this.prependAnimation) this.prependAnimation.kill();\n\t\tif (this.appendAnimation) this.appendAnimation.kill();\n\t}\n\t\n\tprivate recalculateDisplayedRange(segmentsAreRebuilded = false) {\n\t\tvar {from, to} = this.chart.state.xAxis.range;\n\t\tvar {firstDisplayedSegment, lastDisplayedSegment} = this;\n\t\tvar displayedRange = to - from;\n\n\t\tthis.firstDisplayedSegmentInd = Utils.binarySearchClosestInd(this.segments, from - displayedRange, 'startXVal');\n\t\tthis.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t\tthis.lastDisplayedSegmentInd = Utils.binarySearchClosestInd(this.segments, to + displayedRange, 'endXVal');\n\t\tthis.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t\tif (segmentsAreRebuilded) return;\n\n\t\tvar displayedRangeChanged = (\n\t\t\tfirstDisplayedSegment.id !== this.firstDisplayedSegment.id ||\n\t\t\tlastDisplayedSegment.id !== this.lastDisplayedSegment.id\n\t\t);\n\t\tif (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t}\n\n\t// getSegments(fromX?: number, toX?: number): TrendSegment[] {\n\t// \tvar segments = this.segments;\n\t// \tif (fromX == void 0 && toX == void 0) return segments;\n\t// \tfromX = fromX !== void 0 ? fromX : segments[0].startXVal;\n\t// \ttoX = toX !== void 0 ? toX : segments[this.segmentsLength].endXVal;\n\t// \tvar startSegmentInd = Utils.closestBinarySearch(segments, fromX, 'xVal');\n\t// \tvar endSegmentInd = Utils.closestBinarySearch(segments, toX, 'xVal');\n\t// \treturn segments.slice(startSegmentInd, endSegmentInd);\n\t// }\n\n\t/**\n\t * returns array of segments for values array\n\t * values must be sorted!\n\t */\n\tgetSegmentsForXValues(values: number[]): TrendSegment[] {\n\t\tvar valueInd = 0;\n\t\tvar value = values[valueInd];\n\t\tvar lastValueInd = values.length - 1;\n\t\tvar results: TrendSegment[] = [];\n\t\tvar segment = this.getStartSegment();\n\t\tif (!segment.hasValue) return [];\n\t\twhile (segment) {\n\t\t\n\t\t\twhile (value < segment.startXVal) {\n\t\t\t\tresults.push(void 0);\n\t\t\t\tvalue = values[++valueInd];\n\t\t\t}\n\t\t\n\t\t\twhile (value > segment.endXVal) {\n\t\t\t\tsegment = segment.getNext();\n\t\t\t\tif (!segment) break;\n\t\t\t}\n\t\t\n\t\t\tvar valueInPoint = (\n\t\t\t\tsegment.startXVal == value || segment.endXVal == value ||\n\t\t\t\t(segment.startXVal < value && segment.endXVal > value)\n\t\t\t);\n\t\t\tif (valueInPoint) {\n\t\t\t\tresults.push(segment);\n\t\t\t\tvalue = values[++valueInd];\n\t\t\t}\n\t\t\tif (valueInd > lastValueInd) break;\n\t\t}\n\t\treturn results;\n\t}\n\n\tonAnimationFrame(cb: (animationState: TrendSegmentsManager) => void): Function {\n\t\treturn this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t}\n\n\tonRebuild(cb: Function) {\n\t\treturn this.ee.subscribe(EVENTS.REBUILD, cb);\n\t}\n\n\tonDisplayedRangeChanged(cb: Function) {\n\t\treturn this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t}\n\t\n\tallocateNextSegment() {\n\t\tvar id = this.nextEmptyId++;\n\t\tvar segment = new TrendSegment(this, id);\n\t\tvar prevSegment = this.segmentsById[this.endSegmentId];\n\t\tif (prevSegment && prevSegment.hasValue) {\n\t\t\tprevSegment.nextId = id;\n\t\t\tsegment.prevId = prevSegment.id;\n\t\t}\n\t\tthis.endSegmentId = id;\n\t\tthis.segmentsLength++;\n\t\tthis.segmentsById[id] = segment;\n\t\tthis.segments.push(segment);\n\t\treturn segment;\n\t}\n\n\tallocatePrevSegment() {\n\t\tvar id = this.nextEmptyId++;\n\t\tvar segment = new TrendSegment(this, id);\n\t\tvar nextSegment = this.segmentsById[this.startSegmentId];\n\t\tif (nextSegment && nextSegment.hasValue) {\n\t\t\tnextSegment.prevId = id;\n\t\t\tsegment.nextId = nextSegment.id;\n\t\t}\n\t\tthis.startSegmentId = id;\n\t\tthis.segmentsLength++;\n\t\tthis.segmentsById[id] = segment;\n\t\tthis.segments.unshift(segment);\n\t\treturn segment;\n\t}\n\n\tprivate appendData(newData: ITrendData, needRebuildSegments = false) {\n\n\t\t// WARNING: bottleneck method!\n\n\t\t// var t1 = performance.now();\n\t\tvar trendData = this.trend.getData();\n\t\tif (needRebuildSegments) {\n\t\t\tnewData = trendData;\n\t\t\tthis.animatedSegmentsForAppend = [];\n\t\t}\n\n\t\tvar startItemInd = trendData.length - newData.length;\n\t\tvar segment = this.getEndSegment() || this.allocateNextSegment();\n\t\tvar initialSegment = segment.hasValue ? segment : null;\n\t\tvar initialAnimationState = segment.createAnimationState();\n\t\tvar itemInd = 0;\n\t\twhile (itemInd < newData.length) {\n\t\t\tlet item = newData[itemInd];\n\t\t\tlet itemIsInserted = segment.appendItem(item);\n\t\t\tlet isLastItem = itemInd == newData.length - 1;\n\n\t\t\tif (itemIsInserted) {\n\t\t\t\tif (!isLastItem) itemInd++;\n\t\t\t} else {\n\t\t\t\tif (!segment.isCompleted) segment.complete();\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) {\n\t\t\t\tsegment.recalculateItems();\n\t\t\t}\n\n\t\t\tlet segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\n\t\t\tif (segmentIsReadyForAnimate) {\n\t\t\t\tlet id = segment.id;\n\t\t\t\tif (!initialSegment) initialSegment = segment;\n\t\t\t\tif (!initialAnimationState) {\n\t\t\t\t\tinitialAnimationState = initialSegment.createAnimationState();\n\t\t\t\t}\n\n\t\t\t\tsegment.initialAnimationState = Utils.deepMerge({}, initialAnimationState);\n\n\t\t\t\tif (this.animatedSegmentsForAppend.length > 0) {\n\t\t\t\t\tsegment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t\t\t\t\tsegment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t\t\t\t}\n\n\t\t\t\tsegment.currentAnimationState =  Utils.deepMerge({}, initialAnimationState);\n\t\t\t\tsegment.targetAnimationState = segment.createAnimationState();\n\t\t\t\tthis.animatedSegmentsForAppend.push(id);\n\n\t\t\t}\n\n\n\t\t\tif (isLastItem && itemIsInserted) break;\n\t\t\tif (!segment.isCompleted) continue;\n\n\t\t\tsegment = this.allocateNextSegment();\n\t\t\tlet prevItem = trendData[startItemInd + itemInd - 1];\n\t\t\tsegment.appendItem(prevItem);\n\n\t\t}\n\n\t\tvar animationsOptions = this.chart.state.animations;\n\t\tvar time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\n\t\t// var t2 = performance.now();\n\t\t// console.log(t2 - t1);\n\n\t\t// do not create animation if segments was rebuilded\n\t\tif (needRebuildSegments) {\n\t\t\tfor (let segmentId of this.animatedSegmentsForAppend) {\n\t\t\t\tlet segment = this.segmentsById[segmentId];\n\t\t\t\tsegment.currentAnimationState = segment.createAnimationState();\n\t\t\t}\n\t\t\tthis.animatedSegmentsForAppend = [];\n\t\t\treturn;\n\t\t}\n\t\tif (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t\tthis.animate(time);\n\t}\n\n\n\t// TODO: refactor duplicated code from appendData\n\tprivate prependData(newData: ITrendData) {\n\t\tvar trendData = this.trend.getData();\n\t\tvar segment = this.getStartSegment() || this.segmentsById[0];\n\t\tvar initialSegment = segment.hasValue ? segment : null;\n\t\tvar itemInd = newData.length - 1;\n\t\tvar initialAnimationState = segment.createAnimationState();\n\t\twhile (itemInd >= 0) {\n\t\t\tlet item = newData[itemInd];\n\t\t\tlet itemIsInserted = segment.prependItem(item);\n\t\t\tlet isLastItem = itemInd == 0;\n\n\t\t\tif (itemIsInserted) {\n\t\t\t\tif (!isLastItem) itemInd--;\n\t\t\t} else {\n\t\t\t\tif (!segment.isCompleted) segment.complete();\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) {\n\t\t\t\tsegment.recalculateItems();\n\t\t\t}\n\n\t\t\tlet segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\n\t\t\tif (segmentIsReadyForAnimate) {\n\t\t\t\tlet id = segment.id;\n\t\t\t\tif (!initialSegment) initialSegment = segment;\n\t\t\t\tif (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\n\t\t\t\tsegment.initialAnimationState = Utils.deepMerge({}, initialAnimationState);\n\t\t\t\tif (this.animatedSegmentsForPrepend.length > 0) {\n\t\t\t\t\tsegment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t\t\t\t\tsegment.initialAnimationState.endYVal =  initialAnimationState.startYVal;\n\t\t\t\t}\n\n\t\t\t\tsegment.targetAnimationState = segment.createAnimationState();\n\t\t\t\tthis.animatedSegmentsForPrepend.push(id);\n\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) break;\n\t\t\tif (!segment.isCompleted) continue;\n\n\t\t\tsegment = this.allocatePrevSegment();\n\t\t\tlet nextItem = trendData[itemInd + 1];\n\t\t\tsegment.prependItem(nextItem);\n\n\t\t}\n\n\t\tvar animationsOptions = this.chart.state.animations;\n\t\tvar time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\n\t\tif (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t\tthis.animate(time, true);\n\t}\n\n\tprivate animate(time: number, isPrepend = false) {\n\n\t\tvar animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t\tvar animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\n\t\tif ((animation && animation.isActive()) || time == 0) {\n\t\t\tif (animation) animation.kill();\n\t\t\tthis.onAnimationFrameHandler(1, isPrepend);\n\t\t\tanimatedSegmentsIds.length = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar animationsOptions = this.chart.state.animations;\n\t\tvar ease = animationsOptions.trendChangeEase;\n\t\tvar objectToAnimate = {animationValue: 0};\n\t\tanimation = TweenLite.to(objectToAnimate, time, {animationValue: 1, ease});\n\t\tanimation.eventCallback('onUpdate', () => this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend));\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimatedSegmentsIds.length = 0;\n\t\t\tthis.appendAnimation = null;\n\t\t});\n\n\t\tif (isPrepend) {\n\t\t\tthis.prependAnimation = animation;\n\t\t} else {\n\t\t\tthis.appendAnimation = animation;\n\t\t}\n\t}\n\n\tprivate onAnimationFrameHandler(coefficient: number, isPrepend = false) {\n\t\tlet animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t\tfor (let segmentId of animatedSegmentsIds) {\n\t\t\tlet segment = this.segmentsById[segmentId];\n\t\t\tfor (let key in segment.targetAnimationState) {\n\t\t\t\tlet targetValue = segment.targetAnimationState[key] as number;\n\t\t\t\tlet initialValue = segment.initialAnimationState[key] as number;\n\t\t\t\tlet currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t\t\t\tsegment.currentAnimationState[key] = currentValue;\n\t\t\t}\n\t\t}\n\t\tthis.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t\tthis.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t}\n\n}\n\nexport interface ITrendSegmentState extends IIteralable {\n\txVal?: number;\n\tyVal?: number;\n\tstartXVal?: number;\n\tstartYVal?: number;\n\tendXVal?: number;\n\tendYVal?: number;\n\tmaxYVal?: number;\n\tminYVal?: number;\n\tmaxLength?: number;\n}\n\nexport class TrendSegment implements ITrendSegmentState {\n\tid: number;\n\tprevId: number;\n\tnextId: number;\n\thasValue: boolean;\n\txVal: number;\n\tyVal: number;\n\tstartXVal: number;\n\tstartYVal: number;\n\tendXVal: number;\n\tendYVal: number;\n\tmaxYVal: number;\n\tminYVal: number;\n\tisCompleted = false;\n\tmaxLength: number;\n\titems: ITrendItem[] = [];\n\n\tinitialAnimationState: ITrendSegmentState = {};\n\ttargetAnimationState: ITrendSegmentState = {};\n\tcurrentAnimationState: ITrendSegmentState = {};\n\n\tprivate trendSegments: TrendSegmentsManager;\n\t\n\tconstructor(trendPoints: TrendSegmentsManager, id: number) {\n\t\tthis.trendSegments = trendPoints;\n\t\tthis.id = id;\n\t\tthis.maxLength = trendPoints.maxSegmentLength;\n\t}\n\n\tcreateAnimationState(): ITrendSegmentState {\n\t\tvar {\n\t\t\txVal,\n\t\t\tyVal,\n\t\t\tstartXVal,\n\t\t\tstartYVal,\n\t\t\tendXVal,\n\t\t\tendYVal,\n\t\t\tmaxYVal,\n\t\t\tminYVal,\n\t\t\tmaxLength\n\t\t} = this;\n\t\treturn {\n\t\t\txVal,\n\t\t\tyVal,\n\t\t\tstartXVal,\n\t\t\tstartYVal,\n\t\t\tendXVal,\n\t\t\tendYVal,\n\t\t\tmaxYVal,\n\t\t\tminYVal,\n\t\t\tmaxLength\n\t\t}\n\t};\n\t\n\tappendItem(item: ITrendItem): boolean {\n\t\tif (this.isCompleted) return false;\n\n\t\tvar items = this.items;\n\t\tif (items.length < 2) {\n\t\t\tthis.items.push(item);\n\t\t\tthis.hasValue = true;\n\t\t\treturn true;\n\t\t}\n\t\tvar startXVal = items[0].xVal;\n\t\tif (item.xVal - startXVal > this.maxLength) return false;\n\t\titems.push(item);\n\t\treturn true;\n\t}\n\n\tprependItem(item: ITrendItem): boolean {\n\t\tif (this.isCompleted) return false;\n\t\tvar items = this.items;\n\t\tif (items.length < 2) {\n\t\t\tthis.items.unshift(item);\n\t\t\tthis.hasValue = true;\n\t\t\treturn true;\n\t\t}\n\t\tvar endXVal = items[items.length - 1].xVal;\n\t\tif (endXVal - item.xVal > this.maxLength) return false;\n\t\titems.unshift(item);\n\t\treturn true;\n\t}\n\n\tcomplete() {\n\t\tthis.isCompleted = true;\n\t\tthis.recalculateItems();\n\t\tthis.items = []; // free memory for completed ranges\n\t}\n\n\trecalculateItems() {\n\t\tlet items = this.items;\n\t\tlet itemsLength = items.length;\n\t\tif (itemsLength === 0) Utils.error('Unable to create TrendSegment without TrendItems');\n\t\tlet endItem = items[itemsLength - 1];\n\t\tlet {xVal: endXVal, yVal: endYVal} = endItem;\n\t\tlet startXVal: number, startYVal: number;\n\n\n\t\tlet startItem = items[0];\n\t\tstartXVal = startItem.xVal;\n\t\tstartYVal = startItem.yVal;\n\n\t\tlet minX = Math.min(startXVal, endXVal);\n\t\tlet maxX = Math.max(startXVal, endXVal);\n\t\tlet middleXVal = minX + (maxX - minX) / 2;\n\n\t\tlet minY = Math.min(startYVal, endYVal);\n\t\tlet maxY = Math.max(startYVal, endYVal);\n\t\tlet middleYVal = minY + (maxY - minY) / 2;\n\n\t\tlet yVals = items.map(item => item.yVal);\n\n\t\tthis.startXVal = startXVal;\n\t\tthis.startYVal = startYVal;\n\t\tthis.endXVal = endXVal;\n\t\tthis.endYVal = endYVal;\n\t\tthis.xVal = middleXVal;\n\t\tthis.yVal = middleYVal;\n\t\tthis.maxYVal = Math.max(...yVals);\n\t\tthis.minYVal = Math.min(...yVals);\n\t\tthis.currentAnimationState = this.createAnimationState();\n\t}\n\n\tgetNext() {\n\t\tvar nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t\treturn nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t}\n\n\tgetPrev() {\n\t\tvar prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t\treturn prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t}\n\t\n\tgetFrameVal(): Vector3 {\n\t\tlet {xVal, yVal} = this.createAnimationState();\n\t\treturn new Vector3(xVal, yVal, 0);\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TrendSegmentsManager.ts\n **/","\nimport {Trend, ITrendOptions} from \"./Trend\";\nimport {Chart, IChartState} from \"./Chart\";\nimport { EventEmitter } from './EventEmmiter';\n\nexport interface ITrendsOptions {\n\t[trendName: string]: ITrendOptions;\n}\n\nconst EVENTS = {\n\tSEGMENTS_REBUILDED: 'segmentsRebuilded'\n};\n\n/**\n * Trends manager\n */\nexport class TrendsManager {\n\ttrends: {[name: string]: Trend} = {};\n\tcalculatedOptions: ITrendsOptions;\n\tprivate ee = new EventEmitter();\n\tprivate chartState: Chart;\n\t\n\tconstructor(state: Chart, initialState: IChartState) {\n\t\tthis.chartState = state;\n\t\tvar trendsCalculatedOptions: ITrendsOptions = {};\n\t\tfor (let trendName in initialState.trends) {\n\t\t\tlet trend = this.createTrend(state, trendName, initialState);\n\t\t\ttrendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t\t}\n\t\tthis.calculatedOptions = trendsCalculatedOptions;\n\t}\n\n\tgetTrend(trendName: string) {\n\t\treturn this.trends[trendName];\n\t}\n\t\n\tgetEnabledTrends(): Trend[] {\n\t\tvar enabledTrends: Trend[] = [];\n\t\tvar allTrends = this.trends;\n\t\tfor (let trendName in allTrends) {\n\t\t\tlet trend = allTrends[trendName];\n\t\t\ttrend.getOptions().enabled && enabledTrends.push(trend);\n\t\t}\n\t\treturn enabledTrends;\n\t}\n\n\n\tgetStartXVal() {\n\t\tvar trends = this.getEnabledTrends();\n\t\treturn trends[0].getData()[0].xVal;\n\t}\n\n\n\tgetEndXVal(): number {\n\t\tvar trends = this.getEnabledTrends();\n\t\tvar firstTrendData = trends[0].getData();\n\t\treturn firstTrendData[firstTrendData.length - 1].xVal;\n\t}\n\t\n\t\n\tgetExtremumYVal(extremumIsMax: boolean, fromX?: number, toX?: number) {\n\t\tvar trends = this.getEnabledTrends();\n\t\tvar compareFn: Function;\n\t\tvar result: number;\n\t\tif (extremumIsMax) {\n\t\t\tresult = -Infinity;\n\t\t\tcompareFn = Math.max;\n\t\t} else {\n\t\t\tresult = Infinity;\n\t\t\tcompareFn = Math.min;\n\t\t}\n\t\tfor (let trend of trends) {\n\t\t\tvar trendData = trend.getData(fromX, toX);\n\t\t\tvar trendYValues = trendData.map((dataItem) => dataItem.yVal);\n\t\t\tresult = compareFn(result, ...trendYValues);\n\t\t}\n\t\tif (result == Infinity || result == -Infinity) result = NaN;\n\t\treturn result;\n\t}\n\n\tgetMaxYVal(fromX?: number, toX?: number) {return this.getExtremumYVal(true, fromX, toX)}\n\tgetMinYVal(fromX?: number, toX?: number) {return this.getExtremumYVal(false, fromX, toX)}\n\n\tonSegmentsRebuilded(cb: (trendName: string) => any) {\n\t\treturn this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t}\n\n\tprivate createTrend(state: Chart, trendName: string, initialState: IChartState): Trend {\n\t\tlet trend = new Trend(state, trendName, initialState);\n\t\tthis.trends[trendName] = trend;\n\t\ttrend.segmentsManager.onRebuild(() => this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName));\n\t\treturn trend;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TrendsManager.ts\n **/","\nimport { Chart } from \"./Chart\";\n\nexport interface IViewportParams {\n\tscrollXVal?: number,\n\tscrollYVal?: number,\n\tscrollX?: number,\n\tscrollY?: number,\n\tzoomX?: number,\n\tzoomY?: number\n}\n\nexport class Viewport {\n\tparams: IViewportParams = {};\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart) {\n\t\tthis.chart = chart;\n\t\tthis.updateParams();\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.onChange(() => this.updateParams());\n\t}\n\n\tprotected updateParams() {\n\t\tlet state = this.chart.state;\n\t\tthis.params.scrollXVal = state.xAxis.range.scroll;\n\t\tthis.params.scrollYVal = state.yAxis.range.scroll;\n\t\tthis.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\n\t\tthis.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\n\t\tthis.params.zoomX = state.xAxis.range.zoom;\n\t\tthis.params.zoomY = state.yAxis.range.zoom;\n\t}\n\n\tgetCameraSettings() {\n\t\tlet {width, height} = this.chart.state;\n\t\t// move 0,0 to left-bottom corner\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\tright: width,\n\t\t\ttop: height,\n\t\t\tbottom: 0,\n\t\t\tnear: -500,\n\t\t\tfar: 1000\n\t\t}\n\t}\n\n\n\t// get world coordinates\n\tgetWorldXByVal(xVal: number): number {\n\t\tvar {scaleFactor, zeroVal} = this.chart.state.xAxis.range;\n\t\tvar zoom = this.params.zoomX;\n\t\treturn (xVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\tgetWorldYByVal(yVal: number): number {\n\t\tvar {scaleFactor, zeroVal} =  this.chart.state.yAxis.range;\n\t\tvar zoom = this.params.zoomY;\n\t\treturn (yVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\tgetWorldXByViewportX(viewportX: number): number {\n\t\treturn this.getWorldXByVal(this.getValByViewportX(viewportX));\n\t}\n\n\tgetWorldYByViewportY(viewportY: number): number {\n\t\treturn this.getWorldYByVal(this.getValByViewportY(viewportY));\n\t}\n\n\n\t// get value\n\tgetValByWorldX(worldX: number): number {\n\t\treturn this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\n\t}\n\n\tgetValByWorldY(worldY: number): number {\n\t\treturn this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\n\t}\n\n\tgetValByViewportX(x: number): number {\n\t\treturn this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\n\t}\n\n\tgetValByViewportY(y: number): number {\n\t\treturn this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\n\t}\n\n\n\t// get viewport coordinates\n\n\tgetViewportXByVal(xVal: number): number {\n\t\treturn this.getWorldXByVal(xVal) - this.params.scrollX;\n\t}\n\n\tgetViewportYByVal(yVal: number): number {\n\t\treturn this.getWorldYByVal(yVal) - this.params.scrollY;\n\t}\n\n\tgetViewportXByWorldX(worldX: number): number {\n\t\treturn worldX - this.params.scrollX;\n\t}\n\n\n\t// pixels converters\n\n\tvalToPxByXAxis(val: number) {\n\t\treturn val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\n\t}\n\n\tvalToPxByYAxis(val: number) {\n\t\treturn val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\n\t}\n\n\tpxToValByXAxis(pixelsCount: number) {\n\t\treturn pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\n\t}\n\n\tpxToValByYAxis(pixelsCount: number) {\n\t\treturn pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\n\t}\n\n\n\t// get viewport edges\n\n\tgetTop(): number {\n\t\treturn this.params.scrollY + this.chart.state.height;\n\t}\n\n\tgetRight(): number {\n\t\treturn this.params.scrollX + this.chart.state.width;\n\t}\n\n\tgetBottom(): number {\n\t\treturn this.params.scrollY;\n\t}\n\n\tgetLeft(): number {\n\t\treturn this.params.scrollX;\n\t}\n\n\tgetTopVal() {\n\t\treturn this.getValByWorldY(this.getTop());\n\t}\n\n\tgetRightVal() {\n\t\treturn this.getValByWorldX(this.getRight());\n\t}\n\n\tgetBottomVal() {\n\t\treturn this.getValByWorldY(this.getBottom());\n\t}\n\n\tgetLeftVal() {\n\t\treturn this.getValByWorldX(this.getLeft());\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Viewport.ts\n **/","import PerspectiveCamera = THREE.PerspectiveCamera;\nimport Vector3 = THREE.Vector3;\nimport {Chart, IChartState} from \"./Chart\";\nimport { EventEmitter } from './EventEmmiter';\nimport { Animation } from './AnimationManager';\nimport { IViewportParams, Viewport } from \"./Viewport\";\n\n\nexport enum INTERPOLATION_EVENT {\n\tSTARTED,\n\tFINISHED\n}\n\nconst SCREEN_EVENTS = {\n\tZOOM_FRAME: 'zoomFrame',\n\tSCROLL_FRAME: 'scrollFrame',\n\tTRANSFORMATION_FRAME: 'transformationFrame',\n\tTRANSFORMATION_EVENT: 'transformationStateChanged',\n};\n\n/**\n * manage camera, and contains methods for transforming pixels to values\n */\nexport class InterpolatedViewport extends Viewport {\n\tinterpolationInProgress = false;\n\tprivate scrollXAnimation: Animation<number>;\n\tprivate scrollYAnimation: Animation<number>;\n\tprivate zoomXAnimation: Animation<number>;\n\tprivate zoomYAnimation: Animation<number>;\n\tprivate ee: EventEmitter;\n\n\tconstructor(chart: Chart) {\n\t\tsuper(chart);\n\t\tvar {width: w, height: h} = chart.state;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.setParams(chart.viewport.params);\n\t}\n\n\tonZoomInterpolation(cb: (zoomX: number, zoomY: number) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t}\n\n\tonScrollInterpolation(cb: (options: IViewportParams) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t}\n\n\tonInterpolation(cb: (options: IViewportParams) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t}\n\n\tonInterpolationEvent(cb: (event: INTERPOLATION_EVENT) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n\t}\n\n\tcameraIsMoving(): boolean {\n\t\treturn !!(\n\t\t\tthis.scrollXAnimation && !this.scrollXAnimation.isFinished ||\n\t\t\t\tthis.zoomXAnimation && !this.zoomXAnimation.isFinished\n\t\t);\n\t}\n\n\t/**\n\t * setup zoom and scroll\n\t */\n\tprivate setParams(options: IViewportParams, silent = false) {\n\t\tvar {scrollX, scrollY, zoomX, zoomY} = options;\n\t\t\n\t\tif (scrollX != void 0) this.params.scrollX = scrollX;\n\t\tif (scrollY != void 0) this.params.scrollY = scrollY;\n\t\tif (zoomX != void 0) this.params.zoomX = zoomX;\n\t\tif (zoomY != void 0) this.params.zoomY = zoomY;\n\n\t\tif (scrollX != void 0 || zoomX) {\n\t\t\toptions.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\n\t\t\tthis.params.scrollXVal = options.scrollXVal;\n\t\t}\n\n\t\tif (scrollY != void 0 || zoomY) {\n\t\t\toptions.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\n\t\t\tthis.params.scrollYVal = options.scrollYVal;\n\t\t}\n\n\t\tif (silent) return;\n\n\t\tlet hasActiveAnimations = (\n\t\t\t(this.scrollXAnimation && !this.scrollXAnimation.isStopped) ||\n\t\t\t(this.scrollYAnimation && !this.scrollYAnimation.isStopped) ||\n\t\t\t(this.zoomXAnimation && !this.zoomXAnimation.isStopped) ||\n\t\t\t(this.zoomYAnimation && !this.zoomYAnimation.isStopped)\n\t\t);\n\t\tlet interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\n\t\tlet interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\n\n\t\tif (interpolationStarted) {\n\t\t\tthis.interpolationInProgress = true;\n\t\t\tthis.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\n\t\t}\n\n\t\tif (interpolationFinished) {\n\t\t\tthis.interpolationInProgress = false;\n\t\t}\n\n\t\tif (!this.interpolationInProgress) {\n\t\t\t// prevent to set camera between pixels\n\t\t\tthis.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\n\t\t\tthis.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\n\t\t}\n\n\t\tthis.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\n\t\tlet scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t\tif (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\n\t\tlet zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t\tif (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\n\t\tif (interpolationFinished) {\n\t\t\tthis.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\n\t\t}\n\t}\n\n\n\tprotected bindEvents() {\n\t\tvar state = this.chart;\n\n\t\t// handle scroll and zoom\n\t\tstate.onChange((changedProps) => {\n\t\t\tif (changedProps.xAxis && changedProps.xAxis.range) {\n\t\t\t\tif (changedProps.xAxis.range.scroll != void 0) this.onScrollXHandler(changedProps);\n\t\t\t\tif (changedProps.xAxis.range.zoom) this.onZoomXHandler();\n\t\t\t}\n\t\t\tif (changedProps.yAxis && changedProps.yAxis.range){\n\t\t\t\tif (changedProps.yAxis.range.scroll != void 0) this.onScrollYHandler();\n\t\t\t\tif (changedProps.yAxis.range.zoom) this.onZoomYHandler();\n\t\t\t}\n\t\t});\n\t\tstate.onDestroy(() => this.onDestroyHandler());\n\t}\n\n\tprivate onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t}\n\n\tprivate onScrollXHandler(changedProps: IChartState) {\n\t\tlet chart = this.chart;\n\t\tlet isDragMode = chart.state.cursor.dragMode;\n\t\tlet animations =  chart.state.animations;\n\t\tlet zoomXChanged = changedProps.xAxis.range.zoom;\n\t\tlet isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t\tlet time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t\tlet ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t\tlet range = chart.state.xAxis.range;\n\t\tlet targetX = range.scroll * range.scaleFactor * range.zoom;\n\t\tif (isDragMode && !chart.state.inertialScroll) time = 0;\n\n\t\tif (this.scrollXAnimation) this.scrollXAnimation.stop();\n\n\t\tthis.scrollXAnimation = chart.animationManager.animate(time, ease)\n\t\t\t.from(this.params.scrollX)\n\t\t\t.to(targetX)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({scrollX: value});\n\t\t\t});\n\t}\n\n\tprivate onScrollYHandler() {\n\t\tlet chart = this.chart;\n\t\tlet animations =  chart.state.animations;\n\t\tlet range = chart.state.yAxis.range;\n\t\tlet targetY = range.scroll * range.scaleFactor * range.zoom;\n\n\t\tif (this.scrollYAnimation) this.scrollYAnimation.stop();\n\n\t\tthis.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase)\n\t\t\t.from(this.params.scrollY)\n\t\t\t.to(targetY)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({scrollY: value});\n\t\t\t});\n\t}\n\n\n\tprivate onZoomXHandler() {\n\t\tlet chart = this.chart;\n\t\tlet animations =  chart.state.animations;\n\t\tlet targetZoom = chart.state.xAxis.range.zoom;\n\t\tif (this.zoomXAnimation) this.zoomXAnimation.stop();\n\n\t\tthis.zoomXAnimation = chart.animationManager\n\t\t\t.animate(animations.zoomSpeed, animations.zoomEase)\n\t\t\t.from(this.params.zoomX)\n\t\t\t.to(targetZoom)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({zoomX: value});\n\t\t\t});\n\t}\n\n\n\tprivate onZoomYHandler() {\n\t\tlet chart = this.chart;\n\t\tlet targetZoom = chart.state.yAxis.range.zoom;\n\t\tlet animations =  chart.state.animations;\n\t\tif (this.zoomYAnimation) this.zoomYAnimation.stop();\n\n\t\tthis.zoomYAnimation = chart.animationManager\n\t\t\t.animate(animations.zoomSpeed, animations.zoomEase)\n\t\t\t.from(this.params.zoomY)\n\t\t\t.to(targetZoom)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({zoomY: value});\n\t\t\t});\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/InterpolatedViewport.ts\n **/","import { IIteralable } from './interfaces';\nimport { EASING } from  './Easing';\n\n// TODO: transfer AnimationManager to own repo\nexport class AnimationManager {\n\n\tisAnimationsEnabled = true;\n\tprivate animations: Animation<any>[] = [];\n\tprivate lastTickTime: number;\n\n\tconstructor() {\n\t\tthis.lastTickTime = Date.now();\n\t}\n\n\tanimate(time: number, timingFunction?: (progress: number) => number): Animation<IIteralable|number> {\n\t\tlet animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t\tthis.animations.push(animation);\n\t\treturn animation;\n\t}\n\n\tanimateObj(source: IIteralable, target: IIteralable, ) {\n\n\t}\n\n\tsetAimationsEnabled(isEnabled: boolean) {\n\t\tthis.isAnimationsEnabled = isEnabled;\n\t}\n\n\ttick() {\n\t\tlet now = Date.now();\n\t\tlet animations = this.animations;\n\n\t\t// call tick for each animation\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tlet animation = animations[i];\n\t\t\tif (this.isAnimationsEnabled) {\n\t\t\t\tanimation.tick(now);\n\t\t\t} else {\n\t\t\t\tanimation.completeAndStop();\n\t\t\t}\n\t\t}\n\n\t\t// cleanup completed animations\n\t\tlet i = animations.length;\n\t\twhile (i--) if (animations[i].isStopped) animations.splice(i, 1);\n\n\t\tthis.lastTickTime = now;\n\t}\n\n\thasActiveAnimations(): boolean {\n\t\treturn this.animations.length > 0;\n\t}\n\n}\n\nexport class Animation<AnimatedObjectType> {\n\n\tprogress = 0;\n\tdelay = 0;\n\tisFinished = false;\n\tisStopped = false;\n\tinitialObj: AnimatedObjectType;\n\tsourceObj: AnimatedObjectType;\n\ttargetObject: AnimatedObjectType;\n\tstartTime: number;\n\tprivate onFinishCb: (source: AnimatedObjectType, animation: this) => any;\n\tprivate onTickCb: (source: AnimatedObjectType, progress: number, k: number, animation: this) => any;\n\n\tconstructor(\n\t\tprivate animationManager: AnimationManager,\n\t\tpublic time: number,\n\t\tprivate createdTime: number,\n\t\tpublic easing: (k: number) => any = EASING.Quadratic.Out)\n\t{\n\t\tthis.startTime = createdTime;\n\t}\n\n\ttick(now: number) {\n\t\tif (!this.isStopped) {\n\t\t\tlet progress = this.time > 0 ? ((now - this.startTime) / this.time) : 1;\n\t\t\tthis.setProgress(progress);\n\t\t}\n\t}\n\n\tfrom<T>(sourceObj: T): Animation<T> {\n\t\tif (typeof sourceObj == 'object') {\n\t\t\tthis.sourceObj = sourceObj as any;\n\t\t\tthis.initialObj = {} as any;\n\t\t\tlet sourceIteralable = sourceObj as IIteralable;\n\t\t\tfor (let key in sourceIteralable) if (typeof sourceIteralable[key] == 'number') {\n\t\t\t\t(this.initialObj as IIteralable)[key] = sourceIteralable[key];\n\t\t\t}\n\n\t\t} else if (typeof sourceObj == 'number') {\n\t\t\tthis.sourceObj = sourceObj;\n\t\t\tthis.initialObj = sourceObj;\n\t\t}\n\t\treturn (this as any) as Animation<T>;\n\t}\n\n\tto(targetObj: AnimatedObjectType): this {\n\t\tthis.targetObject = targetObj;\n\n\t\t// clear unused fields\n\t\tif (typeof this.initialObj == 'object') {\n\n\t\t\tlet initialIteralable = this.initialObj as IIteralable;\n\t\t\tfor (let key in this.targetObject) {\n\t\t\t\tif (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t\t\t}\n\n\t\t\tlet targetIteralable = this.targetObject as IIteralable;\n\t\t\tfor (let key in initialIteralable) {\n\t\t\t\tif (targetIteralable[key] == void 0) delete initialIteralable[key];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tonTick(onTickCb: (source: AnimatedObjectType, progress: number, k: number, animation: this) => any): this {\n\t\tthis.onTickCb = onTickCb;\n\t\treturn this;\n\t}\n\n\tthen(onFinishCb: (progress: AnimatedObjectType) => any): this {\n\t\tthis.onFinishCb = onFinishCb;\n\t\treturn this;\n\t}\n\n\tstop() {\n\t\tthis.isStopped = true;\n\t}\n\n\tcompleteAndStop() {\n\t\tthis.setProgress(1);\n\t}\n\n\twithDelay(delay: number): this {\n\t\tthis.delay = delay;\n\t\tthis.startTime = this.createdTime + delay;\n\t\treturn this;\n\t}\n\n\tprivate setProgress(progress: number) {\n\n\t\tif (progress < 0) return;\n\n\t\tprogress = Math.min(progress, 1);\n\t\tthis.progress = progress;\n\t\tlet k = this.easing(progress);\n\n\t\tif (typeof this.sourceObj == 'number') {\n\t\t\tlet initialVal = this.initialObj as any as number;\n\t\t\tlet targetVal = this.targetObject as any as number;\n\t\t\tthis.sourceObj = (initialVal + (targetVal - initialVal) * k) as any as AnimatedObjectType;\n\t\t} else if (this.sourceObj && this.targetObject) {\n\t\t\tfor (let key in this.initialObj) {\n\t\t\t\tlet initialVal = (this.initialObj as IIteralable)[key] as number;\n\t\t\t\tlet targetVal = (this.targetObject as IIteralable)[key] as number;\n\t\t\t\t(this.sourceObj as IIteralable)[key] = initialVal + (targetVal - initialVal) * k;\n\t\t\t}\n\t\t}\n\n\n\t\tif (progress == 1) {\n\t\t\tthis.isStopped = true;\n\t\t\tthis.isFinished = true;\n\t\t}\n\n\t\tif (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n\n\t\tif (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/AnimationManager.ts\n **/","export declare type TEase = (k: number) => number;\n\n/**\n * Easing from tween.js lib https://github.com/tweenjs/tween.js\n **/\nexport const EASING = {\n\n\tLinear: {\n\n\t\tNone: function (k: number) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - EASING.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn EASING.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Easing.ts\n **/","\n\n/**\n * defines how axis range will be calculated\n * FIXED - directly use range.from and range.to xVal\n * AUTO - automatically sets range.from and range.to by visible part of opposite axis\n * RELATIVE_END - same as AUTO, but trend end always present in range\n * ALL - automatically sets range.from and range.to by all values of opposite axis\n *\n */\nimport {TColor} from \"./Color\";\nimport { TEase } from \"./Easing\";\nimport Vector3 = THREE.Vector3;\nimport Vector = THREE.Vector;\nexport enum AXIS_RANGE_TYPE {\n\tFIXED,\n\tRELATIVE_END,\n\tAUTO,\n\tALL // TODO: AXIS_RANGE_TYPE.ALL\n}\n\n/**\n * Animation ease type\n */\nexport declare type TTwinEase = Ease | Linear;\n\nexport declare type TIteralable = {[key: string]: any};\nexport interface IIteralable {[key: string]: any};\n\nexport enum AXIS_TYPE {X, Y}\n\nexport interface IAxisRange {\n\ttype?: AXIS_RANGE_TYPE,\n\tfrom?: number,\n\tto?: number,\n\tzoom?: number,\n\n\t/**\n\t * scroll value\n\t */\n\tscroll?: number,\n\n\t/**\n\t * Mode only for Y axis. When true displayed center of Y axis never changed. To use set range.zeroVal as center value.\n\t */\n\tisMirrorMode?: boolean,\n\n\tpadding?: {\n\t\tstart?: number,\n\t\tend?: number\n\t},\n\n\tmargin?: {\n\t\tstart?: number,\n\t\tend?: number\n\t},\n\n\tmaxLength?: number;\n\tminLength?: number;\n\n\t/**\n\t * value in world center coordinate\n\t */\n\tzeroVal?: number,\n\n\t/**\n\t * ratio between 1 pixel and 1 value for zoom = 1\n\t */\n\tscaleFactor?: number,\n}\n\nexport enum AXIS_DATA_TYPE {NUMBER, DATE}\n\nexport interface IAxisOptions {\n\trange?: IAxisRange;\n\tdataType?: AXIS_DATA_TYPE;\n\tautoScroll?: boolean;\n\tgrid?: IGridOptions;\n\tcolor?: TColor;\n}\n\nexport interface IGridOptions {\n\tenabled: boolean;\n\tminSizePx?: number;\n\tcolor?: TColor;\n}\n\nexport interface IAnimationsOptions {\n\tenabled?: boolean,\n\ttrendChangeSpeed?: number,\n\ttrendChangeEase?: TTwinEase,\n\tscrollSpeed?: number,\n\tscrollEase?: TEase,\n\tautoScrollSpeed?: number,\n\tautoScrollEase?: TEase,\n\tzoomSpeed?: number,\n\tzoomEase?: TEase,\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/interfaces.ts\n **/","import {Chart} from \"./Chart\";\nimport Object3D = THREE.Object3D;\n\nexport interface IChartWidgetConstructor {\n\tnew (): ChartWidget;\n\twidgetName: string;\n}\n\n/**\n * base class for all widgets\n * each widget must have widgetName static property\n */\nexport abstract class ChartWidget {\n\tstatic widgetName = '';\n\tprotected chart: Chart;\n\tprivate unbindList: Function[] = [];\n\n\n\tsetupChart(chart: Chart) {\n\t\tthis.chart = chart;\n\t}\n\n\tabstract onReadyHandler(): any;\n\tabstract getObject3D(): Object3D;\n\n\n\tprotected bindEvent(...args: Array<Function | Function[]>): void {\n\t\tlet unbindList: Function[] = [];\n\t\tif (!Array.isArray(args[0])) {\n\t\t\tunbindList.push(args[0] as Function);\n\t\t} else {\n\t\t\tunbindList.push(...args as Function[]);\n\t\t}\n\t\tthis.unbindList.push(...unbindList);\n\t}\n\tprotected unbindEvents() {\n\t\tthis.unbindList.forEach(unbindEvent => unbindEvent());\n\t\tthis.unbindList.length = 0;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Widget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport UVMapping = THREE.UVMapping;\nimport GridHelper = THREE.GridHelper;\nimport {ChartWidget} from \"../Widget\";\nimport {Chart} from \"../Chart\";\nimport {GridWidget, IGridParamsForAxis} from \"./GridWidget\";\nimport {Utils} from \"../Utils\";\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport OrthographicCamera = THREE.OrthographicCamera;\nimport {IViewportParams} from \"../Viewport\";\nimport {AXIS_TYPE, AXIS_DATA_TYPE, IAxisOptions} from \"../interfaces\";\nimport { Color } from \"../Color\";\n\n/**\n * widget for drawing axis\n */\nexport class AxisWidget extends ChartWidget {\n\tstatic widgetName = 'Axis';\n\tprivate isDestroyed = false;\n\tprivate object3D: Object3D;\n\tprivate axisXObject: Object3D;\n\tprivate axisYObject: Object3D;\n\tprivate updateAxisXRequest: () => void;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisXObject = new Object3D();\n\t\tthis.axisYObject = new Object3D();\n\t\tthis.object3D.add(this.axisXObject);\n\t\tthis.object3D.add(this.axisYObject);\n\t\tthis.setupAxis(AXIS_TYPE.X);\n\t\tthis.setupAxis(AXIS_TYPE.Y);\n\n\t\t// canvas drawing is expensive operation, so when we scroll, redraw must be called only once per second\n\t\tthis.updateAxisXRequest = Utils.throttle(() => this.updateAxis(AXIS_TYPE.X), 1000);\n\n\t\tthis.onScrollChange(\n\t\t\tthis.chart.interpolatedViewport.params.scrollX,\n\t\t\tthis.chart.interpolatedViewport.params.scrollY\n\t\t);\n\t\tthis.bindEvents();\n\t}\n\n\tbindEvents() {\n\t\tvar state = this.chart;\n\n\t\tthis.bindEvent(\n\t\t\tstate.interpolatedViewport.onInterpolation((options) => {\n\t\t\t\tthis.onScrollChange(options.scrollX, options.scrollY);\n\t\t\t}),\n\t\t\tstate.interpolatedViewport.onZoomInterpolation((options) => {this.onZoomFrame(options)}),\n\t\t\tstate.onDestroy(() => this.onDestroy()),\n\t\t\tstate.onResize(() => this.onResize())\n\t\t);\n\t}\n\n\tprivate onDestroy() {\n\t\tthis.isDestroyed = true;\n\t\tthis.unbindEvents();\n\t}\n\n\tprivate onScrollChange(x: number, y: number) {\n\n\t\tif (y != void 0) {\n\t\t\tthis.axisYObject.position.y = y;\n\t\t\tthis.axisXObject.position.y = y;\n\t\t}\n\n\t\tif (x != void 0) {\n\t\t\tthis.axisYObject.position.x = x;\n\t\t\tthis.updateAxisXRequest();\n\t\t}\n\n\t}\n\n\tprivate onResize() {\n\t\tthis.setupAxis(AXIS_TYPE.X);\n\t\tthis.setupAxis(AXIS_TYPE.Y);\n\t}\n\n\tprivate setupAxis(orientation: AXIS_TYPE) {\n\n\t\tlet isXAxis = orientation == AXIS_TYPE.X;\n\t\tlet {width: visibleWidth, height: visibleHeight} = this.chart.state;\n\t\tlet canvasWidth = 0, canvasHeight = 0;\n\t\tlet axisOptions: IAxisOptions;\n\n\t\t// clean meshes\n\t\tif (isXAxis) {\n\t\t\tthis.axisXObject.traverse(obj => this.axisXObject.remove(obj));\n\t\t\tcanvasWidth = visibleWidth * 3;\n\t\t\tcanvasHeight = 50;\n\t\t\taxisOptions = this.chart.state.xAxis;\n\t\t} else {\n\t\t\tthis.axisYObject.traverse(obj => this.axisYObject.remove(obj));\n\t\t\tcanvasWidth = 50;\n\t\t\tcanvasHeight = visibleHeight * 3;\n\t\t\taxisOptions = this.chart.state.yAxis;\n\t\t}\n\n\t\tvar texture = Utils.createNearestTexture(canvasWidth, canvasHeight, (ctx) => {\n\t\t\tlet color = new Color(axisOptions.color);\n\t\t\tctx.beginPath();\n\t\t\tctx.font = this.chart.state.font.m;\n\t\t\tctx.fillStyle = color.rgbaStr;\n\t\t\tctx.strokeStyle = color.rgbaStr;\n\t\t});\n\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.DoubleSide} );\n\t\tmaterial.transparent = true;\n\n\t\t//var material = new THREE.MeshBasicMaterial( {color: 0xFF00FF, side: THREE.DoubleSide} );\n\n\n\t\tvar axisMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(canvasWidth, canvasHeight),\n\t\t\tmaterial\n\t\t);\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t\t\tthis.axisXObject.add(axisMesh);\n\t\t} else {\n\t\t\taxisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t\t\tthis.axisYObject.add(axisMesh);\n\t\t}\n\n\t\tthis.updateAxis(orientation);\n\n\t}\n\t\n\tgetObject3D(): Object3D {\n\t\treturn this.object3D;\n\t}\n\n\tprivate updateAxis(orientation: AXIS_TYPE) {\n\t\tif (this.isDestroyed) return;\n\t\tvar isXAxis = orientation == AXIS_TYPE.X;\n\t\tvar {width: visibleWidth, height: visibleHeight} = this.chart.state;\n\t\tvar {scrollX, scrollY, zoomX, zoomY} = this.chart.interpolatedViewport.params;\n\t\tvar axisOptions: IAxisOptions;\n\t\tvar axisMesh: Mesh;\n\t\tvar axisGridParams: IGridParamsForAxis;\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh = this.axisXObject.children[0] as Mesh;\n\t\t\taxisOptions = this.chart.state.xAxis;\n\t\t\taxisGridParams = GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t\t} else {\n\t\t\taxisMesh = this.axisYObject.children[0] as Mesh;\n\t\t\taxisOptions = this.chart.state.yAxis;\n\t\t\taxisGridParams = GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t\t}\n\n\t\tvar geometry = axisMesh.geometry as PlaneGeometry;\n\t\tvar canvasWidth = geometry.parameters.width;\n\t\tvar canvasHeight = geometry.parameters.height;\n\t\tif (isXAxis) {\n\t\t\taxisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t\t}\n\n\t\tvar texture = (axisMesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n\n\n\n\t\t// TODO: draw text and lines in different loops\n\t\tvar edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t\tvar startVal = axisGridParams.start  - edgeOffset;\n\t\tvar endVal = axisGridParams.end + edgeOffset;\n\n\t\tctx.beginPath();\n\t\tfor (let val = startVal; val <= endVal; val += axisGridParams.step) {\n\t\t\tlet displayedValue = '';\n\t\t\tif (isXAxis) {\n\t\t\t\tlet pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\t// uncomment for dots\n\t\t\t\t// ctx.moveTo(pxVal + 0.5, canvasHeight);\n\t\t\t\t// ctx.lineTo(pxVal + 0.5, canvasHeight - 5);\n\t\t\t\tif (axisOptions.dataType == AXIS_DATA_TYPE.DATE) {\n\t\t\t\t\tdisplayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t\t\t\t} else {\n\t\t\t\t\tdisplayedValue = Number(val.toFixed(14)).toString();\n\t\t\t\t}\n\n\t\t\t\tctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t\t\t} else {\n\t\t\t\tlet pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\n\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t// uncomment for dots\n\t\t\t\t// ctx.moveTo(canvasWidth, pxVal + 0.5);\n\t\t\t\t// ctx.lineTo(canvasWidth - 5, pxVal + 0.5);\n\n\t\t\t\tdisplayedValue = Number(val.toFixed(14)).toString();\n\t\t\t\tctx.fillText(displayedValue, canvasWidth - 15 , pxVal + 3);\n\n\t\t\t\t// uncomment for left-side axis\n\t\t\t\t// ctx.moveTo(0, pxVal + 0.5);\n\t\t\t\t// ctx.lineTo(5, pxVal + 0.5);\n\t\t\t\t// ctx.fillText(Number(val.toFixed(14)).toString(), 15 , pxVal + 3);\n\t\t\t}\n\t\t\tctx.stroke();\n\t\t}\n\t\t// uncomment to preview canvas borders\n\t\t// ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate onZoomFrame(options: IViewportParams) {\n\t\tif (options.zoomX) {\n\t\t\tthis.updateAxis(AXIS_TYPE.X);\n\t\t\t//this.temporaryHideAxis(AXIS_ORIENTATION.H)\n\t\t}\n\t\tif (options.zoomY) {\n\t\t\tthis.updateAxis(AXIS_TYPE.Y);\n\t\t\t//this.temporaryHideAxis(AXIS_ORIENTATION.V)\n\t\t}\n\t}\n\n\t// private temporaryHideAxis(orientation: AXIS_TYPE) {\n\t// \tvar isXAxis = orientation == AXIS_TYPE.X;\n\t// \tvar timeoutId = setTimeout(() => {\n\t// \t\t\tthis.showAxis(orientation);\n\t// \t}, 200);\n\t//\n\t// \tif (isXAxis) {\n\t// \t\t(this.axisXObject.children[0] as Mesh).material.opacity = 0;\n\t// \t\tclearTimeout(this.showAxisXTimeout);\n\t// \t\tthis.showAxisXTimeout =\ttimeoutId;\n\t// \t} else {\n\t// \t\tclearTimeout(this.showAxisYTimeout);\n\t// \t\t(this.axisYObject.children[0] as Mesh).material.opacity = 0;\n\t// \t\tthis.showAxisYTimeout = timeoutId;\n\t// \t}\n\t// }\n\n\t// private showAxis(orientation: AXIS_TYPE) {\n\t// \tvar isXAxis = orientation == AXIS_TYPE.X;\n\t// \tvar material: MeshBasicMaterial;\n\t// \tif (isXAxis) {\n\t// \t\tmaterial = (this.axisXObject.children[0] as Mesh).material as MeshBasicMaterial;\n\t// \t} else {\n\t// \t\tmaterial = (this.axisYObject.children[0] as Mesh).material as MeshBasicMaterial;\n\t// \t}\n\t// \tthis.updateAxis(orientation);\n\t// \tTweenLite.to(material, 0.3, {opacity: 1});\n\t// }\n\n\tstatic getDateStr(timestamp: number, gridParams: IGridParamsForAxis): string {\n\t\tvar sec = 1000;\n\t\tvar min = sec * 60;\n\t\tvar hour = min * 60;\n\t\tvar day = hour * 60;\n\t\tvar step = gridParams.step;\n\t\tvar d = new Date(timestamp);\n\t\tvar tf = (num: number) => Utils.toFixed(num, 2);\n\t\treturn tf(d.getHours()) + ':' + tf(d.getMinutes()) + ':' + tf(d.getSeconds());\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/AxisWidget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport { ChartWidget } from \"../Widget\";\nimport LineSegments = THREE.LineSegments;\nimport { Utils } from \"../Utils\";\nimport { IViewportParams } from \"../Viewport\";\nimport { IAxisOptions } from \"../interfaces\";\nimport { Color } from \"../Color\";\n\nexport interface IGridParamsForAxis {\n\tstart: number,\n\tend: number,\n\tstep: number,\n\tstepInPx: number,\n\tlength: number,\n\tsegmentsCount: number\n}\n\n/**\n * widget for drawing state grid\n */\nexport class GridWidget extends ChartWidget{\n\tstatic widgetName = 'Grid';\n\tprivate lineSegments: LineSegments;\n\tprivate gridSizeH: number;\n\tprivate gridSizeV: number;\n\tprivate isDestroyed = false;\n\n\tonReadyHandler() {\n\t\tvar {width, height, xAxis, yAxis} = this.chart.state;\n\t\tthis.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t\tthis.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t\tthis.initGrid();\n\t\tthis.updateGrid();\n\t\tthis.bindEvents();\n\t}\n\n\tbindEvents() {\n\t\t// grid is bigger then interpolatedViewport, so it's no need to update it on each scroll event\n\t\tlet updateGridThrottled = Utils.throttle(() => this.updateGrid(), 1000);\n\t\tthis.bindEvent(this.chart.onScroll(() => updateGridThrottled()),\n\t\t\tthis.chart.interpolatedViewport.onZoomInterpolation((options) => {\n\t\t\t\tupdateGridThrottled();\n\t\t\t\tthis.onZoomFrame(options);\n\t\t\t}),\n\t\t\tthis.chart.onDestroy(() => {\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t\tthis.unbindEvents();\n\t\t\t}),\n\t\t\tthis.chart.onResize(() => {\n\t\t\t\tthis.updateGrid();\n\t\t\t})\n\t\t);\n\n\t}\n\n\tprivate initGrid() {\n\t\tlet color = new Color(this.chart.state.xAxis.grid.color);\n\t\tlet geometry = new THREE.Geometry();\n\t\tlet material = new THREE.LineBasicMaterial({linewidth: 1, color: color.value, opacity: color.a, transparent: true});\n\t\tlet xLinesCount = this.gridSizeH;\n\t\tlet yLinesCount = this.gridSizeV;\n\t\twhile (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t\twhile (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t\tthis.lineSegments = new LineSegments(geometry, material);\n\t\tthis.lineSegments.position.setZ(-1);\n\t\tthis.lineSegments.frustumCulled = false;\n\t}\n\n\tprivate updateGrid() {\n\t\tif (this.isDestroyed) return;\n\t\tvar {yAxis, xAxis, width, height} = this.chart.state;\n\t\tvar axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t\tvar axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t\tvar scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t\tvar scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t\tvar gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t\tvar gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t\tvar startXVal = axisXGrid.start + gridScrollXVal;\n\t\tvar startYVal = axisYGrid.start + gridScrollYVal;\n\t\tvar geometry = this.lineSegments.geometry as Geometry;\n\t\tvar vertices = geometry.vertices;\n\t\tvar lineInd = 0;\n\n\t\tfor (let i =  -this.gridSizeH / 3; i < this.gridSizeH * 2/3; i++) {\n\t\t\tlet value = startXVal + i * axisXGrid.step;\n\t\t\tlet lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t\t\tvertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t\t\tvertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t\t\tlineInd++;\n\t\t}\n\n\t\tfor (let i =  -this.gridSizeV / 3; i < this.gridSizeV * 2/3; i++) {\n\t\t\tlet value = startYVal + i * axisYGrid.step;\n\t\t\tlet lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t\t\tvertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t\t\tvertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t\t\tlineInd++;\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tthis.lineSegments.scale.set(\n\t\t\txAxis.range.scaleFactor * xAxis.range.zoom,\n\t\t\tyAxis.range.scaleFactor * yAxis.range.zoom,\n\t\t\t1\n\t\t)\n\t}\n\n\tprivate getHorizontalLineSegment(yVal: number, scrollXVal: number, scrollYVal: number): Vector3[] {\n\t\tvar chartState = this.chart;\n\t\tvar localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t\tvar widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\n\t\treturn [\n\t\t\tnew THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0 ),\n\t\t\tnew THREE.Vector3( -widthVal + scrollXVal, localYVal, 0 )\n\t\t];\n\t}\n\n\tprivate getVerticalLineSegment(xVal: number, scrollXVal: number, scrollYVal: number): Vector3[] {\n\t\tlet chart = this.chart;\n\t\tlet localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\n\t\tlet heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\n\t\treturn [\n\t\t\tnew THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0 ),\n\t\t\tnew THREE.Vector3(localXVal, -heightVal + scrollYVal, 0 )\n\t\t];\n\t}\n\n\tprivate onZoomFrame(options: IViewportParams) {\n\t\tvar {xAxis, yAxis} = this.chart.state;\n\t\tif (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t\tif (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t}\n\n\n\t// TODO: move this code to core\n\tstatic getGridParamsForAxis(axisOptions: IAxisOptions, axisWidth: number, zoom: number): IGridParamsForAxis {\n\t\tlet axisRange = axisOptions.range;\n\t\tlet from = axisRange.from;\n\t\tlet to = axisRange.to;\n\t\tlet axisLength = to - from;\n\t\tlet gridStep = 0;\n\t\tlet gridStepInPixels = 0;\n\t\tlet minGridStepInPixels = axisOptions.grid.minSizePx;\n\t\tlet axisLengthStr = String(axisLength);\n\t\tlet axisLengthPointPosition = axisLengthStr.indexOf('.');\n\t\tlet intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\n\t\tlet gridStepFound = false;\n\t\tlet digitPos = 0;\n\t\twhile (!gridStepFound) {\n\n\t\t\tlet power = intPartLength - digitPos - 1;\n\t\t\tlet multiplier = (Math.pow(10, power) || 1);\n\t\t\tlet dividers = [1, 2, 5];\n\t\t\tfor (let dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t\t\t\tlet nextGridStep = multiplier / dividers[dividerInd];\n\t\t\t\tlet nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t\t\t\tif (nextGridStepInPixels >= minGridStepInPixels) {\n\t\t\t\t\tgridStep = nextGridStep;\n\t\t\t\t\tgridStepInPixels = nextGridStepInPixels;\n\t\t\t\t} else {\n\t\t\t\t\tgridStepFound = true;\n\t\t\t\t\tif (gridStep === 0) {\n\t\t\t\t\t\tgridStep = nextGridStep;\n\t\t\t\t\t\tgridStepInPixels = nextGridStepInPixels;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!gridStepFound) digitPos++\n\n\t\t}\n\n\t\tvar gridStart = Math.floor(from / gridStep) * gridStep;\n\t\tvar gridEnd = Math.floor(to / gridStep) * gridStep;\n\n\t\treturn {\n\t\t\tstart: gridStart,\n\t\t\tend: gridEnd,\n\t\t\tstep: gridStep,\n\t\t\tstepInPx: gridStepInPixels,\n\t\t\tlength: gridEnd - gridStart,\n\t\t\tsegmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t\t}\n\t}\n\t\n\tgetObject3D() {\n\t\treturn this.lineSegments;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/GridWidget.ts\n **/","export declare type TColor = string | number;\n\n\nexport class Color {\n\n\t/**!\n\t * @preserve $.parseColor\n\t * Copyright 2011 THEtheChad Elliott\n\t * Released under the MIT and GPL licenses.\n\t */\n\t/**\n\t * Parse hex/rgb{a} color syntax.\n\t * @input string\n\t * @returns array [r,g,b{,o}]\n\t */\n\tstatic parseColor(color: string): number[] {\n\n\t\tvar cache: any\n\t\t\t, p = parseInt // Use p as a byte saving reference to parseInt\n\t\t\t, color = color.replace(/\\s\\s*/g, '') // Remove all spaces\n\t\t\t;//var\n\n\t\t// Checks for 6 digit hex and converts string to integer\n\t\tif (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\n\n\t\t// Checks for 3 digit hex and converts string to integer\n\t\telse if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\n\t\t\tcache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\n\n\n\t\t// Checks for 6 digit hex with alpha and converts string to integer\n\t\telse if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\n\n\t\t// Checks for rgba and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3], +cache[4]];\n\n\t\t// Checks for rgb and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3]];\n\n\t\t// Otherwise throw an exception to make debugging easier\n\t\telse throw Error(color + ' is not supported by parseColor');\n\n\t\t// Performs RGBA conversion by default\n\t\tisNaN(cache[3]) && (cache[3] = 1);\n\t\treturn cache;\n\t\t// Adds or removes 4th xVal based on rgba support\n\t\t// Support is flipped twice to prevent erros if\n\t\t// it's not defined\n\t\t//return cache.slice(0,3 + !!$.support.rgba);\n\t}\n\n\tr: number;\n\tg: number;\n\tb: number;\n\ta: number;\n\tvalue: number;\n\thexStr: string;\n\trgbaStr: string;\n\n\tconstructor (color: TColor) {\n\t\tthis.set(color);\n\t}\n\n\tstatic numberToHexStr(value: number): string {\n\t\tlet result = value.toString(16);\n\t\treturn '#' + '0'.repeat(6 - result.length) + result;\n\t}\n\n\n\tset(color: TColor) {\n\t\tif (typeof color == 'number') color = Color.numberToHexStr(color);\n\t\tlet colorStr = color as string;\n\t\tlet rgba = Color.parseColor(colorStr);\n\t\tthis.r = rgba[0];\n\t\tthis.g = rgba[1];\n\t\tthis.b = rgba[2];\n\t\tthis.a = rgba[3];\n\t\tthis.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\n\t\tthis.hexStr = Color.numberToHexStr(this.value);\n\t\tthis.rgbaStr = `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n\t}\n\n\tgetTransparent(opacity: number) {\n\t\treturn new Color(`rgba(${this.hexStr}, ${opacity})`);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport {Chart} from \"../Chart\";\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport {ITrendOptions} from \"../Trend\";\nimport {Utils} from \"../Utils\";\nimport {TrendsWidget, TrendWidget} from \"./TrendsWidget\";\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport { IViewportParams } from '../Viewport';\nimport { TrendSegmentsManager, ITrendSegmentState } from '../TrendSegmentsManager';\nimport { Color } from '../Color';\n\nexport class TrendsGradientWidget extends TrendsWidget<TrendGradient> {\n\tstatic widgetName = \"TrendsGradient\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendGradient;\n\t}\n}\n\n\nexport class TrendGradient extends TrendWidget {\n\tprivate gradient: Mesh;\n\tprivate visibleSegmentsCnt = 0;\n\tprivate segmentsIds: Uint16Array;\n\t\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBackground;\n\t}\n\n\tconstructor (chartState: Chart, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.trend = chartState.trendsManager.getTrend(trendName);\n\t\tthis.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments)\n\t\tthis.initGradient();\n\t\tthis.updateSegments();\n\t}\n\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.updateSegments();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\t// TODO: optimize updateSegments for onDisplayedRangeChanged\n\t\t\tthis.updateSegments();\n\t\t}));\n\t\tthis.bindEvent(this.chart.onZoom(() => {\n\t\t\tthis.updateSegments();\n\t\t}));\n\t}\n\n\n\tgetObject3D(): Object3D {\n\t\treturn this.gradient;\n\t}\n\n\n\tinitGradient() {\n\t\tlet geometry = new Geometry();\n\n\n\t\tfor (let i = 0; i < this.segmentsIds.length; i++) {\n\t\t\tgeometry.vertices.push(\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3()\n\t\t\t);\n\t\t\tlet ind = i * 4;\n\n\t\t\t// gradient segment scheme\n\t\t\t//\n\t\t\t// vert0 +---+ vert3\n\t\t\t//       |\\  |\n\t\t\t// face1 | \\ | face2\n\t\t\t// \t     |  \\|\n\t\t\t// vert1 +---+ vert2\n\n\t\t\tgeometry.faces.push(\n\t\t\t\tnew THREE.Face3( ind, ind + 1, ind + 2 ),\n\t\t\t\tnew THREE.Face3( ind + 3, ind, ind + 2 )\n\t\t\t);\n\t\t}\n\n\t\tlet color = new Color(this.trend.getOptions().backgroundColor);\n\t\tthis.gradient = new THREE.Mesh(\n\t\t\tgeometry,\n\t\t\tnew THREE.MeshBasicMaterial( {color: color.value, transparent: true, opacity: color.a} )\n\t\t);\n\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = this.chart.state.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = this.chart.state.yAxis.range;\n\t\tthis.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.gradient.frustumCulled = false;\n\t}\n\n\n\tprotected onZoomFrame(options: IViewportParams) {\n\t\tlet state = this.chart.state;\n\t\tlet scaleXFactor = state.xAxis.range.scaleFactor;\n\t\tlet scaleYFactor = state.yAxis.range.scaleFactor;\n\t\tvar currentScale = this.gradient.scale;\n\t\tif (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t}\n\n\n\tprotected onSegmentsAnimate(trendSegmentsManager: TrendSegmentsManager) {\n\t\tlet animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t\tfor (let i = 0; i < this.visibleSegmentsCnt; i++) {\n\t\t\tlet segmentId = this.segmentsIds[i];\n\t\t\tif (!animatedSegmentsIds.includes(segmentId)) continue;\n\t\t\tthis.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t\t}\n\t\t(this.gradient.geometry as PlaneGeometry).verticesNeedUpdate = true;\n\t}\n\n\n\tprivate updateSegments() {\n\t\tlet geometry = this.gradient.geometry as PlaneGeometry;\n\t\tlet {\n\t\t\tsegments: trendSegments,\n\t\t\tfirstDisplayedSegmentInd: segmentInd,\n\t\t\tlastDisplayedSegmentInd\n\t\t} = this.trend.segmentsManager;\n\t\tlet prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t\tthis.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t\tlet segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\n\t\tif (segmentsToProcessCnt > this.segmentsIds.length) {\n\t\t\tUtils.error(TrendsGradientWidget.widgetName + ': MAX_SEGMENTS reached');\n\t\t}\n\n\t\t// setup visible segments and collapse invisible\n\t\tfor (let i = 0; i < segmentsToProcessCnt; i++) {\n\t\t\tif (segmentInd <= lastDisplayedSegmentInd) {\n\t\t\t\tlet segment = trendSegments[segmentInd];\n\t\t\t\tthis.setupSegmentVertices(i, segment.currentAnimationState);\n\t\t\t\tthis.segmentsIds[i] = segment.id;\n\t\t\t\tsegmentInd++;\n\t\t\t} else {\n\t\t\t\tthis.setupSegmentVertices(i);\n\t\t\t}\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n\n\t/**\n\t * setup gradient segment by segmentState\n\t * if segmentState is undefined, then collapse vertices to 0,0,0\n\t */\n\tprivate setupSegmentVertices(segmentInd: number, segmentState?: ITrendSegmentState) {\n\t\tlet gradientSegmentInd = segmentInd * 4;\n\t\tlet vertices = (this.gradient.geometry as PlaneGeometry).vertices;\n\t\tlet\ttopLeft = vertices[gradientSegmentInd];\n\t\tlet\tbottomLeft = vertices[gradientSegmentInd + 1];\n\t\tlet\tbottomRight = vertices[gradientSegmentInd + 2];\n\t\tlet\ttopRight = vertices[gradientSegmentInd + 3];\n\t\tlet screenHeightVal = Math.max(\n\t\t\tthis.chart.viewport.pxToValByYAxis(this.chart.state.height),\n\t\t\tthis.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height)\n\t\t);\n\n\t\tif (segmentState) {\n\t\t\tlet startX = this.toLocalX(segmentState.startXVal);\n\t\t\tlet startY = this.toLocalY(segmentState.startYVal);\n\t\t\tlet endX = this.toLocalX(segmentState.endXVal);\n\t\t\tlet endY = this.toLocalY(segmentState.endYVal);\n\t\t\ttopLeft.set(startX, startY, 0);\n\t\t\ttopRight.set(endX, endY, 0);\n\t\t\tbottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t\t\tbottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t\t} else {\n\t\t\ttopLeft.set(0, 0, 0);\n\t\t\ttopRight.set(0, 0, 0);\n\t\t\tbottomLeft.set(0, 0, 0);\n\t\t\tbottomRight.set(0, 0, 0);\n\t\t}\n\n\t}\n\n\tprivate toLocalX(xVal: number): number {\n\t\treturn xVal - this.chart.state.xAxis.range.zeroVal;\n\t}\n\n\n\tprivate toLocalY(yVal: number): number {\n\t\treturn yVal - this.chart.state.yAxis.range.zeroVal;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsGradientWidget.ts\n **/","\nimport {ChartWidget} from \"../Widget\";\nimport Object3D = THREE.Object3D;\nimport {Chart} from \"../Chart\";\nimport {ITrendOptions, ITrendData, Trend} from \"../Trend\";\nimport Vector2 = THREE.Vector2;\nimport Vector3 = THREE.Vector3;\nimport {TrendSegmentsManager} from \"../TrendSegmentsManager\";\nimport {IViewportParams} from \"../Viewport\";\n\n\nexport interface ITrendWidgetClass<TrendWidgetType> {\n\tnew (chart: Chart, trendName: string): TrendWidgetType;\n\twidgetIsEnabled(trendOptions: ITrendOptions, chart: Chart): boolean;\n}\n\n/**\n * abstract manager class for all trends widgets\n */\nexport abstract class TrendsWidget<TrendWidgetType extends TrendWidget> extends ChartWidget {\n\tprotected abstract getTrendWidgetClass(): ITrendWidgetClass<TrendWidgetType>;\n\tprotected object3D: Object3D;\n\tprotected widgets: {[trendName: string]: TrendWidgetType} = {};\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.onTrendsChange();\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tvar state = this.chart;\n\t\tstate.onTrendsChange(() => this.onTrendsChange());\n\t\tstate.onTrendChange((trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tthis.onTrendChange(trendName, changedOptions, newData)\n\t\t});\n\t}\n\n\tprotected onTrendsChange() {\n\t\tvar trendsOptions = this.chart.state.trends;\n\t\tvar TrendWidgetClass = this.getTrendWidgetClass();\n\t\tfor (let trendName in trendsOptions) {\n\t\t\tlet trendOptions = trendsOptions[trendName];\n\t\t\tlet widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t\t\tif (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t\t\t\tthis.createTrendWidget(trendName);\n\t\t\t} else if (!widgetCanBeEnabled && this.widgets[trendName]){\n\t\t\t\tthis.destroyTrendWidget(trendName);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTrendChange(trendName: string, changedOptions: ITrendOptions, newData: ITrendData) {\n\t\tvar widget = this.widgets[trendName];\n\t\tif (!widget) return;\n\t\twidget.onTrendChange(changedOptions);\n\t\tif (newData) {\n\t\t\tvar data = this.chart.getTrend(trendName).getData();\n\t\t\tvar isAppend = (!data.length || data[0].xVal < newData[0].xVal);\n\t\t\tisAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t\t}\n\t}\n\n\tgetObject3D(): Object3D {\n\t\treturn this.object3D;\n\t}\n\n\tprivate createTrendWidget(trendName: string) {\n\t\tvar WidgetConstructor = this.getTrendWidgetClass();\n\t\tvar widget = new WidgetConstructor(this.chart, trendName);\n\t\tthis.widgets[trendName] = widget;\n\t\tvar widgetObject = widget.getObject3D();\n\t\twidgetObject.name = trendName;\n\t\tthis.object3D.add(widget.getObject3D());\n\t}\n\n\tprivate destroyTrendWidget(trendName: string) {\n\t\tthis.widgets[trendName].onDestroy();\n\t\tdelete this.widgets[trendName];\n\t\tvar widgetObject = this.object3D.getObjectByName(trendName);\n\t\tthis.object3D.remove(widgetObject);\n\t}\n}\n\n/**\n * based class for all trends widgets\n */\nexport abstract class TrendWidget {\n\tprotected trend: Trend;\n\tprotected unbindList: Function[] = [];\n\n\tconstructor (protected chart: Chart, protected trendName: string) {\n\t\tthis.trend = chart.trendsManager.getTrend(trendName);\n\t\tthis.chart = chart;\n\t\tthis.bindEvents();\n\t}\n\tabstract getObject3D(): Object3D;\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chart: Chart) {\n\t\treturn trendOptions.enabled;\n\t}\n\tappendData(newData: ITrendData) {};\n\tprependData(newData: ITrendData) {};\n\tonTrendChange(changedOptions?: ITrendOptions) {}\n\tonDestroy() {\n\t\tfor (let unsubscriber of this.unbindList) {\n\t\t\tunsubscriber();\n\t\t}\n\t}\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t}\n\tprotected onZoomFrame(options: IViewportParams) {\n\t}\n\tprotected onTransformationFrame(options: IViewportParams) {\n\t}\n\tprotected onZoom() {\n\t}\n\n\n\tprotected bindEvents() {\n\n\t\tthis.bindEvent(this.trend.segmentsManager.onAnimationFrame(\n\t\t\t(trendPoints: TrendSegmentsManager) => this.onSegmentsAnimate(trendPoints)\n\t\t));\n\n\t\tthis.bindEvent(this.chart.interpolatedViewport.onInterpolation(\n\t\t\t(options) => this.onTransformationFrame(options)\n\t\t));\n\t\t\n\t\tthis.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(\n\t\t\t(options) => this.onZoomFrame(options)\n\t\t));\n\n\t\tthis.bindEvent(this.chart.onZoom(() => this.onZoom()));\n\t};\n\n\tprotected bindEvent(unbind: Function) {\n\t\tthis.unbindList.push(unbind);\n\t}\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsWidget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport {Chart} from \"../Chart\";\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport {TrendsWidget, TrendWidget} from \"./TrendsWidget\";\nimport { TrendSegmentsManager, ITrendSegmentState } from \"../TrendSegmentsManager\";\nimport LineSegments = THREE.LineSegments;\nimport { IViewportParams } from \"../Viewport\";\nimport { ITrendOptions, TREND_TYPE } from '../Trend';\nimport { Utils } from '../Utils';\n\n\n/**\n * widget for drawing trends lines\n */\nexport class TrendsLineWidget extends TrendsWidget<TrendLine> {\n\tstatic widgetName = \"TrendsLine\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLine;\n\t}\n}\n\ninterface ILineSegment {\n\tind: number,\n\tsegmentId: number\n}\n\nexport class TrendLine extends TrendWidget {\n\tprivate material: LineBasicMaterial;\n\tprivate lineSegments: LineSegments;\n\tprivate vertices: Vector3[];\n\n\t// contains indexes of free segments\n\tprivate freeSegmentsInds: number[] = [];\n\n\t// contains segments to display\n\tprivate displayedSegments: {[segmentId: number]: ILineSegment} = {};\n\t\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\t\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tvar options = this.trend.getOptions();\n\t\tthis.material = new LineBasicMaterial( { color: options.lineColor, linewidth: options.lineWidth } );\n\t\tthis.initLine();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.lineSegments;\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.destroySegments();\n\t\t\tthis.setupSegments();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\tthis.setupSegments();\n\t\t}));\n\t}\n\t\n\tprivate initLine() {\n\t\tlet geometry = new Geometry();\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = this.chart.state.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = this.chart.state.yAxis.range;\n\t\tthis.lineSegments = new LineSegments(geometry, this.material);\n\t\tthis.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.lineSegments.frustumCulled = false;\n\t\tfor (let i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t\t\tgeometry.vertices.push(new  Vector3(), new Vector3());\n\t\t\tthis.freeSegmentsInds.push(i);\n\t\t}\n\t\tthis.vertices = geometry.vertices;\n\t\tthis.setupSegments();\n\t}\n\n\tprivate setupSegments() {\n\t\tlet geometry = this.lineSegments.geometry as Geometry;\n\n\t\tlet {firstDisplayedSegment, lastDisplayedSegment} = this.trend.segmentsManager;\n\n\t\tfor (let segmentId in this.displayedSegments) {\n\t\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\t\tlet segment = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t\t\tlet segmentIsNotDisplayed = (\n\t\t\t\tsegment.startXVal < firstDisplayedSegment.startXVal ||\n\t\t\t\tsegment.endXVal > lastDisplayedSegment.endXVal\n\t\t\t);\n\t\t\tif (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t\t}\n\n\t\tlet segment = firstDisplayedSegment;\n\t\twhile (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t\t\tthis.setupSegment(segment.id, segment.currentAnimationState);\n\t\t\tsegment = segment.getNext();\n\t\t}\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t}\n\n\tprivate setupSegment(segmentId: number, segmentState: ITrendSegmentState) {\n\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\tif (!lineSegment) {\n\t\t\tif (this.freeSegmentsInds.length == 0) Utils.error('Max allocated segments reached');\n\t\t\tlet ind = this.freeSegmentsInds.pop();\n\t\t\tlineSegment = this.displayedSegments[segmentId] = {segmentId, ind};\n\t\t}\n\t\tlet segmentInd = lineSegment.ind;\n\t\tlet lineStartVertex = this.vertices[segmentInd * 2];\n\t\tlet lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t\tlineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t\tlineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t}\n\n\tprivate destroySegments() {\n\t\tfor (let segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t}\n\n\tprivate destroySegment(segmentId: number) {\n\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\tlet lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t\tlet lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t\tlineStartVertex.set(0, 0, 0);\n\t\tlineEndVertex.set(0, 0, 0);\n\t\tdelete this.displayedSegments[segmentId];\n\t\tthis.freeSegmentsInds.push(lineSegment.ind);\n\t}\n\n\n\tprotected onZoomFrame(options: IViewportParams) {\n\t\tvar currentScale = this.lineSegments.scale;\n\t\tlet state = this.chart.state;\n\t\tlet scaleXFactor = state.xAxis.range.scaleFactor;\n\t\tlet scaleYFactor = state.yAxis.range.scaleFactor;\n\t\tif (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t}\n\n\n\tprotected onSegmentsAnimate(trendSegments: TrendSegmentsManager) {\n\t\tvar geometry = this.lineSegments.geometry as Geometry;\n\t\tfor (let segmentId of trendSegments.animatedSegmentsIds) {\n\t\t\tif (!this.displayedSegments[segmentId]) continue;\n\t\t\tthis.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t\t}\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n\n\tprivate toLocalX(xVal: number): number {\n\t\treturn xVal - this.chart.state.xAxis.range.zeroVal;\n\t}\n\n\tprivate toLocalY(yVal: number): number {\n\t\treturn yVal - this.chart.state.yAxis.range.zeroVal;\n\t}\n\n\tprivate toLocalVec(vec: Vector3): Vector3 {\n\t\treturn new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsLineWidget.ts\n **/","\n\nimport { TrendsWidget, TrendWidget } from './TrendsWidget';\nimport { Chart } from '../Chart';\nimport Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport { IViewportParams } from '../Viewport';\nimport { TrendSegmentsManager, ITrendSegmentState } from '../TrendSegmentsManager';\nimport Vector3 = THREE.Vector3;\nimport Mesh = THREE.Mesh;\nimport Line = THREE.Line;\nimport BoxGeometry = THREE.BoxGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport { TREND_TYPE, ITrendOptions } from '../Trend';\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport remove = THREE.Cache.remove;\nimport { Utils } from '../Utils';\n\n\nconst RISE_COLOR = 0x2CAC40;\nconst FALL_COLOR = 0xEE5533;\nconst MARGIN_PERCENT = 0.3;\nconst MAX_CANDLES = 100;\n\n/**\n * widget for drawing trends candles\n */\nexport class TrendsCandlesWidget extends TrendsWidget<TrendCandlesWidget> {\n\tstatic widgetName = \"TrendsCandles\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendCandlesWidget;\n\t}\n}\n\n\nexport class TrendCandlesWidget extends TrendWidget {\n\tprivate scaleXFactor: number;\n\tprivate scaleYFactor: number;\n\tprivate object3D: Object3D;\n\t\n\t// contains indexes of free candles\n\tprivate freeCandlesInds: number[] = [];\n\tprivate candlesPool: CandleWidget[] = [];\n\tprivate candles: {[segmentId: number]: CandleWidget} = {};\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.type == TREND_TYPE.CANDLE;\n\t}\n\n\tconstructor (chartState: Chart, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.initObject();\n\t}\n\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.destroyCandles();\n\t\t\tthis.setupCandles();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\tthis.setupCandles();\n\t\t}));\n\t}\n\t\n\tprivate initObject() {\n\t\tlet stateData = this.chart.state;\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = stateData.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = stateData.yAxis.range;\n\t\tthis.scaleXFactor = scaleXFactor;\n\t\tthis.scaleYFactor = scaleYFactor;\n\t\tthis.object3D = new Object3D();\n\t\tthis.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.object3D.frustumCulled = false;\n\t\tfor (let i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t\tthis.setupCandles();\n\t}\n\n\tprivate setupCandles() {\n\n\t\t// remove invisible\n\t\tlet {firstDisplayedSegment, lastDisplayedSegment} = this.trend.segmentsManager;\n\n\t\tfor (let segmentId in this.candles) {\n\t\t\tlet segment = this.candles[segmentId].segment;\n\t\t\tlet segmentIsNotDisplayed = (\n\t\t\t\tsegment.startXVal < firstDisplayedSegment.startXVal ||\n\t\t\t\tsegment.endXVal > lastDisplayedSegment.endXVal\n\t\t\t);\n\t\t\tif (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t\t}\n\n\t\tlet segment = firstDisplayedSegment;\n\t\twhile (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t\t\tthis.setupCandle(segment.id, segment.currentAnimationState);\n\t\t\tsegment = segment.getNext();\n\t\t}\n\t}\n\n\tprivate destroyCandles() {\n\t\tfor (let segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t}\n\n\tprivate destroyCandle(segmentId: number) {\n\t\tlet candle = this.candles[segmentId];\n\t\tthis.object3D.remove(candle.getObject3D());\n\t\tdelete this.candles[segmentId];\n\t}\n\n\tprotected onZoomFrame(options: IViewportParams) {\n\t\tvar currentScale = this.object3D.scale;\n\t\tif (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t}\n\n\tprotected onSegmentsAnimate(trendSegments: TrendSegmentsManager) {\n\t\tfor (let segmentId of trendSegments.animatedSegmentsIds) {\n\t\t\tif (!this.candles[segmentId]) continue;\n\t\t\tlet segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t\t\tthis.setupCandle(segmentId, segmentState);\n\t\t}\n\t}\n\n\t/**\n\t * create or modify candle\n\t */\n\tprivate setupCandle(candleId: number, segmentState: ITrendSegmentState) {\n\t\tlet candleInd = candleId % MAX_CANDLES;\n\n\t\t// get candle from candlesPool to avoid creating new Objects by performance reasons\n\t\tlet candle = this.candlesPool[candleInd];\n\t\tif (!candle) {\n\t\t\tcandle = this.candlesPool[candleInd] = new CandleWidget();\n\t\t}\n\n\t\tif (!this.candles[candleId]) {\n\t\t\tthis.candles[candleId] = candle;\n\t\t\tthis.object3D.add(candle.getObject3D());\n\t\t}\n\t\tcandle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t\tcandle.setSegment(segmentState);\n\t}\n\n\ttoLocalX(xVal: number): number {\n\t\treturn xVal - this.chart.state.xAxis.range.zeroVal;\n\t}\n\n\ttoLocalY(yVal: number): number {\n\t\treturn yVal - this.chart.state.yAxis.range.zeroVal;\n\t}\n\n\ttoLocalVec(vec: Vector3): Vector3 {\n\t\treturn new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t}\n}\n\nclass CandleWidget {\n\tsegment: ITrendSegmentState;\n\tprivate rect: Mesh;\n\tprivate vLine: Line;\n\tprivate hLine: Line;\n\tconstructor () {\n\t\tthis.initObject();\n\t}\n\n\tgetObject3D(): Object3D {\n\t\treturn this.rect;\n\t}\n\n\tsetSegment(segment: ITrendSegmentState) {\n\t\tthis.segment = segment;\n\t\tlet color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\n\t\t// update rect\n\t\tlet geometry = this.rect.geometry as PlaneGeometry;\n\t\tlet material = this.rect.material as MeshBasicMaterial;\n\t\tlet width = segment.endXVal - segment.startXVal;\n\t\twidth -= width * MARGIN_PERCENT;\n\t\tlet height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t\tlet [leftTop, rightTop, leftBottom, rightBottom] = geometry.vertices;\n\t\tleftTop.set(-width / 2, height / 2, 0);\n\t\trightTop.set(width / 2, height / 2, 0);\n\t\tleftBottom.set(-width / 2, -height / 2, 0);\n\t\trightBottom.set(width / 2, -height / 2, 0);\n\n\t\t// // prevent to draw bars with height < 1px\n\t\t// if (Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t\t// \tleftBottom.setY(leftBottom.y + 1);\n\t\t// \trightBottom.setY(rightBottom.y + 1);\n\t\t// }\n\n\t\tmaterial.color.set(color);\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t// update lines\n\t\tlet vLineGeometry = this.vLine.geometry as Geometry;\n\t\tlet vLineMaterial = this.vLine.material as LineBasicMaterial;\n\t\tlet lineTop = segment.maxYVal - segment.yVal;\n\t\tlet lineBottom = segment.minYVal - segment.yVal;\n\t\tvLineGeometry.vertices[0].set(0, lineTop, 0);\n\t\tvLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t\tvLineMaterial.color.set(color);\n\t\tvLineGeometry.verticesNeedUpdate = true;\n\n\t\tlet hLineGeometry = this.hLine.geometry as Geometry;\n\t\tlet hLineMaterial = this.hLine.material as LineBasicMaterial;\n\t\tlet lineLeft = (-width) / 2;\n\t\tlet lineRight = width / 2;\n\t\thLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t\thLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t\thLineMaterial.color.set(color);\n\t\thLineGeometry.verticesNeedUpdate = true;\n\n\t}\n\n\tprivate initObject() {\n\t\tthis.rect = new Mesh(\n\t\t\tnew PlaneGeometry(1, 1),\n\t\t\tnew MeshBasicMaterial({side: THREE.DoubleSide})\n\t\t);\n\t\tlet vLineGeometry = new Geometry();\n\t\tlet hLineGeometry = new Geometry();\n\t\tvLineGeometry.vertices.push(new Vector3(), new Vector3);\n\t\thLineGeometry.vertices.push(new Vector3(), new Vector3);\n\t\tthis.vLine = new Line(vLineGeometry, new LineBasicMaterial({linewidth: 1}));\n\t\tthis.hLine = new Line(hLineGeometry, new LineBasicMaterial({linewidth: 1}));\n\t\tthis.rect.add(this.vLine);\n\t\tthis.rect.add(this.hLine);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsCandleWidget.ts\n **/","import { Utils } from './Utils';\nimport { IIteralable } from './interfaces';\nimport { EventEmitter } from './EventEmmiter'\n\nexport class UniqCollectionItem {\n\tprivate _id: number;\n\tgetId() {\n\t\treturn this._id;\n\t}\n}\n\nconst ID_KEY = '_id';\n\nconst EVENTS = {\n\tCREATE: 'create',\n\tUPDATE: 'update',\n\tREMOVE: 'remove'\n};\n\nexport interface IUniqCollectionOptions<TItem, TItemModel> {\n\tcreateInstance: (itemModel: TItemModel) => TItem;\n}\n\n/**\n * useful for patching collections with id key\n */\nexport class UniqCollection<TItem extends UniqCollectionItem, TItemModel> {\n\tprotected items: TItem[] = [];\n\tprotected options: IUniqCollectionOptions<TItem, TItemModel>;\n\tprotected ee = new EventEmitter();\n\tconstructor(options: IUniqCollectionOptions<TItem, TItemModel>) {\n\t\tthis.options = options;\n\t}\n\n\tpatch(models: TItemModel[]) {\n\t\tlet options = this.options;\n\t\tfor (let model of models) {\n\t\t\tlet id = (model as IIteralable)[ID_KEY];\n\t\t\tif (!id) Utils.error('Collection item without id detected');\n\t\t\tlet ind = this.getItemInd(id);\n\t\t\tlet item = this.items[ind];\n\t\t\tlet justCreated = false;\n\n\t\t\t// create\n\t\t\tif (!item) {\n\t\t\t\tjustCreated = true;\n\t\t\t\titem = options.createInstance(model);\n\t\t\t\tthis.items.push(item);\n\t\t\t}\n\n\t\t\t// update\n\t\t\tif (Object.keys(model).length > 1) {\n\t\t\t\tlet prevProps = {};\n\t\t\t\tUtils.copyProps(item, prevProps, model);\n\t\t\t\tUtils.patch(item as IIteralable, model);\n\t\t\t\tjustCreated && this.ee.emit(EVENTS.CREATE, item);\n\t\t\t\tthis.ee.emit(EVENTS.UPDATE, item, model, prevProps as TItemModel);\n\n\t\t\t// delete\n\t\t\t} else {\n\t\t\t\tthis.items.splice(ind, 1);\n\t\t\t\tthis.ee.emit(EVENTS.REMOVE, item);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tgetItem(id: number): TItem {\n\t\treturn this.items[this.getItemInd(id)];\n\t}\n\n\n\tgetLast(): TItem {\n\t\treturn this.items[this.items.length - 1];\n\t}\n\n\n\tforEach(cb: (item: TItem) => any) {\n\t\tfor (let key in this.items) cb(this.items[key]);\n\t}\n\n\n\tfilter(cb: (item: TItem) => boolean): TItem[] {\n\t\tlet result: TItem[] = [];\n\t\tthis.forEach(item => cb(item) && result.push(item));\n\t\treturn result;\n\t}\n\n\n\tonCreate(cb: (item: TItem) => any): Function {\n\t\treturn this.ee.subscribe(EVENTS.CREATE, cb);\n\t}\n\n\n\tonUpdate (cb: (item: TItem, itemModel: TItemModel, prevProps: TItemModel) => any): Function {\n\t\treturn this.ee.subscribe(EVENTS.UPDATE, cb);\n\t}\n\n\n\tonRemove(cb: (item: TItem) => any): Function {\n\t\treturn this.ee.subscribe(EVENTS.REMOVE, cb);\n\t}\n\n\n\tprotected getItemInd(id: number) {\n\t\treturn Utils.binarySearchInd(this.items, id, ID_KEY);\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/UniqCollection.ts\n **/","export * from './AxisWidget';\nexport * from './GridWidget';\nexport * from './TrendsWidget';\nexport * from './TrendsLineWidget';\nexport * from './TrendsGradientWidget';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/index.ts\n **/"],"sourceRoot":""}