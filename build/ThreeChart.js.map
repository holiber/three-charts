{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ThreeChart.js","webpack:///webpack/bootstrap 479f83c49de8039cea22","webpack:///./index.ts","webpack:///./src/index.ts","webpack:///./src/deps/deps.ts","webpack:///./~/three/examples/js/libs/stats.min.js","webpack:///./~/is-plain-object/index.js","webpack:///./~/isobject/index.js","webpack:///./~/eventemitter2/lib/eventemitter2.js","webpack:///./src/polyfills/es6-promise.js","webpack:///./~/css-element-queries/src/ResizeSensor.js","webpack:///./~/deep-extend/lib/deep-extend.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./src/ChartView.ts","webpack:///./src/Plugin.ts","webpack:///./src/Utils.ts","webpack:///./src/deps/index.ts","webpack:///./src/EventEmmiter.ts","webpack:///./src/Chart.ts","webpack:///./src/Trend.ts","webpack:///./src/TrendSegmentsManager.ts","webpack:///./src/TrendsManager.ts","webpack:///./src/Viewport.ts","webpack:///./src/InterpolatedViewport.ts","webpack:///./src/AnimationManager.ts","webpack:///./src/Easing.ts","webpack:///./src/interfaces.ts","webpack:///./src/Widget.ts","webpack:///./src/widgets/AxisWidget.ts","webpack:///./src/widgets/GridWidget.ts","webpack:///./src/Color.ts","webpack:///./src/widgets/TrendsGradientWidget.ts","webpack:///./src/widgets/TrendsWidget.ts","webpack:///./src/widgets/TrendsLineWidget.ts","webpack:///./src/widgets/TrendsCandleWidget.ts","webpack:///./src/UniqCollection.ts","webpack:///./src/widgets/index.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","__export","hasOwnProperty","window","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","deepExtend","h","a","appendChild","dom","k","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","g","performance","Date","now","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","devicePixelRatio","u","n","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","isObject","isObjectObject","o","Object","prototype","toString","ctor","prot","constructor","val","Array","isArray","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","type","tree","i","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","push","concat","**","growListenerTree","listener","split","slice","name","shift","warned","console","error","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","apply","arguments","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","position","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","element","callback","EventQueue","add","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","Buffer","isSpecificValue","RegExp","cloneSpecificValue","x","copy","getTime","deepCloneArray","arr","clone","forEach","item","index","target","src","keys","key","global","base64","ieee754","SlowBuffer","INSPECT_MAX_BYTES","TYPED_ARRAY_SUPPORT","typedArraySupport","kMaxLength","Uint8Array","__proto__","foo","subarray","byteLength","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","poolSize","_augment","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","Symbol","species","defineProperty","configurable","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","fromArrayLike","array","byteOffset","isBuffer","buffer","isnan","data","_isBuffer","compare","y","String","toLowerCase","list","pos","buf","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","equals","inspect","str","match","join","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","toByteArray","dst","lookup","revLookup","Arr","placeHoldersCount","b64","tmp","placeHolders","L","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","abs","log","LN2","__extends","__","create","Plugin_1","OrthographicCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","ChartBlankView","state","$container","pluginsAndWidgets","_this","widgets","Utils","plugins","filter","pluginOrWidget","ChartPlugin","chart","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","w","showStats","autoRender","scene","Scene","isStopped","enabled","renderer","ChartView","renderers","antialias","alpha","backgroundColor","Color","setSize","setPixelRatio","setClearColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","preinstalledWidgets","customWidgets","ChartWidget","pluginWidgetClasses","providedWidgets","map","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","render","fpsLimit","fps","delay_1","setTimeout","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","getTrend","trendName","setState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","interpolatedViewport","onInterpolation","options","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","viewport","getCameraSettings","left","right","top","bottom","near","far","updateProjectionMatrix","cameraInitialPosition","params","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","CanvasRenderer","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","NAME","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChangedHandler","getOptions","pluginsState","changedState","_i","unsubscriber","obj1","obj2","mergeArrays","deepCopy","JSON","parse","stringify","patch","objectToPatch","idKey","_loop_1","patchItem","subObject","find","this_1","travers","object","allowTraverseDeeper","canTraverseDeeper","setIdsToArrayItems","sourceObject","arr_1","getUid","toFixed","digitsCount","maxDigits","result","intVal","intStr","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","createTexture","canvas","ctx","texture","Texture","needsUpdate","anisotropy","createNearestTexture","minFilter","NearestFilter","msg","warn","currentId","getDistance","num1","num2","binarySearchClosestInd","mid","binarySearchClosest","ind","binarySearchInd","binarySearch","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","getRandomItem","random","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Trend_1","TrendsManager_1","Viewport_1","InterpolatedViewport_1","AnimationManager_1","Easing_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","VIEWPORT_CHANGE","DRAG_STATE_CHAGED","PLUGINS_STATE_CHANGED","LIGHT_BLUE","prevState","xAxis","range","AXIS_RANGE_TYPE","ALL","to","scroll","padding","margin","dataType","AXIS_DATA_TYPE","NUMBER","grid","minSizePx","color","yAxis","RELATIVE_END","animations","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","EASING","Quadratic","Out","zoomEase","autoScrollSpeed","autoScrollEase","Linear","None","autoScroll","trendDefaultState","TREND_TYPE","LINE","maxSegmentLength","lineWidth","lineColor","hasBackground","hasBeacon","settingsForTypes","CANDLE","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","inertialScroll","isReady","trendsManager","TrendsManager","trends","calculatedOptions","installPlugins","animationManager","AnimationManager","setAimationsEnabled","Viewport","computedData","getComputedData","savePrevState","InterpolatedViewport","onChange","onTrendChange","onTrendsChange","onDragStateChanged","onZoom","onViewportChange","tick","newState","eventData","silent","trendsData","trendOptions","newStateContainsData","currentStateData","newStateObj","changedProps","recalculateResult","recalculateState","emitChangedStateEvents","actualData","cursorOptions","isMouseDrag","oldX","currentX","currentScroll","deltaXVal","pxToValByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","zeroVal","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","maxXVal","getEndXVal","minXVal","getStartXVal","dragEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","viewportChangeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","getPlugin","changedTrends","newData","handleTrendsChange","dragState","onDragStateChangedHandler","animationOptions","isAnimationsEnabled","oldTrendsMaxX","trendsMaxXDelta","maxVisibleXVal","getRightVal","paddingRightVal","getValByViewportX","marginRightVal","scrollDelta","isDragMode","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","maxLength","rangeLessThenMinValue","minLength","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getViewportYByVal","minScreenY","currentAxisRange","newZoom","currentRange","nextRange","newScroll","resolve","animationTime","zoomToRange","scrollToEnd","endXVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","dataset","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","appendData","rawData","getData","updatedTrendData","changeData","prependData","allData","newData_1","xVal","yVal","statePatch","fromX","toX","filteredData","data_1","getFirstItem","getLastItem","setOptions","onPrependRequest","onDataChange","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","reject","then","currentData","isPrepend","initialItem","Vector3","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","unbindList","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","unbind","tryToRebuildSegments","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","segmentLength","currentSegmentLengthInPx","valToPxByXAxis","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","getNext","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","unshift","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","currentAnimationState","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","items","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","getPrev","prevPoint","getFrameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","onSegmentsRebuilded","updateParams","scrollXVal","scrollYVal","valToPxByYAxis","zoomX","zoomY","getWorldXByVal","getWorldYByVal","getWorldXByViewportX","viewportX","getWorldYByViewportY","viewportY","getValByViewportY","getValByWorldX","worldX","getValByWorldY","worldY","pxToValByYAxis","getViewportXByVal","getViewportXByWorldX","pixelsCount","getTop","getRight","getBottom","getLeft","getTopVal","getBottomVal","getLeftVal","INTERPOLATION_EVENT","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","TRANSFORMATION_EVENT","interpolationInProgress","setParams","onZoomInterpolation","onScrollInterpolation","onInterpolationEvent","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","hasActiveAnimations","scrollYAnimation","zoomYAnimation","interpolationStarted","interpolationFinished","STARTED","scrollEventNeeded","zoomEventNeeded","FINISHED","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","zoomXChanged","isAutoscroll","targetX","onTick","targetY","targetZoom","lastTickTime","timingFunction","Animation","animateObj","source","isEnabled","i_1","completeAndStop","createdTime","easing","progress","delay","startTime","setProgress","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","targetIteralable","onTickCb","onFinishCb","withDelay","initialVal","targetVal","In","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","Circular","sqrt","Elastic","Back","Bounce","AXIS_TYPE","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","X","Y","updateAxisXRequest","updateAxis","onScrollChange","onZoomFrame","orientation","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","rgbaStr","strokeStyle","material","MeshBasicMaterial","side","DoubleSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","startVal","endVal","displayedValue","pxVal","textAlign","DATE","getDateStr","stroke","closePath","gridParams","sec","hour","day","tf","getHours","getMinutes","getSeconds","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","opacity","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","exec","numberToHexStr","colorStr","rgba","hexStr","getTransparent","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","onTransformationFrame","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","stateData","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","UniqCollectionItem","getId","_id","ID_KEY","CREATE","UPDATE","REMOVE","UniqCollection","models","models_1","model","getItemInd","justCreated","createInstance","prevProps","getItem","getLast","onCreate","onUpdate","onRemove"],"mappings":"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","file":"ThreeChart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__webpack_require__(2);\r\n\t__export(__webpack_require__(14));\r\n\t__export(__webpack_require__(27));\r\n\t__export(__webpack_require__(24));\r\n\t__export(__webpack_require__(19));\r\n\t__export(__webpack_require__(20));\r\n\t__export(__webpack_require__(21));\r\n\t__export(__webpack_require__(22));\r\n\t__export(__webpack_require__(16));\r\n\t__export(__webpack_require__(36));\r\n\t__export(__webpack_require__(28));\r\n\t__export(__webpack_require__(37));\r\n\t__export(__webpack_require__(15));\r\n\t__export(__webpack_require__(31));\r\n\t__export(__webpack_require__(25));\r\n\t__export(__webpack_require__(18));\r\n\t__export(__webpack_require__(26));\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"./ResizeSensor.ts\" />\r\n\t\"use strict\";\r\n\twindow.TweenLite = TweenMax;\r\n\twindow.Stats = __webpack_require__(3);\r\n\t// require('gsap/src/uncompressed/easing/EasePack.js');\r\n\t// require('three/examples/js/renderers/CanvasRenderer.js');\r\n\t// require('three/examples/js/renderers/Projector.js');\r\n\texports.isPlainObject = __webpack_require__(4);\r\n\texports.EE2 = __webpack_require__(6);\r\n\tvar es6_promise_1 = __webpack_require__(7);\r\n\texports.Promise = es6_promise_1.Promise;\r\n\texports.ResizeSensor = __webpack_require__(8);\r\n\texports.deepExtend = __webpack_require__(9);\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// stats.js - http://github.com/mrdoob/stats.js\n\tvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\n\tif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\n\tStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\n\tv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar isObject = __webpack_require__(5);\n\t\n\tfunction isObjectObject(o) {\n\t  return isObject(o) === true\n\t    && Object.prototype.toString.call(o) === '[object Object]';\n\t}\n\t\n\tmodule.exports = function isPlainObject(o) {\n\t  var ctor,prot;\n\t  \n\t  if (isObjectObject(o) === false) return false;\n\t  \n\t  // If has modified constructor\n\t  ctor = o.constructor;\n\t  if (typeof ctor !== 'function') return false;\n\t  \n\t  // If has modified prototype\n\t  prot = ctor.prototype;\n\t  if (isObjectObject(prot) === false) return false;\n\t  \n\t  // If constructor does not have an Object-specific method\n\t  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n\t    return false;\n\t  }\n\t  \n\t  // Most likely a plain Object\n\t  return true;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = function isObject(val) {\n\t  return val != null && typeof val === 'object'\n\t    && !Array.isArray(val);\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * EventEmitter2\n\t * https://github.com/hij1nx/EventEmitter2\n\t *\n\t * Copyright (c) 2013 hij1nx\n\t * Licensed under the MIT license.\n\t */\n\t;!function(undefined) {\n\t\n\t  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t    return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t  };\n\t  var defaultMaxListeners = 10;\n\t\n\t  function init() {\n\t    this._events = {};\n\t    if (this._conf) {\n\t      configure.call(this, this._conf);\n\t    }\n\t  }\n\t\n\t  function configure(conf) {\n\t    if (conf) {\n\t\n\t      this._conf = conf;\n\t\n\t      conf.delimiter && (this.delimiter = conf.delimiter);\n\t      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t      conf.wildcard && (this.wildcard = conf.wildcard);\n\t      conf.newListener && (this.newListener = conf.newListener);\n\t\n\t      if (this.wildcard) {\n\t        this.listenerTree = {};\n\t      }\n\t    }\n\t  }\n\t\n\t  function EventEmitter(conf) {\n\t    this._events = {};\n\t    this.newListener = false;\n\t    configure.call(this, conf);\n\t  }\n\t\n\t  //\n\t  // Attention, function return type now is array, always !\n\t  // It has zero elements if no any matches found and one or more\n\t  // elements (leafs) if there are matches\n\t  //\n\t  function searchListenerTree(handlers, type, tree, i) {\n\t    if (!tree) {\n\t      return [];\n\t    }\n\t    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n\t        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n\t    if (i === typeLength && tree._listeners) {\n\t      //\n\t      // If at the end of the event(s) list and the tree has listeners\n\t      // invoke those listeners.\n\t      //\n\t      if (typeof tree._listeners === 'function') {\n\t        handlers && handlers.push(tree._listeners);\n\t        return [tree];\n\t      } else {\n\t        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t          handlers && handlers.push(tree._listeners[leaf]);\n\t        }\n\t        return [tree];\n\t      }\n\t    }\n\t\n\t    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n\t      //\n\t      // If the event emitted is '*' at this part\n\t      // or there is a concrete match at this patch\n\t      //\n\t      if (currentType === '*') {\n\t        for (branch in tree) {\n\t          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n\t            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n\t          }\n\t        }\n\t        return listeners;\n\t      } else if(currentType === '**') {\n\t        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n\t        if(endReached && tree._listeners) {\n\t          // The next element has a _listeners, add it to the handlers.\n\t          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t        }\n\t\n\t        for (branch in tree) {\n\t          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n\t            if(branch === '*' || branch === '**') {\n\t              if(tree[branch]._listeners && !endReached) {\n\t                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t              }\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t            } else if(branch === nextType) {\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n\t            } else {\n\t              // No match on this one, shift into the tree but not in the type array.\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t            }\n\t          }\n\t        }\n\t        return listeners;\n\t      }\n\t\n\t      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n\t    }\n\t\n\t    xTree = tree['*'];\n\t    if (xTree) {\n\t      //\n\t      // If the listener tree will allow any match for this part,\n\t      // then recursively explore all branches of the tree\n\t      //\n\t      searchListenerTree(handlers, type, xTree, i+1);\n\t    }\n\t\n\t    xxTree = tree['**'];\n\t    if(xxTree) {\n\t      if(i < typeLength) {\n\t        if(xxTree._listeners) {\n\t          // If we have a listener on a '**', it will catch all, so add its handler.\n\t          searchListenerTree(handlers, type, xxTree, typeLength);\n\t        }\n\t\n\t        // Build arrays of matching next branches and others.\n\t        for(branch in xxTree) {\n\t          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n\t            if(branch === nextType) {\n\t              // We know the next element will match, so jump twice.\n\t              searchListenerTree(handlers, type, xxTree[branch], i+2);\n\t            } else if(branch === currentType) {\n\t              // Current node matches, move into the tree.\n\t              searchListenerTree(handlers, type, xxTree[branch], i+1);\n\t            } else {\n\t              isolatedBranch = {};\n\t              isolatedBranch[branch] = xxTree[branch];\n\t              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n\t            }\n\t          }\n\t        }\n\t      } else if(xxTree._listeners) {\n\t        // We have reached the end and still on a '**'\n\t        searchListenerTree(handlers, type, xxTree, typeLength);\n\t      } else if(xxTree['*'] && xxTree['*']._listeners) {\n\t        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n\t      }\n\t    }\n\t\n\t    return listeners;\n\t  }\n\t\n\t  function growListenerTree(type, listener) {\n\t\n\t    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t\n\t    //\n\t    // Looks for two consecutive '**', if so, don't add the event at all.\n\t    //\n\t    for(var i = 0, len = type.length; i+1 < len; i++) {\n\t      if(type[i] === '**' && type[i+1] === '**') {\n\t        return;\n\t      }\n\t    }\n\t\n\t    var tree = this.listenerTree;\n\t    var name = type.shift();\n\t\n\t    while (name) {\n\t\n\t      if (!tree[name]) {\n\t        tree[name] = {};\n\t      }\n\t\n\t      tree = tree[name];\n\t\n\t      if (type.length === 0) {\n\t\n\t        if (!tree._listeners) {\n\t          tree._listeners = listener;\n\t        }\n\t        else if(typeof tree._listeners === 'function') {\n\t          tree._listeners = [tree._listeners, listener];\n\t        }\n\t        else if (isArray(tree._listeners)) {\n\t\n\t          tree._listeners.push(listener);\n\t\n\t          if (!tree._listeners.warned) {\n\t\n\t            var m = defaultMaxListeners;\n\t\n\t            if (typeof this._events.maxListeners !== 'undefined') {\n\t              m = this._events.maxListeners;\n\t            }\n\t\n\t            if (m > 0 && tree._listeners.length > m) {\n\t\n\t              tree._listeners.warned = true;\n\t              console.error('(node) warning: possible EventEmitter memory ' +\n\t                            'leak detected. %d listeners added. ' +\n\t                            'Use emitter.setMaxListeners() to increase limit.',\n\t                            tree._listeners.length);\n\t              console.trace();\n\t            }\n\t          }\n\t        }\n\t        return true;\n\t      }\n\t      name = type.shift();\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // By default EventEmitters will print a warning if more than\n\t  // 10 listeners are added to it. This is a useful default which\n\t  // helps finding memory leaks.\n\t  //\n\t  // Obviously not all Emitters should be limited to 10. This function allows\n\t  // that to be increased. Set to zero for unlimited.\n\t\n\t  EventEmitter.prototype.delimiter = '.';\n\t\n\t  EventEmitter.prototype.setMaxListeners = function(n) {\n\t    this._events || init.call(this);\n\t    this._events.maxListeners = n;\n\t    if (!this._conf) this._conf = {};\n\t    this._conf.maxListeners = n;\n\t  };\n\t\n\t  EventEmitter.prototype.event = '';\n\t\n\t  EventEmitter.prototype.once = function(event, fn) {\n\t    this.many(event, 1, fn);\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.many = function(event, ttl, fn) {\n\t    var self = this;\n\t\n\t    if (typeof fn !== 'function') {\n\t      throw new Error('many only accepts instances of Function');\n\t    }\n\t\n\t    function listener() {\n\t      if (--ttl === 0) {\n\t        self.off(event, listener);\n\t      }\n\t      fn.apply(this, arguments);\n\t    }\n\t\n\t    listener._origin = fn;\n\t\n\t    this.on(event, listener);\n\t\n\t    return self;\n\t  };\n\t\n\t  EventEmitter.prototype.emit = function() {\n\t\n\t    this._events || init.call(this);\n\t\n\t    var type = arguments[0];\n\t\n\t    if (type === 'newListener' && !this.newListener) {\n\t      if (!this._events.newListener) { return false; }\n\t    }\n\t\n\t    // Loop through the *_all* functions and invoke them.\n\t    if (this._all) {\n\t      var l = arguments.length;\n\t      var args = new Array(l - 1);\n\t      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t      for (i = 0, l = this._all.length; i < l; i++) {\n\t        this.event = type;\n\t        this._all[i].apply(this, args);\n\t      }\n\t    }\n\t\n\t    // If there is no 'error' event listener then throw.\n\t    if (type === 'error') {\n\t\n\t      if (!this._all &&\n\t        !this._events.error &&\n\t        !(this.wildcard && this.listenerTree.error)) {\n\t\n\t        if (arguments[1] instanceof Error) {\n\t          throw arguments[1]; // Unhandled 'error' event\n\t        } else {\n\t          throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t        }\n\t        return false;\n\t      }\n\t    }\n\t\n\t    var handler;\n\t\n\t    if(this.wildcard) {\n\t      handler = [];\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t    }\n\t    else {\n\t      handler = this._events[type];\n\t    }\n\t\n\t    if (typeof handler === 'function') {\n\t      this.event = type;\n\t      if (arguments.length === 1) {\n\t        handler.call(this);\n\t      }\n\t      else if (arguments.length > 1)\n\t        switch (arguments.length) {\n\t          case 2:\n\t            handler.call(this, arguments[1]);\n\t            break;\n\t          case 3:\n\t            handler.call(this, arguments[1], arguments[2]);\n\t            break;\n\t          // slower\n\t          default:\n\t            var l = arguments.length;\n\t            var args = new Array(l - 1);\n\t            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t            handler.apply(this, args);\n\t        }\n\t      return true;\n\t    }\n\t    else if (handler) {\n\t      var l = arguments.length;\n\t      var args = new Array(l - 1);\n\t      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t\n\t      var listeners = handler.slice();\n\t      for (var i = 0, l = listeners.length; i < l; i++) {\n\t        this.event = type;\n\t        listeners[i].apply(this, args);\n\t      }\n\t      return (listeners.length > 0) || !!this._all;\n\t    }\n\t    else {\n\t      return !!this._all;\n\t    }\n\t\n\t  };\n\t\n\t  EventEmitter.prototype.on = function(type, listener) {\n\t\n\t    if (typeof type === 'function') {\n\t      this.onAny(type);\n\t      return this;\n\t    }\n\t\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('on only accepts instances of Function');\n\t    }\n\t    this._events || init.call(this);\n\t\n\t    // To avoid recursion in the case that type == \"newListeners\"! Before\n\t    // adding it to the listeners, first emit \"newListeners\".\n\t    this.emit('newListener', type, listener);\n\t\n\t    if(this.wildcard) {\n\t      growListenerTree.call(this, type, listener);\n\t      return this;\n\t    }\n\t\n\t    if (!this._events[type]) {\n\t      // Optimize the case of one listener. Don't need the extra array object.\n\t      this._events[type] = listener;\n\t    }\n\t    else if(typeof this._events[type] === 'function') {\n\t      // Adding the second element, need to change to array.\n\t      this._events[type] = [this._events[type], listener];\n\t    }\n\t    else if (isArray(this._events[type])) {\n\t      // If we've already got an array, just append.\n\t      this._events[type].push(listener);\n\t\n\t      // Check for listener leak\n\t      if (!this._events[type].warned) {\n\t\n\t        var m = defaultMaxListeners;\n\t\n\t        if (typeof this._events.maxListeners !== 'undefined') {\n\t          m = this._events.maxListeners;\n\t        }\n\t\n\t        if (m > 0 && this._events[type].length > m) {\n\t\n\t          this._events[type].warned = true;\n\t          console.error('(node) warning: possible EventEmitter memory ' +\n\t                        'leak detected. %d listeners added. ' +\n\t                        'Use emitter.setMaxListeners() to increase limit.',\n\t                        this._events[type].length);\n\t          console.trace();\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.onAny = function(fn) {\n\t\n\t    if (typeof fn !== 'function') {\n\t      throw new Error('onAny only accepts instances of Function');\n\t    }\n\t\n\t    if(!this._all) {\n\t      this._all = [];\n\t    }\n\t\n\t    // Add the function to the event listener collection.\n\t    this._all.push(fn);\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t  EventEmitter.prototype.off = function(type, listener) {\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('removeListener only takes instances of Function');\n\t    }\n\t\n\t    var handlers,leafs=[];\n\t\n\t    if(this.wildcard) {\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t    }\n\t    else {\n\t      // does not use listeners(), so no side effect of creating _events[type]\n\t      if (!this._events[type]) return this;\n\t      handlers = this._events[type];\n\t      leafs.push({_listeners:handlers});\n\t    }\n\t\n\t    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n\t      var leaf = leafs[iLeaf];\n\t      handlers = leaf._listeners;\n\t      if (isArray(handlers)) {\n\t\n\t        var position = -1;\n\t\n\t        for (var i = 0, length = handlers.length; i < length; i++) {\n\t          if (handlers[i] === listener ||\n\t            (handlers[i].listener && handlers[i].listener === listener) ||\n\t            (handlers[i]._origin && handlers[i]._origin === listener)) {\n\t            position = i;\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (position < 0) {\n\t          continue;\n\t        }\n\t\n\t        if(this.wildcard) {\n\t          leaf._listeners.splice(position, 1);\n\t        }\n\t        else {\n\t          this._events[type].splice(position, 1);\n\t        }\n\t\n\t        if (handlers.length === 0) {\n\t          if(this.wildcard) {\n\t            delete leaf._listeners;\n\t          }\n\t          else {\n\t            delete this._events[type];\n\t          }\n\t        }\n\t        return this;\n\t      }\n\t      else if (handlers === listener ||\n\t        (handlers.listener && handlers.listener === listener) ||\n\t        (handlers._origin && handlers._origin === listener)) {\n\t        if(this.wildcard) {\n\t          delete leaf._listeners;\n\t        }\n\t        else {\n\t          delete this._events[type];\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.offAny = function(fn) {\n\t    var i = 0, l = 0, fns;\n\t    if (fn && this._all && this._all.length > 0) {\n\t      fns = this._all;\n\t      for(i = 0, l = fns.length; i < l; i++) {\n\t        if(fn === fns[i]) {\n\t          fns.splice(i, 1);\n\t          return this;\n\t        }\n\t      }\n\t    } else {\n\t      this._all = [];\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t\n\t  EventEmitter.prototype.removeAllListeners = function(type) {\n\t    if (arguments.length === 0) {\n\t      !this._events || init.call(this);\n\t      return this;\n\t    }\n\t\n\t    if(this.wildcard) {\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t\n\t      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n\t        var leaf = leafs[iLeaf];\n\t        leaf._listeners = null;\n\t      }\n\t    }\n\t    else {\n\t      if (!this._events[type]) return this;\n\t      this._events[type] = null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.listeners = function(type) {\n\t    if(this.wildcard) {\n\t      var handlers = [];\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t      return handlers;\n\t    }\n\t\n\t    this._events || init.call(this);\n\t\n\t    if (!this._events[type]) this._events[type] = [];\n\t    if (!isArray(this._events[type])) {\n\t      this._events[type] = [this._events[type]];\n\t    }\n\t    return this._events[type];\n\t  };\n\t\n\t  EventEmitter.prototype.listenersAny = function() {\n\t\n\t    if(this._all) {\n\t      return this._all;\n\t    }\n\t    else {\n\t      return [];\n\t    }\n\t\n\t  };\n\t\n\t  if (true) {\n\t     // AMD. Register as an anonymous module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return EventEmitter;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // CommonJS\n\t    exports.EventEmitter2 = EventEmitter;\n\t  }\n\t  else {\n\t    // Browser global.\n\t    window.EventEmitter2 = EventEmitter;\n\t  }\n\t}();\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {Promise: window['Promise']}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n\t * directory of this distribution and at\n\t * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n\t */\n\t;\n\t(function() {\n\t\n\t    /**\n\t     * Class for dimension change detection.\n\t     *\n\t     * @param {Element|Element[]|Elements|jQuery} element\n\t     * @param {Function} callback\n\t     *\n\t     * @constructor\n\t     */\n\t    var ResizeSensor = function(element, callback) {\n\t        /**\n\t         *\n\t         * @constructor\n\t         */\n\t        function EventQueue() {\n\t            this.q = [];\n\t            this.add = function(ev) {\n\t                this.q.push(ev);\n\t            };\n\t\n\t            var i, j;\n\t            this.call = function() {\n\t                for (i = 0, j = this.q.length; i < j; i++) {\n\t                    this.q[i].call();\n\t                }\n\t            };\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} element\n\t         * @param {String}      prop\n\t         * @returns {String|Number}\n\t         */\n\t        function getComputedStyle(element, prop) {\n\t            if (element.currentStyle) {\n\t                return element.currentStyle[prop];\n\t            } else if (window.getComputedStyle) {\n\t                return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t            } else {\n\t                return element.style[prop];\n\t            }\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param {HTMLElement} element\n\t         * @param {Function}    resized\n\t         */\n\t        function attachResizeEvent(element, resized) {\n\t            if (!element.resizedAttached) {\n\t                element.resizedAttached = new EventQueue();\n\t                element.resizedAttached.add(resized);\n\t            } else if (element.resizedAttached) {\n\t                element.resizedAttached.add(resized);\n\t                return;\n\t            }\n\t\n\t            element.resizeSensor = document.createElement('div');\n\t            element.resizeSensor.className = 'resize-sensor';\n\t            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n\t            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\t\n\t            element.resizeSensor.style.cssText = style;\n\t            element.resizeSensor.innerHTML =\n\t                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n\t                    '<div style=\"' + styleChild + '\"></div>' +\n\t                '</div>' +\n\t                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n\t                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n\t                '</div>';\n\t            element.appendChild(element.resizeSensor);\n\t\n\t            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n\t                element.style.position = 'relative';\n\t            }\n\t\n\t            var expand = element.resizeSensor.childNodes[0];\n\t            var expandChild = expand.childNodes[0];\n\t            var shrink = element.resizeSensor.childNodes[1];\n\t            var shrinkChild = shrink.childNodes[0];\n\t\n\t            var lastWidth, lastHeight;\n\t\n\t            var reset = function() {\n\t                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n\t                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n\t                expand.scrollLeft = expand.scrollWidth;\n\t                expand.scrollTop = expand.scrollHeight;\n\t                shrink.scrollLeft = shrink.scrollWidth;\n\t                shrink.scrollTop = shrink.scrollHeight;\n\t                lastWidth = element.offsetWidth;\n\t                lastHeight = element.offsetHeight;\n\t            };\n\t\n\t            reset();\n\t\n\t            var changed = function() {\n\t                if (element.resizedAttached) {\n\t                    element.resizedAttached.call();\n\t                }\n\t            };\n\t\n\t            var addEvent = function(el, name, cb) {\n\t                if (el.attachEvent) {\n\t                    el.attachEvent('on' + name, cb);\n\t                } else {\n\t                    el.addEventListener(name, cb);\n\t                }\n\t            };\n\t\n\t            var onScroll = function() {\n\t              if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                  changed();\n\t              }\n\t              reset();\n\t            };\n\t\n\t            addEvent(expand, 'scroll', onScroll);\n\t            addEvent(shrink, 'scroll', onScroll);\n\t        }\n\t\n\t        var elementType = Object.prototype.toString.call(element);\n\t        var isCollectionTyped = ('[object Array]' === elementType\n\t            || ('[object NodeList]' === elementType)\n\t            || ('[object HTMLCollection]' === elementType)\n\t            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n\t            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n\t        );\n\t\n\t        if (isCollectionTyped) {\n\t            var i = 0, j = element.length;\n\t            for (; i < j; i++) {\n\t                attachResizeEvent(element[i], callback);\n\t            }\n\t        } else {\n\t            attachResizeEvent(element, callback);\n\t        }\n\t\n\t        this.detach = function() {\n\t            if (isCollectionTyped) {\n\t                var i = 0, j = element.length;\n\t                for (; i < j; i++) {\n\t                    ResizeSensor.detach(element[i]);\n\t                }\n\t            } else {\n\t                ResizeSensor.detach(element);\n\t            }\n\t        };\n\t    };\n\t\n\t    ResizeSensor.detach = function(element) {\n\t        if (element.resizeSensor) {\n\t            element.removeChild(element.resizeSensor);\n\t            delete element.resizeSensor;\n\t            delete element.resizedAttached;\n\t        }\n\t    };\n\t\n\t    // make available to common module loader\n\t    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t        module.exports = ResizeSensor;\n\t    }\n\t    else {\n\t        window.ResizeSensor = ResizeSensor;\n\t    }\n\t\n\t})();\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/*!\n\t * @description Recursive object extending\n\t * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n\t * @license MIT\n\t *\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t * this software and associated documentation files (the \"Software\"), to deal in\n\t * the Software without restriction, including without limitation the rights to\n\t * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n\t * the Software, and to permit persons to whom the Software is furnished to do so,\n\t * subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all\n\t * copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\t * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\t * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n\t * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n\t\n\t'use strict';\n\t\n\tfunction isSpecificValue(val) {\n\t\treturn (\n\t\t\tval instanceof Buffer\n\t\t\t|| val instanceof Date\n\t\t\t|| val instanceof RegExp\n\t\t) ? true : false;\n\t}\n\t\n\tfunction cloneSpecificValue(val) {\n\t\tif (val instanceof Buffer) {\n\t\t\tvar x = new Buffer(val.length);\n\t\t\tval.copy(x);\n\t\t\treturn x;\n\t\t} else if (val instanceof Date) {\n\t\t\treturn new Date(val.getTime());\n\t\t} else if (val instanceof RegExp) {\n\t\t\treturn new RegExp(val);\n\t\t} else {\n\t\t\tthrow new Error('Unexpected situation');\n\t\t}\n\t}\n\t\n\t/**\n\t * Recursive cloning array.\n\t */\n\tfunction deepCloneArray(arr) {\n\t\tvar clone = [];\n\t\tarr.forEach(function (item, index) {\n\t\t\tif (typeof item === 'object' && item !== null) {\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t\t} else {\n\t\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tclone[index] = item;\n\t\t\t}\n\t\t});\n\t\treturn clone;\n\t}\n\t\n\t/**\n\t * Extening object that entered in first argument.\n\t *\n\t * Returns extended object or false if have no target object or incorrect type.\n\t *\n\t * If you wish to clone source object (without modify it), just use empty new\n\t * object as first argument, like this:\n\t *   deepExtend({}, yourObj_1, [yourObj_N]);\n\t */\n\tvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\t\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (arguments.length < 2) {\n\t\t\treturn arguments[0];\n\t\t}\n\t\n\t\tvar target = arguments[0];\n\t\n\t\t// convert arguments to array and cut off target object\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\t\n\t\tvar val, src, clone;\n\t\n\t\targs.forEach(function (obj) {\n\t\t\t// skip argument if it is array or isn't object\n\t\t\tif (typeof obj !== 'object' || Array.isArray(obj)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tObject.keys(obj).forEach(function (key) {\n\t\t\t\tsrc = target[key]; // source value\n\t\t\t\tval = obj[key]; // new value\n\t\n\t\t\t\t// recursion prevention\n\t\t\t\tif (val === target) {\n\t\t\t\t\treturn;\n\t\n\t\t\t\t/**\n\t\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t\t * instead of extending.\n\t\t\t\t */\n\t\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\t\ttarget[key] = val;\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\t\treturn;\n\t\n\t\t\t\t// source value and new value is objects both, extending...\n\t\t\t\t} else {\n\t\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\n\t\treturn target;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10).Buffer))\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(11)\n\tvar ieee754 = __webpack_require__(12)\n\tvar isArray = __webpack_require__(13)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Plugin_1 = __webpack_require__(15);\r\n\tvar OrthographicCamera = THREE.OrthographicCamera;\r\n\tvar Chart_1 = __webpack_require__(19);\r\n\tvar Widget_1 = __webpack_require__(28);\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar AxisWidget_1 = __webpack_require__(29);\r\n\tvar GridWidget_1 = __webpack_require__(30);\r\n\tvar TrendsGradientWidget_1 = __webpack_require__(32);\r\n\tvar TrendsLineWidget_1 = __webpack_require__(34);\r\n\tvar TrendsCandleWidget_1 = __webpack_require__(35);\r\n\tvar deps_1 = __webpack_require__(17);\r\n\tvar Color_1 = __webpack_require__(31);\r\n\tvar ChartBlankView = (function () {\r\n\t    function ChartBlankView(state, $container, pluginsAndWidgets) {\r\n\t        var _this = this;\r\n\t        if (pluginsAndWidgets === void 0) { pluginsAndWidgets = []; }\r\n\t        this.widgets = [];\r\n\t        if (!THREE || !THREE.REVISION)\r\n\t            Utils_1.Utils.error('three.js not found');\r\n\t        if (!$container) {\r\n\t            Utils_1.Utils.error('$el must be set');\r\n\t        }\r\n\t        // calculate state size\r\n\t        var style = getComputedStyle($container);\r\n\t        state.width = parseInt(style.width);\r\n\t        state.height = parseInt(style.height);\r\n\t        var plugins = pluginsAndWidgets.filter(function (pluginOrWidget) { return pluginOrWidget instanceof Plugin_1.ChartPlugin; });\r\n\t        this.chart = new Chart_1.Chart(state, plugins);\r\n\t        this.pluginsAndWidgets = pluginsAndWidgets;\r\n\t        this.zoomThrottled = Utils_1.Utils.throttle(function (zoomValue, origin) { return _this.zoom(zoomValue, origin); }, 200);\r\n\t        this.$container = $container;\r\n\t        this.init($container);\r\n\t    }\r\n\t    ;\r\n\t    ChartBlankView.prototype.init = function ($container) {\r\n\t        var chart = this.chart;\r\n\t        var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\r\n\t        this.scene = new THREE.Scene();\r\n\t        this.isStopped = !autoRender.enabled;\r\n\t        var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\r\n\t            antialias: true,\r\n\t            alpha: true\r\n\t        });\r\n\t        var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\r\n\t        renderer.setSize(w, h);\r\n\t        renderer.setPixelRatio(ChartView.devicePixelRatio);\r\n\t        renderer.setClearColor(backgroundColor.value, backgroundColor.a);\r\n\t        $container.appendChild(renderer.domElement);\r\n\t        this.$el = renderer.domElement;\r\n\t        this.$el.style.display = 'block';\r\n\t        if (showStats) {\r\n\t            this.stats = new Stats();\r\n\t            $container.appendChild(this.stats.domElement);\r\n\t        }\r\n\t        this.setupCamera();\r\n\t        this.initWidgets();\r\n\t        this.bindEvents();\r\n\t        this.renderLoop();\r\n\t    };\r\n\t    /**\r\n\t     * collect and init widgets from preinstalled widgets, plugins widgets and custom widgets\r\n\t     */\r\n\t    ChartBlankView.prototype.initWidgets = function () {\r\n\t        var _this = this;\r\n\t        var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\r\n\t        var customWidgets = [];\r\n\t        this.pluginsAndWidgets.forEach(function (pluginOrWidget) {\r\n\t            if (pluginOrWidget instanceof Widget_1.ChartWidget) {\r\n\t                customWidgets.push(pluginOrWidget);\r\n\t                return;\r\n\t            }\r\n\t            if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin))\r\n\t                return;\r\n\t            var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\r\n\t            preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\r\n\t        });\r\n\t        this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function (WidgetClass) { return new WidgetClass(); }));\r\n\t        this.widgets.forEach(function (widget) {\r\n\t            widget.setupChart(_this.chart);\r\n\t            widget.onReadyHandler();\r\n\t            _this.scene.add(widget.getObject3D());\r\n\t        });\r\n\t    };\r\n\t    ChartBlankView.prototype.renderLoop = function () {\r\n\t        var _this = this;\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        this.stats && this.stats.begin();\r\n\t        this.render();\r\n\t        if (this.isStopped)\r\n\t            return;\r\n\t        var fpsLimit = this.chart.state.autoRender.fps;\r\n\t        if (fpsLimit) {\r\n\t            var delay_1 = 1000 / fpsLimit;\r\n\t            setTimeout(function () { return requestAnimationFrame(function () { return _this.renderLoop(); }); }, delay_1);\r\n\t        }\r\n\t        else {\r\n\t            requestAnimationFrame(function () { return _this.renderLoop(); });\r\n\t        }\r\n\t        this.stats && this.stats.end();\r\n\t    };\r\n\t    ChartBlankView.prototype.render = function () {\r\n\t        this.chart.render();\r\n\t        this.renderer.render(this.scene, this.camera);\r\n\t    };\r\n\t    ChartBlankView.prototype.stop = function () {\r\n\t        this.isStopped = true;\r\n\t    };\r\n\t    ChartBlankView.prototype.run = function () {\r\n\t        this.isStopped = false;\r\n\t        this.renderLoop();\r\n\t    };\r\n\t    /**\r\n\t     * call to destroy state an init garbage collection\r\n\t     */\r\n\t    ChartBlankView.prototype.destroy = function () {\r\n\t        this.isDestroyed = true;\r\n\t        this.stop();\r\n\t        this.chart.destroy();\r\n\t        this.unbindEvents();\r\n\t        // WARNING! undocumented method for free webgl context\r\n\t        try {\r\n\t            this.renderer.forceContextLoss();\r\n\t        }\r\n\t        catch (wtf) {\r\n\t        }\r\n\t        this.renderer.context = null;\r\n\t        this.renderer.domElement = null;\r\n\t        this.renderer = null;\r\n\t    };\r\n\t    ChartBlankView.prototype.getState = function () {\r\n\t        return this.chart.state;\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for ChartView.state.getTrend\r\n\t     */\r\n\t    ChartBlankView.prototype.getTrend = function (trendName) {\r\n\t        return this.chart.getTrend(trendName);\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for ChartView.state.setState\r\n\t     */\r\n\t    ChartBlankView.prototype.setState = function (state) {\r\n\t        return this.chart.setState(state);\r\n\t    };\r\n\t    ChartBlankView.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var $el = this.$el;\r\n\t        if (this.chart.state.controls.enabled) {\r\n\t            $el.addEventListener('mousewheel', function (ev) {\r\n\t                _this.onMouseWheel(ev);\r\n\t            });\r\n\t            $el.addEventListener('mousemove', function (ev) {\r\n\t                _this.onMouseMove(ev);\r\n\t            });\r\n\t            $el.addEventListener('mousedown', function (ev) { return _this.onMouseDown(ev); });\r\n\t            $el.addEventListener('mouseup', function (ev) { return _this.onMouseUp(ev); });\r\n\t            $el.addEventListener('touchmove', function (ev) {\r\n\t                _this.onTouchMove(ev);\r\n\t            });\r\n\t            $el.addEventListener('touchend', function (ev) {\r\n\t                _this.onTouchEnd(ev);\r\n\t            });\r\n\t        }\r\n\t        if (this.chart.state.autoResize) {\r\n\t            this.resizeSensor = new deps_1.ResizeSensor(this.$container, function () {\r\n\t                _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\r\n\t            });\r\n\t        }\r\n\t        this.unsubscribers = [\r\n\t            this.chart.interpolatedViewport.onInterpolation(function (options) { return _this.onScreenTransformHandler(options); }),\r\n\t            this.chart.onResize(function (options) { return _this.onChartResize(); })\r\n\t        ];\r\n\t    };\r\n\t    ChartBlankView.prototype.unbindEvents = function () {\r\n\t        // TODO: unbind events correctly\r\n\t        try {\r\n\t            this.resizeSensor && this.resizeSensor.detach();\r\n\t        }\r\n\t        catch (e) {\r\n\t        }\r\n\t        this.$el.remove();\r\n\t        this.unsubscribers.forEach(function (unsubscribe) { return unsubscribe(); });\r\n\t    };\r\n\t    ChartBlankView.prototype.setupCamera = function () {\r\n\t        var camSettings = this.chart.viewport.getCameraSettings();\r\n\t        if (!this.camera) {\r\n\t            this.camera = new OrthographicCamera(camSettings.left, camSettings.right, camSettings.top, camSettings.bottom, camSettings.near, camSettings.far);\r\n\t            this.scene.add(this.camera);\r\n\t        }\r\n\t        else {\r\n\t            this.camera.left = camSettings.left;\r\n\t            this.camera.right = camSettings.right;\r\n\t            this.camera.top = camSettings.top;\r\n\t            this.camera.bottom = camSettings.bottom;\r\n\t            this.camera.near = camSettings.near;\r\n\t            this.camera.far = camSettings.far;\r\n\t            this.camera.updateProjectionMatrix();\r\n\t        }\r\n\t        this.camera.position.set(camSettings.left, camSettings.bottom, 0);\r\n\t        this.cameraInitialPosition = this.camera.position.clone();\r\n\t        this.onScreenTransformHandler(this.chart.interpolatedViewport.params);\r\n\t    };\r\n\t    ChartBlankView.prototype.onScreenTransformHandler = function (options) {\r\n\t        if (options.scrollX != void 0) {\r\n\t            var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\r\n\t            this.camera.position.setX(scrollX_1);\r\n\t        }\r\n\t        if (options.scrollY != void 0) {\r\n\t            var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\r\n\t            this.camera.position.setY(scrollY_1);\r\n\t        }\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseDown = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: true, x: ev.clientX, y: ev.clientY } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseUp = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: false } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseMove = function (ev) {\r\n\t        if (this.chart.state.cursor.dragMode) {\r\n\t            this.setState({ cursor: { dragMode: true, x: ev.clientX, y: ev.clientY } });\r\n\t        }\r\n\t    };\r\n\t    ChartBlankView.prototype.onMouseWheel = function (ev) {\r\n\t        ev.stopPropagation();\r\n\t        ev.preventDefault();\r\n\t        var zoomOrigin = ev.layerX / this.chart.state.width;\r\n\t        var zoomValue = 1 + ev.wheelDeltaY * 0.001;\r\n\t        this.zoom(zoomValue, zoomOrigin);\r\n\t    };\r\n\t    ChartBlankView.prototype.onTouchMove = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: true, x: ev.touches[0].clientX, y: ev.touches[0].clientY } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onTouchEnd = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: false } });\r\n\t    };\r\n\t    ChartBlankView.prototype.onChartContainerResizeHandler = function (width, height) {\r\n\t        this.setState({ width: width, height: height });\r\n\t    };\r\n\t    ChartBlankView.prototype.onChartResize = function () {\r\n\t        var _a = this.chart.state, width = _a.width, height = _a.height;\r\n\t        this.renderer.setSize(width, height);\r\n\t        this.setupCamera();\r\n\t    };\r\n\t    ChartBlankView.prototype.zoom = function (zoomValue, zoomOrigin) {\r\n\t        var MAX_ZOOM_VALUE = 1.5;\r\n\t        var MIN_ZOOM_VALUE = 0.7;\r\n\t        zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\r\n\t        zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\r\n\t        this.chart.zoom(zoomValue, zoomOrigin);\r\n\t    };\r\n\t    ChartBlankView.devicePixelRatio = window.devicePixelRatio;\r\n\t    ChartBlankView.preinstalledWidgets = [];\r\n\t    ChartBlankView.renderers = {\r\n\t        CanvasRenderer: THREE.CanvasRenderer,\r\n\t        WebGLRenderer: THREE.WebGLRenderer\r\n\t    };\r\n\t    return ChartBlankView;\r\n\t}());\r\n\texports.ChartBlankView = ChartBlankView;\r\n\tvar ChartView = (function (_super) {\r\n\t    __extends(ChartView, _super);\r\n\t    function ChartView() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    ChartView.preinstalledWidgets = [\r\n\t        TrendsLineWidget_1.TrendsLineWidget,\r\n\t        TrendsCandleWidget_1.TrendsCandlesWidget,\r\n\t        AxisWidget_1.AxisWidget,\r\n\t        GridWidget_1.GridWidget,\r\n\t        TrendsGradientWidget_1.TrendsGradientWidget\r\n\t    ];\r\n\t    return ChartView;\r\n\t}(ChartBlankView));\r\n\texports.ChartView = ChartView;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\texports.DEFAULT_CONFIG = {\r\n\t    installPluginWidgets: true\r\n\t};\r\n\t/**\r\n\t * base class for all plugins\r\n\t * NAME is mandatory\r\n\t */\r\n\tvar ChartPlugin = (function () {\r\n\t    function ChartPlugin(options, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        this.unsubscribers = [];\r\n\t        this.initialState = options;\r\n\t        this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\r\n\t        this.name = this.constructor.NAME;\r\n\t        if (!this.name)\r\n\t            Utils_1.Utils.error('Unnamed plugin detected');\r\n\t    }\r\n\t    ChartPlugin.prototype.setupChart = function (chart) {\r\n\t        var _this = this;\r\n\t        this.chart = chart;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.bindEvent(this.chart.onInitialStateApplied(function (initialState) { return _this.onInitialStateAppliedHandler(initialState); }), this.chart.onReady(function () { return _this.onReadyHandler(); }), this.chart.onDestroy(function () { return _this.onDestroyHandler(); }), this.chart.onPluginsStateChange(function (changedPluginsStates) { return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]); }));\r\n\t    };\r\n\t    ChartPlugin.prototype.getOptions = function () {\r\n\t        return this.chart.state.pluginsState[this.name];\r\n\t    };\r\n\t    ChartPlugin.prototype.onInitialStateAppliedHandler = function (initialState) {\r\n\t    };\r\n\t    ChartPlugin.prototype.onReadyHandler = function () {\r\n\t    };\r\n\t    ChartPlugin.prototype.onStateChangedHandler = function (changedState) {\r\n\t    };\r\n\t    ChartPlugin.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t    };\r\n\t    ChartPlugin.prototype.bindEvent = function () {\r\n\t        var args = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            args[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        var unsubscribers = [];\r\n\t        if (!Array.isArray(args[0])) {\r\n\t            unsubscribers.push(args[0]);\r\n\t        }\r\n\t        else {\r\n\t            unsubscribers.push.apply(unsubscribers, (args));\r\n\t        }\r\n\t        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\r\n\t        var _a;\r\n\t    };\r\n\t    ChartPlugin.prototype.unbindEvents = function () {\r\n\t        this.unsubscribers.forEach(function (unsubscriber) { return unsubscriber(); });\r\n\t        this.unsubscribers.length = 0;\r\n\t    };\r\n\t    ChartPlugin.NAME = '';\r\n\t    ChartPlugin.providedWidgets = [];\r\n\t    return ChartPlugin;\r\n\t}());\r\n\texports.ChartPlugin = ChartPlugin;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar deps_1 = __webpack_require__(17);\r\n\t/**\r\n\t * project utils static class\r\n\t */\r\n\tvar Utils = (function () {\r\n\t    function Utils() {\r\n\t    }\r\n\t    /**\r\n\t     * deepMerge based on https://www.npmjs.com/package/deepmerge\r\n\t     */\r\n\t    Utils.deepMerge = function (obj1, obj2, mergeArrays) {\r\n\t        return deps_1.deepExtend({}, obj1, obj2);\r\n\t    };\r\n\t    /**\r\n\t     * deepCopy based on JSON.stringify function\r\n\t     * @deprecated\r\n\t     */\r\n\t    Utils.deepCopy = function (obj) {\r\n\t        // TODO: use deepMerge function to copy\r\n\t        return JSON.parse(JSON.stringify(obj));\r\n\t    };\r\n\t    Utils.patch = function (objectToPatch, patch) {\r\n\t        var idKey = '_id';\r\n\t        for (var key in patch) {\r\n\t            if (!patch.hasOwnProperty(key))\r\n\t                continue;\r\n\t            if (objectToPatch[key]) {\r\n\t                if (Array.isArray(patch[key])) {\r\n\t                    var _loop_1 = function(patchItem) {\r\n\t                        var subObject = objectToPatch[key].find(function (item) {\r\n\t                            return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\r\n\t                        });\r\n\t                        if (subObject) {\r\n\t                            this_1.patch(subObject, patchItem);\r\n\t                        }\r\n\t                        else {\r\n\t                            objectToPatch[key].push(patchItem);\r\n\t                        }\r\n\t                    };\r\n\t                    var this_1 = this;\r\n\t                    for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\r\n\t                        var patchItem = _a[_i];\r\n\t                        _loop_1(patchItem);\r\n\t                    }\r\n\t                    continue;\r\n\t                }\r\n\t                else if (typeof patch[key] === 'object' && objectToPatch[key] != void 0) {\r\n\t                    if (patch[idKey] && Object.keys(patch).length == 1) {\r\n\t                        delete objectToPatch[key];\r\n\t                    }\r\n\t                    else {\r\n\t                        this.patch(objectToPatch[key], patch[key]);\r\n\t                    }\r\n\t                    continue;\r\n\t                }\r\n\t            }\r\n\t            objectToPatch[key] = patch[key];\r\n\t        }\r\n\t        if (objectToPatch['_onUpdate'])\r\n\t            objectToPatch['_onUpdate'].call(objectToPatch, patch);\r\n\t        return objectToPatch;\r\n\t    };\r\n\t    Utils.travers = function (object, fn) {\r\n\t        for (var key in object) {\r\n\t            if (!object.hasOwnProperty(key))\r\n\t                continue;\r\n\t            var allowTraverseDeeper = fn(object[key]);\r\n\t            var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == 'object';\r\n\t            if (canTraverseDeeper)\r\n\t                this.travers(object[key], fn);\r\n\t        }\r\n\t    };\r\n\t    Utils.setIdsToArrayItems = function (sourceObject) {\r\n\t        var idKey = '_id';\r\n\t        Utils.travers(sourceObject, function (item) {\r\n\t            if (!Array.isArray(item))\r\n\t                return true;\r\n\t            var arr = item;\r\n\t            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\r\n\t                var obj = arr_1[_i];\r\n\t                if (typeof obj !== 'object' || Array.isArray(obj))\r\n\t                    continue;\r\n\t                if (!obj[idKey])\r\n\t                    obj[idKey] = Utils.getUid();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     *\r\n\t     * @example\r\n\t     * // returns \"000015\"\r\n\t     * Utils.toFixed(15, 6);\r\n\t     */\r\n\t    Utils.toFixed = function (num, digitsCount) {\r\n\t        var maxDigits = 15;\r\n\t        var result = '';\r\n\t        var intVal = Math.floor(num);\r\n\t        var intStr = intVal.toString();\r\n\t        var lengthDiff = digitsCount - intStr.length;\r\n\t        if (lengthDiff > 0) {\r\n\t            result = '0'.repeat(lengthDiff) + intStr;\r\n\t        }\r\n\t        else {\r\n\t            result = intStr;\r\n\t        }\r\n\t        var afterPointDigitsCount = maxDigits - intStr.length;\r\n\t        var afterPointStr = num.toString().split('.')[1];\r\n\t        if (afterPointStr) {\r\n\t            result += '.' + afterPointStr.substr(0, afterPointDigitsCount);\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    Utils.bindEvent = function () {\r\n\t    };\r\n\t    /**\r\n\t     * generate texture from canvas context\r\n\t     * @example\r\n\t     * \t// create texture with rect\r\n\t     *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\r\n\t     */\r\n\t    Utils.createTexture = function (width, height, fn) {\r\n\t        var canvas = document.createElement('canvas');\r\n\t        canvas.width = width;\r\n\t        canvas.height = height;\r\n\t        var ctx = canvas.getContext('2d');\r\n\t        fn && fn(ctx, width, height);\r\n\t        var texture = new THREE.Texture(canvas);\r\n\t        texture.needsUpdate = true;\r\n\t        texture.anisotropy = 16;\r\n\t        return texture;\r\n\t    };\r\n\t    /**\r\n\t     * generate texture from canvas context with NearestFilter\r\n\t     * @example\r\n\t     * \t// create texture with rect\r\n\t     *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\r\n\t     */\r\n\t    Utils.createNearestTexture = function (width, height, fn) {\r\n\t        var texture = this.createTexture(width, height, fn);\r\n\t        texture.minFilter = THREE.NearestFilter; //THREE.NearestFilter;\r\n\t        //texture.generateMipmaps = false;\r\n\t        return texture;\r\n\t    };\r\n\t    // static createPixelPerfectTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D) => void ): Texture{\r\n\t    // \tvar texture = this.createTexture(width, height, fn);\r\n\t    // \ttexture.magFilter = THREE.NearestFilter;\r\n\t    // \ttexture.minFilter = THREE.NearestFilter;\r\n\t    // \treturn texture;\r\n\t    // }\r\n\t    /**\r\n\t     * throw error\r\n\t     */\r\n\t    Utils.error = function (msg) {\r\n\t        console.error('Chart error: ' + msg);\r\n\t        throw 'Chart: ' + msg;\r\n\t    };\r\n\t    /**\r\n\t     * throw error\r\n\t     */\r\n\t    Utils.warn = function (msg) {\r\n\t        console.warn('Chart warning: ' + msg);\r\n\t    };\r\n\t    /**\r\n\t     * @returns new unique id\r\n\t     */\r\n\t    Utils.getUid = function () {\r\n\t        return this.currentId++;\r\n\t    };\r\n\t    /**\r\n\t     * @returns distance between numbers\r\n\t     */\r\n\t    Utils.getDistance = function (num1, num2) {\r\n\t        return Math.max(num1, num2) - Math.min(num1, num2);\r\n\t    };\r\n\t    // TODO: refactor binary search functions\r\n\t    Utils.binarySearchClosestInd = function (arr, num, key) {\r\n\t        var mid;\r\n\t        var lo = 0;\r\n\t        var hi = arr.length - 1;\r\n\t        while (hi - lo > 1) {\r\n\t            mid = Math.floor((lo + hi) / 2);\r\n\t            if (arr[mid][key] < num) {\r\n\t                lo = mid;\r\n\t            }\r\n\t            else {\r\n\t                hi = mid;\r\n\t            }\r\n\t        }\r\n\t        if (num - arr[lo][key] <= arr[hi][key] - num) {\r\n\t            return lo;\r\n\t        }\r\n\t        return hi;\r\n\t    };\r\n\t    Utils.binarySearchClosest = function (arr, num, key) {\r\n\t        var ind = this.binarySearchClosestInd(arr, num, key);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.binarySearchInd = function (arr, num, key) {\r\n\t        var mid;\r\n\t        var lo = 0;\r\n\t        var hi = arr.length - 1;\r\n\t        while (hi - lo > 1) {\r\n\t            mid = Math.floor((hi - lo) / 2);\r\n\t            if (arr[mid][key] < num) {\r\n\t                lo = mid;\r\n\t            }\r\n\t            else {\r\n\t                hi = mid;\r\n\t            }\r\n\t            if (arr[lo][key] == num) {\r\n\t                return lo;\r\n\t            }\r\n\t            else if (arr[hi][key] == num) {\r\n\t                return hi;\r\n\t            }\r\n\t        }\r\n\t        return (arr[lo] && arr[lo][key] == num) ? lo : -1;\r\n\t    };\r\n\t    Utils.binarySearch = function (arr, num, key) {\r\n\t        var ind = this.binarySearchInd(arr, num, key);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.rectsIntersect = function (r1, r2) {\r\n\t        var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\r\n\t        var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\r\n\t        var _a = [left1 + width1, left2 + width2, top1 + height1, top2 + height2], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\r\n\t        return !(left2 > right1 ||\r\n\t            right2 < left1 ||\r\n\t            top2 > bottom1 ||\r\n\t            bottom2 < top1);\r\n\t    };\r\n\t    Utils.throttle = function (func, ms) {\r\n\t        var isThrottled = false, savedArgs, savedThis;\r\n\t        function wrapper() {\r\n\t            if (isThrottled) {\r\n\t                savedArgs = arguments;\r\n\t                savedThis = this;\r\n\t                return;\r\n\t            }\r\n\t            func.apply(this, arguments); // (1)\r\n\t            isThrottled = true;\r\n\t            setTimeout(function () {\r\n\t                isThrottled = false; // (3)\r\n\t                if (savedArgs) {\r\n\t                    wrapper.apply(savedThis, savedArgs);\r\n\t                    savedArgs = savedThis = null;\r\n\t                }\r\n\t            }, ms);\r\n\t        }\r\n\t        return wrapper;\r\n\t    };\r\n\t    Utils.msToTimeString = function (timestamp) {\r\n\t        var h = Math.floor(timestamp / 360000);\r\n\t        var m = Math.floor(timestamp / 60000);\r\n\t        var s = Math.floor(timestamp / 1000);\r\n\t        return h + ':' + m + ':' + s;\r\n\t    };\r\n\t    Utils.getRandomItem = function (arr) {\r\n\t        var ind = Math.floor(Math.random() * arr.length);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.copyProps = function (srcObject, dstObject, props, excludeProps) {\r\n\t        if (excludeProps === void 0) { excludeProps = []; }\r\n\t        for (var key in props) {\r\n\t            if (excludeProps.indexOf(key) !== -1)\r\n\t                continue;\r\n\t            if (srcObject[key] == void 0)\r\n\t                continue;\r\n\t            if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\r\n\t                this.copyProps(srcObject[key], dstObject[key], props[key]);\r\n\t            }\r\n\t            else if (typeof srcObject[key] == 'function') {\r\n\t                dstObject[key] = srcObject[key];\r\n\t            }\r\n\t            else {\r\n\t                dstObject[key] = this.deepCopy(srcObject[key]);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Utils.currentId = 1;\r\n\t    return Utils;\r\n\t}());\r\n\texports.Utils = Utils;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(2));\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar deps_1 = __webpack_require__(17);\r\n\t/**\r\n\t * this class uses as proxy for EventEmitter2\r\n\t */\r\n\tvar EventEmitter = (function () {\r\n\t    // TODO: allow to create EE instances only in Chart class\r\n\t    function EventEmitter() {\r\n\t        this.ee = new deps_1.EE2();\r\n\t    }\r\n\t    EventEmitter.prototype.emit = function (eventName) {\r\n\t        var args = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            args[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        (_a = this.ee).emit.apply(_a, [eventName].concat(args));\r\n\t        var _a;\r\n\t    };\r\n\t    EventEmitter.prototype.on = function (eventName, callback) {\r\n\t        return this.ee.on(eventName, callback);\r\n\t    };\r\n\t    EventEmitter.prototype.off = function (eventName, callback) {\r\n\t        return this.ee.off(eventName, callback);\r\n\t    };\r\n\t    EventEmitter.prototype.subscribe = function (eventName, callback) {\r\n\t        var _this = this;\r\n\t        this.on(eventName, callback);\r\n\t        return function () { return _this.off(eventName, callback); };\r\n\t    };\r\n\t    EventEmitter.prototype.setMaxListeners = function (listenersCount) {\r\n\t        this.ee.setMaxListeners(listenersCount);\r\n\t    };\r\n\t    EventEmitter.prototype.removeAllListeners = function (eventName) {\r\n\t        this.ee.removeAllListeners(eventName);\r\n\t    };\r\n\t    return EventEmitter;\r\n\t}());\r\n\texports.EventEmitter = EventEmitter;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Trend_1 = __webpack_require__(20);\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar TrendsManager_1 = __webpack_require__(22);\r\n\tvar Viewport_1 = __webpack_require__(23);\r\n\tvar InterpolatedViewport_1 = __webpack_require__(24);\r\n\tvar deps_1 = __webpack_require__(2);\r\n\tvar AnimationManager_1 = __webpack_require__(25);\r\n\tvar Easing_1 = __webpack_require__(26);\r\n\tvar interfaces_1 = __webpack_require__(27);\r\n\tvar CHART_STATE_EVENTS = {\r\n\t    INITIAL_STATE_APPLIED: 'initialStateApplied',\r\n\t    READY: 'ready',\r\n\t    DESTROY: 'destroy',\r\n\t    CHANGE: 'change',\r\n\t    TREND_CHANGE: 'trendChange',\r\n\t    TRENDS_CHANGE: 'trendsChange',\r\n\t    ZOOM: 'zoom',\r\n\t    RESIZE: 'resize',\r\n\t    SCROLL: 'scroll',\r\n\t    VIEWPORT_CHANGE: 'viewportChange',\r\n\t    DRAG_STATE_CHAGED: 'scrollStop',\r\n\t    PLUGINS_STATE_CHANGED: 'pluginsStateChanged'\r\n\t};\r\n\tvar LIGHT_BLUE = '#5273bd';\r\n\t/**\r\n\t *  all state changes caused only by Chart.setState method\r\n\t */\r\n\tvar Chart = (function () {\r\n\t    function Chart(initialState, plugins) {\r\n\t        if (plugins === void 0) { plugins = []; }\r\n\t        this.state = {\r\n\t            prevState: {},\r\n\t            zoom: 0,\r\n\t            xAxis: {\r\n\t                range: {\r\n\t                    type: interfaces_1.AXIS_RANGE_TYPE.ALL,\r\n\t                    from: 0,\r\n\t                    to: 0,\r\n\t                    scroll: 0,\r\n\t                    zoom: 1,\r\n\t                    padding: { start: 0, end: 5 },\r\n\t                    margin: { start: 0, end: 5 }\r\n\t                },\r\n\t                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\r\n\t                grid: { enabled: true, minSizePx: 100, color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\" },\r\n\t                color: LIGHT_BLUE\r\n\t            },\r\n\t            yAxis: {\r\n\t                range: {\r\n\t                    type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\r\n\t                    from: 0,\r\n\t                    to: 0,\r\n\t                    zoom: 1,\r\n\t                    padding: { start: 5, end: 5 },\r\n\t                    margin: { start: 5, end: 5 },\r\n\t                },\r\n\t                grid: { enabled: true, minSizePx: 50, color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\" },\r\n\t                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\r\n\t                color: LIGHT_BLUE\r\n\t            },\r\n\t            animations: {\r\n\t                enabled: true,\r\n\t                trendChangeSpeed: 0.5,\r\n\t                trendChangeEase: void 0,\r\n\t                zoomSpeed: 250,\r\n\t                scrollSpeed: 1000,\r\n\t                scrollEase: Easing_1.EASING.Quadratic.Out,\r\n\t                zoomEase: Easing_1.EASING.Quadratic.Out,\r\n\t                autoScrollSpeed: 1100,\r\n\t                autoScrollEase: Easing_1.EASING.Linear.None,\r\n\t            },\r\n\t            autoRender: { enabled: true, fps: 0 },\r\n\t            autoResize: true,\r\n\t            renderer: 'WebGLRenderer',\r\n\t            autoScroll: true,\r\n\t            controls: { enabled: true },\r\n\t            trendDefaultState: {\r\n\t                enabled: true,\r\n\t                type: Trend_1.TREND_TYPE.LINE,\r\n\t                data: [],\r\n\t                maxSegmentLength: 1000,\r\n\t                lineWidth: 2,\r\n\t                lineColor: 0xFFFFFF,\r\n\t                hasBackground: true,\r\n\t                backgroundColor: 'rgba(#FFFFFF, 0.07)',\r\n\t                hasBeacon: false,\r\n\t                settingsForTypes: {\r\n\t                    CANDLE: {\r\n\t                        minSegmentLengthInPx: 20,\r\n\t                        maxSegmentLengthInPx: 40,\r\n\t                    },\r\n\t                    LINE: {\r\n\t                        minSegmentLengthInPx: 2,\r\n\t                        maxSegmentLengthInPx: 10,\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            cursor: {\r\n\t                dragMode: false,\r\n\t                x: 0,\r\n\t                y: 0\r\n\t            },\r\n\t            font: {\r\n\t                s: '11px Arial',\r\n\t                m: '12px Arial',\r\n\t                l: '13px Arial'\r\n\t            },\r\n\t            backgroundColor: 0x000c2a,\r\n\t            showStats: false,\r\n\t            pluginsState: {},\r\n\t            eventEmitterMaxListeners: 20,\r\n\t            maxVisibleSegments: 1280,\r\n\t            inertialScroll: false\r\n\t        };\r\n\t        this.plugins = {};\r\n\t        /**\r\n\t         * true then state was initialized and ready to use\r\n\t         */\r\n\t        this.isReady = false;\r\n\t        this.isDestroyed = false;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\r\n\t        this.state = Utils_1.Utils.patch(this.state, initialState); //Utils.deepMerge(this.state, initialState);\r\n\t        this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\r\n\t        initialState.trends = this.trendsManager.calculatedOptions;\r\n\t        initialState = this.installPlugins(plugins, initialState);\r\n\t        this.animationManager = new AnimationManager_1.AnimationManager();\r\n\t        this.animationManager.setAimationsEnabled(this.state.animations.enabled);\r\n\t        this.viewport = new Viewport_1.Viewport(this);\r\n\t        this.setState(initialState);\r\n\t        this.setState({ computedData: this.getComputedData() });\r\n\t        this.savePrevState();\r\n\t        this.interpolatedViewport = new InterpolatedViewport_1.InterpolatedViewport(this);\r\n\t        this.bindEvents();\r\n\t        // message to other modules that Chart.state is ready for use\r\n\t        this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\r\n\t        // message to other modules that Chart is ready for use\r\n\t        this.isReady = true;\r\n\t        this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\r\n\t    }\r\n\t    /**\r\n\t     * destroy chart, use ChartView.destroy to completely destroy Chart\r\n\t     */\r\n\t    Chart.prototype.destroy = function () {\r\n\t        this.ee.emit(CHART_STATE_EVENTS.DESTROY);\r\n\t        this.ee.removeAllListeners();\r\n\t        this.state = {};\r\n\t        this.isDestroyed = true;\r\n\t    };\r\n\t    Chart.prototype.onDestroy = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\r\n\t    };\r\n\t    Chart.prototype.onInitialStateApplied = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\r\n\t    };\r\n\t    Chart.prototype.onReady = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\r\n\t    };\r\n\t    Chart.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onTrendChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onTrendsChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onDragStateChanged = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\r\n\t    };\r\n\t    Chart.prototype.onScroll = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\r\n\t    };\r\n\t    Chart.prototype.onZoom = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\r\n\t    };\r\n\t    Chart.prototype.onResize = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\r\n\t    };\r\n\t    Chart.prototype.onViewportChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\r\n\t    };\r\n\t    Chart.prototype.onPluginsStateChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\r\n\t    };\r\n\t    Chart.prototype.getTrend = function (trendName) {\r\n\t        return this.trendsManager.getTrend(trendName);\r\n\t    };\r\n\t    Chart.prototype.render = function () {\r\n\t        this.animationManager.tick();\r\n\t    };\r\n\t    Chart.prototype.setState = function (newState, eventData, silent) {\r\n\t        if (silent === void 0) { silent = false; }\r\n\t        if (this.isDestroyed) {\r\n\t            Utils_1.Utils.error('You have tried to change state of destroyed Chart instance');\r\n\t        }\r\n\t        // temporary remove trends state from newState by performance reasons\r\n\t        var trendsData = {};\r\n\t        if (newState.trends)\r\n\t            for (var trendName in newState.trends) {\r\n\t                var trendOptions = newState.trends[trendName];\r\n\t                if (trendOptions.data)\r\n\t                    trendsData[trendName] = trendOptions.data;\r\n\t                delete trendOptions.data;\r\n\t            }\r\n\t        var newStateContainsData = Object.keys(trendsData).length > 0;\r\n\t        // setup ids to array items\r\n\t        newState = Utils_1.Utils.deepMerge({}, newState);\r\n\t        Utils_1.Utils.setIdsToArrayItems(newState);\r\n\t        var currentStateData = this.state;\r\n\t        var newStateObj = newState;\r\n\t        var changedProps = {};\r\n\t        for (var key in newStateObj) {\r\n\t            if (currentStateData[key] !== newStateObj[key]) {\r\n\t                changedProps[key] = newStateObj[key];\r\n\t            }\r\n\t        }\r\n\t        this.savePrevState(changedProps);\r\n\t        this.state = Utils_1.Utils.patch(this.state, newState); //Utils.deepMerge(this.state, newState, false);\r\n\t        // return trends to state\r\n\t        if (newStateContainsData)\r\n\t            for (var trendName in trendsData) {\r\n\t                this.state.trends[trendName].data = trendsData[trendName];\r\n\t            }\r\n\t        if (silent)\r\n\t            return;\r\n\t        // recalculate all dynamic state props\r\n\t        var recalculateResult = this.recalculateState(changedProps);\r\n\t        changedProps = recalculateResult.changedProps;\r\n\t        this.emitChangedStateEvents(changedProps, eventData);\r\n\t    };\r\n\t    /**\r\n\t     * recalculate all computed state props\r\n\t     */\r\n\t    Chart.prototype.recalculateState = function (changedProps) {\r\n\t        var data = this.state;\r\n\t        var patch = {};\r\n\t        var actualData = Utils_1.Utils.patch({}, data); //Utils.deepMerge({}, data);\r\n\t        // recalculate scroll position by changed cursor params\r\n\t        var cursorOptions = changedProps.cursor;\r\n\t        var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\r\n\t        if (isMouseDrag) {\r\n\t            var oldX = data.prevState.cursor.x;\r\n\t            var currentX = cursorOptions.x;\r\n\t            var currentScroll = data.xAxis.range.scroll;\r\n\t            var deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\r\n\t            patch.xAxis = { range: { scroll: currentScroll + deltaXVal } };\r\n\t            actualData = Utils_1.Utils.patch(actualData, { xAxis: patch.xAxis }); //Utils.deepMerge(actualData, {xAxis: patch.xAxis} as IChartState)\r\n\t        }\r\n\t        var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\r\n\t        var scrollXChanged = false;\r\n\t        var needToRecalculateXAxis = (isMouseDrag ||\r\n\t            chartWasResized ||\r\n\t            (changedProps.xAxis && (changedProps.xAxis.range)) ||\r\n\t            this.state.xAxis.range.zeroVal == void 0);\r\n\t        if (needToRecalculateXAxis) {\r\n\t            var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\r\n\t            if (xAxisPatch) {\r\n\t                scrollXChanged = true;\r\n\t                //patch = Utils.deepMerge(patch, {xAxis: xAxisPatch});\r\n\t                Utils_1.Utils.patch(patch, { xAxis: xAxisPatch });\r\n\t                //actualData = Utils.deepMerge(actualData, {xAxis: xAxisPatch} as IChartState);\r\n\t                Utils_1.Utils.patch(actualData, { xAxis: xAxisPatch });\r\n\t            }\r\n\t        }\r\n\t        // recalculate axis \"from\" and \"to\" for dynamics AXIS_RANGE_TYPE\r\n\t        var needToRecalculateYAxis = (chartWasResized ||\r\n\t            (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END ||\r\n\t                data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO ||\r\n\t                data.yAxis.range.isMirrorMode) &&\r\n\t                (scrollXChanged || changedProps.trends || changedProps.yAxis) ||\r\n\t            this.state.yAxis.range.zeroVal == void 0);\r\n\t        if (needToRecalculateYAxis) {\r\n\t            var yAxisPatch = this.recalculateYAxis(actualData);\r\n\t            if (yAxisPatch) {\r\n\t                // patch = Utils.deepMerge(patch, {yAxis: yAxisPatch});\r\n\t                // actualData = Utils.deepMerge(actualData, {yAxis: yAxisPatch} as IChartState);\r\n\t                Utils_1.Utils.patch(patch, { yAxis: yAxisPatch });\r\n\t                Utils_1.Utils.patch(actualData, { yAxis: yAxisPatch });\r\n\t            }\r\n\t        }\r\n\t        this.savePrevState(patch);\r\n\t        var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\r\n\t        patch.computedData = this.getComputedData(allChangedProps);\r\n\t        this.savePrevState(patch);\r\n\t        // this.state = Utils.deepMerge(this.state, patch);\r\n\t        Utils_1.Utils.patch(this.state, patch);\r\n\t        return { changedProps: allChangedProps, patch: patch };\r\n\t    };\r\n\t    Chart.prototype.getComputedData = function (changedProps) {\r\n\t        var computeAll = !changedProps;\r\n\t        var computedData = {};\r\n\t        if (computeAll || changedProps.trends && this.trendsManager) {\r\n\t            computedData.trends = {\r\n\t                maxXVal: this.trendsManager.getEndXVal(),\r\n\t                minXVal: this.trendsManager.getStartXVal()\r\n\t            };\r\n\t        }\r\n\t        return computedData;\r\n\t    };\r\n\t    Chart.prototype.savePrevState = function (changedProps) {\r\n\t        if (!changedProps)\r\n\t            changedProps = this.state;\r\n\t        var prevState = this.state.prevState;\r\n\t        // prevent to store prev trend state by performance reasons\r\n\t        Utils_1.Utils.copyProps(this.state, prevState, changedProps, ['trends']);\r\n\t    };\r\n\t    Chart.prototype.emitChangedStateEvents = function (changedProps, eventData) {\r\n\t        var prevState = this.state.prevState;\r\n\t        // emit common change event\r\n\t        this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\r\n\t        // emit event for each changed state property\r\n\t        for (var key in changedProps) {\r\n\t            this.ee.emit(key + 'Change', changedProps[key], eventData);\r\n\t        }\r\n\t        if (!this.isReady)\r\n\t            return;\r\n\t        // emit special events based on changed state\r\n\t        var dragEventNeeded = (changedProps.cursor &&\r\n\t            (changedProps.cursor.dragMode != prevState.cursor.dragMode));\r\n\t        dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\r\n\t        var scrollChangeEventsNeeded = (changedProps.xAxis &&\r\n\t            changedProps.xAxis.range &&\r\n\t            changedProps.xAxis.range.scroll != void 0);\r\n\t        scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\r\n\t        var zoomEventsNeeded = ((changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom) ||\r\n\t            (changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom));\r\n\t        zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\r\n\t        var resizeEventNeeded = (changedProps.width || changedProps.height);\r\n\t        resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\r\n\t        var viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\r\n\t        if (viewportChangeEventNeeded)\r\n\t            this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\r\n\t        var pluginStateChangedEventNeeded = !!(changedProps.pluginsState);\r\n\t        pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\r\n\t    };\r\n\t    /**\r\n\t     * init plugins and save plugins params in initialState\r\n\t     */\r\n\t    Chart.prototype.installPlugins = function (plugins, initialState) {\r\n\t        var _this = this;\r\n\t        initialState.pluginsState = {};\r\n\t        plugins.forEach(function (plugin) {\r\n\t            var PluginClass = plugin.constructor;\r\n\t            var pluginName = PluginClass.NAME;\r\n\t            initialState.pluginsState[pluginName] = plugin.initialState;\r\n\t            _this.plugins[pluginName] = plugin;\r\n\t            plugin.setupChart(_this);\r\n\t        });\r\n\t        return initialState;\r\n\t    };\r\n\t    /**\r\n\t     * returns plugin instance by plugin name\r\n\t     * @example\r\n\t     */\r\n\t    Chart.prototype.getPlugin = function (pluginName) {\r\n\t        return this.plugins[pluginName];\r\n\t    };\r\n\t    Chart.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function (changedTrends, newData) {\r\n\t            _this.handleTrendsChange(changedTrends, newData);\r\n\t        });\r\n\t        this.onDragStateChanged(function (dragState) { return _this.onDragStateChangedHandler(dragState); });\r\n\t        this.ee.on('animationsChange', function (animationOptions) {\r\n\t            if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\r\n\t                _this.animationManager.setAimationsEnabled(animationOptions.enabled);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Chart.prototype.handleTrendsChange = function (changedTrends, newData) {\r\n\t        for (var trendName in changedTrends) {\r\n\t            this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\r\n\t        }\r\n\t        // process autoscroll\r\n\t        var state = this.state;\r\n\t        if (!state.autoScroll || state.cursor.dragMode)\r\n\t            return;\r\n\t        var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\r\n\t        var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\r\n\t        if (trendsMaxXDelta > 0) {\r\n\t            var maxVisibleXVal = this.viewport.getRightVal();\r\n\t            var paddingRightVal = this.viewport.getValByViewportX(this.state.width -\r\n\t                state.xAxis.range.padding.end -\r\n\t                state.xAxis.range.margin.end);\r\n\t            var marginRightVal = this.viewport.getValByViewportX(this.state.width -\r\n\t                state.xAxis.range.margin.end);\r\n\t            var currentScroll = state.xAxis.range.scroll;\r\n\t            if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\r\n\t                return;\r\n\t            }\r\n\t            var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\r\n\t            this.setState({ xAxis: { range: { scroll: currentScroll + scrollDelta } } });\r\n\t        }\r\n\t    };\r\n\t    Chart.prototype.onDragStateChangedHandler = function (isDragMode) {\r\n\t        // process inertial scroll\r\n\t        var state = this.state;\r\n\t        if (!state.inertialScroll || isDragMode)\r\n\t            return;\r\n\t        // TODO:\r\n\t        // let currentScroll = state.xAxis.range.scroll;\r\n\t        // let currentX = state.cursor.x;\r\n\t        // let prevX = state.prevState.cursor.x;\r\n\t        // let scrollDelta = this.pxToValueByXAxis(prevX - currentX) * 10;\r\n\t        // this.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}})\r\n\t    };\r\n\t    Chart.prototype.recalculateXAxis = function (actualData, changedProps) {\r\n\t        var axisRange = actualData.xAxis.range;\r\n\t        var patch = { range: {} };\r\n\t        var isInitialize = axisRange.zeroVal == void 0;\r\n\t        var zeroVal, scaleFactor;\r\n\t        var zoom = axisRange.zoom;\r\n\t        if (axisRange.isMirrorMode) {\r\n\t            Utils_1.Utils.error('range.isMirrorMode available only for yAxis.range');\r\n\t        }\r\n\t        if (isInitialize) {\r\n\t            zeroVal = axisRange.from;\r\n\t            scaleFactor = actualData.width / (axisRange.to - axisRange.from);\r\n\t            patch = { range: { zeroVal: zeroVal, scaleFactor: scaleFactor } };\r\n\t        }\r\n\t        else {\r\n\t            zeroVal = axisRange.zeroVal;\r\n\t            scaleFactor = axisRange.scaleFactor;\r\n\t            // recalculate range.zoom and range.scroll then range.from or range.to was changed\r\n\t            if (changedProps.xAxis &&\r\n\t                (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\r\n\t                if (changedProps.xAxis.range.zoom) {\r\n\t                    Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\r\n\t                }\r\n\t                var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\r\n\t                patch.range.scroll = axisRange.from - zeroVal;\r\n\t                patch.range.zoom = currentScaleFactor / scaleFactor;\r\n\t                return patch;\r\n\t            }\r\n\t        }\r\n\t        // recalculate range.from and range.to then range.zoom or range.scroll was changed\r\n\t        do {\r\n\t            var from = zeroVal + axisRange.scroll;\r\n\t            var to = from + actualData.width / (scaleFactor * zoom);\r\n\t            var rangeLength = to - from;\r\n\t            var needToRecalculateZoom = false;\r\n\t            var rangeMoreThenMaxValue = (axisRange.maxLength && rangeLength > axisRange.maxLength);\r\n\t            var rangeLessThenMinValue = (axisRange.minLength && rangeLength < axisRange.minLength);\r\n\t            needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\r\n\t            if (needToRecalculateZoom) {\r\n\t                var fixScale = rangeLength > axisRange.maxLength ?\r\n\t                    rangeLength / axisRange.maxLength :\r\n\t                    rangeLength / axisRange.minLength;\r\n\t                var zoom = zoom * fixScale;\r\n\t                patch.range.zoom = zoom;\r\n\t            }\r\n\t        } while (needToRecalculateZoom);\r\n\t        patch.range.from = from;\r\n\t        patch.range.to = to;\r\n\t        return patch;\r\n\t    };\r\n\t    Chart.prototype.recalculateYAxis = function (actualData) {\r\n\t        var patch = { range: {} };\r\n\t        var yAxisRange = actualData.yAxis.range;\r\n\t        var isInitialize = yAxisRange.scaleFactor == void 0;\r\n\t        var trends = this.trendsManager;\r\n\t        var trendsEndXVal = trends.getEndXVal();\r\n\t        var trendsStartXVal = trends.getStartXVal();\r\n\t        var xRange = actualData.xAxis.range;\r\n\t        var xFrom = xRange.from, xTo = xRange.to;\r\n\t        var xRangeLength = xTo - xFrom;\r\n\t        var zeroVal, scaleFactor, scroll, zoom, needToZoom;\r\n\t        // check situation when state was scrolled behind trends end or before trends start\r\n\t        if (xTo > trendsEndXVal) {\r\n\t            xTo = trendsEndXVal;\r\n\t            xFrom = xTo - xRangeLength;\r\n\t        }\r\n\t        else if (xFrom < trendsStartXVal) {\r\n\t            xFrom = trendsStartXVal;\r\n\t            xTo = xFrom + xRangeLength;\r\n\t        }\r\n\t        var maxY = trends.getMaxYVal(xFrom, xTo);\r\n\t        var minY = trends.getMinYVal(xFrom, xTo);\r\n\t        var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\r\n\t        if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\r\n\t            if (trendLastY > maxY)\r\n\t                maxY = trendLastY;\r\n\t            if (trendLastY < minY)\r\n\t                minY = trendLastY;\r\n\t        }\r\n\t        if (yAxisRange.isMirrorMode) {\r\n\t            if (yAxisRange.zeroVal == void 0)\r\n\t                Utils_1.Utils.error('range.zeroVal must be set when range.isMirrorMode');\r\n\t            var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\r\n\t            var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\r\n\t            var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\r\n\t            maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\r\n\t            minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\r\n\t        }\r\n\t        var margin = yAxisRange.margin;\r\n\t        var padding = {\r\n\t            start: yAxisRange.padding.start + margin.start,\r\n\t            end: yAxisRange.padding.end + margin.end\r\n\t        };\r\n\t        if (padding.end + padding.start >= actualData.height) {\r\n\t            Utils_1.Utils.warn('Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly');\r\n\t        }\r\n\t        var rangeLength = maxY - minY;\r\n\t        var paddingTopInPercents = padding.end / actualData.height;\r\n\t        var paddingBottomInPercents = padding.start / actualData.height;\r\n\t        var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\r\n\t        var visibleRangeLength = rangeLength / rangeLengthInPercents;\r\n\t        var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\r\n\t        var toVal = maxY + visibleRangeLength * paddingTopInPercents;\r\n\t        if (isInitialize) {\r\n\t            zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\r\n\t            scaleFactor = actualData.height / (toVal - fromVal);\r\n\t            patch = { range: { zeroVal: zeroVal, scaleFactor: scaleFactor } };\r\n\t            needToZoom = true;\r\n\t        }\r\n\t        else {\r\n\t            scaleFactor = yAxisRange.scaleFactor;\r\n\t            zeroVal = yAxisRange.zeroVal;\r\n\t            var maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\r\n\t            var minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\r\n\t            needToZoom = (maxScreenY > actualData.height - margin.end ||\r\n\t                maxScreenY < actualData.height - padding.end ||\r\n\t                minScreenY < margin.start ||\r\n\t                minScreenY > padding.start);\r\n\t        }\r\n\t        if (!needToZoom)\r\n\t            return null;\r\n\t        scroll = fromVal - zeroVal;\r\n\t        zoom = (actualData.height / (toVal - fromVal)) / scaleFactor;\r\n\t        var currentAxisRange = this.state.yAxis.range;\r\n\t        if (currentAxisRange.from !== fromVal)\r\n\t            patch.range.from = fromVal;\r\n\t        if (currentAxisRange.to !== toVal)\r\n\t            patch.range.to = toVal;\r\n\t        if (currentAxisRange.scroll !== scroll)\r\n\t            patch.range.scroll = scroll;\r\n\t        if (currentAxisRange.zoom !== zoom)\r\n\t            patch.range.zoom = zoom;\r\n\t        return patch;\r\n\t    };\r\n\t    Chart.prototype.zoom = function (zoomValue, origin) {\r\n\t        var _this = this;\r\n\t        if (origin === void 0) { origin = 0.5; }\r\n\t        var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\r\n\t        var newZoom = zoom * zoomValue;\r\n\t        var currentRange = this.state.width / (scaleFactor * zoom);\r\n\t        var nextRange = this.state.width / (scaleFactor * newZoom);\r\n\t        var newScroll = scroll + (currentRange - nextRange) * origin;\r\n\t        this.setState({ xAxis: { range: { zoom: newZoom, scroll: newScroll } } });\r\n\t        return new deps_1.Promise(function (resolve) {\r\n\t            var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\r\n\t            setTimeout(resolve, animationTime * 1000);\r\n\t        });\r\n\t    };\r\n\t    Chart.prototype.zoomToRange = function (range, origin) {\r\n\t        var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\r\n\t        var currentRange = this.state.width / (scaleFactor * zoom);\r\n\t        return this.zoom(currentRange / range, origin);\r\n\t    };\r\n\t    Chart.prototype.scrollToEnd = function () {\r\n\t        var state = this.state;\r\n\t        var endXVal = this.trendsManager.getEndXVal();\r\n\t        var range = state.xAxis.range;\r\n\t        var scroll = (endXVal - this.viewport.pxToValByXAxis(state.width) +\r\n\t            this.viewport.pxToValByXAxis(range.padding.end + range.margin.end) -\r\n\t            range.zeroVal);\r\n\t        this.setState({ xAxis: { range: { scroll: scroll } } });\r\n\t        return new deps_1.Promise(function (resolve) {\r\n\t            var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\r\n\t            setTimeout(resolve, animationTime);\r\n\t        });\r\n\t    };\r\n\t    return Chart;\r\n\t}());\r\n\texports.Chart = Chart;\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar TrendSegmentsManager_1 = __webpack_require__(21);\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\tvar deps_1 = __webpack_require__(2);\r\n\tvar EVENTS = {\r\n\t    CHANGE: 'Change',\r\n\t    PREPEND_REQUEST: 'prependRequest'\r\n\t};\r\n\t(function (TREND_TYPE) {\r\n\t    TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\r\n\t    TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\r\n\t})(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\r\n\tvar TREND_TYPE = exports.TREND_TYPE;\r\n\tvar Trend = (function () {\r\n\t    function Trend(chartState, trendName, initialState) {\r\n\t        this.minXVal = Infinity;\r\n\t        this.minYVal = Infinity;\r\n\t        this.maxXVal = -Infinity;\r\n\t        this.maxYVal = -Infinity;\r\n\t        var options = initialState.trends[trendName];\r\n\t        this.name = trendName;\r\n\t        this.chart = chartState;\r\n\t        this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\r\n\t        this.calculatedOptions.name = trendName;\r\n\t        if (options.dataset)\r\n\t            this.calculatedOptions.data = Trend.prepareData(options.dataset);\r\n\t        this.calculatedOptions.dataset = [];\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    // private onInitialStateApplied() {\r\n\t    // \tthis.segmentsManager = new TrendSegmentsManager(this.chart, this);\r\n\t    // }\r\n\t    Trend.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var chartState = this.chart;\r\n\t        // chart.onInitialStateApplied(() => this.onInitialStateApplied());\r\n\t        chartState.onDragStateChanged(function () { return _this.checkForPrependRequest(); });\r\n\t        chartState.onZoom(function () { return _this.checkForPrependRequest(); });\r\n\t        chartState.onTrendChange(function (trendName, changedOptions, newData) { return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData); });\r\n\t        chartState.onDestroy(function () { return _this.ee.removeAllListeners(); });\r\n\t    };\r\n\t    Trend.prototype.getCalculatedOptions = function () {\r\n\t        return this.calculatedOptions;\r\n\t    };\r\n\t    Trend.prototype.appendData = function (rawData) {\r\n\t        var options = this.getOptions();\r\n\t        var newData = Trend.prepareData(rawData, this.getData());\r\n\t        var updatedTrendData = options.data.concat(newData);\r\n\t        this.changeData(updatedTrendData, newData);\r\n\t    };\r\n\t    Trend.prototype.prependData = function (rawData) {\r\n\t        var options = this.getOptions();\r\n\t        var newData = Trend.prepareData(rawData, this.getData(), true);\r\n\t        var updatedTrendData = newData.concat(options.data);\r\n\t        this.changeData(updatedTrendData, newData);\r\n\t    };\r\n\t    Trend.prototype.changeData = function (allData, newData) {\r\n\t        for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\r\n\t            var item = newData_1[_i];\r\n\t            if (item.xVal < this.minXVal)\r\n\t                this.minXVal = item.xVal;\r\n\t            if (item.xVal > this.maxXVal)\r\n\t                this.maxXVal = item.xVal;\r\n\t            if (item.yVal < this.minYVal)\r\n\t                this.minYVal = item.yVal;\r\n\t            if (item.yVal > this.maxYVal)\r\n\t                this.maxYVal = item.yVal;\r\n\t        }\r\n\t        var options = this.getOptions();\r\n\t        var statePatch = { trends: (_a = {}, _a[options.name] = { data: allData }, _a) };\r\n\t        this.chart.setState(statePatch, newData);\r\n\t        var _a;\r\n\t    };\r\n\t    Trend.prototype.getData = function (fromX, toX) {\r\n\t        var data = this.getOptions().data;\r\n\t        if (fromX == void 0 && toX == void 0)\r\n\t            return data;\r\n\t        fromX = fromX !== void 0 ? fromX : data[0].xVal;\r\n\t        toX = toX !== void 0 ? toX : data[data.length].xVal;\r\n\t        var filteredData = [];\r\n\t        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n\t            var item = data_1[_i];\r\n\t            if (item.xVal < fromX)\r\n\t                continue;\r\n\t            if (item.xVal > toX)\r\n\t                break;\r\n\t            filteredData.push(item);\r\n\t        }\r\n\t        return filteredData;\r\n\t    };\r\n\t    Trend.prototype.getFirstItem = function () {\r\n\t        return this.getOptions().data[0];\r\n\t    };\r\n\t    Trend.prototype.getLastItem = function () {\r\n\t        var data = this.getOptions().data;\r\n\t        return data[data.length - 1];\r\n\t    };\r\n\t    Trend.prototype.getOptions = function () {\r\n\t        return this.chart.state.trends[this.name];\r\n\t    };\r\n\t    Trend.prototype.setOptions = function (options) {\r\n\t        this.chart.setState({ trends: (_a = {}, _a[this.name] = options, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    Trend.prototype.onPrependRequest = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on(EVENTS.PREPEND_REQUEST, cb);\r\n\t        return function () {\r\n\t            _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for Chart.onTrendChange\r\n\t     */\r\n\t    Trend.prototype.onChange = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on(EVENTS.CHANGE, cb);\r\n\t        return function () { _this.ee.off(EVENTS.CHANGE, cb); };\r\n\t    };\r\n\t    Trend.prototype.onDataChange = function (cb) {\r\n\t        var _this = this;\r\n\t        var onChangeCb = function (changedOptions, newData) {\r\n\t            if (newData)\r\n\t                cb(newData);\r\n\t        };\r\n\t        this.ee.on(EVENTS.CHANGE, onChangeCb);\r\n\t        return function () {\r\n\t            _this.ee.off(EVENTS.CHANGE, onChangeCb);\r\n\t        };\r\n\t    };\r\n\t    Trend.prototype.checkForPrependRequest = function () {\r\n\t        var _this = this;\r\n\t        if (this.prependRequest)\r\n\t            return;\r\n\t        var chartState = this.chart;\r\n\t        var minXVal = chartState.state.computedData.trends.minXVal;\r\n\t        var minScreenX = chartState.viewport.getViewportYByVal(minXVal);\r\n\t        var needToRequest = minScreenX > 0;\r\n\t        var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\r\n\t        var requestedDataLength = to - from;\r\n\t        if (!needToRequest)\r\n\t            return;\r\n\t        this.prependRequest = new deps_1.Promise(function (resolve, reject) {\r\n\t            _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\r\n\t        });\r\n\t        this.prependRequest.then(function (newData) {\r\n\t            _this.prependData(newData);\r\n\t            _this.prependRequest = null;\r\n\t        }, function () {\r\n\t            _this.prependRequest = null;\r\n\t        });\r\n\t    };\r\n\t    Trend.prepareData = function (newData, currentData, isPrepend) {\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var data = [];\r\n\t        if (typeof newData[0] == 'number') {\r\n\t            currentData = currentData || [];\r\n\t            var initialItem = void 0;\r\n\t            var xVal = void 0;\r\n\t            if (isPrepend) {\r\n\t                initialItem = currentData[0];\r\n\t                xVal = initialItem.xVal - newData.length;\r\n\t            }\r\n\t            else {\r\n\t                initialItem = currentData[currentData.length - 1];\r\n\t                xVal = initialItem ? initialItem.xVal + 1 : 0;\r\n\t            }\r\n\t            for (var _i = 0, _a = newData; _i < _a.length; _i++) {\r\n\t                var yVal = _a[_i];\r\n\t                data.push({ xVal: xVal, yVal: yVal, id: Utils_1.Utils.getUid() });\r\n\t                xVal++;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            data = newData;\r\n\t        }\r\n\t        return data;\r\n\t    };\r\n\t    return Trend;\r\n\t}());\r\n\texports.Trend = Trend;\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Trend_1 = __webpack_require__(20);\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar MAX_ANIMATED_SEGMENTS = 100;\r\n\tvar EVENTS = {\r\n\t    REBUILD: 'rebuild',\r\n\t    DISLPAYED_RANGE_CHANGED: 'displayedRangeChanged',\r\n\t    ANIMATION_FRAME: 'animationFrame'\r\n\t};\r\n\t/**\r\n\t *  Class helps to display and animate trends segments\r\n\t */\r\n\tvar TrendSegmentsManager = (function () {\r\n\t    function TrendSegmentsManager(chart, trend) {\r\n\t        this.segmentsById = {};\r\n\t        this.segments = [];\r\n\t        this.animatedSegmentsIds = [];\r\n\t        this.segmentsLength = 0;\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        this.animatedSegmentsForPrepend = [];\r\n\t        this.nextEmptyId = 0;\r\n\t        this.startSegmentId = 0;\r\n\t        this.endSegmentId = 0;\r\n\t        // TODO: make subscriptions array\r\n\t        this.unbindList = [];\r\n\t        this.chart = chart;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.trend = trend;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendSegmentsManager.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.trend.onChange(function (changedOptions, newData) { return _this.onTrendChangeHandler(changedOptions, newData); });\r\n\t        this.unbindList = [\r\n\t            this.chart.onInitialStateApplied(function () { return _this.onInitialStateAppliedHandler(); }),\r\n\t            this.chart.onZoom(function () { return _this.onZoomHandler(); }),\r\n\t            this.chart.onScroll(function () { return _this.recalculateDisplayedRange(); }),\r\n\t            this.chart.onDestroy(function () { return _this.onDestroyHandler(); })\r\n\t        ];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.unbindEvents = function () {\r\n\t        this.unbindList.forEach(function (unbind) { return unbind(); });\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\r\n\t        this.tryToRebuildSegments();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t        this.unbindEvents();\r\n\t        this.appendAnimation && this.appendAnimation.kill();\r\n\t        this.prependAnimation && this.prependAnimation.kill();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onZoomHandler = function () {\r\n\t        var segmentsRebuilded = this.tryToRebuildSegments();\r\n\t        if (!segmentsRebuilded) {\r\n\t            this.recalculateDisplayedRange();\r\n\t        }\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onTrendChangeHandler = function (changedOptions, newData) {\r\n\t        var needToRebuildSegments = (changedOptions.type != void 0 ||\r\n\t            changedOptions.maxSegmentLength != void 0);\r\n\t        if (needToRebuildSegments) {\r\n\t            this.tryToRebuildSegments(true);\r\n\t            return;\r\n\t        }\r\n\t        if (!newData)\r\n\t            return;\r\n\t        var data = this.trend.getData();\r\n\t        var isAppend = (!data.length || data[0].xVal < newData[0].xVal);\r\n\t        isAppend ? this.appendData(newData) : this.prependData(newData);\r\n\t        this.recalculateDisplayedRange();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getSegment = function (id) {\r\n\t        return this.segmentsById[id];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getEndSegment = function () {\r\n\t        return this.segmentsById[this.endSegmentId];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getStartSegment = function () {\r\n\t        return this.segmentsById[this.startSegmentId];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.tryToRebuildSegments = function (force) {\r\n\t        if (force === void 0) { force = false; }\r\n\t        var options = this.trend.getOptions();\r\n\t        var trendTypeName = Trend_1.TREND_TYPE[options.type];\r\n\t        var trendTypesSettings = options.settingsForTypes;\r\n\t        var trendTypeSettings = trendTypesSettings[trendTypeName];\r\n\t        var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\r\n\t        var needToRebuild = this.segments.length === 0 || force;\r\n\t        var segmentLength = this.maxSegmentLength;\r\n\t        // call toFixed(2) to prevent floating segment error compare\r\n\t        var currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\r\n\t        var currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\r\n\t        if (currentSegmentLengthInPx < minSegmentLengthInPx) {\r\n\t            needToRebuild = true;\r\n\t            segmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\r\n\t        }\r\n\t        else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\r\n\t            needToRebuild = true;\r\n\t            segmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\r\n\t        }\r\n\t        if (!needToRebuild)\r\n\t            return false;\r\n\t        this.maxSegmentLength = segmentLength;\r\n\t        this.segmentsById = {};\r\n\t        this.segments = [];\r\n\t        this.nextEmptyId = 0;\r\n\t        this.startSegmentId = 0;\r\n\t        this.endSegmentId = 0;\r\n\t        this.segmentsLength = 0;\r\n\t        this.stopAllAnimations();\r\n\t        this.appendData(null, true);\r\n\t        this.recalculateDisplayedRange(true);\r\n\t        this.ee.emit(EVENTS.REBUILD);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.stopAllAnimations = function () {\r\n\t        this.animatedSegmentsIds = [];\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        if (this.prependAnimation)\r\n\t            this.prependAnimation.kill();\r\n\t        if (this.appendAnimation)\r\n\t            this.appendAnimation.kill();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.recalculateDisplayedRange = function (segmentsAreRebuilded) {\r\n\t        if (segmentsAreRebuilded === void 0) { segmentsAreRebuilded = false; }\r\n\t        var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\r\n\t        var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\r\n\t        var displayedRange = to - from;\r\n\t        this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, 'startXVal');\r\n\t        this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\r\n\t        this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, 'endXVal');\r\n\t        this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\r\n\t        if (segmentsAreRebuilded)\r\n\t            return;\r\n\t        var displayedRangeChanged = (firstDisplayedSegment.id !== this.firstDisplayedSegment.id ||\r\n\t            lastDisplayedSegment.id !== this.lastDisplayedSegment.id);\r\n\t        if (displayedRangeChanged)\r\n\t            this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\r\n\t    };\r\n\t    // getSegments(fromX?: number, toX?: number): TrendSegment[] {\r\n\t    // \tvar segments = this.segments;\r\n\t    // \tif (fromX == void 0 && toX == void 0) return segments;\r\n\t    // \tfromX = fromX !== void 0 ? fromX : segments[0].startXVal;\r\n\t    // \ttoX = toX !== void 0 ? toX : segments[this.segmentsLength].endXVal;\r\n\t    // \tvar startSegmentInd = Utils.closestBinarySearch(segments, fromX, 'xVal');\r\n\t    // \tvar endSegmentInd = Utils.closestBinarySearch(segments, toX, 'xVal');\r\n\t    // \treturn segments.slice(startSegmentInd, endSegmentInd);\r\n\t    // }\r\n\t    /**\r\n\t     * returns array of segments for values array\r\n\t     * values must be sorted!\r\n\t     */\r\n\t    TrendSegmentsManager.prototype.getSegmentsForXValues = function (values) {\r\n\t        var valueInd = 0;\r\n\t        var value = values[valueInd];\r\n\t        var lastValueInd = values.length - 1;\r\n\t        var results = [];\r\n\t        var segment = this.getStartSegment();\r\n\t        if (!segment.hasValue)\r\n\t            return [];\r\n\t        while (segment) {\r\n\t            while (value < segment.startXVal) {\r\n\t                results.push(void 0);\r\n\t                value = values[++valueInd];\r\n\t            }\r\n\t            while (value > segment.endXVal) {\r\n\t                segment = segment.getNext();\r\n\t                if (!segment)\r\n\t                    break;\r\n\t            }\r\n\t            var valueInPoint = (segment.startXVal == value || segment.endXVal == value ||\r\n\t                (segment.startXVal < value && segment.endXVal > value));\r\n\t            if (valueInPoint) {\r\n\t                results.push(segment);\r\n\t                value = values[++valueInd];\r\n\t            }\r\n\t            if (valueInd > lastValueInd)\r\n\t                break;\r\n\t        }\r\n\t        return results;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onAnimationFrame = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onRebuild = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.REBUILD, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onDisplayedRangeChanged = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.allocateNextSegment = function () {\r\n\t        var id = this.nextEmptyId++;\r\n\t        var segment = new TrendSegment(this, id);\r\n\t        var prevSegment = this.segmentsById[this.endSegmentId];\r\n\t        if (prevSegment && prevSegment.hasValue) {\r\n\t            prevSegment.nextId = id;\r\n\t            segment.prevId = prevSegment.id;\r\n\t        }\r\n\t        this.endSegmentId = id;\r\n\t        this.segmentsLength++;\r\n\t        this.segmentsById[id] = segment;\r\n\t        this.segments.push(segment);\r\n\t        return segment;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.allocatePrevSegment = function () {\r\n\t        var id = this.nextEmptyId++;\r\n\t        var segment = new TrendSegment(this, id);\r\n\t        var nextSegment = this.segmentsById[this.startSegmentId];\r\n\t        if (nextSegment && nextSegment.hasValue) {\r\n\t            nextSegment.prevId = id;\r\n\t            segment.nextId = nextSegment.id;\r\n\t        }\r\n\t        this.startSegmentId = id;\r\n\t        this.segmentsLength++;\r\n\t        this.segmentsById[id] = segment;\r\n\t        this.segments.unshift(segment);\r\n\t        return segment;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.appendData = function (newData, needRebuildSegments) {\r\n\t        // WARNING: bottleneck method!\r\n\t        if (needRebuildSegments === void 0) { needRebuildSegments = false; }\r\n\t        // var t1 = performance.now();\r\n\t        var trendData = this.trend.getData();\r\n\t        if (needRebuildSegments) {\r\n\t            newData = trendData;\r\n\t            this.animatedSegmentsForAppend = [];\r\n\t        }\r\n\t        var startItemInd = trendData.length - newData.length;\r\n\t        var segment = this.getEndSegment() || this.allocateNextSegment();\r\n\t        var initialSegment = segment.hasValue ? segment : null;\r\n\t        var initialAnimationState = segment.createAnimationState();\r\n\t        var itemInd = 0;\r\n\t        while (itemInd < newData.length) {\r\n\t            var item = newData[itemInd];\r\n\t            var itemIsInserted = segment.appendItem(item);\r\n\t            var isLastItem = itemInd == newData.length - 1;\r\n\t            if (itemIsInserted) {\r\n\t                if (!isLastItem)\r\n\t                    itemInd++;\r\n\t            }\r\n\t            else {\r\n\t                if (!segment.isCompleted)\r\n\t                    segment.complete();\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted) {\r\n\t                segment.recalculateItems();\r\n\t            }\r\n\t            var segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\r\n\t            if (segmentIsReadyForAnimate) {\r\n\t                var id = segment.id;\r\n\t                if (!initialSegment)\r\n\t                    initialSegment = segment;\r\n\t                if (!initialAnimationState) {\r\n\t                    initialAnimationState = initialSegment.createAnimationState();\r\n\t                }\r\n\t                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                if (this.animatedSegmentsForAppend.length > 0) {\r\n\t                    segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\r\n\t                    segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\r\n\t                }\r\n\t                segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                segment.targetAnimationState = segment.createAnimationState();\r\n\t                this.animatedSegmentsForAppend.push(id);\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted)\r\n\t                break;\r\n\t            if (!segment.isCompleted)\r\n\t                continue;\r\n\t            segment = this.allocateNextSegment();\r\n\t            var prevItem = trendData[startItemInd + itemInd - 1];\r\n\t            segment.appendItem(prevItem);\r\n\t        }\r\n\t        var animationsOptions = this.chart.state.animations;\r\n\t        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\r\n\t        // var t2 = performance.now();\r\n\t        // console.log(t2 - t1);\r\n\t        // do not create animation if segments was rebuilded\r\n\t        if (needRebuildSegments) {\r\n\t            for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\r\n\t                var segmentId = _a[_i];\r\n\t                var segment_1 = this.segmentsById[segmentId];\r\n\t                segment_1.currentAnimationState = segment_1.createAnimationState();\r\n\t            }\r\n\t            this.animatedSegmentsForAppend = [];\r\n\t            return;\r\n\t        }\r\n\t        if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS)\r\n\t            time = 0;\r\n\t        this.animate(time);\r\n\t    };\r\n\t    // TODO: refactor duplicated code from appendData\r\n\t    TrendSegmentsManager.prototype.prependData = function (newData) {\r\n\t        var trendData = this.trend.getData();\r\n\t        var segment = this.getStartSegment() || this.segmentsById[0];\r\n\t        var initialSegment = segment.hasValue ? segment : null;\r\n\t        var itemInd = newData.length - 1;\r\n\t        var initialAnimationState = segment.createAnimationState();\r\n\t        while (itemInd >= 0) {\r\n\t            var item = newData[itemInd];\r\n\t            var itemIsInserted = segment.prependItem(item);\r\n\t            var isLastItem = itemInd == 0;\r\n\t            if (itemIsInserted) {\r\n\t                if (!isLastItem)\r\n\t                    itemInd--;\r\n\t            }\r\n\t            else {\r\n\t                if (!segment.isCompleted)\r\n\t                    segment.complete();\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted) {\r\n\t                segment.recalculateItems();\r\n\t            }\r\n\t            var segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\r\n\t            if (segmentIsReadyForAnimate) {\r\n\t                var id = segment.id;\r\n\t                if (!initialSegment)\r\n\t                    initialSegment = segment;\r\n\t                if (!initialAnimationState)\r\n\t                    initialAnimationState = initialSegment.createAnimationState();\r\n\t                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                if (this.animatedSegmentsForPrepend.length > 0) {\r\n\t                    segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\r\n\t                    segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\r\n\t                }\r\n\t                segment.targetAnimationState = segment.createAnimationState();\r\n\t                this.animatedSegmentsForPrepend.push(id);\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted)\r\n\t                break;\r\n\t            if (!segment.isCompleted)\r\n\t                continue;\r\n\t            segment = this.allocatePrevSegment();\r\n\t            var nextItem = trendData[itemInd + 1];\r\n\t            segment.prependItem(nextItem);\r\n\t        }\r\n\t        var animationsOptions = this.chart.state.animations;\r\n\t        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\r\n\t        if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS)\r\n\t            time = 0;\r\n\t        this.animate(time, true);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.animate = function (time, isPrepend) {\r\n\t        var _this = this;\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\r\n\t        var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\r\n\t        if ((animation && animation.isActive()) || time == 0) {\r\n\t            if (animation)\r\n\t                animation.kill();\r\n\t            this.onAnimationFrameHandler(1, isPrepend);\r\n\t            animatedSegmentsIds.length = 0;\r\n\t            return;\r\n\t        }\r\n\t        var animationsOptions = this.chart.state.animations;\r\n\t        var ease = animationsOptions.trendChangeEase;\r\n\t        var objectToAnimate = { animationValue: 0 };\r\n\t        animation = TweenLite.to(objectToAnimate, time, { animationValue: 1, ease: ease });\r\n\t        animation.eventCallback('onUpdate', function () { return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend); });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animatedSegmentsIds.length = 0;\r\n\t            _this.appendAnimation = null;\r\n\t        });\r\n\t        if (isPrepend) {\r\n\t            this.prependAnimation = animation;\r\n\t        }\r\n\t        else {\r\n\t            this.appendAnimation = animation;\r\n\t        }\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onAnimationFrameHandler = function (coefficient, isPrepend) {\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\r\n\t        for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\r\n\t            var segmentId = animatedSegmentsIds_1[_i];\r\n\t            var segment = this.segmentsById[segmentId];\r\n\t            for (var key in segment.targetAnimationState) {\r\n\t                var targetValue = segment.targetAnimationState[key];\r\n\t                var initialValue = segment.initialAnimationState[key];\r\n\t                var currentValue = initialValue + (targetValue - initialValue) * coefficient;\r\n\t                segment.currentAnimationState[key] = currentValue;\r\n\t            }\r\n\t        }\r\n\t        this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\r\n\t        this.ee.emit(EVENTS.ANIMATION_FRAME, this);\r\n\t    };\r\n\t    return TrendSegmentsManager;\r\n\t}());\r\n\texports.TrendSegmentsManager = TrendSegmentsManager;\r\n\tvar TrendSegment = (function () {\r\n\t    function TrendSegment(trendPoints, id) {\r\n\t        this.isCompleted = false;\r\n\t        this.items = [];\r\n\t        this.initialAnimationState = {};\r\n\t        this.targetAnimationState = {};\r\n\t        this.currentAnimationState = {};\r\n\t        this.trendSegments = trendPoints;\r\n\t        this.id = id;\r\n\t        this.maxLength = trendPoints.maxSegmentLength;\r\n\t    }\r\n\t    TrendSegment.prototype.createAnimationState = function () {\r\n\t        var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\r\n\t        return {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal,\r\n\t            startXVal: startXVal,\r\n\t            startYVal: startYVal,\r\n\t            endXVal: endXVal,\r\n\t            endYVal: endYVal,\r\n\t            maxYVal: maxYVal,\r\n\t            minYVal: minYVal,\r\n\t            maxLength: maxLength\r\n\t        };\r\n\t    };\r\n\t    ;\r\n\t    TrendSegment.prototype.appendItem = function (item) {\r\n\t        if (this.isCompleted)\r\n\t            return false;\r\n\t        var items = this.items;\r\n\t        if (items.length < 2) {\r\n\t            this.items.push(item);\r\n\t            this.hasValue = true;\r\n\t            return true;\r\n\t        }\r\n\t        var startXVal = items[0].xVal;\r\n\t        if (item.xVal - startXVal > this.maxLength)\r\n\t            return false;\r\n\t        items.push(item);\r\n\t        return true;\r\n\t    };\r\n\t    TrendSegment.prototype.prependItem = function (item) {\r\n\t        if (this.isCompleted)\r\n\t            return false;\r\n\t        var items = this.items;\r\n\t        if (items.length < 2) {\r\n\t            this.items.unshift(item);\r\n\t            this.hasValue = true;\r\n\t            return true;\r\n\t        }\r\n\t        var endXVal = items[items.length - 1].xVal;\r\n\t        if (endXVal - item.xVal > this.maxLength)\r\n\t            return false;\r\n\t        items.unshift(item);\r\n\t        return true;\r\n\t    };\r\n\t    TrendSegment.prototype.complete = function () {\r\n\t        this.isCompleted = true;\r\n\t        this.recalculateItems();\r\n\t        this.items = []; // free memory for completed ranges\r\n\t    };\r\n\t    TrendSegment.prototype.recalculateItems = function () {\r\n\t        var items = this.items;\r\n\t        var itemsLength = items.length;\r\n\t        if (itemsLength === 0)\r\n\t            Utils_1.Utils.error('Unable to create TrendSegment without TrendItems');\r\n\t        var endItem = items[itemsLength - 1];\r\n\t        var endXVal = endItem.xVal, endYVal = endItem.yVal;\r\n\t        var startXVal, startYVal;\r\n\t        var startItem = items[0];\r\n\t        startXVal = startItem.xVal;\r\n\t        startYVal = startItem.yVal;\r\n\t        var minX = Math.min(startXVal, endXVal);\r\n\t        var maxX = Math.max(startXVal, endXVal);\r\n\t        var middleXVal = minX + (maxX - minX) / 2;\r\n\t        var minY = Math.min(startYVal, endYVal);\r\n\t        var maxY = Math.max(startYVal, endYVal);\r\n\t        var middleYVal = minY + (maxY - minY) / 2;\r\n\t        var yVals = items.map(function (item) { return item.yVal; });\r\n\t        this.startXVal = startXVal;\r\n\t        this.startYVal = startYVal;\r\n\t        this.endXVal = endXVal;\r\n\t        this.endYVal = endYVal;\r\n\t        this.xVal = middleXVal;\r\n\t        this.yVal = middleYVal;\r\n\t        this.maxYVal = Math.max.apply(Math, yVals);\r\n\t        this.minYVal = Math.min.apply(Math, yVals);\r\n\t        this.currentAnimationState = this.createAnimationState();\r\n\t    };\r\n\t    TrendSegment.prototype.getNext = function () {\r\n\t        var nextPoint = this.trendSegments.segmentsById[this.nextId];\r\n\t        return nextPoint && nextPoint.hasValue ? nextPoint : null;\r\n\t    };\r\n\t    TrendSegment.prototype.getPrev = function () {\r\n\t        var prevPoint = this.trendSegments.segmentsById[this.prevId];\r\n\t        return prevPoint && prevPoint.hasValue ? prevPoint : null;\r\n\t    };\r\n\t    TrendSegment.prototype.getFrameVal = function () {\r\n\t        var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\r\n\t        return new Vector3(xVal, yVal, 0);\r\n\t    };\r\n\t    return TrendSegment;\r\n\t}());\r\n\texports.TrendSegment = TrendSegment;\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Trend_1 = __webpack_require__(20);\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\tvar EVENTS = {\r\n\t    SEGMENTS_REBUILDED: 'segmentsRebuilded'\r\n\t};\r\n\t/**\r\n\t * Trends manager\r\n\t */\r\n\tvar TrendsManager = (function () {\r\n\t    function TrendsManager(state, initialState) {\r\n\t        this.trends = {};\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.chartState = state;\r\n\t        var trendsCalculatedOptions = {};\r\n\t        for (var trendName in initialState.trends) {\r\n\t            var trend = this.createTrend(state, trendName, initialState);\r\n\t            trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\r\n\t        }\r\n\t        this.calculatedOptions = trendsCalculatedOptions;\r\n\t    }\r\n\t    TrendsManager.prototype.getTrend = function (trendName) {\r\n\t        return this.trends[trendName];\r\n\t    };\r\n\t    TrendsManager.prototype.getEnabledTrends = function () {\r\n\t        var enabledTrends = [];\r\n\t        var allTrends = this.trends;\r\n\t        for (var trendName in allTrends) {\r\n\t            var trend = allTrends[trendName];\r\n\t            trend.getOptions().enabled && enabledTrends.push(trend);\r\n\t        }\r\n\t        return enabledTrends;\r\n\t    };\r\n\t    TrendsManager.prototype.getStartXVal = function () {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        return trends[0].getData()[0].xVal;\r\n\t    };\r\n\t    TrendsManager.prototype.getEndXVal = function () {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        var firstTrendData = trends[0].getData();\r\n\t        return firstTrendData[firstTrendData.length - 1].xVal;\r\n\t    };\r\n\t    TrendsManager.prototype.getExtremumYVal = function (extremumIsMax, fromX, toX) {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        var compareFn;\r\n\t        var result;\r\n\t        if (extremumIsMax) {\r\n\t            result = -Infinity;\r\n\t            compareFn = Math.max;\r\n\t        }\r\n\t        else {\r\n\t            result = Infinity;\r\n\t            compareFn = Math.min;\r\n\t        }\r\n\t        for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\r\n\t            var trend = trends_1[_i];\r\n\t            var trendData = trend.getData(fromX, toX);\r\n\t            var trendYValues = trendData.map(function (dataItem) { return dataItem.yVal; });\r\n\t            result = compareFn.apply(void 0, [result].concat(trendYValues));\r\n\t        }\r\n\t        if (result == Infinity || result == -Infinity)\r\n\t            result = NaN;\r\n\t        return result;\r\n\t    };\r\n\t    TrendsManager.prototype.getMaxYVal = function (fromX, toX) { return this.getExtremumYVal(true, fromX, toX); };\r\n\t    TrendsManager.prototype.getMinYVal = function (fromX, toX) { return this.getExtremumYVal(false, fromX, toX); };\r\n\t    TrendsManager.prototype.onSegmentsRebuilded = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\r\n\t    };\r\n\t    TrendsManager.prototype.createTrend = function (state, trendName, initialState) {\r\n\t        var _this = this;\r\n\t        var trend = new Trend_1.Trend(state, trendName, initialState);\r\n\t        this.trends[trendName] = trend;\r\n\t        trend.segmentsManager.onRebuild(function () { return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName); });\r\n\t        return trend;\r\n\t    };\r\n\t    return TrendsManager;\r\n\t}());\r\n\texports.TrendsManager = TrendsManager;\r\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Viewport = (function () {\r\n\t    function Viewport(chart) {\r\n\t        this.params = {};\r\n\t        this.chart = chart;\r\n\t        this.updateParams();\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    Viewport.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.onChange(function () { return _this.updateParams(); });\r\n\t    };\r\n\t    Viewport.prototype.updateParams = function () {\r\n\t        var state = this.chart.state;\r\n\t        this.params.scrollXVal = state.xAxis.range.scroll;\r\n\t        this.params.scrollYVal = state.yAxis.range.scroll;\r\n\t        this.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\r\n\t        this.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\r\n\t        this.params.zoomX = state.xAxis.range.zoom;\r\n\t        this.params.zoomY = state.yAxis.range.zoom;\r\n\t    };\r\n\t    Viewport.prototype.getCameraSettings = function () {\r\n\t        var _a = this.chart.state, width = _a.width, height = _a.height;\r\n\t        // move 0,0 to left-bottom corner\r\n\t        return {\r\n\t            left: 0,\r\n\t            right: width,\r\n\t            top: height,\r\n\t            bottom: 0,\r\n\t            near: -500,\r\n\t            far: 1000\r\n\t        };\r\n\t    };\r\n\t    // get world coordinates\r\n\t    Viewport.prototype.getWorldXByVal = function (xVal) {\r\n\t        var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\r\n\t        var zoom = this.params.zoomX;\r\n\t        return (xVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    Viewport.prototype.getWorldYByVal = function (yVal) {\r\n\t        var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\r\n\t        var zoom = this.params.zoomY;\r\n\t        return (yVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    Viewport.prototype.getWorldXByViewportX = function (viewportX) {\r\n\t        return this.getWorldXByVal(this.getValByViewportX(viewportX));\r\n\t    };\r\n\t    Viewport.prototype.getWorldYByViewportY = function (viewportY) {\r\n\t        return this.getWorldYByVal(this.getValByViewportY(viewportY));\r\n\t    };\r\n\t    // get value\r\n\t    Viewport.prototype.getValByWorldX = function (worldX) {\r\n\t        return this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\r\n\t    };\r\n\t    Viewport.prototype.getValByWorldY = function (worldY) {\r\n\t        return this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\r\n\t    };\r\n\t    Viewport.prototype.getValByViewportX = function (x) {\r\n\t        return this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\r\n\t    };\r\n\t    Viewport.prototype.getValByViewportY = function (y) {\r\n\t        return this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\r\n\t    };\r\n\t    // get viewport coordinates\r\n\t    Viewport.prototype.getViewportXByVal = function (xVal) {\r\n\t        return this.getWorldXByVal(xVal) - this.params.scrollX;\r\n\t    };\r\n\t    Viewport.prototype.getViewportYByVal = function (yVal) {\r\n\t        return this.getWorldYByVal(yVal) - this.params.scrollY;\r\n\t    };\r\n\t    Viewport.prototype.getViewportXByWorldX = function (worldX) {\r\n\t        return worldX - this.params.scrollX;\r\n\t    };\r\n\t    // pixels converters\r\n\t    Viewport.prototype.valToPxByXAxis = function (val) {\r\n\t        return val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\r\n\t    };\r\n\t    Viewport.prototype.valToPxByYAxis = function (val) {\r\n\t        return val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\r\n\t    };\r\n\t    Viewport.prototype.pxToValByXAxis = function (pixelsCount) {\r\n\t        return pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\r\n\t    };\r\n\t    Viewport.prototype.pxToValByYAxis = function (pixelsCount) {\r\n\t        return pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\r\n\t    };\r\n\t    // get viewport edges\r\n\t    Viewport.prototype.getTop = function () {\r\n\t        return this.params.scrollY + this.chart.state.height;\r\n\t    };\r\n\t    Viewport.prototype.getRight = function () {\r\n\t        return this.params.scrollX + this.chart.state.width;\r\n\t    };\r\n\t    Viewport.prototype.getBottom = function () {\r\n\t        return this.params.scrollY;\r\n\t    };\r\n\t    Viewport.prototype.getLeft = function () {\r\n\t        return this.params.scrollX;\r\n\t    };\r\n\t    Viewport.prototype.getTopVal = function () {\r\n\t        return this.getValByWorldY(this.getTop());\r\n\t    };\r\n\t    Viewport.prototype.getRightVal = function () {\r\n\t        return this.getValByWorldX(this.getRight());\r\n\t    };\r\n\t    Viewport.prototype.getBottomVal = function () {\r\n\t        return this.getValByWorldY(this.getBottom());\r\n\t    };\r\n\t    Viewport.prototype.getLeftVal = function () {\r\n\t        return this.getValByWorldX(this.getLeft());\r\n\t    };\r\n\t    return Viewport;\r\n\t}());\r\n\texports.Viewport = Viewport;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\tvar Viewport_1 = __webpack_require__(23);\r\n\t(function (INTERPOLATION_EVENT) {\r\n\t    INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\r\n\t    INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\r\n\t})(exports.INTERPOLATION_EVENT || (exports.INTERPOLATION_EVENT = {}));\r\n\tvar INTERPOLATION_EVENT = exports.INTERPOLATION_EVENT;\r\n\tvar SCREEN_EVENTS = {\r\n\t    ZOOM_FRAME: 'zoomFrame',\r\n\t    SCROLL_FRAME: 'scrollFrame',\r\n\t    TRANSFORMATION_FRAME: 'transformationFrame',\r\n\t    TRANSFORMATION_EVENT: 'transformationStateChanged',\r\n\t};\r\n\t/**\r\n\t * manage camera, and contains methods for transforming pixels to values\r\n\t */\r\n\tvar InterpolatedViewport = (function (_super) {\r\n\t    __extends(InterpolatedViewport, _super);\r\n\t    function InterpolatedViewport(chart) {\r\n\t        _super.call(this, chart);\r\n\t        this.interpolationInProgress = false;\r\n\t        var _a = chart.state, w = _a.width, h = _a.height;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.setParams(chart.viewport.params);\r\n\t    }\r\n\t    InterpolatedViewport.prototype.onZoomInterpolation = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onScrollInterpolation = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onInterpolation = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onInterpolationEvent = function (cb) {\r\n\t        return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\r\n\t    };\r\n\t    InterpolatedViewport.prototype.cameraIsMoving = function () {\r\n\t        return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished ||\r\n\t            this.zoomXAnimation && !this.zoomXAnimation.isFinished);\r\n\t    };\r\n\t    /**\r\n\t     * setup zoom and scroll\r\n\t     */\r\n\t    InterpolatedViewport.prototype.setParams = function (options, silent) {\r\n\t        if (silent === void 0) { silent = false; }\r\n\t        var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\r\n\t        if (scrollX != void 0)\r\n\t            this.params.scrollX = scrollX;\r\n\t        if (scrollY != void 0)\r\n\t            this.params.scrollY = scrollY;\r\n\t        if (zoomX != void 0)\r\n\t            this.params.zoomX = zoomX;\r\n\t        if (zoomY != void 0)\r\n\t            this.params.zoomY = zoomY;\r\n\t        if (scrollX != void 0 || zoomX) {\r\n\t            options.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\r\n\t            this.params.scrollXVal = options.scrollXVal;\r\n\t        }\r\n\t        if (scrollY != void 0 || zoomY) {\r\n\t            options.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\r\n\t            this.params.scrollYVal = options.scrollYVal;\r\n\t        }\r\n\t        if (silent)\r\n\t            return;\r\n\t        var hasActiveAnimations = ((this.scrollXAnimation && !this.scrollXAnimation.isStopped) ||\r\n\t            (this.scrollYAnimation && !this.scrollYAnimation.isStopped) ||\r\n\t            (this.zoomXAnimation && !this.zoomXAnimation.isStopped) ||\r\n\t            (this.zoomYAnimation && !this.zoomYAnimation.isStopped));\r\n\t        var interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\r\n\t        var interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\r\n\t        if (interpolationStarted) {\r\n\t            this.interpolationInProgress = true;\r\n\t            this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\r\n\t        }\r\n\t        if (interpolationFinished) {\r\n\t            this.interpolationInProgress = false;\r\n\t        }\r\n\t        if (!this.interpolationInProgress) {\r\n\t            // prevent to set camera between pixels\r\n\t            this.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\r\n\t            this.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\r\n\t        }\r\n\t        this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\r\n\t        var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\r\n\t        if (scrollEventNeeded)\r\n\t            this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\r\n\t        var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\r\n\t        if (zoomEventNeeded)\r\n\t            this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\r\n\t        if (interpolationFinished) {\r\n\t            this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\r\n\t        }\r\n\t    };\r\n\t    InterpolatedViewport.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chart;\r\n\t        // handle scroll and zoom\r\n\t        state.onChange(function (changedProps) {\r\n\t            if (changedProps.xAxis && changedProps.xAxis.range) {\r\n\t                if (changedProps.xAxis.range.scroll != void 0)\r\n\t                    _this.onScrollXHandler(changedProps);\r\n\t                if (changedProps.xAxis.range.zoom)\r\n\t                    _this.onZoomXHandler();\r\n\t            }\r\n\t            if (changedProps.yAxis && changedProps.yAxis.range) {\r\n\t                if (changedProps.yAxis.range.scroll != void 0)\r\n\t                    _this.onScrollYHandler();\r\n\t                if (changedProps.yAxis.range.zoom)\r\n\t                    _this.onZoomYHandler();\r\n\t            }\r\n\t        });\r\n\t        state.onDestroy(function () { return _this.onDestroyHandler(); });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onScrollXHandler = function (changedProps) {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var isDragMode = chart.state.cursor.dragMode;\r\n\t        var animations = chart.state.animations;\r\n\t        var zoomXChanged = changedProps.xAxis.range.zoom;\r\n\t        var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\r\n\t        var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\r\n\t        var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\r\n\t        var range = chart.state.xAxis.range;\r\n\t        var targetX = range.scroll * range.scaleFactor * range.zoom;\r\n\t        if (isDragMode && !chart.state.inertialScroll)\r\n\t            time = 0;\r\n\t        if (this.scrollXAnimation)\r\n\t            this.scrollXAnimation.stop();\r\n\t        this.scrollXAnimation = chart.animationManager.animate(time, ease)\r\n\t            .from(this.params.scrollX)\r\n\t            .to(targetX)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ scrollX: value });\r\n\t        });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onScrollYHandler = function () {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var animations = chart.state.animations;\r\n\t        var range = chart.state.yAxis.range;\r\n\t        var targetY = range.scroll * range.scaleFactor * range.zoom;\r\n\t        if (this.scrollYAnimation)\r\n\t            this.scrollYAnimation.stop();\r\n\t        this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase)\r\n\t            .from(this.params.scrollY)\r\n\t            .to(targetY)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ scrollY: value });\r\n\t        });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onZoomXHandler = function () {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var animations = chart.state.animations;\r\n\t        var targetZoom = chart.state.xAxis.range.zoom;\r\n\t        if (this.zoomXAnimation)\r\n\t            this.zoomXAnimation.stop();\r\n\t        this.zoomXAnimation = chart.animationManager\r\n\t            .animate(animations.zoomSpeed, animations.zoomEase)\r\n\t            .from(this.params.zoomX)\r\n\t            .to(targetZoom)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ zoomX: value });\r\n\t        });\r\n\t    };\r\n\t    InterpolatedViewport.prototype.onZoomYHandler = function () {\r\n\t        var _this = this;\r\n\t        var chart = this.chart;\r\n\t        var targetZoom = chart.state.yAxis.range.zoom;\r\n\t        var animations = chart.state.animations;\r\n\t        if (this.zoomYAnimation)\r\n\t            this.zoomYAnimation.stop();\r\n\t        this.zoomYAnimation = chart.animationManager\r\n\t            .animate(animations.zoomSpeed, animations.zoomEase)\r\n\t            .from(this.params.zoomY)\r\n\t            .to(targetZoom)\r\n\t            .onTick(function (value) {\r\n\t            _this.setParams({ zoomY: value });\r\n\t        });\r\n\t    };\r\n\t    return InterpolatedViewport;\r\n\t}(Viewport_1.Viewport));\r\n\texports.InterpolatedViewport = InterpolatedViewport;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Easing_1 = __webpack_require__(26);\r\n\t// TODO: transfer AnimationManager to own repo\r\n\tvar AnimationManager = (function () {\r\n\t    function AnimationManager() {\r\n\t        this.isAnimationsEnabled = true;\r\n\t        this.animations = [];\r\n\t        this.lastTickTime = Date.now();\r\n\t    }\r\n\t    AnimationManager.prototype.animate = function (time, timingFunction) {\r\n\t        var animation = new Animation(this, time, this.lastTickTime, timingFunction);\r\n\t        this.animations.push(animation);\r\n\t        return animation;\r\n\t    };\r\n\t    AnimationManager.prototype.animateObj = function (source, target) {\r\n\t    };\r\n\t    AnimationManager.prototype.setAimationsEnabled = function (isEnabled) {\r\n\t        this.isAnimationsEnabled = isEnabled;\r\n\t    };\r\n\t    AnimationManager.prototype.tick = function () {\r\n\t        var now = Date.now();\r\n\t        var animations = this.animations;\r\n\t        // call tick for each animation\r\n\t        for (var i_1 = 0; i_1 < animations.length; i_1++) {\r\n\t            var animation = animations[i_1];\r\n\t            if (this.isAnimationsEnabled) {\r\n\t                animation.tick(now);\r\n\t            }\r\n\t            else {\r\n\t                animation.completeAndStop();\r\n\t            }\r\n\t        }\r\n\t        // cleanup completed animations\r\n\t        var i = animations.length;\r\n\t        while (i--)\r\n\t            if (animations[i].isStopped)\r\n\t                animations.splice(i, 1);\r\n\t        this.lastTickTime = now;\r\n\t    };\r\n\t    AnimationManager.prototype.hasActiveAnimations = function () {\r\n\t        return this.animations.length > 0;\r\n\t    };\r\n\t    return AnimationManager;\r\n\t}());\r\n\texports.AnimationManager = AnimationManager;\r\n\tvar Animation = (function () {\r\n\t    function Animation(animationManager, time, createdTime, easing) {\r\n\t        if (easing === void 0) { easing = Easing_1.EASING.Quadratic.Out; }\r\n\t        this.animationManager = animationManager;\r\n\t        this.time = time;\r\n\t        this.createdTime = createdTime;\r\n\t        this.easing = easing;\r\n\t        this.progress = 0;\r\n\t        this.delay = 0;\r\n\t        this.isFinished = false;\r\n\t        this.isStopped = false;\r\n\t        this.startTime = createdTime;\r\n\t    }\r\n\t    Animation.prototype.tick = function (now) {\r\n\t        if (!this.isStopped) {\r\n\t            var progress = this.time > 0 ? ((now - this.startTime) / this.time) : 1;\r\n\t            this.setProgress(progress);\r\n\t        }\r\n\t    };\r\n\t    Animation.prototype.from = function (sourceObj) {\r\n\t        if (typeof sourceObj == 'object') {\r\n\t            this.sourceObj = sourceObj;\r\n\t            this.initialObj = {};\r\n\t            var sourceIteralable = sourceObj;\r\n\t            for (var key in sourceIteralable)\r\n\t                if (typeof sourceIteralable[key] == 'number') {\r\n\t                    this.initialObj[key] = sourceIteralable[key];\r\n\t                }\r\n\t        }\r\n\t        else if (typeof sourceObj == 'number') {\r\n\t            this.sourceObj = sourceObj;\r\n\t            this.initialObj = sourceObj;\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.to = function (targetObj) {\r\n\t        this.targetObject = targetObj;\r\n\t        // clear unused fields\r\n\t        if (typeof this.initialObj == 'object') {\r\n\t            var initialIteralable = this.initialObj;\r\n\t            for (var key in this.targetObject) {\r\n\t                if (initialIteralable[key] == void 0)\r\n\t                    delete initialIteralable[key];\r\n\t            }\r\n\t            var targetIteralable = this.targetObject;\r\n\t            for (var key in initialIteralable) {\r\n\t                if (targetIteralable[key] == void 0)\r\n\t                    delete initialIteralable[key];\r\n\t            }\r\n\t        }\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.onTick = function (onTickCb) {\r\n\t        this.onTickCb = onTickCb;\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.then = function (onFinishCb) {\r\n\t        this.onFinishCb = onFinishCb;\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.stop = function () {\r\n\t        this.isStopped = true;\r\n\t    };\r\n\t    Animation.prototype.completeAndStop = function () {\r\n\t        this.setProgress(1);\r\n\t    };\r\n\t    Animation.prototype.withDelay = function (delay) {\r\n\t        this.delay = delay;\r\n\t        this.startTime = this.createdTime + delay;\r\n\t        return this;\r\n\t    };\r\n\t    Animation.prototype.setProgress = function (progress) {\r\n\t        if (progress < 0)\r\n\t            return;\r\n\t        progress = Math.min(progress, 1);\r\n\t        this.progress = progress;\r\n\t        var k = this.easing(progress);\r\n\t        if (typeof this.sourceObj == 'number') {\r\n\t            var initialVal = this.initialObj;\r\n\t            var targetVal = this.targetObject;\r\n\t            this.sourceObj = (initialVal + (targetVal - initialVal) * k);\r\n\t        }\r\n\t        else if (this.sourceObj && this.targetObject) {\r\n\t            for (var key in this.initialObj) {\r\n\t                var initialVal = this.initialObj[key];\r\n\t                var targetVal = this.targetObject[key];\r\n\t                this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\r\n\t            }\r\n\t        }\r\n\t        if (progress == 1) {\r\n\t            this.isStopped = true;\r\n\t            this.isFinished = true;\r\n\t        }\r\n\t        if (this.onTickCb)\r\n\t            this.onTickCb(this.sourceObj, progress, k, this);\r\n\t        if (progress == 1 && this.onFinishCb)\r\n\t            this.onFinishCb(this.sourceObj, this);\r\n\t    };\r\n\t    return Animation;\r\n\t}());\r\n\texports.Animation = Animation;\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Easing from tween.js lib https://github.com/tweenjs/tween.js\r\n\t **/\r\n\texports.EASING = {\r\n\t    Linear: {\r\n\t        None: function (k) {\r\n\t            return k;\r\n\t        }\r\n\t    },\r\n\t    Quadratic: {\r\n\t        In: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        }\r\n\t    },\r\n\t    Cubic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Quartic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        }\r\n\t    },\r\n\t    Quintic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Sinusoidal: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        }\r\n\t    },\r\n\t    Exponential: {\r\n\t        In: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        }\r\n\t    },\r\n\t    Circular: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        }\r\n\t    },\r\n\t    Elastic: {\r\n\t        In: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            k *= 2;\r\n\t            if (k < 1) {\r\n\t                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t            }\r\n\t            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\t        }\r\n\t    },\r\n\t    Back: {\r\n\t        In: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        }\r\n\t    },\r\n\t    Bounce: {\r\n\t        In: function (k) {\r\n\t            return 1 - exports.EASING.Bounce.Out(1 - k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return exports.EASING.Bounce.In(k * 2) * 0.5;\r\n\t            }\r\n\t            return exports.EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (AXIS_RANGE_TYPE) {\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\"; // TODO: AXIS_RANGE_TYPE.ALL\r\n\t})(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\r\n\tvar AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\r\n\t;\r\n\t(function (AXIS_TYPE) {\r\n\t    AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\r\n\t    AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\r\n\t})(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\r\n\tvar AXIS_TYPE = exports.AXIS_TYPE;\r\n\t(function (AXIS_DATA_TYPE) {\r\n\t    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\r\n\t    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\r\n\t})(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\r\n\tvar AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\r\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * base class for all widgets\r\n\t * each widget must have widgetName static property\r\n\t */\r\n\tvar ChartWidget = (function () {\r\n\t    function ChartWidget() {\r\n\t        this.unbindList = [];\r\n\t    }\r\n\t    ChartWidget.prototype.setupChart = function (chart) {\r\n\t        this.chart = chart;\r\n\t    };\r\n\t    ChartWidget.prototype.bindEvent = function () {\r\n\t        var args = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            args[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        var unbindList = [];\r\n\t        if (!Array.isArray(args[0])) {\r\n\t            unbindList.push(args[0]);\r\n\t        }\r\n\t        else {\r\n\t            unbindList.push.apply(unbindList, (args));\r\n\t        }\r\n\t        (_a = this.unbindList).push.apply(_a, unbindList);\r\n\t        var _a;\r\n\t    };\r\n\t    ChartWidget.prototype.unbindEvents = function () {\r\n\t        this.unbindList.forEach(function (unbindEvent) { return unbindEvent(); });\r\n\t        this.unbindList.length = 0;\r\n\t    };\r\n\t    ChartWidget.widgetName = '';\r\n\t    return ChartWidget;\r\n\t}());\r\n\texports.ChartWidget = ChartWidget;\r\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Widget_1 = __webpack_require__(28);\r\n\tvar GridWidget_1 = __webpack_require__(30);\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar interfaces_1 = __webpack_require__(27);\r\n\tvar Color_1 = __webpack_require__(31);\r\n\t/**\r\n\t * widget for drawing axis\r\n\t */\r\n\tvar AxisWidget = (function (_super) {\r\n\t    __extends(AxisWidget, _super);\r\n\t    function AxisWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isDestroyed = false;\r\n\t    }\r\n\t    AxisWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisXObject = new Object3D();\r\n\t        this.axisYObject = new Object3D();\r\n\t        this.object3D.add(this.axisXObject);\r\n\t        this.object3D.add(this.axisYObject);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t        // canvas drawing is expensive operation, so when we scroll, redraw must be called only once per second\r\n\t        this.updateAxisXRequest = Utils_1.Utils.throttle(function () { return _this.updateAxis(interfaces_1.AXIS_TYPE.X); }, 1000);\r\n\t        this.onScrollChange(this.chart.interpolatedViewport.params.scrollX, this.chart.interpolatedViewport.params.scrollY);\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chart;\r\n\t        this.bindEvent(state.interpolatedViewport.onInterpolation(function (options) {\r\n\t            _this.onScrollChange(options.scrollX, options.scrollY);\r\n\t        }), state.interpolatedViewport.onZoomInterpolation(function (options) { _this.onZoomFrame(options); }), state.onDestroy(function () { return _this.onDestroy(); }), state.onResize(function () { return _this.onResize(); }));\r\n\t    };\r\n\t    AxisWidget.prototype.onDestroy = function () {\r\n\t        this.isDestroyed = true;\r\n\t        this.unbindEvents();\r\n\t    };\r\n\t    AxisWidget.prototype.onScrollChange = function (x, y) {\r\n\t        if (y != void 0) {\r\n\t            this.axisYObject.position.y = y;\r\n\t            this.axisXObject.position.y = y;\r\n\t        }\r\n\t        if (x != void 0) {\r\n\t            this.axisYObject.position.x = x;\r\n\t            this.updateAxisXRequest();\r\n\t        }\r\n\t    };\r\n\t    AxisWidget.prototype.onResize = function () {\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t    };\r\n\t    AxisWidget.prototype.setupAxis = function (orientation) {\r\n\t        var _this = this;\r\n\t        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\r\n\t        var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\r\n\t        var canvasWidth = 0, canvasHeight = 0;\r\n\t        var axisOptions;\r\n\t        // clean meshes\r\n\t        if (isXAxis) {\r\n\t            this.axisXObject.traverse(function (obj) { return _this.axisXObject.remove(obj); });\r\n\t            canvasWidth = visibleWidth * 3;\r\n\t            canvasHeight = 50;\r\n\t            axisOptions = this.chart.state.xAxis;\r\n\t        }\r\n\t        else {\r\n\t            this.axisYObject.traverse(function (obj) { return _this.axisYObject.remove(obj); });\r\n\t            canvasWidth = 50;\r\n\t            canvasHeight = visibleHeight * 3;\r\n\t            axisOptions = this.chart.state.yAxis;\r\n\t        }\r\n\t        var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function (ctx) {\r\n\t            var color = new Color_1.Color(axisOptions.color);\r\n\t            ctx.beginPath();\r\n\t            ctx.font = _this.chart.state.font.m;\r\n\t            ctx.fillStyle = color.rgbaStr;\r\n\t            ctx.strokeStyle = color.rgbaStr;\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide });\r\n\t        material.transparent = true;\r\n\t        //var material = new THREE.MeshBasicMaterial( {color: 0xFF00FF, side: THREE.DoubleSide} );\r\n\t        var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\r\n\t        if (isXAxis) {\r\n\t            axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\r\n\t            this.axisXObject.add(axisMesh);\r\n\t        }\r\n\t        else {\r\n\t            axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\r\n\t            this.axisYObject.add(axisMesh);\r\n\t        }\r\n\t        this.updateAxis(orientation);\r\n\t    };\r\n\t    AxisWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisWidget.prototype.updateAxis = function (orientation) {\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\r\n\t        var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\r\n\t        var _b = this.chart.interpolatedViewport.params, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\r\n\t        var axisOptions;\r\n\t        var axisMesh;\r\n\t        var axisGridParams;\r\n\t        if (isXAxis) {\r\n\t            axisMesh = this.axisXObject.children[0];\r\n\t            axisOptions = this.chart.state.xAxis;\r\n\t            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\r\n\t        }\r\n\t        else {\r\n\t            axisMesh = this.axisYObject.children[0];\r\n\t            axisOptions = this.chart.state.yAxis;\r\n\t            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\r\n\t        }\r\n\t        var geometry = axisMesh.geometry;\r\n\t        var canvasWidth = geometry.parameters.width;\r\n\t        var canvasHeight = geometry.parameters.height;\r\n\t        if (isXAxis) {\r\n\t            axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\r\n\t        }\r\n\t        var texture = axisMesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\t        // TODO: draw text and lines in different loops\r\n\t        var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\r\n\t        var startVal = axisGridParams.start - edgeOffset;\r\n\t        var endVal = axisGridParams.end + edgeOffset;\r\n\t        ctx.beginPath();\r\n\t        for (var val = startVal; val <= endVal; val += axisGridParams.step) {\r\n\t            var displayedValue = '';\r\n\t            if (isXAxis) {\r\n\t                var pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\r\n\t                ctx.textAlign = \"center\";\r\n\t                // uncomment for dots\r\n\t                // ctx.moveTo(pxVal + 0.5, canvasHeight);\r\n\t                // ctx.lineTo(pxVal + 0.5, canvasHeight - 5);\r\n\t                if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\r\n\t                    displayedValue = AxisWidget.getDateStr(val, axisGridParams);\r\n\t                }\r\n\t                else {\r\n\t                    displayedValue = Number(val.toFixed(14)).toString();\r\n\t                }\r\n\t                ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\r\n\t            }\r\n\t            else {\r\n\t                var pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\r\n\t                ctx.textAlign = \"right\";\r\n\t                // uncomment for dots\r\n\t                // ctx.moveTo(canvasWidth, pxVal + 0.5);\r\n\t                // ctx.lineTo(canvasWidth - 5, pxVal + 0.5);\r\n\t                displayedValue = Number(val.toFixed(14)).toString();\r\n\t                ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\r\n\t            }\r\n\t            ctx.stroke();\r\n\t        }\r\n\t        // uncomment to preview canvas borders\r\n\t        // ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n\t        ctx.stroke();\r\n\t        ctx.closePath();\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisWidget.prototype.onZoomFrame = function (options) {\r\n\t        if (options.zoomX) {\r\n\t            this.updateAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        }\r\n\t        if (options.zoomY) {\r\n\t            this.updateAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t        }\r\n\t    };\r\n\t    // private temporaryHideAxis(orientation: AXIS_TYPE) {\r\n\t    // \tvar isXAxis = orientation == AXIS_TYPE.X;\r\n\t    // \tvar timeoutId = setTimeout(() => {\r\n\t    // \t\t\tthis.showAxis(orientation);\r\n\t    // \t}, 200);\r\n\t    //\r\n\t    // \tif (isXAxis) {\r\n\t    // \t\t(this.axisXObject.children[0] as Mesh).material.opacity = 0;\r\n\t    // \t\tclearTimeout(this.showAxisXTimeout);\r\n\t    // \t\tthis.showAxisXTimeout =\ttimeoutId;\r\n\t    // \t} else {\r\n\t    // \t\tclearTimeout(this.showAxisYTimeout);\r\n\t    // \t\t(this.axisYObject.children[0] as Mesh).material.opacity = 0;\r\n\t    // \t\tthis.showAxisYTimeout = timeoutId;\r\n\t    // \t}\r\n\t    // }\r\n\t    // private showAxis(orientation: AXIS_TYPE) {\r\n\t    // \tvar isXAxis = orientation == AXIS_TYPE.X;\r\n\t    // \tvar material: MeshBasicMaterial;\r\n\t    // \tif (isXAxis) {\r\n\t    // \t\tmaterial = (this.axisXObject.children[0] as Mesh).material as MeshBasicMaterial;\r\n\t    // \t} else {\r\n\t    // \t\tmaterial = (this.axisYObject.children[0] as Mesh).material as MeshBasicMaterial;\r\n\t    // \t}\r\n\t    // \tthis.updateAxis(orientation);\r\n\t    // \tTweenLite.to(material, 0.3, {opacity: 1});\r\n\t    // }\r\n\t    AxisWidget.getDateStr = function (timestamp, gridParams) {\r\n\t        var sec = 1000;\r\n\t        var min = sec * 60;\r\n\t        var hour = min * 60;\r\n\t        var day = hour * 60;\r\n\t        var step = gridParams.step;\r\n\t        var d = new Date(timestamp);\r\n\t        var tf = function (num) { return Utils_1.Utils.toFixed(num, 2); };\r\n\t        return tf(d.getHours()) + ':' + tf(d.getMinutes()) + ':' + tf(d.getSeconds());\r\n\t    };\r\n\t    AxisWidget.widgetName = 'Axis';\r\n\t    return AxisWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.AxisWidget = AxisWidget;\r\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Widget_1 = __webpack_require__(28);\r\n\tvar LineSegments = THREE.LineSegments;\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar Color_1 = __webpack_require__(31);\r\n\t/**\r\n\t * widget for drawing state grid\r\n\t */\r\n\tvar GridWidget = (function (_super) {\r\n\t    __extends(GridWidget, _super);\r\n\t    function GridWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isDestroyed = false;\r\n\t    }\r\n\t    GridWidget.prototype.onReadyHandler = function () {\r\n\t        var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\r\n\t        this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\r\n\t        this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\r\n\t        this.initGrid();\r\n\t        this.updateGrid();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    GridWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        // grid is bigger then interpolatedViewport, so it's no need to update it on each scroll event\r\n\t        var updateGridThrottled = Utils_1.Utils.throttle(function () { return _this.updateGrid(); }, 1000);\r\n\t        this.bindEvent(this.chart.onScroll(function () { return updateGridThrottled(); }), this.chart.interpolatedViewport.onZoomInterpolation(function (options) {\r\n\t            updateGridThrottled();\r\n\t            _this.onZoomFrame(options);\r\n\t        }), this.chart.onDestroy(function () {\r\n\t            _this.isDestroyed = true;\r\n\t            _this.unbindEvents();\r\n\t        }), this.chart.onResize(function () {\r\n\t            _this.updateGrid();\r\n\t        }));\r\n\t    };\r\n\t    GridWidget.prototype.initGrid = function () {\r\n\t        var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\r\n\t        var geometry = new THREE.Geometry();\r\n\t        var material = new THREE.LineBasicMaterial({ linewidth: 1, color: color.value, opacity: color.a, transparent: true });\r\n\t        var xLinesCount = this.gridSizeH;\r\n\t        var yLinesCount = this.gridSizeV;\r\n\t        while (xLinesCount--)\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t        while (yLinesCount--)\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t        this.lineSegments = new LineSegments(geometry, material);\r\n\t        this.lineSegments.position.setZ(-1);\r\n\t        this.lineSegments.frustumCulled = false;\r\n\t    };\r\n\t    GridWidget.prototype.updateGrid = function () {\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\r\n\t        var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\r\n\t        var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\r\n\t        var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\r\n\t        var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\r\n\t        var gridScrollXVal = scrollXInSegments * axisXGrid.step;\r\n\t        var gridScrollYVal = scrollYInSegments * axisYGrid.step;\r\n\t        var startXVal = axisXGrid.start + gridScrollXVal;\r\n\t        var startYVal = axisYGrid.start + gridScrollYVal;\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        var vertices = geometry.vertices;\r\n\t        var lineInd = 0;\r\n\t        for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\r\n\t            var value = startXVal + i * axisXGrid.step;\r\n\t            var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\r\n\t            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\r\n\t            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\r\n\t            lineInd++;\r\n\t        }\r\n\t        for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\r\n\t            var value = startYVal + i * axisYGrid.step;\r\n\t            var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\r\n\t            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\r\n\t            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\r\n\t            lineInd++;\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t        this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\r\n\t    };\r\n\t    GridWidget.prototype.getHorizontalLineSegment = function (yVal, scrollXVal, scrollYVal) {\r\n\t        var chartState = this.chart;\r\n\t        var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\r\n\t        var widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\r\n\t        return [\r\n\t            new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0),\r\n\t            new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0)\r\n\t        ];\r\n\t    };\r\n\t    GridWidget.prototype.getVerticalLineSegment = function (xVal, scrollXVal, scrollYVal) {\r\n\t        var chart = this.chart;\r\n\t        var localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\r\n\t        var heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\r\n\t        return [\r\n\t            new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0),\r\n\t            new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0)\r\n\t        ];\r\n\t    };\r\n\t    GridWidget.prototype.onZoomFrame = function (options) {\r\n\t        var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\r\n\t        if (options.zoomX)\r\n\t            this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\r\n\t    };\r\n\t    // TODO: move this code to core\r\n\t    GridWidget.getGridParamsForAxis = function (axisOptions, axisWidth, zoom) {\r\n\t        var axisRange = axisOptions.range;\r\n\t        var from = axisRange.from;\r\n\t        var to = axisRange.to;\r\n\t        var axisLength = to - from;\r\n\t        var gridStep = 0;\r\n\t        var gridStepInPixels = 0;\r\n\t        var minGridStepInPixels = axisOptions.grid.minSizePx;\r\n\t        var axisLengthStr = String(axisLength);\r\n\t        var axisLengthPointPosition = axisLengthStr.indexOf('.');\r\n\t        var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\r\n\t        var gridStepFound = false;\r\n\t        var digitPos = 0;\r\n\t        while (!gridStepFound) {\r\n\t            var power = intPartLength - digitPos - 1;\r\n\t            var multiplier = (Math.pow(10, power) || 1);\r\n\t            var dividers = [1, 2, 5];\r\n\t            for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\r\n\t                var nextGridStep = multiplier / dividers[dividerInd];\r\n\t                var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\r\n\t                if (nextGridStepInPixels >= minGridStepInPixels) {\r\n\t                    gridStep = nextGridStep;\r\n\t                    gridStepInPixels = nextGridStepInPixels;\r\n\t                }\r\n\t                else {\r\n\t                    gridStepFound = true;\r\n\t                    if (gridStep === 0) {\r\n\t                        gridStep = nextGridStep;\r\n\t                        gridStepInPixels = nextGridStepInPixels;\r\n\t                    }\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (!gridStepFound)\r\n\t                digitPos++;\r\n\t        }\r\n\t        var gridStart = Math.floor(from / gridStep) * gridStep;\r\n\t        var gridEnd = Math.floor(to / gridStep) * gridStep;\r\n\t        return {\r\n\t            start: gridStart,\r\n\t            end: gridEnd,\r\n\t            step: gridStep,\r\n\t            stepInPx: gridStepInPixels,\r\n\t            length: gridEnd - gridStart,\r\n\t            segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\r\n\t        };\r\n\t    };\r\n\t    GridWidget.prototype.getObject3D = function () {\r\n\t        return this.lineSegments;\r\n\t    };\r\n\t    GridWidget.widgetName = 'Grid';\r\n\t    return GridWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.GridWidget = GridWidget;\r\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Color = (function () {\r\n\t    function Color(color) {\r\n\t        this.set(color);\r\n\t    }\r\n\t    /**!\r\n\t     * @preserve $.parseColor\r\n\t     * Copyright 2011 THEtheChad Elliott\r\n\t     * Released under the MIT and GPL licenses.\r\n\t     */\r\n\t    /**\r\n\t     * Parse hex/rgb{a} color syntax.\r\n\t     * @input string\r\n\t     * @returns array [r,g,b{,o}]\r\n\t     */\r\n\t    Color.parseColor = function (color) {\r\n\t        var cache, p = parseInt // Use p as a byte saving reference to parseInt\r\n\t        , color = color.replace(/\\s\\s*/g, ''); //var\r\n\t        // Checks for 6 digit hex and converts string to integer\r\n\t        if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\r\n\t        else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\r\n\t            cache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\r\n\t        else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\r\n\t        else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3], +cache[4]];\r\n\t        else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3]];\r\n\t        else\r\n\t            throw Error(color + ' is not supported by parseColor');\r\n\t        // Performs RGBA conversion by default\r\n\t        isNaN(cache[3]) && (cache[3] = 1);\r\n\t        return cache;\r\n\t        // Adds or removes 4th xVal based on rgba support\r\n\t        // Support is flipped twice to prevent erros if\r\n\t        // it's not defined\r\n\t        //return cache.slice(0,3 + !!$.support.rgba);\r\n\t    };\r\n\t    Color.numberToHexStr = function (value) {\r\n\t        var result = value.toString(16);\r\n\t        return '#' + '0'.repeat(6 - result.length) + result;\r\n\t    };\r\n\t    Color.prototype.set = function (color) {\r\n\t        if (typeof color == 'number')\r\n\t            color = Color.numberToHexStr(color);\r\n\t        var colorStr = color;\r\n\t        var rgba = Color.parseColor(colorStr);\r\n\t        this.r = rgba[0];\r\n\t        this.g = rgba[1];\r\n\t        this.b = rgba[2];\r\n\t        this.a = rgba[3];\r\n\t        this.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\r\n\t        this.hexStr = Color.numberToHexStr(this.value);\r\n\t        this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\r\n\t    };\r\n\t    Color.prototype.getTransparent = function (opacity) {\r\n\t        return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\r\n\t    };\r\n\t    return Color;\r\n\t}());\r\n\texports.Color = Color;\r\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar TrendsWidget_1 = __webpack_require__(33);\r\n\tvar Color_1 = __webpack_require__(31);\r\n\tvar TrendsGradientWidget = (function (_super) {\r\n\t    __extends(TrendsGradientWidget, _super);\r\n\t    function TrendsGradientWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsGradientWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendGradient;\r\n\t    };\r\n\t    TrendsGradientWidget.widgetName = \"TrendsGradient\";\r\n\t    return TrendsGradientWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsGradientWidget = TrendsGradientWidget;\r\n\tvar TrendGradient = (function (_super) {\r\n\t    __extends(TrendGradient, _super);\r\n\t    function TrendGradient(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        this.visibleSegmentsCnt = 0;\r\n\t        this.trend = chartState.trendsManager.getTrend(trendName);\r\n\t        this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\r\n\t        this.initGradient();\r\n\t        this.updateSegments();\r\n\t    }\r\n\t    TrendGradient.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBackground;\r\n\t    };\r\n\t    TrendGradient.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            // TODO: optimize updateSegments for onDisplayedRangeChanged\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.chart.onZoom(function () {\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t    };\r\n\t    TrendGradient.prototype.getObject3D = function () {\r\n\t        return this.gradient;\r\n\t    };\r\n\t    TrendGradient.prototype.initGradient = function () {\r\n\t        var geometry = new Geometry();\r\n\t        for (var i = 0; i < this.segmentsIds.length; i++) {\r\n\t            geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\r\n\t            var ind = i * 4;\r\n\t            // gradient segment scheme\r\n\t            //\r\n\t            // vert0 +---+ vert3\r\n\t            //       |\\  |\r\n\t            // face1 | \\ | face2\r\n\t            // \t     |  \\|\r\n\t            // vert1 +---+ vert2\r\n\t            geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\r\n\t        }\r\n\t        var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\r\n\t        this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color: color.value, transparent: true, opacity: color.a }));\r\n\t        var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.gradient.frustumCulled = false;\r\n\t    };\r\n\t    TrendGradient.prototype.onZoomFrame = function (options) {\r\n\t        var state = this.chart.state;\r\n\t        var scaleXFactor = state.xAxis.range.scaleFactor;\r\n\t        var scaleYFactor = state.yAxis.range.scaleFactor;\r\n\t        var currentScale = this.gradient.scale;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendGradient.prototype.onSegmentsAnimate = function (trendSegmentsManager) {\r\n\t        var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\r\n\t        for (var i = 0; i < this.visibleSegmentsCnt; i++) {\r\n\t            var segmentId = this.segmentsIds[i];\r\n\t            if (!animatedSegmentsIds.includes(segmentId))\r\n\t                continue;\r\n\t            this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\r\n\t        }\r\n\t        this.gradient.geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendGradient.prototype.updateSegments = function () {\r\n\t        var geometry = this.gradient.geometry;\r\n\t        var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\r\n\t        var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\r\n\t        this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\r\n\t        var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\r\n\t        if (segmentsToProcessCnt > this.segmentsIds.length) {\r\n\t            Utils_1.Utils.error(TrendsGradientWidget.widgetName + ': MAX_SEGMENTS reached');\r\n\t        }\r\n\t        // setup visible segments and collapse invisible\r\n\t        for (var i = 0; i < segmentsToProcessCnt; i++) {\r\n\t            if (segmentInd <= lastDisplayedSegmentInd) {\r\n\t                var segment = trendSegments[segmentInd];\r\n\t                this.setupSegmentVertices(i, segment.currentAnimationState);\r\n\t                this.segmentsIds[i] = segment.id;\r\n\t                segmentInd++;\r\n\t            }\r\n\t            else {\r\n\t                this.setupSegmentVertices(i);\r\n\t            }\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    /**\r\n\t     * setup gradient segment by segmentState\r\n\t     * if segmentState is undefined, then collapse vertices to 0,0,0\r\n\t     */\r\n\t    TrendGradient.prototype.setupSegmentVertices = function (segmentInd, segmentState) {\r\n\t        var gradientSegmentInd = segmentInd * 4;\r\n\t        var vertices = this.gradient.geometry.vertices;\r\n\t        var topLeft = vertices[gradientSegmentInd];\r\n\t        var bottomLeft = vertices[gradientSegmentInd + 1];\r\n\t        var bottomRight = vertices[gradientSegmentInd + 2];\r\n\t        var topRight = vertices[gradientSegmentInd + 3];\r\n\t        var screenHeightVal = Math.max(this.chart.viewport.pxToValByYAxis(this.chart.state.height), this.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height));\r\n\t        if (segmentState) {\r\n\t            var startX = this.toLocalX(segmentState.startXVal);\r\n\t            var startY = this.toLocalY(segmentState.startYVal);\r\n\t            var endX = this.toLocalX(segmentState.endXVal);\r\n\t            var endY = this.toLocalY(segmentState.endYVal);\r\n\t            topLeft.set(startX, startY, 0);\r\n\t            topRight.set(endX, endY, 0);\r\n\t            bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\r\n\t            bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\r\n\t        }\r\n\t        else {\r\n\t            topLeft.set(0, 0, 0);\r\n\t            topRight.set(0, 0, 0);\r\n\t            bottomLeft.set(0, 0, 0);\r\n\t            bottomRight.set(0, 0, 0);\r\n\t        }\r\n\t    };\r\n\t    TrendGradient.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chart.state.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendGradient.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chart.state.yAxis.range.zeroVal;\r\n\t    };\r\n\t    return TrendGradient;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendGradient = TrendGradient;\r\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Widget_1 = __webpack_require__(28);\r\n\tvar Object3D = THREE.Object3D;\r\n\t/**\r\n\t * abstract manager class for all trends widgets\r\n\t */\r\n\tvar TrendsWidget = (function (_super) {\r\n\t    __extends(TrendsWidget, _super);\r\n\t    function TrendsWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.widgets = {};\r\n\t    }\r\n\t    TrendsWidget.prototype.onReadyHandler = function () {\r\n\t        this.object3D = new Object3D();\r\n\t        this.onTrendsChange();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chart;\r\n\t        state.onTrendsChange(function () { return _this.onTrendsChange(); });\r\n\t        state.onTrendChange(function (trendName, changedOptions, newData) {\r\n\t            _this.onTrendChange(trendName, changedOptions, newData);\r\n\t        });\r\n\t    };\r\n\t    TrendsWidget.prototype.onTrendsChange = function () {\r\n\t        var trendsOptions = this.chart.state.trends;\r\n\t        var TrendWidgetClass = this.getTrendWidgetClass();\r\n\t        for (var trendName in trendsOptions) {\r\n\t            var trendOptions = trendsOptions[trendName];\r\n\t            var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\r\n\t            if (widgetCanBeEnabled && !this.widgets[trendName]) {\r\n\t                this.createTrendWidget(trendName);\r\n\t            }\r\n\t            else if (!widgetCanBeEnabled && this.widgets[trendName]) {\r\n\t                this.destroyTrendWidget(trendName);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TrendsWidget.prototype.onTrendChange = function (trendName, changedOptions, newData) {\r\n\t        var widget = this.widgets[trendName];\r\n\t        if (!widget)\r\n\t            return;\r\n\t        widget.onTrendChange(changedOptions);\r\n\t        if (newData) {\r\n\t            var data = this.chart.getTrend(trendName).getData();\r\n\t            var isAppend = (!data.length || data[0].xVal < newData[0].xVal);\r\n\t            isAppend ? widget.appendData(newData) : widget.prependData(newData);\r\n\t        }\r\n\t    };\r\n\t    TrendsWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendsWidget.prototype.createTrendWidget = function (trendName) {\r\n\t        var WidgetConstructor = this.getTrendWidgetClass();\r\n\t        var widget = new WidgetConstructor(this.chart, trendName);\r\n\t        this.widgets[trendName] = widget;\r\n\t        var widgetObject = widget.getObject3D();\r\n\t        widgetObject.name = trendName;\r\n\t        this.object3D.add(widget.getObject3D());\r\n\t    };\r\n\t    TrendsWidget.prototype.destroyTrendWidget = function (trendName) {\r\n\t        this.widgets[trendName].onDestroy();\r\n\t        delete this.widgets[trendName];\r\n\t        var widgetObject = this.object3D.getObjectByName(trendName);\r\n\t        this.object3D.remove(widgetObject);\r\n\t    };\r\n\t    return TrendsWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.TrendsWidget = TrendsWidget;\r\n\t/**\r\n\t * based class for all trends widgets\r\n\t */\r\n\tvar TrendWidget = (function () {\r\n\t    function TrendWidget(chart, trendName) {\r\n\t        this.chart = chart;\r\n\t        this.trendName = trendName;\r\n\t        this.unbindList = [];\r\n\t        this.trend = chart.trendsManager.getTrend(trendName);\r\n\t        this.chart = chart;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendWidget.widgetIsEnabled = function (trendOptions, chart) {\r\n\t        return trendOptions.enabled;\r\n\t    };\r\n\t    TrendWidget.prototype.appendData = function (newData) { };\r\n\t    ;\r\n\t    TrendWidget.prototype.prependData = function (newData) { };\r\n\t    ;\r\n\t    TrendWidget.prototype.onTrendChange = function (changedOptions) { };\r\n\t    TrendWidget.prototype.onDestroy = function () {\r\n\t        for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\r\n\t            var unsubscriber = _a[_i];\r\n\t            unsubscriber();\r\n\t        }\r\n\t    };\r\n\t    TrendWidget.prototype.onSegmentsAnimate = function (segments) {\r\n\t    };\r\n\t    TrendWidget.prototype.onZoomFrame = function (options) {\r\n\t    };\r\n\t    TrendWidget.prototype.onTransformationFrame = function (options) {\r\n\t    };\r\n\t    TrendWidget.prototype.onZoom = function () {\r\n\t    };\r\n\t    TrendWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function (trendPoints) { return _this.onSegmentsAnimate(trendPoints); }));\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function (options) { return _this.onTransformationFrame(options); }));\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(function (options) { return _this.onZoomFrame(options); }));\r\n\t        this.bindEvent(this.chart.onZoom(function () { return _this.onZoom(); }));\r\n\t    };\r\n\t    ;\r\n\t    TrendWidget.prototype.bindEvent = function (unbind) {\r\n\t        this.unbindList.push(unbind);\r\n\t    };\r\n\t    return TrendWidget;\r\n\t}());\r\n\texports.TrendWidget = TrendWidget;\r\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar LineBasicMaterial = THREE.LineBasicMaterial;\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar TrendsWidget_1 = __webpack_require__(33);\r\n\tvar LineSegments = THREE.LineSegments;\r\n\tvar Trend_1 = __webpack_require__(20);\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\t/**\r\n\t * widget for drawing trends lines\r\n\t */\r\n\tvar TrendsLineWidget = (function (_super) {\r\n\t    __extends(TrendsLineWidget, _super);\r\n\t    function TrendsLineWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLineWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLine;\r\n\t    };\r\n\t    TrendsLineWidget.widgetName = \"TrendsLine\";\r\n\t    return TrendsLineWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsLineWidget = TrendsLineWidget;\r\n\tvar TrendLine = (function (_super) {\r\n\t    __extends(TrendLine, _super);\r\n\t    function TrendLine(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        // contains indexes of free segments\r\n\t        this.freeSegmentsInds = [];\r\n\t        // contains segments to display\r\n\t        this.displayedSegments = {};\r\n\t        var options = this.trend.getOptions();\r\n\t        this.material = new LineBasicMaterial({ color: options.lineColor, linewidth: options.lineWidth });\r\n\t        this.initLine();\r\n\t    }\r\n\t    TrendLine.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendLine.prototype.getObject3D = function () {\r\n\t        return this.lineSegments;\r\n\t    };\r\n\t    TrendLine.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.destroySegments();\r\n\t            _this.setupSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            _this.setupSegments();\r\n\t        }));\r\n\t    };\r\n\t    TrendLine.prototype.initLine = function () {\r\n\t        var geometry = new Geometry();\r\n\t        var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.lineSegments = new LineSegments(geometry, this.material);\r\n\t        this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.lineSegments.frustumCulled = false;\r\n\t        for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t            this.freeSegmentsInds.push(i);\r\n\t        }\r\n\t        this.vertices = geometry.vertices;\r\n\t        this.setupSegments();\r\n\t    };\r\n\t    TrendLine.prototype.setupSegments = function () {\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\r\n\t        for (var segmentId in this.displayedSegments) {\r\n\t            var lineSegment = this.displayedSegments[segmentId];\r\n\t            var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\r\n\t            var segmentIsNotDisplayed = (segment_1.startXVal < firstDisplayedSegment.startXVal ||\r\n\t                segment_1.endXVal > lastDisplayedSegment.endXVal);\r\n\t            if (segmentIsNotDisplayed)\r\n\t                this.destroySegment(Number(segmentId));\r\n\t        }\r\n\t        var segment = firstDisplayedSegment;\r\n\t        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\r\n\t            this.setupSegment(segment.id, segment.currentAnimationState);\r\n\t            segment = segment.getNext();\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendLine.prototype.setupSegment = function (segmentId, segmentState) {\r\n\t        var lineSegment = this.displayedSegments[segmentId];\r\n\t        if (!lineSegment) {\r\n\t            if (this.freeSegmentsInds.length == 0)\r\n\t                Utils_1.Utils.error('Max allocated segments reached');\r\n\t            var ind = this.freeSegmentsInds.pop();\r\n\t            lineSegment = this.displayedSegments[segmentId] = { segmentId: segmentId, ind: ind };\r\n\t        }\r\n\t        var segmentInd = lineSegment.ind;\r\n\t        var lineStartVertex = this.vertices[segmentInd * 2];\r\n\t        var lineEndVertex = this.vertices[segmentInd * 2 + 1];\r\n\t        lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\r\n\t        lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\r\n\t    };\r\n\t    TrendLine.prototype.destroySegments = function () {\r\n\t        for (var segmentId in this.displayedSegments)\r\n\t            this.destroySegment(Number(segmentId));\r\n\t    };\r\n\t    TrendLine.prototype.destroySegment = function (segmentId) {\r\n\t        var lineSegment = this.displayedSegments[segmentId];\r\n\t        var lineStartVertex = this.vertices[lineSegment.ind * 2];\r\n\t        var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\r\n\t        lineStartVertex.set(0, 0, 0);\r\n\t        lineEndVertex.set(0, 0, 0);\r\n\t        delete this.displayedSegments[segmentId];\r\n\t        this.freeSegmentsInds.push(lineSegment.ind);\r\n\t    };\r\n\t    TrendLine.prototype.onZoomFrame = function (options) {\r\n\t        var currentScale = this.lineSegments.scale;\r\n\t        var state = this.chart.state;\r\n\t        var scaleXFactor = state.xAxis.range.scaleFactor;\r\n\t        var scaleYFactor = state.yAxis.range.scaleFactor;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendLine.prototype.onSegmentsAnimate = function (trendSegments) {\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\r\n\t            var segmentId = _a[_i];\r\n\t            if (!this.displayedSegments[segmentId])\r\n\t                continue;\r\n\t            this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chart.state.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chart.state.yAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalVec = function (vec) {\r\n\t        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\r\n\t    };\r\n\t    return TrendLine;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendLine = TrendLine;\r\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar TrendsWidget_1 = __webpack_require__(33);\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Line = THREE.Line;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar PlaneGeometry = THREE.PlaneGeometry;\r\n\tvar Trend_1 = __webpack_require__(20);\r\n\tvar LineBasicMaterial = THREE.LineBasicMaterial;\r\n\tvar RISE_COLOR = 0x2CAC40;\r\n\tvar FALL_COLOR = 0xEE5533;\r\n\tvar MARGIN_PERCENT = 0.3;\r\n\tvar MAX_CANDLES = 100;\r\n\t/**\r\n\t * widget for drawing trends candles\r\n\t */\r\n\tvar TrendsCandlesWidget = (function (_super) {\r\n\t    __extends(TrendsCandlesWidget, _super);\r\n\t    function TrendsCandlesWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsCandlesWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendCandlesWidget;\r\n\t    };\r\n\t    TrendsCandlesWidget.widgetName = \"TrendsCandles\";\r\n\t    return TrendsCandlesWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsCandlesWidget = TrendsCandlesWidget;\r\n\tvar TrendCandlesWidget = (function (_super) {\r\n\t    __extends(TrendCandlesWidget, _super);\r\n\t    function TrendCandlesWidget(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        // contains indexes of free candles\r\n\t        this.freeCandlesInds = [];\r\n\t        this.candlesPool = [];\r\n\t        this.candles = {};\r\n\t        this.initObject();\r\n\t    }\r\n\t    TrendCandlesWidget.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.destroyCandles();\r\n\t            _this.setupCandles();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            _this.setupCandles();\r\n\t        }));\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.initObject = function () {\r\n\t        var stateData = this.chart.state;\r\n\t        var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.scaleXFactor = scaleXFactor;\r\n\t        this.scaleYFactor = scaleYFactor;\r\n\t        this.object3D = new Object3D();\r\n\t        this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.object3D.frustumCulled = false;\r\n\t        for (var i = 0; i < MAX_CANDLES; i++)\r\n\t            this.freeCandlesInds.push(i);\r\n\t        this.setupCandles();\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.setupCandles = function () {\r\n\t        // remove invisible\r\n\t        var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\r\n\t        for (var segmentId in this.candles) {\r\n\t            var segment_1 = this.candles[segmentId].segment;\r\n\t            var segmentIsNotDisplayed = (segment_1.startXVal < firstDisplayedSegment.startXVal ||\r\n\t                segment_1.endXVal > lastDisplayedSegment.endXVal);\r\n\t            if (segmentIsNotDisplayed)\r\n\t                this.destroyCandle(Number(segmentId));\r\n\t        }\r\n\t        var segment = firstDisplayedSegment;\r\n\t        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\r\n\t            this.setupCandle(segment.id, segment.currentAnimationState);\r\n\t            segment = segment.getNext();\r\n\t        }\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.destroyCandles = function () {\r\n\t        for (var segmentId in this.candles)\r\n\t            this.destroyCandle(Number(segmentId));\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.destroyCandle = function (segmentId) {\r\n\t        var candle = this.candles[segmentId];\r\n\t        this.object3D.remove(candle.getObject3D());\r\n\t        delete this.candles[segmentId];\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.onZoomFrame = function (options) {\r\n\t        var currentScale = this.object3D.scale;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(this.scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(this.scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.onSegmentsAnimate = function (trendSegments) {\r\n\t        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\r\n\t            var segmentId = _a[_i];\r\n\t            if (!this.candles[segmentId])\r\n\t                continue;\r\n\t            var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\r\n\t            this.setupCandle(segmentId, segmentState);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * create or modify candle\r\n\t     */\r\n\t    TrendCandlesWidget.prototype.setupCandle = function (candleId, segmentState) {\r\n\t        var candleInd = candleId % MAX_CANDLES;\r\n\t        // get candle from candlesPool to avoid creating new Objects by performance reasons\r\n\t        var candle = this.candlesPool[candleInd];\r\n\t        if (!candle) {\r\n\t            candle = this.candlesPool[candleInd] = new CandleWidget();\r\n\t        }\r\n\t        if (!this.candles[candleId]) {\r\n\t            this.candles[candleId] = candle;\r\n\t            this.object3D.add(candle.getObject3D());\r\n\t        }\r\n\t        candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\r\n\t        candle.setSegment(segmentState);\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chart.state.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chart.state.yAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalVec = function (vec) {\r\n\t        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\r\n\t    };\r\n\t    return TrendCandlesWidget;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendCandlesWidget = TrendCandlesWidget;\r\n\tvar CandleWidget = (function () {\r\n\t    function CandleWidget() {\r\n\t        this.initObject();\r\n\t    }\r\n\t    CandleWidget.prototype.getObject3D = function () {\r\n\t        return this.rect;\r\n\t    };\r\n\t    CandleWidget.prototype.setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\r\n\t        // update rect\r\n\t        var geometry = this.rect.geometry;\r\n\t        var material = this.rect.material;\r\n\t        var width = segment.endXVal - segment.startXVal;\r\n\t        width -= width * MARGIN_PERCENT;\r\n\t        var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\r\n\t        var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\r\n\t        leftTop.set(-width / 2, height / 2, 0);\r\n\t        rightTop.set(width / 2, height / 2, 0);\r\n\t        leftBottom.set(-width / 2, -height / 2, 0);\r\n\t        rightBottom.set(width / 2, -height / 2, 0);\r\n\t        // // prevent to draw bars with height < 1px\r\n\t        // if (Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\r\n\t        // \tleftBottom.setY(leftBottom.y + 1);\r\n\t        // \trightBottom.setY(rightBottom.y + 1);\r\n\t        // }\r\n\t        material.color.set(color);\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t        // update lines\r\n\t        var vLineGeometry = this.vLine.geometry;\r\n\t        var vLineMaterial = this.vLine.material;\r\n\t        var lineTop = segment.maxYVal - segment.yVal;\r\n\t        var lineBottom = segment.minYVal - segment.yVal;\r\n\t        vLineGeometry.vertices[0].set(0, lineTop, 0);\r\n\t        vLineGeometry.vertices[1].set(0, lineBottom, 0);\r\n\t        vLineMaterial.color.set(color);\r\n\t        vLineGeometry.verticesNeedUpdate = true;\r\n\t        var hLineGeometry = this.hLine.geometry;\r\n\t        var hLineMaterial = this.hLine.material;\r\n\t        var lineLeft = (-width) / 2;\r\n\t        var lineRight = width / 2;\r\n\t        hLineGeometry.vertices[0].set(lineLeft, 0, 0);\r\n\t        hLineGeometry.vertices[1].set(lineRight, 0, 0);\r\n\t        hLineMaterial.color.set(color);\r\n\t        hLineGeometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    CandleWidget.prototype.initObject = function () {\r\n\t        this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({ side: THREE.DoubleSide }));\r\n\t        var vLineGeometry = new Geometry();\r\n\t        var hLineGeometry = new Geometry();\r\n\t        vLineGeometry.vertices.push(new Vector3(), new Vector3);\r\n\t        hLineGeometry.vertices.push(new Vector3(), new Vector3);\r\n\t        this.vLine = new Line(vLineGeometry, new LineBasicMaterial({ linewidth: 1 }));\r\n\t        this.hLine = new Line(hLineGeometry, new LineBasicMaterial({ linewidth: 1 }));\r\n\t        this.rect.add(this.vLine);\r\n\t        this.rect.add(this.hLine);\r\n\t    };\r\n\t    return CandleWidget;\r\n\t}());\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(16);\r\n\tvar EventEmmiter_1 = __webpack_require__(18);\r\n\tvar UniqCollectionItem = (function () {\r\n\t    function UniqCollectionItem() {\r\n\t    }\r\n\t    UniqCollectionItem.prototype.getId = function () {\r\n\t        return this._id;\r\n\t    };\r\n\t    return UniqCollectionItem;\r\n\t}());\r\n\texports.UniqCollectionItem = UniqCollectionItem;\r\n\tvar ID_KEY = '_id';\r\n\tvar EVENTS = {\r\n\t    CREATE: 'create',\r\n\t    UPDATE: 'update',\r\n\t    REMOVE: 'remove'\r\n\t};\r\n\t/**\r\n\t * useful for patching collections with id key\r\n\t */\r\n\tvar UniqCollection = (function () {\r\n\t    function UniqCollection(options) {\r\n\t        this.items = [];\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.options = options;\r\n\t    }\r\n\t    UniqCollection.prototype.patch = function (models) {\r\n\t        var options = this.options;\r\n\t        for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\r\n\t            var model = models_1[_i];\r\n\t            var id = model[ID_KEY];\r\n\t            if (!id)\r\n\t                Utils_1.Utils.error('Collection item without id detected');\r\n\t            var ind = this.getItemInd(id);\r\n\t            var item = this.items[ind];\r\n\t            var justCreated = false;\r\n\t            // create\r\n\t            if (!item) {\r\n\t                justCreated = true;\r\n\t                item = options.createInstance(model);\r\n\t                this.items.push(item);\r\n\t            }\r\n\t            // update\r\n\t            if (Object.keys(model).length > 1) {\r\n\t                var prevProps = {};\r\n\t                Utils_1.Utils.copyProps(item, prevProps, model);\r\n\t                Utils_1.Utils.patch(item, model);\r\n\t                justCreated && this.ee.emit(EVENTS.CREATE, item);\r\n\t                this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\r\n\t            }\r\n\t            else {\r\n\t                this.items.splice(ind, 1);\r\n\t                this.ee.emit(EVENTS.REMOVE, item);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    UniqCollection.prototype.getItem = function (id) {\r\n\t        return this.items[this.getItemInd(id)];\r\n\t    };\r\n\t    UniqCollection.prototype.getLast = function () {\r\n\t        return this.items[this.items.length - 1];\r\n\t    };\r\n\t    UniqCollection.prototype.forEach = function (cb) {\r\n\t        for (var key in this.items)\r\n\t            cb(this.items[key]);\r\n\t    };\r\n\t    UniqCollection.prototype.filter = function (cb) {\r\n\t        var result = [];\r\n\t        this.forEach(function (item) { return cb(item) && result.push(item); });\r\n\t        return result;\r\n\t    };\r\n\t    UniqCollection.prototype.onCreate = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.CREATE, cb);\r\n\t    };\r\n\t    UniqCollection.prototype.onUpdate = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.UPDATE, cb);\r\n\t    };\r\n\t    UniqCollection.prototype.onRemove = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.REMOVE, cb);\r\n\t    };\r\n\t    UniqCollection.prototype.getItemInd = function (id) {\r\n\t        return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\r\n\t    };\r\n\t    return UniqCollection;\r\n\t}());\r\n\texports.UniqCollection = UniqCollection;\r\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(29));\r\n\t__export(__webpack_require__(30));\r\n\t__export(__webpack_require__(33));\r\n\t__export(__webpack_require__(34));\r\n\t__export(__webpack_require__(32));\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ThreeChart.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 479f83c49de8039cea22\n **/","export * from './src/index';\n\n\n/** WEBPACK FOOTER **\n ** ./index.ts\n **/","require('./deps/deps');\nexport * from './ChartView';\nexport * from './interfaces';\nexport * from './InterpolatedViewport';\nexport * from './Chart';\nexport * from './Trend';\nexport * from './TrendSegmentsManager';\nexport * from './TrendsManager';\nexport * from './Utils';\nexport * from './UniqCollection'\nexport * from './Widget';\nexport * from './widgets';\nexport * from './Plugin';\nexport * from './Color';\nexport * from './AnimationManager';\nexport * from './EventEmmiter';\nexport * from './Easing';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","/// <reference path=\"./ResizeSensor.ts\" />\n\n// TODO: think about different bundles\n\nimport { ResizeSensorType } from './ResizeSensor';\n(<any>window).TweenLite = TweenMax;\n(<any>window).Stats = require('three/examples/js/libs/stats.min');\n\n// require('gsap/src/uncompressed/easing/EasePack.js');\n// require('three/examples/js/renderers/CanvasRenderer.js');\n// require('three/examples/js/renderers/Projector.js');\nexport const isPlainObject = require('is-plain-object') as Function;\nexport const EE2 = require('eventemitter2') as typeof EventEmitter2;\n\n\nexport { Promise } from '../polyfills/es6-promise';\n\nexport * from './ResizeSensor';\nexport const ResizeSensor = require('css-element-queries/src/ResizeSensor') as ResizeSensorType;\nexport const deepExtend = require('deep-extend') as <T>(dst: T, ...src: T[]) => T;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/deps/deps.ts\n **/","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/libs/stats.min.js\n ** module id = 3\n ** module chunks = 0\n **/","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n  \n  if (isObjectObject(o) === false) return false;\n  \n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n  \n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n  \n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n  \n  // Most likely a plain Object\n  return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-plain-object/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object'\n    && !Array.isArray(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isobject/index.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    configure.call(this, conf);\n  }\n\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n        return [tree];\n      }\n    }\n\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n          }\n        }\n        return listeners;\n      } else if(currentType === '**') {\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n        if(endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if(branch === '*' || branch === '**') {\n              if(tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if(branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n    }\n\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i+1);\n    }\n\n    xxTree = tree['**'];\n    if(xxTree) {\n      if(i < typeLength) {\n        if(xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        for(branch in xxTree) {\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if(branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\n            } else if(branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n            }\n          }\n        }\n      } else if(xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    for(var i = 0, len = type.length; i+1 < len; i++) {\n      if(type[i] === '**' && type[i+1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name) {\n\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        }\n        else if(typeof tree._listeners === 'function') {\n          tree._listeners = [tree._listeners, listener];\n        }\n        else if (isArray(tree._listeners)) {\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned) {\n\n            var m = defaultMaxListeners;\n\n            if (typeof this._events.maxListeners !== 'undefined') {\n              m = this._events.maxListeners;\n            }\n\n            if (m > 0 && tree._listeners.length > m) {\n\n              tree._listeners.warned = true;\n              console.error('(node) warning: possible EventEmitter memory ' +\n                            'leak detected. %d listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit.',\n                            tree._listeners.length);\n              console.trace();\n            }\n          }\n        }\n        return true;\n      }\n      name = type.shift();\n    }\n    return true;\n  }\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    this._events || init.call(this);\n    this._events.maxListeners = n;\n    if (!this._conf) this._conf = {};\n    this._conf.maxListeners = n;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn) {\n    this.many(event, 1, fn);\n    return this;\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this.on(event, listener);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function() {\n\n    this._events || init.call(this);\n\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) { return false; }\n    }\n\n    // Loop through the *_all* functions and invoke them.\n    if (this._all) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        this._all[i].apply(this, args);\n      }\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (type === 'error') {\n\n      if (!this._all &&\n        !this._events.error &&\n        !(this.wildcard && this.listenerTree.error)) {\n\n        if (arguments[1] instanceof Error) {\n          throw arguments[1]; // Unhandled 'error' event\n        } else {\n          throw new Error(\"Uncaught, unspecified 'error' event.\");\n        }\n        return false;\n      }\n    }\n\n    var handler;\n\n    if(this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    }\n    else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      if (arguments.length === 1) {\n        handler.call(this);\n      }\n      else if (arguments.length > 1)\n        switch (arguments.length) {\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          // slower\n          default:\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n            handler.apply(this, args);\n        }\n      return true;\n    }\n    else if (handler) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\n      var listeners = handler.slice();\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        this.event = type;\n        listeners[i].apply(this, args);\n      }\n      return (listeners.length > 0) || !!this._all;\n    }\n    else {\n      return !!this._all;\n    }\n\n  };\n\n  EventEmitter.prototype.on = function(type, listener) {\n\n    if (typeof type === 'function') {\n      this.onAny(type);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    this.emit('newListener', type, listener);\n\n    if(this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    }\n    else if(typeof this._events[type] === 'function') {\n      // Adding the second element, need to change to array.\n      this._events[type] = [this._events[type], listener];\n    }\n    else if (isArray(this._events[type])) {\n      // If we've already got an array, just append.\n      this._events[type].push(listener);\n\n      // Check for listener leak\n      if (!this._events[type].warned) {\n\n        var m = defaultMaxListeners;\n\n        if (typeof this._events.maxListeners !== 'undefined') {\n          m = this._events.maxListeners;\n        }\n\n        if (m > 0 && this._events[type].length > m) {\n\n          this._events[type].warned = true;\n          console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n          console.trace();\n        }\n      }\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if(!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    this._all.push(fn);\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    }\n    else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function(type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    }\n    else {\n      if (!this._events[type]) return this;\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function(type) {\n    if(this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n\n    if (!this._events[type]) this._events[type] = [];\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    exports.EventEmitter2 = EventEmitter;\n  }\n  else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eventemitter2/lib/eventemitter2.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = {Promise: window['Promise']}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/polyfills/es6-promise.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function() {\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            this.q = [];\n            this.add = function(ev) {\n                this.q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = this.q.length; i < j; i++) {\n                    this.q[i].call();\n                }\n            };\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var shrinkChild = shrink.childNodes[0];\n\n            var lastWidth, lastHeight;\n\n            var reset = function() {\n                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n                expand.scrollLeft = expand.scrollWidth;\n                expand.scrollTop = expand.scrollHeight;\n                shrink.scrollLeft = shrink.scrollWidth;\n                shrink.scrollTop = shrink.scrollHeight;\n                lastWidth = element.offsetWidth;\n                lastHeight = element.offsetHeight;\n            };\n\n            reset();\n\n            var changed = function() {\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            var onScroll = function() {\n              if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                  changed();\n              }\n              reset();\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        var elementType = Object.prototype.toString.call(element);\n        var isCollectionTyped = ('[object Array]' === elementType\n            || ('[object NodeList]' === elementType)\n            || ('[object HTMLCollection]' === elementType)\n            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n        );\n\n        if (isCollectionTyped) {\n            var i = 0, j = element.length;\n            for (; i < j; i++) {\n                attachResizeEvent(element[i], callback);\n            }\n        } else {\n            attachResizeEvent(element, callback);\n        }\n\n        this.detach = function() {\n            if (isCollectionTyped) {\n                var i = 0, j = element.length;\n                for (; i < j; i++) {\n                    ResizeSensor.detach(element[i]);\n                }\n            } else {\n                ResizeSensor.detach(element);\n            }\n        };\n    };\n\n    ResizeSensor.detach = function(element) {\n        if (element.resizeSensor) {\n            element.removeChild(element.resizeSensor);\n            delete element.resizeSensor;\n            delete element.resizedAttached;\n        }\n    };\n\n    // make available to common module loader\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = ResizeSensor;\n    }\n    else {\n        window.ResizeSensor = ResizeSensor;\n    }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-element-queries/src/ResizeSensor.js\n ** module id = 8\n ** module chunks = 0\n **/","/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if it is array or isn't object\n\t\tif (typeof obj !== 'object' || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = target[key]; // source value\n\t\t\tval = obj[key]; // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-extend/lib/deep-extend.js\n ** module id = 9\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/buffer/index.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-js/index.js\n ** module id = 11\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ieee754/index.js\n ** module id = 12\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 13\n ** module chunks = 0\n **/","\nimport { ChartPlugin } from './Plugin';\nimport { Trend } from \"./Trend\";\nimport Vector3 = THREE.Vector3;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport Scene = THREE.Scene;\nimport Renderer = THREE.Renderer;\nimport WebGLRenderer = THREE.WebGLRenderer;\nimport OrthographicCamera = THREE.OrthographicCamera;\nimport Object3D = THREE.Object3D;\nimport { Chart, IChartState } from \"./Chart\";\nimport { ChartWidget, IChartWidgetConstructor } from \"./Widget\";\nimport { Utils } from \"./Utils\";\nimport { IViewportParams } from \"./Viewport\";\nimport { AxisWidget } from \"./widgets/AxisWidget\";\nimport { GridWidget } from \"./widgets/GridWidget\";\nimport { TrendsGradientWidget } from \"./widgets/TrendsGradientWidget\";\nimport { TrendsLineWidget } from \"./widgets/TrendsLineWidget\";\nimport { TrendsCandlesWidget } from './widgets/TrendsCandleWidget';\nimport { ResizeSensor, ResizeSensorType } from './deps';\nimport {Color} from \"./Color\";\n\n\nexport class ChartBlankView {\n\n\tstatic devicePixelRatio = window.devicePixelRatio;\n\tstatic preinstalledWidgets: typeof ChartWidget[] = [];\n\tstatic renderers: {[rendererName: string]: any} = {\n\t\tCanvasRenderer: (THREE as any).CanvasRenderer,\n\t\tWebGLRenderer: THREE.WebGLRenderer\n\t};\n\n\tchart: Chart;\n\tisStopped: boolean;\n\tisDestroyed: boolean;\n\tprivate $container: Element;\n\tprivate $el: HTMLElement;\n\tprivate renderer: Renderer;\n\tprivate scene: Scene;\n\tprivate camera: OrthographicCamera;\n\tprivate cameraInitialPosition: Vector3;\n\tprivate widgets: Array<ChartWidget> = [];\n\tprivate stats: Stats;\n\tprivate zoomThrottled: Function;\n\tprivate unsubscribers: Function[];\n\tprivate resizeSensor: ResizeSensorType;\n\tprivate pluginsAndWidgets: Array<ChartPlugin<any> | ChartWidget>;\n\n\tconstructor(state: IChartState, $container: Element, pluginsAndWidgets: Array<ChartPlugin<any> | ChartWidget> = []) {\n\n\t\tif (!THREE || !THREE.REVISION) Utils.error('three.js not found');\n\n\t\tif (!$container) {\n\t\t\tUtils.error('$el must be set');\n\t\t}\n\t\t// calculate state size\n\t\tlet style = getComputedStyle($container);\n\t\tstate.width = parseInt(style.width);\n\t\tstate.height = parseInt(style.height);\n\n\t\tlet plugins = pluginsAndWidgets.filter(pluginOrWidget => pluginOrWidget instanceof ChartPlugin) as ChartPlugin<any>[];\n\n\t\tthis.chart = new Chart(state, plugins);\n\t\tthis.pluginsAndWidgets = pluginsAndWidgets;\n\t\tthis.zoomThrottled = Utils.throttle((zoomValue: number, origin: number) => this.zoom(zoomValue, origin), 200);\n\t\tthis.$container = $container;\n\t\tthis.init($container);\n\t};\n\n\tprivate init($container: Element) {\n\t\tvar chart = this.chart;\n\t\tvar {width: w, height: h, showStats, autoRender} = chart.state;\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.isStopped = !autoRender.enabled;\n\n\t\tvar renderer = this.renderer = new (ChartView.renderers[this.chart.state.renderer] as any)({\n\t\t\tantialias: true,\n\t\t\talpha: true\n\t\t});\n\t\tlet backgroundColor = new Color(chart.state.backgroundColor);\n\t\trenderer.setSize(w, h);\n\t\trenderer.setPixelRatio(ChartView.devicePixelRatio);\n\t\trenderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t\t$container.appendChild(renderer.domElement);\n\t\tthis.$el = renderer.domElement;\n\t\tthis.$el.style.display = 'block';\n\n\t\tif (showStats) {\n\t\t\tthis.stats = new Stats();\n\t\t\t$container.appendChild(this.stats.domElement);\n\t\t}\n\n\t\tthis.setupCamera();\n\t\tthis.initWidgets();\n\t\tthis.bindEvents();\n\t\tthis.renderLoop();\n\t}\n\n\t/**\n\t * collect and init widgets from preinstalled widgets, plugins widgets and custom widgets\n\t */\n\tprivate initWidgets() {\n\t\tlet preinstalledWidgetsClasses = (this.constructor as typeof ChartView).preinstalledWidgets.slice();\n\t\tlet customWidgets: ChartWidget[] = [];\n\n\t\tthis.pluginsAndWidgets.forEach(pluginOrWidget => {\n\t\t\tif (pluginOrWidget instanceof ChartWidget) {\n\t\t\t\tcustomWidgets.push(pluginOrWidget);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(pluginOrWidget instanceof ChartPlugin)) return;\n\t\t\tlet pluginWidgetClasses = (pluginOrWidget.constructor as typeof ChartPlugin).providedWidgets;\n\t\t\tpreinstalledWidgetsClasses.push(...pluginWidgetClasses);\n\t\t});\n\n\t\tthis.widgets = customWidgets.concat(\n\t\t\tpreinstalledWidgetsClasses.map((WidgetClass: IChartWidgetConstructor) => new WidgetClass())\n\t\t);\n\n\t\tthis.widgets.forEach(widget => {\n\t\t\twidget.setupChart(this.chart);\n\t\t\twidget.onReadyHandler();\n\t\t\tthis.scene.add(widget.getObject3D());\n\t\t});\n\t}\n\n\tprivate renderLoop() {\n\t\tif (this.isDestroyed) return;\n\t\tthis.stats && this.stats.begin();\n\t\tthis.render();\n\t\tif (this.isStopped) return;\n\t\tvar fpsLimit = this.chart.state.autoRender.fps;\n\n\t\tif (fpsLimit) {\n\t\t\tlet delay = 1000 / fpsLimit;\n\t\t\tsetTimeout(() => requestAnimationFrame(() => this.renderLoop()), delay);\n\t\t} else {\n\t\t\trequestAnimationFrame(() => this.renderLoop());\n\t\t}\n\t\tthis.stats && this.stats.end();\n\t}\n\n\trender() {\n\t\tthis.chart.render();\n\t\tthis.renderer.render(this.scene, this.camera);\n\t}\n\n\tstop() {\n\t\tthis.isStopped = true;\n\t}\n\n\trun() {\n\t\tthis.isStopped = false;\n\t\tthis.renderLoop();\n\t}\n\n\t/**\n\t * call to destroy state an init garbage collection\n\t */\n\tdestroy() {\n\t\tthis.isDestroyed = true;\n\t\tthis.stop();\n\t\tthis.chart.destroy();\n\t\tthis.unbindEvents();\n\t\t// WARNING! undocumented method for free webgl context\n\t\ttry {\n\t\t\t(this.renderer as any).forceContextLoss();\n\t\t} catch (wtf) {\n\t\t\t// sometimes with many state instances forceContextLoss not working\n\t\t}\n\t\t(this.renderer as any).context = null;\n\t\tthis.renderer.domElement = null;\n\t\tthis.renderer = null;\n\t}\n\n\tgetState(): IChartState {\n\t\treturn this.chart.state\n\t}\n\n\t/**\n\t * shortcut for ChartView.state.getTrend\n\t */\n\tgetTrend(trendName: string): Trend {\n\t\treturn this.chart.getTrend(trendName);\n\t}\n\n\t/**\n\t * shortcut for ChartView.state.setState\n\t */\n\tsetState(state: IChartState) {\n\t\treturn this.chart.setState(state);\n\t}\n\n\n\tprivate bindEvents() {\n\t\tvar $el = this.$el;\n\t\tif (this.chart.state.controls.enabled) {\n\t\t\t$el.addEventListener('mousewheel', (ev: MouseWheelEvent) => {\n\t\t\t\tthis.onMouseWheel(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('mousemove', (ev: MouseEvent) => {\n\t\t\t\tthis.onMouseMove(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('mousedown', (ev: MouseEvent) => this.onMouseDown(ev));\n\t\t\t$el.addEventListener('mouseup', (ev: MouseEvent) => this.onMouseUp(ev));\n\t\t\t$el.addEventListener('touchmove', (ev: TouchEvent) => {\n\t\t\t\tthis.onTouchMove(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('touchend', (ev: TouchEvent) => {\n\t\t\t\tthis.onTouchEnd(ev)\n\t\t\t});\n\t\t}\n\t\tif (this.chart.state.autoResize) {\n\t\t\tthis.resizeSensor = new ResizeSensor(this.$container, () => {\n\t\t\t\tthis.onChartContainerResizeHandler(this.$container.clientWidth, this.$container.clientHeight);\n\t\t\t});\n\t\t}\n\n\t\tthis.unsubscribers = [\n\t\t\tthis.chart.interpolatedViewport.onInterpolation((options) => this.onScreenTransformHandler(options)),\n\t\t\tthis.chart.onResize((options) => this.onChartResize())\n\t\t];\n\t}\n\n\tprivate unbindEvents() {\n\t\t// TODO: unbind events correctly\n\t\ttry {\n\t\t\tthis.resizeSensor && this.resizeSensor.detach();\n\t\t} catch (e) {\n\t\t\t// ups.. somebody already removed resizeSensor childNode\n\t\t\t// detected in angular2 apps\n\t\t}\n\t\tthis.$el.remove();\n\t\tthis.unsubscribers.forEach(unsubscribe => unsubscribe());\n\t}\n\n\tprivate setupCamera() {\n\t\tlet camSettings = this.chart.viewport.getCameraSettings();\n\t\tif (!this.camera) {\n\t\t\tthis.camera = new OrthographicCamera(\n\t\t\t\tcamSettings.left,\n\t\t\t\tcamSettings.right,\n\t\t\t\tcamSettings.top,\n\t\t\t\tcamSettings.bottom,\n\t\t\t\tcamSettings.near,\n\t\t\t\tcamSettings.far\n\t\t\t);\n\t\t\tthis.scene.add(this.camera);\n\t\t} else {\n\t\t\tthis.camera.left = camSettings.left;\n\t\t\tthis.camera.right = camSettings.right;\n\t\t\tthis.camera.top = camSettings.top;\n\t\t\tthis.camera.bottom = camSettings.bottom;\n\t\t\tthis.camera.near = camSettings.near;\n\t\t\tthis.camera.far = camSettings.far;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\t\tthis.camera.position.set(camSettings.left, camSettings.bottom, 0);\n\t\tthis.cameraInitialPosition = this.camera.position.clone();\n\t\tthis.onScreenTransformHandler(this.chart.interpolatedViewport.params);\n\t}\n\n\tprivate onScreenTransformHandler(options: IViewportParams) {\n\t\tif (options.scrollX != void 0) {\n\t\t\tlet scrollX = this.cameraInitialPosition.x + options.scrollX;\n\t\t\tthis.camera.position.setX(scrollX);\n\t\t}\n\t\tif (options.scrollY != void 0) {\n\t\t\tlet scrollY = this.cameraInitialPosition.y + options.scrollY;\n\t\t\tthis.camera.position.setY(scrollY);\n\t\t}\n\t}\n\n\tprivate onMouseDown(ev: MouseEvent) {\n\t\tthis.setState({cursor: {dragMode: true, x: ev.clientX, y: ev.clientY}});\n\t}\n\n\tprivate onMouseUp(ev: MouseEvent) {\n\t\tthis.setState({cursor: {dragMode: false}});\n\t}\n\n\tprivate onMouseMove(ev: MouseEvent) {\n\t\tif (this.chart.state.cursor.dragMode) {\n\t\t\tthis.setState({cursor: {dragMode: true, x: ev.clientX, y: ev.clientY}});\n\t\t}\n\t}\n\n\tprivate onMouseWheel(ev: MouseWheelEvent) {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\t\tlet zoomOrigin = ev.layerX / this.chart.state.width;\n\t\tlet zoomValue = 1 + ev.wheelDeltaY * 0.001;\n\t\tthis.zoom(zoomValue, zoomOrigin);\n\t}\n\n\tprivate onTouchMove(ev: TouchEvent) {\n\t\tthis.setState({cursor: {dragMode: true, x: ev.touches[0].clientX, y: ev.touches[0].clientY}});\n\t}\n\n\tprivate onTouchEnd(ev: TouchEvent) {\n\t\tthis.setState({cursor: {dragMode: false}});\n\t}\n\n\tprivate onChartContainerResizeHandler(width: number, height: number) {\n\t\tthis.setState({width, height});\n\t}\n\n\tprivate onChartResize() {\n\t\tlet {width, height} = this.chart.state;\n\t\tthis.renderer.setSize(width, height);\n\t\tthis.setupCamera();\n\t}\n\n\tprivate zoom(zoomValue: number, zoomOrigin: number) {\n\t\tconst MAX_ZOOM_VALUE = 1.5;\n\t\tconst MIN_ZOOM_VALUE = 0.7;\n\t\tzoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t\tzoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t\tthis.chart.zoom(zoomValue, zoomOrigin);\n\t}\n\n\n}\n\n\nexport class ChartView extends ChartBlankView {\n\tstatic preinstalledWidgets: typeof ChartWidget[] = [\n\t\tTrendsLineWidget,\n\t\tTrendsCandlesWidget,\n\t\tAxisWidget,\n\t\tGridWidget,\n\t\tTrendsGradientWidget\n\t]\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ChartView.ts\n **/","import { Chart, IChartState } from \"./Chart\";\nimport { Utils } from './Utils';\nimport { EventEmitter } from './EventEmmiter';\nimport { ChartWidget } from './Widget';\n\nexport interface IChartPluginState {\n}\n\nexport interface IChartPluginConfig {\n\tinstallPluginWidgets?: boolean;\n}\n\nexport const DEFAULT_CONFIG: IChartPluginConfig = {\n\tinstallPluginWidgets: true\n};\n\n/**\n * base class for all plugins\n * NAME is mandatory\n */\nexport abstract class ChartPlugin<TPluginState> {\n\tstatic NAME: string = '';\n\tstatic providedWidgets: typeof ChartWidget[] = [];\n\n\tinitialState: IChartPluginState;\n\tconfig: IChartPluginConfig;\n\tname: string;\n\tprotected chart: Chart;\n\tprotected unsubscribers: Function[] = [];\n\tprotected ee: EventEmitter;\n\n\tconstructor (options?: TPluginState, config: IChartPluginConfig = {}) {\n\t\tthis.initialState = options;\n\t\tthis.config = Utils.deepMerge(DEFAULT_CONFIG, config);\n\t\tthis.name = (this.constructor as typeof ChartPlugin).NAME;\n\t\tif (!this.name) Utils.error('Unnamed plugin detected');\n\t}\n\n\tsetupChart(chart: Chart) {\n\t\tthis.chart = chart;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.bindEvent(\n\t\t\tthis.chart.onInitialStateApplied(initialState => this.onInitialStateAppliedHandler(initialState)),\n\t\t\tthis.chart.onReady(() => this.onReadyHandler()),\n\t\t\tthis.chart.onDestroy(() => this.onDestroyHandler()),\n\t\t\tthis.chart.onPluginsStateChange(changedPluginsStates => changedPluginsStates[this.name] && this.onStateChangedHandler(changedPluginsStates[this.name] as any as TPluginState))\n\t\t)\n\t}\n\n\tgetOptions(): TPluginState {\n\t\treturn this.chart.state.pluginsState[this.name];\n\t}\n\n\tprotected onInitialStateAppliedHandler(initialState: IChartState) {\n\t}\n\n\tprotected onReadyHandler() {\n\t}\n\n\tprotected onStateChangedHandler(changedState: TPluginState) {\n\t}\n\n\tprotected onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t}\n\n\tprotected bindEvent(...args: Array<Function | Function[]>): void {\n\t\tlet unsubscribers: Function[] = [];\n\t\tif (!Array.isArray(args[0])) {\n\t\t\tunsubscribers.push(args[0] as Function);\n\t\t} else {\n\t\t\tunsubscribers.push(...args as Function[]);\n\t\t}\n\t\tthis.unsubscribers.push(...unsubscribers);\n\t}\n\n\n\tprotected unbindEvents() {\n\t\tthis.unsubscribers.forEach(unsubscriber => unsubscriber());\n\t\tthis.unsubscribers.length = 0;\n\t}\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Plugin.ts\n **/","import Texture = THREE.Texture;\nimport Color = THREE.Color;\nimport { TIteralable, IIteralable } from \"./interfaces\";\nimport { isPlainObject, deepExtend } from './deps';\n\n// function deepmerge(target: any, src: any, mergeArrays = true) {\n//\n// \treturn deepExtend(target, src);\n//\n// \t// var array = Array.isArray(src);\n// \t// var dst: any = array && [] || {};\n//     //\n// \t// if (array) {\n// \t// \ttarget = target || [];\n// \t// \tif (mergeArrays) {\n// \t// \t\tdst = dst.concat(target);\n// \t// \t}\n// \t// \tsrc.forEach(function(e: any, i: any) {\n// \t// \t\tif (typeof dst[i] === 'undefined') {\n// \t// \t\t\tdst[i] = e;\n// \t// \t\t} else if (typeof e === 'object') {\n// \t// \t\t\tdst[i] = deepmerge(target[i], e, mergeArrays);\n// \t// \t\t} else {\n// \t// \t\t\tif (target.indexOf(e) === -1) {\n// \t// \t\t\t\tdst.push(e);\n// \t// \t\t\t}\n// \t// \t\t}\n// \t// \t});\n// \t// } else {\n// \t// \tif (target && typeof target === 'object') {\n// \t// \t\tObject.keys(target).forEach(function (key) {\n// \t// \t\t\tdst[key] = target[key];\n// \t// \t\t})\n// \t// \t}\n// \t// \tObject.keys(src).forEach(function (key) {\n// \t// \t\tif (typeof src[key] !== 'object' || !src[key]) {\n// \t// \t\t\tdst[key] = src[key];\n// \t// \t\t}\n// \t// \t\telse {\n// \t// \t\t\tif (!target[key]) {\n// \t// \t\t\t\tdst[key] = src[key];\n// \t// \t\t\t} else {\n// \t// \t\t\t\tdst[key] = deepmerge(target[key], src[key], mergeArrays);\n// \t// \t\t\t}\n// \t// \t\t}\n// \t// \t});\n// \t// }\n//     //\n// \t// return dst;\n// }\n\n\n\nexport declare type TUid = number;\n\n/**\n * project utils static class\n */\nexport class Utils {\n\n\tprivate static currentId: TUid = 1;\n\n\t/**\n\t * deepMerge based on https://www.npmjs.com/package/deepmerge\n\t */\n\tstatic deepMerge<T> (obj1: T, obj2: T, mergeArrays?: boolean) {\n\t\treturn deepExtend({}, obj1, obj2) as T;\n\t}\n\n\t/**\n\t * deepCopy based on JSON.stringify function\n\t * @deprecated\n\t */\n\tstatic deepCopy<T> (obj: T) {\n\t\t// TODO: use deepMerge function to copy\n\t\treturn JSON.parse(JSON.stringify(obj)) as T;\n\t}\n\n\tstatic patch<T extends IIteralable>(objectToPatch: T, patch: T) {\n\t\tlet idKey = '_id';\n\t\tfor (let key in patch) {\n\n\t\t\tif (!patch.hasOwnProperty(key)) continue;\n\n\t\t\tif (objectToPatch[key]) {\n\n\t\t\t\tif (Array.isArray(patch[key])) {\n\t\t\t\t\tfor (let patchItem of patch[key]) {\n\n\t\t\t\t\t\tlet subObject = objectToPatch[key].find((item: any) => {\n\t\t\t\t\t\t\treturn item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (subObject) {\n\t\t\t\t\t\t\tthis.patch(subObject, patchItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobjectToPatch[key].push(patchItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\n\t\t\t\t} else if (typeof patch[key] === 'object' && objectToPatch[key] != void 0) {\n\n\t\t\t\t\tif (patch[idKey] && Object.keys(patch).length == 1) {\n\t\t\t\t\t\tdelete objectToPatch[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.patch(objectToPatch[key], patch[key]);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobjectToPatch[key] = patch[key];\n\t\t}\n\t\tif (objectToPatch['_onUpdate']) (objectToPatch['_onUpdate'] as Function).call(objectToPatch, patch);\n\t\treturn objectToPatch;\n\t}\n\n\tstatic travers(object: IIteralable, fn: (item: any) => boolean) {\n\t\tfor (let key in object) {\n\t\t\tif (!object.hasOwnProperty(key)) continue;\n\t\t\tlet allowTraverseDeeper = fn(object[key]);\n\t\t\tlet canTraverseDeeper = allowTraverseDeeper && typeof object[key] == 'object';\n\t\t\tif (canTraverseDeeper) this.travers(object[key], fn);\n\t\t}\n\t}\n\n\tstatic setIdsToArrayItems(sourceObject: any) {\n\t\tlet idKey = '_id';\n\t\tUtils.travers(sourceObject, (item: any) => {\n\t\t\tif (!Array.isArray(item)) return true;\n\t\t\tlet arr = item as any[];\n\t\t\tfor (let obj of arr) {\n\t\t\t\tif (typeof obj !== 'object' || Array.isArray(obj)) continue;\n\t\t\t\tif (!obj[idKey]) obj[idKey] = Utils.getUid();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @example\n\t * // returns \"000015\"\n\t * Utils.toFixed(15, 6);\n\t */\n\tstatic toFixed(num: number, digitsCount: number): string {\n\t\tvar maxDigits = 15;\n\t\tvar result = '';\n\t\tvar intVal = Math.floor(num);\n\t\tvar intStr = intVal.toString();\n\t\tvar lengthDiff = digitsCount - intStr.length;\n\t\tif (lengthDiff > 0 ) {\n\t\t\tresult = (<any>'0').repeat(lengthDiff) + intStr;\n\t\t} else {\n\t\t\tresult = intStr;\n\t\t}\n\t\tvar afterPointDigitsCount = maxDigits - intStr.length;\n\t\tvar afterPointStr = num.toString().split('.')[1];\n\t\tif (afterPointStr) {\n\t\t\tresult += '.' + afterPointStr.substr(0, afterPointDigitsCount);\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic bindEvent() {\n\n\t}\n\n\t/**\n\t * generate texture from canvas context\n\t * @example\n\t * \t// create texture with rect\n\t *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\n\t */\n\tstatic createTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D, width: number, height: number) => void ): Texture {\n\t\tvar canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tvar ctx = canvas.getContext('2d');\n\t\tfn && fn(ctx, width, height);\n\t\tvar texture = new THREE.Texture(canvas);\n\t\ttexture.needsUpdate = true;\n\t\ttexture.anisotropy = 16;\n\t\treturn texture;\n\t}\n\n\t/**\n\t * generate texture from canvas context with NearestFilter\n\t * @example\n\t * \t// create texture with rect\n\t *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\n\t */\n\tstatic createNearestTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D) => void ): Texture{\n\t\tvar texture = this.createTexture(width, height, fn);\n\t\ttexture.minFilter = THREE.NearestFilter;//THREE.NearestFilter;\n\t\t//texture.generateMipmaps = false;\n\t\treturn texture;\n\t}\n\n\t// static createPixelPerfectTexture(width: number, height: number, fn?: (ctx: CanvasRenderingContext2D) => void ): Texture{\n\t// \tvar texture = this.createTexture(width, height, fn);\n\t// \ttexture.magFilter = THREE.NearestFilter;\n\t// \ttexture.minFilter = THREE.NearestFilter;\n\t// \treturn texture;\n\t// }\n\n\t/**\n\t * throw error\n\t */\n\tstatic error(msg: string) {\n\t\tconsole.error('Chart error: ' + msg);\n\t\tthrow 'Chart: ' + msg;\n\t}\n\n\t/**\n\t * throw error\n\t */\n\tstatic warn(msg: string) {\n\t\tconsole.warn('Chart warning: ' + msg);\n\t}\n\n\t/**\n\t * @returns new unique id\n\t */\n\tstatic getUid(): TUid {\n\t\treturn this.currentId++;\n\t}\n\n\t/**\n\t * @returns distance between numbers\n\t */\n\tstatic getDistance(num1: number, num2: number) {\n\t\treturn Math.max(num1, num2) - Math.min(num1, num2);\n\t}\n\n\t// TODO: refactor binary search functions\n\tstatic binarySearchClosestInd(arr: IIteralable[], num: number, key: string): number {\n\t\tvar mid: number;\n\t\tvar lo = 0;\n\t\tvar hi = arr.length - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor ((lo + hi) / 2);\n\t\t\tif (arr[mid][key] < num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\tif (num - arr[lo][key] <= arr[hi][key] - num) {\n\t\t\treturn lo;\n\t\t}\n\t\treturn hi;\n\t}\n\n\tstatic binarySearchClosest<ArrayItem>(arr: ArrayItem[], num: number, key: string): ArrayItem {\n\t\tlet ind = this.binarySearchClosestInd(arr, num, key);\n\t\treturn arr[ind];\n\t}\n\n\tstatic binarySearchInd<ArrayItem>(arr: IIteralable[], num: number, key: string): number {\n\t\tlet mid: number;\n\t\tlet lo = 0;\n\t\tlet hi = arr.length - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor (( hi - lo) / 2);\n\t\t\tif (arr[mid][key] < num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t\tif (arr[lo][key] == num) {\n\t\t\t\treturn lo;\n\t\t\t} else if (arr[hi][key] == num) {\n\t\t\t\treturn hi;\n\t\t\t}\n\t\t}\n\t\treturn (arr[lo] && arr[lo][key] == num) ? lo : -1;\n\t}\n\n\tstatic binarySearch<ArrayItem>(arr: ArrayItem[], num: number, key: string): ArrayItem {\n\t\tlet ind = this.binarySearchInd(arr, num, key);\n\t\treturn arr[ind];\n\t}\n\n\n\tstatic rectsIntersect(r1: number[], r2: number[]) {\n\t\tlet [left1, top1, width1, height1] = r1;\n\t\tlet [left2, top2, width2, height2] = r2;\n\t\tlet [right1, right2, bottom1, bottom2] = [left1 + width1, left2 + width2, top1 + height1, top2 + height2];\n\t\treturn !(left2 > right1 ||\n\t\t\tright2 < left1 ||\n\t\t\ttop2 > bottom1 ||\n\t\t\tbottom2 < top1\n\t\t);\n\t}\n\n\n\tstatic throttle(func: Function, ms: number) {\n\n\t\tvar isThrottled = false,\n\t\t\tsavedArgs: any,\n\t\t\tsavedThis: any;\n\n\t\tfunction wrapper() {\n\n\t\t\tif (isThrottled) { // (2)\n\t\t\t\tsavedArgs = arguments;\n\t\t\t\tsavedThis = this;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunc.apply(this, arguments); // (1)\n\n\t\t\tisThrottled = true;\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tisThrottled = false; // (3)\n\t\t\t\tif (savedArgs) {\n\t\t\t\t\twrapper.apply(savedThis, savedArgs);\n\t\t\t\t\tsavedArgs = savedThis = null;\n\t\t\t\t}\n\t\t\t}, ms);\n\t\t}\n\n\t\treturn wrapper;\n\t}\n\n\tstatic msToTimeString(timestamp: number) {\n\t\tvar h = Math.floor(timestamp / 360000);\n\t\tvar m =  Math.floor(timestamp / 60000);\n\t\tvar s =  Math.floor(timestamp / 1000);\n\t\treturn h + ':' + m + ':' + s;\n\t}\n\t\n\tstatic getRandomItem<T>(arr: Array<T>): T {\n\t\tvar ind = Math.floor(Math.random() * arr.length);\n\t\treturn arr[ind];\n\t}\n\n\tstatic copyProps(srcObject: TIteralable, dstObject: TIteralable, props: TIteralable, excludeProps: string[] = []) {\n\t\tfor (var key in props) {\n\t\t\tif (excludeProps.indexOf(key) !== -1) continue;\n\t\t\tif (srcObject[key] == void 0) continue;\n\t\t\tif (isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t\t\t\tthis.copyProps(srcObject[key], dstObject[key], props[key])\n\t\t\t} else if (typeof srcObject[key] == 'function') {\n\t\t\t\tdstObject[key] = srcObject[key];\n\t\t\t} else {\n\t\t\t\tdstObject[key] = this.deepCopy(srcObject[key]);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Utils.ts\n **/","export * from './deps'\n\n\n/** WEBPACK FOOTER **\n ** ./src/deps/index.ts\n **/","import {EE2} from './deps';\n\n/**\n * this class uses as proxy for EventEmitter2\n */\nexport class EventEmitter {\n\tprivate ee: EventEmitter2;\n\n\t// TODO: allow to create EE instances only in Chart class\n\tconstructor() {\n\t\tthis.ee = new EE2();\n\t}\n\temit(eventName: string, ...args: any[]) {\n\t\tthis.ee.emit(eventName, ...args)\n\t}\n\ton(eventName: string, callback: Function) {\n\t\treturn this.ee.on(eventName, callback)\n\t}\n\toff(eventName: string, callback: Function) {\n\t\treturn this.ee.off(eventName, callback);\n\t}\n\tsubscribe(eventName: string, callback: Function): Function {\n\t\tthis.on(eventName, callback);\n\t\treturn () => this.off(eventName, callback);\n\t}\n\tsetMaxListeners(listenersCount: number) {\n\t\tthis.ee.setMaxListeners(listenersCount);\n\t}\n\tremoveAllListeners(eventName?: string) {\n\t\tthis.ee.removeAllListeners(eventName);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/EventEmmiter.ts\n **/","import Vector3 = THREE.Vector3;\nimport { ITrendOptions, Trend, ITrendData, TREND_TYPE } from \"./Trend\";\nimport { EventEmitter } from './EventEmmiter';\nimport { Utils } from './Utils';\nimport { TrendsManager, ITrendsOptions } from \"./TrendsManager\";\nimport { Viewport } from \"./Viewport\";\nimport { InterpolatedViewport } from \"./InterpolatedViewport\";\nimport { Promise } from './deps/deps';\nimport { ChartPlugin } from './Plugin';\nimport { TColor } from \"./Color\";\nimport { AnimationManager } from \"./AnimationManager\";\nimport { EASING } from './Easing';\nimport {\n\tAXIS_TYPE, AXIS_DATA_TYPE, IAxisOptions, IAnimationsOptions, AXIS_RANGE_TYPE\n} from \"./interfaces\";\n\ninterface IRecalculatedStateResult {\n\tchangedProps: IChartState,\n\tpatch: IChartState\n}\n\nconst CHART_STATE_EVENTS = {\n\tINITIAL_STATE_APPLIED: 'initialStateApplied',\n\tREADY: 'ready',\n\tDESTROY: 'destroy',\n\tCHANGE: 'change',\n\tTREND_CHANGE: 'trendChange',\n\tTRENDS_CHANGE: 'trendsChange',\n\tZOOM: 'zoom',\n\tRESIZE: 'resize',\n\tSCROLL: 'scroll',\n\tVIEWPORT_CHANGE: 'viewportChange',\n\tDRAG_STATE_CHAGED: 'scrollStop',\n\tPLUGINS_STATE_CHANGED: 'pluginsStateChanged'\n};\n\n/**\n * readonly computed state state\n * calculated after recalculateState() call\n * contains cached values\n */\nexport interface IChartStateComputedData {\n\ttrends?: {\n\t\tmaxXVal: number,\n\t\tminXVal: number\n\t}\n}\n\nexport interface IChartState {\n\tprevState?: IChartState,\n\twidth?: number;\n\theight?: number;\n\tzoom?: number;\n\txAxis?: IAxisOptions,\n\tyAxis?: IAxisOptions,\n\tanimations?: IAnimationsOptions,\n\ttrends?: ITrendsOptions,\n\ttrendDefaultState?: ITrendOptions;\n\tcursor?: {\n\t\tdragMode?: boolean,\n\t\tx?: number,\n\t\ty?: number\n\t},\n\n\t/**\n\t * use fps = 0 for no limits\n\t */\n\tautoRender?: {enabled?: boolean, fps?: number};\n\n\t/**\n\t * by default 'WebGLRenderer'\n\t * also available 'CanvasRenderer'\n\t */\n\trenderer?: 'WebGLRenderer' | 'CanvasRenderer';\n\tfont?: {s?: string, m?: string, l?:string}\n\n\t/**\n\t * set to false for smooth animations\n\t */\n\tenablePixelPerfectRender?: boolean,\n\n\t/**\n\t * buffer size for displayed segments\n\t * used by widgets\n\t */\n\tmaxVisibleSegments?: number;\n\tautoResize?: boolean;\n\tcontrols?: {enabled: boolean};\n\tautoScroll?: boolean;\n\tinertialScroll?: boolean\n\n\t//TODO: exclude stats in plugin\n\tshowStats?: boolean;\n\tbackgroundColor?: TColor;\n\tcomputedData?: IChartStateComputedData,\n\tpluginsState?: {[pluginName: string]: any};\n\teventEmitterMaxListeners?: number;\n}\n\nconst LIGHT_BLUE = '#5273bd';\n\n/**\n *  all state changes caused only by Chart.setState method\n */\nexport class Chart {\n\n\tstate: IChartState = {\n\t\tprevState: {},\n\t\tzoom: 0,\n\t\txAxis: {\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.ALL,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 0,\n\t\t\t\tscroll: 0,\n\t\t\t\tzoom: 1,\n\t\t\t\tpadding: {start: 0, end: 5},\n\t\t\t\tmargin: {start: 0, end: 5}\n\t\t\t},\n\t\t\tdataType: AXIS_DATA_TYPE.NUMBER,\n\t\t\tgrid: {enabled: true, minSizePx:  100, color: `rgba(${LIGHT_BLUE}, 0.12)`},\n\t\t\tcolor: LIGHT_BLUE\n\t\t},\n\t\tyAxis: {\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.RELATIVE_END,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 0,\n\t\t\t\tzoom: 1,\n\t\t\t\tpadding: {start: 5, end: 5},\n\t\t\t\tmargin: {start: 5, end: 5},\n\t\t\t},\n\t\t\tgrid: {enabled: true, minSizePx:  50, color: `rgba(${LIGHT_BLUE}, 0.12)`},\n\t\t\tdataType: AXIS_DATA_TYPE.NUMBER,\n\t\t\tcolor: LIGHT_BLUE\n\t\t},\n\t\tanimations: {\n\t\t\tenabled: true,\n\t\t\ttrendChangeSpeed: 0.5,\n\t\t\ttrendChangeEase: void 0,\n\t\t\tzoomSpeed: 250,\n\t\t\tscrollSpeed: 1000,\n\t\t\tscrollEase: EASING.Quadratic.Out,\n\t\t\tzoomEase: EASING.Quadratic.Out,\n\t\t\tautoScrollSpeed: 1100,\n\t\t\tautoScrollEase: EASING.Linear.None,\n\t\t},\n\t\tautoRender: {enabled: true, fps: 0},\n\t\tautoResize: true,\n\t\trenderer: 'WebGLRenderer',//'WebGLRenderer',\n\t\tautoScroll: true,\n\t\tcontrols: {enabled: true},\n\t\ttrendDefaultState: {\n\t\t\tenabled: true,\n\t\t\ttype: TREND_TYPE.LINE,\n\t\t\tdata: [],\n\t\t\tmaxSegmentLength: 1000,\n\t\t\tlineWidth: 2,\n\t\t\tlineColor: 0xFFFFFF,\n\t\t\thasBackground: true,\n\t\t\tbackgroundColor: 'rgba(#FFFFFF, 0.07)',\n\t\t\thasBeacon: false,\n\t\t\tsettingsForTypes: {\n\t\t\t\tCANDLE: {\n\t\t\t\t\tminSegmentLengthInPx: 20,\n\t\t\t\t\tmaxSegmentLengthInPx: 40,\n\t\t\t\t},\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 2,\n\t\t\t\t\tmaxSegmentLengthInPx: 10,\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcursor: {\n\t\t\tdragMode: false,\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\tfont: {\n\t\t\ts: '11px Arial',\n\t\t\tm: '12px Arial',\n\t\t\tl: '13px Arial'\n\t\t},\n\t\tbackgroundColor: 0x000c2a,\n\t\tshowStats: false,\n\t\tpluginsState: {},\n\t\teventEmitterMaxListeners: 20,\n\t\tmaxVisibleSegments: 1280,\n\t\tinertialScroll: false\n\t};\n\tplugins: {[pluginName: string]: ChartPlugin<any>} = {};\n\ttrendsManager: TrendsManager;\n\tanimationManager: AnimationManager;\n\tviewport: Viewport;\n\tinterpolatedViewport: InterpolatedViewport;\n\n\t/**\n\t * true then state was initialized and ready to use\n\t */\n\tisReady = false;\n\tisDestroyed = false;\n\n\n\tprivate ee: EventEmitter;\n\n\tconstructor(\n\t\tinitialState: IChartState,\n\t\tplugins: ChartPlugin<any>[] = []\n\t) {\n\t\tthis.ee = new EventEmitter();\n\t\tthis.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\n\t\tthis.state = Utils.patch(this.state, initialState); //Utils.deepMerge(this.state, initialState);\n\t\tthis.trendsManager = new TrendsManager(this, initialState);\n\t\tinitialState.trends = this.trendsManager.calculatedOptions;\n\t\tinitialState = this.installPlugins(plugins, initialState);\n\n\t\tthis.animationManager = new AnimationManager();\n\t\tthis.animationManager.setAimationsEnabled(this.state.animations.enabled);\n\t\tthis.viewport = new Viewport(this);\n\n\t\tthis.setState(initialState);\n\t\tthis.setState({computedData: this.getComputedData()});\n\t\tthis.savePrevState();\n\n\t\tthis.interpolatedViewport = new InterpolatedViewport(this);\n\t\tthis.bindEvents();\n\n\n\t\t\n\t\t// message to other modules that Chart.state is ready for use\n\t\tthis.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\n\t\t// message to other modules that Chart is ready for use\n\t\tthis.isReady = true;\n\t\tthis.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\n\t}\n\n\t/**\n\t * destroy chart, use ChartView.destroy to completely destroy Chart\n\t */\n\tdestroy() {\n\t\tthis.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t\tthis.ee.removeAllListeners();\n\t\tthis.state = {};\n\t\tthis.isDestroyed = true;\n\t}\n\n\tonDestroy(cb: Function) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t}\n\n\tonInitialStateApplied(cb: (initialState: IChartState) => void ): Function {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t}\n\n\tonReady(cb: (initialState: IChartState) => void ): Function {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t}\n\n\tonChange(cb: (changedProps: IChartState) => void ) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t}\n\n\tonTrendChange(cb: (trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t}\n\n\tonTrendsChange(cb: (trendsOptions: ITrendsOptions) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t}\n\n\tonDragStateChanged(cb: (isDragMode: boolean, changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n\t}\n\n\tonScroll(cb: (scrollOptions: {deltaX: number}) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t}\n\n\tonZoom(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t}\n\n\tonResize(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t}\n\n\tonViewportChange(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\n\t}\n\n\tonPluginsStateChange(cb: (changedPluginsStates: {[pluginName: string]: Plugin}) => any) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t}\n\t\n\tgetTrend(trendName: string): Trend {\n\t\treturn this.trendsManager.getTrend(trendName);\n\t}\n\n\trender() {\n\t\tthis.animationManager.tick();\n\t}\n\n\tsetState(newState: IChartState, eventData?: any, silent = false) {\n\n\t\tif (this.isDestroyed) {\n\t\t\tUtils.error('You have tried to change state of destroyed Chart instance');\n\t\t}\n\n\t\t// temporary remove trends state from newState by performance reasons\n\t\tlet trendsData: {[trendName: string]: ITrendData} = {};\n\t\tif (newState.trends) for (let trendName in newState.trends) {\n\t\t\tlet trendOptions = newState.trends[trendName];\n\t\t\tif (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t\t\tdelete trendOptions.data;\n\t\t}\n\t\tlet newStateContainsData = Object.keys(trendsData).length > 0;\n\n\n\t\t// setup ids to array items\n\t\tnewState = Utils.deepMerge({}, newState);\n\t\tUtils.setIdsToArrayItems(newState);\n\n\t\tlet currentStateData = this.state as {[key: string]: any};\n\t\tlet newStateObj = newState as {[key: string]: any};\n\n\t\tvar changedProps: {[key: string]: any} = {};\n\t\tfor (let key in newStateObj) {\n\t\t\tif (currentStateData[key] !== newStateObj[key]) {\n\t\t\t\tchangedProps[key] = newStateObj[key] as any;\n\t\t\t}\n\t\t}\n\n\t\tthis.savePrevState(changedProps as IChartState);\n\t\tthis.state = Utils.patch(this.state, newState); //Utils.deepMerge(this.state, newState, false);\n\n\n\t\t// return trends to state\n\t\tif (newStateContainsData) for (let trendName in trendsData) {\n\t\t\tthis.state.trends[trendName].data = trendsData[trendName];\n\t\t}\n\n\t\tif (silent) return;\n\n\t\t// recalculate all dynamic state props\n\t\tvar recalculateResult = this.recalculateState(changedProps);\n\t\tchangedProps = recalculateResult.changedProps;\n\t\t\n\t\tthis.emitChangedStateEvents(changedProps, eventData);\n\n\t}\n\n\t/**\n\t * recalculate all computed state props\n\t */\n\tprivate recalculateState(changedProps?: IChartState): IRecalculatedStateResult {\n\t\tvar data = this.state;\n\t\tvar patch: IChartState = {};\n\t\tvar actualData = Utils.patch({}, data); //Utils.deepMerge({}, data);\n\n\t\t// recalculate scroll position by changed cursor params\n\t\tvar cursorOptions = changedProps.cursor;\n\t\tvar isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t\tif (isMouseDrag) {\n\t\t\tvar oldX = data.prevState.cursor.x;\n\t\t\tvar currentX =  cursorOptions.x;\n\t\t\tvar currentScroll = data.xAxis.range.scroll;\n\t\t\tvar deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\n\t\t\tpatch.xAxis = {range: {scroll: currentScroll + deltaXVal}};\n\t\t\tactualData = Utils.patch(actualData, {xAxis: patch.xAxis} as IChartState);//Utils.deepMerge(actualData, {xAxis: patch.xAxis} as IChartState)\n\t\t}\n\n\t\tlet chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\n\t\tlet scrollXChanged = false;\n\t\tlet needToRecalculateXAxis = (\n\t\t\tisMouseDrag ||\n\t\t\tchartWasResized ||\n\t\t\t(changedProps.xAxis && (changedProps.xAxis.range)) ||\n\t\t\tthis.state.xAxis.range.zeroVal == void 0\n\t\t);\n\t\tif (needToRecalculateXAxis) {\n\t\t\tlet xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t\t\tif (xAxisPatch) {\n\t\t\t\tscrollXChanged = true;\n\t\t\t\t//patch = Utils.deepMerge(patch, {xAxis: xAxisPatch});\n\t\t\t\tUtils.patch(patch, {xAxis: xAxisPatch});\n\t\t\t\t//actualData = Utils.deepMerge(actualData, {xAxis: xAxisPatch} as IChartState);\n\t\t\t\tUtils.patch(actualData, {xAxis: xAxisPatch} as IChartState);\n\t\t\t}\n\t\t}\n\n\n\n\t\t// recalculate axis \"from\" and \"to\" for dynamics AXIS_RANGE_TYPE\n\t\tlet needToRecalculateYAxis = (\n\t\t\tchartWasResized ||\n\t\t\t(\n\t\t\t\tdata.yAxis.range.type === AXIS_RANGE_TYPE.RELATIVE_END ||\n\t\t\t\tdata.yAxis.range.type === AXIS_RANGE_TYPE.AUTO ||\n\t\t\t\tdata.yAxis.range.isMirrorMode\n\t\t\t) &&\n\t\t\t(scrollXChanged || changedProps.trends || changedProps.yAxis) ||\n\t\t\tthis.state.yAxis.range.zeroVal == void 0\n\t\t);\n\t\tif (needToRecalculateYAxis){\n\t\t\tlet yAxisPatch = this.recalculateYAxis(actualData);\n\t\t\tif (yAxisPatch) {\n\t\t\t\t// patch = Utils.deepMerge(patch, {yAxis: yAxisPatch});\n\t\t\t\t// actualData = Utils.deepMerge(actualData, {yAxis: yAxisPatch} as IChartState);\n\t\t\t\tUtils.patch(patch, {yAxis: yAxisPatch});\n\t\t\t\tUtils.patch(actualData, {yAxis: yAxisPatch} as IChartState);\n\t\t\t}\n\t\t}\n\n\t\tthis.savePrevState(patch);\n\t\tlet allChangedProps = Utils.deepMerge(changedProps, patch);\n\t\tpatch.computedData = this.getComputedData(allChangedProps);\n\t\tthis.savePrevState(patch);\n\t\t// this.state = Utils.deepMerge(this.state, patch);\n\t\tUtils.patch(this.state, patch);\n\t\treturn {changedProps: allChangedProps, patch: patch}\n\t}\n\n\tprivate getComputedData(changedProps?: IChartState): IChartStateComputedData {\n\t\tvar computeAll = !changedProps;\n\t\tvar computedData: IChartStateComputedData = {};\n\n\t\tif (computeAll || changedProps.trends && this.trendsManager) {\n\t\t\tcomputedData.trends = {\n\t\t\t\tmaxXVal: this.trendsManager.getEndXVal(),\n\t\t\t\tminXVal: this.trendsManager.getStartXVal()\n\t\t\t}\n\t\t}\n\t\treturn computedData;\n\t}\n\n\tprivate savePrevState(changedProps?: IChartState) {\n\t\tif (!changedProps) changedProps = this.state;\n\t\tvar prevState = this.state.prevState;\n\n\t\t// prevent to store prev trend state by performance reasons\n\t\tUtils.copyProps(this.state, prevState, changedProps, ['trends']);\n\n\t}\n\n\tprivate emitChangedStateEvents(changedProps: IChartState, eventData: any) {\n\t\tvar prevState = this.state.prevState;\n\n\t\t// emit common change event\n\t\tthis.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\n\t\t// emit event for each changed state property\n\t\tfor (let key in changedProps) {\n\t\t\tthis.ee.emit(key + 'Change', (changedProps as {[key: string]: any})[key], eventData);\n\t\t}\n\n\t\tif (!this.isReady) return;\n\n\t\t// emit special events based on changed state\n\t\tlet dragEventNeeded = (\n\t\t\tchangedProps.cursor &&\n\t\t\t(changedProps.cursor.dragMode != prevState.cursor.dragMode)\n\t\t);\n\t\tdragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n\n\t\tlet scrollChangeEventsNeeded = (\n\t\t\tchangedProps.xAxis &&\n\t\t\tchangedProps.xAxis.range &&\n\t\t\tchangedProps.xAxis.range.scroll != void 0\n\t\t);\n\t\tscrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\n\t\tlet zoomEventsNeeded = (\n\t\t\t(changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom) ||\n\t\t\t(changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom)\n\t\t);\n\t\tzoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\n\t\tlet resizeEventNeeded = (changedProps.width || changedProps.height);\n\t\tresizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\n\t\tlet viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\n\t\tif (viewportChangeEventNeeded) this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\n\n\t\tlet pluginStateChangedEventNeeded = !!(changedProps.pluginsState);\n\t\tpluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t}\n\n\n\t/**\n\t * init plugins and save plugins params in initialState\n\t */\n\tprivate installPlugins(plugins: ChartPlugin<any>[], initialState: IChartState): IChartState {\n\t\tinitialState.pluginsState = {};\n\t\tplugins.forEach(plugin => {\n\t\t\tlet PluginClass = plugin.constructor as typeof ChartPlugin;\n\t\t\tlet pluginName = PluginClass.NAME;\n\t\t\tinitialState.pluginsState[pluginName] = plugin.initialState;\n\t\t\tthis.plugins[pluginName] = plugin;\n\t\t\tplugin.setupChart(this);\n\t\t});\n\t\treturn initialState;\n\t}\n\n\n\t/**\n\t * returns plugin instance by plugin name\n\t * @example\n\t */\n\tgetPlugin(pluginName: string): ChartPlugin<any> {\n\t\treturn this.plugins[pluginName];\n\t}\n\n\n\tprivate bindEvents() {\n\t\tthis.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, (changedTrends: ITrendsOptions, newData: ITrendData) => {\n\t\t\tthis.handleTrendsChange(changedTrends, newData)\n\t\t});\n\n\t\tthis.onDragStateChanged(dragState => this.onDragStateChangedHandler(dragState));\n\n\t\tthis.ee.on('animationsChange', (animationOptions: IAnimationsOptions) => {\n\t\t\tif (animationOptions.enabled !== this.animationManager.isAnimationsEnabled) {\n\t\t\t\tthis.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate handleTrendsChange(changedTrends: ITrendsOptions, newData: ITrendData) {\n\t\tfor (let trendName in changedTrends) {\n\t\t\tthis.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t\t}\n\n\t\t// process autoscroll\n\t\tlet state = this.state;\n\t\tif (!state.autoScroll || state.cursor.dragMode) return;\n\t\tlet oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n\t\tlet trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n\n\t\tif (trendsMaxXDelta > 0) {\n\t\t\tlet maxVisibleXVal = this.viewport.getRightVal();\n\t\t\tlet paddingRightVal = this.viewport.getValByViewportX(\n\t\t\t\tthis.state.width -\n\t\t\t\tstate.xAxis.range.padding.end -\n\t\t\t\tstate.xAxis.range.margin.end\n\t\t\t);\n\t\t\tlet marginRightVal = this.viewport.getValByViewportX(\n\t\t\t\tthis.state.width -\n\t\t\t\tstate.xAxis.range.margin.end\n\t\t\t);\n\t\t\tvar currentScroll = state.xAxis.range.scroll;\n\t\t\tif (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n\n\t\t\tthis.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}});\n\t\t}\n\t}\n\n\tprivate onDragStateChangedHandler(isDragMode: boolean) {\n\n\t\t// process inertial scroll\n\t\tlet state = this.state;\n\t\tif (!state.inertialScroll || isDragMode) return;\n\n\t\t// TODO:\n\t\t// let currentScroll = state.xAxis.range.scroll;\n\t\t// let currentX = state.cursor.x;\n\t\t// let prevX = state.prevState.cursor.x;\n\t\t// let scrollDelta = this.pxToValueByXAxis(prevX - currentX) * 10;\n\t\t// this.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}})\n\t}\n\n\tprivate recalculateXAxis(actualData: IChartState, changedProps: IChartState): IAxisOptions {\n\t\tvar axisRange = actualData.xAxis.range;\n\t\tvar patch: IAxisOptions = {range: {}};\n\t\tvar isInitialize = axisRange.zeroVal == void 0;\n\t\tvar zeroVal: number, scaleFactor: number;\n\t\tvar zoom = axisRange.zoom;\n\n\t\tif (axisRange.isMirrorMode) {\n\t\t\tUtils.error('range.isMirrorMode available only for yAxis.range');\n\t\t}\n\n\t\tif (isInitialize) {\n\t\t\tzeroVal = axisRange.from;\n\t\t\tscaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t\t\tpatch = { range: {zeroVal: zeroVal, scaleFactor: scaleFactor}};\n\t\t} else {\n\t\t\tzeroVal = axisRange.zeroVal;\n\t\t\tscaleFactor = axisRange.scaleFactor;\n\n\t\t\t// recalculate range.zoom and range.scroll then range.from or range.to was changed\n\t\t\tif (\n\t\t\t\tchangedProps.xAxis &&\n\t\t\t\t(changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)\n\t\t\t) {\n\t\t\t\tif (changedProps.xAxis.range.zoom) {\n\t\t\t\t\tUtils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t\t\t\t}\n\t\t\t\tlet currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t\t\t\tpatch.range.scroll = axisRange.from - zeroVal;\n\t\t\t\tpatch.range.zoom = currentScaleFactor / scaleFactor;\n\t\t\t\treturn patch;\n\t\t\t}\n\t\t}\n\n\n\t\t// recalculate range.from and range.to then range.zoom or range.scroll was changed\n\t\tdo {\n\t\t\tvar from = zeroVal + axisRange.scroll;\n\t\t\tvar to = from + actualData.width / (scaleFactor * zoom);\n\t\t\tvar rangeLength = to - from;\n\t\t\tvar needToRecalculateZoom = false;\n\t\t\tvar rangeMoreThenMaxValue = (axisRange.maxLength && rangeLength > axisRange.maxLength);\n\t\t\tvar rangeLessThenMinValue = (axisRange.minLength && rangeLength < axisRange.minLength);\n\t\t\tneedToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t\t\tif (needToRecalculateZoom) {\n\t\t\t\tvar fixScale = rangeLength > axisRange.maxLength ?\n\t\t\t\t\trangeLength / axisRange.maxLength :\n\t\t\t\t\trangeLength / axisRange.minLength;\n\t\t\t\tvar zoom = zoom * fixScale;\n\t\t\t\tpatch.range.zoom = zoom;\n\t\t\t}\n\t\t} while (needToRecalculateZoom);\n\n\t\tpatch.range.from = from;\n\t\tpatch.range.to = to;\n\t\treturn patch;\n\t}\n\n\n\tprivate recalculateYAxis(actualData: IChartState): IAxisOptions {\n\t\tvar patch: IAxisOptions = {range: {}};\n\t\tvar yAxisRange = actualData.yAxis.range;\n\t\tvar isInitialize = yAxisRange.scaleFactor == void 0;\n\t\tvar trends = this.trendsManager;\n\t\tvar trendsEndXVal = trends.getEndXVal();\n\t\tvar trendsStartXVal = trends.getStartXVal();\n\t\tvar xRange = actualData.xAxis.range;\n\t\tvar {from: xFrom, to: xTo} = xRange;\n\t\tvar xRangeLength = xTo - xFrom;\n\t\tvar zeroVal: number, scaleFactor: number, scroll: number, zoom: number, needToZoom: boolean;\n\n\t\t// check situation when state was scrolled behind trends end or before trends start\n\t\tif (xTo > trendsEndXVal) {\n\t\t\txTo = trendsEndXVal;\n\t\t\txFrom = xTo - xRangeLength;\n\t\t} else if (xFrom < trendsStartXVal) {\n\t\t\txFrom = trendsStartXVal;\n\t\t\txTo = xFrom + xRangeLength;\n\t\t}\n\n\t\tvar maxY = trends.getMaxYVal(xFrom, xTo);\n\t\tvar minY = trends.getMinYVal(xFrom, xTo);\n\n\t\tvar trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t\tif (yAxisRange.type == AXIS_RANGE_TYPE.RELATIVE_END) {\n\t\t\tif (trendLastY > maxY) maxY = trendLastY;\n\t\t\tif (trendLastY < minY) minY = trendLastY;\n\t\t}\n\n\t\tif (yAxisRange.isMirrorMode) {\n\t\t\tif (yAxisRange.zeroVal == void 0) Utils.error('range.zeroVal must be set when range.isMirrorMode');\n\t\t\tlet distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t\t\tlet distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t\t\tlet maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t\t\tmaxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t\t\tminY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t\t}\n\t\tlet margin = yAxisRange.margin;\n\t\tlet padding = {\n\t\t\tstart: yAxisRange.padding.start + margin.start,\n\t\t\tend: yAxisRange.padding.end + margin.end\n\t\t};\n\n\t\tif (padding.end + padding.start >= actualData.height) {\n\t\t\tUtils.warn('Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly');\n\t\t}\n\n\t\tlet rangeLength = maxY - minY;\n\t\tlet paddingTopInPercents = padding.end / actualData.height;\n\t\tlet paddingBottomInPercents = padding.start / actualData.height;\n\t\tlet rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t\tlet visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t\tlet fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t\tlet toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t\t\n\t\tif (isInitialize) {\n\t\t\tzeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t\t\tscaleFactor = actualData.height / (toVal - fromVal);\n\t\t\tpatch = { range: {zeroVal: zeroVal, scaleFactor: scaleFactor}};\n\t\t\tneedToZoom = true;\n\t\t} else {\n\t\t\tscaleFactor = yAxisRange.scaleFactor;\n\t\t\tzeroVal = yAxisRange.zeroVal;\n\n\t\t\tlet maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\n\t\t\tlet minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\n\t\t\tneedToZoom = (\n\t\t\t\tmaxScreenY > actualData.height - margin.end ||\n\t\t\t\tmaxScreenY < actualData.height - padding.end ||\n\t\t\t\tminScreenY < margin.start ||\n\t\t\t\tminScreenY > padding.start\n\t\t\t);\n\t\t}\n\n\t\tif (!needToZoom) return null;\n\n\t\tscroll = fromVal - zeroVal;\n\t\tzoom = (actualData.height / (toVal - fromVal)) / scaleFactor ;\n\n\t\tvar currentAxisRange = this.state.yAxis.range;\n\t\tif (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t\tif (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t\tif (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t\tif (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t\t\n\t\treturn patch;\n\t}\n\n\tzoom(zoomValue: number, origin = 0.5): Promise<void> {\n\t\tlet {zoom, scroll, scaleFactor} = this.state.xAxis.range;\n\t\tlet newZoom = zoom * zoomValue;\n\t\tlet currentRange = this.state.width / (scaleFactor * zoom);\n\t\tlet nextRange = this.state.width / (scaleFactor * newZoom);\n\t\tlet newScroll = scroll + (currentRange - nextRange) * origin;\n\t\tthis.setState({xAxis: {range: {zoom: newZoom, scroll: newScroll}}});\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet animationTime = this.state.animations.enabled ? this.state.animations.zoomSpeed : 0;\n\t\t\tsetTimeout(resolve, animationTime * 1000);\n\t\t});\n\t}\n\t\n\tzoomToRange(range: number, origin?: number): Promise<void> {\n\t\tvar {scaleFactor, zoom} = this.state.xAxis.range;\n\t\tlet currentRange = this.state.width / (scaleFactor * zoom);\n\t\treturn this.zoom(currentRange / range, origin);\n\t}\n\n\tscrollToEnd(): Promise<void> {\n\t\tlet state = this.state;\n\t\tlet endXVal = this.trendsManager.getEndXVal();\n\t\tlet range = state.xAxis.range;\n\t\tlet scroll = (\n\t\t\tendXVal - this.viewport.pxToValByXAxis(state.width) +\n\t\t\tthis.viewport.pxToValByXAxis(range.padding.end + range.margin.end) -\n\t\t\trange.zeroVal\n\t\t);\n\t\tthis.setState({xAxis: {range: {scroll: scroll}}});\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n\t\t\tsetTimeout(resolve, animationTime);\n\t\t});\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Chart.ts\n **/","import {Chart, IChartState} from \"./Chart\";\nimport {Utils} from \"./Utils\";\nimport {TrendSegmentsManager} from \"./TrendSegmentsManager\";\nimport {EventEmitter} from './EventEmmiter';\nimport {Promise} from './deps/deps';\nimport { TColor } from './Color';\n\nexport interface IPrependPromiseExecutor {\n\t(requestedDataLength: number, resolve: (data: TTrendRawData) => void, reject: () => void): void;\n}\nconst EVENTS = {\n\tCHANGE: 'Change',\n\tPREPEND_REQUEST: 'prependRequest'\n};\nexport enum TREND_TYPE {LINE, CANDLE}\nexport type TTrendRawData = ITrendData | number[];\nexport interface ITrendItem {xVal: number, yVal: number, id?: number}\nexport interface ITrendData extends Array<ITrendItem>{}\nexport interface ITrendTypeSettings {\n\tminSegmentLengthInPx?: number;\n\tmaxSegmentLengthInPx?: number;\n}\nexport interface ITrendOptions {\n\tenabled?: boolean,\n\tdata?: ITrendData\n\tdataset?: ITrendData | number[];\n\tname?: string;\n\ttype?: TREND_TYPE;\n\tlineWidth?: number;\n\tlineColor?: TColor;\n\tbackgroundColor?: TColor;\n\thasIndicator?: boolean;\n\thasBackground?: boolean;\n\thasBeacon?: boolean;\n\tmaxSegmentLength?: number;\n\tsettingsForTypes?: {\n\t\tCANDLE?: ITrendTypeSettings,\n\t\tLINE?: ITrendTypeSettings\n\t}\n}\n\nexport class Trend {\n\tname: string;\n\tsegmentsManager: TrendSegmentsManager;\n\tminXVal = Infinity;\n\tminYVal = Infinity;\n\tmaxXVal = -Infinity;\n\tmaxYVal = -Infinity;\n\tprivate chart: Chart;\n\tprivate calculatedOptions: ITrendOptions;\n\tprivate prependRequest: Promise<TTrendRawData>;\n\tprivate ee: EventEmitter;\n\t\n\tconstructor(chartState: Chart, trendName: string, initialState: IChartState) {\n\t\tvar options = initialState.trends[trendName];\n\t\tthis.name = trendName;\n\t\tthis.chart = chartState;\n\t\tthis.calculatedOptions = Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t\tthis.calculatedOptions.name = trendName;\n\t\tif (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t\tthis.calculatedOptions.dataset = [];\n\t\tthis.ee = new EventEmitter();\n\t\tthis.segmentsManager = new TrendSegmentsManager(this.chart, this);\n\t\tthis.bindEvents();\n\t}\n\n\t// private onInitialStateApplied() {\n\t// \tthis.segmentsManager = new TrendSegmentsManager(this.chart, this);\n\t// }\n\n\tprivate bindEvents() {\n\t\tvar chartState = this.chart;\n\t\t// chart.onInitialStateApplied(() => this.onInitialStateApplied());\n\t\tchartState.onDragStateChanged(() => this.checkForPrependRequest());\n\t\tchartState.onZoom(() => this.checkForPrependRequest());\n\t\tchartState.onTrendChange((trendName, changedOptions, newData) => this.ee.emit(EVENTS.CHANGE, changedOptions, newData));\n\t\tchartState.onDestroy(() => this.ee.removeAllListeners());\n\t}\n\n\tgetCalculatedOptions() {\n\t\treturn this.calculatedOptions;\n\t}\n\n\tappendData(rawData: TTrendRawData) {\n\t\tvar options = this.getOptions();\n\t\tvar newData = Trend.prepareData(rawData, this.getData());\n\t\tvar updatedTrendData = options.data.concat(newData);\n\t\tthis.changeData(updatedTrendData, newData);\n\t}\n\n\tprependData(rawData: TTrendRawData) {\n\t\tvar options = this.getOptions();\n\t\tvar newData = Trend.prepareData(rawData, this.getData(), true);\n\t\tvar updatedTrendData = newData.concat(options.data);\n\t\tthis.changeData(updatedTrendData, newData);\n\t}\n\n\tprivate changeData(allData: ITrendData, newData: ITrendData) {\n\t\tfor (let item of newData) {\n\t\t\tif (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t\t\tif (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t\t\tif (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t\t\tif (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t\t}\n\t\tvar options = this.getOptions();\n\t\tvar statePatch: IChartState = {trends: {[options.name]: {data: allData}}};\n\t\tthis.chart.setState(statePatch, newData);\n\t}\n\t\n\tgetData(fromX?: number, toX?: number): ITrendData {\n\t\tvar data = this.getOptions().data;\n\t\tif (fromX == void 0 && toX == void 0) return data;\n\n\t\tfromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t\ttoX = toX !== void 0 ? toX : data[data.length].xVal;\n\t\tvar filteredData: ITrendData = [];\n\t\tfor (let item of data) {\n\t\t\tif (item.xVal < fromX) continue;\n\t\t\tif (item.xVal > toX) break;\n\t\t\tfilteredData.push(item)\n\t\t}\n\t\treturn filteredData;\n\t}\n\n\tgetFirstItem(): ITrendItem {\n\t\treturn this.getOptions().data[0];\n\t}\n\t\n\tgetLastItem(): ITrendItem {\n\t\tvar data = this.getOptions().data;\n\t\treturn data[data.length - 1];\n\t}\n\n\tgetOptions() {\n\t\treturn this.chart.state.trends[this.name]\n\t}\n\n\tsetOptions(options: ITrendOptions) {\n\t\tthis.chart.setState({trends: {[this.name]: options}});\n\t}\n\n\tonPrependRequest(cb: IPrependPromiseExecutor): Function {\n\t\tthis.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t\treturn () => {\n\t\t\tthis.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t\t}\n\t}\n\n\t/**\n\t * shortcut for Chart.onTrendChange\n\t */\n\tonChange(cb: (changedOptions: ITrendOptions, newData: ITrendData) => void): Function {\n\t\tthis.ee.on(EVENTS.CHANGE, cb);\n\t\treturn () => { this.ee.off(EVENTS.CHANGE, cb);}\n\t}\n\n\tonDataChange(cb: (newData: ITrendData) => void): Function {\n\t\tvar onChangeCb = (changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tif (newData) cb(newData);\n\t\t};\n\t\tthis.ee.on(EVENTS.CHANGE, onChangeCb);\n\t\treturn () => {\n\t\t\tthis.ee.off(EVENTS.CHANGE, onChangeCb);\n\t\t}\n\t}\n\n\tprivate checkForPrependRequest() {\n\t\tif (this.prependRequest) return;\n\t\tvar chartState = this.chart;\n\t\tvar minXVal = chartState.state.computedData.trends.minXVal;\n\t\tvar minScreenX = chartState.viewport.getViewportYByVal(minXVal);\n\t\tvar needToRequest = minScreenX > 0;\n\t\tvar {from, to} = chartState.state.xAxis.range;\n\t\tvar requestedDataLength = to - from;\n\t\tif (!needToRequest) return;\n\t\t\n\t\tthis.prependRequest = new Promise<TTrendRawData>((resolve: Function, reject: Function) => {\n\t\t\tthis.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t\t});\n\n\t\tthis.prependRequest.then((newData: TTrendRawData) => {\n\t\t\tthis.prependData(newData);\n\t\t\tthis.prependRequest = null;\n\t\t}, () => {\n\t\t\tthis.prependRequest = null;\n\t\t})\n\t\n\t}\n\n\tstatic prepareData (newData: TTrendRawData, currentData?: ITrendData, isPrepend = false): ITrendData {\n\t\tvar data: ITrendData = [];\n\t\tif (typeof newData[0] == 'number') {\n\t\t\tcurrentData = currentData || [];\n\t\t\tlet initialItem: ITrendItem;\n\t\t\tlet xVal: number;\n\t\t\tif (isPrepend) {\n\t\t\t\tinitialItem = currentData[0];\n\t\t\t\txVal = initialItem.xVal - newData.length;\n\t\t\t} else {\n\t\t\t\tinitialItem = currentData[currentData.length - 1];\n\t\t\t\txVal = initialItem ? initialItem.xVal + 1 : 0;\n\t\t\t}\n\t\t\tfor (let yVal of newData as number[]) {\n\t\t\t\tdata.push({xVal: xVal, yVal: yVal, id: Utils.getUid()});\n\t\t\t\txVal++;\n\t\t\t}\n\t\t} else {\n\t\t\tdata = newData as ITrendData;\n\t\t}\n\t\treturn data;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Trend.ts\n **/","import { IIteralable } from \"./interfaces\";\nimport { EventEmitter } from './EventEmmiter';\nimport { Chart } from \"./Chart\";\nimport Vector3 = THREE.Vector3;\nimport { ITrendData, ITrendOptions, ITrendItem, Trend, TREND_TYPE, ITrendTypeSettings } from \"./Trend\";\nimport { Utils } from \"./Utils\";\n\nconst MAX_ANIMATED_SEGMENTS = 100;\nconst EVENTS = {\n\tREBUILD: 'rebuild',\n\tDISLPAYED_RANGE_CHANGED: 'displayedRangeChanged',\n\tANIMATION_FRAME: 'animationFrame'\n};\n\n/**\n *  Class helps to display and animate trends segments\n */\nexport class TrendSegmentsManager {\n\tsegmentsById: {[id: string]: TrendSegment} = {};\n\tsegments: TrendSegment[] = [];\n\tchart: Chart;\n\tanimatedSegmentsIds: number[] = [];\n\tmaxSegmentLength: number;\n\tsegmentsLength = 0;\n\tfirstDisplayedSegmentInd: number;\n\tfirstDisplayedSegment: TrendSegment;\n\tlastDisplayedSegmentInd: number;\n\tlastDisplayedSegment: TrendSegment;\n\tprivate appendAnimation: TweenLite;\n\tprivate prependAnimation: TweenLite;\n\tprivate animatedSegmentsForAppend: number[] = [];\n\tprivate animatedSegmentsForPrepend: number[] = [];\n\tprivate nextEmptyId = 0;\n\tprivate startSegmentId = 0;\n\tprivate endSegmentId = 0;\n\tprivate trend: Trend;\n\tprivate ee: EventEmitter;\n\n\t// TODO: make subscriptions array\n\tprivate unbindList: Function[] = [];\n\n\tconstructor (chart: Chart, trend: Trend) {\n\t\tthis.chart = chart;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.trend = trend;\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.trend.onChange((changedOptions, newData) => this.onTrendChangeHandler(changedOptions, newData));\n\t\tthis.unbindList = [\n\t\t\tthis.chart.onInitialStateApplied(() => this.onInitialStateAppliedHandler()),\n\t\t\tthis.chart.onZoom(() => this.onZoomHandler()),\n\t\t\tthis.chart.onScroll(() => this.recalculateDisplayedRange()),\n\t\t\tthis.chart.onDestroy(() => this.onDestroyHandler())\n\t\t]\n\t}\n\n\tprivate unbindEvents() {\n\t\tthis.unbindList.forEach(unbind => unbind())\n\t}\n\n\tprivate onInitialStateAppliedHandler() {\n\t\tthis.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n\t\tthis.tryToRebuildSegments();\n\t}\n\n\tprivate onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t\tthis.unbindEvents();\n\t\tthis.appendAnimation && this.appendAnimation.kill();\n\t\tthis.prependAnimation && this.prependAnimation.kill();\n\t}\n\n\tprivate onZoomHandler() {\n\t\tlet segmentsRebuilded = this.tryToRebuildSegments();\n\t\tif (!segmentsRebuilded) {\n\t\t\tthis.recalculateDisplayedRange()\n\t\t}\n\t}\n\n\tprivate onTrendChangeHandler(changedOptions: ITrendOptions, newData: ITrendData) {\n\t\tvar needToRebuildSegments = (\n\t\t\tchangedOptions.type != void 0 ||\n\t\t\tchangedOptions.maxSegmentLength != void 0\n\t\t);\n\n\n\t\tif (needToRebuildSegments) {\n\t\t\tthis.tryToRebuildSegments(true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!newData) return;\n\n\t\tvar data = this.trend.getData();\n\t\tvar isAppend = (!data.length || data[0].xVal < newData[0].xVal);\n\t\tisAppend ? this.appendData(newData) : this.prependData(newData);\n\t\tthis.recalculateDisplayedRange();\n\t}\n\n\tgetSegment(id: number) {\n\t\treturn this.segmentsById[id];\n\t}\n\n\tgetEndSegment(): TrendSegment {\n\t\treturn this.segmentsById[this.endSegmentId];\n\t}\n\n\tgetStartSegment(): TrendSegment {\n\t\treturn this.segmentsById[this.startSegmentId];\n\t}\n\t\n\tprivate tryToRebuildSegments(force = false): boolean {\n\t\tlet options = this.trend.getOptions();\n\t\tlet trendTypeName = TREND_TYPE[options.type] as string;\n\t\tlet trendTypesSettings =  options.settingsForTypes as IIteralable;\n\t\tlet trendTypeSettings = trendTypesSettings[trendTypeName] as ITrendTypeSettings;\n\t\tlet {\n\t\t\tminSegmentLengthInPx,\n\t\t\tmaxSegmentLengthInPx\n\t\t} = trendTypeSettings;\n\n\t\tlet needToRebuild = this.segments.length === 0 || force;\n\t\tlet segmentLength = this.maxSegmentLength;\n\n\t\t// call toFixed(2) to prevent floating segment error compare\n\t\tlet currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\n\t\tlet currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\n\t\tif (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t\t\tneedToRebuild = true;\n\t\t\tsegmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\n\t\t} else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t\t\tneedToRebuild = true;\n\t\t\tsegmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\n\t\t}\n\n\t\tif (!needToRebuild) return false;\n\n\t\tthis.maxSegmentLength = segmentLength;\n\t\tthis.segmentsById = {};\n\t\tthis.segments = [];\n\t\tthis.nextEmptyId = 0;\n\t\tthis.startSegmentId = 0;\n\t\tthis.endSegmentId = 0;\n\t\tthis.segmentsLength = 0;\n\t\tthis.stopAllAnimations();\n\t\tthis.appendData(null, true);\n\t\tthis.recalculateDisplayedRange(true);\n\t\tthis.ee.emit(EVENTS.REBUILD);\n\t}\n\n\tprivate stopAllAnimations() {\n\t\tthis.animatedSegmentsIds = [];\n\t\tthis.animatedSegmentsForAppend = [];\n\t\tthis.animatedSegmentsForAppend = [];\n\t\tif (this.prependAnimation) this.prependAnimation.kill();\n\t\tif (this.appendAnimation) this.appendAnimation.kill();\n\t}\n\t\n\tprivate recalculateDisplayedRange(segmentsAreRebuilded = false) {\n\t\tvar {from, to} = this.chart.state.xAxis.range;\n\t\tvar {firstDisplayedSegment, lastDisplayedSegment} = this;\n\t\tvar displayedRange = to - from;\n\n\t\tthis.firstDisplayedSegmentInd = Utils.binarySearchClosestInd(this.segments, from - displayedRange, 'startXVal');\n\t\tthis.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t\tthis.lastDisplayedSegmentInd = Utils.binarySearchClosestInd(this.segments, to + displayedRange, 'endXVal');\n\t\tthis.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t\tif (segmentsAreRebuilded) return;\n\n\t\tvar displayedRangeChanged = (\n\t\t\tfirstDisplayedSegment.id !== this.firstDisplayedSegment.id ||\n\t\t\tlastDisplayedSegment.id !== this.lastDisplayedSegment.id\n\t\t);\n\t\tif (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t}\n\n\t// getSegments(fromX?: number, toX?: number): TrendSegment[] {\n\t// \tvar segments = this.segments;\n\t// \tif (fromX == void 0 && toX == void 0) return segments;\n\t// \tfromX = fromX !== void 0 ? fromX : segments[0].startXVal;\n\t// \ttoX = toX !== void 0 ? toX : segments[this.segmentsLength].endXVal;\n\t// \tvar startSegmentInd = Utils.closestBinarySearch(segments, fromX, 'xVal');\n\t// \tvar endSegmentInd = Utils.closestBinarySearch(segments, toX, 'xVal');\n\t// \treturn segments.slice(startSegmentInd, endSegmentInd);\n\t// }\n\n\t/**\n\t * returns array of segments for values array\n\t * values must be sorted!\n\t */\n\tgetSegmentsForXValues(values: number[]): TrendSegment[] {\n\t\tvar valueInd = 0;\n\t\tvar value = values[valueInd];\n\t\tvar lastValueInd = values.length - 1;\n\t\tvar results: TrendSegment[] = [];\n\t\tvar segment = this.getStartSegment();\n\t\tif (!segment.hasValue) return [];\n\t\twhile (segment) {\n\t\t\n\t\t\twhile (value < segment.startXVal) {\n\t\t\t\tresults.push(void 0);\n\t\t\t\tvalue = values[++valueInd];\n\t\t\t}\n\t\t\n\t\t\twhile (value > segment.endXVal) {\n\t\t\t\tsegment = segment.getNext();\n\t\t\t\tif (!segment) break;\n\t\t\t}\n\t\t\n\t\t\tvar valueInPoint = (\n\t\t\t\tsegment.startXVal == value || segment.endXVal == value ||\n\t\t\t\t(segment.startXVal < value && segment.endXVal > value)\n\t\t\t);\n\t\t\tif (valueInPoint) {\n\t\t\t\tresults.push(segment);\n\t\t\t\tvalue = values[++valueInd];\n\t\t\t}\n\t\t\tif (valueInd > lastValueInd) break;\n\t\t}\n\t\treturn results;\n\t}\n\n\tonAnimationFrame(cb: (animationState: TrendSegmentsManager) => void): Function {\n\t\treturn this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t}\n\n\tonRebuild(cb: Function) {\n\t\treturn this.ee.subscribe(EVENTS.REBUILD, cb);\n\t}\n\n\tonDisplayedRangeChanged(cb: Function) {\n\t\treturn this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t}\n\t\n\tallocateNextSegment() {\n\t\tvar id = this.nextEmptyId++;\n\t\tvar segment = new TrendSegment(this, id);\n\t\tvar prevSegment = this.segmentsById[this.endSegmentId];\n\t\tif (prevSegment && prevSegment.hasValue) {\n\t\t\tprevSegment.nextId = id;\n\t\t\tsegment.prevId = prevSegment.id;\n\t\t}\n\t\tthis.endSegmentId = id;\n\t\tthis.segmentsLength++;\n\t\tthis.segmentsById[id] = segment;\n\t\tthis.segments.push(segment);\n\t\treturn segment;\n\t}\n\n\tallocatePrevSegment() {\n\t\tvar id = this.nextEmptyId++;\n\t\tvar segment = new TrendSegment(this, id);\n\t\tvar nextSegment = this.segmentsById[this.startSegmentId];\n\t\tif (nextSegment && nextSegment.hasValue) {\n\t\t\tnextSegment.prevId = id;\n\t\t\tsegment.nextId = nextSegment.id;\n\t\t}\n\t\tthis.startSegmentId = id;\n\t\tthis.segmentsLength++;\n\t\tthis.segmentsById[id] = segment;\n\t\tthis.segments.unshift(segment);\n\t\treturn segment;\n\t}\n\n\tprivate appendData(newData: ITrendData, needRebuildSegments = false) {\n\n\t\t// WARNING: bottleneck method!\n\n\t\t// var t1 = performance.now();\n\t\tvar trendData = this.trend.getData();\n\t\tif (needRebuildSegments) {\n\t\t\tnewData = trendData;\n\t\t\tthis.animatedSegmentsForAppend = [];\n\t\t}\n\n\t\tvar startItemInd = trendData.length - newData.length;\n\t\tvar segment = this.getEndSegment() || this.allocateNextSegment();\n\t\tvar initialSegment = segment.hasValue ? segment : null;\n\t\tvar initialAnimationState = segment.createAnimationState();\n\t\tvar itemInd = 0;\n\t\twhile (itemInd < newData.length) {\n\t\t\tlet item = newData[itemInd];\n\t\t\tlet itemIsInserted = segment.appendItem(item);\n\t\t\tlet isLastItem = itemInd == newData.length - 1;\n\n\t\t\tif (itemIsInserted) {\n\t\t\t\tif (!isLastItem) itemInd++;\n\t\t\t} else {\n\t\t\t\tif (!segment.isCompleted) segment.complete();\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) {\n\t\t\t\tsegment.recalculateItems();\n\t\t\t}\n\n\t\t\tlet segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\n\t\t\tif (segmentIsReadyForAnimate) {\n\t\t\t\tlet id = segment.id;\n\t\t\t\tif (!initialSegment) initialSegment = segment;\n\t\t\t\tif (!initialAnimationState) {\n\t\t\t\t\tinitialAnimationState = initialSegment.createAnimationState();\n\t\t\t\t}\n\n\t\t\t\tsegment.initialAnimationState = Utils.deepMerge({}, initialAnimationState);\n\n\t\t\t\tif (this.animatedSegmentsForAppend.length > 0) {\n\t\t\t\t\tsegment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t\t\t\t\tsegment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t\t\t\t}\n\n\t\t\t\tsegment.currentAnimationState =  Utils.deepMerge({}, initialAnimationState);\n\t\t\t\tsegment.targetAnimationState = segment.createAnimationState();\n\t\t\t\tthis.animatedSegmentsForAppend.push(id);\n\n\t\t\t}\n\n\n\t\t\tif (isLastItem && itemIsInserted) break;\n\t\t\tif (!segment.isCompleted) continue;\n\n\t\t\tsegment = this.allocateNextSegment();\n\t\t\tlet prevItem = trendData[startItemInd + itemInd - 1];\n\t\t\tsegment.appendItem(prevItem);\n\n\t\t}\n\n\t\tvar animationsOptions = this.chart.state.animations;\n\t\tvar time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\n\t\t// var t2 = performance.now();\n\t\t// console.log(t2 - t1);\n\n\t\t// do not create animation if segments was rebuilded\n\t\tif (needRebuildSegments) {\n\t\t\tfor (let segmentId of this.animatedSegmentsForAppend) {\n\t\t\t\tlet segment = this.segmentsById[segmentId];\n\t\t\t\tsegment.currentAnimationState = segment.createAnimationState();\n\t\t\t}\n\t\t\tthis.animatedSegmentsForAppend = [];\n\t\t\treturn;\n\t\t}\n\t\tif (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t\tthis.animate(time);\n\t}\n\n\n\t// TODO: refactor duplicated code from appendData\n\tprivate prependData(newData: ITrendData) {\n\t\tvar trendData = this.trend.getData();\n\t\tvar segment = this.getStartSegment() || this.segmentsById[0];\n\t\tvar initialSegment = segment.hasValue ? segment : null;\n\t\tvar itemInd = newData.length - 1;\n\t\tvar initialAnimationState = segment.createAnimationState();\n\t\twhile (itemInd >= 0) {\n\t\t\tlet item = newData[itemInd];\n\t\t\tlet itemIsInserted = segment.prependItem(item);\n\t\t\tlet isLastItem = itemInd == 0;\n\n\t\t\tif (itemIsInserted) {\n\t\t\t\tif (!isLastItem) itemInd--;\n\t\t\t} else {\n\t\t\t\tif (!segment.isCompleted) segment.complete();\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) {\n\t\t\t\tsegment.recalculateItems();\n\t\t\t}\n\n\t\t\tlet segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\n\t\t\tif (segmentIsReadyForAnimate) {\n\t\t\t\tlet id = segment.id;\n\t\t\t\tif (!initialSegment) initialSegment = segment;\n\t\t\t\tif (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\n\t\t\t\tsegment.initialAnimationState = Utils.deepMerge({}, initialAnimationState);\n\t\t\t\tif (this.animatedSegmentsForPrepend.length > 0) {\n\t\t\t\t\tsegment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t\t\t\t\tsegment.initialAnimationState.endYVal =  initialAnimationState.startYVal;\n\t\t\t\t}\n\n\t\t\t\tsegment.targetAnimationState = segment.createAnimationState();\n\t\t\t\tthis.animatedSegmentsForPrepend.push(id);\n\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) break;\n\t\t\tif (!segment.isCompleted) continue;\n\n\t\t\tsegment = this.allocatePrevSegment();\n\t\t\tlet nextItem = trendData[itemInd + 1];\n\t\t\tsegment.prependItem(nextItem);\n\n\t\t}\n\n\t\tvar animationsOptions = this.chart.state.animations;\n\t\tvar time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\n\t\tif (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t\tthis.animate(time, true);\n\t}\n\n\tprivate animate(time: number, isPrepend = false) {\n\n\t\tvar animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t\tvar animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\n\t\tif ((animation && animation.isActive()) || time == 0) {\n\t\t\tif (animation) animation.kill();\n\t\t\tthis.onAnimationFrameHandler(1, isPrepend);\n\t\t\tanimatedSegmentsIds.length = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar animationsOptions = this.chart.state.animations;\n\t\tvar ease = animationsOptions.trendChangeEase;\n\t\tvar objectToAnimate = {animationValue: 0};\n\t\tanimation = TweenLite.to(objectToAnimate, time, {animationValue: 1, ease});\n\t\tanimation.eventCallback('onUpdate', () => this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend));\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimatedSegmentsIds.length = 0;\n\t\t\tthis.appendAnimation = null;\n\t\t});\n\n\t\tif (isPrepend) {\n\t\t\tthis.prependAnimation = animation;\n\t\t} else {\n\t\t\tthis.appendAnimation = animation;\n\t\t}\n\t}\n\n\tprivate onAnimationFrameHandler(coefficient: number, isPrepend = false) {\n\t\tlet animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t\tfor (let segmentId of animatedSegmentsIds) {\n\t\t\tlet segment = this.segmentsById[segmentId];\n\t\t\tfor (let key in segment.targetAnimationState) {\n\t\t\t\tlet targetValue = segment.targetAnimationState[key] as number;\n\t\t\t\tlet initialValue = segment.initialAnimationState[key] as number;\n\t\t\t\tlet currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t\t\t\tsegment.currentAnimationState[key] = currentValue;\n\t\t\t}\n\t\t}\n\t\tthis.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t\tthis.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t}\n\n}\n\nexport interface ITrendSegmentState extends IIteralable {\n\txVal?: number;\n\tyVal?: number;\n\tstartXVal?: number;\n\tstartYVal?: number;\n\tendXVal?: number;\n\tendYVal?: number;\n\tmaxYVal?: number;\n\tminYVal?: number;\n\tmaxLength?: number;\n}\n\nexport class TrendSegment implements ITrendSegmentState {\n\tid: number;\n\tprevId: number;\n\tnextId: number;\n\thasValue: boolean;\n\txVal: number;\n\tyVal: number;\n\tstartXVal: number;\n\tstartYVal: number;\n\tendXVal: number;\n\tendYVal: number;\n\tmaxYVal: number;\n\tminYVal: number;\n\tisCompleted = false;\n\tmaxLength: number;\n\titems: ITrendItem[] = [];\n\n\tinitialAnimationState: ITrendSegmentState = {};\n\ttargetAnimationState: ITrendSegmentState = {};\n\tcurrentAnimationState: ITrendSegmentState = {};\n\n\tprivate trendSegments: TrendSegmentsManager;\n\t\n\tconstructor(trendPoints: TrendSegmentsManager, id: number) {\n\t\tthis.trendSegments = trendPoints;\n\t\tthis.id = id;\n\t\tthis.maxLength = trendPoints.maxSegmentLength;\n\t}\n\n\tcreateAnimationState(): ITrendSegmentState {\n\t\tvar {\n\t\t\txVal,\n\t\t\tyVal,\n\t\t\tstartXVal,\n\t\t\tstartYVal,\n\t\t\tendXVal,\n\t\t\tendYVal,\n\t\t\tmaxYVal,\n\t\t\tminYVal,\n\t\t\tmaxLength\n\t\t} = this;\n\t\treturn {\n\t\t\txVal,\n\t\t\tyVal,\n\t\t\tstartXVal,\n\t\t\tstartYVal,\n\t\t\tendXVal,\n\t\t\tendYVal,\n\t\t\tmaxYVal,\n\t\t\tminYVal,\n\t\t\tmaxLength\n\t\t}\n\t};\n\t\n\tappendItem(item: ITrendItem): boolean {\n\t\tif (this.isCompleted) return false;\n\n\t\tvar items = this.items;\n\t\tif (items.length < 2) {\n\t\t\tthis.items.push(item);\n\t\t\tthis.hasValue = true;\n\t\t\treturn true;\n\t\t}\n\t\tvar startXVal = items[0].xVal;\n\t\tif (item.xVal - startXVal > this.maxLength) return false;\n\t\titems.push(item);\n\t\treturn true;\n\t}\n\n\tprependItem(item: ITrendItem): boolean {\n\t\tif (this.isCompleted) return false;\n\t\tvar items = this.items;\n\t\tif (items.length < 2) {\n\t\t\tthis.items.unshift(item);\n\t\t\tthis.hasValue = true;\n\t\t\treturn true;\n\t\t}\n\t\tvar endXVal = items[items.length - 1].xVal;\n\t\tif (endXVal - item.xVal > this.maxLength) return false;\n\t\titems.unshift(item);\n\t\treturn true;\n\t}\n\n\tcomplete() {\n\t\tthis.isCompleted = true;\n\t\tthis.recalculateItems();\n\t\tthis.items = []; // free memory for completed ranges\n\t}\n\n\trecalculateItems() {\n\t\tlet items = this.items;\n\t\tlet itemsLength = items.length;\n\t\tif (itemsLength === 0) Utils.error('Unable to create TrendSegment without TrendItems');\n\t\tlet endItem = items[itemsLength - 1];\n\t\tlet {xVal: endXVal, yVal: endYVal} = endItem;\n\t\tlet startXVal: number, startYVal: number;\n\n\n\t\tlet startItem = items[0];\n\t\tstartXVal = startItem.xVal;\n\t\tstartYVal = startItem.yVal;\n\n\t\tlet minX = Math.min(startXVal, endXVal);\n\t\tlet maxX = Math.max(startXVal, endXVal);\n\t\tlet middleXVal = minX + (maxX - minX) / 2;\n\n\t\tlet minY = Math.min(startYVal, endYVal);\n\t\tlet maxY = Math.max(startYVal, endYVal);\n\t\tlet middleYVal = minY + (maxY - minY) / 2;\n\n\t\tlet yVals = items.map(item => item.yVal);\n\n\t\tthis.startXVal = startXVal;\n\t\tthis.startYVal = startYVal;\n\t\tthis.endXVal = endXVal;\n\t\tthis.endYVal = endYVal;\n\t\tthis.xVal = middleXVal;\n\t\tthis.yVal = middleYVal;\n\t\tthis.maxYVal = Math.max(...yVals);\n\t\tthis.minYVal = Math.min(...yVals);\n\t\tthis.currentAnimationState = this.createAnimationState();\n\t}\n\n\tgetNext() {\n\t\tvar nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t\treturn nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t}\n\n\tgetPrev() {\n\t\tvar prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t\treturn prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t}\n\t\n\tgetFrameVal(): Vector3 {\n\t\tlet {xVal, yVal} = this.createAnimationState();\n\t\treturn new Vector3(xVal, yVal, 0);\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TrendSegmentsManager.ts\n **/","\nimport {Trend, ITrendOptions} from \"./Trend\";\nimport {Chart, IChartState} from \"./Chart\";\nimport { EventEmitter } from './EventEmmiter';\n\nexport interface ITrendsOptions {\n\t[trendName: string]: ITrendOptions;\n}\n\nconst EVENTS = {\n\tSEGMENTS_REBUILDED: 'segmentsRebuilded'\n};\n\n/**\n * Trends manager\n */\nexport class TrendsManager {\n\ttrends: {[name: string]: Trend} = {};\n\tcalculatedOptions: ITrendsOptions;\n\tprivate ee = new EventEmitter();\n\tprivate chartState: Chart;\n\t\n\tconstructor(state: Chart, initialState: IChartState) {\n\t\tthis.chartState = state;\n\t\tvar trendsCalculatedOptions: ITrendsOptions = {};\n\t\tfor (let trendName in initialState.trends) {\n\t\t\tlet trend = this.createTrend(state, trendName, initialState);\n\t\t\ttrendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t\t}\n\t\tthis.calculatedOptions = trendsCalculatedOptions;\n\t}\n\n\tgetTrend(trendName: string) {\n\t\treturn this.trends[trendName];\n\t}\n\t\n\tgetEnabledTrends(): Trend[] {\n\t\tvar enabledTrends: Trend[] = [];\n\t\tvar allTrends = this.trends;\n\t\tfor (let trendName in allTrends) {\n\t\t\tlet trend = allTrends[trendName];\n\t\t\ttrend.getOptions().enabled && enabledTrends.push(trend);\n\t\t}\n\t\treturn enabledTrends;\n\t}\n\n\n\tgetStartXVal() {\n\t\tvar trends = this.getEnabledTrends();\n\t\treturn trends[0].getData()[0].xVal;\n\t}\n\n\n\tgetEndXVal(): number {\n\t\tvar trends = this.getEnabledTrends();\n\t\tvar firstTrendData = trends[0].getData();\n\t\treturn firstTrendData[firstTrendData.length - 1].xVal;\n\t}\n\t\n\t\n\tgetExtremumYVal(extremumIsMax: boolean, fromX?: number, toX?: number) {\n\t\tvar trends = this.getEnabledTrends();\n\t\tvar compareFn: Function;\n\t\tvar result: number;\n\t\tif (extremumIsMax) {\n\t\t\tresult = -Infinity;\n\t\t\tcompareFn = Math.max;\n\t\t} else {\n\t\t\tresult = Infinity;\n\t\t\tcompareFn = Math.min;\n\t\t}\n\t\tfor (let trend of trends) {\n\t\t\tvar trendData = trend.getData(fromX, toX);\n\t\t\tvar trendYValues = trendData.map((dataItem) => dataItem.yVal);\n\t\t\tresult = compareFn(result, ...trendYValues);\n\t\t}\n\t\tif (result == Infinity || result == -Infinity) result = NaN;\n\t\treturn result;\n\t}\n\n\tgetMaxYVal(fromX?: number, toX?: number) {return this.getExtremumYVal(true, fromX, toX)}\n\tgetMinYVal(fromX?: number, toX?: number) {return this.getExtremumYVal(false, fromX, toX)}\n\n\tonSegmentsRebuilded(cb: (trendName: string) => any) {\n\t\treturn this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t}\n\n\tprivate createTrend(state: Chart, trendName: string, initialState: IChartState): Trend {\n\t\tlet trend = new Trend(state, trendName, initialState);\n\t\tthis.trends[trendName] = trend;\n\t\ttrend.segmentsManager.onRebuild(() => this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName));\n\t\treturn trend;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TrendsManager.ts\n **/","\nimport { Chart } from \"./Chart\";\n\nexport interface IViewportParams {\n\tscrollXVal?: number,\n\tscrollYVal?: number,\n\tscrollX?: number,\n\tscrollY?: number,\n\tzoomX?: number,\n\tzoomY?: number\n}\n\nexport class Viewport {\n\tparams: IViewportParams = {};\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart) {\n\t\tthis.chart = chart;\n\t\tthis.updateParams();\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.onChange(() => this.updateParams());\n\t}\n\n\tprotected updateParams() {\n\t\tlet state = this.chart.state;\n\t\tthis.params.scrollXVal = state.xAxis.range.scroll;\n\t\tthis.params.scrollYVal = state.yAxis.range.scroll;\n\t\tthis.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\n\t\tthis.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\n\t\tthis.params.zoomX = state.xAxis.range.zoom;\n\t\tthis.params.zoomY = state.yAxis.range.zoom;\n\t}\n\n\tgetCameraSettings() {\n\t\tlet {width, height} = this.chart.state;\n\t\t// move 0,0 to left-bottom corner\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\tright: width,\n\t\t\ttop: height,\n\t\t\tbottom: 0,\n\t\t\tnear: -500,\n\t\t\tfar: 1000\n\t\t}\n\t}\n\n\n\t// get world coordinates\n\tgetWorldXByVal(xVal: number): number {\n\t\tvar {scaleFactor, zeroVal} = this.chart.state.xAxis.range;\n\t\tvar zoom = this.params.zoomX;\n\t\treturn (xVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\tgetWorldYByVal(yVal: number): number {\n\t\tvar {scaleFactor, zeroVal} =  this.chart.state.yAxis.range;\n\t\tvar zoom = this.params.zoomY;\n\t\treturn (yVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\tgetWorldXByViewportX(viewportX: number): number {\n\t\treturn this.getWorldXByVal(this.getValByViewportX(viewportX));\n\t}\n\n\tgetWorldYByViewportY(viewportY: number): number {\n\t\treturn this.getWorldYByVal(this.getValByViewportY(viewportY));\n\t}\n\n\n\t// get value\n\tgetValByWorldX(worldX: number): number {\n\t\treturn this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\n\t}\n\n\tgetValByWorldY(worldY: number): number {\n\t\treturn this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\n\t}\n\n\tgetValByViewportX(x: number): number {\n\t\treturn this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\n\t}\n\n\tgetValByViewportY(y: number): number {\n\t\treturn this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\n\t}\n\n\n\t// get viewport coordinates\n\n\tgetViewportXByVal(xVal: number): number {\n\t\treturn this.getWorldXByVal(xVal) - this.params.scrollX;\n\t}\n\n\tgetViewportYByVal(yVal: number): number {\n\t\treturn this.getWorldYByVal(yVal) - this.params.scrollY;\n\t}\n\n\tgetViewportXByWorldX(worldX: number): number {\n\t\treturn worldX - this.params.scrollX;\n\t}\n\n\n\t// pixels converters\n\n\tvalToPxByXAxis(val: number) {\n\t\treturn val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\n\t}\n\n\tvalToPxByYAxis(val: number) {\n\t\treturn val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\n\t}\n\n\tpxToValByXAxis(pixelsCount: number) {\n\t\treturn pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\n\t}\n\n\tpxToValByYAxis(pixelsCount: number) {\n\t\treturn pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\n\t}\n\n\n\t// get viewport edges\n\n\tgetTop(): number {\n\t\treturn this.params.scrollY + this.chart.state.height;\n\t}\n\n\tgetRight(): number {\n\t\treturn this.params.scrollX + this.chart.state.width;\n\t}\n\n\tgetBottom(): number {\n\t\treturn this.params.scrollY;\n\t}\n\n\tgetLeft(): number {\n\t\treturn this.params.scrollX;\n\t}\n\n\tgetTopVal() {\n\t\treturn this.getValByWorldY(this.getTop());\n\t}\n\n\tgetRightVal() {\n\t\treturn this.getValByWorldX(this.getRight());\n\t}\n\n\tgetBottomVal() {\n\t\treturn this.getValByWorldY(this.getBottom());\n\t}\n\n\tgetLeftVal() {\n\t\treturn this.getValByWorldX(this.getLeft());\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Viewport.ts\n **/","import PerspectiveCamera = THREE.PerspectiveCamera;\nimport Vector3 = THREE.Vector3;\nimport {Chart, IChartState} from \"./Chart\";\nimport { EventEmitter } from './EventEmmiter';\nimport { Animation } from './AnimationManager';\nimport { IViewportParams, Viewport } from \"./Viewport\";\n\n\nexport enum INTERPOLATION_EVENT {\n\tSTARTED,\n\tFINISHED\n}\n\nconst SCREEN_EVENTS = {\n\tZOOM_FRAME: 'zoomFrame',\n\tSCROLL_FRAME: 'scrollFrame',\n\tTRANSFORMATION_FRAME: 'transformationFrame',\n\tTRANSFORMATION_EVENT: 'transformationStateChanged',\n};\n\n/**\n * manage camera, and contains methods for transforming pixels to values\n */\nexport class InterpolatedViewport extends Viewport {\n\tinterpolationInProgress = false;\n\tprivate scrollXAnimation: Animation<number>;\n\tprivate scrollYAnimation: Animation<number>;\n\tprivate zoomXAnimation: Animation<number>;\n\tprivate zoomYAnimation: Animation<number>;\n\tprivate ee: EventEmitter;\n\n\tconstructor(chart: Chart) {\n\t\tsuper(chart);\n\t\tvar {width: w, height: h} = chart.state;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.setParams(chart.viewport.params);\n\t}\n\n\tonZoomInterpolation(cb: (zoomX: number, zoomY: number) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t}\n\n\tonScrollInterpolation(cb: (options: IViewportParams) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t}\n\n\tonInterpolation(cb: (options: IViewportParams) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t}\n\n\tonInterpolationEvent(cb: (event: INTERPOLATION_EVENT) => any): Function {\n\t\treturn this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n\t}\n\n\tcameraIsMoving(): boolean {\n\t\treturn !!(\n\t\t\tthis.scrollXAnimation && !this.scrollXAnimation.isFinished ||\n\t\t\t\tthis.zoomXAnimation && !this.zoomXAnimation.isFinished\n\t\t);\n\t}\n\n\t/**\n\t * setup zoom and scroll\n\t */\n\tprivate setParams(options: IViewportParams, silent = false) {\n\t\tvar {scrollX, scrollY, zoomX, zoomY} = options;\n\t\t\n\t\tif (scrollX != void 0) this.params.scrollX = scrollX;\n\t\tif (scrollY != void 0) this.params.scrollY = scrollY;\n\t\tif (zoomX != void 0) this.params.zoomX = zoomX;\n\t\tif (zoomY != void 0) this.params.zoomY = zoomY;\n\n\t\tif (scrollX != void 0 || zoomX) {\n\t\t\toptions.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\n\t\t\tthis.params.scrollXVal = options.scrollXVal;\n\t\t}\n\n\t\tif (scrollY != void 0 || zoomY) {\n\t\t\toptions.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\n\t\t\tthis.params.scrollYVal = options.scrollYVal;\n\t\t}\n\n\t\tif (silent) return;\n\n\t\tlet hasActiveAnimations = (\n\t\t\t(this.scrollXAnimation && !this.scrollXAnimation.isStopped) ||\n\t\t\t(this.scrollYAnimation && !this.scrollYAnimation.isStopped) ||\n\t\t\t(this.zoomXAnimation && !this.zoomXAnimation.isStopped) ||\n\t\t\t(this.zoomYAnimation && !this.zoomYAnimation.isStopped)\n\t\t);\n\t\tlet interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\n\t\tlet interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\n\n\t\tif (interpolationStarted) {\n\t\t\tthis.interpolationInProgress = true;\n\t\t\tthis.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\n\t\t}\n\n\t\tif (interpolationFinished) {\n\t\t\tthis.interpolationInProgress = false;\n\t\t}\n\n\t\tif (!this.interpolationInProgress) {\n\t\t\t// prevent to set camera between pixels\n\t\t\tthis.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\n\t\t\tthis.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\n\t\t}\n\n\t\tthis.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\n\t\tlet scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t\tif (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\n\t\tlet zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t\tif (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\n\t\tif (interpolationFinished) {\n\t\t\tthis.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\n\t\t}\n\t}\n\n\n\tprotected bindEvents() {\n\t\tvar state = this.chart;\n\n\t\t// handle scroll and zoom\n\t\tstate.onChange((changedProps) => {\n\t\t\tif (changedProps.xAxis && changedProps.xAxis.range) {\n\t\t\t\tif (changedProps.xAxis.range.scroll != void 0) this.onScrollXHandler(changedProps);\n\t\t\t\tif (changedProps.xAxis.range.zoom) this.onZoomXHandler();\n\t\t\t}\n\t\t\tif (changedProps.yAxis && changedProps.yAxis.range){\n\t\t\t\tif (changedProps.yAxis.range.scroll != void 0) this.onScrollYHandler();\n\t\t\t\tif (changedProps.yAxis.range.zoom) this.onZoomYHandler();\n\t\t\t}\n\t\t});\n\t\tstate.onDestroy(() => this.onDestroyHandler());\n\t}\n\n\tprivate onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t}\n\n\tprivate onScrollXHandler(changedProps: IChartState) {\n\t\tlet chart = this.chart;\n\t\tlet isDragMode = chart.state.cursor.dragMode;\n\t\tlet animations =  chart.state.animations;\n\t\tlet zoomXChanged = changedProps.xAxis.range.zoom;\n\t\tlet isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t\tlet time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t\tlet ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t\tlet range = chart.state.xAxis.range;\n\t\tlet targetX = range.scroll * range.scaleFactor * range.zoom;\n\t\tif (isDragMode && !chart.state.inertialScroll) time = 0;\n\n\t\tif (this.scrollXAnimation) this.scrollXAnimation.stop();\n\n\t\tthis.scrollXAnimation = chart.animationManager.animate(time, ease)\n\t\t\t.from(this.params.scrollX)\n\t\t\t.to(targetX)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({scrollX: value});\n\t\t\t});\n\t}\n\n\tprivate onScrollYHandler() {\n\t\tlet chart = this.chart;\n\t\tlet animations =  chart.state.animations;\n\t\tlet range = chart.state.yAxis.range;\n\t\tlet targetY = range.scroll * range.scaleFactor * range.zoom;\n\n\t\tif (this.scrollYAnimation) this.scrollYAnimation.stop();\n\n\t\tthis.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase)\n\t\t\t.from(this.params.scrollY)\n\t\t\t.to(targetY)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({scrollY: value});\n\t\t\t});\n\t}\n\n\n\tprivate onZoomXHandler() {\n\t\tlet chart = this.chart;\n\t\tlet animations =  chart.state.animations;\n\t\tlet targetZoom = chart.state.xAxis.range.zoom;\n\t\tif (this.zoomXAnimation) this.zoomXAnimation.stop();\n\n\t\tthis.zoomXAnimation = chart.animationManager\n\t\t\t.animate(animations.zoomSpeed, animations.zoomEase)\n\t\t\t.from(this.params.zoomX)\n\t\t\t.to(targetZoom)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({zoomX: value});\n\t\t\t});\n\t}\n\n\n\tprivate onZoomYHandler() {\n\t\tlet chart = this.chart;\n\t\tlet targetZoom = chart.state.yAxis.range.zoom;\n\t\tlet animations =  chart.state.animations;\n\t\tif (this.zoomYAnimation) this.zoomYAnimation.stop();\n\n\t\tthis.zoomYAnimation = chart.animationManager\n\t\t\t.animate(animations.zoomSpeed, animations.zoomEase)\n\t\t\t.from(this.params.zoomY)\n\t\t\t.to(targetZoom)\n\t\t\t.onTick((value) => {\n\t\t\t\tthis.setParams({zoomY: value});\n\t\t\t});\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/InterpolatedViewport.ts\n **/","import { IIteralable } from './interfaces';\nimport { EASING } from  './Easing';\n\n// TODO: transfer AnimationManager to own repo\nexport class AnimationManager {\n\n\tisAnimationsEnabled = true;\n\tprivate animations: Animation<any>[] = [];\n\tprivate lastTickTime: number;\n\n\tconstructor() {\n\t\tthis.lastTickTime = Date.now();\n\t}\n\n\tanimate(time: number, timingFunction?: (progress: number) => number): Animation<IIteralable|number> {\n\t\tlet animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t\tthis.animations.push(animation);\n\t\treturn animation;\n\t}\n\n\tanimateObj(source: IIteralable, target: IIteralable, ) {\n\n\t}\n\n\tsetAimationsEnabled(isEnabled: boolean) {\n\t\tthis.isAnimationsEnabled = isEnabled;\n\t}\n\n\ttick() {\n\t\tlet now = Date.now();\n\t\tlet animations = this.animations;\n\n\t\t// call tick for each animation\n\t\tfor (let i = 0; i < animations.length; i++) {\n\t\t\tlet animation = animations[i];\n\t\t\tif (this.isAnimationsEnabled) {\n\t\t\t\tanimation.tick(now);\n\t\t\t} else {\n\t\t\t\tanimation.completeAndStop();\n\t\t\t}\n\t\t}\n\n\t\t// cleanup completed animations\n\t\tlet i = animations.length;\n\t\twhile (i--) if (animations[i].isStopped) animations.splice(i, 1);\n\n\t\tthis.lastTickTime = now;\n\t}\n\n\thasActiveAnimations(): boolean {\n\t\treturn this.animations.length > 0;\n\t}\n\n}\n\nexport class Animation<AnimatedObjectType> {\n\n\tprogress = 0;\n\tdelay = 0;\n\tisFinished = false;\n\tisStopped = false;\n\tinitialObj: AnimatedObjectType;\n\tsourceObj: AnimatedObjectType;\n\ttargetObject: AnimatedObjectType;\n\tstartTime: number;\n\tprivate onFinishCb: (source: AnimatedObjectType, animation: this) => any;\n\tprivate onTickCb: (source: AnimatedObjectType, progress: number, k: number, animation: this) => any;\n\n\tconstructor(\n\t\tprivate animationManager: AnimationManager,\n\t\tpublic time: number,\n\t\tprivate createdTime: number,\n\t\tpublic easing: (k: number) => any = EASING.Quadratic.Out)\n\t{\n\t\tthis.startTime = createdTime;\n\t}\n\n\ttick(now: number) {\n\t\tif (!this.isStopped) {\n\t\t\tlet progress = this.time > 0 ? ((now - this.startTime) / this.time) : 1;\n\t\t\tthis.setProgress(progress);\n\t\t}\n\t}\n\n\tfrom<T>(sourceObj: T): Animation<T> {\n\t\tif (typeof sourceObj == 'object') {\n\t\t\tthis.sourceObj = sourceObj as any;\n\t\t\tthis.initialObj = {} as any;\n\t\t\tlet sourceIteralable = sourceObj as IIteralable;\n\t\t\tfor (let key in sourceIteralable) if (typeof sourceIteralable[key] == 'number') {\n\t\t\t\t(this.initialObj as IIteralable)[key] = sourceIteralable[key];\n\t\t\t}\n\n\t\t} else if (typeof sourceObj == 'number') {\n\t\t\tthis.sourceObj = sourceObj;\n\t\t\tthis.initialObj = sourceObj;\n\t\t}\n\t\treturn (this as any) as Animation<T>;\n\t}\n\n\tto(targetObj: AnimatedObjectType): this {\n\t\tthis.targetObject = targetObj;\n\n\t\t// clear unused fields\n\t\tif (typeof this.initialObj == 'object') {\n\n\t\t\tlet initialIteralable = this.initialObj as IIteralable;\n\t\t\tfor (let key in this.targetObject) {\n\t\t\t\tif (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t\t\t}\n\n\t\t\tlet targetIteralable = this.targetObject as IIteralable;\n\t\t\tfor (let key in initialIteralable) {\n\t\t\t\tif (targetIteralable[key] == void 0) delete initialIteralable[key];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tonTick(onTickCb: (source: AnimatedObjectType, progress: number, k: number, animation: this) => any): this {\n\t\tthis.onTickCb = onTickCb;\n\t\treturn this;\n\t}\n\n\tthen(onFinishCb: (progress: AnimatedObjectType) => any): this {\n\t\tthis.onFinishCb = onFinishCb;\n\t\treturn this;\n\t}\n\n\tstop() {\n\t\tthis.isStopped = true;\n\t}\n\n\tcompleteAndStop() {\n\t\tthis.setProgress(1);\n\t}\n\n\twithDelay(delay: number): this {\n\t\tthis.delay = delay;\n\t\tthis.startTime = this.createdTime + delay;\n\t\treturn this;\n\t}\n\n\tprivate setProgress(progress: number) {\n\n\t\tif (progress < 0) return;\n\n\t\tprogress = Math.min(progress, 1);\n\t\tthis.progress = progress;\n\t\tlet k = this.easing(progress);\n\n\t\tif (typeof this.sourceObj == 'number') {\n\t\t\tlet initialVal = this.initialObj as any as number;\n\t\t\tlet targetVal = this.targetObject as any as number;\n\t\t\tthis.sourceObj = (initialVal + (targetVal - initialVal) * k) as any as AnimatedObjectType;\n\t\t} else if (this.sourceObj && this.targetObject) {\n\t\t\tfor (let key in this.initialObj) {\n\t\t\t\tlet initialVal = (this.initialObj as IIteralable)[key] as number;\n\t\t\t\tlet targetVal = (this.targetObject as IIteralable)[key] as number;\n\t\t\t\t(this.sourceObj as IIteralable)[key] = initialVal + (targetVal - initialVal) * k;\n\t\t\t}\n\t\t}\n\n\n\t\tif (progress == 1) {\n\t\t\tthis.isStopped = true;\n\t\t\tthis.isFinished = true;\n\t\t}\n\n\t\tif (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n\n\t\tif (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/AnimationManager.ts\n **/","export declare type TEase = (k: number) => number;\n\n/**\n * Easing from tween.js lib https://github.com/tweenjs/tween.js\n **/\nexport const EASING = {\n\n\tLinear: {\n\n\t\tNone: function (k: number) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - EASING.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn EASING.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Easing.ts\n **/","\n\n/**\n * defines how axis range will be calculated\n * FIXED - directly use range.from and range.to xVal\n * AUTO - automatically sets range.from and range.to by visible part of opposite axis\n * RELATIVE_END - same as AUTO, but trend end always present in range\n * ALL - automatically sets range.from and range.to by all values of opposite axis\n *\n */\nimport {TColor} from \"./Color\";\nimport { TEase } from \"./Easing\";\nimport Vector3 = THREE.Vector3;\nimport Vector = THREE.Vector;\nexport enum AXIS_RANGE_TYPE {\n\tFIXED,\n\tRELATIVE_END,\n\tAUTO,\n\tALL // TODO: AXIS_RANGE_TYPE.ALL\n}\n\n/**\n * Animation ease type\n */\nexport declare type TTwinEase = Ease | Linear;\n\nexport declare type TIteralable = {[key: string]: any};\nexport interface IIteralable {[key: string]: any};\n\nexport enum AXIS_TYPE {X, Y}\n\nexport interface IAxisRange {\n\ttype?: AXIS_RANGE_TYPE,\n\tfrom?: number,\n\tto?: number,\n\tzoom?: number,\n\n\t/**\n\t * scroll value\n\t */\n\tscroll?: number,\n\n\t/**\n\t * Mode only for Y axis. When true displayed center of Y axis never changed. To use set range.zeroVal as center value.\n\t */\n\tisMirrorMode?: boolean,\n\n\tpadding?: {\n\t\tstart?: number,\n\t\tend?: number\n\t},\n\n\tmargin?: {\n\t\tstart?: number,\n\t\tend?: number\n\t},\n\n\tmaxLength?: number;\n\tminLength?: number;\n\n\t/**\n\t * value in world center coordinate\n\t */\n\tzeroVal?: number,\n\n\t/**\n\t * ratio between 1 pixel and 1 value for zoom = 1\n\t */\n\tscaleFactor?: number,\n}\n\nexport enum AXIS_DATA_TYPE {NUMBER, DATE}\n\nexport interface IAxisOptions {\n\trange?: IAxisRange;\n\tdataType?: AXIS_DATA_TYPE;\n\tautoScroll?: boolean;\n\tgrid?: IGridOptions;\n\tcolor?: TColor;\n}\n\nexport interface IGridOptions {\n\tenabled: boolean;\n\tminSizePx?: number;\n\tcolor?: TColor;\n}\n\nexport interface IAnimationsOptions {\n\tenabled?: boolean,\n\ttrendChangeSpeed?: number,\n\ttrendChangeEase?: TTwinEase,\n\tscrollSpeed?: number,\n\tscrollEase?: TEase,\n\tautoScrollSpeed?: number,\n\tautoScrollEase?: TEase,\n\tzoomSpeed?: number,\n\tzoomEase?: TEase,\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/interfaces.ts\n **/","import {Chart} from \"./Chart\";\nimport Object3D = THREE.Object3D;\n\nexport interface IChartWidgetConstructor {\n\tnew (): ChartWidget;\n\twidgetName: string;\n}\n\n/**\n * base class for all widgets\n * each widget must have widgetName static property\n */\nexport abstract class ChartWidget {\n\tstatic widgetName = '';\n\tprotected chart: Chart;\n\tprivate unbindList: Function[] = [];\n\n\n\tsetupChart(chart: Chart) {\n\t\tthis.chart = chart;\n\t}\n\n\tabstract onReadyHandler(): any;\n\tabstract getObject3D(): Object3D;\n\n\n\tprotected bindEvent(...args: Array<Function | Function[]>): void {\n\t\tlet unbindList: Function[] = [];\n\t\tif (!Array.isArray(args[0])) {\n\t\t\tunbindList.push(args[0] as Function);\n\t\t} else {\n\t\t\tunbindList.push(...args as Function[]);\n\t\t}\n\t\tthis.unbindList.push(...unbindList);\n\t}\n\tprotected unbindEvents() {\n\t\tthis.unbindList.forEach(unbindEvent => unbindEvent());\n\t\tthis.unbindList.length = 0;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Widget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport UVMapping = THREE.UVMapping;\nimport GridHelper = THREE.GridHelper;\nimport {ChartWidget} from \"../Widget\";\nimport {Chart} from \"../Chart\";\nimport {GridWidget, IGridParamsForAxis} from \"./GridWidget\";\nimport {Utils} from \"../Utils\";\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport OrthographicCamera = THREE.OrthographicCamera;\nimport {IViewportParams} from \"../Viewport\";\nimport {AXIS_TYPE, AXIS_DATA_TYPE, IAxisOptions} from \"../interfaces\";\nimport { Color } from \"../Color\";\n\n/**\n * widget for drawing axis\n */\nexport class AxisWidget extends ChartWidget {\n\tstatic widgetName = 'Axis';\n\tprivate isDestroyed = false;\n\tprivate object3D: Object3D;\n\tprivate axisXObject: Object3D;\n\tprivate axisYObject: Object3D;\n\tprivate updateAxisXRequest: () => void;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisXObject = new Object3D();\n\t\tthis.axisYObject = new Object3D();\n\t\tthis.object3D.add(this.axisXObject);\n\t\tthis.object3D.add(this.axisYObject);\n\t\tthis.setupAxis(AXIS_TYPE.X);\n\t\tthis.setupAxis(AXIS_TYPE.Y);\n\n\t\t// canvas drawing is expensive operation, so when we scroll, redraw must be called only once per second\n\t\tthis.updateAxisXRequest = Utils.throttle(() => this.updateAxis(AXIS_TYPE.X), 1000);\n\n\t\tthis.onScrollChange(\n\t\t\tthis.chart.interpolatedViewport.params.scrollX,\n\t\t\tthis.chart.interpolatedViewport.params.scrollY\n\t\t);\n\t\tthis.bindEvents();\n\t}\n\n\tbindEvents() {\n\t\tvar state = this.chart;\n\n\t\tthis.bindEvent(\n\t\t\tstate.interpolatedViewport.onInterpolation((options) => {\n\t\t\t\tthis.onScrollChange(options.scrollX, options.scrollY);\n\t\t\t}),\n\t\t\tstate.interpolatedViewport.onZoomInterpolation((options) => {this.onZoomFrame(options)}),\n\t\t\tstate.onDestroy(() => this.onDestroy()),\n\t\t\tstate.onResize(() => this.onResize())\n\t\t);\n\t}\n\n\tprivate onDestroy() {\n\t\tthis.isDestroyed = true;\n\t\tthis.unbindEvents();\n\t}\n\n\tprivate onScrollChange(x: number, y: number) {\n\n\t\tif (y != void 0) {\n\t\t\tthis.axisYObject.position.y = y;\n\t\t\tthis.axisXObject.position.y = y;\n\t\t}\n\n\t\tif (x != void 0) {\n\t\t\tthis.axisYObject.position.x = x;\n\t\t\tthis.updateAxisXRequest();\n\t\t}\n\n\t}\n\n\tprivate onResize() {\n\t\tthis.setupAxis(AXIS_TYPE.X);\n\t\tthis.setupAxis(AXIS_TYPE.Y);\n\t}\n\n\tprivate setupAxis(orientation: AXIS_TYPE) {\n\n\t\tlet isXAxis = orientation == AXIS_TYPE.X;\n\t\tlet {width: visibleWidth, height: visibleHeight} = this.chart.state;\n\t\tlet canvasWidth = 0, canvasHeight = 0;\n\t\tlet axisOptions: IAxisOptions;\n\n\t\t// clean meshes\n\t\tif (isXAxis) {\n\t\t\tthis.axisXObject.traverse(obj => this.axisXObject.remove(obj));\n\t\t\tcanvasWidth = visibleWidth * 3;\n\t\t\tcanvasHeight = 50;\n\t\t\taxisOptions = this.chart.state.xAxis;\n\t\t} else {\n\t\t\tthis.axisYObject.traverse(obj => this.axisYObject.remove(obj));\n\t\t\tcanvasWidth = 50;\n\t\t\tcanvasHeight = visibleHeight * 3;\n\t\t\taxisOptions = this.chart.state.yAxis;\n\t\t}\n\n\t\tvar texture = Utils.createNearestTexture(canvasWidth, canvasHeight, (ctx) => {\n\t\t\tlet color = new Color(axisOptions.color);\n\t\t\tctx.beginPath();\n\t\t\tctx.font = this.chart.state.font.m;\n\t\t\tctx.fillStyle = color.rgbaStr;\n\t\t\tctx.strokeStyle = color.rgbaStr;\n\t\t});\n\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.DoubleSide} );\n\t\tmaterial.transparent = true;\n\n\t\t//var material = new THREE.MeshBasicMaterial( {color: 0xFF00FF, side: THREE.DoubleSide} );\n\n\n\t\tvar axisMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(canvasWidth, canvasHeight),\n\t\t\tmaterial\n\t\t);\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t\t\tthis.axisXObject.add(axisMesh);\n\t\t} else {\n\t\t\taxisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t\t\tthis.axisYObject.add(axisMesh);\n\t\t}\n\n\t\tthis.updateAxis(orientation);\n\n\t}\n\t\n\tgetObject3D(): Object3D {\n\t\treturn this.object3D;\n\t}\n\n\tprivate updateAxis(orientation: AXIS_TYPE) {\n\t\tif (this.isDestroyed) return;\n\t\tvar isXAxis = orientation == AXIS_TYPE.X;\n\t\tvar {width: visibleWidth, height: visibleHeight} = this.chart.state;\n\t\tvar {scrollX, scrollY, zoomX, zoomY} = this.chart.interpolatedViewport.params;\n\t\tvar axisOptions: IAxisOptions;\n\t\tvar axisMesh: Mesh;\n\t\tvar axisGridParams: IGridParamsForAxis;\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh = this.axisXObject.children[0] as Mesh;\n\t\t\taxisOptions = this.chart.state.xAxis;\n\t\t\taxisGridParams = GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t\t} else {\n\t\t\taxisMesh = this.axisYObject.children[0] as Mesh;\n\t\t\taxisOptions = this.chart.state.yAxis;\n\t\t\taxisGridParams = GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t\t}\n\n\t\tvar geometry = axisMesh.geometry as PlaneGeometry;\n\t\tvar canvasWidth = geometry.parameters.width;\n\t\tvar canvasHeight = geometry.parameters.height;\n\t\tif (isXAxis) {\n\t\t\taxisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t\t}\n\n\t\tvar texture = (axisMesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n\n\n\n\t\t// TODO: draw text and lines in different loops\n\t\tvar edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t\tvar startVal = axisGridParams.start  - edgeOffset;\n\t\tvar endVal = axisGridParams.end + edgeOffset;\n\n\t\tctx.beginPath();\n\t\tfor (let val = startVal; val <= endVal; val += axisGridParams.step) {\n\t\t\tlet displayedValue = '';\n\t\t\tif (isXAxis) {\n\t\t\t\tlet pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\t// uncomment for dots\n\t\t\t\t// ctx.moveTo(pxVal + 0.5, canvasHeight);\n\t\t\t\t// ctx.lineTo(pxVal + 0.5, canvasHeight - 5);\n\t\t\t\tif (axisOptions.dataType == AXIS_DATA_TYPE.DATE) {\n\t\t\t\t\tdisplayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t\t\t\t} else {\n\t\t\t\t\tdisplayedValue = Number(val.toFixed(14)).toString();\n\t\t\t\t}\n\n\t\t\t\tctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t\t\t} else {\n\t\t\t\tlet pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\n\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t// uncomment for dots\n\t\t\t\t// ctx.moveTo(canvasWidth, pxVal + 0.5);\n\t\t\t\t// ctx.lineTo(canvasWidth - 5, pxVal + 0.5);\n\n\t\t\t\tdisplayedValue = Number(val.toFixed(14)).toString();\n\t\t\t\tctx.fillText(displayedValue, canvasWidth - 15 , pxVal + 3);\n\n\t\t\t\t// uncomment for left-side axis\n\t\t\t\t// ctx.moveTo(0, pxVal + 0.5);\n\t\t\t\t// ctx.lineTo(5, pxVal + 0.5);\n\t\t\t\t// ctx.fillText(Number(val.toFixed(14)).toString(), 15 , pxVal + 3);\n\t\t\t}\n\t\t\tctx.stroke();\n\t\t}\n\t\t// uncomment to preview canvas borders\n\t\t// ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate onZoomFrame(options: IViewportParams) {\n\t\tif (options.zoomX) {\n\t\t\tthis.updateAxis(AXIS_TYPE.X);\n\t\t\t//this.temporaryHideAxis(AXIS_ORIENTATION.H)\n\t\t}\n\t\tif (options.zoomY) {\n\t\t\tthis.updateAxis(AXIS_TYPE.Y);\n\t\t\t//this.temporaryHideAxis(AXIS_ORIENTATION.V)\n\t\t}\n\t}\n\n\t// private temporaryHideAxis(orientation: AXIS_TYPE) {\n\t// \tvar isXAxis = orientation == AXIS_TYPE.X;\n\t// \tvar timeoutId = setTimeout(() => {\n\t// \t\t\tthis.showAxis(orientation);\n\t// \t}, 200);\n\t//\n\t// \tif (isXAxis) {\n\t// \t\t(this.axisXObject.children[0] as Mesh).material.opacity = 0;\n\t// \t\tclearTimeout(this.showAxisXTimeout);\n\t// \t\tthis.showAxisXTimeout =\ttimeoutId;\n\t// \t} else {\n\t// \t\tclearTimeout(this.showAxisYTimeout);\n\t// \t\t(this.axisYObject.children[0] as Mesh).material.opacity = 0;\n\t// \t\tthis.showAxisYTimeout = timeoutId;\n\t// \t}\n\t// }\n\n\t// private showAxis(orientation: AXIS_TYPE) {\n\t// \tvar isXAxis = orientation == AXIS_TYPE.X;\n\t// \tvar material: MeshBasicMaterial;\n\t// \tif (isXAxis) {\n\t// \t\tmaterial = (this.axisXObject.children[0] as Mesh).material as MeshBasicMaterial;\n\t// \t} else {\n\t// \t\tmaterial = (this.axisYObject.children[0] as Mesh).material as MeshBasicMaterial;\n\t// \t}\n\t// \tthis.updateAxis(orientation);\n\t// \tTweenLite.to(material, 0.3, {opacity: 1});\n\t// }\n\n\tstatic getDateStr(timestamp: number, gridParams: IGridParamsForAxis): string {\n\t\tvar sec = 1000;\n\t\tvar min = sec * 60;\n\t\tvar hour = min * 60;\n\t\tvar day = hour * 60;\n\t\tvar step = gridParams.step;\n\t\tvar d = new Date(timestamp);\n\t\tvar tf = (num: number) => Utils.toFixed(num, 2);\n\t\treturn tf(d.getHours()) + ':' + tf(d.getMinutes()) + ':' + tf(d.getSeconds());\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/AxisWidget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport { ChartWidget } from \"../Widget\";\nimport LineSegments = THREE.LineSegments;\nimport { Utils } from \"../Utils\";\nimport { IViewportParams } from \"../Viewport\";\nimport { IAxisOptions } from \"../interfaces\";\nimport { Color } from \"../Color\";\n\nexport interface IGridParamsForAxis {\n\tstart: number,\n\tend: number,\n\tstep: number,\n\tstepInPx: number,\n\tlength: number,\n\tsegmentsCount: number\n}\n\n/**\n * widget for drawing state grid\n */\nexport class GridWidget extends ChartWidget{\n\tstatic widgetName = 'Grid';\n\tprivate lineSegments: LineSegments;\n\tprivate gridSizeH: number;\n\tprivate gridSizeV: number;\n\tprivate isDestroyed = false;\n\n\tonReadyHandler() {\n\t\tvar {width, height, xAxis, yAxis} = this.chart.state;\n\t\tthis.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t\tthis.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t\tthis.initGrid();\n\t\tthis.updateGrid();\n\t\tthis.bindEvents();\n\t}\n\n\tbindEvents() {\n\t\t// grid is bigger then interpolatedViewport, so it's no need to update it on each scroll event\n\t\tlet updateGridThrottled = Utils.throttle(() => this.updateGrid(), 1000);\n\t\tthis.bindEvent(this.chart.onScroll(() => updateGridThrottled()),\n\t\t\tthis.chart.interpolatedViewport.onZoomInterpolation((options) => {\n\t\t\t\tupdateGridThrottled();\n\t\t\t\tthis.onZoomFrame(options);\n\t\t\t}),\n\t\t\tthis.chart.onDestroy(() => {\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t\tthis.unbindEvents();\n\t\t\t}),\n\t\t\tthis.chart.onResize(() => {\n\t\t\t\tthis.updateGrid();\n\t\t\t})\n\t\t);\n\n\t}\n\n\tprivate initGrid() {\n\t\tlet color = new Color(this.chart.state.xAxis.grid.color);\n\t\tlet geometry = new THREE.Geometry();\n\t\tlet material = new THREE.LineBasicMaterial({linewidth: 1, color: color.value, opacity: color.a, transparent: true});\n\t\tlet xLinesCount = this.gridSizeH;\n\t\tlet yLinesCount = this.gridSizeV;\n\t\twhile (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t\twhile (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t\tthis.lineSegments = new LineSegments(geometry, material);\n\t\tthis.lineSegments.position.setZ(-1);\n\t\tthis.lineSegments.frustumCulled = false;\n\t}\n\n\tprivate updateGrid() {\n\t\tif (this.isDestroyed) return;\n\t\tvar {yAxis, xAxis, width, height} = this.chart.state;\n\t\tvar axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t\tvar axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t\tvar scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t\tvar scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t\tvar gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t\tvar gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t\tvar startXVal = axisXGrid.start + gridScrollXVal;\n\t\tvar startYVal = axisYGrid.start + gridScrollYVal;\n\t\tvar geometry = this.lineSegments.geometry as Geometry;\n\t\tvar vertices = geometry.vertices;\n\t\tvar lineInd = 0;\n\n\t\tfor (let i =  -this.gridSizeH / 3; i < this.gridSizeH * 2/3; i++) {\n\t\t\tlet value = startXVal + i * axisXGrid.step;\n\t\t\tlet lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t\t\tvertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t\t\tvertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t\t\tlineInd++;\n\t\t}\n\n\t\tfor (let i =  -this.gridSizeV / 3; i < this.gridSizeV * 2/3; i++) {\n\t\t\tlet value = startYVal + i * axisYGrid.step;\n\t\t\tlet lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t\t\tvertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t\t\tvertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t\t\tlineInd++;\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tthis.lineSegments.scale.set(\n\t\t\txAxis.range.scaleFactor * xAxis.range.zoom,\n\t\t\tyAxis.range.scaleFactor * yAxis.range.zoom,\n\t\t\t1\n\t\t)\n\t}\n\n\tprivate getHorizontalLineSegment(yVal: number, scrollXVal: number, scrollYVal: number): Vector3[] {\n\t\tvar chartState = this.chart;\n\t\tvar localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t\tvar widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\n\t\treturn [\n\t\t\tnew THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0 ),\n\t\t\tnew THREE.Vector3( -widthVal + scrollXVal, localYVal, 0 )\n\t\t];\n\t}\n\n\tprivate getVerticalLineSegment(xVal: number, scrollXVal: number, scrollYVal: number): Vector3[] {\n\t\tlet chart = this.chart;\n\t\tlet localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\n\t\tlet heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\n\t\treturn [\n\t\t\tnew THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0 ),\n\t\t\tnew THREE.Vector3(localXVal, -heightVal + scrollYVal, 0 )\n\t\t];\n\t}\n\n\tprivate onZoomFrame(options: IViewportParams) {\n\t\tvar {xAxis, yAxis} = this.chart.state;\n\t\tif (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t\tif (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t}\n\n\n\t// TODO: move this code to core\n\tstatic getGridParamsForAxis(axisOptions: IAxisOptions, axisWidth: number, zoom: number): IGridParamsForAxis {\n\t\tlet axisRange = axisOptions.range;\n\t\tlet from = axisRange.from;\n\t\tlet to = axisRange.to;\n\t\tlet axisLength = to - from;\n\t\tlet gridStep = 0;\n\t\tlet gridStepInPixels = 0;\n\t\tlet minGridStepInPixels = axisOptions.grid.minSizePx;\n\t\tlet axisLengthStr = String(axisLength);\n\t\tlet axisLengthPointPosition = axisLengthStr.indexOf('.');\n\t\tlet intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\n\t\tlet gridStepFound = false;\n\t\tlet digitPos = 0;\n\t\twhile (!gridStepFound) {\n\n\t\t\tlet power = intPartLength - digitPos - 1;\n\t\t\tlet multiplier = (Math.pow(10, power) || 1);\n\t\t\tlet dividers = [1, 2, 5];\n\t\t\tfor (let dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t\t\t\tlet nextGridStep = multiplier / dividers[dividerInd];\n\t\t\t\tlet nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t\t\t\tif (nextGridStepInPixels >= minGridStepInPixels) {\n\t\t\t\t\tgridStep = nextGridStep;\n\t\t\t\t\tgridStepInPixels = nextGridStepInPixels;\n\t\t\t\t} else {\n\t\t\t\t\tgridStepFound = true;\n\t\t\t\t\tif (gridStep === 0) {\n\t\t\t\t\t\tgridStep = nextGridStep;\n\t\t\t\t\t\tgridStepInPixels = nextGridStepInPixels;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!gridStepFound) digitPos++\n\n\t\t}\n\n\t\tvar gridStart = Math.floor(from / gridStep) * gridStep;\n\t\tvar gridEnd = Math.floor(to / gridStep) * gridStep;\n\n\t\treturn {\n\t\t\tstart: gridStart,\n\t\t\tend: gridEnd,\n\t\t\tstep: gridStep,\n\t\t\tstepInPx: gridStepInPixels,\n\t\t\tlength: gridEnd - gridStart,\n\t\t\tsegmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t\t}\n\t}\n\t\n\tgetObject3D() {\n\t\treturn this.lineSegments;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/GridWidget.ts\n **/","export declare type TColor = string | number;\n\n\nexport class Color {\n\n\t/**!\n\t * @preserve $.parseColor\n\t * Copyright 2011 THEtheChad Elliott\n\t * Released under the MIT and GPL licenses.\n\t */\n\t/**\n\t * Parse hex/rgb{a} color syntax.\n\t * @input string\n\t * @returns array [r,g,b{,o}]\n\t */\n\tstatic parseColor(color: string): number[] {\n\n\t\tvar cache: any\n\t\t\t, p = parseInt // Use p as a byte saving reference to parseInt\n\t\t\t, color = color.replace(/\\s\\s*/g, '') // Remove all spaces\n\t\t\t;//var\n\n\t\t// Checks for 6 digit hex and converts string to integer\n\t\tif (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\n\n\t\t// Checks for 3 digit hex and converts string to integer\n\t\telse if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\n\t\t\tcache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\n\n\n\t\t// Checks for 6 digit hex with alpha and converts string to integer\n\t\telse if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\n\n\t\t// Checks for rgba and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3], +cache[4]];\n\n\t\t// Checks for rgb and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3]];\n\n\t\t// Otherwise throw an exception to make debugging easier\n\t\telse throw Error(color + ' is not supported by parseColor');\n\n\t\t// Performs RGBA conversion by default\n\t\tisNaN(cache[3]) && (cache[3] = 1);\n\t\treturn cache;\n\t\t// Adds or removes 4th xVal based on rgba support\n\t\t// Support is flipped twice to prevent erros if\n\t\t// it's not defined\n\t\t//return cache.slice(0,3 + !!$.support.rgba);\n\t}\n\n\tr: number;\n\tg: number;\n\tb: number;\n\ta: number;\n\tvalue: number;\n\thexStr: string;\n\trgbaStr: string;\n\n\tconstructor (color: TColor) {\n\t\tthis.set(color);\n\t}\n\n\tstatic numberToHexStr(value: number): string {\n\t\tlet result = value.toString(16);\n\t\treturn '#' + '0'.repeat(6 - result.length) + result;\n\t}\n\n\n\tset(color: TColor) {\n\t\tif (typeof color == 'number') color = Color.numberToHexStr(color);\n\t\tlet colorStr = color as string;\n\t\tlet rgba = Color.parseColor(colorStr);\n\t\tthis.r = rgba[0];\n\t\tthis.g = rgba[1];\n\t\tthis.b = rgba[2];\n\t\tthis.a = rgba[3];\n\t\tthis.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\n\t\tthis.hexStr = Color.numberToHexStr(this.value);\n\t\tthis.rgbaStr = `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n\t}\n\n\tgetTransparent(opacity: number) {\n\t\treturn new Color(`rgba(${this.hexStr}, ${opacity})`);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport {Chart} from \"../Chart\";\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport {ITrendOptions} from \"../Trend\";\nimport {Utils} from \"../Utils\";\nimport {TrendsWidget, TrendWidget} from \"./TrendsWidget\";\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport { IViewportParams } from '../Viewport';\nimport { TrendSegmentsManager, ITrendSegmentState } from '../TrendSegmentsManager';\nimport { Color } from '../Color';\n\nexport class TrendsGradientWidget extends TrendsWidget<TrendGradient> {\n\tstatic widgetName = \"TrendsGradient\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendGradient;\n\t}\n}\n\n\nexport class TrendGradient extends TrendWidget {\n\tprivate gradient: Mesh;\n\tprivate visibleSegmentsCnt = 0;\n\tprivate segmentsIds: Uint16Array;\n\t\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBackground;\n\t}\n\n\tconstructor (chartState: Chart, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.trend = chartState.trendsManager.getTrend(trendName);\n\t\tthis.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments)\n\t\tthis.initGradient();\n\t\tthis.updateSegments();\n\t}\n\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.updateSegments();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\t// TODO: optimize updateSegments for onDisplayedRangeChanged\n\t\t\tthis.updateSegments();\n\t\t}));\n\t\tthis.bindEvent(this.chart.onZoom(() => {\n\t\t\tthis.updateSegments();\n\t\t}));\n\t}\n\n\n\tgetObject3D(): Object3D {\n\t\treturn this.gradient;\n\t}\n\n\n\tinitGradient() {\n\t\tlet geometry = new Geometry();\n\n\n\t\tfor (let i = 0; i < this.segmentsIds.length; i++) {\n\t\t\tgeometry.vertices.push(\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3()\n\t\t\t);\n\t\t\tlet ind = i * 4;\n\n\t\t\t// gradient segment scheme\n\t\t\t//\n\t\t\t// vert0 +---+ vert3\n\t\t\t//       |\\  |\n\t\t\t// face1 | \\ | face2\n\t\t\t// \t     |  \\|\n\t\t\t// vert1 +---+ vert2\n\n\t\t\tgeometry.faces.push(\n\t\t\t\tnew THREE.Face3( ind, ind + 1, ind + 2 ),\n\t\t\t\tnew THREE.Face3( ind + 3, ind, ind + 2 )\n\t\t\t);\n\t\t}\n\n\t\tlet color = new Color(this.trend.getOptions().backgroundColor);\n\t\tthis.gradient = new THREE.Mesh(\n\t\t\tgeometry,\n\t\t\tnew THREE.MeshBasicMaterial( {color: color.value, transparent: true, opacity: color.a} )\n\t\t);\n\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = this.chart.state.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = this.chart.state.yAxis.range;\n\t\tthis.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.gradient.frustumCulled = false;\n\t}\n\n\n\tprotected onZoomFrame(options: IViewportParams) {\n\t\tlet state = this.chart.state;\n\t\tlet scaleXFactor = state.xAxis.range.scaleFactor;\n\t\tlet scaleYFactor = state.yAxis.range.scaleFactor;\n\t\tvar currentScale = this.gradient.scale;\n\t\tif (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t}\n\n\n\tprotected onSegmentsAnimate(trendSegmentsManager: TrendSegmentsManager) {\n\t\tlet animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t\tfor (let i = 0; i < this.visibleSegmentsCnt; i++) {\n\t\t\tlet segmentId = this.segmentsIds[i];\n\t\t\tif (!animatedSegmentsIds.includes(segmentId)) continue;\n\t\t\tthis.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t\t}\n\t\t(this.gradient.geometry as PlaneGeometry).verticesNeedUpdate = true;\n\t}\n\n\n\tprivate updateSegments() {\n\t\tlet geometry = this.gradient.geometry as PlaneGeometry;\n\t\tlet {\n\t\t\tsegments: trendSegments,\n\t\t\tfirstDisplayedSegmentInd: segmentInd,\n\t\t\tlastDisplayedSegmentInd\n\t\t} = this.trend.segmentsManager;\n\t\tlet prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t\tthis.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t\tlet segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\n\t\tif (segmentsToProcessCnt > this.segmentsIds.length) {\n\t\t\tUtils.error(TrendsGradientWidget.widgetName + ': MAX_SEGMENTS reached');\n\t\t}\n\n\t\t// setup visible segments and collapse invisible\n\t\tfor (let i = 0; i < segmentsToProcessCnt; i++) {\n\t\t\tif (segmentInd <= lastDisplayedSegmentInd) {\n\t\t\t\tlet segment = trendSegments[segmentInd];\n\t\t\t\tthis.setupSegmentVertices(i, segment.currentAnimationState);\n\t\t\t\tthis.segmentsIds[i] = segment.id;\n\t\t\t\tsegmentInd++;\n\t\t\t} else {\n\t\t\t\tthis.setupSegmentVertices(i);\n\t\t\t}\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n\n\t/**\n\t * setup gradient segment by segmentState\n\t * if segmentState is undefined, then collapse vertices to 0,0,0\n\t */\n\tprivate setupSegmentVertices(segmentInd: number, segmentState?: ITrendSegmentState) {\n\t\tlet gradientSegmentInd = segmentInd * 4;\n\t\tlet vertices = (this.gradient.geometry as PlaneGeometry).vertices;\n\t\tlet\ttopLeft = vertices[gradientSegmentInd];\n\t\tlet\tbottomLeft = vertices[gradientSegmentInd + 1];\n\t\tlet\tbottomRight = vertices[gradientSegmentInd + 2];\n\t\tlet\ttopRight = vertices[gradientSegmentInd + 3];\n\t\tlet screenHeightVal = Math.max(\n\t\t\tthis.chart.viewport.pxToValByYAxis(this.chart.state.height),\n\t\t\tthis.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height)\n\t\t);\n\n\t\tif (segmentState) {\n\t\t\tlet startX = this.toLocalX(segmentState.startXVal);\n\t\t\tlet startY = this.toLocalY(segmentState.startYVal);\n\t\t\tlet endX = this.toLocalX(segmentState.endXVal);\n\t\t\tlet endY = this.toLocalY(segmentState.endYVal);\n\t\t\ttopLeft.set(startX, startY, 0);\n\t\t\ttopRight.set(endX, endY, 0);\n\t\t\tbottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t\t\tbottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t\t} else {\n\t\t\ttopLeft.set(0, 0, 0);\n\t\t\ttopRight.set(0, 0, 0);\n\t\t\tbottomLeft.set(0, 0, 0);\n\t\t\tbottomRight.set(0, 0, 0);\n\t\t}\n\n\t}\n\n\tprivate toLocalX(xVal: number): number {\n\t\treturn xVal - this.chart.state.xAxis.range.zeroVal;\n\t}\n\n\n\tprivate toLocalY(yVal: number): number {\n\t\treturn yVal - this.chart.state.yAxis.range.zeroVal;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsGradientWidget.ts\n **/","\nimport {ChartWidget} from \"../Widget\";\nimport Object3D = THREE.Object3D;\nimport {Chart} from \"../Chart\";\nimport {ITrendOptions, ITrendData, Trend} from \"../Trend\";\nimport Vector2 = THREE.Vector2;\nimport Vector3 = THREE.Vector3;\nimport {TrendSegmentsManager} from \"../TrendSegmentsManager\";\nimport {IViewportParams} from \"../Viewport\";\n\n\nexport interface ITrendWidgetClass<TrendWidgetType> {\n\tnew (chart: Chart, trendName: string): TrendWidgetType;\n\twidgetIsEnabled(trendOptions: ITrendOptions, chart: Chart): boolean;\n}\n\n/**\n * abstract manager class for all trends widgets\n */\nexport abstract class TrendsWidget<TrendWidgetType extends TrendWidget> extends ChartWidget {\n\tprotected abstract getTrendWidgetClass(): ITrendWidgetClass<TrendWidgetType>;\n\tprotected object3D: Object3D;\n\tprotected widgets: {[trendName: string]: TrendWidgetType} = {};\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.onTrendsChange();\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tvar state = this.chart;\n\t\tstate.onTrendsChange(() => this.onTrendsChange());\n\t\tstate.onTrendChange((trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tthis.onTrendChange(trendName, changedOptions, newData)\n\t\t});\n\t}\n\n\tprotected onTrendsChange() {\n\t\tvar trendsOptions = this.chart.state.trends;\n\t\tvar TrendWidgetClass = this.getTrendWidgetClass();\n\t\tfor (let trendName in trendsOptions) {\n\t\t\tlet trendOptions = trendsOptions[trendName];\n\t\t\tlet widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t\t\tif (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t\t\t\tthis.createTrendWidget(trendName);\n\t\t\t} else if (!widgetCanBeEnabled && this.widgets[trendName]){\n\t\t\t\tthis.destroyTrendWidget(trendName);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTrendChange(trendName: string, changedOptions: ITrendOptions, newData: ITrendData) {\n\t\tvar widget = this.widgets[trendName];\n\t\tif (!widget) return;\n\t\twidget.onTrendChange(changedOptions);\n\t\tif (newData) {\n\t\t\tvar data = this.chart.getTrend(trendName).getData();\n\t\t\tvar isAppend = (!data.length || data[0].xVal < newData[0].xVal);\n\t\t\tisAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t\t}\n\t}\n\n\tgetObject3D(): Object3D {\n\t\treturn this.object3D;\n\t}\n\n\tprivate createTrendWidget(trendName: string) {\n\t\tvar WidgetConstructor = this.getTrendWidgetClass();\n\t\tvar widget = new WidgetConstructor(this.chart, trendName);\n\t\tthis.widgets[trendName] = widget;\n\t\tvar widgetObject = widget.getObject3D();\n\t\twidgetObject.name = trendName;\n\t\tthis.object3D.add(widget.getObject3D());\n\t}\n\n\tprivate destroyTrendWidget(trendName: string) {\n\t\tthis.widgets[trendName].onDestroy();\n\t\tdelete this.widgets[trendName];\n\t\tvar widgetObject = this.object3D.getObjectByName(trendName);\n\t\tthis.object3D.remove(widgetObject);\n\t}\n}\n\n/**\n * based class for all trends widgets\n */\nexport abstract class TrendWidget {\n\tprotected trend: Trend;\n\tprotected unbindList: Function[] = [];\n\n\tconstructor (protected chart: Chart, protected trendName: string) {\n\t\tthis.trend = chart.trendsManager.getTrend(trendName);\n\t\tthis.chart = chart;\n\t\tthis.bindEvents();\n\t}\n\tabstract getObject3D(): Object3D;\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chart: Chart) {\n\t\treturn trendOptions.enabled;\n\t}\n\tappendData(newData: ITrendData) {};\n\tprependData(newData: ITrendData) {};\n\tonTrendChange(changedOptions?: ITrendOptions) {}\n\tonDestroy() {\n\t\tfor (let unsubscriber of this.unbindList) {\n\t\t\tunsubscriber();\n\t\t}\n\t}\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t}\n\tprotected onZoomFrame(options: IViewportParams) {\n\t}\n\tprotected onTransformationFrame(options: IViewportParams) {\n\t}\n\tprotected onZoom() {\n\t}\n\n\n\tprotected bindEvents() {\n\n\t\tthis.bindEvent(this.trend.segmentsManager.onAnimationFrame(\n\t\t\t(trendPoints: TrendSegmentsManager) => this.onSegmentsAnimate(trendPoints)\n\t\t));\n\n\t\tthis.bindEvent(this.chart.interpolatedViewport.onInterpolation(\n\t\t\t(options) => this.onTransformationFrame(options)\n\t\t));\n\t\t\n\t\tthis.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(\n\t\t\t(options) => this.onZoomFrame(options)\n\t\t));\n\n\t\tthis.bindEvent(this.chart.onZoom(() => this.onZoom()));\n\t};\n\n\tprotected bindEvent(unbind: Function) {\n\t\tthis.unbindList.push(unbind);\n\t}\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsWidget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport {Chart} from \"../Chart\";\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport {TrendsWidget, TrendWidget} from \"./TrendsWidget\";\nimport { TrendSegmentsManager, ITrendSegmentState } from \"../TrendSegmentsManager\";\nimport LineSegments = THREE.LineSegments;\nimport { IViewportParams } from \"../Viewport\";\nimport { ITrendOptions, TREND_TYPE } from '../Trend';\nimport { Utils } from '../Utils';\n\n\n/**\n * widget for drawing trends lines\n */\nexport class TrendsLineWidget extends TrendsWidget<TrendLine> {\n\tstatic widgetName = \"TrendsLine\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLine;\n\t}\n}\n\ninterface ILineSegment {\n\tind: number,\n\tsegmentId: number\n}\n\nexport class TrendLine extends TrendWidget {\n\tprivate material: LineBasicMaterial;\n\tprivate lineSegments: LineSegments;\n\tprivate vertices: Vector3[];\n\n\t// contains indexes of free segments\n\tprivate freeSegmentsInds: number[] = [];\n\n\t// contains segments to display\n\tprivate displayedSegments: {[segmentId: number]: ILineSegment} = {};\n\t\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\t\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tvar options = this.trend.getOptions();\n\t\tthis.material = new LineBasicMaterial( { color: options.lineColor, linewidth: options.lineWidth } );\n\t\tthis.initLine();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.lineSegments;\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.destroySegments();\n\t\t\tthis.setupSegments();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\tthis.setupSegments();\n\t\t}));\n\t}\n\t\n\tprivate initLine() {\n\t\tlet geometry = new Geometry();\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = this.chart.state.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = this.chart.state.yAxis.range;\n\t\tthis.lineSegments = new LineSegments(geometry, this.material);\n\t\tthis.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.lineSegments.frustumCulled = false;\n\t\tfor (let i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t\t\tgeometry.vertices.push(new  Vector3(), new Vector3());\n\t\t\tthis.freeSegmentsInds.push(i);\n\t\t}\n\t\tthis.vertices = geometry.vertices;\n\t\tthis.setupSegments();\n\t}\n\n\tprivate setupSegments() {\n\t\tlet geometry = this.lineSegments.geometry as Geometry;\n\n\t\tlet {firstDisplayedSegment, lastDisplayedSegment} = this.trend.segmentsManager;\n\n\t\tfor (let segmentId in this.displayedSegments) {\n\t\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\t\tlet segment = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t\t\tlet segmentIsNotDisplayed = (\n\t\t\t\tsegment.startXVal < firstDisplayedSegment.startXVal ||\n\t\t\t\tsegment.endXVal > lastDisplayedSegment.endXVal\n\t\t\t);\n\t\t\tif (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t\t}\n\n\t\tlet segment = firstDisplayedSegment;\n\t\twhile (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t\t\tthis.setupSegment(segment.id, segment.currentAnimationState);\n\t\t\tsegment = segment.getNext();\n\t\t}\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t}\n\n\tprivate setupSegment(segmentId: number, segmentState: ITrendSegmentState) {\n\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\tif (!lineSegment) {\n\t\t\tif (this.freeSegmentsInds.length == 0) Utils.error('Max allocated segments reached');\n\t\t\tlet ind = this.freeSegmentsInds.pop();\n\t\t\tlineSegment = this.displayedSegments[segmentId] = {segmentId, ind};\n\t\t}\n\t\tlet segmentInd = lineSegment.ind;\n\t\tlet lineStartVertex = this.vertices[segmentInd * 2];\n\t\tlet lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t\tlineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t\tlineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t}\n\n\tprivate destroySegments() {\n\t\tfor (let segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t}\n\n\tprivate destroySegment(segmentId: number) {\n\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\tlet lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t\tlet lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t\tlineStartVertex.set(0, 0, 0);\n\t\tlineEndVertex.set(0, 0, 0);\n\t\tdelete this.displayedSegments[segmentId];\n\t\tthis.freeSegmentsInds.push(lineSegment.ind);\n\t}\n\n\n\tprotected onZoomFrame(options: IViewportParams) {\n\t\tvar currentScale = this.lineSegments.scale;\n\t\tlet state = this.chart.state;\n\t\tlet scaleXFactor = state.xAxis.range.scaleFactor;\n\t\tlet scaleYFactor = state.yAxis.range.scaleFactor;\n\t\tif (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t}\n\n\n\tprotected onSegmentsAnimate(trendSegments: TrendSegmentsManager) {\n\t\tvar geometry = this.lineSegments.geometry as Geometry;\n\t\tfor (let segmentId of trendSegments.animatedSegmentsIds) {\n\t\t\tif (!this.displayedSegments[segmentId]) continue;\n\t\t\tthis.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t\t}\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n\n\tprivate toLocalX(xVal: number): number {\n\t\treturn xVal - this.chart.state.xAxis.range.zeroVal;\n\t}\n\n\tprivate toLocalY(yVal: number): number {\n\t\treturn yVal - this.chart.state.yAxis.range.zeroVal;\n\t}\n\n\tprivate toLocalVec(vec: Vector3): Vector3 {\n\t\treturn new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsLineWidget.ts\n **/","\n\nimport { TrendsWidget, TrendWidget } from './TrendsWidget';\nimport { Chart } from '../Chart';\nimport Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport { IViewportParams } from '../Viewport';\nimport { TrendSegmentsManager, ITrendSegmentState } from '../TrendSegmentsManager';\nimport Vector3 = THREE.Vector3;\nimport Mesh = THREE.Mesh;\nimport Line = THREE.Line;\nimport BoxGeometry = THREE.BoxGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport { TREND_TYPE, ITrendOptions } from '../Trend';\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport remove = THREE.Cache.remove;\nimport { Utils } from '../Utils';\n\n\nconst RISE_COLOR = 0x2CAC40;\nconst FALL_COLOR = 0xEE5533;\nconst MARGIN_PERCENT = 0.3;\nconst MAX_CANDLES = 100;\n\n/**\n * widget for drawing trends candles\n */\nexport class TrendsCandlesWidget extends TrendsWidget<TrendCandlesWidget> {\n\tstatic widgetName = \"TrendsCandles\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendCandlesWidget;\n\t}\n}\n\n\nexport class TrendCandlesWidget extends TrendWidget {\n\tprivate scaleXFactor: number;\n\tprivate scaleYFactor: number;\n\tprivate object3D: Object3D;\n\t\n\t// contains indexes of free candles\n\tprivate freeCandlesInds: number[] = [];\n\tprivate candlesPool: CandleWidget[] = [];\n\tprivate candles: {[segmentId: number]: CandleWidget} = {};\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.type == TREND_TYPE.CANDLE;\n\t}\n\n\tconstructor (chartState: Chart, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.initObject();\n\t}\n\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.destroyCandles();\n\t\t\tthis.setupCandles();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\tthis.setupCandles();\n\t\t}));\n\t}\n\t\n\tprivate initObject() {\n\t\tlet stateData = this.chart.state;\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = stateData.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = stateData.yAxis.range;\n\t\tthis.scaleXFactor = scaleXFactor;\n\t\tthis.scaleYFactor = scaleYFactor;\n\t\tthis.object3D = new Object3D();\n\t\tthis.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.object3D.frustumCulled = false;\n\t\tfor (let i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t\tthis.setupCandles();\n\t}\n\n\tprivate setupCandles() {\n\n\t\t// remove invisible\n\t\tlet {firstDisplayedSegment, lastDisplayedSegment} = this.trend.segmentsManager;\n\n\t\tfor (let segmentId in this.candles) {\n\t\t\tlet segment = this.candles[segmentId].segment;\n\t\t\tlet segmentIsNotDisplayed = (\n\t\t\t\tsegment.startXVal < firstDisplayedSegment.startXVal ||\n\t\t\t\tsegment.endXVal > lastDisplayedSegment.endXVal\n\t\t\t);\n\t\t\tif (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t\t}\n\n\t\tlet segment = firstDisplayedSegment;\n\t\twhile (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t\t\tthis.setupCandle(segment.id, segment.currentAnimationState);\n\t\t\tsegment = segment.getNext();\n\t\t}\n\t}\n\n\tprivate destroyCandles() {\n\t\tfor (let segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t}\n\n\tprivate destroyCandle(segmentId: number) {\n\t\tlet candle = this.candles[segmentId];\n\t\tthis.object3D.remove(candle.getObject3D());\n\t\tdelete this.candles[segmentId];\n\t}\n\n\tprotected onZoomFrame(options: IViewportParams) {\n\t\tvar currentScale = this.object3D.scale;\n\t\tif (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t}\n\n\tprotected onSegmentsAnimate(trendSegments: TrendSegmentsManager) {\n\t\tfor (let segmentId of trendSegments.animatedSegmentsIds) {\n\t\t\tif (!this.candles[segmentId]) continue;\n\t\t\tlet segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t\t\tthis.setupCandle(segmentId, segmentState);\n\t\t}\n\t}\n\n\t/**\n\t * create or modify candle\n\t */\n\tprivate setupCandle(candleId: number, segmentState: ITrendSegmentState) {\n\t\tlet candleInd = candleId % MAX_CANDLES;\n\n\t\t// get candle from candlesPool to avoid creating new Objects by performance reasons\n\t\tlet candle = this.candlesPool[candleInd];\n\t\tif (!candle) {\n\t\t\tcandle = this.candlesPool[candleInd] = new CandleWidget();\n\t\t}\n\n\t\tif (!this.candles[candleId]) {\n\t\t\tthis.candles[candleId] = candle;\n\t\t\tthis.object3D.add(candle.getObject3D());\n\t\t}\n\t\tcandle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t\tcandle.setSegment(segmentState);\n\t}\n\n\ttoLocalX(xVal: number): number {\n\t\treturn xVal - this.chart.state.xAxis.range.zeroVal;\n\t}\n\n\ttoLocalY(yVal: number): number {\n\t\treturn yVal - this.chart.state.yAxis.range.zeroVal;\n\t}\n\n\ttoLocalVec(vec: Vector3): Vector3 {\n\t\treturn new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t}\n}\n\nclass CandleWidget {\n\tsegment: ITrendSegmentState;\n\tprivate rect: Mesh;\n\tprivate vLine: Line;\n\tprivate hLine: Line;\n\tconstructor () {\n\t\tthis.initObject();\n\t}\n\n\tgetObject3D(): Object3D {\n\t\treturn this.rect;\n\t}\n\n\tsetSegment(segment: ITrendSegmentState) {\n\t\tthis.segment = segment;\n\t\tlet color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\n\t\t// update rect\n\t\tlet geometry = this.rect.geometry as PlaneGeometry;\n\t\tlet material = this.rect.material as MeshBasicMaterial;\n\t\tlet width = segment.endXVal - segment.startXVal;\n\t\twidth -= width * MARGIN_PERCENT;\n\t\tlet height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t\tlet [leftTop, rightTop, leftBottom, rightBottom] = geometry.vertices;\n\t\tleftTop.set(-width / 2, height / 2, 0);\n\t\trightTop.set(width / 2, height / 2, 0);\n\t\tleftBottom.set(-width / 2, -height / 2, 0);\n\t\trightBottom.set(width / 2, -height / 2, 0);\n\n\t\t// // prevent to draw bars with height < 1px\n\t\t// if (Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t\t// \tleftBottom.setY(leftBottom.y + 1);\n\t\t// \trightBottom.setY(rightBottom.y + 1);\n\t\t// }\n\n\t\tmaterial.color.set(color);\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t// update lines\n\t\tlet vLineGeometry = this.vLine.geometry as Geometry;\n\t\tlet vLineMaterial = this.vLine.material as LineBasicMaterial;\n\t\tlet lineTop = segment.maxYVal - segment.yVal;\n\t\tlet lineBottom = segment.minYVal - segment.yVal;\n\t\tvLineGeometry.vertices[0].set(0, lineTop, 0);\n\t\tvLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t\tvLineMaterial.color.set(color);\n\t\tvLineGeometry.verticesNeedUpdate = true;\n\n\t\tlet hLineGeometry = this.hLine.geometry as Geometry;\n\t\tlet hLineMaterial = this.hLine.material as LineBasicMaterial;\n\t\tlet lineLeft = (-width) / 2;\n\t\tlet lineRight = width / 2;\n\t\thLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t\thLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t\thLineMaterial.color.set(color);\n\t\thLineGeometry.verticesNeedUpdate = true;\n\n\t}\n\n\tprivate initObject() {\n\t\tthis.rect = new Mesh(\n\t\t\tnew PlaneGeometry(1, 1),\n\t\t\tnew MeshBasicMaterial({side: THREE.DoubleSide})\n\t\t);\n\t\tlet vLineGeometry = new Geometry();\n\t\tlet hLineGeometry = new Geometry();\n\t\tvLineGeometry.vertices.push(new Vector3(), new Vector3);\n\t\thLineGeometry.vertices.push(new Vector3(), new Vector3);\n\t\tthis.vLine = new Line(vLineGeometry, new LineBasicMaterial({linewidth: 1}));\n\t\tthis.hLine = new Line(hLineGeometry, new LineBasicMaterial({linewidth: 1}));\n\t\tthis.rect.add(this.vLine);\n\t\tthis.rect.add(this.hLine);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsCandleWidget.ts\n **/","import { Utils } from './Utils';\nimport { IIteralable } from './interfaces';\nimport { EventEmitter } from './EventEmmiter'\n\nexport class UniqCollectionItem {\n\tprivate _id: number;\n\tgetId() {\n\t\treturn this._id;\n\t}\n}\n\nconst ID_KEY = '_id';\n\nconst EVENTS = {\n\tCREATE: 'create',\n\tUPDATE: 'update',\n\tREMOVE: 'remove'\n};\n\nexport interface IUniqCollectionOptions<TItem, TItemModel> {\n\tcreateInstance: (itemModel: TItemModel) => TItem;\n}\n\n/**\n * useful for patching collections with id key\n */\nexport class UniqCollection<TItem extends UniqCollectionItem, TItemModel> {\n\tprotected items: TItem[] = [];\n\tprotected options: IUniqCollectionOptions<TItem, TItemModel>;\n\tprotected ee = new EventEmitter();\n\tconstructor(options: IUniqCollectionOptions<TItem, TItemModel>) {\n\t\tthis.options = options;\n\t}\n\n\tpatch(models: TItemModel[]) {\n\t\tlet options = this.options;\n\t\tfor (let model of models) {\n\t\t\tlet id = (model as IIteralable)[ID_KEY];\n\t\t\tif (!id) Utils.error('Collection item without id detected');\n\t\t\tlet ind = this.getItemInd(id);\n\t\t\tlet item = this.items[ind];\n\t\t\tlet justCreated = false;\n\n\t\t\t// create\n\t\t\tif (!item) {\n\t\t\t\tjustCreated = true;\n\t\t\t\titem = options.createInstance(model);\n\t\t\t\tthis.items.push(item);\n\t\t\t}\n\n\t\t\t// update\n\t\t\tif (Object.keys(model).length > 1) {\n\t\t\t\tlet prevProps = {};\n\t\t\t\tUtils.copyProps(item, prevProps, model);\n\t\t\t\tUtils.patch(item as IIteralable, model);\n\t\t\t\tjustCreated && this.ee.emit(EVENTS.CREATE, item);\n\t\t\t\tthis.ee.emit(EVENTS.UPDATE, item, model, prevProps as TItemModel);\n\n\t\t\t// delete\n\t\t\t} else {\n\t\t\t\tthis.items.splice(ind, 1);\n\t\t\t\tthis.ee.emit(EVENTS.REMOVE, item);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tgetItem(id: number): TItem {\n\t\treturn this.items[this.getItemInd(id)];\n\t}\n\n\n\tgetLast(): TItem {\n\t\treturn this.items[this.items.length - 1];\n\t}\n\n\n\tforEach(cb: (item: TItem) => any) {\n\t\tfor (let key in this.items) cb(this.items[key]);\n\t}\n\n\n\tfilter(cb: (item: TItem) => boolean): TItem[] {\n\t\tlet result: TItem[] = [];\n\t\tthis.forEach(item => cb(item) && result.push(item));\n\t\treturn result;\n\t}\n\n\n\tonCreate(cb: (item: TItem) => any): Function {\n\t\treturn this.ee.subscribe(EVENTS.CREATE, cb);\n\t}\n\n\n\tonUpdate (cb: (item: TItem, itemModel: TItemModel, prevProps: TItemModel) => any): Function {\n\t\treturn this.ee.subscribe(EVENTS.UPDATE, cb);\n\t}\n\n\n\tonRemove(cb: (item: TItem) => any): Function {\n\t\treturn this.ee.subscribe(EVENTS.REMOVE, cb);\n\t}\n\n\n\tprotected getItemInd(id: number) {\n\t\treturn Utils.binarySearchInd(this.items, id, ID_KEY);\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/UniqCollection.ts\n **/","export * from './AxisWidget';\nexport * from './GridWidget';\nexport * from './TrendsWidget';\nexport * from './TrendsLineWidget';\nexport * from './TrendsGradientWidget';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/index.ts\n **/"],"sourceRoot":""}