{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 47b60952b4bd2b9c778f?cd11","webpack:///./demo/demoApp.ts","webpack:///./src/Easing.ts?492d","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/src/TrendsMarksPlugin/index.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts","webpack:///./plugins/src/TrendsBeaconWidget/index.ts","webpack:///./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts","webpack:///./plugins/src/TrendsLoadingWidget/index.ts","webpack:///./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts","webpack:///./plugins/src/TrendsIndicatorWidget/index.ts","webpack:///./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts","webpack:///./plugins/src/ZonesPlugin/ZonesPlugin.ts","webpack:///./plugins/src/ZonesPlugin/ZonesWidget.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","three_charts_1","TrendsMarksPlugin_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","AxisMarksPlugin_1","ZonesPlugin_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chartView","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","title","color","userData","description","icon","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","document","querySelector","ZonesPlugin","TrendsMarksPlugin","items","AxisMarksPlugin","axisType","AXIS_TYPE","X","value","name","feel","lineColor","axisMarks","chart","getPlugin","NAME","zones","setTimeout","zone","create","position","startXVal","endXVal","mark","createMark","Y","stickToEdges","setInterval","update","mainTrend","getTrend","onDataChange","markOptions","getLastItem","trendsMarks","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","appendData","$checkboxMaintrend","addEventListener","setState","enabled","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","setOptions","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","EASING","Linear","None","k","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","pow","Circular","sqrt","Elastic","Back","s","Bounce","__export","hasOwnProperty","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","deepExtend","h","a","appendChild","dom","d","children","style","display","l","createElement","cssText","preventDefault","g","performance","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","devicePixelRatio","u","n","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","isObject","isObjectObject","o","Object","toString","ctor","prot","constructor","Array","isArray","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","concat","**","growListenerTree","listener","split","slice","shift","warned","console","error","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","apply","arguments","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","element","callback","EventQueue","add","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","Buffer","isSpecificValue","RegExp","cloneSpecificValue","x","copy","getTime","deepCloneArray","arr","clone","forEach","index","target","src","keys","key","global","base64","ieee754","SlowBuffer","INSPECT_MAX_BYTES","TYPED_ARRAY_SUPPORT","typedArraySupport","kMaxLength","Uint8Array","__proto__","foo","subarray","byteLength","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","poolSize","_augment","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","Symbol","species","defineProperty","configurable","assertSize","size","alloc","fill","encoding","allocUnsafeSlow","string","isEncoding","actual","write","fromArrayLike","array","byteOffset","isBuffer","buffer","isnan","_isBuffer","compare","y","String","toLowerCase","list","pos","buf","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","equals","inspect","str","match","join","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","toByteArray","dst","lookup","revLookup","Arr","placeHoldersCount","b64","tmp","placeHolders","L","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","__extends","__","Plugin_1","OrthographicCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","ChartBlankView","$container","pluginsAndWidgets","_this","widgets","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","w","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","backgroundColor","Color","setSize","setPixelRatio","setClearColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","customWidgets","ChartWidget","pluginWidgetClasses","providedWidgets","map","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","interpolatedViewport","onInterpolation","options","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","viewport","getCameraSettings","updateProjectionMatrix","cameraInitialPosition","params","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","CanvasRenderer","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChangedHandler","getOptions","pluginsState","changedState","_i","unsubscriber","obj1","obj2","mergeArrays","JSON","parse","stringify","patch","objectToPatch","idKey","_loop_1","patchItem","subObject","find","this_1","travers","object","allowTraverseDeeper","canTraverseDeeper","setIdsToArrayItems","sourceObject","arr_1","getUid","toFixed","digitsCount","maxDigits","result","intVal","intStr","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","createTexture","canvas","ctx","texture","Texture","needsUpdate","createNearestTexture","minFilter","NearestFilter","createPixelPerfectTexture","magFilter","msg","warn","currentId","getDistance","num1","num2","binarySearchClosestInd","mid","binarySearchClosest","ind","binarySearchInd","binarySearch","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Trend_1","TrendsManager_1","Viewport_1","InterpolatedViewport_1","AnimationManager_1","Easing_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","VIEWPORT_CHANGE","DRAG_STATE_CHAGED","PLUGINS_STATE_CHANGED","LIGHT_BLUE","prevState","ALL","scroll","NUMBER","grid","minSizePx","RELATIVE_END","animations","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","zoomEase","autoScrollSpeed","autoScrollEase","maxSegmentLength","lineWidth","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","inertialScroll","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","animationManager","AnimationManager","setAimationsEnabled","Viewport","computedData","getComputedData","savePrevState","InterpolatedViewport","onChange","onTrendChange","onTrendsChange","onDragStateChanged","onZoom","onViewportChange","tick","newState","eventData","silent","trendsData","trendOptions","newStateContainsData","currentStateData","newStateObj","changedProps","recalculateResult","recalculateState","emitChangedStateEvents","actualData","cursorOptions","isMouseDrag","oldX","currentX","currentScroll","deltaXVal","pxToValByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","maxXVal","getEndXVal","minXVal","getStartXVal","dragEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","viewportChangeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","changedTrends","newData","handleTrendsChange","dragState","onDragStateChangedHandler","animationOptions","isAnimationsEnabled","oldTrendsMaxX","trendsMaxXDelta","maxVisibleXVal","getRightVal","paddingRightVal","getValByViewportX","marginRightVal","scrollDelta","isDragMode","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getViewportYByVal","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","Vector3","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","unbindList","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","unbind","tryToRebuildSegments","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","valToPxByXAxis","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","currentAnimationState","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","onSegmentsRebuilded","updateParams","scrollXVal","scrollYVal","valToPxByYAxis","zoomX","zoomY","getWorldXByVal","getWorldYByVal","getWorldXByViewportX","viewportX","getWorldYByViewportY","viewportY","getValByViewportY","getValByWorldX","worldX","getValByWorldY","worldY","pxToValByYAxis","getViewportXByVal","getViewportXByWorldX","pixelsCount","getTop","getRight","getBottom","getLeft","getTopVal","getBottomVal","getLeftVal","INTERPOLATION_EVENT","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","TRANSFORMATION_EVENT","interpolationInProgress","setParams","onZoomInterpolation","onScrollInterpolation","onInterpolationEvent","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","hasActiveAnimations","scrollYAnimation","zoomYAnimation","interpolationStarted","interpolationFinished","STARTED","scrollEventNeeded","zoomEventNeeded","FINISHED","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","zoomXChanged","isAutoscroll","targetX","onTick","targetY","targetZoom","lastTickTime","timingFunction","Animation","animateObj","source","isEnabled","i_1","completeAndStop","createdTime","easing","progress","delay","setProgress","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","targetIteralable","onTickCb","onFinishCb","withDelay","initialVal","targetVal","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","onZoomFrame","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","rgbaStr","strokeStyle","material","MeshBasicMaterial","side","FrontSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","startVal","endVal","displayedValue","pxVal","textAlign","getDateStr","stroke","closePath","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","opacity","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","exec","numberToHexStr","colorStr","rgba","hexStr","getTransparent","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","onTransformationFrame","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","stateData","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","UniqCollectionItem","getId","_id","ID_KEY","CREATE","UPDATE","REMOVE","UniqCollection","models","models_1","model","getItemInd","justCreated","createInstance","prevProps","getItem","getLast","onCreate","onUpdate","onRemove","TrendsMarksWidget_1","TEXTURE_FILTER","AXIS_MARK_DEFAULT_OPTIONS","easeSpeed","textureFilter","onRender","DEFAULT_RENDERER","trendsMarksPluginOptions","rects","onMarksChangeHandler","getItems","markName","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","marks","TrendMark","createMarkRect","left","top","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","sort","points","markInd","trendMarks","TrendsMarksWidget","LinearFilter","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","onViewportInterpolationEvent","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onScreenTransformationEventHandler","onZoomFrameHandler","trendMark","show","LINEAR","NEAREST","markMesh","updatePosition","posX","posY","trendMarkWidget","isTopSide","rgbaColor","centerX","centerY","textOffset","textPosX","textPosY","arc","lineEndY","moveTo","lineTo","PlaneBufferGeometry","ANIMATION_TIME","ANIMATION_DELAY","TrendBeacon","mesh","light","setInitialState","animationObject","trendsSegments","screenWidth","screenX","TrendLoading","deactivate","activate","rotation","z","restart","center","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen","AxisMarksWidget_1","textColor","AxisMark","axisMarkPlugin","newOptions","axisMarksPluginOptions","marksCollection","axisMarksOptions","AxisMarksWidget","axisMarksWidgets","axisMarksPlugin","createAxisMarkWidget","axisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","onResizeHandler","onStateChangeHandler","onMarkUpdateHandler","onMarkRemoveHandler","findIndex","resize","DEFAULT_AXIS_MARK_RENDERER","isStickOnBottom","isStickOnTop","frameValue","frameOpacity","needRender","screen","hasStickMode","opactity","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","ZonesWidget_1","ZONE_TYPE","ZONE_DEFAULT_OPTIONS","X_RANGE","bgColor","Zone","zonePlugin","pluginOptions","zoneOptions","ZonesWidget","zonesPlugin","createZoneWidget","ZoneWidget","updateZonesPositions","onZoneUpdateHandler","onZoneRemoveHandler","animatedProps","verts"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(40);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(43);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(45);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(47);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(49);\r\n\tvar ZonesPlugin_1 = __webpack_require__(51);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chartView;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_charts_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            xVal: val,\r\n\t            title: three_charts_1.Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\r\n\t            color: three_charts_1.Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\r\n\t            orientation: orientation,\r\n\t            // textureFilter: TEXTURE_FILTER.NEAREST,\r\n\t            userData: {\r\n\t                description: three_charts_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t                icon: three_charts_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t                descriptionColor: descriptionColor\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chartView = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 0, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000,\r\n\t                margin: { end: 200 },\r\n\t            },\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {}\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new ZonesPlugin_1.ZonesPlugin([]),\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] }),\r\n\t        new AxisMarksPlugin_1.AxisMarksPlugin([\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.startTime, name: 'test', title: 'DEADLINE', userData: { feel: 'aa' } },\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600' },\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187' },\r\n\t        ])\r\n\t    ]);\r\n\t    var axisMarks = chartView.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t    var zones = chartView.chart.getPlugin(ZonesPlugin_1.ZonesPlugin.NAME);\r\n\t    setTimeout(function () {\r\n\t        var zone = zones.create({ position: { startXVal: dsMain.startTime, endXVal: dsMain.startTime + 5000 } });\r\n\t        var mark = axisMarks.createMark({ axisType: three_charts_1.AXIS_TYPE.Y, value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true });\r\n\t        setInterval(function () {\r\n\t            mark.update({ value: mark.value + 1 });\r\n\t            //zone.update({position: {startXVal: zone.position.startXVal + 1000}})\r\n\t        }, 1000);\r\n\t    }, 1000);\r\n\t    window['chartView'] = chartView;\r\n\t    var mainTrend = chartView.getTrend('main');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        if (markOptions)\r\n\t            setTimeout(function () {\r\n\t                var trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t                trendsMarks.createMark(markOptions);\r\n\t            }, 500);\r\n\t    });\r\n\t    var i = 0;\r\n\t    chartView.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chartView.getTrend('main').appendData([val]);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chartView.chart.setState({ autoScroll: false });\r\n\t            chartView.chart.zoomToRange(range);\r\n\t            chartView.chart.scrollToEnd().then(function () {\r\n\t                chartView.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Easing from tween.js lib https://github.com/tweenjs/tween.js\r\n\t **/\r\n\texports.EASING = {\r\n\t    Linear: {\r\n\t        None: function (k) {\r\n\t            return k;\r\n\t        }\r\n\t    },\r\n\t    Quadratic: {\r\n\t        In: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        }\r\n\t    },\r\n\t    Cubic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Quartic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        }\r\n\t    },\r\n\t    Quintic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Sinusoidal: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        }\r\n\t    },\r\n\t    Exponential: {\r\n\t        In: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        }\r\n\t    },\r\n\t    Circular: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        }\r\n\t    },\r\n\t    Elastic: {\r\n\t        In: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            k *= 2;\r\n\t            if (k < 1) {\r\n\t                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t            }\r\n\t            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\t        }\r\n\t    },\r\n\t    Back: {\r\n\t        In: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        }\r\n\t    },\r\n\t    Bounce: {\r\n\t        In: function (k) {\r\n\t            return 1 - exports.EASING.Bounce.Out(1 - k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return exports.EASING.Bounce.In(k * 2) * 0.5;\r\n\t            }\r\n\t            return exports.EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(39)\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __webpack_require__(2);\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(27));\n\t        __export(__webpack_require__(24));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(36));\n\t        __export(__webpack_require__(28));\n\t        __export(__webpack_require__(37));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(31));\n\t        __export(__webpack_require__(25));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(26));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(3);\n\t        exports.isPlainObject = __webpack_require__(4);\n\t        exports.EE2 = __webpack_require__(6);\n\t        var es6_promise_1 = __webpack_require__(7);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(8);\n\t        exports.deepExtend = __webpack_require__(9);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(5);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        (function(Buffer) {\n\t            /*!\n\t\t * @description Recursive object extending\n\t\t * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n\t\t * @license MIT\n\t\t *\n\t\t * The MIT License (MIT)\n\t\t *\n\t\t * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n\t\t *\n\t\t * Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t\t * this software and associated documentation files (the \"Software\"), to deal in\n\t\t * the Software without restriction, including without limitation the rights to\n\t\t * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n\t\t * the Software, and to permit persons to whom the Software is furnished to do so,\n\t\t * subject to the following conditions:\n\t\t *\n\t\t * The above copyright notice and this permission notice shall be included in all\n\t\t * copies or substantial portions of the Software.\n\t\t *\n\t\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\t\t * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\t\t * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n\t\t * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\t */\n\t            \"use strict\";\n\t            function isSpecificValue(val) {\n\t                return val instanceof Buffer || val instanceof Date || val instanceof RegExp ? true : false;\n\t            }\n\t            function cloneSpecificValue(val) {\n\t                if (val instanceof Buffer) {\n\t                    var x = new Buffer(val.length);\n\t                    val.copy(x);\n\t                    return x;\n\t                } else if (val instanceof Date) {\n\t                    return new Date(val.getTime());\n\t                } else if (val instanceof RegExp) {\n\t                    return new RegExp(val);\n\t                } else {\n\t                    throw new Error(\"Unexpected situation\");\n\t                }\n\t            }\n\t            function deepCloneArray(arr) {\n\t                var clone = [];\n\t                arr.forEach(function(item, index) {\n\t                    if (typeof item === \"object\" && item !== null) {\n\t                        if (Array.isArray(item)) {\n\t                            clone[index] = deepCloneArray(item);\n\t                        } else if (isSpecificValue(item)) {\n\t                            clone[index] = cloneSpecificValue(item);\n\t                        } else {\n\t                            clone[index] = deepExtend({}, item);\n\t                        }\n\t                    } else {\n\t                        clone[index] = item;\n\t                    }\n\t                });\n\t                return clone;\n\t            }\n\t            var deepExtend = module.exports = function() {\n\t                if (arguments.length < 1 || typeof arguments[0] !== \"object\") {\n\t                    return false;\n\t                }\n\t                if (arguments.length < 2) {\n\t                    return arguments[0];\n\t                }\n\t                var target = arguments[0];\n\t                var args = Array.prototype.slice.call(arguments, 1);\n\t                var val, src, clone;\n\t                args.forEach(function(obj) {\n\t                    if (typeof obj !== \"object\" || Array.isArray(obj)) {\n\t                        return;\n\t                    }\n\t                    Object.keys(obj).forEach(function(key) {\n\t                        src = target[key];\n\t                        val = obj[key];\n\t                        if (val === target) {\n\t                            return;\n\t                        } else if (typeof val !== \"object\" || val === null) {\n\t                            target[key] = val;\n\t                            return;\n\t                        } else if (Array.isArray(val)) {\n\t                            target[key] = deepCloneArray(val);\n\t                            return;\n\t                        } else if (isSpecificValue(val)) {\n\t                            target[key] = cloneSpecificValue(val);\n\t                            return;\n\t                        } else if (typeof src !== \"object\" || src === null || Array.isArray(src)) {\n\t                            target[key] = deepExtend({}, val);\n\t                            return;\n\t                        } else {\n\t                            target[key] = deepExtend(src, val);\n\t                            return;\n\t                        }\n\t                    });\n\t                });\n\t                return target;\n\t            };\n\t        }).call(exports, __webpack_require__(10).Buffer);\n\t    }, function(module, exports, __webpack_require__) {\n\t        (function(Buffer, global) {\n\t            /*!\n\t\t * The buffer module from node.js, for the browser.\n\t\t *\n\t\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t\t * @license  MIT\n\t\t */\n\t            \"use strict\";\n\t            var base64 = __webpack_require__(11);\n\t            var ieee754 = __webpack_require__(12);\n\t            var isArray = __webpack_require__(13);\n\t            exports.Buffer = Buffer;\n\t            exports.SlowBuffer = SlowBuffer;\n\t            exports.INSPECT_MAX_BYTES = 50;\n\t            Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\t            exports.kMaxLength = kMaxLength();\n\t            function typedArraySupport() {\n\t                try {\n\t                    var arr = new Uint8Array(1);\n\t                    arr.__proto__ = {\n\t                        __proto__: Uint8Array.prototype,\n\t                        foo: function() {\n\t                            return 42;\n\t                        }\n\t                    };\n\t                    return arr.foo() === 42 && typeof arr.subarray === \"function\" && arr.subarray(1, 1).byteLength === 0;\n\t                } catch (e) {\n\t                    return false;\n\t                }\n\t            }\n\t            function kMaxLength() {\n\t                return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;\n\t            }\n\t            function createBuffer(that, length) {\n\t                if (kMaxLength() < length) {\n\t                    throw new RangeError(\"Invalid typed array length\");\n\t                }\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    that = new Uint8Array(length);\n\t                    that.__proto__ = Buffer.prototype;\n\t                } else {\n\t                    if (that === null) {\n\t                        that = new Buffer(length);\n\t                    }\n\t                    that.length = length;\n\t                }\n\t                return that;\n\t            }\n\t            function Buffer(arg, encodingOrOffset, length) {\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t                    return new Buffer(arg, encodingOrOffset, length);\n\t                }\n\t                if (typeof arg === \"number\") {\n\t                    if (typeof encodingOrOffset === \"string\") {\n\t                        throw new Error(\"If encoding is specified then the first argument must be a string\");\n\t                    }\n\t                    return allocUnsafe(this, arg);\n\t                }\n\t                return from(this, arg, encodingOrOffset, length);\n\t            }\n\t            Buffer.poolSize = 8192;\n\t            Buffer._augment = function(arr) {\n\t                arr.__proto__ = Buffer.prototype;\n\t                return arr;\n\t            };\n\t            function from(that, value, encodingOrOffset, length) {\n\t                if (typeof value === \"number\") {\n\t                    throw new TypeError('\"value\" argument must not be a number');\n\t                }\n\t                if (typeof ArrayBuffer !== \"undefined\" && value instanceof ArrayBuffer) {\n\t                    return fromArrayBuffer(that, value, encodingOrOffset, length);\n\t                }\n\t                if (typeof value === \"string\") {\n\t                    return fromString(that, value, encodingOrOffset);\n\t                }\n\t                return fromObject(that, value);\n\t            }\n\t            Buffer.from = function(value, encodingOrOffset, length) {\n\t                return from(null, value, encodingOrOffset, length);\n\t            };\n\t            if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                Buffer.prototype.__proto__ = Uint8Array.prototype;\n\t                Buffer.__proto__ = Uint8Array;\n\t                if (typeof Symbol !== \"undefined\" && Symbol.species && Buffer[Symbol.species] === Buffer) {\n\t                    Object.defineProperty(Buffer, Symbol.species, {\n\t                        value: null,\n\t                        configurable: true\n\t                    });\n\t                }\n\t            }\n\t            function assertSize(size) {\n\t                if (typeof size !== \"number\") {\n\t                    throw new TypeError('\"size\" argument must be a number');\n\t                } else if (size < 0) {\n\t                    throw new RangeError('\"size\" argument must not be negative');\n\t                }\n\t            }\n\t            function alloc(that, size, fill, encoding) {\n\t                assertSize(size);\n\t                if (size <= 0) {\n\t                    return createBuffer(that, size);\n\t                }\n\t                if (fill !== undefined) {\n\t                    return typeof encoding === \"string\" ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n\t                }\n\t                return createBuffer(that, size);\n\t            }\n\t            Buffer.alloc = function(size, fill, encoding) {\n\t                return alloc(null, size, fill, encoding);\n\t            };\n\t            function allocUnsafe(that, size) {\n\t                assertSize(size);\n\t                that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    for (var i = 0; i < size; ++i) {\n\t                        that[i] = 0;\n\t                    }\n\t                }\n\t                return that;\n\t            }\n\t            Buffer.allocUnsafe = function(size) {\n\t                return allocUnsafe(null, size);\n\t            };\n\t            Buffer.allocUnsafeSlow = function(size) {\n\t                return allocUnsafe(null, size);\n\t            };\n\t            function fromString(that, string, encoding) {\n\t                if (typeof encoding !== \"string\" || encoding === \"\") {\n\t                    encoding = \"utf8\";\n\t                }\n\t                if (!Buffer.isEncoding(encoding)) {\n\t                    throw new TypeError('\"encoding\" must be a valid string encoding');\n\t                }\n\t                var length = byteLength(string, encoding) | 0;\n\t                that = createBuffer(that, length);\n\t                var actual = that.write(string, encoding);\n\t                if (actual !== length) {\n\t                    that = that.slice(0, actual);\n\t                }\n\t                return that;\n\t            }\n\t            function fromArrayLike(that, array) {\n\t                var length = array.length < 0 ? 0 : checked(array.length) | 0;\n\t                that = createBuffer(that, length);\n\t                for (var i = 0; i < length; i += 1) {\n\t                    that[i] = array[i] & 255;\n\t                }\n\t                return that;\n\t            }\n\t            function fromArrayBuffer(that, array, byteOffset, length) {\n\t                array.byteLength;\n\t                if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t                    throw new RangeError(\"'offset' is out of bounds\");\n\t                }\n\t                if (array.byteLength < byteOffset + (length || 0)) {\n\t                    throw new RangeError(\"'length' is out of bounds\");\n\t                }\n\t                if (byteOffset === undefined && length === undefined) {\n\t                    array = new Uint8Array(array);\n\t                } else if (length === undefined) {\n\t                    array = new Uint8Array(array, byteOffset);\n\t                } else {\n\t                    array = new Uint8Array(array, byteOffset, length);\n\t                }\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    that = array;\n\t                    that.__proto__ = Buffer.prototype;\n\t                } else {\n\t                    that = fromArrayLike(that, array);\n\t                }\n\t                return that;\n\t            }\n\t            function fromObject(that, obj) {\n\t                if (Buffer.isBuffer(obj)) {\n\t                    var len = checked(obj.length) | 0;\n\t                    that = createBuffer(that, len);\n\t                    if (that.length === 0) {\n\t                        return that;\n\t                    }\n\t                    obj.copy(that, 0, 0, len);\n\t                    return that;\n\t                }\n\t                if (obj) {\n\t                    if (typeof ArrayBuffer !== \"undefined\" && obj.buffer instanceof ArrayBuffer || \"length\" in obj) {\n\t                        if (typeof obj.length !== \"number\" || isnan(obj.length)) {\n\t                            return createBuffer(that, 0);\n\t                        }\n\t                        return fromArrayLike(that, obj);\n\t                    }\n\t                    if (obj.type === \"Buffer\" && isArray(obj.data)) {\n\t                        return fromArrayLike(that, obj.data);\n\t                    }\n\t                }\n\t                throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n\t            }\n\t            function checked(length) {\n\t                if (length >= kMaxLength()) {\n\t                    throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + kMaxLength().toString(16) + \" bytes\");\n\t                }\n\t                return length | 0;\n\t            }\n\t            function SlowBuffer(length) {\n\t                if (+length != length) {\n\t                    length = 0;\n\t                }\n\t                return Buffer.alloc(+length);\n\t            }\n\t            Buffer.isBuffer = function isBuffer(b) {\n\t                return !!(b != null && b._isBuffer);\n\t            };\n\t            Buffer.compare = function compare(a, b) {\n\t                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t                    throw new TypeError(\"Arguments must be Buffers\");\n\t                }\n\t                if (a === b) return 0;\n\t                var x = a.length;\n\t                var y = b.length;\n\t                for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t                    if (a[i] !== b[i]) {\n\t                        x = a[i];\n\t                        y = b[i];\n\t                        break;\n\t                    }\n\t                }\n\t                if (x < y) return -1;\n\t                if (y < x) return 1;\n\t                return 0;\n\t            };\n\t            Buffer.isEncoding = function isEncoding(encoding) {\n\t                switch (String(encoding).toLowerCase()) {\n\t                  case \"hex\":\n\t                  case \"utf8\":\n\t                  case \"utf-8\":\n\t                  case \"ascii\":\n\t                  case \"latin1\":\n\t                  case \"binary\":\n\t                  case \"base64\":\n\t                  case \"ucs2\":\n\t                  case \"ucs-2\":\n\t                  case \"utf16le\":\n\t                  case \"utf-16le\":\n\t                    return true;\n\t\n\t                  default:\n\t                    return false;\n\t                }\n\t            };\n\t            Buffer.concat = function concat(list, length) {\n\t                if (!isArray(list)) {\n\t                    throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t                }\n\t                if (list.length === 0) {\n\t                    return Buffer.alloc(0);\n\t                }\n\t                var i;\n\t                if (length === undefined) {\n\t                    length = 0;\n\t                    for (i = 0; i < list.length; ++i) {\n\t                        length += list[i].length;\n\t                    }\n\t                }\n\t                var buffer = Buffer.allocUnsafe(length);\n\t                var pos = 0;\n\t                for (i = 0; i < list.length; ++i) {\n\t                    var buf = list[i];\n\t                    if (!Buffer.isBuffer(buf)) {\n\t                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t                    }\n\t                    buf.copy(buffer, pos);\n\t                    pos += buf.length;\n\t                }\n\t                return buffer;\n\t            };\n\t            function byteLength(string, encoding) {\n\t                if (Buffer.isBuffer(string)) {\n\t                    return string.length;\n\t                }\n\t                if (typeof ArrayBuffer !== \"undefined\" && typeof ArrayBuffer.isView === \"function\" && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t                    return string.byteLength;\n\t                }\n\t                if (typeof string !== \"string\") {\n\t                    string = \"\" + string;\n\t                }\n\t                var len = string.length;\n\t                if (len === 0) return 0;\n\t                var loweredCase = false;\n\t                for (;;) {\n\t                    switch (encoding) {\n\t                      case \"ascii\":\n\t                      case \"latin1\":\n\t                      case \"binary\":\n\t                        return len;\n\t\n\t                      case \"utf8\":\n\t                      case \"utf-8\":\n\t                      case undefined:\n\t                        return utf8ToBytes(string).length;\n\t\n\t                      case \"ucs2\":\n\t                      case \"ucs-2\":\n\t                      case \"utf16le\":\n\t                      case \"utf-16le\":\n\t                        return len * 2;\n\t\n\t                      case \"hex\":\n\t                        return len >>> 1;\n\t\n\t                      case \"base64\":\n\t                        return base64ToBytes(string).length;\n\t\n\t                      default:\n\t                        if (loweredCase) return utf8ToBytes(string).length;\n\t                        encoding = (\"\" + encoding).toLowerCase();\n\t                        loweredCase = true;\n\t                    }\n\t                }\n\t            }\n\t            Buffer.byteLength = byteLength;\n\t            function slowToString(encoding, start, end) {\n\t                var loweredCase = false;\n\t                if (start === undefined || start < 0) {\n\t                    start = 0;\n\t                }\n\t                if (start > this.length) {\n\t                    return \"\";\n\t                }\n\t                if (end === undefined || end > this.length) {\n\t                    end = this.length;\n\t                }\n\t                if (end <= 0) {\n\t                    return \"\";\n\t                }\n\t                end >>>= 0;\n\t                start >>>= 0;\n\t                if (end <= start) {\n\t                    return \"\";\n\t                }\n\t                if (!encoding) encoding = \"utf8\";\n\t                while (true) {\n\t                    switch (encoding) {\n\t                      case \"hex\":\n\t                        return hexSlice(this, start, end);\n\t\n\t                      case \"utf8\":\n\t                      case \"utf-8\":\n\t                        return utf8Slice(this, start, end);\n\t\n\t                      case \"ascii\":\n\t                        return asciiSlice(this, start, end);\n\t\n\t                      case \"latin1\":\n\t                      case \"binary\":\n\t                        return latin1Slice(this, start, end);\n\t\n\t                      case \"base64\":\n\t                        return base64Slice(this, start, end);\n\t\n\t                      case \"ucs2\":\n\t                      case \"ucs-2\":\n\t                      case \"utf16le\":\n\t                      case \"utf-16le\":\n\t                        return utf16leSlice(this, start, end);\n\t\n\t                      default:\n\t                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n\t                        encoding = (encoding + \"\").toLowerCase();\n\t                        loweredCase = true;\n\t                    }\n\t                }\n\t            }\n\t            Buffer.prototype._isBuffer = true;\n\t            function swap(b, n, m) {\n\t                var i = b[n];\n\t                b[n] = b[m];\n\t                b[m] = i;\n\t            }\n\t            Buffer.prototype.swap16 = function swap16() {\n\t                var len = this.length;\n\t                if (len % 2 !== 0) {\n\t                    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n\t                }\n\t                for (var i = 0; i < len; i += 2) {\n\t                    swap(this, i, i + 1);\n\t                }\n\t                return this;\n\t            };\n\t            Buffer.prototype.swap32 = function swap32() {\n\t                var len = this.length;\n\t                if (len % 4 !== 0) {\n\t                    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n\t                }\n\t                for (var i = 0; i < len; i += 4) {\n\t                    swap(this, i, i + 3);\n\t                    swap(this, i + 1, i + 2);\n\t                }\n\t                return this;\n\t            };\n\t            Buffer.prototype.swap64 = function swap64() {\n\t                var len = this.length;\n\t                if (len % 8 !== 0) {\n\t                    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n\t                }\n\t                for (var i = 0; i < len; i += 8) {\n\t                    swap(this, i, i + 7);\n\t                    swap(this, i + 1, i + 6);\n\t                    swap(this, i + 2, i + 5);\n\t                    swap(this, i + 3, i + 4);\n\t                }\n\t                return this;\n\t            };\n\t            Buffer.prototype.toString = function toString() {\n\t                var length = this.length | 0;\n\t                if (length === 0) return \"\";\n\t                if (arguments.length === 0) return utf8Slice(this, 0, length);\n\t                return slowToString.apply(this, arguments);\n\t            };\n\t            Buffer.prototype.equals = function equals(b) {\n\t                if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n\t                if (this === b) return true;\n\t                return Buffer.compare(this, b) === 0;\n\t            };\n\t            Buffer.prototype.inspect = function inspect() {\n\t                var str = \"\";\n\t                var max = exports.INSPECT_MAX_BYTES;\n\t                if (this.length > 0) {\n\t                    str = this.toString(\"hex\", 0, max).match(/.{2}/g).join(\" \");\n\t                    if (this.length > max) str += \" ... \";\n\t                }\n\t                return \"<Buffer \" + str + \">\";\n\t            };\n\t            Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n\t                if (!Buffer.isBuffer(target)) {\n\t                    throw new TypeError(\"Argument must be a Buffer\");\n\t                }\n\t                if (start === undefined) {\n\t                    start = 0;\n\t                }\n\t                if (end === undefined) {\n\t                    end = target ? target.length : 0;\n\t                }\n\t                if (thisStart === undefined) {\n\t                    thisStart = 0;\n\t                }\n\t                if (thisEnd === undefined) {\n\t                    thisEnd = this.length;\n\t                }\n\t                if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t                    throw new RangeError(\"out of range index\");\n\t                }\n\t                if (thisStart >= thisEnd && start >= end) {\n\t                    return 0;\n\t                }\n\t                if (thisStart >= thisEnd) {\n\t                    return -1;\n\t                }\n\t                if (start >= end) {\n\t                    return 1;\n\t                }\n\t                start >>>= 0;\n\t                end >>>= 0;\n\t                thisStart >>>= 0;\n\t                thisEnd >>>= 0;\n\t                if (this === target) return 0;\n\t                var x = thisEnd - thisStart;\n\t                var y = end - start;\n\t                var len = Math.min(x, y);\n\t                var thisCopy = this.slice(thisStart, thisEnd);\n\t                var targetCopy = target.slice(start, end);\n\t                for (var i = 0; i < len; ++i) {\n\t                    if (thisCopy[i] !== targetCopy[i]) {\n\t                        x = thisCopy[i];\n\t                        y = targetCopy[i];\n\t                        break;\n\t                    }\n\t                }\n\t                if (x < y) return -1;\n\t                if (y < x) return 1;\n\t                return 0;\n\t            };\n\t            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n\t                if (buffer.length === 0) return -1;\n\t                if (typeof byteOffset === \"string\") {\n\t                    encoding = byteOffset;\n\t                    byteOffset = 0;\n\t                } else if (byteOffset > 2147483647) {\n\t                    byteOffset = 2147483647;\n\t                } else if (byteOffset < -2147483648) {\n\t                    byteOffset = -2147483648;\n\t                }\n\t                byteOffset = +byteOffset;\n\t                if (isNaN(byteOffset)) {\n\t                    byteOffset = dir ? 0 : buffer.length - 1;\n\t                }\n\t                if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\t                if (byteOffset >= buffer.length) {\n\t                    if (dir) return -1; else byteOffset = buffer.length - 1;\n\t                } else if (byteOffset < 0) {\n\t                    if (dir) byteOffset = 0; else return -1;\n\t                }\n\t                if (typeof val === \"string\") {\n\t                    val = Buffer.from(val, encoding);\n\t                }\n\t                if (Buffer.isBuffer(val)) {\n\t                    if (val.length === 0) {\n\t                        return -1;\n\t                    }\n\t                    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n\t                } else if (typeof val === \"number\") {\n\t                    val = val & 255;\n\t                    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === \"function\") {\n\t                        if (dir) {\n\t                            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n\t                        } else {\n\t                            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n\t                        }\n\t                    }\n\t                    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);\n\t                }\n\t                throw new TypeError(\"val must be string, number or Buffer\");\n\t            }\n\t            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n\t                var indexSize = 1;\n\t                var arrLength = arr.length;\n\t                var valLength = val.length;\n\t                if (encoding !== undefined) {\n\t                    encoding = String(encoding).toLowerCase();\n\t                    if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n\t                        if (arr.length < 2 || val.length < 2) {\n\t                            return -1;\n\t                        }\n\t                        indexSize = 2;\n\t                        arrLength /= 2;\n\t                        valLength /= 2;\n\t                        byteOffset /= 2;\n\t                    }\n\t                }\n\t                function read(buf, i) {\n\t                    if (indexSize === 1) {\n\t                        return buf[i];\n\t                    } else {\n\t                        return buf.readUInt16BE(i * indexSize);\n\t                    }\n\t                }\n\t                var i;\n\t                if (dir) {\n\t                    var foundIndex = -1;\n\t                    for (i = byteOffset; i < arrLength; i++) {\n\t                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t                            if (foundIndex === -1) foundIndex = i;\n\t                            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n\t                        } else {\n\t                            if (foundIndex !== -1) i -= i - foundIndex;\n\t                            foundIndex = -1;\n\t                        }\n\t                    }\n\t                } else {\n\t                    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\t                    for (i = byteOffset; i >= 0; i--) {\n\t                        var found = true;\n\t                        for (var j = 0; j < valLength; j++) {\n\t                            if (read(arr, i + j) !== read(val, j)) {\n\t                                found = false;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (found) return i;\n\t                    }\n\t                }\n\t                return -1;\n\t            }\n\t            Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n\t                return this.indexOf(val, byteOffset, encoding) !== -1;\n\t            };\n\t            Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n\t                return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n\t            };\n\t            Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n\t                return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n\t            };\n\t            function hexWrite(buf, string, offset, length) {\n\t                offset = Number(offset) || 0;\n\t                var remaining = buf.length - offset;\n\t                if (!length) {\n\t                    length = remaining;\n\t                } else {\n\t                    length = Number(length);\n\t                    if (length > remaining) {\n\t                        length = remaining;\n\t                    }\n\t                }\n\t                var strLen = string.length;\n\t                if (strLen % 2 !== 0) throw new TypeError(\"Invalid hex string\");\n\t                if (length > strLen / 2) {\n\t                    length = strLen / 2;\n\t                }\n\t                for (var i = 0; i < length; ++i) {\n\t                    var parsed = parseInt(string.substr(i * 2, 2), 16);\n\t                    if (isNaN(parsed)) return i;\n\t                    buf[offset + i] = parsed;\n\t                }\n\t                return i;\n\t            }\n\t            function utf8Write(buf, string, offset, length) {\n\t                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n\t            }\n\t            function asciiWrite(buf, string, offset, length) {\n\t                return blitBuffer(asciiToBytes(string), buf, offset, length);\n\t            }\n\t            function latin1Write(buf, string, offset, length) {\n\t                return asciiWrite(buf, string, offset, length);\n\t            }\n\t            function base64Write(buf, string, offset, length) {\n\t                return blitBuffer(base64ToBytes(string), buf, offset, length);\n\t            }\n\t            function ucs2Write(buf, string, offset, length) {\n\t                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n\t            }\n\t            Buffer.prototype.write = function write(string, offset, length, encoding) {\n\t                if (offset === undefined) {\n\t                    encoding = \"utf8\";\n\t                    length = this.length;\n\t                    offset = 0;\n\t                } else if (length === undefined && typeof offset === \"string\") {\n\t                    encoding = offset;\n\t                    length = this.length;\n\t                    offset = 0;\n\t                } else if (isFinite(offset)) {\n\t                    offset = offset | 0;\n\t                    if (isFinite(length)) {\n\t                        length = length | 0;\n\t                        if (encoding === undefined) encoding = \"utf8\";\n\t                    } else {\n\t                        encoding = length;\n\t                        length = undefined;\n\t                    }\n\t                } else {\n\t                    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n\t                }\n\t                var remaining = this.length - offset;\n\t                if (length === undefined || length > remaining) length = remaining;\n\t                if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n\t                    throw new RangeError(\"Attempt to write outside buffer bounds\");\n\t                }\n\t                if (!encoding) encoding = \"utf8\";\n\t                var loweredCase = false;\n\t                for (;;) {\n\t                    switch (encoding) {\n\t                      case \"hex\":\n\t                        return hexWrite(this, string, offset, length);\n\t\n\t                      case \"utf8\":\n\t                      case \"utf-8\":\n\t                        return utf8Write(this, string, offset, length);\n\t\n\t                      case \"ascii\":\n\t                        return asciiWrite(this, string, offset, length);\n\t\n\t                      case \"latin1\":\n\t                      case \"binary\":\n\t                        return latin1Write(this, string, offset, length);\n\t\n\t                      case \"base64\":\n\t                        return base64Write(this, string, offset, length);\n\t\n\t                      case \"ucs2\":\n\t                      case \"ucs-2\":\n\t                      case \"utf16le\":\n\t                      case \"utf-16le\":\n\t                        return ucs2Write(this, string, offset, length);\n\t\n\t                      default:\n\t                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n\t                        encoding = (\"\" + encoding).toLowerCase();\n\t                        loweredCase = true;\n\t                    }\n\t                }\n\t            };\n\t            Buffer.prototype.toJSON = function toJSON() {\n\t                return {\n\t                    type: \"Buffer\",\n\t                    data: Array.prototype.slice.call(this._arr || this, 0)\n\t                };\n\t            };\n\t            function base64Slice(buf, start, end) {\n\t                if (start === 0 && end === buf.length) {\n\t                    return base64.fromByteArray(buf);\n\t                } else {\n\t                    return base64.fromByteArray(buf.slice(start, end));\n\t                }\n\t            }\n\t            function utf8Slice(buf, start, end) {\n\t                end = Math.min(buf.length, end);\n\t                var res = [];\n\t                var i = start;\n\t                while (i < end) {\n\t                    var firstByte = buf[i];\n\t                    var codePoint = null;\n\t                    var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n\t                    if (i + bytesPerSequence <= end) {\n\t                        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\t                        switch (bytesPerSequence) {\n\t                          case 1:\n\t                            if (firstByte < 128) {\n\t                                codePoint = firstByte;\n\t                            }\n\t                            break;\n\t\n\t                          case 2:\n\t                            secondByte = buf[i + 1];\n\t                            if ((secondByte & 192) === 128) {\n\t                                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n\t                                if (tempCodePoint > 127) {\n\t                                    codePoint = tempCodePoint;\n\t                                }\n\t                            }\n\t                            break;\n\t\n\t                          case 3:\n\t                            secondByte = buf[i + 1];\n\t                            thirdByte = buf[i + 2];\n\t                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n\t                                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n\t                                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n\t                                    codePoint = tempCodePoint;\n\t                                }\n\t                            }\n\t                            break;\n\t\n\t                          case 4:\n\t                            secondByte = buf[i + 1];\n\t                            thirdByte = buf[i + 2];\n\t                            fourthByte = buf[i + 3];\n\t                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n\t                                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n\t                                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n\t                                    codePoint = tempCodePoint;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (codePoint === null) {\n\t                        codePoint = 65533;\n\t                        bytesPerSequence = 1;\n\t                    } else if (codePoint > 65535) {\n\t                        codePoint -= 65536;\n\t                        res.push(codePoint >>> 10 & 1023 | 55296);\n\t                        codePoint = 56320 | codePoint & 1023;\n\t                    }\n\t                    res.push(codePoint);\n\t                    i += bytesPerSequence;\n\t                }\n\t                return decodeCodePointsArray(res);\n\t            }\n\t            var MAX_ARGUMENTS_LENGTH = 4096;\n\t            function decodeCodePointsArray(codePoints) {\n\t                var len = codePoints.length;\n\t                if (len <= MAX_ARGUMENTS_LENGTH) {\n\t                    return String.fromCharCode.apply(String, codePoints);\n\t                }\n\t                var res = \"\";\n\t                var i = 0;\n\t                while (i < len) {\n\t                    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n\t                }\n\t                return res;\n\t            }\n\t            function asciiSlice(buf, start, end) {\n\t                var ret = \"\";\n\t                end = Math.min(buf.length, end);\n\t                for (var i = start; i < end; ++i) {\n\t                    ret += String.fromCharCode(buf[i] & 127);\n\t                }\n\t                return ret;\n\t            }\n\t            function latin1Slice(buf, start, end) {\n\t                var ret = \"\";\n\t                end = Math.min(buf.length, end);\n\t                for (var i = start; i < end; ++i) {\n\t                    ret += String.fromCharCode(buf[i]);\n\t                }\n\t                return ret;\n\t            }\n\t            function hexSlice(buf, start, end) {\n\t                var len = buf.length;\n\t                if (!start || start < 0) start = 0;\n\t                if (!end || end < 0 || end > len) end = len;\n\t                var out = \"\";\n\t                for (var i = start; i < end; ++i) {\n\t                    out += toHex(buf[i]);\n\t                }\n\t                return out;\n\t            }\n\t            function utf16leSlice(buf, start, end) {\n\t                var bytes = buf.slice(start, end);\n\t                var res = \"\";\n\t                for (var i = 0; i < bytes.length; i += 2) {\n\t                    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n\t                }\n\t                return res;\n\t            }\n\t            Buffer.prototype.slice = function slice(start, end) {\n\t                var len = this.length;\n\t                start = ~~start;\n\t                end = end === undefined ? len : ~~end;\n\t                if (start < 0) {\n\t                    start += len;\n\t                    if (start < 0) start = 0;\n\t                } else if (start > len) {\n\t                    start = len;\n\t                }\n\t                if (end < 0) {\n\t                    end += len;\n\t                    if (end < 0) end = 0;\n\t                } else if (end > len) {\n\t                    end = len;\n\t                }\n\t                if (end < start) end = start;\n\t                var newBuf;\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    newBuf = this.subarray(start, end);\n\t                    newBuf.__proto__ = Buffer.prototype;\n\t                } else {\n\t                    var sliceLen = end - start;\n\t                    newBuf = new Buffer(sliceLen, undefined);\n\t                    for (var i = 0; i < sliceLen; ++i) {\n\t                        newBuf[i] = this[i + start];\n\t                    }\n\t                }\n\t                return newBuf;\n\t            };\n\t            function checkOffset(offset, ext, length) {\n\t                if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n\t                if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n\t            }\n\t            Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t                var val = this[offset];\n\t                var mul = 1;\n\t                var i = 0;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    val += this[offset + i] * mul;\n\t                }\n\t                return val;\n\t            };\n\t            Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) {\n\t                    checkOffset(offset, byteLength, this.length);\n\t                }\n\t                var val = this[offset + --byteLength];\n\t                var mul = 1;\n\t                while (byteLength > 0 && (mul *= 256)) {\n\t                    val += this[offset + --byteLength] * mul;\n\t                }\n\t                return val;\n\t            };\n\t            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 1, this.length);\n\t                return this[offset];\n\t            };\n\t            Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                return this[offset] | this[offset + 1] << 8;\n\t            };\n\t            Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                return this[offset] << 8 | this[offset + 1];\n\t            };\n\t            Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n\t            };\n\t            Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n\t            };\n\t            Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t                var val = this[offset];\n\t                var mul = 1;\n\t                var i = 0;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    val += this[offset + i] * mul;\n\t                }\n\t                mul *= 128;\n\t                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t                return val;\n\t            };\n\t            Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t                var i = byteLength;\n\t                var mul = 1;\n\t                var val = this[offset + --i];\n\t                while (i > 0 && (mul *= 256)) {\n\t                    val += this[offset + --i] * mul;\n\t                }\n\t                mul *= 128;\n\t                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t                return val;\n\t            };\n\t            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 1, this.length);\n\t                if (!(this[offset] & 128)) return this[offset];\n\t                return (255 - this[offset] + 1) * -1;\n\t            };\n\t            Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                var val = this[offset] | this[offset + 1] << 8;\n\t                return val & 32768 ? val | 4294901760 : val;\n\t            };\n\t            Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                var val = this[offset + 1] | this[offset] << 8;\n\t                return val & 32768 ? val | 4294901760 : val;\n\t            };\n\t            Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n\t            };\n\t            Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n\t            };\n\t            Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return ieee754.read(this, offset, true, 23, 4);\n\t            };\n\t            Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return ieee754.read(this, offset, false, 23, 4);\n\t            };\n\t            Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 8, this.length);\n\t                return ieee754.read(this, offset, true, 52, 8);\n\t            };\n\t            Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 8, this.length);\n\t                return ieee754.read(this, offset, false, 52, 8);\n\t            };\n\t            function checkInt(buf, value, offset, ext, max, min) {\n\t                if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n\t                if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n\t                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n\t            }\n\t            Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) {\n\t                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t                }\n\t                var mul = 1;\n\t                var i = 0;\n\t                this[offset] = value & 255;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    this[offset + i] = value / mul & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) {\n\t                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t                }\n\t                var i = byteLength - 1;\n\t                var mul = 1;\n\t                this[offset + i] = value & 255;\n\t                while (--i >= 0 && (mul *= 256)) {\n\t                    this[offset + i] = value / mul & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t                this[offset] = value & 255;\n\t                return offset + 1;\n\t            };\n\t            function objectWriteUInt16(buf, value, offset, littleEndian) {\n\t                if (value < 0) value = 65535 + value + 1;\n\t                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t                    buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n\t                }\n\t            }\n\t            Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value & 255;\n\t                    this[offset + 1] = value >>> 8;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, true);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 8;\n\t                    this[offset + 1] = value & 255;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, false);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            function objectWriteUInt32(buf, value, offset, littleEndian) {\n\t                if (value < 0) value = 4294967295 + value + 1;\n\t                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t                    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 255;\n\t                }\n\t            }\n\t            Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset + 3] = value >>> 24;\n\t                    this[offset + 2] = value >>> 16;\n\t                    this[offset + 1] = value >>> 8;\n\t                    this[offset] = value & 255;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, true);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 24;\n\t                    this[offset + 1] = value >>> 16;\n\t                    this[offset + 2] = value >>> 8;\n\t                    this[offset + 3] = value & 255;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, false);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) {\n\t                    var limit = Math.pow(2, 8 * byteLength - 1);\n\t                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t                }\n\t                var i = 0;\n\t                var mul = 1;\n\t                var sub = 0;\n\t                this[offset] = value & 255;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t                        sub = 1;\n\t                    }\n\t                    this[offset + i] = (value / mul >> 0) - sub & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) {\n\t                    var limit = Math.pow(2, 8 * byteLength - 1);\n\t                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t                }\n\t                var i = byteLength - 1;\n\t                var mul = 1;\n\t                var sub = 0;\n\t                this[offset + i] = value & 255;\n\t                while (--i >= 0 && (mul *= 256)) {\n\t                    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t                        sub = 1;\n\t                    }\n\t                    this[offset + i] = (value / mul >> 0) - sub & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t                if (value < 0) value = 255 + value + 1;\n\t                this[offset] = value & 255;\n\t                return offset + 1;\n\t            };\n\t            Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value & 255;\n\t                    this[offset + 1] = value >>> 8;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, true);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 8;\n\t                    this[offset + 1] = value & 255;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, false);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value & 255;\n\t                    this[offset + 1] = value >>> 8;\n\t                    this[offset + 2] = value >>> 16;\n\t                    this[offset + 3] = value >>> 24;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, true);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n\t                if (value < 0) value = 4294967295 + value + 1;\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 24;\n\t                    this[offset + 1] = value >>> 16;\n\t                    this[offset + 2] = value >>> 8;\n\t                    this[offset + 3] = value & 255;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, false);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            function checkIEEE754(buf, value, offset, ext, max, min) {\n\t                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n\t                if (offset < 0) throw new RangeError(\"Index out of range\");\n\t            }\n\t            function writeFloat(buf, value, offset, littleEndian, noAssert) {\n\t                if (!noAssert) {\n\t                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);\n\t                }\n\t                ieee754.write(buf, value, offset, littleEndian, 23, 4);\n\t                return offset + 4;\n\t            }\n\t            Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n\t                return writeFloat(this, value, offset, true, noAssert);\n\t            };\n\t            Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n\t                return writeFloat(this, value, offset, false, noAssert);\n\t            };\n\t            function writeDouble(buf, value, offset, littleEndian, noAssert) {\n\t                if (!noAssert) {\n\t                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);\n\t                }\n\t                ieee754.write(buf, value, offset, littleEndian, 52, 8);\n\t                return offset + 8;\n\t            }\n\t            Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n\t                return writeDouble(this, value, offset, true, noAssert);\n\t            };\n\t            Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n\t                return writeDouble(this, value, offset, false, noAssert);\n\t            };\n\t            Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n\t                if (!start) start = 0;\n\t                if (!end && end !== 0) end = this.length;\n\t                if (targetStart >= target.length) targetStart = target.length;\n\t                if (!targetStart) targetStart = 0;\n\t                if (end > 0 && end < start) end = start;\n\t                if (end === start) return 0;\n\t                if (target.length === 0 || this.length === 0) return 0;\n\t                if (targetStart < 0) {\n\t                    throw new RangeError(\"targetStart out of bounds\");\n\t                }\n\t                if (start < 0 || start >= this.length) throw new RangeError(\"sourceStart out of bounds\");\n\t                if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n\t                if (end > this.length) end = this.length;\n\t                if (target.length - targetStart < end - start) {\n\t                    end = target.length - targetStart + start;\n\t                }\n\t                var len = end - start;\n\t                var i;\n\t                if (this === target && start < targetStart && targetStart < end) {\n\t                    for (i = len - 1; i >= 0; --i) {\n\t                        target[i + targetStart] = this[i + start];\n\t                    }\n\t                } else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    for (i = 0; i < len; ++i) {\n\t                        target[i + targetStart] = this[i + start];\n\t                    }\n\t                } else {\n\t                    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n\t                }\n\t                return len;\n\t            };\n\t            Buffer.prototype.fill = function fill(val, start, end, encoding) {\n\t                if (typeof val === \"string\") {\n\t                    if (typeof start === \"string\") {\n\t                        encoding = start;\n\t                        start = 0;\n\t                        end = this.length;\n\t                    } else if (typeof end === \"string\") {\n\t                        encoding = end;\n\t                        end = this.length;\n\t                    }\n\t                    if (val.length === 1) {\n\t                        var code = val.charCodeAt(0);\n\t                        if (code < 256) {\n\t                            val = code;\n\t                        }\n\t                    }\n\t                    if (encoding !== undefined && typeof encoding !== \"string\") {\n\t                        throw new TypeError(\"encoding must be a string\");\n\t                    }\n\t                    if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n\t                        throw new TypeError(\"Unknown encoding: \" + encoding);\n\t                    }\n\t                } else if (typeof val === \"number\") {\n\t                    val = val & 255;\n\t                }\n\t                if (start < 0 || this.length < start || this.length < end) {\n\t                    throw new RangeError(\"Out of range index\");\n\t                }\n\t                if (end <= start) {\n\t                    return this;\n\t                }\n\t                start = start >>> 0;\n\t                end = end === undefined ? this.length : end >>> 0;\n\t                if (!val) val = 0;\n\t                var i;\n\t                if (typeof val === \"number\") {\n\t                    for (i = start; i < end; ++i) {\n\t                        this[i] = val;\n\t                    }\n\t                } else {\n\t                    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n\t                    var len = bytes.length;\n\t                    for (i = 0; i < end - start; ++i) {\n\t                        this[i + start] = bytes[i % len];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\t            function base64clean(str) {\n\t                str = stringtrim(str).replace(INVALID_BASE64_RE, \"\");\n\t                if (str.length < 2) return \"\";\n\t                while (str.length % 4 !== 0) {\n\t                    str = str + \"=\";\n\t                }\n\t                return str;\n\t            }\n\t            function stringtrim(str) {\n\t                if (str.trim) return str.trim();\n\t                return str.replace(/^\\s+|\\s+$/g, \"\");\n\t            }\n\t            function toHex(n) {\n\t                if (n < 16) return \"0\" + n.toString(16);\n\t                return n.toString(16);\n\t            }\n\t            function utf8ToBytes(string, units) {\n\t                units = units || Infinity;\n\t                var codePoint;\n\t                var length = string.length;\n\t                var leadSurrogate = null;\n\t                var bytes = [];\n\t                for (var i = 0; i < length; ++i) {\n\t                    codePoint = string.charCodeAt(i);\n\t                    if (codePoint > 55295 && codePoint < 57344) {\n\t                        if (!leadSurrogate) {\n\t                            if (codePoint > 56319) {\n\t                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                                continue;\n\t                            } else if (i + 1 === length) {\n\t                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                                continue;\n\t                            }\n\t                            leadSurrogate = codePoint;\n\t                            continue;\n\t                        }\n\t                        if (codePoint < 56320) {\n\t                            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                            leadSurrogate = codePoint;\n\t                            continue;\n\t                        }\n\t                        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n\t                    } else if (leadSurrogate) {\n\t                        if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                    }\n\t                    leadSurrogate = null;\n\t                    if (codePoint < 128) {\n\t                        if ((units -= 1) < 0) break;\n\t                        bytes.push(codePoint);\n\t                    } else if (codePoint < 2048) {\n\t                        if ((units -= 2) < 0) break;\n\t                        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n\t                    } else if (codePoint < 65536) {\n\t                        if ((units -= 3) < 0) break;\n\t                        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n\t                    } else if (codePoint < 1114112) {\n\t                        if ((units -= 4) < 0) break;\n\t                        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n\t                    } else {\n\t                        throw new Error(\"Invalid code point\");\n\t                    }\n\t                }\n\t                return bytes;\n\t            }\n\t            function asciiToBytes(str) {\n\t                var byteArray = [];\n\t                for (var i = 0; i < str.length; ++i) {\n\t                    byteArray.push(str.charCodeAt(i) & 255);\n\t                }\n\t                return byteArray;\n\t            }\n\t            function utf16leToBytes(str, units) {\n\t                var c, hi, lo;\n\t                var byteArray = [];\n\t                for (var i = 0; i < str.length; ++i) {\n\t                    if ((units -= 2) < 0) break;\n\t                    c = str.charCodeAt(i);\n\t                    hi = c >> 8;\n\t                    lo = c % 256;\n\t                    byteArray.push(lo);\n\t                    byteArray.push(hi);\n\t                }\n\t                return byteArray;\n\t            }\n\t            function base64ToBytes(str) {\n\t                return base64.toByteArray(base64clean(str));\n\t            }\n\t            function blitBuffer(src, dst, offset, length) {\n\t                for (var i = 0; i < length; ++i) {\n\t                    if (i + offset >= dst.length || i >= src.length) break;\n\t                    dst[i + offset] = src[i];\n\t                }\n\t                return i;\n\t            }\n\t            function isnan(val) {\n\t                return val !== val;\n\t            }\n\t        }).call(exports, __webpack_require__(10).Buffer, function() {\n\t            return this;\n\t        }());\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.byteLength = byteLength;\n\t        exports.toByteArray = toByteArray;\n\t        exports.fromByteArray = fromByteArray;\n\t        var lookup = [];\n\t        var revLookup = [];\n\t        var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n\t        var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t        for (var i = 0, len = code.length; i < len; ++i) {\n\t            lookup[i] = code[i];\n\t            revLookup[code.charCodeAt(i)] = i;\n\t        }\n\t        revLookup[\"-\".charCodeAt(0)] = 62;\n\t        revLookup[\"_\".charCodeAt(0)] = 63;\n\t        function placeHoldersCount(b64) {\n\t            var len = b64.length;\n\t            if (len % 4 > 0) {\n\t                throw new Error(\"Invalid string. Length must be a multiple of 4\");\n\t            }\n\t            return b64[len - 2] === \"=\" ? 2 : b64[len - 1] === \"=\" ? 1 : 0;\n\t        }\n\t        function byteLength(b64) {\n\t            return b64.length * 3 / 4 - placeHoldersCount(b64);\n\t        }\n\t        function toByteArray(b64) {\n\t            var i, j, l, tmp, placeHolders, arr;\n\t            var len = b64.length;\n\t            placeHolders = placeHoldersCount(b64);\n\t            arr = new Arr(len * 3 / 4 - placeHolders);\n\t            l = placeHolders > 0 ? len - 4 : len;\n\t            var L = 0;\n\t            for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n\t                arr[L++] = tmp >> 16 & 255;\n\t                arr[L++] = tmp >> 8 & 255;\n\t                arr[L++] = tmp & 255;\n\t            }\n\t            if (placeHolders === 2) {\n\t                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n\t                arr[L++] = tmp & 255;\n\t            } else if (placeHolders === 1) {\n\t                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n\t                arr[L++] = tmp >> 8 & 255;\n\t                arr[L++] = tmp & 255;\n\t            }\n\t            return arr;\n\t        }\n\t        function tripletToBase64(num) {\n\t            return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n\t        }\n\t        function encodeChunk(uint8, start, end) {\n\t            var tmp;\n\t            var output = [];\n\t            for (var i = start; i < end; i += 3) {\n\t                tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n\t                output.push(tripletToBase64(tmp));\n\t            }\n\t            return output.join(\"\");\n\t        }\n\t        function fromByteArray(uint8) {\n\t            var tmp;\n\t            var len = uint8.length;\n\t            var extraBytes = len % 3;\n\t            var output = \"\";\n\t            var parts = [];\n\t            var maxChunkLength = 16383;\n\t            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t                parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n\t            }\n\t            if (extraBytes === 1) {\n\t                tmp = uint8[len - 1];\n\t                output += lookup[tmp >> 2];\n\t                output += lookup[tmp << 4 & 63];\n\t                output += \"==\";\n\t            } else if (extraBytes === 2) {\n\t                tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n\t                output += lookup[tmp >> 10];\n\t                output += lookup[tmp >> 4 & 63];\n\t                output += lookup[tmp << 2 & 63];\n\t                output += \"=\";\n\t            }\n\t            parts.push(output);\n\t            return parts.join(\"\");\n\t        }\n\t    }, function(module, exports) {\n\t        exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n\t            var e, m;\n\t            var eLen = nBytes * 8 - mLen - 1;\n\t            var eMax = (1 << eLen) - 1;\n\t            var eBias = eMax >> 1;\n\t            var nBits = -7;\n\t            var i = isLE ? nBytes - 1 : 0;\n\t            var d = isLE ? -1 : 1;\n\t            var s = buffer[offset + i];\n\t            i += d;\n\t            e = s & (1 << -nBits) - 1;\n\t            s >>= -nBits;\n\t            nBits += eLen;\n\t            for (;nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t            m = e & (1 << -nBits) - 1;\n\t            e >>= -nBits;\n\t            nBits += mLen;\n\t            for (;nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t            if (e === 0) {\n\t                e = 1 - eBias;\n\t            } else if (e === eMax) {\n\t                return m ? NaN : (s ? -1 : 1) * Infinity;\n\t            } else {\n\t                m = m + Math.pow(2, mLen);\n\t                e = e - eBias;\n\t            }\n\t            return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t        };\n\t        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n\t            var e, m, c;\n\t            var eLen = nBytes * 8 - mLen - 1;\n\t            var eMax = (1 << eLen) - 1;\n\t            var eBias = eMax >> 1;\n\t            var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n\t            var i = isLE ? 0 : nBytes - 1;\n\t            var d = isLE ? 1 : -1;\n\t            var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t            value = Math.abs(value);\n\t            if (isNaN(value) || value === Infinity) {\n\t                m = isNaN(value) ? 1 : 0;\n\t                e = eMax;\n\t            } else {\n\t                e = Math.floor(Math.log(value) / Math.LN2);\n\t                if (value * (c = Math.pow(2, -e)) < 1) {\n\t                    e--;\n\t                    c *= 2;\n\t                }\n\t                if (e + eBias >= 1) {\n\t                    value += rt / c;\n\t                } else {\n\t                    value += rt * Math.pow(2, 1 - eBias);\n\t                }\n\t                if (value * c >= 2) {\n\t                    e++;\n\t                    c /= 2;\n\t                }\n\t                if (e + eBias >= eMax) {\n\t                    m = 0;\n\t                    e = eMax;\n\t                } else if (e + eBias >= 1) {\n\t                    m = (value * c - 1) * Math.pow(2, mLen);\n\t                    e = e + eBias;\n\t                } else {\n\t                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t                    e = 0;\n\t                }\n\t            }\n\t            for (;mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}\n\t            e = e << mLen | m;\n\t            eLen += mLen;\n\t            for (;eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}\n\t            buffer[offset + i - d] |= s * 128;\n\t        };\n\t    }, function(module, exports) {\n\t        var toString = {}.toString;\n\t        module.exports = Array.isArray || function(arr) {\n\t            return toString.call(arr) == \"[object Array]\";\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Plugin_1 = __webpack_require__(15);\n\t        var OrthographicCamera = THREE.OrthographicCamera;\n\t        var Chart_1 = __webpack_require__(19);\n\t        var Widget_1 = __webpack_require__(28);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var AxisWidget_1 = __webpack_require__(29);\n\t        var GridWidget_1 = __webpack_require__(30);\n\t        var TrendsGradientWidget_1 = __webpack_require__(32);\n\t        var TrendsLineWidget_1 = __webpack_require__(34);\n\t        var TrendsCandleWidget_1 = __webpack_require__(35);\n\t        var deps_1 = __webpack_require__(17);\n\t        var Color_1 = __webpack_require__(31);\n\t        var ChartBlankView = function() {\n\t            function ChartBlankView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartBlankView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartBlankView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartBlankView.prototype.render = function() {\n\t                this.chart.render();\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartBlankView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartBlankView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartBlankView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartBlankView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartBlankView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartBlankView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.interpolatedViewport.onInterpolation(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartBlankView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartBlankView.prototype.setupCamera = function() {\n\t                var state = this.chart.state;\n\t                var camSettings = this.chart.viewport.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new OrthographicCamera(camSettings.x, camSettings.x + state.width, camSettings.y, camSettings.y + state.height);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, 0);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.interpolatedViewport.params);\n\t            };\n\t            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                this.chart.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartBlankView.preinstalledWidgets = [];\n\t            ChartBlankView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartBlankView;\n\t        }();\n\t        exports.ChartBlankView = ChartBlankView;\n\t        var ChartView = function(_super) {\n\t            __extends(ChartView, _super);\n\t            function ChartView() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n\t            return ChartView;\n\t        }(ChartBlankView);\n\t        exports.ChartView = ChartView;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChangedHandler = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(17);\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deps_1.deepExtend({}, obj1, obj2);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.patch = function(objectToPatch, patch) {\n\t                var idKey = \"_id\";\n\t                for (var key in patch) {\n\t                    if (!patch.hasOwnProperty(key)) continue;\n\t                    if (objectToPatch[key]) {\n\t                        if (Array.isArray(patch[key])) {\n\t                            var _loop_1 = function(patchItem) {\n\t                                var subObject = objectToPatch[key].find(function(item) {\n\t                                    return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n\t                                });\n\t                                if (subObject) {\n\t                                    this_1.patch(subObject, patchItem);\n\t                                } else {\n\t                                    objectToPatch[key].push(patchItem);\n\t                                }\n\t                            };\n\t                            var this_1 = this;\n\t                            for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\n\t                                var patchItem = _a[_i];\n\t                                _loop_1(patchItem);\n\t                            }\n\t                            continue;\n\t                        } else if (typeof patch[key] === \"object\" && objectToPatch[key] != void 0) {\n\t                            if (patch[idKey] && Object.keys(patch).length == 1) {\n\t                                delete objectToPatch[key];\n\t                            } else {\n\t                                this.patch(objectToPatch[key], patch[key]);\n\t                            }\n\t                            continue;\n\t                        }\n\t                    }\n\t                    objectToPatch[key] = patch[key];\n\t                }\n\t                if (objectToPatch[\"_onUpdate\"]) objectToPatch[\"_onUpdate\"].call(objectToPatch, patch);\n\t                return objectToPatch;\n\t            };\n\t            Utils.travers = function(object, fn) {\n\t                for (var key in object) {\n\t                    if (!object.hasOwnProperty(key)) continue;\n\t                    var allowTraverseDeeper = fn(object[key]);\n\t                    var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == \"object\";\n\t                    if (canTraverseDeeper) this.travers(object[key], fn);\n\t                }\n\t            };\n\t            Utils.setIdsToArrayItems = function(sourceObject) {\n\t                var idKey = \"_id\";\n\t                Utils.travers(sourceObject, function(item) {\n\t                    if (!Array.isArray(item)) return true;\n\t                    var arr = item;\n\t                    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n\t                        var obj = arr_1[_i];\n\t                        if (typeof obj !== \"object\" || Array.isArray(obj)) continue;\n\t                        if (!obj[idKey]) obj[idKey] = Utils.getUid();\n\t                    }\n\t                });\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn && fn(ctx, width, height);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createNearestTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.magFilter = THREE.NearestFilter;\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.binarySearchInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((hi - lo) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                    if (arr[lo][key] == num) {\n\t                        return lo;\n\t                    } else if (arr[hi][key] == num) {\n\t                        return hi;\n\t                    }\n\t                }\n\t                return arr[lo] && arr[lo][key] == num ? lo : -1;\n\t            };\n\t            Utils.binarySearch = function(arr, num, key) {\n\t                var ind = this.binarySearchInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else if (typeof srcObject[key] == \"function\") {\n\t                        dstObject[key] = srcObject[key];\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(17);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(20);\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var TrendsManager_1 = __webpack_require__(22);\n\t        var Viewport_1 = __webpack_require__(23);\n\t        var InterpolatedViewport_1 = __webpack_require__(24);\n\t        var deps_1 = __webpack_require__(2);\n\t        var AnimationManager_1 = __webpack_require__(25);\n\t        var Easing_1 = __webpack_require__(26);\n\t        var interfaces_1 = __webpack_require__(27);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            VIEWPORT_CHANGE: \"viewportChange\",\n\t            DRAG_STATE_CHAGED: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: 250,\n\t                        scrollSpeed: 1e3,\n\t                        scrollEase: Easing_1.EASING.Quadratic.Out,\n\t                        zoomEase: Easing_1.EASING.Quadratic.Out,\n\t                        autoScrollSpeed: 1100,\n\t                        autoScrollEase: Easing_1.EASING.Linear.None\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280,\n\t                    inertialScroll: false\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.isDestroyed = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.patch(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.animationManager = new AnimationManager_1.AnimationManager();\n\t                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n\t                this.viewport = new Viewport_1.Viewport(this);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.interpolatedViewport = new InterpolatedViewport_1.InterpolatedViewport(this);\n\t                this.bindEvents();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t                this.isDestroyed = true;\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onDragStateChanged = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onViewportChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.animationManager.tick();\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                if (this.isDestroyed) {\n\t                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n\t                }\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                newState = Utils_1.Utils.deepMerge({}, newState);\n\t                Utils_1.Utils.setIdsToArrayItems(newState);\n\t                var currentStateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (currentStateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                this.state = Utils_1.Utils.patch(this.state, newState);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.patch({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.patch(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        Utils_1.Utils.patch(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        Utils_1.Utils.patch(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        Utils_1.Utils.patch(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        Utils_1.Utils.patch(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                Utils_1.Utils.patch(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n\t                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\n\t                if (viewportChangeEventNeeded) this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = plugin.initialState;\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t                this.onDragStateChanged(function(dragState) {\n\t                    return _this.onDragStateChangedHandler(dragState);\n\t                });\n\t                this.ee.on(\"animationsChange\", function(animationOptions) {\n\t                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n\t                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t                var state = this.state;\n\t                if (!state.autoScroll || state.cursor.dragMode) return;\n\t                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleXVal = this.viewport.getRightVal();\n\t                    var paddingRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n\t                    var marginRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.margin.end);\n\t                    var currentScroll = state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n\t                var state = this.state;\n\t                if (!state.inertialScroll || isDragMode) return;\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\n\t                    var minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.viewport.pxToValByXAxis(state.width) + this.viewport.pxToValByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime);\n\t                });\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var TrendSegmentsManager_1 = __webpack_require__(21);\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        var deps_1 = __webpack_require__(2);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chart = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chart;\n\t                chartState.onDragStateChanged(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chart.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chart.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chart.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chart;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.viewport.getViewportYByVal(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(20);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chart, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.unbindList = [];\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                }), this.chart.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                }), this.chart.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }) ];\n\t            };\n\t            TrendSegmentsManager.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbind) {\n\t                    return unbind();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.unbindEvents();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) {\n\t                            initialAnimationState = initialSegment.createAnimationState();\n\t                        }\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(20);\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var _this = this;\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                trend.segmentsManager.onRebuild(function() {\n\t                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                });\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var Viewport = function() {\n\t            function Viewport(chart) {\n\t                this.params = {};\n\t                this.chart = chart;\n\t                this.updateParams();\n\t                this.bindEvents();\n\t            }\n\t            Viewport.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chart.onChange(function() {\n\t                    return _this.updateParams();\n\t                });\n\t            };\n\t            Viewport.prototype.updateParams = function() {\n\t                var state = this.chart.state;\n\t                this.params.scrollXVal = state.xAxis.range.scroll;\n\t                this.params.scrollYVal = state.yAxis.range.scroll;\n\t                this.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\n\t                this.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\n\t                this.params.zoomX = state.xAxis.range.zoom;\n\t                this.params.zoomY = state.yAxis.range.zoom;\n\t            };\n\t            Viewport.prototype.getCameraSettings = function() {\n\t                var _a = this.chart.state, w = _a.width, h = _a.height;\n\t                return {\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Viewport.prototype.getWorldXByVal = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.params.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Viewport.prototype.getWorldYByVal = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.params.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Viewport.prototype.getWorldXByViewportX = function(viewportX) {\n\t                return this.getWorldXByVal(this.getValByViewportX(viewportX));\n\t            };\n\t            Viewport.prototype.getWorldYByViewportY = function(viewportY) {\n\t                return this.getWorldYByVal(this.getValByViewportY(viewportY));\n\t            };\n\t            Viewport.prototype.getValByWorldX = function(worldX) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\n\t            };\n\t            Viewport.prototype.getValByWorldY = function(worldY) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\n\t            };\n\t            Viewport.prototype.getValByViewportX = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\n\t            };\n\t            Viewport.prototype.getValByViewportY = function(y) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\n\t            };\n\t            Viewport.prototype.getViewportXByVal = function(xVal) {\n\t                return this.getWorldXByVal(xVal) - this.params.scrollX;\n\t            };\n\t            Viewport.prototype.getViewportYByVal = function(yVal) {\n\t                return this.getWorldYByVal(yVal) - this.params.scrollY;\n\t            };\n\t            Viewport.prototype.getViewportXByWorldX = function(worldX) {\n\t                return worldX - this.params.scrollX;\n\t            };\n\t            Viewport.prototype.valToPxByXAxis = function(val) {\n\t                return val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\n\t            };\n\t            Viewport.prototype.valToPxByYAxis = function(val) {\n\t                return val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\n\t            };\n\t            Viewport.prototype.pxToValByXAxis = function(pixelsCount) {\n\t                return pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\n\t            };\n\t            Viewport.prototype.pxToValByYAxis = function(pixelsCount) {\n\t                return pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\n\t            };\n\t            Viewport.prototype.getTop = function() {\n\t                return this.params.scrollY + this.chart.state.height;\n\t            };\n\t            Viewport.prototype.getRight = function() {\n\t                return this.params.scrollX + this.chart.state.width;\n\t            };\n\t            Viewport.prototype.getBottom = function() {\n\t                return this.params.scrollY;\n\t            };\n\t            Viewport.prototype.getLeft = function() {\n\t                return this.params.scrollX;\n\t            };\n\t            Viewport.prototype.getTopVal = function() {\n\t                return this.getValByWorldY(this.getTop());\n\t            };\n\t            Viewport.prototype.getRightVal = function() {\n\t                return this.getValByWorldX(this.getRight());\n\t            };\n\t            Viewport.prototype.getBottomVal = function() {\n\t                return this.getValByWorldY(this.getBottom());\n\t            };\n\t            Viewport.prototype.getLeftVal = function() {\n\t                return this.getValByWorldX(this.getLeft());\n\t            };\n\t            return Viewport;\n\t        }();\n\t        exports.Viewport = Viewport;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        var Viewport_1 = __webpack_require__(23);\n\t        (function(INTERPOLATION_EVENT) {\n\t            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n\t            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n\t        })(exports.INTERPOLATION_EVENT || (exports.INTERPOLATION_EVENT = {}));\n\t        var INTERPOLATION_EVENT = exports.INTERPOLATION_EVENT;\n\t        var SCREEN_EVENTS = {\n\t            ZOOM_FRAME: \"zoomFrame\",\n\t            SCROLL_FRAME: \"scrollFrame\",\n\t            TRANSFORMATION_FRAME: \"transformationFrame\",\n\t            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n\t        };\n\t        var InterpolatedViewport = function(_super) {\n\t            __extends(InterpolatedViewport, _super);\n\t            function InterpolatedViewport(chart) {\n\t                _super.call(this, chart);\n\t                this.interpolationInProgress = false;\n\t                var _a = chart.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.setParams(chart.viewport.params);\n\t            }\n\t            InterpolatedViewport.prototype.onZoomInterpolation = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t            };\n\t            InterpolatedViewport.prototype.onScrollInterpolation = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t            };\n\t            InterpolatedViewport.prototype.onInterpolation = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t            };\n\t            InterpolatedViewport.prototype.onInterpolationEvent = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n\t            };\n\t            InterpolatedViewport.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n\t            };\n\t            InterpolatedViewport.prototype.setParams = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.params.scrollX = scrollX;\n\t                if (scrollY != void 0) this.params.scrollY = scrollY;\n\t                if (zoomX != void 0) this.params.zoomX = zoomX;\n\t                if (zoomY != void 0) this.params.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\n\t                    this.params.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\n\t                    this.params.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n\t                var interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\n\t                var interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\n\t                if (interpolationStarted) {\n\t                    this.interpolationInProgress = true;\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\n\t                }\n\t                if (interpolationFinished) {\n\t                    this.interpolationInProgress = false;\n\t                }\n\t                if (!this.interpolationInProgress) {\n\t                    this.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\n\t                    this.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\n\t                }\n\t                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\t                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\t                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\t                if (interpolationFinished) {\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\n\t                }\n\t            };\n\t            InterpolatedViewport.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            InterpolatedViewport.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var isDragMode = chart.state.cursor.dragMode;\n\t                var animations = chart.state.animations;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                var range = chart.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                if (isDragMode && !chart.state.inertialScroll) time = 0;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n\t                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.params.scrollX).to(targetX).onTick(function(value) {\n\t                    _this.setParams({\n\t                        scrollX: value\n\t                    });\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var range = chart.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n\t                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.scrollY).to(targetY).onTick(function(value) {\n\t                    _this.setParams({\n\t                        scrollY: value\n\t                    });\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var targetZoom = chart.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n\t                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomX).to(targetZoom).onTick(function(value) {\n\t                    _this.setParams({\n\t                        zoomX: value\n\t                    });\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var targetZoom = chart.state.yAxis.range.zoom;\n\t                var animations = chart.state.animations;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n\t                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomY).to(targetZoom).onTick(function(value) {\n\t                    _this.setParams({\n\t                        zoomY: value\n\t                    });\n\t                });\n\t            };\n\t            return InterpolatedViewport;\n\t        }(Viewport_1.Viewport);\n\t        exports.InterpolatedViewport = InterpolatedViewport;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Easing_1 = __webpack_require__(26);\n\t        var AnimationManager = function() {\n\t            function AnimationManager() {\n\t                this.isAnimationsEnabled = true;\n\t                this.animations = [];\n\t                this.lastTickTime = Date.now();\n\t            }\n\t            AnimationManager.prototype.animate = function(time, timingFunction) {\n\t                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t                this.animations.push(animation);\n\t                return animation;\n\t            };\n\t            AnimationManager.prototype.animateObj = function(source, target) {};\n\t            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n\t                this.isAnimationsEnabled = isEnabled;\n\t            };\n\t            AnimationManager.prototype.tick = function() {\n\t                var now = Date.now();\n\t                var animations = this.animations;\n\t                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n\t                    var animation = animations[i_1];\n\t                    if (this.isAnimationsEnabled) {\n\t                        animation.tick(now);\n\t                    } else {\n\t                        animation.completeAndStop();\n\t                    }\n\t                }\n\t                var i = animations.length;\n\t                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n\t                this.lastTickTime = now;\n\t            };\n\t            AnimationManager.prototype.hasActiveAnimations = function() {\n\t                return this.animations.length > 0;\n\t            };\n\t            return AnimationManager;\n\t        }();\n\t        exports.AnimationManager = AnimationManager;\n\t        var Animation = function() {\n\t            function Animation(animationManager, time, createdTime, easing) {\n\t                if (easing === void 0) {\n\t                    easing = Easing_1.EASING.Quadratic.Out;\n\t                }\n\t                this.animationManager = animationManager;\n\t                this.time = time;\n\t                this.createdTime = createdTime;\n\t                this.easing = easing;\n\t                this.progress = 0;\n\t                this.delay = 0;\n\t                this.isFinished = false;\n\t                this.isStopped = false;\n\t                this.startTime = createdTime;\n\t            }\n\t            Animation.prototype.tick = function(now) {\n\t                if (!this.isStopped) {\n\t                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n\t                    this.setProgress(progress);\n\t                }\n\t            };\n\t            Animation.prototype.from = function(sourceObj) {\n\t                if (typeof sourceObj == \"object\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = {};\n\t                    var sourceIteralable = sourceObj;\n\t                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n\t                        this.initialObj[key] = sourceIteralable[key];\n\t                    }\n\t                } else if (typeof sourceObj == \"number\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = sourceObj;\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.to = function(targetObj) {\n\t                this.targetObject = targetObj;\n\t                if (typeof this.initialObj == \"object\") {\n\t                    var initialIteralable = this.initialObj;\n\t                    for (var key in this.targetObject) {\n\t                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                    var targetIteralable = this.targetObject;\n\t                    for (var key in initialIteralable) {\n\t                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.onTick = function(onTickCb) {\n\t                this.onTickCb = onTickCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.then = function(onFinishCb) {\n\t                this.onFinishCb = onFinishCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Animation.prototype.completeAndStop = function() {\n\t                this.setProgress(1);\n\t            };\n\t            Animation.prototype.withDelay = function(delay) {\n\t                this.delay = delay;\n\t                this.startTime = this.createdTime + delay;\n\t                return this;\n\t            };\n\t            Animation.prototype.setProgress = function(progress) {\n\t                if (progress < 0) return;\n\t                progress = Math.min(progress, 1);\n\t                this.progress = progress;\n\t                var k = this.easing(progress);\n\t                if (typeof this.sourceObj == \"number\") {\n\t                    var initialVal = this.initialObj;\n\t                    var targetVal = this.targetObject;\n\t                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n\t                } else if (this.sourceObj && this.targetObject) {\n\t                    for (var key in this.initialObj) {\n\t                        var initialVal = this.initialObj[key];\n\t                        var targetVal = this.targetObject[key];\n\t                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n\t                    }\n\t                }\n\t                if (progress == 1) {\n\t                    this.isStopped = true;\n\t                    this.isFinished = true;\n\t                }\n\t                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n\t                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n\t            };\n\t            return Animation;\n\t        }();\n\t        exports.Animation = Animation;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.EASING = {\n\t            Linear: {\n\t                None: function(k) {\n\t                    return k;\n\t                }\n\t            },\n\t            Quadratic: {\n\t                In: function(k) {\n\t                    return k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return k * (2 - k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k;\n\t                    }\n\t                    return -.5 * (--k * (k - 2) - 1);\n\t                }\n\t            },\n\t            Cubic: {\n\t                In: function(k) {\n\t                    return k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k + 2);\n\t                }\n\t            },\n\t            Quartic: {\n\t                In: function(k) {\n\t                    return k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return 1 - --k * k * k * k;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k;\n\t                    }\n\t                    return -.5 * ((k -= 2) * k * k * k - 2);\n\t                }\n\t            },\n\t            Quintic: {\n\t                In: function(k) {\n\t                    return k * k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k * k * k + 2);\n\t                }\n\t            },\n\t            Sinusoidal: {\n\t                In: function(k) {\n\t                    return 1 - Math.cos(k * Math.PI / 2);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sin(k * Math.PI / 2);\n\t                },\n\t                InOut: function(k) {\n\t                    return .5 * (1 - Math.cos(Math.PI * k));\n\t                }\n\t            },\n\t            Exponential: {\n\t                In: function(k) {\n\t                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t                },\n\t                Out: function(k) {\n\t                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * Math.pow(1024, k - 1);\n\t                    }\n\t                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t                }\n\t            },\n\t            Circular: {\n\t                In: function(k) {\n\t                    return 1 - Math.sqrt(1 - k * k);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sqrt(1 - --k * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n\t                    }\n\t                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t                }\n\t            },\n\t            Elastic: {\n\t                In: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                },\n\t                Out: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    k *= 2;\n\t                    if (k < 1) {\n\t                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                    }\n\t                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t                }\n\t            },\n\t            Back: {\n\t                In: function(k) {\n\t                    var s = 1.70158;\n\t                    return k * k * ((s + 1) * k - s);\n\t                },\n\t                Out: function(k) {\n\t                    var s = 1.70158;\n\t                    return --k * k * ((s + 1) * k + s) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    var s = 1.70158 * 1.525;\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * (k * k * ((s + 1) * k - s));\n\t                    }\n\t                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t                }\n\t            },\n\t            Bounce: {\n\t                In: function(k) {\n\t                    return 1 - exports.EASING.Bounce.Out(1 - k);\n\t                },\n\t                Out: function(k) {\n\t                    if (k < 1 / 2.75) {\n\t                        return 7.5625 * k * k;\n\t                    } else if (k < 2 / 2.75) {\n\t                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n\t                    } else if (k < 2.5 / 2.75) {\n\t                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n\t                    } else {\n\t                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n\t                    }\n\t                },\n\t                InOut: function(k) {\n\t                    if (k < .5) {\n\t                        return exports.EASING.Bounce.In(k * 2) * .5;\n\t                    }\n\t                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(28);\n\t        var GridWidget_1 = __webpack_require__(30);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var interfaces_1 = __webpack_require__(27);\n\t        var Color_1 = __webpack_require__(31);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.interpolatedViewport.params.scrollX, this.chart.interpolatedViewport.params.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.interpolatedViewport.onInterpolation(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.interpolatedViewport.onZoomInterpolation(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.Color(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.interpolatedViewport.params, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(28);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Color_1 = __webpack_require__(31);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chart = this.chart;\n\t                var localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var Color = function() {\n\t            function Color(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            Color.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            Color.numberToHexStr = function(value) {\n\t                var result = value.toString(16);\n\t                return \"#\" + \"0\".repeat(6 - result.length) + result;\n\t            };\n\t            Color.prototype.set = function(color) {\n\t                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n\t                var colorStr = color;\n\t                var rgba = Color.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = Color.numberToHexStr(this.value);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            Color.prototype.getTransparent = function(opacity) {\n\t                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n\t            };\n\t            return Color;\n\t        }();\n\t        exports.Color = Color;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var TrendsWidget_1 = __webpack_require__(33);\n\t        var Color_1 = __webpack_require__(31);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i < segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.viewport.pxToValByYAxis(this.chart.state.height), this.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(28);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(33);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(20);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(33);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(20);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(18);\n\t        var UniqCollectionItem = function() {\n\t            function UniqCollectionItem() {}\n\t            UniqCollectionItem.prototype.getId = function() {\n\t                return this._id;\n\t            };\n\t            return UniqCollectionItem;\n\t        }();\n\t        exports.UniqCollectionItem = UniqCollectionItem;\n\t        var ID_KEY = \"_id\";\n\t        var EVENTS = {\n\t            CREATE: \"create\",\n\t            UPDATE: \"update\",\n\t            REMOVE: \"remove\"\n\t        };\n\t        var UniqCollection = function() {\n\t            function UniqCollection(options) {\n\t                this.items = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t            }\n\t            UniqCollection.prototype.patch = function(models) {\n\t                var options = this.options;\n\t                for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n\t                    var model = models_1[_i];\n\t                    var id = model[ID_KEY];\n\t                    if (!id) Utils_1.Utils.error(\"Collection item without id detected\");\n\t                    var ind = this.getItemInd(id);\n\t                    var item = this.items[ind];\n\t                    var justCreated = false;\n\t                    if (!item) {\n\t                        justCreated = true;\n\t                        item = options.createInstance(model);\n\t                        this.items.push(item);\n\t                    }\n\t                    if (Object.keys(model).length > 1) {\n\t                        var prevProps = {};\n\t                        Utils_1.Utils.copyProps(item, prevProps, model);\n\t                        Utils_1.Utils.patch(item, model);\n\t                        justCreated && this.ee.emit(EVENTS.CREATE, item);\n\t                        this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\n\t                    } else {\n\t                        this.items.splice(ind, 1);\n\t                        this.ee.emit(EVENTS.REMOVE, item);\n\t                    }\n\t                }\n\t            };\n\t            UniqCollection.prototype.getItem = function(id) {\n\t                return this.items[this.getItemInd(id)];\n\t            };\n\t            UniqCollection.prototype.getLast = function() {\n\t                return this.items[this.items.length - 1];\n\t            };\n\t            UniqCollection.prototype.forEach = function(cb) {\n\t                for (var key in this.items) cb(this.items[key]);\n\t            };\n\t            UniqCollection.prototype.filter = function(cb) {\n\t                var result = [];\n\t                this.forEach(function(item) {\n\t                    return cb(item) && result.push(item);\n\t                });\n\t                return result;\n\t            };\n\t            UniqCollection.prototype.onCreate = function(cb) {\n\t                return this.ee.subscribe(EVENTS.CREATE, cb);\n\t            };\n\t            UniqCollection.prototype.onUpdate = function(cb) {\n\t                return this.ee.subscribe(EVENTS.UPDATE, cb);\n\t            };\n\t            UniqCollection.prototype.onRemove = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REMOVE, cb);\n\t            };\n\t            UniqCollection.prototype.getItemInd = function(id) {\n\t                return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\n\t            };\n\t            return UniqCollection;\n\t        }();\n\t        exports.UniqCollection = UniqCollection;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(29));\n\t        __export(__webpack_require__(30));\n\t        __export(__webpack_require__(33));\n\t        __export(__webpack_require__(34));\n\t        __export(__webpack_require__(32));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(41));\r\n\t__export(__webpack_require__(42));\r\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar TrendsMarksWidget_1 = __webpack_require__(42);\r\n\tvar Easing_1 = __webpack_require__(26);\r\n\t(function (TREND_MARK_SIDE) {\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n\t})(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\r\n\tvar TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\r\n\t(function (EVENTS) {\r\n\t    EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\r\n\t})(exports.EVENTS || (exports.EVENTS = {}));\r\n\tvar EVENTS = exports.EVENTS;\r\n\t(function (TEXTURE_FILTER) {\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"AUTO\"] = 0] = \"AUTO\";\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"LINEAR\"] = 1] = \"LINEAR\";\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"NEAREST\"] = 2] = \"NEAREST\";\r\n\t})(exports.TEXTURE_FILTER || (exports.TEXTURE_FILTER = {}));\r\n\tvar TEXTURE_FILTER = exports.TEXTURE_FILTER;\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    trendName: '',\r\n\t    title: '',\r\n\t    color: 'rgba(#0099d9, 0.5)',\r\n\t    xVal: 0,\r\n\t    orientation: TREND_MARK_SIDE.TOP,\r\n\t    width: 105,\r\n\t    height: 100,\r\n\t    margin: 10,\r\n\t    ease: Easing_1.EASING.Elastic.Out,\r\n\t    easeSpeed: 1000,\r\n\t    textureFilter: TEXTURE_FILTER.AUTO,\r\n\t    onRender: TrendsMarksWidget_1.DEFAULT_RENDERER\r\n\t};\r\n\tvar TrendsMarksPlugin = (function (_super) {\r\n\t    __extends(TrendsMarksPlugin, _super);\r\n\t    function TrendsMarksPlugin(trendsMarksPluginOptions) {\r\n\t        _super.call(this, trendsMarksPluginOptions);\r\n\t        this.items = {};\r\n\t        this.rects = {};\r\n\t    }\r\n\t    TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onStateChangedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMark = function (options) {\r\n\t        var marksOptions = this.getOptions().items;\r\n\t        var newMarkOptions = marksOptions.concat([options]);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = { items: newMarkOptions }, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.trendsManager.onSegmentsRebuilded(function () {\r\n\t            _this.updateMarksSegments();\r\n\t        });\r\n\t        this.chart.interpolatedViewport.onZoomInterpolation(function () { return _this.calclulateMarksPositions(); });\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onMarksChangeHandler = function () {\r\n\t        var trendsMarksOptions = this.getOptions().items;\r\n\t        var actualMarksNames = [];\r\n\t        for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\r\n\t            var options = trendsMarksOptions_1[_i];\r\n\t            var marks = this.items;\r\n\t            // set mark name\r\n\t            if (!options.name) {\r\n\t                options.name = three_charts_1.Utils.getUid().toString();\r\n\t                actualMarksNames.push(options.name);\r\n\t                if (marks[options.name])\r\n\t                    three_charts_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            }\r\n\t            else if (marks[options.name]) {\r\n\t                actualMarksNames.push(options.name);\r\n\t                continue;\r\n\t            }\r\n\t            options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            var mark = new TrendMark(this.chart, options);\r\n\t            marks[options.name] = mark;\r\n\t        }\r\n\t        // delete not relevant marks\r\n\t        for (var markName in this.items) {\r\n\t            if (actualMarksNames.indexOf(markName) != -1)\r\n\t                continue;\r\n\t            delete this.items[markName];\r\n\t        }\r\n\t        this.updateMarksSegments();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.calclulateMarksPositions = function () {\r\n\t        this.rects = {};\r\n\t        for (var markName in this.items) {\r\n\t            this.createMarkRect(this.items[markName]);\r\n\t        }\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMarkRect = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var chart = this.chart;\r\n\t        var options = mark.options;\r\n\t        var width = options.width, height = options.height, name = options.name;\r\n\t        var left = chart.viewport.getWorldXByVal(mark.xVal) - width / 2;\r\n\t        var top = chart.viewport.getWorldYByVal(mark.yVal);\r\n\t        var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t        var newOffset;\r\n\t        var row = 0;\r\n\t        if (isTopSideMark) {\r\n\t            top += height;\r\n\t        }\r\n\t        var markRect = [left, top, width, height];\r\n\t        var hasIntersection = false;\r\n\t        do {\r\n\t            for (var markName in this.rects) {\r\n\t                var rect = this.rects[markName];\r\n\t                hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\r\n\t                if (!hasIntersection)\r\n\t                    continue;\r\n\t                if (isTopSideMark) {\r\n\t                    markRect[1] = rect[1] + markRect[3] + options.margin;\r\n\t                }\r\n\t                else {\r\n\t                    markRect[1] = rect[1] - rect[3] - options.margin;\r\n\t                }\r\n\t                row++;\r\n\t                break;\r\n\t            }\r\n\t        } while (hasIntersection);\r\n\t        if (isTopSideMark) {\r\n\t            newOffset = markRect[1] - markRect[3] - chart.viewport.getWorldYByVal(mark.yVal);\r\n\t        }\r\n\t        else {\r\n\t            newOffset = chart.viewport.getWorldYByVal(mark.yVal) - markRect[1];\r\n\t        }\r\n\t        mark._setOffset(newOffset);\r\n\t        mark._setRow(row);\r\n\t        this.rects[name] = markRect;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.updateMarksSegments = function () {\r\n\t        var chart = this.chart;\r\n\t        var trends = chart.trendsManager.trends;\r\n\t        for (var trendName in trends) {\r\n\t            var marks = this.getTrendMarks(trendName);\r\n\t            var marksArr = [];\r\n\t            var xVals = [];\r\n\t            for (var markName in marks) {\r\n\t                var mark = marks[markName];\r\n\t                xVals.push(mark.options.xVal);\r\n\t                marksArr.push(mark);\r\n\t                mark._setSegment(null);\r\n\t            }\r\n\t            marksArr.sort(function (a, b) { return a.options.xVal - b.options.xVal; });\r\n\t            var trend = chart.getTrend(trendName);\r\n\t            var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function (a, b) { return a - b; }));\r\n\t            for (var markInd = 0; markInd < marksArr.length; markInd++) {\r\n\t                marksArr[markInd]._setSegment(points[markInd]);\r\n\t            }\r\n\t        }\r\n\t        this.calclulateMarksPositions();\r\n\t        this.ee.emit(EVENTS[EVENTS.CHANGE]);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getTrendMarks = function (trendName) {\r\n\t        var trendMarks = [];\r\n\t        for (var markName in this.items) {\r\n\t            if (this.items[markName].options.trendName != trendName)\r\n\t                continue;\r\n\t            trendMarks.push(this.items[markName]);\r\n\t        }\r\n\t        return trendMarks;\r\n\t    };\r\n\t    TrendsMarksPlugin.NAME = 'TrendsMarks';\r\n\t    TrendsMarksPlugin.providedWidgets = [TrendsMarksWidget_1.TrendsMarksWidget];\r\n\t    return TrendsMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.TrendsMarksPlugin = TrendsMarksPlugin;\r\n\tvar TrendMark = (function () {\r\n\t    function TrendMark(chart, options) {\r\n\t        this.row = 0;\r\n\t        this.options = options;\r\n\t        this.chart = chart;\r\n\t    }\r\n\t    /**\r\n\t     * only for internal usage\r\n\t     */\r\n\t    TrendMark.prototype._setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        if (!segment)\r\n\t            return;\r\n\t        var trend = this.chart.getTrend(this.options.trendName);\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            this.xVal = segment.endXVal;\r\n\t            this.yVal = segment.endYVal;\r\n\t        }\r\n\t        else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.maxYVal;\r\n\t        }\r\n\t        else {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.minYVal;\r\n\t        }\r\n\t    };\r\n\t    TrendMark.prototype._setOffset = function (offset) {\r\n\t        this.offset = offset;\r\n\t    };\r\n\t    TrendMark.prototype._setRow = function (row) {\r\n\t        this.row = row;\r\n\t    };\r\n\t    return TrendMark;\r\n\t}());\r\n\texports.TrendMark = TrendMark;\r\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(41);\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar LinearFilter = THREE.LinearFilter;\r\n\tvar NearestFilter = THREE.NearestFilter;\r\n\t/**\r\n\t * widget for drawing trends marks for all trends\r\n\t */\r\n\tvar TrendsMarksWidget = (function (_super) {\r\n\t    __extends(TrendsMarksWidget, _super);\r\n\t    function TrendsMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsMarksWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendMarksWidget;\r\n\t    };\r\n\t    TrendsMarksWidget.widgetName = \"TrendsMarks\";\r\n\t    return TrendsMarksWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsMarksWidget = TrendsMarksWidget;\r\n\t/**\r\n\t * widget for drawing trend marks for one trend\r\n\t */\r\n\tvar TrendMarksWidget = (function (_super) {\r\n\t    __extends(TrendMarksWidget, _super);\r\n\t    function TrendMarksWidget(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.marksWidgets = {};\r\n\t        this.object3D = new Object3D();\r\n\t        this.onMarksChange();\r\n\t    }\r\n\t    TrendMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.getTrendsMarksPlugin().onChange(function () { return _this.onMarksChange(); }));\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolationEvent(function (event) { return _this.onViewportInterpolationEvent(event); }));\r\n\t    };\r\n\t    TrendMarksWidget.prototype.getTrendsMarksPlugin = function () {\r\n\t        return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onMarksChange = function () {\r\n\t        var marksItems = this.getTrendsMarksPlugin().getItems();\r\n\t        var widgets = this.marksWidgets;\r\n\t        var actualMarksNames = [];\r\n\t        for (var markName in marksItems) {\r\n\t            actualMarksNames.push(markName);\r\n\t            if (!widgets[markName])\r\n\t                this.createMarkWidget(marksItems[markName]);\r\n\t        }\r\n\t        for (var markName in this.marksWidgets) {\r\n\t            if (actualMarksNames.indexOf(markName) !== -1)\r\n\t                continue;\r\n\t            this.destroyMarkWidget(markName);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.createMarkWidget = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var markWidget = new TrendMarkWidget(this.chart, mark);\r\n\t        this.marksWidgets[mark.options.name] = markWidget;\r\n\t        this.object3D.add(markWidget.getObject3D());\r\n\t    };\r\n\t    TrendMarksWidget.prototype.destroyMarkWidget = function (markName) {\r\n\t        this.object3D.remove(this.marksWidgets[markName].getObject3D());\r\n\t        delete this.marksWidgets[markName];\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onViewportInterpolationEvent = function (event) {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onScreenTransformationEventHandler(event);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onZoomFrame = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onZoomFrameHandler();\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onSegmentsAnimate = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onSegmentsAnimate();\r\n\t        }\r\n\t    };\r\n\t    return TrendMarksWidget;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendMarksWidget = TrendMarksWidget;\r\n\t/**\r\n\t * widget for drawing one trend mark\r\n\t */\r\n\tvar TrendMarkWidget = (function () {\r\n\t    function TrendMarkWidget(chart, trendMark) {\r\n\t        this.chart = chart;\r\n\t        this.mark = trendMark;\r\n\t        this.initObject();\r\n\t        this.show();\r\n\t    }\r\n\t    TrendMarkWidget.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var options = this.mark.options;\r\n\t        var width = options.width, height = options.height;\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(width, height, function (ctx) {\r\n\t            options.onRender(_this, ctx, _this.chart);\r\n\t        });\r\n\t        // make text sharp when interpolatedViewport is not transforming\r\n\t        switch (options.textureFilter) {\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.AUTO:\r\n\t                texture.magFilter = this.chart.interpolatedViewport.interpolationInProgress ? LinearFilter : NearestFilter;\r\n\t                break;\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.LINEAR:\r\n\t                texture.magFilter = LinearFilter;\r\n\t                break;\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.NEAREST:\r\n\t                texture.magFilter = NearestFilter;\r\n\t                break;\r\n\t        }\r\n\t        texture.needsUpdate = true;\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.markMesh = new Mesh(new THREE.PlaneGeometry(width, height), material);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.markMesh;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onSegmentsAnimate = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onZoomFrameHandler = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onScreenTransformationEventHandler = function (event) {\r\n\t        var texture = this.markMesh.material.map;\r\n\t        // make text sharp when interpolatedViewport is not transforming\r\n\t        if (this.mark.options.textureFilter !== TrendsMarksPlugin_1.TEXTURE_FILTER.AUTO)\r\n\t            return;\r\n\t        texture.magFilter = (event == three_charts_1.INTERPOLATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.updatePosition = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        var mark = this.mark;\r\n\t        var viewport = this.chart.interpolatedViewport;\r\n\t        var posX = viewport.getWorldXByVal(mark.xVal);\r\n\t        var posY = viewport.getWorldYByVal(mark.yVal);\r\n\t        this.markMesh.position.set(posX, posY, 0);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.show = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        this.updatePosition();\r\n\t        this.markMesh.scale.set(0.01, 0.01, 1);\r\n\t        this.chart.animationManager\r\n\t            .animate(1000, this.mark.options.ease)\r\n\t            .from(this.markMesh.scale)\r\n\t            .to({ x: 1, y: 1 });\r\n\t    };\r\n\t    return TrendMarkWidget;\r\n\t}());\r\n\texports.TrendMarkWidget = TrendMarkWidget;\r\n\texports.DEFAULT_RENDERER = function (trendMarkWidget, ctx, chart) {\r\n\t    var mark = trendMarkWidget.mark;\r\n\t    var options = mark.options;\r\n\t    var isTopSide = options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\r\n\t    var color = options.color !== void 0 ?\r\n\t        new three_charts_1.Color(options.color) :\r\n\t        new three_charts_1.Color(chart.getTrend(options.trendName).getOptions().lineColor);\r\n\t    var rgbaColor = color.getTransparent(0.5).rgbaStr;\r\n\t    var width = options.width, height = options.height;\r\n\t    var centerX = Math.round(width / 2);\r\n\t    var centerY = Math.round(height / 2);\r\n\t    var font = chart.state.font.m;\r\n\t    var textOffset = parseInt(font);\r\n\t    var textPosX = centerX;\r\n\t    var textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\r\n\t    // draw rect\r\n\t    ctx.fillStyle = rgbaColor;\r\n\t    ctx.strokeStyle = rgbaColor;\r\n\t    ctx.fillRect(0, isTopSide ? 0 : height, width, isTopSide ? textOffset * 2 : -textOffset * 2);\r\n\t    // draw dot\r\n\t    ctx.beginPath();\r\n\t    ctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\r\n\t    ctx.fill();\r\n\t    // draw line\r\n\t    var lineEndY = textPosY;\r\n\t    ctx.beginPath();\r\n\t    ctx.moveTo(centerX, centerY);\r\n\t    ctx.lineTo(centerX, lineEndY);\r\n\t    ctx.stroke();\r\n\t    // draw text\r\n\t    ctx.beginPath();\r\n\t    ctx.textAlign = 'center';\r\n\t    ctx.font = font;\r\n\t    ctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\r\n\t    ctx.fillText(options.title, Math.round(textPosX), Math.round(textPosY));\r\n\t    // uncomment to preview mark rect\r\n\t    // ctx.rect(0, 0, width, height);\r\n\t    // ctx.stroke();\r\n\t};\r\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(44));\r\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar ANIMATION_TIME = 1000;\r\n\tvar ANIMATION_DELAY = 300;\r\n\t/**\r\n\t * widget adds blinking beacon on trends end\r\n\t * activated when trend.hasBeacon = true\r\n\t */\r\n\tvar TrendsBeaconWidget = (function (_super) {\r\n\t    __extends(TrendsBeaconWidget, _super);\r\n\t    function TrendsBeaconWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsBeaconWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendBeacon;\r\n\t    };\r\n\t    TrendsBeaconWidget.widgetName = 'TrendsBeacon';\r\n\t    return TrendsBeaconWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsBeaconWidget = TrendsBeaconWidget;\r\n\tvar TrendBeacon = (function (_super) {\r\n\t    __extends(TrendBeacon, _super);\r\n\t    function TrendBeacon(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    TrendBeacon.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendBeacon.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendBeacon.prototype.onTrendChange = function () {\r\n\t        this.updatePosition();\r\n\t        this.animate();\r\n\t    };\r\n\t    TrendBeacon.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.chart.onScroll(function () { return _this.updatePosition(); }));\r\n\t    };\r\n\t    TrendBeacon.prototype.initObject = function () {\r\n\t        // add beacon\r\n\t        var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendBeacon.createTexture(), transparent: true }));\r\n\t        this.setInitialState();\r\n\t        // add dot\r\n\t        light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({ map: TrendBeacon.createTexture() })));\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t    };\r\n\t    TrendBeacon.prototype.animate = function () {\r\n\t        var _this = this;\r\n\t        if (!this.chart.state.animations.enabled)\r\n\t            return;\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t        this.setInitialState();\r\n\t        var mesh = this.mesh;\r\n\t        var animationObject = {\r\n\t            scale: mesh.scale.x,\r\n\t            opacity: mesh.material.opacity\r\n\t        };\r\n\t        this.animation = this.chart.animationManager\r\n\t            .animate(ANIMATION_TIME)\r\n\t            .withDelay(ANIMATION_DELAY)\r\n\t            .from(animationObject)\r\n\t            .to({ scale: 1, opacity: 0 })\r\n\t            .onTick(function (animationObject) {\r\n\t            mesh.scale.set(animationObject.scale, animationObject.scale, 1);\r\n\t            mesh.material.opacity = animationObject.opacity;\r\n\t        }).then(function () {\r\n\t            _this.setInitialState();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.setInitialState = function () {\r\n\t        this.mesh.scale.set(0.2, 0.2, 1);\r\n\t        this.mesh.material.opacity = 1;\r\n\t    };\r\n\t    TrendBeacon.prototype.onDestroy = function () {\r\n\t        _super.prototype.onDestroy.call(this);\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t    };\r\n\t    TrendBeacon.createTexture = function () {\r\n\t        var h = 32, w = 32;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\r\n\t            ctx.fillStyle = 'white';\r\n\t            ctx.fill();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.onTransformationFrame = function () {\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.onSegmentsAnimate = function (trendsSegments) {\r\n\t        this.segment = trendsSegments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var xVal, yVal;\r\n\t        var currentAnimationState = this.segment.currentAnimationState;\r\n\t        if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            xVal = currentAnimationState.endXVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        else {\r\n\t            xVal = currentAnimationState.xVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        var viewport = chart.interpolatedViewport;\r\n\t        var x = viewport.getWorldXByVal(xVal);\r\n\t        var y = viewport.getWorldYByVal(yVal);\r\n\t        var screenWidth = chart.state.width;\r\n\t        var screenX = viewport.getViewportXByWorldX(x);\r\n\t        if (screenX < 0) {\r\n\t            x = viewport.getLeft();\r\n\t        }\r\n\t        if (screenX > screenWidth)\r\n\t            x = viewport.getRight();\r\n\t        this.mesh.position.set(x, y, 0.1);\r\n\t    };\r\n\t    return TrendBeacon;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendBeacon = TrendBeacon;\r\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(46));\r\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\t/**\r\n\t * widget adds loading indicator\r\n\t * activated when animations enabled\r\n\t */\r\n\tvar TrendsLoadingWidget = (function (_super) {\r\n\t    __extends(TrendsLoadingWidget, _super);\r\n\t    function TrendsLoadingWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLoadingWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLoading;\r\n\t    };\r\n\t    TrendsLoadingWidget.widgetName = 'TrendsLoading';\r\n\t    return TrendsLoadingWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsLoadingWidget = TrendsLoadingWidget;\r\n\tvar TrendLoading = (function (_super) {\r\n\t    __extends(TrendLoading, _super);\r\n\t    function TrendLoading(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.isActive = false;\r\n\t        // add beacon\r\n\t        this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendLoading.createTexture(), transparent: true }));\r\n\t        this.deactivate();\r\n\t    }\r\n\t    TrendLoading.widgetIsEnabled = function (trendOptions, chart) {\r\n\t        return trendOptions.enabled && chart.state.animations.enabled;\r\n\t    };\r\n\t    TrendLoading.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendLoading.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.onPrependRequest(function () { return _this.activate(); }));\r\n\t    };\r\n\t    TrendLoading.prototype.prependData = function () {\r\n\t        this.deactivate();\r\n\t    };\r\n\t    TrendLoading.prototype.activate = function () {\r\n\t        var mesh = this.mesh;\r\n\t        mesh.material.opacity = 1;\r\n\t        mesh.rotation.z = 0;\r\n\t        var animation = TweenLite.to(this.mesh.rotation, 0.5, { z: Math.PI * 2 });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animation.restart();\r\n\t        });\r\n\t        this.animation = animation;\r\n\t        this.isActive = true;\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.deactivate = function () {\r\n\t        this.animation && this.animation.kill();\r\n\t        this.mesh.material.opacity = 0;\r\n\t        this.isActive = false;\r\n\t    };\r\n\t    TrendLoading.createTexture = function () {\r\n\t        var h = 64, w = 64;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t            ctx.lineWidth = 5;\r\n\t            var center = h / 2;\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, 0, Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 3, 0, Math.PI * 2);\r\n\t            ctx.stroke();\r\n\t        });\r\n\t    };\r\n\t    TrendLoading.prototype.onZoomFrame = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.updatePosition = function () {\r\n\t        if (!this.isActive)\r\n\t            return;\r\n\t        var trend = this.trend;\r\n\t        // set new widget position\r\n\t        var segment = trend.segmentsManager.getStartSegment();\r\n\t        var x, y;\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            x = segment.currentAnimationState.startXVal;\r\n\t            y = segment.currentAnimationState.startYVal;\r\n\t        }\r\n\t        else {\r\n\t            x = segment.currentAnimationState.xVal - segment.maxLength;\r\n\t            y = segment.currentAnimationState.yVal;\r\n\t        }\r\n\t        var viewport = this.chart.interpolatedViewport;\r\n\t        this.mesh.position.set(viewport.getWorldXByVal(x), viewport.getWorldYByVal(y), 0);\r\n\t    };\r\n\t    return TrendLoading;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendLoading = TrendLoading;\r\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(48));\r\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar CANVAS_WIDTH = 150;\r\n\tvar CANVAS_HEIGHT = 64;\r\n\tvar OFFSET_X = 15;\r\n\tvar TrendsIndicatorWidget = (function (_super) {\r\n\t    __extends(TrendsIndicatorWidget, _super);\r\n\t    function TrendsIndicatorWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsIndicatorWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendIndicator;\r\n\t    };\r\n\t    TrendsIndicatorWidget.widgetName = 'TrendsIndicator';\r\n\t    return TrendsIndicatorWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsIndicatorWidget = TrendsIndicatorWidget;\r\n\tvar TrendIndicator = (function (_super) {\r\n\t    __extends(TrendIndicator, _super);\r\n\t    function TrendIndicator(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.onTrendChange();\r\n\t    }\r\n\t    TrendIndicator.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasIndicator;\r\n\t    };\r\n\t    TrendIndicator.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendIndicator.prototype.onTrendChange = function () {\r\n\t        // update canvas value\r\n\t        var trendData = this.trend.getData();\r\n\t        var lastItem = trendData[trendData.length - 1];\r\n\t        var texture = this.mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        // uncomment to preview indicator rect\r\n\t        // ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t        // ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendIndicator.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var color = new three_charts_1.Color(this.trend.getOptions().lineColor);\r\n\t        var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.font = _this.chart.state.font.l;\r\n\t            ctx.fillStyle = color.rgbaStr;\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\r\n\t    };\r\n\t    TrendIndicator.prototype.onTransformationFrame = function () {\r\n\t        // set new widget position\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.onSegmentsAnimate = function (segments) {\r\n\t        // set new widget position\r\n\t        this.segment = segments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\r\n\t        var viewport = chart.interpolatedViewport;\r\n\t        var screenWidth = chart.state.width;\r\n\t        var x = viewport.getWorldXByVal(segmentEndXVal) + OFFSET_X;\r\n\t        var y = viewport.getWorldYByVal(segmentEndYVal);\r\n\t        var screenX = viewport.getViewportXByWorldX(x);\r\n\t        var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\r\n\t        if (indicatorIsOutOfScreen) {\r\n\t            if (screenX < 0)\r\n\t                x = viewport.getLeft() + 20;\r\n\t            if (screenX > screenWidth)\r\n\t                x = viewport.getRight() - CANVAS_WIDTH / 2 - 10;\r\n\t            y -= 25;\r\n\t        }\r\n\t        this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\r\n\t    };\r\n\t    return TrendIndicator;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendIndicator = TrendIndicator;\r\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar AxisMarksWidget_1 = __webpack_require__(50);\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    lineWidth: 3,\r\n\t    width: 200,\r\n\t    value: 0,\r\n\t    stickToEdges: false,\r\n\t    textColor: 'rgba(#45a9e1, 0.8)',\r\n\t    lineColor: 'rgba(#45a9e1, 0.6)',\r\n\t    title: '',\r\n\t    ease: three_charts_1.EASING.Quadratic.Out,\r\n\t    easeSpeed: 500,\r\n\t    opacity: 1\r\n\t};\r\n\tvar AxisMark = (function (_super) {\r\n\t    __extends(AxisMark, _super);\r\n\t    function AxisMark(axisMarkPlugin, chart) {\r\n\t        _super.call(this);\r\n\t        this.axisMarkPlugin = axisMarkPlugin;\r\n\t        this.chart = chart;\r\n\t        three_charts_1.Utils.patch(this, AXIS_MARK_DEFAULT_OPTIONS);\r\n\t    }\r\n\t    AxisMark.prototype.remove = function () {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [{ _id: this.getId() }], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMark.prototype.update = function (newOptions) {\r\n\t        var options = three_charts_1.Utils.deepMerge({ _id: this.getId() }, newOptions);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [options], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    return AxisMark;\r\n\t}(three_charts_1.UniqCollectionItem));\r\n\texports.AxisMark = AxisMark;\r\n\tvar AxisMarksPlugin = (function (_super) {\r\n\t    __extends(AxisMarksPlugin, _super);\r\n\t    function AxisMarksPlugin(axisMarksPluginOptions) {\r\n\t        var _this = this;\r\n\t        _super.call(this, axisMarksPluginOptions);\r\n\t        this.marksCollection = new three_charts_1.UniqCollection({\r\n\t            createInstance: function () { return new AxisMark(_this, _this.chart); }\r\n\t        });\r\n\t    }\r\n\t    AxisMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onStateChangedHandler(this.getOptions());\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.onStateChangedHandler = function (axisMarksOptions) {\r\n\t        this.marksCollection.patch(axisMarksOptions);\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.createMark = function (markOptions) {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = [markOptions], _a) });\r\n\t        return this.marksCollection.getLast();\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMarksPlugin.NAME = 'AxisMarks';\r\n\t    AxisMarksPlugin.providedWidgets = [AxisMarksWidget_1.AxisMarksWidget];\r\n\t    return AxisMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.AxisMarksPlugin = AxisMarksPlugin;\r\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(49);\r\n\t/**\r\n\t * widget for shows marks on axis\r\n\t */\r\n\tvar AxisMarksWidget = (function (_super) {\r\n\t    __extends(AxisMarksWidget, _super);\r\n\t    function AxisMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.axisMarksWidgets = [];\r\n\t    }\r\n\t    AxisMarksWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t        this.axisMarksPlugin.marksCollection.forEach(function (mark) { return _this.createAxisMarkWidget(mark); });\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisMarksWidget.prototype.createAxisMarkWidget = function (axisMark) {\r\n\t        var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\r\n\t        this.axisMarksWidgets.push(axisMarkWidget);\r\n\t        this.object3D.add(axisMarkWidget.getObject3D());\r\n\t    };\r\n\t    AxisMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var marksCollection = this.axisMarksPlugin.marksCollection;\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function () { return _this.updateMarksPositions(); }), this.chart.onResize(function () { return _this.onResizeHandler(); }), this.chart.onChange(function (changedProps) { return _this.onStateChangeHandler(changedProps); }), marksCollection.onCreate(function (mark) { return _this.createAxisMarkWidget(mark); }), marksCollection.onUpdate(function (mark, changedOptions) { return _this.onMarkUpdateHandler(mark, changedOptions); }), marksCollection.onRemove(function (mark) { return _this.onMarkRemoveHandler(mark); }));\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkUpdateHandler = function (mark, changedOptions) {\r\n\t        var widget = this.axisMarksWidgets.find(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        widget.update(changedOptions);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkRemoveHandler = function (mark) {\r\n\t        var ind = this.axisMarksWidgets.findIndex(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        var widget = this.axisMarksWidgets[ind];\r\n\t        this.object3D.remove(widget.getObject3D());\r\n\t        this.axisMarksWidgets.splice(ind, 1);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.updateMarksPositions = function () {\r\n\t        this.forEach(function (widget) { return widget.updatePosition(); });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        this.forEach(function (widget) { return widget.onStateChangeHandler(changedProps); });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onResizeHandler = function () {\r\n\t        this.forEach(function (widget) {\r\n\t            widget.resize();\r\n\t            widget.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.forEach = function (fn) {\r\n\t        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            fn(widget);\r\n\t        }\r\n\t    };\r\n\t    AxisMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarksWidget.widgetName = 'AxisMarks';\r\n\t    return AxisMarksWidget;\r\n\t}(three_charts_1.ChartWidget));\r\n\texports.AxisMarksWidget = AxisMarksWidget;\r\n\texports.DEFAULT_AXIS_MARK_RENDERER = function (axisMarkWidget, ctx, width, height, chart) {\r\n\t    var markOptions = axisMarkWidget.axisMark;\r\n\t    var lineColor = new three_charts_1.Color(markOptions.lineColor);\r\n\t    var textColor = new three_charts_1.Color(markOptions.textColor);\r\n\t    var font = chart.state.font.l;\r\n\t    var offset = parseInt(font);\r\n\t    ctx.clearRect(0, 0, width, height);\r\n\t    ctx.beginPath();\r\n\t    ctx.strokeStyle = lineColor.rgbaStr;\r\n\t    ctx.fillStyle = lineColor.rgbaStr;\r\n\t    ctx.lineWidth = markOptions.lineWidth;\r\n\t    ctx.font = font;\r\n\t    if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t        ctx.moveTo(width / 2, 0);\r\n\t        ctx.lineTo(width / 2, height);\r\n\t        ctx.stroke();\r\n\t        ctx.fillStyle = textColor.rgbaStr;\r\n\t        ctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\r\n\t    }\r\n\t    else {\r\n\t        ctx.moveTo(0, height / 2);\r\n\t        ctx.lineTo(width, height / 2);\r\n\t        ctx.stroke();\r\n\t        ctx.fillStyle = textColor.rgbaStr;\r\n\t        ctx.fillText(markOptions.title, offset, height / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2));\r\n\t    }\r\n\t};\r\n\tvar AxisMarkWidget = (function () {\r\n\t    function AxisMarkWidget(chart, axisMark) {\r\n\t        this.isStickOnTop = false;\r\n\t        this.isStickOnBottom = false;\r\n\t        this.displayedValue = '';\r\n\t        this.height = 0;\r\n\t        this.width = 0;\r\n\t        this.frameValue = 0;\r\n\t        this.frameOpacity = 0;\r\n\t        this.chart = chart;\r\n\t        this.axisMark = axisMark;\r\n\t        this.frameOpacity = axisMark.opacity;\r\n\t        this.frameValue = axisMark.value;\r\n\t        this.object3D = new Object3D();\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    AxisMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.initObject = function () {\r\n\t        this.width = this.chart.state.width;\r\n\t        this.height = this.chart.state.height;\r\n\t        var markOptions = this.axisMark;\r\n\t        if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t            this.width = markOptions.width;\r\n\t        }\r\n\t        else {\r\n\t            this.height = markOptions.width;\r\n\t        }\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(this.width, this.height);\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(this.width, this.height), new MeshBasicMaterial({ map: texture, transparent: true }));\r\n\t        this.object3D.add(this.mesh);\r\n\t        this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        var needRender = this.axisMark.needRender && this.axisMark.needRender(this, this.chart, changedProps);\r\n\t        needRender && this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.render = function () {\r\n\t        var markOptions = this.axisMark;\r\n\t        var mesh = this.mesh;\r\n\t        var texture = mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        var renderer = markOptions.renderer ? markOptions.renderer : exports.DEFAULT_AXIS_MARK_RENDERER;\r\n\t        if (markOptions.displayedValue)\r\n\t            this.displayedValue = markOptions.displayedValue(this, this.chart);\r\n\t        renderer(this, ctx, this.width, this.height, this.chart);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.resize = function () {\r\n\t        this.object3D.remove(this.mesh);\r\n\t        this.initObject();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.update = function (options) {\r\n\t        var _this = this;\r\n\t        var mark = this.axisMark;\r\n\t        this.animation && this.animation.stop();\r\n\t        this.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\r\n\t            .from([this.frameValue, this.frameOpacity])\r\n\t            .to([mark.value, mark.opacity])\r\n\t            .onTick(function (arr) {\r\n\t            _this.frameValue = arr[0];\r\n\t            _this.frameOpacity = arr[1];\r\n\t            _this.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarkWidget.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var screen = chart.interpolatedViewport;\r\n\t        var mark = this.axisMark;\r\n\t        var isXAxis = mark.axisType == three_charts_1.AXIS_TYPE.X;\r\n\t        var hasStickMode = mark.stickToEdges;\r\n\t        var _a = chart.state, width = _a.width, height = _a.height;\r\n\t        var val = this.frameValue;\r\n\t        var opactity = this.frameOpacity;\r\n\t        var material = this.mesh.material;\r\n\t        material.opacity = opactity;\r\n\t        if (isXAxis) {\r\n\t            // TODO: make stickToEdges mode for AXIS_TYPE.X\r\n\t            this.mesh.position.x = screen.getWorldXByVal(val);\r\n\t            this.mesh.position.y = screen.params.scrollY + height / 2;\r\n\t        }\r\n\t        else {\r\n\t            var bottomVal = screen.getBottomVal();\r\n\t            var topVal = screen.getTopVal();\r\n\t            var needToStickOnTop = hasStickMode && val > topVal;\r\n\t            var needToStickOnBottom = hasStickMode && val < bottomVal;\r\n\t            this.mesh.position.x = screen.params.scrollX + width / 2;\r\n\t            if (needToStickOnTop) {\r\n\t                this.isStickOnTop = true;\r\n\t                this.mesh.position.y = screen.getTop();\r\n\t            }\r\n\t            else if (needToStickOnBottom) {\r\n\t                this.isStickOnBottom = true;\r\n\t                this.mesh.position.y = screen.getBottom();\r\n\t            }\r\n\t            else {\r\n\t                this.isStickOnBottom = this.isStickOnTop = false;\r\n\t                this.mesh.position.y = screen.getWorldYByVal(val);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return AxisMarkWidget;\r\n\t}());\r\n\texports.AxisMarkWidget = AxisMarkWidget;\r\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar ZonesWidget_1 = __webpack_require__(52);\r\n\t(function (ZONE_TYPE) {\r\n\t    ZONE_TYPE[ZONE_TYPE[\"X_RANGE\"] = 0] = \"X_RANGE\";\r\n\t})(exports.ZONE_TYPE || (exports.ZONE_TYPE = {}));\r\n\tvar ZONE_TYPE = exports.ZONE_TYPE;\r\n\tvar ZONE_DEFAULT_OPTIONS = {\r\n\t    name: '',\r\n\t    title: '',\r\n\t    type: ZONE_TYPE.X_RANGE,\r\n\t    bgColor: '#b81820',\r\n\t    easeSpeed: 500,\r\n\t    opacity: 0.4,\r\n\t    position: {\r\n\t        startXVal: 0,\r\n\t        startYVal: 0,\r\n\t        endXVal: 0,\r\n\t        endYVal: 0\r\n\t    }\r\n\t};\r\n\tvar Zone = (function (_super) {\r\n\t    __extends(Zone, _super);\r\n\t    function Zone(zonePlugin, chart) {\r\n\t        _super.call(this);\r\n\t        this.zonePlugin = zonePlugin;\r\n\t        this.chart = chart;\r\n\t        three_charts_1.Utils.patch(this, ZONE_DEFAULT_OPTIONS);\r\n\t        if (this.type == ZONE_TYPE.X_RANGE) {\r\n\t            this.position.startYVal = -Infinity;\r\n\t            this.position.endYVal = Infinity;\r\n\t        }\r\n\t    }\r\n\t    Zone.prototype.remove = function () {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[ZonesPlugin.NAME] = [{ _id: this.getId() }], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    Zone.prototype.update = function (newOptions) {\r\n\t        var options = three_charts_1.Utils.deepMerge({ _id: this.getId() }, newOptions);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[ZonesPlugin.NAME] = [options], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    return Zone;\r\n\t}(three_charts_1.UniqCollectionItem));\r\n\texports.Zone = Zone;\r\n\tvar ZonesPlugin = (function (_super) {\r\n\t    __extends(ZonesPlugin, _super);\r\n\t    function ZonesPlugin(pluginOptions) {\r\n\t        var _this = this;\r\n\t        _super.call(this, pluginOptions);\r\n\t        this.items = new three_charts_1.UniqCollection({\r\n\t            createInstance: function () { return new Zone(_this, _this.chart); }\r\n\t        });\r\n\t    }\r\n\t    ZonesPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onStateChangedHandler(this.getOptions());\r\n\t    };\r\n\t    ZonesPlugin.prototype.onStateChangedHandler = function (options) {\r\n\t        this.items.patch(options);\r\n\t    };\r\n\t    ZonesPlugin.prototype.create = function (zoneOptions) {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = [zoneOptions], _a) });\r\n\t        return this.items.getLast();\r\n\t        var _a;\r\n\t    };\r\n\t    ZonesPlugin.NAME = 'Zone';\r\n\t    ZonesPlugin.providedWidgets = [ZonesWidget_1.ZonesWidget];\r\n\t    return ZonesPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.ZonesPlugin = ZonesPlugin;\r\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(38);\r\n\tvar ZonesPlugin_1 = __webpack_require__(51);\r\n\t/**\r\n\t * widget for shows marks on axis\r\n\t */\r\n\tvar ZonesWidget = (function (_super) {\r\n\t    __extends(ZonesWidget, _super);\r\n\t    function ZonesWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.items = [];\r\n\t    }\r\n\t    ZonesWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.zonesPlugin = this.chart.getPlugin(ZonesPlugin_1.ZonesPlugin.NAME);\r\n\t        this.zonesPlugin.items.forEach(function (zone) { return _this.createZoneWidget(zone); });\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    ZonesWidget.prototype.createZoneWidget = function (zone) {\r\n\t        var widget = new ZoneWidget(this.chart, zone);\r\n\t        this.items.push(widget);\r\n\t        this.object3D.add(widget.getObject3D());\r\n\t    };\r\n\t    ZonesWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var zones = this.zonesPlugin.items;\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function () { return _this.updateZonesPositions(); }), zones.onCreate(function (item) { return _this.createZoneWidget(item); }), zones.onUpdate(function (item, changedOptions) { return _this.onZoneUpdateHandler(item, changedOptions); }), zones.onRemove(function (item) { return _this.onZoneRemoveHandler(item); }));\r\n\t    };\r\n\t    ZonesWidget.prototype.onZoneUpdateHandler = function (mark, changedOptions) {\r\n\t        var widget = this.items.find(function (widget) { return widget.zone.getId() == mark.getId(); });\r\n\t        widget.update(changedOptions);\r\n\t    };\r\n\t    ZonesWidget.prototype.onZoneRemoveHandler = function (mark) {\r\n\t        var ind = this.items.findIndex(function (widget) { return widget.zone.getId() == mark.getId(); });\r\n\t        var widget = this.items[ind];\r\n\t        this.object3D.remove(widget.getObject3D());\r\n\t        this.items.splice(ind, 1);\r\n\t    };\r\n\t    ZonesWidget.prototype.updateZonesPositions = function () {\r\n\t        this.forEach(function (widget) { return widget.updatePosition(); });\r\n\t    };\r\n\t    ZonesWidget.prototype.forEach = function (fn) {\r\n\t        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            fn(widget);\r\n\t        }\r\n\t    };\r\n\t    ZonesWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    ZonesWidget.widgetName = 'Zones';\r\n\t    return ZonesWidget;\r\n\t}(three_charts_1.ChartWidget));\r\n\texports.ZonesWidget = ZonesWidget;\r\n\tvar ZoneWidget = (function () {\r\n\t    function ZoneWidget(chart, zone) {\r\n\t        this.chart = chart;\r\n\t        this.zone = zone;\r\n\t        this.object3D = new Object3D();\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    ZoneWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    ZoneWidget.prototype.initObject = function () {\r\n\t        var height = this.chart.state.height;\r\n\t        var bgColor = new three_charts_1.Color(this.zone.bgColor);\r\n\t        this.animatedProps = three_charts_1.Utils.deepMerge({}, this.zone.position);\r\n\t        this.animatedProps.opacity = this.zone.opacity;\r\n\t        // mesh scheme\r\n\t        //\r\n\t        // vert0 +---+ vert3\r\n\t        //       |\\  |\r\n\t        // face1 | \\ | face2\r\n\t        // \t     |  \\|\r\n\t        // vert1 +---+ vert2\r\n\t        var geometry = new Geometry();\r\n\t        geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\r\n\t        geometry.faces.push(new THREE.Face3(0, 1, 2), new THREE.Face3(3, 0, 2));\r\n\t        this.mesh = new Mesh(geometry, new MeshBasicMaterial({ transparent: true, color: bgColor.value, opacity: bgColor.a }));\r\n\t        this.mesh.frustumCulled = false;\r\n\t        this.object3D.add(this.mesh);\r\n\t    };\r\n\t    ZoneWidget.prototype.update = function (options) {\r\n\t        var _this = this;\r\n\t        var zone = this.zone;\r\n\t        this.animation && this.animation.stop();\r\n\t        this.animation = this.chart.animationManager.animate(zone.easeSpeed, zone.ease)\r\n\t            .from(this.animatedProps)\r\n\t            .to({\r\n\t            startXVal: zone.position.startXVal,\r\n\t            startYVal: zone.position.startYVal,\r\n\t            endXVal: zone.position.endXVal,\r\n\t            endYVal: zone.position.endYVal,\r\n\t            opacity: zone.opacity\r\n\t        })\r\n\t            .onTick(function () { return _this.updatePosition(); });\r\n\t    };\r\n\t    ZoneWidget.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var viewport = chart.interpolatedViewport;\r\n\t        var zone = this.zone;\r\n\t        var _a = this.animatedProps, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, opacity = _a.opacity;\r\n\t        var startY = isFinite(startYVal) ? viewport.getWorldYByVal(startYVal) : viewport.getBottom();\r\n\t        var endY = isFinite(endYVal) ? viewport.getWorldYByVal(endYVal) : viewport.getTop();\r\n\t        var startX = viewport.getWorldXByVal(startXVal);\r\n\t        var endX = viewport.getWorldXByVal(endXVal);\r\n\t        var geometry = this.mesh.geometry;\r\n\t        var material = this.mesh.material;\r\n\t        var verts = geometry.vertices;\r\n\t        material.opacity = this.animatedProps.opacity;\r\n\t        verts[0].set(startX, endY, 0);\r\n\t        verts[1].set(startX, startY, 0);\r\n\t        verts[2].set(endX, startY, 0);\r\n\t        verts[3].set(endX, endY, 0);\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    return ZoneWidget;\r\n\t}());\r\n\texports.ZoneWidget = ZoneWidget;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 47b60952b4bd2b9c778f\n **/","\n// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE, AXIS_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/src/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/src/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/src/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/src/TrendsIndicatorWidget';\nimport { AxisMarksPlugin } from \"../plugins/src/AxisMarksPlugin/AxisMarksPlugin\";\nimport { ZonesPlugin } from \"../plugins/src/ZonesPlugin/ZonesPlugin\";\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chartView: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\txVal: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\n\t\t\tcolor: Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\n\t\t\torientation: orientation,\n\t\t\t// textureFilter: TEXTURE_FILTER.NEAREST,\n\t\t\tuserData: {\n\t\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\t\tdescriptionColor: descriptionColor\n\t\t\t}\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchartView = new ChartView({\n\t\tyAxis: {\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 0, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000,\n\t\t\t\tmargin: {end: 200},\n\t\t\t},\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\t// minSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew ZonesPlugin([]),\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]}),\n\t\tnew AxisMarksPlugin([\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.startTime, name: 'test', title: 'DEADLINE', userData: {feel: 'aa'}},\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600'},\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187'},\n\n\t\t])\n\t]\n\t);\n\n\n\tlet axisMarks = chartView.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\tlet zones = chartView.chart.getPlugin(ZonesPlugin.NAME) as ZonesPlugin;\n\n\tsetTimeout(() => {\n\t\tlet zone = zones.create({position: {startXVal: dsMain.startTime, endXVal: dsMain.startTime + 5000}});\n\t\tlet mark = axisMarks.createMark({axisType: AXIS_TYPE.Y, value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true});\n\t\tsetInterval(() => {\n\t\t\tmark.update({value: mark.value + 1});\n\t\t\t//zone.update({position: {startXVal: zone.position.startXVal + 1000}})\n\t\t}, 1000);\n\t}, 1000);\n\t\n\t(<any>window)['chartView'] = chartView;\n\n\tvar mainTrend = chartView.getTrend('main');\n\n\tmainTrend.onDataChange(() => {\n\n\t\tvar markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\tif (markOptions) setTimeout(() => {\n\t\t\tlet trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t\ttrendsMarks.createMark(markOptions);\n\t\t}, 500);\n\t});\n\n\n\n\tvar i = 0;\n\n\tchartView.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chartView.getTrend('main').appendData([val]);\n\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchartView.chart.setState({autoScroll: false});\n\t\t\tchartView.chart.zoomToRange(range);\n\t\t\tchartView.chart.scrollToEnd().then(() => {\n\t\t\t\tchartView.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","export declare type TEase = (k: number) => number;\n\n/**\n * Easing from tween.js lib https://github.com/tweenjs/tween.js\n **/\nexport const EASING = {\n\n\tLinear: {\n\n\t\tNone: function (k: number) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - EASING.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn EASING.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Easing.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 38\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __webpack_require__(2);\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(27));\n        __export(__webpack_require__(24));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(36));\n        __export(__webpack_require__(28));\n        __export(__webpack_require__(37));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(31));\n        __export(__webpack_require__(25));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(26));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(3);\n        exports.isPlainObject = __webpack_require__(4);\n        exports.EE2 = __webpack_require__(6);\n        var es6_promise_1 = __webpack_require__(7);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(8);\n        exports.deepExtend = __webpack_require__(9);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(5);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        (function(Buffer) {\n            /*!\n\t * @description Recursive object extending\n\t * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n\t * @license MIT\n\t *\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t * this software and associated documentation files (the \"Software\"), to deal in\n\t * the Software without restriction, including without limitation the rights to\n\t * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n\t * the Software, and to permit persons to whom the Software is furnished to do so,\n\t * subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all\n\t * copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\t * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\t * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n\t * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n            \"use strict\";\n            function isSpecificValue(val) {\n                return val instanceof Buffer || val instanceof Date || val instanceof RegExp ? true : false;\n            }\n            function cloneSpecificValue(val) {\n                if (val instanceof Buffer) {\n                    var x = new Buffer(val.length);\n                    val.copy(x);\n                    return x;\n                } else if (val instanceof Date) {\n                    return new Date(val.getTime());\n                } else if (val instanceof RegExp) {\n                    return new RegExp(val);\n                } else {\n                    throw new Error(\"Unexpected situation\");\n                }\n            }\n            function deepCloneArray(arr) {\n                var clone = [];\n                arr.forEach(function(item, index) {\n                    if (typeof item === \"object\" && item !== null) {\n                        if (Array.isArray(item)) {\n                            clone[index] = deepCloneArray(item);\n                        } else if (isSpecificValue(item)) {\n                            clone[index] = cloneSpecificValue(item);\n                        } else {\n                            clone[index] = deepExtend({}, item);\n                        }\n                    } else {\n                        clone[index] = item;\n                    }\n                });\n                return clone;\n            }\n            var deepExtend = module.exports = function() {\n                if (arguments.length < 1 || typeof arguments[0] !== \"object\") {\n                    return false;\n                }\n                if (arguments.length < 2) {\n                    return arguments[0];\n                }\n                var target = arguments[0];\n                var args = Array.prototype.slice.call(arguments, 1);\n                var val, src, clone;\n                args.forEach(function(obj) {\n                    if (typeof obj !== \"object\" || Array.isArray(obj)) {\n                        return;\n                    }\n                    Object.keys(obj).forEach(function(key) {\n                        src = target[key];\n                        val = obj[key];\n                        if (val === target) {\n                            return;\n                        } else if (typeof val !== \"object\" || val === null) {\n                            target[key] = val;\n                            return;\n                        } else if (Array.isArray(val)) {\n                            target[key] = deepCloneArray(val);\n                            return;\n                        } else if (isSpecificValue(val)) {\n                            target[key] = cloneSpecificValue(val);\n                            return;\n                        } else if (typeof src !== \"object\" || src === null || Array.isArray(src)) {\n                            target[key] = deepExtend({}, val);\n                            return;\n                        } else {\n                            target[key] = deepExtend(src, val);\n                            return;\n                        }\n                    });\n                });\n                return target;\n            };\n        }).call(exports, __webpack_require__(10).Buffer);\n    }, function(module, exports, __webpack_require__) {\n        (function(Buffer, global) {\n            /*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n            \"use strict\";\n            var base64 = __webpack_require__(11);\n            var ieee754 = __webpack_require__(12);\n            var isArray = __webpack_require__(13);\n            exports.Buffer = Buffer;\n            exports.SlowBuffer = SlowBuffer;\n            exports.INSPECT_MAX_BYTES = 50;\n            Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n            exports.kMaxLength = kMaxLength();\n            function typedArraySupport() {\n                try {\n                    var arr = new Uint8Array(1);\n                    arr.__proto__ = {\n                        __proto__: Uint8Array.prototype,\n                        foo: function() {\n                            return 42;\n                        }\n                    };\n                    return arr.foo() === 42 && typeof arr.subarray === \"function\" && arr.subarray(1, 1).byteLength === 0;\n                } catch (e) {\n                    return false;\n                }\n            }\n            function kMaxLength() {\n                return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;\n            }\n            function createBuffer(that, length) {\n                if (kMaxLength() < length) {\n                    throw new RangeError(\"Invalid typed array length\");\n                }\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    that = new Uint8Array(length);\n                    that.__proto__ = Buffer.prototype;\n                } else {\n                    if (that === null) {\n                        that = new Buffer(length);\n                    }\n                    that.length = length;\n                }\n                return that;\n            }\n            function Buffer(arg, encodingOrOffset, length) {\n                if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n                    return new Buffer(arg, encodingOrOffset, length);\n                }\n                if (typeof arg === \"number\") {\n                    if (typeof encodingOrOffset === \"string\") {\n                        throw new Error(\"If encoding is specified then the first argument must be a string\");\n                    }\n                    return allocUnsafe(this, arg);\n                }\n                return from(this, arg, encodingOrOffset, length);\n            }\n            Buffer.poolSize = 8192;\n            Buffer._augment = function(arr) {\n                arr.__proto__ = Buffer.prototype;\n                return arr;\n            };\n            function from(that, value, encodingOrOffset, length) {\n                if (typeof value === \"number\") {\n                    throw new TypeError('\"value\" argument must not be a number');\n                }\n                if (typeof ArrayBuffer !== \"undefined\" && value instanceof ArrayBuffer) {\n                    return fromArrayBuffer(that, value, encodingOrOffset, length);\n                }\n                if (typeof value === \"string\") {\n                    return fromString(that, value, encodingOrOffset);\n                }\n                return fromObject(that, value);\n            }\n            Buffer.from = function(value, encodingOrOffset, length) {\n                return from(null, value, encodingOrOffset, length);\n            };\n            if (Buffer.TYPED_ARRAY_SUPPORT) {\n                Buffer.prototype.__proto__ = Uint8Array.prototype;\n                Buffer.__proto__ = Uint8Array;\n                if (typeof Symbol !== \"undefined\" && Symbol.species && Buffer[Symbol.species] === Buffer) {\n                    Object.defineProperty(Buffer, Symbol.species, {\n                        value: null,\n                        configurable: true\n                    });\n                }\n            }\n            function assertSize(size) {\n                if (typeof size !== \"number\") {\n                    throw new TypeError('\"size\" argument must be a number');\n                } else if (size < 0) {\n                    throw new RangeError('\"size\" argument must not be negative');\n                }\n            }\n            function alloc(that, size, fill, encoding) {\n                assertSize(size);\n                if (size <= 0) {\n                    return createBuffer(that, size);\n                }\n                if (fill !== undefined) {\n                    return typeof encoding === \"string\" ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n                }\n                return createBuffer(that, size);\n            }\n            Buffer.alloc = function(size, fill, encoding) {\n                return alloc(null, size, fill, encoding);\n            };\n            function allocUnsafe(that, size) {\n                assertSize(size);\n                that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n                if (!Buffer.TYPED_ARRAY_SUPPORT) {\n                    for (var i = 0; i < size; ++i) {\n                        that[i] = 0;\n                    }\n                }\n                return that;\n            }\n            Buffer.allocUnsafe = function(size) {\n                return allocUnsafe(null, size);\n            };\n            Buffer.allocUnsafeSlow = function(size) {\n                return allocUnsafe(null, size);\n            };\n            function fromString(that, string, encoding) {\n                if (typeof encoding !== \"string\" || encoding === \"\") {\n                    encoding = \"utf8\";\n                }\n                if (!Buffer.isEncoding(encoding)) {\n                    throw new TypeError('\"encoding\" must be a valid string encoding');\n                }\n                var length = byteLength(string, encoding) | 0;\n                that = createBuffer(that, length);\n                var actual = that.write(string, encoding);\n                if (actual !== length) {\n                    that = that.slice(0, actual);\n                }\n                return that;\n            }\n            function fromArrayLike(that, array) {\n                var length = array.length < 0 ? 0 : checked(array.length) | 0;\n                that = createBuffer(that, length);\n                for (var i = 0; i < length; i += 1) {\n                    that[i] = array[i] & 255;\n                }\n                return that;\n            }\n            function fromArrayBuffer(that, array, byteOffset, length) {\n                array.byteLength;\n                if (byteOffset < 0 || array.byteLength < byteOffset) {\n                    throw new RangeError(\"'offset' is out of bounds\");\n                }\n                if (array.byteLength < byteOffset + (length || 0)) {\n                    throw new RangeError(\"'length' is out of bounds\");\n                }\n                if (byteOffset === undefined && length === undefined) {\n                    array = new Uint8Array(array);\n                } else if (length === undefined) {\n                    array = new Uint8Array(array, byteOffset);\n                } else {\n                    array = new Uint8Array(array, byteOffset, length);\n                }\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    that = array;\n                    that.__proto__ = Buffer.prototype;\n                } else {\n                    that = fromArrayLike(that, array);\n                }\n                return that;\n            }\n            function fromObject(that, obj) {\n                if (Buffer.isBuffer(obj)) {\n                    var len = checked(obj.length) | 0;\n                    that = createBuffer(that, len);\n                    if (that.length === 0) {\n                        return that;\n                    }\n                    obj.copy(that, 0, 0, len);\n                    return that;\n                }\n                if (obj) {\n                    if (typeof ArrayBuffer !== \"undefined\" && obj.buffer instanceof ArrayBuffer || \"length\" in obj) {\n                        if (typeof obj.length !== \"number\" || isnan(obj.length)) {\n                            return createBuffer(that, 0);\n                        }\n                        return fromArrayLike(that, obj);\n                    }\n                    if (obj.type === \"Buffer\" && isArray(obj.data)) {\n                        return fromArrayLike(that, obj.data);\n                    }\n                }\n                throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n            }\n            function checked(length) {\n                if (length >= kMaxLength()) {\n                    throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + kMaxLength().toString(16) + \" bytes\");\n                }\n                return length | 0;\n            }\n            function SlowBuffer(length) {\n                if (+length != length) {\n                    length = 0;\n                }\n                return Buffer.alloc(+length);\n            }\n            Buffer.isBuffer = function isBuffer(b) {\n                return !!(b != null && b._isBuffer);\n            };\n            Buffer.compare = function compare(a, b) {\n                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n                    throw new TypeError(\"Arguments must be Buffers\");\n                }\n                if (a === b) return 0;\n                var x = a.length;\n                var y = b.length;\n                for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n                    if (a[i] !== b[i]) {\n                        x = a[i];\n                        y = b[i];\n                        break;\n                    }\n                }\n                if (x < y) return -1;\n                if (y < x) return 1;\n                return 0;\n            };\n            Buffer.isEncoding = function isEncoding(encoding) {\n                switch (String(encoding).toLowerCase()) {\n                  case \"hex\":\n                  case \"utf8\":\n                  case \"utf-8\":\n                  case \"ascii\":\n                  case \"latin1\":\n                  case \"binary\":\n                  case \"base64\":\n                  case \"ucs2\":\n                  case \"ucs-2\":\n                  case \"utf16le\":\n                  case \"utf-16le\":\n                    return true;\n\n                  default:\n                    return false;\n                }\n            };\n            Buffer.concat = function concat(list, length) {\n                if (!isArray(list)) {\n                    throw new TypeError('\"list\" argument must be an Array of Buffers');\n                }\n                if (list.length === 0) {\n                    return Buffer.alloc(0);\n                }\n                var i;\n                if (length === undefined) {\n                    length = 0;\n                    for (i = 0; i < list.length; ++i) {\n                        length += list[i].length;\n                    }\n                }\n                var buffer = Buffer.allocUnsafe(length);\n                var pos = 0;\n                for (i = 0; i < list.length; ++i) {\n                    var buf = list[i];\n                    if (!Buffer.isBuffer(buf)) {\n                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n                    }\n                    buf.copy(buffer, pos);\n                    pos += buf.length;\n                }\n                return buffer;\n            };\n            function byteLength(string, encoding) {\n                if (Buffer.isBuffer(string)) {\n                    return string.length;\n                }\n                if (typeof ArrayBuffer !== \"undefined\" && typeof ArrayBuffer.isView === \"function\" && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n                    return string.byteLength;\n                }\n                if (typeof string !== \"string\") {\n                    string = \"\" + string;\n                }\n                var len = string.length;\n                if (len === 0) return 0;\n                var loweredCase = false;\n                for (;;) {\n                    switch (encoding) {\n                      case \"ascii\":\n                      case \"latin1\":\n                      case \"binary\":\n                        return len;\n\n                      case \"utf8\":\n                      case \"utf-8\":\n                      case undefined:\n                        return utf8ToBytes(string).length;\n\n                      case \"ucs2\":\n                      case \"ucs-2\":\n                      case \"utf16le\":\n                      case \"utf-16le\":\n                        return len * 2;\n\n                      case \"hex\":\n                        return len >>> 1;\n\n                      case \"base64\":\n                        return base64ToBytes(string).length;\n\n                      default:\n                        if (loweredCase) return utf8ToBytes(string).length;\n                        encoding = (\"\" + encoding).toLowerCase();\n                        loweredCase = true;\n                    }\n                }\n            }\n            Buffer.byteLength = byteLength;\n            function slowToString(encoding, start, end) {\n                var loweredCase = false;\n                if (start === undefined || start < 0) {\n                    start = 0;\n                }\n                if (start > this.length) {\n                    return \"\";\n                }\n                if (end === undefined || end > this.length) {\n                    end = this.length;\n                }\n                if (end <= 0) {\n                    return \"\";\n                }\n                end >>>= 0;\n                start >>>= 0;\n                if (end <= start) {\n                    return \"\";\n                }\n                if (!encoding) encoding = \"utf8\";\n                while (true) {\n                    switch (encoding) {\n                      case \"hex\":\n                        return hexSlice(this, start, end);\n\n                      case \"utf8\":\n                      case \"utf-8\":\n                        return utf8Slice(this, start, end);\n\n                      case \"ascii\":\n                        return asciiSlice(this, start, end);\n\n                      case \"latin1\":\n                      case \"binary\":\n                        return latin1Slice(this, start, end);\n\n                      case \"base64\":\n                        return base64Slice(this, start, end);\n\n                      case \"ucs2\":\n                      case \"ucs-2\":\n                      case \"utf16le\":\n                      case \"utf-16le\":\n                        return utf16leSlice(this, start, end);\n\n                      default:\n                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n                        encoding = (encoding + \"\").toLowerCase();\n                        loweredCase = true;\n                    }\n                }\n            }\n            Buffer.prototype._isBuffer = true;\n            function swap(b, n, m) {\n                var i = b[n];\n                b[n] = b[m];\n                b[m] = i;\n            }\n            Buffer.prototype.swap16 = function swap16() {\n                var len = this.length;\n                if (len % 2 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n                }\n                for (var i = 0; i < len; i += 2) {\n                    swap(this, i, i + 1);\n                }\n                return this;\n            };\n            Buffer.prototype.swap32 = function swap32() {\n                var len = this.length;\n                if (len % 4 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n                }\n                for (var i = 0; i < len; i += 4) {\n                    swap(this, i, i + 3);\n                    swap(this, i + 1, i + 2);\n                }\n                return this;\n            };\n            Buffer.prototype.swap64 = function swap64() {\n                var len = this.length;\n                if (len % 8 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n                }\n                for (var i = 0; i < len; i += 8) {\n                    swap(this, i, i + 7);\n                    swap(this, i + 1, i + 6);\n                    swap(this, i + 2, i + 5);\n                    swap(this, i + 3, i + 4);\n                }\n                return this;\n            };\n            Buffer.prototype.toString = function toString() {\n                var length = this.length | 0;\n                if (length === 0) return \"\";\n                if (arguments.length === 0) return utf8Slice(this, 0, length);\n                return slowToString.apply(this, arguments);\n            };\n            Buffer.prototype.equals = function equals(b) {\n                if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n                if (this === b) return true;\n                return Buffer.compare(this, b) === 0;\n            };\n            Buffer.prototype.inspect = function inspect() {\n                var str = \"\";\n                var max = exports.INSPECT_MAX_BYTES;\n                if (this.length > 0) {\n                    str = this.toString(\"hex\", 0, max).match(/.{2}/g).join(\" \");\n                    if (this.length > max) str += \" ... \";\n                }\n                return \"<Buffer \" + str + \">\";\n            };\n            Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n                if (!Buffer.isBuffer(target)) {\n                    throw new TypeError(\"Argument must be a Buffer\");\n                }\n                if (start === undefined) {\n                    start = 0;\n                }\n                if (end === undefined) {\n                    end = target ? target.length : 0;\n                }\n                if (thisStart === undefined) {\n                    thisStart = 0;\n                }\n                if (thisEnd === undefined) {\n                    thisEnd = this.length;\n                }\n                if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n                    throw new RangeError(\"out of range index\");\n                }\n                if (thisStart >= thisEnd && start >= end) {\n                    return 0;\n                }\n                if (thisStart >= thisEnd) {\n                    return -1;\n                }\n                if (start >= end) {\n                    return 1;\n                }\n                start >>>= 0;\n                end >>>= 0;\n                thisStart >>>= 0;\n                thisEnd >>>= 0;\n                if (this === target) return 0;\n                var x = thisEnd - thisStart;\n                var y = end - start;\n                var len = Math.min(x, y);\n                var thisCopy = this.slice(thisStart, thisEnd);\n                var targetCopy = target.slice(start, end);\n                for (var i = 0; i < len; ++i) {\n                    if (thisCopy[i] !== targetCopy[i]) {\n                        x = thisCopy[i];\n                        y = targetCopy[i];\n                        break;\n                    }\n                }\n                if (x < y) return -1;\n                if (y < x) return 1;\n                return 0;\n            };\n            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n                if (buffer.length === 0) return -1;\n                if (typeof byteOffset === \"string\") {\n                    encoding = byteOffset;\n                    byteOffset = 0;\n                } else if (byteOffset > 2147483647) {\n                    byteOffset = 2147483647;\n                } else if (byteOffset < -2147483648) {\n                    byteOffset = -2147483648;\n                }\n                byteOffset = +byteOffset;\n                if (isNaN(byteOffset)) {\n                    byteOffset = dir ? 0 : buffer.length - 1;\n                }\n                if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n                if (byteOffset >= buffer.length) {\n                    if (dir) return -1; else byteOffset = buffer.length - 1;\n                } else if (byteOffset < 0) {\n                    if (dir) byteOffset = 0; else return -1;\n                }\n                if (typeof val === \"string\") {\n                    val = Buffer.from(val, encoding);\n                }\n                if (Buffer.isBuffer(val)) {\n                    if (val.length === 0) {\n                        return -1;\n                    }\n                    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n                } else if (typeof val === \"number\") {\n                    val = val & 255;\n                    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === \"function\") {\n                        if (dir) {\n                            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n                        } else {\n                            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n                        }\n                    }\n                    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);\n                }\n                throw new TypeError(\"val must be string, number or Buffer\");\n            }\n            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n                var indexSize = 1;\n                var arrLength = arr.length;\n                var valLength = val.length;\n                if (encoding !== undefined) {\n                    encoding = String(encoding).toLowerCase();\n                    if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n                        if (arr.length < 2 || val.length < 2) {\n                            return -1;\n                        }\n                        indexSize = 2;\n                        arrLength /= 2;\n                        valLength /= 2;\n                        byteOffset /= 2;\n                    }\n                }\n                function read(buf, i) {\n                    if (indexSize === 1) {\n                        return buf[i];\n                    } else {\n                        return buf.readUInt16BE(i * indexSize);\n                    }\n                }\n                var i;\n                if (dir) {\n                    var foundIndex = -1;\n                    for (i = byteOffset; i < arrLength; i++) {\n                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n                            if (foundIndex === -1) foundIndex = i;\n                            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n                        } else {\n                            if (foundIndex !== -1) i -= i - foundIndex;\n                            foundIndex = -1;\n                        }\n                    }\n                } else {\n                    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n                    for (i = byteOffset; i >= 0; i--) {\n                        var found = true;\n                        for (var j = 0; j < valLength; j++) {\n                            if (read(arr, i + j) !== read(val, j)) {\n                                found = false;\n                                break;\n                            }\n                        }\n                        if (found) return i;\n                    }\n                }\n                return -1;\n            }\n            Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n                return this.indexOf(val, byteOffset, encoding) !== -1;\n            };\n            Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n                return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n            };\n            Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n                return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n            };\n            function hexWrite(buf, string, offset, length) {\n                offset = Number(offset) || 0;\n                var remaining = buf.length - offset;\n                if (!length) {\n                    length = remaining;\n                } else {\n                    length = Number(length);\n                    if (length > remaining) {\n                        length = remaining;\n                    }\n                }\n                var strLen = string.length;\n                if (strLen % 2 !== 0) throw new TypeError(\"Invalid hex string\");\n                if (length > strLen / 2) {\n                    length = strLen / 2;\n                }\n                for (var i = 0; i < length; ++i) {\n                    var parsed = parseInt(string.substr(i * 2, 2), 16);\n                    if (isNaN(parsed)) return i;\n                    buf[offset + i] = parsed;\n                }\n                return i;\n            }\n            function utf8Write(buf, string, offset, length) {\n                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n            }\n            function asciiWrite(buf, string, offset, length) {\n                return blitBuffer(asciiToBytes(string), buf, offset, length);\n            }\n            function latin1Write(buf, string, offset, length) {\n                return asciiWrite(buf, string, offset, length);\n            }\n            function base64Write(buf, string, offset, length) {\n                return blitBuffer(base64ToBytes(string), buf, offset, length);\n            }\n            function ucs2Write(buf, string, offset, length) {\n                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n            }\n            Buffer.prototype.write = function write(string, offset, length, encoding) {\n                if (offset === undefined) {\n                    encoding = \"utf8\";\n                    length = this.length;\n                    offset = 0;\n                } else if (length === undefined && typeof offset === \"string\") {\n                    encoding = offset;\n                    length = this.length;\n                    offset = 0;\n                } else if (isFinite(offset)) {\n                    offset = offset | 0;\n                    if (isFinite(length)) {\n                        length = length | 0;\n                        if (encoding === undefined) encoding = \"utf8\";\n                    } else {\n                        encoding = length;\n                        length = undefined;\n                    }\n                } else {\n                    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n                }\n                var remaining = this.length - offset;\n                if (length === undefined || length > remaining) length = remaining;\n                if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n                    throw new RangeError(\"Attempt to write outside buffer bounds\");\n                }\n                if (!encoding) encoding = \"utf8\";\n                var loweredCase = false;\n                for (;;) {\n                    switch (encoding) {\n                      case \"hex\":\n                        return hexWrite(this, string, offset, length);\n\n                      case \"utf8\":\n                      case \"utf-8\":\n                        return utf8Write(this, string, offset, length);\n\n                      case \"ascii\":\n                        return asciiWrite(this, string, offset, length);\n\n                      case \"latin1\":\n                      case \"binary\":\n                        return latin1Write(this, string, offset, length);\n\n                      case \"base64\":\n                        return base64Write(this, string, offset, length);\n\n                      case \"ucs2\":\n                      case \"ucs-2\":\n                      case \"utf16le\":\n                      case \"utf-16le\":\n                        return ucs2Write(this, string, offset, length);\n\n                      default:\n                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n                        encoding = (\"\" + encoding).toLowerCase();\n                        loweredCase = true;\n                    }\n                }\n            };\n            Buffer.prototype.toJSON = function toJSON() {\n                return {\n                    type: \"Buffer\",\n                    data: Array.prototype.slice.call(this._arr || this, 0)\n                };\n            };\n            function base64Slice(buf, start, end) {\n                if (start === 0 && end === buf.length) {\n                    return base64.fromByteArray(buf);\n                } else {\n                    return base64.fromByteArray(buf.slice(start, end));\n                }\n            }\n            function utf8Slice(buf, start, end) {\n                end = Math.min(buf.length, end);\n                var res = [];\n                var i = start;\n                while (i < end) {\n                    var firstByte = buf[i];\n                    var codePoint = null;\n                    var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n                    if (i + bytesPerSequence <= end) {\n                        var secondByte, thirdByte, fourthByte, tempCodePoint;\n                        switch (bytesPerSequence) {\n                          case 1:\n                            if (firstByte < 128) {\n                                codePoint = firstByte;\n                            }\n                            break;\n\n                          case 2:\n                            secondByte = buf[i + 1];\n                            if ((secondByte & 192) === 128) {\n                                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                                if (tempCodePoint > 127) {\n                                    codePoint = tempCodePoint;\n                                }\n                            }\n                            break;\n\n                          case 3:\n                            secondByte = buf[i + 1];\n                            thirdByte = buf[i + 2];\n                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                                    codePoint = tempCodePoint;\n                                }\n                            }\n                            break;\n\n                          case 4:\n                            secondByte = buf[i + 1];\n                            thirdByte = buf[i + 2];\n                            fourthByte = buf[i + 3];\n                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                                    codePoint = tempCodePoint;\n                                }\n                            }\n                        }\n                    }\n                    if (codePoint === null) {\n                        codePoint = 65533;\n                        bytesPerSequence = 1;\n                    } else if (codePoint > 65535) {\n                        codePoint -= 65536;\n                        res.push(codePoint >>> 10 & 1023 | 55296);\n                        codePoint = 56320 | codePoint & 1023;\n                    }\n                    res.push(codePoint);\n                    i += bytesPerSequence;\n                }\n                return decodeCodePointsArray(res);\n            }\n            var MAX_ARGUMENTS_LENGTH = 4096;\n            function decodeCodePointsArray(codePoints) {\n                var len = codePoints.length;\n                if (len <= MAX_ARGUMENTS_LENGTH) {\n                    return String.fromCharCode.apply(String, codePoints);\n                }\n                var res = \"\";\n                var i = 0;\n                while (i < len) {\n                    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n                }\n                return res;\n            }\n            function asciiSlice(buf, start, end) {\n                var ret = \"\";\n                end = Math.min(buf.length, end);\n                for (var i = start; i < end; ++i) {\n                    ret += String.fromCharCode(buf[i] & 127);\n                }\n                return ret;\n            }\n            function latin1Slice(buf, start, end) {\n                var ret = \"\";\n                end = Math.min(buf.length, end);\n                for (var i = start; i < end; ++i) {\n                    ret += String.fromCharCode(buf[i]);\n                }\n                return ret;\n            }\n            function hexSlice(buf, start, end) {\n                var len = buf.length;\n                if (!start || start < 0) start = 0;\n                if (!end || end < 0 || end > len) end = len;\n                var out = \"\";\n                for (var i = start; i < end; ++i) {\n                    out += toHex(buf[i]);\n                }\n                return out;\n            }\n            function utf16leSlice(buf, start, end) {\n                var bytes = buf.slice(start, end);\n                var res = \"\";\n                for (var i = 0; i < bytes.length; i += 2) {\n                    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n                }\n                return res;\n            }\n            Buffer.prototype.slice = function slice(start, end) {\n                var len = this.length;\n                start = ~~start;\n                end = end === undefined ? len : ~~end;\n                if (start < 0) {\n                    start += len;\n                    if (start < 0) start = 0;\n                } else if (start > len) {\n                    start = len;\n                }\n                if (end < 0) {\n                    end += len;\n                    if (end < 0) end = 0;\n                } else if (end > len) {\n                    end = len;\n                }\n                if (end < start) end = start;\n                var newBuf;\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    newBuf = this.subarray(start, end);\n                    newBuf.__proto__ = Buffer.prototype;\n                } else {\n                    var sliceLen = end - start;\n                    newBuf = new Buffer(sliceLen, undefined);\n                    for (var i = 0; i < sliceLen; ++i) {\n                        newBuf[i] = this[i + start];\n                    }\n                }\n                return newBuf;\n            };\n            function checkOffset(offset, ext, length) {\n                if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n                if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n            }\n            Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) checkOffset(offset, byteLength, this.length);\n                var val = this[offset];\n                var mul = 1;\n                var i = 0;\n                while (++i < byteLength && (mul *= 256)) {\n                    val += this[offset + i] * mul;\n                }\n                return val;\n            };\n            Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) {\n                    checkOffset(offset, byteLength, this.length);\n                }\n                var val = this[offset + --byteLength];\n                var mul = 1;\n                while (byteLength > 0 && (mul *= 256)) {\n                    val += this[offset + --byteLength] * mul;\n                }\n                return val;\n            };\n            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 1, this.length);\n                return this[offset];\n            };\n            Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                return this[offset] | this[offset + 1] << 8;\n            };\n            Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                return this[offset] << 8 | this[offset + 1];\n            };\n            Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n            };\n            Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n            };\n            Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) checkOffset(offset, byteLength, this.length);\n                var val = this[offset];\n                var mul = 1;\n                var i = 0;\n                while (++i < byteLength && (mul *= 256)) {\n                    val += this[offset + i] * mul;\n                }\n                mul *= 128;\n                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n                return val;\n            };\n            Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) checkOffset(offset, byteLength, this.length);\n                var i = byteLength;\n                var mul = 1;\n                var val = this[offset + --i];\n                while (i > 0 && (mul *= 256)) {\n                    val += this[offset + --i] * mul;\n                }\n                mul *= 128;\n                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n                return val;\n            };\n            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 1, this.length);\n                if (!(this[offset] & 128)) return this[offset];\n                return (255 - this[offset] + 1) * -1;\n            };\n            Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                var val = this[offset] | this[offset + 1] << 8;\n                return val & 32768 ? val | 4294901760 : val;\n            };\n            Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                var val = this[offset + 1] | this[offset] << 8;\n                return val & 32768 ? val | 4294901760 : val;\n            };\n            Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n            };\n            Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n            };\n            Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return ieee754.read(this, offset, true, 23, 4);\n            };\n            Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return ieee754.read(this, offset, false, 23, 4);\n            };\n            Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 8, this.length);\n                return ieee754.read(this, offset, true, 52, 8);\n            };\n            Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 8, this.length);\n                return ieee754.read(this, offset, false, 52, 8);\n            };\n            function checkInt(buf, value, offset, ext, max, min) {\n                if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n                if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n            }\n            Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) {\n                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n                }\n                var mul = 1;\n                var i = 0;\n                this[offset] = value & 255;\n                while (++i < byteLength && (mul *= 256)) {\n                    this[offset + i] = value / mul & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) {\n                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n                }\n                var i = byteLength - 1;\n                var mul = 1;\n                this[offset + i] = value & 255;\n                while (--i >= 0 && (mul *= 256)) {\n                    this[offset + i] = value / mul & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n                this[offset] = value & 255;\n                return offset + 1;\n            };\n            function objectWriteUInt16(buf, value, offset, littleEndian) {\n                if (value < 0) value = 65535 + value + 1;\n                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n                    buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n                }\n            }\n            Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value & 255;\n                    this[offset + 1] = value >>> 8;\n                } else {\n                    objectWriteUInt16(this, value, offset, true);\n                }\n                return offset + 2;\n            };\n            Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 8;\n                    this[offset + 1] = value & 255;\n                } else {\n                    objectWriteUInt16(this, value, offset, false);\n                }\n                return offset + 2;\n            };\n            function objectWriteUInt32(buf, value, offset, littleEndian) {\n                if (value < 0) value = 4294967295 + value + 1;\n                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n                    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 255;\n                }\n            }\n            Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset + 3] = value >>> 24;\n                    this[offset + 2] = value >>> 16;\n                    this[offset + 1] = value >>> 8;\n                    this[offset] = value & 255;\n                } else {\n                    objectWriteUInt32(this, value, offset, true);\n                }\n                return offset + 4;\n            };\n            Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 24;\n                    this[offset + 1] = value >>> 16;\n                    this[offset + 2] = value >>> 8;\n                    this[offset + 3] = value & 255;\n                } else {\n                    objectWriteUInt32(this, value, offset, false);\n                }\n                return offset + 4;\n            };\n            Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) {\n                    var limit = Math.pow(2, 8 * byteLength - 1);\n                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n                }\n                var i = 0;\n                var mul = 1;\n                var sub = 0;\n                this[offset] = value & 255;\n                while (++i < byteLength && (mul *= 256)) {\n                    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n                        sub = 1;\n                    }\n                    this[offset + i] = (value / mul >> 0) - sub & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) {\n                    var limit = Math.pow(2, 8 * byteLength - 1);\n                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n                }\n                var i = byteLength - 1;\n                var mul = 1;\n                var sub = 0;\n                this[offset + i] = value & 255;\n                while (--i >= 0 && (mul *= 256)) {\n                    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n                        sub = 1;\n                    }\n                    this[offset + i] = (value / mul >> 0) - sub & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n                if (value < 0) value = 255 + value + 1;\n                this[offset] = value & 255;\n                return offset + 1;\n            };\n            Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value & 255;\n                    this[offset + 1] = value >>> 8;\n                } else {\n                    objectWriteUInt16(this, value, offset, true);\n                }\n                return offset + 2;\n            };\n            Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 8;\n                    this[offset + 1] = value & 255;\n                } else {\n                    objectWriteUInt16(this, value, offset, false);\n                }\n                return offset + 2;\n            };\n            Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value & 255;\n                    this[offset + 1] = value >>> 8;\n                    this[offset + 2] = value >>> 16;\n                    this[offset + 3] = value >>> 24;\n                } else {\n                    objectWriteUInt32(this, value, offset, true);\n                }\n                return offset + 4;\n            };\n            Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n                if (value < 0) value = 4294967295 + value + 1;\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 24;\n                    this[offset + 1] = value >>> 16;\n                    this[offset + 2] = value >>> 8;\n                    this[offset + 3] = value & 255;\n                } else {\n                    objectWriteUInt32(this, value, offset, false);\n                }\n                return offset + 4;\n            };\n            function checkIEEE754(buf, value, offset, ext, max, min) {\n                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n                if (offset < 0) throw new RangeError(\"Index out of range\");\n            }\n            function writeFloat(buf, value, offset, littleEndian, noAssert) {\n                if (!noAssert) {\n                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);\n                }\n                ieee754.write(buf, value, offset, littleEndian, 23, 4);\n                return offset + 4;\n            }\n            Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n                return writeFloat(this, value, offset, true, noAssert);\n            };\n            Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n                return writeFloat(this, value, offset, false, noAssert);\n            };\n            function writeDouble(buf, value, offset, littleEndian, noAssert) {\n                if (!noAssert) {\n                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);\n                }\n                ieee754.write(buf, value, offset, littleEndian, 52, 8);\n                return offset + 8;\n            }\n            Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n                return writeDouble(this, value, offset, true, noAssert);\n            };\n            Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n                return writeDouble(this, value, offset, false, noAssert);\n            };\n            Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n                if (!start) start = 0;\n                if (!end && end !== 0) end = this.length;\n                if (targetStart >= target.length) targetStart = target.length;\n                if (!targetStart) targetStart = 0;\n                if (end > 0 && end < start) end = start;\n                if (end === start) return 0;\n                if (target.length === 0 || this.length === 0) return 0;\n                if (targetStart < 0) {\n                    throw new RangeError(\"targetStart out of bounds\");\n                }\n                if (start < 0 || start >= this.length) throw new RangeError(\"sourceStart out of bounds\");\n                if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n                if (end > this.length) end = this.length;\n                if (target.length - targetStart < end - start) {\n                    end = target.length - targetStart + start;\n                }\n                var len = end - start;\n                var i;\n                if (this === target && start < targetStart && targetStart < end) {\n                    for (i = len - 1; i >= 0; --i) {\n                        target[i + targetStart] = this[i + start];\n                    }\n                } else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) {\n                    for (i = 0; i < len; ++i) {\n                        target[i + targetStart] = this[i + start];\n                    }\n                } else {\n                    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n                }\n                return len;\n            };\n            Buffer.prototype.fill = function fill(val, start, end, encoding) {\n                if (typeof val === \"string\") {\n                    if (typeof start === \"string\") {\n                        encoding = start;\n                        start = 0;\n                        end = this.length;\n                    } else if (typeof end === \"string\") {\n                        encoding = end;\n                        end = this.length;\n                    }\n                    if (val.length === 1) {\n                        var code = val.charCodeAt(0);\n                        if (code < 256) {\n                            val = code;\n                        }\n                    }\n                    if (encoding !== undefined && typeof encoding !== \"string\") {\n                        throw new TypeError(\"encoding must be a string\");\n                    }\n                    if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n                        throw new TypeError(\"Unknown encoding: \" + encoding);\n                    }\n                } else if (typeof val === \"number\") {\n                    val = val & 255;\n                }\n                if (start < 0 || this.length < start || this.length < end) {\n                    throw new RangeError(\"Out of range index\");\n                }\n                if (end <= start) {\n                    return this;\n                }\n                start = start >>> 0;\n                end = end === undefined ? this.length : end >>> 0;\n                if (!val) val = 0;\n                var i;\n                if (typeof val === \"number\") {\n                    for (i = start; i < end; ++i) {\n                        this[i] = val;\n                    }\n                } else {\n                    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n                    var len = bytes.length;\n                    for (i = 0; i < end - start; ++i) {\n                        this[i + start] = bytes[i % len];\n                    }\n                }\n                return this;\n            };\n            var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n            function base64clean(str) {\n                str = stringtrim(str).replace(INVALID_BASE64_RE, \"\");\n                if (str.length < 2) return \"\";\n                while (str.length % 4 !== 0) {\n                    str = str + \"=\";\n                }\n                return str;\n            }\n            function stringtrim(str) {\n                if (str.trim) return str.trim();\n                return str.replace(/^\\s+|\\s+$/g, \"\");\n            }\n            function toHex(n) {\n                if (n < 16) return \"0\" + n.toString(16);\n                return n.toString(16);\n            }\n            function utf8ToBytes(string, units) {\n                units = units || Infinity;\n                var codePoint;\n                var length = string.length;\n                var leadSurrogate = null;\n                var bytes = [];\n                for (var i = 0; i < length; ++i) {\n                    codePoint = string.charCodeAt(i);\n                    if (codePoint > 55295 && codePoint < 57344) {\n                        if (!leadSurrogate) {\n                            if (codePoint > 56319) {\n                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                                continue;\n                            } else if (i + 1 === length) {\n                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                                continue;\n                            }\n                            leadSurrogate = codePoint;\n                            continue;\n                        }\n                        if (codePoint < 56320) {\n                            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                            leadSurrogate = codePoint;\n                            continue;\n                        }\n                        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n                    } else if (leadSurrogate) {\n                        if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                    }\n                    leadSurrogate = null;\n                    if (codePoint < 128) {\n                        if ((units -= 1) < 0) break;\n                        bytes.push(codePoint);\n                    } else if (codePoint < 2048) {\n                        if ((units -= 2) < 0) break;\n                        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n                    } else if (codePoint < 65536) {\n                        if ((units -= 3) < 0) break;\n                        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n                    } else if (codePoint < 1114112) {\n                        if ((units -= 4) < 0) break;\n                        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n                    } else {\n                        throw new Error(\"Invalid code point\");\n                    }\n                }\n                return bytes;\n            }\n            function asciiToBytes(str) {\n                var byteArray = [];\n                for (var i = 0; i < str.length; ++i) {\n                    byteArray.push(str.charCodeAt(i) & 255);\n                }\n                return byteArray;\n            }\n            function utf16leToBytes(str, units) {\n                var c, hi, lo;\n                var byteArray = [];\n                for (var i = 0; i < str.length; ++i) {\n                    if ((units -= 2) < 0) break;\n                    c = str.charCodeAt(i);\n                    hi = c >> 8;\n                    lo = c % 256;\n                    byteArray.push(lo);\n                    byteArray.push(hi);\n                }\n                return byteArray;\n            }\n            function base64ToBytes(str) {\n                return base64.toByteArray(base64clean(str));\n            }\n            function blitBuffer(src, dst, offset, length) {\n                for (var i = 0; i < length; ++i) {\n                    if (i + offset >= dst.length || i >= src.length) break;\n                    dst[i + offset] = src[i];\n                }\n                return i;\n            }\n            function isnan(val) {\n                return val !== val;\n            }\n        }).call(exports, __webpack_require__(10).Buffer, function() {\n            return this;\n        }());\n    }, function(module, exports) {\n        \"use strict\";\n        exports.byteLength = byteLength;\n        exports.toByteArray = toByteArray;\n        exports.fromByteArray = fromByteArray;\n        var lookup = [];\n        var revLookup = [];\n        var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n        var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        for (var i = 0, len = code.length; i < len; ++i) {\n            lookup[i] = code[i];\n            revLookup[code.charCodeAt(i)] = i;\n        }\n        revLookup[\"-\".charCodeAt(0)] = 62;\n        revLookup[\"_\".charCodeAt(0)] = 63;\n        function placeHoldersCount(b64) {\n            var len = b64.length;\n            if (len % 4 > 0) {\n                throw new Error(\"Invalid string. Length must be a multiple of 4\");\n            }\n            return b64[len - 2] === \"=\" ? 2 : b64[len - 1] === \"=\" ? 1 : 0;\n        }\n        function byteLength(b64) {\n            return b64.length * 3 / 4 - placeHoldersCount(b64);\n        }\n        function toByteArray(b64) {\n            var i, j, l, tmp, placeHolders, arr;\n            var len = b64.length;\n            placeHolders = placeHoldersCount(b64);\n            arr = new Arr(len * 3 / 4 - placeHolders);\n            l = placeHolders > 0 ? len - 4 : len;\n            var L = 0;\n            for (i = 0, j = 0; i < l; i += 4, j += 3) {\n                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n                arr[L++] = tmp >> 16 & 255;\n                arr[L++] = tmp >> 8 & 255;\n                arr[L++] = tmp & 255;\n            }\n            if (placeHolders === 2) {\n                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n                arr[L++] = tmp & 255;\n            } else if (placeHolders === 1) {\n                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n                arr[L++] = tmp >> 8 & 255;\n                arr[L++] = tmp & 255;\n            }\n            return arr;\n        }\n        function tripletToBase64(num) {\n            return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n        }\n        function encodeChunk(uint8, start, end) {\n            var tmp;\n            var output = [];\n            for (var i = start; i < end; i += 3) {\n                tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n                output.push(tripletToBase64(tmp));\n            }\n            return output.join(\"\");\n        }\n        function fromByteArray(uint8) {\n            var tmp;\n            var len = uint8.length;\n            var extraBytes = len % 3;\n            var output = \"\";\n            var parts = [];\n            var maxChunkLength = 16383;\n            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n                parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n            }\n            if (extraBytes === 1) {\n                tmp = uint8[len - 1];\n                output += lookup[tmp >> 2];\n                output += lookup[tmp << 4 & 63];\n                output += \"==\";\n            } else if (extraBytes === 2) {\n                tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n                output += lookup[tmp >> 10];\n                output += lookup[tmp >> 4 & 63];\n                output += lookup[tmp << 2 & 63];\n                output += \"=\";\n            }\n            parts.push(output);\n            return parts.join(\"\");\n        }\n    }, function(module, exports) {\n        exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n            var e, m;\n            var eLen = nBytes * 8 - mLen - 1;\n            var eMax = (1 << eLen) - 1;\n            var eBias = eMax >> 1;\n            var nBits = -7;\n            var i = isLE ? nBytes - 1 : 0;\n            var d = isLE ? -1 : 1;\n            var s = buffer[offset + i];\n            i += d;\n            e = s & (1 << -nBits) - 1;\n            s >>= -nBits;\n            nBits += eLen;\n            for (;nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n            m = e & (1 << -nBits) - 1;\n            e >>= -nBits;\n            nBits += mLen;\n            for (;nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n            if (e === 0) {\n                e = 1 - eBias;\n            } else if (e === eMax) {\n                return m ? NaN : (s ? -1 : 1) * Infinity;\n            } else {\n                m = m + Math.pow(2, mLen);\n                e = e - eBias;\n            }\n            return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n        };\n        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n            var e, m, c;\n            var eLen = nBytes * 8 - mLen - 1;\n            var eMax = (1 << eLen) - 1;\n            var eBias = eMax >> 1;\n            var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n            var i = isLE ? 0 : nBytes - 1;\n            var d = isLE ? 1 : -1;\n            var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n            value = Math.abs(value);\n            if (isNaN(value) || value === Infinity) {\n                m = isNaN(value) ? 1 : 0;\n                e = eMax;\n            } else {\n                e = Math.floor(Math.log(value) / Math.LN2);\n                if (value * (c = Math.pow(2, -e)) < 1) {\n                    e--;\n                    c *= 2;\n                }\n                if (e + eBias >= 1) {\n                    value += rt / c;\n                } else {\n                    value += rt * Math.pow(2, 1 - eBias);\n                }\n                if (value * c >= 2) {\n                    e++;\n                    c /= 2;\n                }\n                if (e + eBias >= eMax) {\n                    m = 0;\n                    e = eMax;\n                } else if (e + eBias >= 1) {\n                    m = (value * c - 1) * Math.pow(2, mLen);\n                    e = e + eBias;\n                } else {\n                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n                    e = 0;\n                }\n            }\n            for (;mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}\n            e = e << mLen | m;\n            eLen += mLen;\n            for (;eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}\n            buffer[offset + i - d] |= s * 128;\n        };\n    }, function(module, exports) {\n        var toString = {}.toString;\n        module.exports = Array.isArray || function(arr) {\n            return toString.call(arr) == \"[object Array]\";\n        };\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Plugin_1 = __webpack_require__(15);\n        var OrthographicCamera = THREE.OrthographicCamera;\n        var Chart_1 = __webpack_require__(19);\n        var Widget_1 = __webpack_require__(28);\n        var Utils_1 = __webpack_require__(16);\n        var AxisWidget_1 = __webpack_require__(29);\n        var GridWidget_1 = __webpack_require__(30);\n        var TrendsGradientWidget_1 = __webpack_require__(32);\n        var TrendsLineWidget_1 = __webpack_require__(34);\n        var TrendsCandleWidget_1 = __webpack_require__(35);\n        var deps_1 = __webpack_require__(17);\n        var Color_1 = __webpack_require__(31);\n        var ChartBlankView = function() {\n            function ChartBlankView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartBlankView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartBlankView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartBlankView.prototype.render = function() {\n                this.chart.render();\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartBlankView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartBlankView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartBlankView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartBlankView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartBlankView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartBlankView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.interpolatedViewport.onInterpolation(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartBlankView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartBlankView.prototype.setupCamera = function() {\n                var state = this.chart.state;\n                var camSettings = this.chart.viewport.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new OrthographicCamera(camSettings.x, camSettings.x + state.width, camSettings.y, camSettings.y + state.height);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, 0);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.interpolatedViewport.params);\n            };\n            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartBlankView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartBlankView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartBlankView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                this.chart.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n            ChartBlankView.preinstalledWidgets = [];\n            ChartBlankView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartBlankView;\n        }();\n        exports.ChartBlankView = ChartBlankView;\n        var ChartView = function(_super) {\n            __extends(ChartView, _super);\n            function ChartView() {\n                _super.apply(this, arguments);\n            }\n            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n            return ChartView;\n        }(ChartBlankView);\n        exports.ChartView = ChartView;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(18);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChangedHandler = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(17);\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deps_1.deepExtend({}, obj1, obj2);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.patch = function(objectToPatch, patch) {\n                var idKey = \"_id\";\n                for (var key in patch) {\n                    if (!patch.hasOwnProperty(key)) continue;\n                    if (objectToPatch[key]) {\n                        if (Array.isArray(patch[key])) {\n                            var _loop_1 = function(patchItem) {\n                                var subObject = objectToPatch[key].find(function(item) {\n                                    return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n                                });\n                                if (subObject) {\n                                    this_1.patch(subObject, patchItem);\n                                } else {\n                                    objectToPatch[key].push(patchItem);\n                                }\n                            };\n                            var this_1 = this;\n                            for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\n                                var patchItem = _a[_i];\n                                _loop_1(patchItem);\n                            }\n                            continue;\n                        } else if (typeof patch[key] === \"object\" && objectToPatch[key] != void 0) {\n                            if (patch[idKey] && Object.keys(patch).length == 1) {\n                                delete objectToPatch[key];\n                            } else {\n                                this.patch(objectToPatch[key], patch[key]);\n                            }\n                            continue;\n                        }\n                    }\n                    objectToPatch[key] = patch[key];\n                }\n                if (objectToPatch[\"_onUpdate\"]) objectToPatch[\"_onUpdate\"].call(objectToPatch, patch);\n                return objectToPatch;\n            };\n            Utils.travers = function(object, fn) {\n                for (var key in object) {\n                    if (!object.hasOwnProperty(key)) continue;\n                    var allowTraverseDeeper = fn(object[key]);\n                    var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == \"object\";\n                    if (canTraverseDeeper) this.travers(object[key], fn);\n                }\n            };\n            Utils.setIdsToArrayItems = function(sourceObject) {\n                var idKey = \"_id\";\n                Utils.travers(sourceObject, function(item) {\n                    if (!Array.isArray(item)) return true;\n                    var arr = item;\n                    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                        var obj = arr_1[_i];\n                        if (typeof obj !== \"object\" || Array.isArray(obj)) continue;\n                        if (!obj[idKey]) obj[idKey] = Utils.getUid();\n                    }\n                });\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn && fn(ctx, width, height);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createNearestTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.magFilter = THREE.NearestFilter;\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.binarySearchInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((hi - lo) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                    if (arr[lo][key] == num) {\n                        return lo;\n                    } else if (arr[hi][key] == num) {\n                        return hi;\n                    }\n                }\n                return arr[lo] && arr[lo][key] == num ? lo : -1;\n            };\n            Utils.binarySearch = function(arr, num, key) {\n                var ind = this.binarySearchInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else if (typeof srcObject[key] == \"function\") {\n                        dstObject[key] = srcObject[key];\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(17);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(20);\n        var EventEmmiter_1 = __webpack_require__(18);\n        var Utils_1 = __webpack_require__(16);\n        var TrendsManager_1 = __webpack_require__(22);\n        var Viewport_1 = __webpack_require__(23);\n        var InterpolatedViewport_1 = __webpack_require__(24);\n        var deps_1 = __webpack_require__(2);\n        var AnimationManager_1 = __webpack_require__(25);\n        var Easing_1 = __webpack_require__(26);\n        var interfaces_1 = __webpack_require__(27);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            VIEWPORT_CHANGE: \"viewportChange\",\n            DRAG_STATE_CHAGED: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: 250,\n                        scrollSpeed: 1e3,\n                        scrollEase: Easing_1.EASING.Quadratic.Out,\n                        zoomEase: Easing_1.EASING.Quadratic.Out,\n                        autoScrollSpeed: 1100,\n                        autoScrollEase: Easing_1.EASING.Linear.None\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280,\n                    inertialScroll: false\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.isDestroyed = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.patch(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.animationManager = new AnimationManager_1.AnimationManager();\n                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n                this.viewport = new Viewport_1.Viewport(this);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.interpolatedViewport = new InterpolatedViewport_1.InterpolatedViewport(this);\n                this.bindEvents();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n                this.isDestroyed = true;\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onDragStateChanged = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onViewportChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.render = function() {\n                this.animationManager.tick();\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                if (this.isDestroyed) {\n                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n                }\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                newState = Utils_1.Utils.deepMerge({}, newState);\n                Utils_1.Utils.setIdsToArrayItems(newState);\n                var currentStateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (currentStateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                this.state = Utils_1.Utils.patch(this.state, newState);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.patch({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.patch(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        Utils_1.Utils.patch(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        Utils_1.Utils.patch(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        Utils_1.Utils.patch(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        Utils_1.Utils.patch(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                Utils_1.Utils.patch(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\n                if (viewportChangeEventNeeded) this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = plugin.initialState;\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n                this.onDragStateChanged(function(dragState) {\n                    return _this.onDragStateChangedHandler(dragState);\n                });\n                this.ee.on(\"animationsChange\", function(animationOptions) {\n                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n                    }\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n                var state = this.state;\n                if (!state.autoScroll || state.cursor.dragMode) return;\n                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleXVal = this.viewport.getRightVal();\n                    var paddingRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n                    var marginRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.margin.end);\n                    var currentScroll = state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n                        return;\n                    }\n                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n                var state = this.state;\n                if (!state.inertialScroll || isDragMode) return;\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\n                    var minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.viewport.pxToValByXAxis(state.width) + this.viewport.pxToValByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime);\n                });\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var TrendSegmentsManager_1 = __webpack_require__(21);\n        var EventEmmiter_1 = __webpack_require__(18);\n        var deps_1 = __webpack_require__(2);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chart = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n                this.bindEvents();\n            }\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chart;\n                chartState.onDragStateChanged(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chart.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chart.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chart.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chart;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.viewport.getViewportYByVal(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(18);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(20);\n        var Utils_1 = __webpack_require__(16);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chart, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.unbindList = [];\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                }), this.chart.onZoom(function() {\n                    return _this.onZoomHandler();\n                }), this.chart.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }) ];\n            };\n            TrendSegmentsManager.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbind) {\n                    return unbind();\n                });\n            };\n            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.unbindEvents();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) {\n                            initialAnimationState = initialSegment.createAnimationState();\n                        }\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chart.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(20);\n        var EventEmmiter_1 = __webpack_require__(18);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var _this = this;\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                trend.segmentsManager.onRebuild(function() {\n                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                });\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports) {\n        \"use strict\";\n        var Viewport = function() {\n            function Viewport(chart) {\n                this.params = {};\n                this.chart = chart;\n                this.updateParams();\n                this.bindEvents();\n            }\n            Viewport.prototype.bindEvents = function() {\n                var _this = this;\n                this.chart.onChange(function() {\n                    return _this.updateParams();\n                });\n            };\n            Viewport.prototype.updateParams = function() {\n                var state = this.chart.state;\n                this.params.scrollXVal = state.xAxis.range.scroll;\n                this.params.scrollYVal = state.yAxis.range.scroll;\n                this.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\n                this.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\n                this.params.zoomX = state.xAxis.range.zoom;\n                this.params.zoomY = state.yAxis.range.zoom;\n            };\n            Viewport.prototype.getCameraSettings = function() {\n                var _a = this.chart.state, w = _a.width, h = _a.height;\n                return {\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Viewport.prototype.getWorldXByVal = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.params.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Viewport.prototype.getWorldYByVal = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.params.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Viewport.prototype.getWorldXByViewportX = function(viewportX) {\n                return this.getWorldXByVal(this.getValByViewportX(viewportX));\n            };\n            Viewport.prototype.getWorldYByViewportY = function(viewportY) {\n                return this.getWorldYByVal(this.getValByViewportY(viewportY));\n            };\n            Viewport.prototype.getValByWorldX = function(worldX) {\n                return this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\n            };\n            Viewport.prototype.getValByWorldY = function(worldY) {\n                return this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\n            };\n            Viewport.prototype.getValByViewportX = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\n            };\n            Viewport.prototype.getValByViewportY = function(y) {\n                return this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\n            };\n            Viewport.prototype.getViewportXByVal = function(xVal) {\n                return this.getWorldXByVal(xVal) - this.params.scrollX;\n            };\n            Viewport.prototype.getViewportYByVal = function(yVal) {\n                return this.getWorldYByVal(yVal) - this.params.scrollY;\n            };\n            Viewport.prototype.getViewportXByWorldX = function(worldX) {\n                return worldX - this.params.scrollX;\n            };\n            Viewport.prototype.valToPxByXAxis = function(val) {\n                return val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\n            };\n            Viewport.prototype.valToPxByYAxis = function(val) {\n                return val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\n            };\n            Viewport.prototype.pxToValByXAxis = function(pixelsCount) {\n                return pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\n            };\n            Viewport.prototype.pxToValByYAxis = function(pixelsCount) {\n                return pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\n            };\n            Viewport.prototype.getTop = function() {\n                return this.params.scrollY + this.chart.state.height;\n            };\n            Viewport.prototype.getRight = function() {\n                return this.params.scrollX + this.chart.state.width;\n            };\n            Viewport.prototype.getBottom = function() {\n                return this.params.scrollY;\n            };\n            Viewport.prototype.getLeft = function() {\n                return this.params.scrollX;\n            };\n            Viewport.prototype.getTopVal = function() {\n                return this.getValByWorldY(this.getTop());\n            };\n            Viewport.prototype.getRightVal = function() {\n                return this.getValByWorldX(this.getRight());\n            };\n            Viewport.prototype.getBottomVal = function() {\n                return this.getValByWorldY(this.getBottom());\n            };\n            Viewport.prototype.getLeftVal = function() {\n                return this.getValByWorldX(this.getLeft());\n            };\n            return Viewport;\n        }();\n        exports.Viewport = Viewport;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var EventEmmiter_1 = __webpack_require__(18);\n        var Viewport_1 = __webpack_require__(23);\n        (function(INTERPOLATION_EVENT) {\n            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n        })(exports.INTERPOLATION_EVENT || (exports.INTERPOLATION_EVENT = {}));\n        var INTERPOLATION_EVENT = exports.INTERPOLATION_EVENT;\n        var SCREEN_EVENTS = {\n            ZOOM_FRAME: \"zoomFrame\",\n            SCROLL_FRAME: \"scrollFrame\",\n            TRANSFORMATION_FRAME: \"transformationFrame\",\n            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n        };\n        var InterpolatedViewport = function(_super) {\n            __extends(InterpolatedViewport, _super);\n            function InterpolatedViewport(chart) {\n                _super.call(this, chart);\n                this.interpolationInProgress = false;\n                var _a = chart.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.setParams(chart.viewport.params);\n            }\n            InterpolatedViewport.prototype.onZoomInterpolation = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n            };\n            InterpolatedViewport.prototype.onScrollInterpolation = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n            };\n            InterpolatedViewport.prototype.onInterpolation = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n            };\n            InterpolatedViewport.prototype.onInterpolationEvent = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n            };\n            InterpolatedViewport.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n            };\n            InterpolatedViewport.prototype.setParams = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.params.scrollX = scrollX;\n                if (scrollY != void 0) this.params.scrollY = scrollY;\n                if (zoomX != void 0) this.params.zoomX = zoomX;\n                if (zoomY != void 0) this.params.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\n                    this.params.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\n                    this.params.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n                var interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\n                var interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\n                if (interpolationStarted) {\n                    this.interpolationInProgress = true;\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\n                }\n                if (interpolationFinished) {\n                    this.interpolationInProgress = false;\n                }\n                if (!this.interpolationInProgress) {\n                    this.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\n                    this.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\n                }\n                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n                if (interpolationFinished) {\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\n                }\n            };\n            InterpolatedViewport.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            InterpolatedViewport.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            InterpolatedViewport.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var chart = this.chart;\n                var isDragMode = chart.state.cursor.dragMode;\n                var animations = chart.state.animations;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                var range = chart.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                if (isDragMode && !chart.state.inertialScroll) time = 0;\n                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.params.scrollX).to(targetX).onTick(function(value) {\n                    _this.setParams({\n                        scrollX: value\n                    });\n                });\n            };\n            InterpolatedViewport.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var range = chart.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.scrollY).to(targetY).onTick(function(value) {\n                    _this.setParams({\n                        scrollY: value\n                    });\n                });\n            };\n            InterpolatedViewport.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var targetZoom = chart.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomX).to(targetZoom).onTick(function(value) {\n                    _this.setParams({\n                        zoomX: value\n                    });\n                });\n            };\n            InterpolatedViewport.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var targetZoom = chart.state.yAxis.range.zoom;\n                var animations = chart.state.animations;\n                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomY).to(targetZoom).onTick(function(value) {\n                    _this.setParams({\n                        zoomY: value\n                    });\n                });\n            };\n            return InterpolatedViewport;\n        }(Viewport_1.Viewport);\n        exports.InterpolatedViewport = InterpolatedViewport;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Easing_1 = __webpack_require__(26);\n        var AnimationManager = function() {\n            function AnimationManager() {\n                this.isAnimationsEnabled = true;\n                this.animations = [];\n                this.lastTickTime = Date.now();\n            }\n            AnimationManager.prototype.animate = function(time, timingFunction) {\n                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n                this.animations.push(animation);\n                return animation;\n            };\n            AnimationManager.prototype.animateObj = function(source, target) {};\n            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n                this.isAnimationsEnabled = isEnabled;\n            };\n            AnimationManager.prototype.tick = function() {\n                var now = Date.now();\n                var animations = this.animations;\n                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n                    var animation = animations[i_1];\n                    if (this.isAnimationsEnabled) {\n                        animation.tick(now);\n                    } else {\n                        animation.completeAndStop();\n                    }\n                }\n                var i = animations.length;\n                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n                this.lastTickTime = now;\n            };\n            AnimationManager.prototype.hasActiveAnimations = function() {\n                return this.animations.length > 0;\n            };\n            return AnimationManager;\n        }();\n        exports.AnimationManager = AnimationManager;\n        var Animation = function() {\n            function Animation(animationManager, time, createdTime, easing) {\n                if (easing === void 0) {\n                    easing = Easing_1.EASING.Quadratic.Out;\n                }\n                this.animationManager = animationManager;\n                this.time = time;\n                this.createdTime = createdTime;\n                this.easing = easing;\n                this.progress = 0;\n                this.delay = 0;\n                this.isFinished = false;\n                this.isStopped = false;\n                this.startTime = createdTime;\n            }\n            Animation.prototype.tick = function(now) {\n                if (!this.isStopped) {\n                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n                    this.setProgress(progress);\n                }\n            };\n            Animation.prototype.from = function(sourceObj) {\n                if (typeof sourceObj == \"object\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = {};\n                    var sourceIteralable = sourceObj;\n                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n                        this.initialObj[key] = sourceIteralable[key];\n                    }\n                } else if (typeof sourceObj == \"number\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = sourceObj;\n                }\n                return this;\n            };\n            Animation.prototype.to = function(targetObj) {\n                this.targetObject = targetObj;\n                if (typeof this.initialObj == \"object\") {\n                    var initialIteralable = this.initialObj;\n                    for (var key in this.targetObject) {\n                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                    var targetIteralable = this.targetObject;\n                    for (var key in initialIteralable) {\n                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                }\n                return this;\n            };\n            Animation.prototype.onTick = function(onTickCb) {\n                this.onTickCb = onTickCb;\n                return this;\n            };\n            Animation.prototype.then = function(onFinishCb) {\n                this.onFinishCb = onFinishCb;\n                return this;\n            };\n            Animation.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Animation.prototype.completeAndStop = function() {\n                this.setProgress(1);\n            };\n            Animation.prototype.withDelay = function(delay) {\n                this.delay = delay;\n                this.startTime = this.createdTime + delay;\n                return this;\n            };\n            Animation.prototype.setProgress = function(progress) {\n                if (progress < 0) return;\n                progress = Math.min(progress, 1);\n                this.progress = progress;\n                var k = this.easing(progress);\n                if (typeof this.sourceObj == \"number\") {\n                    var initialVal = this.initialObj;\n                    var targetVal = this.targetObject;\n                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n                } else if (this.sourceObj && this.targetObject) {\n                    for (var key in this.initialObj) {\n                        var initialVal = this.initialObj[key];\n                        var targetVal = this.targetObject[key];\n                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n                    }\n                }\n                if (progress == 1) {\n                    this.isStopped = true;\n                    this.isFinished = true;\n                }\n                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n            };\n            return Animation;\n        }();\n        exports.Animation = Animation;\n    }, function(module, exports) {\n        \"use strict\";\n        exports.EASING = {\n            Linear: {\n                None: function(k) {\n                    return k;\n                }\n            },\n            Quadratic: {\n                In: function(k) {\n                    return k * k;\n                },\n                Out: function(k) {\n                    return k * (2 - k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k;\n                    }\n                    return -.5 * (--k * (k - 2) - 1);\n                }\n            },\n            Cubic: {\n                In: function(k) {\n                    return k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k + 2);\n                }\n            },\n            Quartic: {\n                In: function(k) {\n                    return k * k * k * k;\n                },\n                Out: function(k) {\n                    return 1 - --k * k * k * k;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k;\n                    }\n                    return -.5 * ((k -= 2) * k * k * k - 2);\n                }\n            },\n            Quintic: {\n                In: function(k) {\n                    return k * k * k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k * k * k + 2);\n                }\n            },\n            Sinusoidal: {\n                In: function(k) {\n                    return 1 - Math.cos(k * Math.PI / 2);\n                },\n                Out: function(k) {\n                    return Math.sin(k * Math.PI / 2);\n                },\n                InOut: function(k) {\n                    return .5 * (1 - Math.cos(Math.PI * k));\n                }\n            },\n            Exponential: {\n                In: function(k) {\n                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n                },\n                Out: function(k) {\n                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    if ((k *= 2) < 1) {\n                        return .5 * Math.pow(1024, k - 1);\n                    }\n                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n                }\n            },\n            Circular: {\n                In: function(k) {\n                    return 1 - Math.sqrt(1 - k * k);\n                },\n                Out: function(k) {\n                    return Math.sqrt(1 - --k * k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n                    }\n                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n                }\n            },\n            Elastic: {\n                In: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                },\n                Out: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    k *= 2;\n                    if (k < 1) {\n                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                    }\n                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n                }\n            },\n            Back: {\n                In: function(k) {\n                    var s = 1.70158;\n                    return k * k * ((s + 1) * k - s);\n                },\n                Out: function(k) {\n                    var s = 1.70158;\n                    return --k * k * ((s + 1) * k + s) + 1;\n                },\n                InOut: function(k) {\n                    var s = 1.70158 * 1.525;\n                    if ((k *= 2) < 1) {\n                        return .5 * (k * k * ((s + 1) * k - s));\n                    }\n                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n                }\n            },\n            Bounce: {\n                In: function(k) {\n                    return 1 - exports.EASING.Bounce.Out(1 - k);\n                },\n                Out: function(k) {\n                    if (k < 1 / 2.75) {\n                        return 7.5625 * k * k;\n                    } else if (k < 2 / 2.75) {\n                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n                    } else if (k < 2.5 / 2.75) {\n                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n                    } else {\n                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n                    }\n                },\n                InOut: function(k) {\n                    if (k < .5) {\n                        return exports.EASING.Bounce.In(k * 2) * .5;\n                    }\n                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n                }\n            }\n        };\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(28);\n        var GridWidget_1 = __webpack_require__(30);\n        var Utils_1 = __webpack_require__(16);\n        var interfaces_1 = __webpack_require__(27);\n        var Color_1 = __webpack_require__(31);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.interpolatedViewport.params.scrollX, this.chart.interpolatedViewport.params.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.interpolatedViewport.onInterpolation(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.interpolatedViewport.onZoomInterpolation(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.Color(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.interpolatedViewport.params, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(28);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(16);\n        var Color_1 = __webpack_require__(31);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chart = this.chart;\n                var localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var Color = function() {\n            function Color(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            Color.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            Color.numberToHexStr = function(value) {\n                var result = value.toString(16);\n                return \"#\" + \"0\".repeat(6 - result.length) + result;\n            };\n            Color.prototype.set = function(color) {\n                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n                var colorStr = color;\n                var rgba = Color.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = Color.numberToHexStr(this.value);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            Color.prototype.getTransparent = function(opacity) {\n                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n            };\n            return Color;\n        }();\n        exports.Color = Color;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(16);\n        var TrendsWidget_1 = __webpack_require__(33);\n        var Color_1 = __webpack_require__(31);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i < segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.viewport.pxToValByYAxis(this.chart.state.height), this.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(28);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(33);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(20);\n        var Utils_1 = __webpack_require__(16);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(33);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(20);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(18);\n        var UniqCollectionItem = function() {\n            function UniqCollectionItem() {}\n            UniqCollectionItem.prototype.getId = function() {\n                return this._id;\n            };\n            return UniqCollectionItem;\n        }();\n        exports.UniqCollectionItem = UniqCollectionItem;\n        var ID_KEY = \"_id\";\n        var EVENTS = {\n            CREATE: \"create\",\n            UPDATE: \"update\",\n            REMOVE: \"remove\"\n        };\n        var UniqCollection = function() {\n            function UniqCollection(options) {\n                this.items = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n            }\n            UniqCollection.prototype.patch = function(models) {\n                var options = this.options;\n                for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n                    var model = models_1[_i];\n                    var id = model[ID_KEY];\n                    if (!id) Utils_1.Utils.error(\"Collection item without id detected\");\n                    var ind = this.getItemInd(id);\n                    var item = this.items[ind];\n                    var justCreated = false;\n                    if (!item) {\n                        justCreated = true;\n                        item = options.createInstance(model);\n                        this.items.push(item);\n                    }\n                    if (Object.keys(model).length > 1) {\n                        var prevProps = {};\n                        Utils_1.Utils.copyProps(item, prevProps, model);\n                        Utils_1.Utils.patch(item, model);\n                        justCreated && this.ee.emit(EVENTS.CREATE, item);\n                        this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\n                    } else {\n                        this.items.splice(ind, 1);\n                        this.ee.emit(EVENTS.REMOVE, item);\n                    }\n                }\n            };\n            UniqCollection.prototype.getItem = function(id) {\n                return this.items[this.getItemInd(id)];\n            };\n            UniqCollection.prototype.getLast = function() {\n                return this.items[this.items.length - 1];\n            };\n            UniqCollection.prototype.forEach = function(cb) {\n                for (var key in this.items) cb(this.items[key]);\n            };\n            UniqCollection.prototype.filter = function(cb) {\n                var result = [];\n                this.forEach(function(item) {\n                    return cb(item) && result.push(item);\n                });\n                return result;\n            };\n            UniqCollection.prototype.onCreate = function(cb) {\n                return this.ee.subscribe(EVENTS.CREATE, cb);\n            };\n            UniqCollection.prototype.onUpdate = function(cb) {\n                return this.ee.subscribe(EVENTS.UPDATE, cb);\n            };\n            UniqCollection.prototype.onRemove = function(cb) {\n                return this.ee.subscribe(EVENTS.REMOVE, cb);\n            };\n            UniqCollection.prototype.getItemInd = function(id) {\n                return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\n            };\n            return UniqCollection;\n        }();\n        exports.UniqCollection = UniqCollection;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(29));\n        __export(__webpack_require__(30));\n        __export(__webpack_require__(33));\n        __export(__webpack_require__(34));\n        __export(__webpack_require__(32));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 39\n ** module chunks = 1\n **/","export * from './TrendsMarksPlugin';\nexport * from './TrendsMarksWidget';\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/index.ts\n **/","\nimport Vector3 = THREE.Vector3;\nimport { ChartPlugin, ChartWidget, TrendSegment, TREND_TYPE, Utils, Chart, TColor, TEase } from 'three-charts';\nimport { TrendsMarksWidget, DEFAULT_RENDERER, TrendMarkWidget } from './TrendsMarksWidget';\nimport { EASING } from \"../../../src/Easing\";\n\nexport enum TREND_MARK_SIDE {TOP, BOTTOM}\nexport enum EVENTS {CHANGE}\nexport enum TEXTURE_FILTER {AUTO, LINEAR, NEAREST}\nexport type TTrendsMarksPluginOptions = {items: ITrendMarkOptions[]};\n\nexport interface ITrendMarkOptions {\n\ttrendName: string,\n\txVal: number,\n\ttitle?: string,\n\tname?: string,\n\tcolor?: TColor,\n\torientation?: TREND_MARK_SIDE,\n\twidth?: number,\n\theight?: number,\n\ttextureFilter?: TEXTURE_FILTER\n\t/**\n\t * space between marks\n\t */\n\tmargin?: number,\n\t/**\n\t * custom render function\n\t */\n\tonRender?: (\n\t\ttrendMarkWidget: TrendMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\tchart: Chart\n\t) => any,\n\tease?: TEase,\n\teaseSpeed?: number,\n\tuserData?: any\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: ITrendMarkOptions = {\n\ttrendName: '',\n\ttitle: '',\n\tcolor: 'rgba(#0099d9, 0.5)',\n\txVal: 0,\n\torientation: TREND_MARK_SIDE.TOP,\n\twidth: 105,\n\theight: 100,\n\tmargin: 10,\n\tease: EASING.Elastic.Out,\n\teaseSpeed: 1000,\n\ttextureFilter: TEXTURE_FILTER.AUTO,\n\tonRender: DEFAULT_RENDERER\n};\n\n\nexport class TrendsMarksPlugin extends ChartPlugin<TTrendsMarksPluginOptions> {\n\tstatic NAME = 'TrendsMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [TrendsMarksWidget];\n\n\tprivate items: {[name: string]: TrendMark} = {};\n\tprivate rects: {[name: string]: number[]} = {};\n\n\tconstructor(trendsMarksPluginOptions: TTrendsMarksPluginOptions) {\n\t\tsuper(trendsMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t\tthis.bindEvents();\n\t}\n\n\n\tprotected onStateChangedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n\tcreateMark(options: ITrendMarkOptions) {\n\t\tvar marksOptions = this.getOptions().items;\n\t\tvar newMarkOptions = marksOptions.concat([options]);\n\t\tthis.chart.setState({pluginsState: {[this.name]: {items: newMarkOptions}}});\n\t}\n\n\tonChange(cb: () => any) {\n\t\treturn this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.trendsManager.onSegmentsRebuilded(() => {\n\t\t\tthis.updateMarksSegments()\n\t\t});\n\t\tthis.chart.interpolatedViewport.onZoomInterpolation(() => this.calclulateMarksPositions());\n\t}\n\n\tprivate onMarksChangeHandler() {\n\t\tvar trendsMarksOptions = this.getOptions().items;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let options of trendsMarksOptions) {\n\t\t\tvar marks = this.items;\n\n\t\t\t// set mark name\n\t\t\tif (!options.name) {\n\t\t\t\toptions.name = Utils.getUid().toString();\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t} else if (marks[options.name]) {\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\n\t\t\tlet mark = new TrendMark(this.chart, options);\n\t\t\tmarks[options.name] = mark;\n\t\t}\n\n\t\t// delete not relevant marks\n\t\tfor (let markName in this.items) {\n\t\t\tif (actualMarksNames.indexOf(markName) != -1) continue;\n\t\t\tdelete this.items[markName];\n\t\t}\n\t\tthis.updateMarksSegments();\n\t}\n\n\n\tprivate calclulateMarksPositions() {\n\t\tthis.rects = {};\n\t\tfor (let markName in this.items) {\n\t\t\tthis.createMarkRect(this.items[markName]);\n\t\t}\n\t}\n\n\tprivate createMarkRect(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\n\t\tlet chart = this.chart;\n\t\tlet options = mark.options;\n\t\tlet {width, height, name} = options;\n\t\tlet left = chart.viewport.getWorldXByVal(mark.xVal) - width / 2;\n\t\tlet top = chart.viewport.getWorldYByVal(mark.yVal);\n\t\tlet isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t\tlet newOffset: number;\n\t\tlet row = 0;\n\n\t\tif (isTopSideMark) {\n\t\t\ttop += height;\n\t\t}\n\n\t\tlet markRect = [left, top, width, height];\n\t\tlet hasIntersection = false;\n\t\tdo {\n\t\t\tfor (let markName in this.rects) {\n\t\t\t\tlet rect = this.rects[markName];\n\t\t\t\thasIntersection = Utils.rectsIntersect(rect, markRect);\n\t\t\t\tif (!hasIntersection) continue;\n\t\t\t\tif (isTopSideMark) {\n\t\t\t\t\tmarkRect[1] = rect[1] + markRect[3] + options.margin;\n\t\t\t\t} else {\n\t\t\t\t\tmarkRect[1] = rect[1] - rect[3] - options.margin;\n\t\t\t\t}\n\t\t\t\trow++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (hasIntersection);\n\n\t\tif (isTopSideMark) {\n\t\t\tnewOffset = markRect[1] - markRect[3] - chart.viewport.getWorldYByVal(mark.yVal);\n\t\t} else {\n\t\t\tnewOffset = chart.viewport.getWorldYByVal(mark.yVal) - markRect[1];\n\t\t}\n\n\t\tmark._setOffset(newOffset);\n\t\tmark._setRow(row);\n\t\tthis.rects[name] = markRect;\n\t}\n\n\tprivate updateMarksSegments() {\n\t\tlet chart = this.chart;\n\t\tlet trends = chart.trendsManager.trends;\n\t\tfor (let trendName in trends) {\n\t\t\tvar marks = this.getTrendMarks(trendName);\n\t\t\tvar marksArr: TrendMark[] = [];\n\t\t\tvar xVals: number[] = [];\n\t\t\tfor (let markName in marks) {\n\t\t\t\tlet mark = marks[markName];\n\t\t\t\txVals.push(mark.options.xVal);\n\t\t\t\tmarksArr.push(mark);\n\t\t\t\tmark._setSegment(null);\n\t\t\t}\n\t\t\tmarksArr.sort((a, b) => a.options.xVal - b.options.xVal);\n\t\t\tlet trend = chart.getTrend(trendName);\n\t\t\tlet points = trend.segmentsManager.getSegmentsForXValues(xVals.sort((a, b) => a - b));\n\t\t\tfor (let markInd = 0; markInd < marksArr.length; markInd++) {\n\t\t\t\tmarksArr[markInd]._setSegment(points[markInd]);\n\t\t\t}\n\t\t}\n\t\tthis.calclulateMarksPositions();\n\t\tthis.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t}\n\n\tprivate getTrendMarks(trendName: string): TrendMark[] {\n\t\tlet trendMarks: TrendMark[] = [];\n\t\tfor (let markName in this.items) {\n\t\t\tif (this.items[markName].options.trendName != trendName) continue;\n\t\t\ttrendMarks.push(this.items[markName]);\n\t\t}\n\t\treturn trendMarks;\n\t}\n\n}\n\nexport class TrendMark {\n\toptions: ITrendMarkOptions;\n\tsegment: TrendSegment;\n\txVal: number;\n\tyVal: number;\n\toffset: number;\n\trow = 0;\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart, options: ITrendMarkOptions) {\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t}\n\n\n\t/**\n\t * only for internal usage\n\t */\n\t_setSegment(segment: TrendSegment) {\n\t\tthis.segment = segment;\n\t\tif (!segment) return;\n\n\t\tlet trend = this.chart.getTrend(this.options.trendName);\n\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tthis.xVal = segment.endXVal;\n\t\t\tthis.yVal = segment.endYVal;\n\t\t} else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.maxYVal;\n\t\t} else {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.minYVal;\n\t\t}\n\t}\n\n\t_setOffset(offset: number) {\n\t\tthis.offset = offset;\n\t}\n\n\t_setRow(row: number) {\n\t\tthis.row = row;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts\n **/","import {Chart, Utils, TrendsWidget, TrendWidget, INTERPOLATION_EVENT, Color } from 'three-charts';\nimport { TrendMark, TREND_MARK_SIDE, TrendsMarksPlugin, TEXTURE_FILTER } from \"./TrendsMarksPlugin\";\nimport Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport LineSegments = THREE.LineSegments;\nimport LineDashedMaterial = THREE.LineDashedMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport LinearFilter = THREE.LinearFilter;\nimport NearestFilter = THREE.NearestFilter;\n\n\n/**\n * widget for drawing trends marks for all trends\n */\nexport class TrendsMarksWidget extends TrendsWidget<TrendMarksWidget> {\n\tstatic widgetName = \"TrendsMarks\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendMarksWidget;\n\t}\n}\n\n/**\n * widget for drawing trend marks for one trend\n */\nexport class TrendMarksWidget extends TrendWidget {\n\n\tprivate object3D: Object3D;\n\tprivate marksWidgets: {[name: string]: TrendMarkWidget} = {};\n\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.object3D = new Object3D();\n\t\tthis.onMarksChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\t\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.getTrendsMarksPlugin().onChange(() => this.onMarksChange()));\n\t\tthis.bindEvent(\n\t\t\tthis.chart.interpolatedViewport.onInterpolationEvent((event) => this.onViewportInterpolationEvent(event))\n\t\t);\n\t}\n\n\tprivate getTrendsMarksPlugin(): TrendsMarksPlugin {\n\t\treturn this.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t}\n\n\tprivate onMarksChange() {\n\t\tlet marksItems = this.getTrendsMarksPlugin().getItems();\n\t\tlet widgets = this.marksWidgets;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let markName in marksItems) {\n\t\t\tactualMarksNames.push(markName);\n\t\t\tif (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t\t}\n\t\tfor (let markName in this.marksWidgets) {\n\t\t\tif (actualMarksNames.indexOf(markName) !== -1) continue;\n\t\t\tthis.destroyMarkWidget(markName);\n\t\t}\n\n\t}\n\t\n\tprivate createMarkWidget(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\t\tlet markWidget = new TrendMarkWidget(this.chart, mark);\n\t\tthis.marksWidgets[mark.options.name] = markWidget;\n\t\tthis.object3D.add(markWidget.getObject3D());\n\t}\n\n\tprivate destroyMarkWidget(markName: string) {\n\t\tthis.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t\tdelete this.marksWidgets[markName];\n\t}\n\n\tprivate onViewportInterpolationEvent(event: INTERPOLATION_EVENT) {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onScreenTransformationEventHandler(event);\n\t\t}\n\t}\n\n\tprotected onZoomFrame() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onZoomFrameHandler();\n\t\t}\n\t}\n\n\tprotected onSegmentsAnimate() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onSegmentsAnimate();\n\t\t}\n\t}\n\n}\n\n/**\n * widget for drawing one trend mark\n */\nexport class TrendMarkWidget {\n\tmark: TrendMark;\n\tprivate chart: Chart;\n\tprivate markMesh: Mesh;\n\n\tconstructor(chart: Chart, trendMark: TrendMark) {\n\t\tthis.chart = chart;\n\t\tthis.mark = trendMark;\n\t\tthis.initObject();\n\t\tthis.show();\n\t}\n\t\n\tprotected initObject() {\n\t\tlet options = this.mark.options;\n\t\tlet {width, height} = options;\n\n\t\tlet texture = Utils.createNearestTexture(width, height, (ctx) => {\n\t\t\toptions.onRender(this, ctx, this.chart);\n\t\t});\n\n\t\t// make text sharp when interpolatedViewport is not transforming\n\t\tswitch (options.textureFilter) {\n\t\t\tcase TEXTURE_FILTER.AUTO:\n\t\t\t\ttexture.magFilter = this.chart.interpolatedViewport.interpolationInProgress ? LinearFilter : NearestFilter;\n\t\t\t\tbreak;\n\t\t\tcase TEXTURE_FILTER.LINEAR:\n\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\tbreak;\n\t\t\tcase TEXTURE_FILTER.NEAREST:\n\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\tbreak;\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tthis.markMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(width, height),\n\t\t\tmaterial\n\t\t);\n\n\n\t}\n\n\tgetObject3D() {\n\t\treturn this.markMesh;\n\t}\n\n\tonSegmentsAnimate() {\n\t\tthis.updatePosition();\n\t}\n\n\tonZoomFrameHandler() {\n\t\tthis.updatePosition();\n\t}\n\n\tonScreenTransformationEventHandler(event: INTERPOLATION_EVENT) {\n\t\tlet texture = (this.markMesh.material as MeshBasicMaterial).map;\n\n\t\t// make text sharp when interpolatedViewport is not transforming\n\t\tif (this.mark.options.textureFilter !== TEXTURE_FILTER.AUTO) return;\n\t\ttexture.magFilter = (event == INTERPOLATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.mark.segment) return;\n\t\tlet mark = this.mark;\n\t\tlet viewport = this.chart.interpolatedViewport;\n\n\t\tlet posX = viewport.getWorldXByVal(mark.xVal);\n\t\tlet posY = viewport.getWorldYByVal(mark.yVal);\n\n\t\tthis.markMesh.position.set(posX, posY, 0);\n\t}\n\n\tprivate show() {\n\t\tif (!this.mark.segment) return;\n\t\tthis.updatePosition();\n\t\tthis.markMesh.scale.set(0.01, 0.01, 1);\n\n\t\tthis.chart.animationManager\n\t\t\t.animate(1000, this.mark.options.ease)\n\t\t\t.from(this.markMesh.scale as Object)\n\t\t\t.to({x: 1, y: 1});\n\t}\n}\n\nexport const DEFAULT_RENDERER = (\n\ttrendMarkWidget: TrendMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\tchart: Chart\n) =>  {\n\n\tlet mark = trendMarkWidget.mark;\n\tlet options = mark.options;\n\tlet isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\n\tlet color = options.color !== void 0 ?\n\t\tnew Color(options.color) :\n\t\tnew Color(chart.getTrend(options.trendName).getOptions().lineColor);\n\tlet rgbaColor = color.getTransparent(0.5).rgbaStr;\n\tlet {width, height} = options;\n\tlet centerX = Math.round(width / 2);\n\tlet centerY =  Math.round(height / 2);\n\tlet font = chart.state.font.m;\n\tlet textOffset = parseInt(font);\n\tlet textPosX = centerX;\n\tlet textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\n\n\t// draw rect\n\tctx.fillStyle = rgbaColor;\n\tctx.strokeStyle = rgbaColor;\n\tctx.fillRect(\n\t\t0,\n\t\tisTopSide ? 0 : height,\n\t\twidth,\n\t\tisTopSide ? textOffset * 2 : -textOffset * 2\n\t);\n\n\t// draw dot\n\tctx.beginPath();\n\tctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\n\tctx.fill();\n\n\t// draw line\n\tlet lineEndY = textPosY ;\n\tctx.beginPath();\n\tctx.moveTo(centerX, centerY);\n\tctx.lineTo(centerX, lineEndY);\n\tctx.stroke();\n\n\t// draw text\n\tctx.beginPath();\n\tctx.textAlign = 'center';\n\tctx.font = font;\n\tctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\n\tctx.fillText(\n\t\toptions.title,\n\t\tMath.round(textPosX),\n\t\tMath.round(textPosY)\n\t);\n\n\n\n\t// uncomment to preview mark rect\n\t// ctx.rect(0, 0, width, height);\n\t// ctx.stroke();\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts\n **/","export * from './TrendsBeaconWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\n\nimport {\n\tUtils,\n\tChart,\n\tTrendsWidget,\n\tTrendWidget,\n\tTrendSegment,\n\tTrendSegmentsManager,\n\tITrendOptions,\n\tAnimation,\n\tTREND_TYPE\n} from 'three-charts';\n\nconst ANIMATION_TIME = 1000;\nconst ANIMATION_DELAY = 300;\n\n/**\n * widget adds blinking beacon on trends end\n * activated when trend.hasBeacon = true\n */\nexport class TrendsBeaconWidget extends TrendsWidget<TrendBeacon> {\n\tstatic widgetName = 'TrendsBeacon';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendBeacon;\n\t}\n}\n\nexport class TrendBeacon extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animated: boolean;\n\tprivate segment: TrendSegment;\n\tprivate animation: Animation<any>;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\tthis.updatePosition();\n\t\tthis.animate();\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.chart.onScroll(() => this.updatePosition()));\n\t}\n\n\tprivate initObject() {\n\n\t\t// add beacon\n\t\tlet light = this.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture(), transparent: true})\n\t\t);\n\n\t\tthis.setInitialState();\n\n\t\t// add dot\n\t\tlight.add(new Mesh(\n\t\t\tnew PlaneBufferGeometry(5, 5),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture()})\n\t\t));\n\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t}\n\n\tprivate animate() {\n\t\tif (!this.chart.state.animations.enabled) return;\n\n\t\tif (this.animation) this.animation.stop();\n\t\tthis.setInitialState();\n\n\t\tlet mesh = this.mesh;\n\t\tlet animationObject = {\n\t\t\tscale: mesh.scale.x,\n\t\t\topacity: mesh.material.opacity\n\t\t};\n\n\t\tthis.animation = this.chart.animationManager\n\t\t\t.animate(ANIMATION_TIME)\n\t\t\t.withDelay(ANIMATION_DELAY)\n\t\t\t.from(animationObject)\n\t\t\t.to({scale: 1, opacity: 0})\n\t\t\t.onTick(animationObject => {\n\t\t\t\tmesh.scale.set(animationObject.scale, animationObject.scale, 1);\n\t\t\t\tmesh.material.opacity = animationObject.opacity\n\t\t\t}).then(() => {\n\t\t\t\tthis.setInitialState();\n\t\t\t});\n\t}\n\n\tprivate setInitialState() {\n\t\tthis.mesh.scale.set(0.2, 0.2, 1);\n\t\tthis.mesh.material.opacity = 1;\n\t}\n\n\tonDestroy() {\n\t\tsuper.onDestroy();\n\t\tif (this.animation) this.animation.stop();\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 32, w = 32;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.fill();\n\t\t});\n\t}\n\n\tprotected onTransformationFrame() {\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(trendsSegments: TrendSegmentsManager) {\n\t\tthis.segment = trendsSegments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tvar chart = this.chart;\n\t\tvar xVal: number, yVal: number;\n\t\tvar currentAnimationState = this.segment.currentAnimationState;\n\t\tif (this.trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\txVal = currentAnimationState.endXVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t} else {\n\t\t\txVal = currentAnimationState.xVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t}\n\t\tlet viewport = chart.interpolatedViewport;\n\t\tlet x = viewport.getWorldXByVal(xVal);\n\t\tlet y = viewport.getWorldYByVal(yVal);\n\t\tlet screenWidth = chart.state.width;\n\t\tlet screenX = viewport.getViewportXByWorldX(x);\n\t\tif (screenX < 0) {\n\t\t\tx = viewport.getLeft();\n\t\t}\n\t\tif (screenX > screenWidth) x = viewport.getRight();\n\t\tthis.mesh.position.set(x, y, 0.1);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts\n **/","export * from './TrendsLoadingWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport { TrendWidget, TrendsWidget, ITrendOptions, TREND_TYPE, Chart, Utils } from 'three-charts';\n\n/**\n * widget adds loading indicator\n * activated when animations enabled\n */\nexport class TrendsLoadingWidget extends TrendsWidget<TrendLoading> {\n\tstatic widgetName = 'TrendsLoading';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLoading;\n\t}\n}\n\nexport class TrendLoading extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animation: TweenLite;\n\tprivate isActive = false;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chart: Chart) {\n\t\treturn trendOptions.enabled && chart.state.animations.enabled;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\t// add beacon\n\t\tthis.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendLoading.createTexture(), transparent: true})\n\t\t);\n\t\tthis.deactivate();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tbindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.onPrependRequest(() => this.activate()));\n\t}\n\n\tprependData() {\n\t\tthis.deactivate();\n\t}\n\n\tprivate activate() {\n\t\tvar mesh = this.mesh;\n\t\tmesh.material.opacity = 1;\n\t\tmesh.rotation.z = 0;\n\t\tvar animation = TweenLite.to(this.mesh.rotation, 0.5, {z: Math.PI * 2});\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimation.restart();\n\t\t});\n\t\tthis.animation = animation;\n\t\tthis.isActive = true;\n\t\tthis.updatePosition();\n\t}\n\n\tprivate deactivate() {\n\t\tthis.animation && this.animation.kill();\n\t\tthis.mesh.material.opacity = 0;\n\t\tthis.isActive = false;\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 64, w = 64;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t\tctx.lineWidth = 5;\n\t\t\tvar center = h / 2;\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(center, center, 22, 0, Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 3, 0, Math.PI * 2);\n\t\t\tctx.stroke();\n\t\t});\n\t}\n\n\tprotected onZoomFrame() {\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.isActive) return;\n\t\tlet trend = this.trend;\n\t\t// set new widget position\n\t\tlet segment = trend.segmentsManager.getStartSegment();\n\t\tlet x: number, y: number;\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tx = segment.currentAnimationState.startXVal;\n\t\t\ty = segment.currentAnimationState.startYVal;\n\t\t} else {\n\t\t\tx = segment.currentAnimationState.xVal - segment.maxLength;\n\t\t\ty = segment.currentAnimationState.yVal\n\t\t}\n\t\tlet viewport = this.chart.interpolatedViewport;\n\t\tthis.mesh.position.set(viewport.getWorldXByVal(x), viewport.getWorldYByVal(y), 0);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts\n **/","export * from './TrendsIndicatorWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport {\n\tTrendSegmentsManager,\n\tTrendSegment,\n\tColor,\n\tChart,\n\tUtils,\n\tTrendWidget,\n\tTrendsWidget,\n\tITrendOptions\n} from \"three-charts\";\n\nconst CANVAS_WIDTH = 150;\nconst CANVAS_HEIGHT = 64;\nconst OFFSET_X = 15;\n\nexport class TrendsIndicatorWidget extends TrendsWidget<TrendIndicator> {\n\tstatic widgetName = 'TrendsIndicator';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendIndicator;\n\t}\n}\n\nexport class TrendIndicator extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate segment: TrendSegment;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasIndicator;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.initObject();\n\t\tthis.onTrendChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\t// update canvas value\n\t\tlet trendData = this.trend.getData();\n\t\tvar lastItem = trendData[trendData.length - 1];\n\t\tvar texture = (this.mesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\t// uncomment to preview indicator rect\n\t\t// ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t\t// ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\tctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate initObject() {\n\t\tvar color = new Color(this.trend.getOptions().lineColor);\n\t\tvar texture = Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, (ctx) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.font = this.chart.state.font.l;\n\t\t\tctx.fillStyle = color.rgbaStr;\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t});\n\n\t\tvar material = new THREE.MeshBasicMaterial({map: texture, side: THREE.FrontSide});\n\t\tmaterial.transparent = true;\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT),\n\t\t\tmaterial\n\t\t);\n\t}\n\n\tprotected onTransformationFrame() {\n\t\t// set new widget position\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t\t// set new widget position\n\t\tthis.segment = segments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tlet\tchart = this.chart;\n\t\tlet {endXVal: segmentEndXVal, endYVal: segmentEndYVal} = this.segment.currentAnimationState;\n\t\tlet viewport = chart.interpolatedViewport;\n\t\tlet screenWidth = chart.state.width;\n\n\t\tlet x = viewport.getWorldXByVal(segmentEndXVal) + OFFSET_X;\n\t\tlet y = viewport.getWorldYByVal(segmentEndYVal);\n\n\t\tlet screenX = viewport.getViewportXByWorldX(x);\n\t\tlet indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t\tif (indicatorIsOutOfScreen) {\n\t\t\tif (screenX < 0) x = viewport.getLeft() + 20;\n\t\t\tif (screenX > screenWidth) x = viewport.getRight() - CANVAS_WIDTH / 2 - 10;\n\t\t\ty -= 25;\n\t\t}\n\t\tthis.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\n\t}\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts\n **/","\nimport {\n\tChartPlugin, ChartWidget, AXIS_TYPE, Utils, Chart, TColor, IChartState, UniqCollection,\n\tUniqCollectionItem, IIteralable, TEase, EASING\n} from 'three-charts';\nimport { AxisMarksWidget, AxisMarkWidget } from './AxisMarksWidget';\n\nexport declare type TAxisMarksPluginOptions = IAxisMarkOptions[];\n\nexport interface IAxisMarkOptions {\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\taxisType?: AXIS_TYPE;\n\tlineColor?: TColor;\n\ttextColor?: TColor;\n\tlineWidth?: number;\n\twidth?: number;\n\tstickToEdges?: boolean;\n\tvalue?: number;\n\tdisplayedValue?: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData?: any;\n\tneedRender?: (axisMarkWidget: AxisMarkWidget, chart: Chart, changedProps?: IChartState) => boolean,\n\tease?: TEase;\n\teaseSpeed?: number;\n\topacity?: number;\n\trenderer?: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: IAxisMarkOptions = {\n\tlineWidth: 3,\n\twidth: 200,\n\tvalue: 0,\n\tstickToEdges: false,\n\ttextColor: 'rgba(#45a9e1, 0.8)',\n\tlineColor: 'rgba(#45a9e1, 0.6)',\n\ttitle: '',\n\tease: EASING.Quadratic.Out,\n\teaseSpeed: 500,\n\topacity: 1\n};\n\nexport class AxisMark extends UniqCollectionItem implements IAxisMarkOptions {\n\tname: string;\n\ttitle: string;\n\tdescription: string;\n\taxisType: AXIS_TYPE;\n\ttextColor?: TColor;\n\tlineColor?: TColor;\n\tlineWidth: number;\n\twidth: number;\n\tstickToEdges: boolean;\n\tvalue: number;\n\topacity: number;\n\tdisplayedValue: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData: any;\n\tneedRender: (axisMarkWidget: AxisMarkWidget, chart: Chart, changedProps?: IChartState) => boolean;\n\tease?: TEase;\n\teaseSpeed?: number;\n\trenderer: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n\n\tconstructor (private axisMarkPlugin: AxisMarksPlugin, private chart: Chart) {\n\t\tsuper();\n\t\tUtils.patch(this as IIteralable, AXIS_MARK_DEFAULT_OPTIONS);\n\t}\n\n\tremove() {\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [{_id: this.getId()}]}});\n\t}\n\n\tupdate(newOptions: IAxisMarkOptions) {\n\t\tlet options = Utils.deepMerge({_id: this.getId()} as IAxisMarkOptions, newOptions);\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [options]}});\n\t}\n}\n\n\n\nexport class AxisMarksPlugin extends ChartPlugin<TAxisMarksPluginOptions> {\n\tstatic NAME = 'AxisMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [AxisMarksWidget];\n\n\tmarksCollection = new UniqCollection<AxisMark, IAxisMarkOptions>({\n\t\tcreateInstance: () => new AxisMark(this, this.chart)\n\t});\n\n\tconstructor(axisMarksPluginOptions: TAxisMarksPluginOptions) {\n\t\tsuper(axisMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onStateChangedHandler(this.getOptions());\n\t}\n\n\tprotected onStateChangedHandler(axisMarksOptions: IAxisMarkOptions[]) {\n\t\tthis.marksCollection.patch(axisMarksOptions);\n\t}\n\n\tcreateMark(markOptions: IAxisMarkOptions): AxisMark {\n\t\tthis.chart.setState({pluginsState: {[this.name]: [markOptions]}});\n\t\treturn this.marksCollection.getLast();\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts\n **/","import Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Mesh = THREE.Mesh;\nimport Texture = THREE.Texture;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\n\nimport { ChartWidget, Chart, Color, AXIS_TYPE, Utils, IChartState, Animation } from 'three-charts';\nimport { AxisMark, AxisMarksPlugin, IAxisMarkOptions } from \"./AxisMarksPlugin\";\nimport BufferGeometry = THREE.BufferGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\n\n/**\n * widget for shows marks on axis\n */\nexport class AxisMarksWidget extends ChartWidget {\n\tstatic widgetName = 'AxisMarks';\n\n\tprotected object3D: Object3D;\n\tprotected axisMarksWidgets: AxisMarkWidget[] = [];\n\tprotected axisMarksPlugin: AxisMarksPlugin;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\t\tthis.axisMarksPlugin.marksCollection.forEach(mark => this.createAxisMarkWidget(mark));\n\t\tthis.bindEvents();\n\t}\n\n\tprotected createAxisMarkWidget(axisMark: AxisMark) {\n\t\tvar axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n\t\tthis.axisMarksWidgets.push(axisMarkWidget);\n\t\tthis.object3D.add(axisMarkWidget.getObject3D());\n\t}\n\n\tprotected bindEvents() {\n\t\tlet marksCollection = this.axisMarksPlugin.marksCollection;\n\t\tthis.bindEvent(\n\t\t\tthis.chart.interpolatedViewport.onInterpolation(() => this.updateMarksPositions()),\n\t\t\tthis.chart.onResize(() => this.onResizeHandler()),\n\t\t\tthis.chart.onChange((changedProps) => this.onStateChangeHandler(changedProps)),\n\t\t\tmarksCollection.onCreate((mark) => this.createAxisMarkWidget(mark)),\n\t\t\tmarksCollection.onUpdate((mark, changedOptions) => this.onMarkUpdateHandler(mark, changedOptions)),\n\t\t\tmarksCollection.onRemove((mark) => this.onMarkRemoveHandler(mark))\n\t\t);\n\t}\n\n\tprotected onMarkUpdateHandler(mark: AxisMark, changedOptions: IAxisMarkOptions) {\n\t\tlet widget = this.axisMarksWidgets.find(widget => widget.axisMark.getId() == mark.getId());\n\t\twidget.update(changedOptions);\n\t}\n\n\tprotected onMarkRemoveHandler(mark: AxisMark) {\n\t\tlet ind = this.axisMarksWidgets.findIndex(widget => widget.axisMark.getId() == mark.getId());\n\t\tlet widget = this.axisMarksWidgets[ind];\n\t\tthis.object3D.remove(widget.getObject3D());\n\t\tthis.axisMarksWidgets.splice(ind, 1);\n\t}\n\n\tprotected updateMarksPositions() {\n\t\tthis.forEach(widget => widget.updatePosition());\n\t}\n\n\tprotected onStateChangeHandler(changedProps: IChartState) {\n\t\tthis.forEach(widget => widget.onStateChangeHandler(changedProps));\n\t}\n\n\tprotected onResizeHandler() {\n\t\tthis.forEach(widget => {\n\t\t\twidget.resize();\n\t\t\twidget.updatePosition();\n\t\t});\n\t}\n\n\tforEach(fn: (widget: AxisMarkWidget) => any) {\n\t\tfor (let widget of this.axisMarksWidgets) fn(widget);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n}\n\n\n\nexport const DEFAULT_AXIS_MARK_RENDERER = (\n\taxisMarkWidget: AxisMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\twidth: number,\n\theight: number,\n\tchart: Chart\n) => {\n\tlet markOptions = axisMarkWidget.axisMark;\n\tlet lineColor = new Color(markOptions.lineColor);\n\tlet textColor = new Color(markOptions.textColor);\n\tlet font = chart.state.font.l;\n\tlet offset = parseInt(font);\n\tctx.clearRect(0,0, width, height);\n\tctx.beginPath();\n\tctx.strokeStyle = lineColor.rgbaStr;\n\tctx.fillStyle = lineColor.rgbaStr;\n\tctx.lineWidth = markOptions.lineWidth;\n\tctx.font = font;\n\n\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\tctx.moveTo(width / 2, 0);\n\t\tctx.lineTo(width / 2, height);\n\t\tctx.stroke();\n\t\tctx.fillStyle = textColor.rgbaStr;\n\t\tctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\n\t} else {\n\t\tctx.moveTo(0, height / 2);\n\t\tctx.lineTo(width, height / 2);\n\t\tctx.stroke();\n\t\tctx.fillStyle = textColor.rgbaStr;\n\t\tctx.fillText(markOptions.title, offset,\n\t\t\theight / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2)\n\t\t);\n\t}\n};\n\n\nexport class AxisMarkWidget {\n\taxisMark: AxisMark;\n\tisStickOnTop = false;\n\tisStickOnBottom = false;\n\tdisplayedValue = '';\n\theight = 0;\n\twidth = 0;\n\tframeValue = 0;\n\tframeOpacity = 0;\n\tanimation: Animation<number[]>;\n\tprotected object3D: Object3D;\n\tprotected mesh: Mesh;\n\tprotected chart: Chart;\n\n\n\tconstructor(chart: Chart, axisMark: AxisMark) {\n\t\tthis.chart = chart;\n\t\tthis.axisMark = axisMark;\n\t\tthis.frameOpacity = axisMark.opacity;\n\t\tthis.frameValue = axisMark.value;\n\t\tthis.object3D = new Object3D();\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tinitObject() {\n\t\tthis.width = this.chart.state.width;\n\t\tthis.height = this.chart.state.height;\n\t\tlet markOptions = this.axisMark;\n\t\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\t\tthis.width = markOptions.width;\n\t\t} else {\n\t\t\tthis.height = markOptions.width;\n\t\t}\n\t\tlet texture = Utils.createNearestTexture(this.width, this.height);\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(this.width, this.height),\n\t\t\tnew MeshBasicMaterial({map: texture, transparent: true})\n\t\t);\n\t\tthis.object3D.add(this.mesh);\n\t\tthis.render();\n\t}\n\n\tonStateChangeHandler(changedProps: IChartState) {\n\t\tlet needRender = this.axisMark.needRender && this.axisMark.needRender(this, this.chart, changedProps);\n\t\tneedRender && this.render();\n\t}\n\n\trender() {\n\t\tlet markOptions = this.axisMark;\n\t\tlet mesh = this.mesh\n\t\tlet texture = (mesh.material as MeshBasicMaterial).map;\n\t\tlet ctx = (texture.image as HTMLCanvasElement).getContext('2d');\n\t\tlet renderer = markOptions.renderer ? markOptions.renderer : DEFAULT_AXIS_MARK_RENDERER;\n\t\tif (markOptions.displayedValue) this.displayedValue = markOptions.displayedValue(this, this.chart);\n\t\trenderer(this, ctx, this.width, this.height, this.chart);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tresize() {\n\t\tthis.object3D.remove(this.mesh);\n\t\tthis.initObject();\n\t}\n\n\tupdate(options: IAxisMarkOptions) {\n\t\tlet mark = this.axisMark;\n\t\tthis.animation && this.animation.stop();\n\t\tthis.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\n\t\t\t.from([this.frameValue, this.frameOpacity])\n\t\t\t.to([mark.value, mark.opacity])\n\t\t\t.onTick((arr) => {\n\t\t\t\tthis.frameValue = arr[0];\n\t\t\t\tthis.frameOpacity = arr[1];\n\t\t\t\tthis.updatePosition();\n\t\t\t});\n\t}\n\n\tupdatePosition()  {\n\t\tlet chart = this.chart;\n\t\tlet screen = chart.interpolatedViewport;\n\t\tlet mark = this.axisMark;\n\t\tlet isXAxis = mark.axisType == AXIS_TYPE.X;\n\t\tlet hasStickMode = mark.stickToEdges;\n\t\tlet {width, height} = chart.state;\n\t\tlet val = this.frameValue;\n\t\tlet opactity = this.frameOpacity;\n\t\tlet material = (this.mesh as Mesh).material;\n\n\t\tmaterial.opacity = opactity;\n\n\t\tif (isXAxis) {\n\t\t\t// TODO: make stickToEdges mode for AXIS_TYPE.X\n\t\t\tthis.mesh.position.x = screen.getWorldXByVal(val);\n\t\t\tthis.mesh.position.y = screen.params.scrollY + height / 2;\n\t\t} else {\n\t\t\tlet bottomVal = screen.getBottomVal();\n\t\t\tlet topVal = screen.getTopVal();\n\t\t\tlet needToStickOnTop = hasStickMode && val > topVal;\n\t\t\tlet needToStickOnBottom = hasStickMode && val < bottomVal;\n\t\t\tthis.mesh.position.x = screen.params.scrollX + width / 2;\n\t\t\tif (needToStickOnTop) {\n\t\t\t\tthis.isStickOnTop = true;\n\t\t\t\tthis.mesh.position.y = screen.getTop();\n\t\t\t} else if (needToStickOnBottom) {\n\t\t\t\tthis.isStickOnBottom = true;\n\t\t\t\tthis.mesh.position.y = screen.getBottom();\n\t\t\t} else {\n\t\t\t\tthis.isStickOnBottom = this.isStickOnTop = false;\n\t\t\t\tthis.mesh.position.y = screen.getWorldYByVal(val);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts\n **/","\nimport {\n\tChartPlugin, ChartWidget, Utils, Chart, TColor, UniqCollection,\n\tUniqCollectionItem, IIteralable, TEase\n} from 'three-charts';\nimport { ZonesWidget } from \"./ZonesWidget\";\n\nexport enum ZONE_TYPE {\n\tX_RANGE\n}\n\nexport interface IZoneOptions {\n\tname?: string;\n\ttitle?: string;\n\tposition?: IZonePosition;\n\ttype?: ZONE_TYPE;\n\tbgColor?: TColor;\n\tuserData?: any;\n\tease?: TEase;\n\teaseSpeed?: number;\n\topacity?: number;\n}\n\nconst ZONE_DEFAULT_OPTIONS: IZoneOptions = {\n\tname: '',\n\ttitle: '',\n\ttype: ZONE_TYPE.X_RANGE,\n\tbgColor: '#b81820',\n\teaseSpeed: 500,\n\topacity: 0.4,\n\tposition: {\n\t\tstartXVal: 0,\n\t\tstartYVal: 0,\n\t\tendXVal: 0,\n\t\tendYVal: 0\n\t}\n};\n\nexport interface IZonePosition {\n\tstartXVal?: number;\n\tstartYVal?: number;\n\tendXVal?: number;\n\tendYVal?: number;\n}\n\nexport class Zone extends UniqCollectionItem implements IZoneOptions {\n\tname: string;\n\ttitle: string;\n\tposition: IZonePosition;\n\ttype: ZONE_TYPE;\n\tbgColor: TColor;\n\tuserData: any;\n\tease: TEase;\n\teaseSpeed: number;\n\topacity: number;\n\n\tconstructor (private zonePlugin: ZonesPlugin, private chart: Chart) {\n\t\tsuper();\n\t\tUtils.patch(this as IIteralable, ZONE_DEFAULT_OPTIONS);\n\t\tif (this.type == ZONE_TYPE.X_RANGE) {\n\t\t\tthis.position.startYVal = -Infinity;\n\t\t\tthis.position.endYVal = Infinity;\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.chart.setState({pluginsState: {[ZonesPlugin.NAME]: [{_id: this.getId()}]}});\n\t}\n\n\tupdate(newOptions: IZoneOptions) {\n\t\tlet options = Utils.deepMerge({_id: this.getId()} as IZoneOptions, newOptions);\n\t\tthis.chart.setState({pluginsState: {[ZonesPlugin.NAME]: [options]}});\n\t}\n}\n\n\n\nexport class ZonesPlugin extends ChartPlugin<IZoneOptions[]> {\n\tstatic NAME = 'Zone';\n\tstatic providedWidgets: typeof ChartWidget[] = [ZonesWidget];\n\n\titems = new UniqCollection<Zone, IZoneOptions>({\n\t\tcreateInstance: () => new Zone(this, this.chart)\n\t});\n\n\tconstructor(pluginOptions: IZoneOptions[]) {\n\t\tsuper(pluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onStateChangedHandler(this.getOptions());\n\t}\n\n\tprotected onStateChangedHandler(options: IZoneOptions[]) {\n\t\tthis.items.patch(options);\n\t}\n\n\tcreate(zoneOptions: IZoneOptions): Zone {\n\t\tthis.chart.setState({pluginsState: {[this.name]: [zoneOptions]}});\n\t\treturn this.items.getLast();\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/ZonesPlugin/ZonesPlugin.ts\n **/","import Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Mesh = THREE.Mesh;\nimport Texture = THREE.Texture;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\n\nimport { ChartWidget, Chart, Color, Utils, Animation } from 'three-charts';\nimport { Zone, ZonesPlugin, IZoneOptions } from \"./ZonesPlugin\";\n/**\n * widget for shows marks on axis\n */\nexport class ZonesWidget extends ChartWidget {\n\tstatic widgetName = 'Zones';\n\n\tprotected object3D: Object3D;\n\tprotected items: ZoneWidget[] = [];\n\tprotected zonesPlugin: ZonesPlugin;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.zonesPlugin = this.chart.getPlugin(ZonesPlugin.NAME) as ZonesPlugin;\n\t\tthis.zonesPlugin.items.forEach(zone => this.createZoneWidget(zone));\n\t\tthis.bindEvents();\n\t}\n\n\tprotected createZoneWidget(zone: Zone) {\n\t\tlet widget = new ZoneWidget(this.chart, zone);\n\t\tthis.items.push(widget);\n\t\tthis.object3D.add(widget.getObject3D());\n\t}\n\n\tprotected bindEvents() {\n\t\tlet zones = this.zonesPlugin.items;\n\t\tthis.bindEvent(\n\t\t\tthis.chart.interpolatedViewport.onInterpolation(() => this.updateZonesPositions()),\n\t\t\tzones.onCreate(item => this.createZoneWidget(item)),\n\t\t\tzones.onUpdate((item, changedOptions) => this.onZoneUpdateHandler(item, changedOptions)),\n\t\t\tzones.onRemove(item => this.onZoneRemoveHandler(item))\n\t\t);\n\t}\n\n\tprotected onZoneUpdateHandler(mark: Zone, changedOptions: IZoneOptions) {\n\t\tlet widget = this.items.find(widget => widget.zone.getId() == mark.getId());\n\t\twidget.update(changedOptions);\n\t}\n\n\tprotected onZoneRemoveHandler(mark: Zone) {\n\t\tlet ind = this.items.findIndex(widget => widget.zone.getId() == mark.getId());\n\t\tlet widget = this.items[ind];\n\t\tthis.object3D.remove(widget.getObject3D());\n\t\tthis.items.splice(ind, 1);\n\t}\n\n\tprotected updateZonesPositions() {\n\t\tthis.forEach(widget => widget.updatePosition());\n\t}\n\n\tforEach(fn: (widget: ZoneWidget) => any) {\n\t\tfor (let widget of this.items) fn(widget);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n}\n\nexport interface IZoneAnimatedProps {\n\tstartXVal: number;\n\tendXVal: number;\n\tstartYVal: number;\n\tendYVal: number;\n\topacity: number;\n}\n\nexport class ZoneWidget {\n\tzone: Zone;\n\tprotected animation: Animation<IZoneAnimatedProps>;\n\tprotected animatedProps: IZoneAnimatedProps;\n\tprotected object3D: Object3D;\n\tprotected mesh: Mesh;\n\tprotected chart: Chart;\n\n\n\tconstructor(chart: Chart, zone: Zone) {\n\t\tthis.chart = chart;\n\t\tthis.zone = zone;\n\t\tthis.object3D = new Object3D();\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tinitObject() {\n\t\tlet height = this.chart.state.height;\n\t\tlet bgColor = new Color(this.zone.bgColor);\n\t\tthis.animatedProps = Utils.deepMerge({} as IZoneAnimatedProps, this.zone.position as IZoneAnimatedProps);\n\t\tthis.animatedProps.opacity = this.zone.opacity;\n\t\t// mesh scheme\n\t\t//\n\t\t// vert0 +---+ vert3\n\t\t//       |\\  |\n\t\t// face1 | \\ | face2\n\t\t// \t     |  \\|\n\t\t// vert1 +---+ vert2\n\n\t\tlet geometry = new Geometry();\n\t\tgeometry.vertices.push(\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3()\n\t\t);\n\t\tgeometry.faces.push(\n\t\t\tnew THREE.Face3( 0, 1, 2 ),\n\t\t\tnew THREE.Face3( 3, 0, 2 )\n\t\t);\n\n\n\t\tthis.mesh = new Mesh(\n\t\t\tgeometry,\n\t\t\tnew MeshBasicMaterial({transparent: true, color: bgColor.value, opacity: bgColor.a})\n\t\t);\n\t\tthis.mesh.frustumCulled = false;\n\t\tthis.object3D.add(this.mesh);\n\t}\n\n\tupdate(options: IZoneOptions) {\n\t\tlet zone = this.zone;\n\t\tthis.animation && this.animation.stop();\n\t\tthis.animation = this.chart.animationManager.animate(zone.easeSpeed, zone.ease)\n\t\t\t.from(this.animatedProps)\n\t\t\t.to({\n\t\t\t\tstartXVal: zone.position.startXVal,\n\t\t\t\tstartYVal: zone.position.startYVal,\n\t\t\t\tendXVal: zone.position.endXVal,\n\t\t\t\tendYVal: zone.position.endYVal,\n\t\t\t\topacity: zone.opacity\n\t\t\t})\n\t\t\t.onTick(() => this.updatePosition());\n\t}\n\tupdatePosition()  {\n\t\tlet chart = this.chart;\n\t\tlet viewport = chart.interpolatedViewport;\n\t\tlet zone = this.zone;\n\t\tlet {startXVal, startYVal, endXVal, endYVal, opacity} = this.animatedProps;\n\t\tlet startY = isFinite(startYVal) ? viewport.getWorldYByVal(startYVal) : viewport.getBottom();\n\t\tlet endY = isFinite(endYVal) ? viewport.getWorldYByVal(endYVal) : viewport.getTop();\n\t\tlet startX = viewport.getWorldXByVal(startXVal);\n\t\tlet endX = viewport.getWorldXByVal(endXVal);\n\t\tlet geometry = this.mesh.geometry as Geometry;\n\t\tlet material = this.mesh.material as MeshBasicMaterial;\n\t\tlet verts = geometry.vertices;\n\n\t\tmaterial.opacity = this.animatedProps.opacity;\n\n\t\tverts[0].set(startX, endY, 0);\n\t\tverts[1].set(startX, startY, 0);\n\t\tverts[2].set(endX, startY, 0);\n\t\tverts[3].set(endX, endY, 0);\n\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/ZonesPlugin/ZonesWidget.ts\n **/"],"sourceRoot":""}