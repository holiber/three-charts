{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 4ca07fd65cd4b0cc2ace?4bde","webpack:///./demo/demoApp.ts","webpack:///./src/Easing.ts?492d","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/src/TrendsMarksPlugin/index.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts","webpack:///./plugins/src/TrendsBeaconWidget/index.ts","webpack:///./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts","webpack:///./plugins/src/TrendsLoadingWidget/index.ts","webpack:///./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts","webpack:///./plugins/src/TrendsIndicatorWidget/index.ts","webpack:///./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","three_charts_1","TrendsMarksPlugin_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","AxisMarksPlugin_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chartView","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","title","color","userData","description","icon","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","document","querySelector","TrendsMarksPlugin","items","AxisMarksPlugin","axisType","AXIS_TYPE","X","value","name","displayedValue","String","getSeconds","needRender","axisMarks","chart","getPlugin","NAME","setTimeout","mark","createMark","Y","stickToEdges","setInterval","update","mainTrend","getTrend","onDataChange","markOptions","getLastItem","trendsMarks","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","appendData","$checkboxMaintrend","addEventListener","setState","enabled","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","setOptions","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","EASING","Linear","None","k","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","pow","Circular","sqrt","Elastic","Back","s","Bounce","__export","hasOwnProperty","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","h","a","appendChild","dom","d","children","style","display","l","createElement","cssText","preventDefault","g","performance","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","devicePixelRatio","u","n","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","isObject","isObjectObject","o","Object","toString","ctor","prot","constructor","Array","isArray","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","concat","**","growListenerTree","listener","split","slice","shift","warned","console","error","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","apply","arguments","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","position","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","element","callback","EventQueue","add","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","__extends","__","create","Plugin_1","PerspectiveCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","ChartBlankView","$container","pluginsAndWidgets","_this","widgets","parseInt","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","w","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","backgroundColor","Color","setSize","setPixelRatio","setClearColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","map","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","screen","onTransformationFrame","options","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","CanvasRenderer","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChangedHandler","getOptions","pluginsState","changedState","_i","unsubscriber","deepmerge","target","src","mergeArrays","array","dst","indexOf","keys","key","obj1","obj2","JSON","parse","stringify","patch","objectToPatch","idKey","_loop_1","patchItem","subObject","find","this_1","travers","object","allowTraverseDeeper","canTraverseDeeper","setIdsToArrayItems","sourceObject","arr","arr_1","getUid","toFixed","num","digitsCount","maxDigits","result","intVal","floor","intStr","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","substr","createTexture","canvas","ctx","texture","Texture","needsUpdate","createNearestTexture","minFilter","NearestFilter","createPixelPerfectTexture","magFilter","msg","warn","currentId","getDistance","num1","num2","binarySearchClosestInd","mid","lo","hi","binarySearchClosest","ind","binarySearchInd","binarySearch","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Vector3","Trend_1","TrendsManager_1","Screen_1","interfaces_1","AnimationManager_1","Easing_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","DRAG_STATE_CHAGED","PLUGINS_STATE_CHANGED","LIGHT_BLUE","prevState","ALL","scroll","NUMBER","grid","minSizePx","RELATIVE_END","animations","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","zoomEase","autoScrollSpeed","autoScrollEase","maxSegmentLength","lineWidth","lineColor","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","inertialScroll","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","computedData","getComputedData","savePrevState","animationManager","AnimationManager","setAimationsEnabled","Screen","onChange","onTrendChange","onTrendsChange","onDragStateChanged","onZoom","tick","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","actualData","cursorOptions","isMouseDrag","oldX","currentX","currentScroll","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","maxXVal","getEndXVal","minXVal","getStartXVal","dragEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","changedTrends","newData","handleTrendsChange","dragState","onDragStateChangedHandler","animationOptions","isAnimationsEnabled","oldTrendsMaxX","trendsMaxXDelta","maxVisibleXVal","getScreenRightVal","paddingRightVal","getValueByScreenX","marginRightVal","scrollDelta","isDragMode","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","abs","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","unbindList","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","unbind","tryToRebuildSegments","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","currentAnimationState","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","TRANSFORMATION_EVENT","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","scrollXVal","scrollYVal","zoomX","zoomY","transformationInProgress","transform","vFOV","tan","onZoomFrame","onScrollFrame","onTransformationEvent","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","hasActiveAnimations","scrollYAnimation","zoomYAnimation","transformationStarted","transformationFinished","STARTED","scrollEventNeeded","zoomEventNeeded","FINISHED","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","zoomXChanged","isAutoscroll","targetX","onTick","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","lastTickTime","timingFunction","Animation","animateObj","source","isEnabled","i_1","completeAndStop","createdTime","easing","progress","delay","setProgress","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","targetIteralable","onTickCb","onFinishCb","withDelay","initialVal","targetVal","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","rgbaStr","strokeStyle","material","MeshBasicMaterial","side","FrontSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","startVal","endVal","pxVal","textAlign","getDateStr","stroke","closePath","gridParams","hour","day","tf","getHours","getMinutes","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","opacity","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","replace","exec","isNaN","numberToHexStr","colorStr","rgba","hexStr","getTransparent","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","UniqCollectionItem","getId","_id","ID_KEY","CREATE","UPDATE","REMOVE","UniqCollection","models","models_1","model","getItemInd","justCreated","createInstance","prevProps","getItem","getLast","onCreate","onUpdate","onRemove","TrendsMarksWidget_1","TEXTURE_FILTER","AXIS_MARK_DEFAULT_OPTIONS","easeSpeed","textureFilter","onRender","DEFAULT_RENDERER","trendsMarksPluginOptions","rects","onMarksChangeHandler","getItems","markName","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","marks","TrendMark","createMarkRect","left","top","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","sort","points","markInd","trendMarks","TrendsMarksWidget","offset","LinearFilter","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","onScreenTransformationEvent","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onScreenTransformationEventHandler","onZoomFrameHandler","trendMark","show","LINEAR","NEAREST","markMesh","updatePosition","posX","posY","trendMarkWidget","isTopSide","rgbaColor","centerX","centerY","textOffset","textPosX","textPosY","arc","fill","lineEndY","moveTo","lineTo","PlaneBufferGeometry","ANIMATION_TIME","ANIMATION_DELAY","TrendBeacon","mesh","light","setInitialState","animationObject","trendsSegments","endPointVector","screenWidth","TrendLoading","deactivate","activate","rotation","restart","center","pointVector","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen","AxisMarksWidget_1","AxisMark","axisMarkPlugin","newOptions","axisMarksPluginOptions","marksCollection","axisMarksOptions","AxisMarksWidget","axisMarksWidgets","axisMarksPlugin","createAxisMarkWidget","axisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","onStateChangeHandler","onMarkUpdateHandler","onMarkRemoveHandler","findIndex","DEFAULT_AXIS_MARK_RENDERER","isStickOnBottom","isStickOnTop","frameValue","frameOpacity","hasStickMode","opactity","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","centerYVal"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(34);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(37);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(39);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(41);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(43);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chartView;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_charts_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            xVal: val,\r\n\t            title: three_charts_1.Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\r\n\t            color: three_charts_1.Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\r\n\t            orientation: orientation,\r\n\t            // textureFilter: TEXTURE_FILTER.NEAREST,\r\n\t            userData: {\r\n\t                description: three_charts_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t                icon: three_charts_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t                descriptionColor: descriptionColor\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chartView = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 0, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000,\r\n\t                margin: { end: 200 },\r\n\t            },\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {}\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] }),\r\n\t        new AxisMarksPlugin_1.AxisMarksPlugin([\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.startTime, name: 'test', title: 'DEADLINE' },\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', color: '#ff6600' },\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', color: '#005187', displayedValue: function () { return String((new Date()).getSeconds()); }, needRender: function () { return true; } },\r\n\t        ])\r\n\t    ]);\r\n\t    var axisMarks = chartView.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t    setTimeout(function () {\r\n\t        var mark = axisMarks.createMark({ axisType: three_charts_1.AXIS_TYPE.Y, value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', color: '#29874b', stickToEdges: true });\r\n\t        setInterval(function () {\r\n\t            mark.update({ value: mark.value + 1 });\r\n\t        }, 1000);\r\n\t    }, 1000);\r\n\t    window['chartView'] = chartView;\r\n\t    var mainTrend = chartView.getTrend('main');\r\n\t    // var deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\r\n\t    // var closeMark = chartView.chart.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        // var closeValue = closeMark.options.value;\r\n\t        // if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t        // \tdeadlineMark.setOptions({value: closeValue + 10000});\r\n\t        // \tcloseMark.setOptions({value: closeValue + 20000})\r\n\t        // }\r\n\t        var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        if (markOptions)\r\n\t            setTimeout(function () {\r\n\t                var trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t                trendsMarks.createMark(markOptions);\r\n\t            }, 500);\r\n\t    });\r\n\t    var i = 0;\r\n\t    chartView.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chartView.getTrend('main').appendData([val]);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chartView.chart.setState({ autoScroll: false });\r\n\t            chartView.chart.zoomToRange(range);\r\n\t            chartView.chart.scrollToEnd().then(function () {\r\n\t                chartView.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Easing from tween.js lib https://github.com/tweenjs/tween.js\r\n\t **/\r\n\texports.EASING = {\r\n\t    Linear: {\r\n\t        None: function (k) {\r\n\t            return k;\r\n\t        }\r\n\t    },\r\n\t    Quadratic: {\r\n\t        In: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        }\r\n\t    },\r\n\t    Cubic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Quartic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        }\r\n\t    },\r\n\t    Quintic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Sinusoidal: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        }\r\n\t    },\r\n\t    Exponential: {\r\n\t        In: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        }\r\n\t    },\r\n\t    Circular: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        }\r\n\t    },\r\n\t    Elastic: {\r\n\t        In: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            k *= 2;\r\n\t            if (k < 1) {\r\n\t                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t            }\r\n\t            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\t        }\r\n\t    },\r\n\t    Back: {\r\n\t        In: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        }\r\n\t    },\r\n\t    Bounce: {\r\n\t        In: function (k) {\r\n\t            return 1 - exports.EASING.Bounce.Out(1 - k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return exports.EASING.Bounce.In(k * 2) * 0.5;\r\n\t            }\r\n\t            return exports.EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(33)\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __webpack_require__(2);\n\t        __export(__webpack_require__(9));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(11));\n\t        __export(__webpack_require__(30));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(31));\n\t        __export(__webpack_require__(10));\n\t        __export(__webpack_require__(25));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(12));\n\t        __export(__webpack_require__(21));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(3);\n\t        exports.isPlainObject = __webpack_require__(4);\n\t        exports.EE2 = __webpack_require__(6);\n\t        var es6_promise_1 = __webpack_require__(7);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(8);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(5);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Plugin_1 = __webpack_require__(10);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var Chart_1 = __webpack_require__(14);\n\t        var Widget_1 = __webpack_require__(22);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var AxisWidget_1 = __webpack_require__(23);\n\t        var GridWidget_1 = __webpack_require__(24);\n\t        var TrendsGradientWidget_1 = __webpack_require__(26);\n\t        var TrendsLineWidget_1 = __webpack_require__(28);\n\t        var TrendsCandleWidget_1 = __webpack_require__(29);\n\t        var deps_1 = __webpack_require__(13);\n\t        var Color_1 = __webpack_require__(25);\n\t        var ChartBlankView = function() {\n\t            function ChartBlankView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartBlankView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartBlankView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartBlankView.prototype.render = function() {\n\t                this.chart.render();\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartBlankView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartBlankView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartBlankView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartBlankView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartBlankView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartBlankView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartBlankView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartBlankView.prototype.setupCamera = function() {\n\t                var camSettings = this.chart.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.screen.options);\n\t            };\n\t            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                this.chart.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartBlankView.preinstalledWidgets = [];\n\t            ChartBlankView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartBlankView;\n\t        }();\n\t        exports.ChartBlankView = ChartBlankView;\n\t        var ChartView = function(_super) {\n\t            __extends(ChartView, _super);\n\t            function ChartView() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n\t            return ChartView;\n\t        }(ChartBlankView);\n\t        exports.ChartView = ChartView;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChangedHandler = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(2);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.patch = function(objectToPatch, patch) {\n\t                var idKey = \"_id\";\n\t                for (var key in patch) {\n\t                    if (!patch.hasOwnProperty(key)) continue;\n\t                    if (objectToPatch[key]) {\n\t                        if (Array.isArray(patch[key])) {\n\t                            var _loop_1 = function(patchItem) {\n\t                                var subObject = objectToPatch[key].find(function(item) {\n\t                                    return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n\t                                });\n\t                                if (subObject) {\n\t                                    this_1.patch(subObject, patchItem);\n\t                                } else {\n\t                                    objectToPatch[key].push(patchItem);\n\t                                }\n\t                            };\n\t                            var this_1 = this;\n\t                            for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\n\t                                var patchItem = _a[_i];\n\t                                _loop_1(patchItem);\n\t                            }\n\t                            continue;\n\t                        } else if (typeof patch[key] === \"object\" && objectToPatch[key] != void 0) {\n\t                            if (patch[idKey] && Object.keys(patch).length == 1) {\n\t                                delete objectToPatch[key];\n\t                            } else {\n\t                                this.patch(objectToPatch[key], patch[key]);\n\t                            }\n\t                            continue;\n\t                        }\n\t                    }\n\t                    objectToPatch[key] = patch[key];\n\t                }\n\t                if (objectToPatch[\"_onUpdate\"]) objectToPatch[\"_onUpdate\"].call(objectToPatch, patch);\n\t                return objectToPatch;\n\t            };\n\t            Utils.travers = function(object, fn) {\n\t                for (var key in object) {\n\t                    if (!object.hasOwnProperty(key)) continue;\n\t                    var allowTraverseDeeper = fn(object[key]);\n\t                    var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == \"object\";\n\t                    if (canTraverseDeeper) this.travers(object[key], fn);\n\t                }\n\t            };\n\t            Utils.setIdsToArrayItems = function(sourceObject) {\n\t                var idKey = \"_id\";\n\t                Utils.travers(sourceObject, function(item) {\n\t                    if (!Array.isArray(item)) return true;\n\t                    var arr = item;\n\t                    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n\t                        var obj = arr_1[_i];\n\t                        if (typeof obj !== \"object\" || Array.isArray(obj)) continue;\n\t                        if (!obj[idKey]) obj[idKey] = Utils.getUid();\n\t                    }\n\t                });\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn && fn(ctx, width, height);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createNearestTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.magFilter = THREE.NearestFilter;\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.binarySearchInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((hi - lo) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                    if (arr[lo][key] == num) {\n\t                        return lo;\n\t                    } else if (arr[hi][key] == num) {\n\t                        return hi;\n\t                    }\n\t                }\n\t                return -1;\n\t            };\n\t            Utils.binarySearch = function(arr, num, key) {\n\t                var ind = this.binarySearchInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else if (typeof srcObject[key] == \"function\") {\n\t                        dstObject[key] = srcObject[key];\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(13);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsManager_1 = __webpack_require__(17);\n\t        var Screen_1 = __webpack_require__(18);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var deps_1 = __webpack_require__(2);\n\t        var AnimationManager_1 = __webpack_require__(20);\n\t        var Easing_1 = __webpack_require__(21);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            DRAG_STATE_CHAGED: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: 250,\n\t                        scrollSpeed: 1e3,\n\t                        scrollEase: Easing_1.EASING.Quadratic.Out,\n\t                        zoomEase: Easing_1.EASING.Quadratic.Out,\n\t                        autoScrollSpeed: 1100,\n\t                        autoScrollEase: Easing_1.EASING.Linear.None\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280,\n\t                    inertialScroll: true\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.isDestroyed = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.patch(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.animationManager = new AnimationManager_1.AnimationManager();\n\t                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.bindEvents();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t                this.isDestroyed = true;\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onDragStateChanged = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.animationManager.tick();\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                if (this.isDestroyed) {\n\t                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n\t                }\n\t                var stateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (stateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                newState = Utils_1.Utils.deepMerge({}, newState);\n\t                Utils_1.Utils.setIdsToArrayItems(newState);\n\t                this.state = Utils_1.Utils.patch(this.state, newState);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.patch({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.patch(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        Utils_1.Utils.patch(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        Utils_1.Utils.patch(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        Utils_1.Utils.patch(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        Utils_1.Utils.patch(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                Utils_1.Utils.patch(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n\t                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t                this.onDragStateChanged(function(dragState) {\n\t                    return _this.onDragStateChangedHandler(dragState);\n\t                });\n\t                this.ee.on(\"animationsChange\", function(animationOptions) {\n\t                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n\t                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t                var state = this.state;\n\t                if (!state.autoScroll || state.cursor.dragMode) return;\n\t                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleXVal = this.screen.getScreenRightVal();\n\t                    var paddingRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n\t                    var marginRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.margin.end);\n\t                    var currentScroll = state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n\t                var state = this.state;\n\t                if (!state.inertialScroll || isDragMode) return;\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime);\n\t                });\n\t            };\n\t            Chart.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getValueOnXAxis = function(x) {\n\t                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            Chart.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Chart.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Chart.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            Chart.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.state.width);\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendSegmentsManager_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var deps_1 = __webpack_require__(2);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chart = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chart;\n\t                chartState.onDragStateChanged(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chart.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chart.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chart.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chart;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chart, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.unbindList = [];\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                }), this.chart.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                }), this.chart.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }) ];\n\t            };\n\t            TrendSegmentsManager.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbind) {\n\t                    return unbind();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.unbindEvents();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chart.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chart.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) {\n\t                            initialAnimationState = initialSegment.createAnimationState();\n\t                        }\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chart.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var _this = this;\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                trend.segmentsManager.onRebuild(function() {\n\t                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                });\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        (function(TRANSFORMATION_EVENT) {\n\t            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n\t            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n\t        })(exports.TRANSFORMATION_EVENT || (exports.TRANSFORMATION_EVENT = {}));\n\t        var TRANSFORMATION_EVENT = exports.TRANSFORMATION_EVENT;\n\t        var SCREEN_EVENTS = {\n\t            ZOOM_FRAME: \"zoomFrame\",\n\t            SCROLL_FRAME: \"scrollFrame\",\n\t            TRANSFORMATION_FRAME: \"transformationFrame\",\n\t            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n\t        };\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.transformationInProgress = false;\n\t                this.chart = chartState;\n\t                var _a = chartState.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chart.state.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chart.state, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t            };\n\t            Screen.prototype.onTransformationEvent = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n\t                var transformationStarted = hasActiveAnimations && !this.transformationInProgress;\n\t                var transformationFinished = !hasActiveAnimations && this.transformationInProgress;\n\t                if (transformationStarted) {\n\t                    this.transformationInProgress = true;\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.STARTED);\n\t                }\n\t                if (transformationFinished) {\n\t                    this.transformationInProgress = false;\n\t                }\n\t                if (!this.transformationInProgress) {\n\t                    this.options.scrollX = options.scrollX = Math.round(this.options.scrollX);\n\t                    this.options.scrollY = options.scrollY = Math.round(this.options.scrollY);\n\t                }\n\t                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\t                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\t                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\t                if (transformationFinished) {\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.FINISHED);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var isDragMode = chart.state.cursor.dragMode;\n\t                var animations = chart.state.animations;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                var range = chart.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                if (isDragMode && !chart.state.inertialScroll) time = 0;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n\t                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.options.scrollX).to(targetX).onTick(function(value) {\n\t                    _this.transform({\n\t                        scrollX: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var range = chart.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n\t                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.scrollY).to(targetY).onTick(function(value) {\n\t                    _this.transform({\n\t                        scrollY: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var targetZoom = chart.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n\t                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomX).to(targetZoom).onTick(function(value) {\n\t                    _this.transform({\n\t                        zoomX: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var targetZoom = chart.state.yAxis.range.zoom;\n\t                var animations = chart.state.animations;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n\t                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomY).to(targetZoom).onTick(function(value) {\n\t                    _this.transform({\n\t                        zoomY: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chart.state.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chart.state.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chart.state.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chart.state.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chart.state.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chart.state.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chart.state.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chart.state.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Easing_1 = __webpack_require__(21);\n\t        var AnimationManager = function() {\n\t            function AnimationManager() {\n\t                this.isAnimationsEnabled = true;\n\t                this.animations = [];\n\t                this.lastTickTime = Date.now();\n\t            }\n\t            AnimationManager.prototype.animate = function(time, timingFunction) {\n\t                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t                this.animations.push(animation);\n\t                return animation;\n\t            };\n\t            AnimationManager.prototype.animateObj = function(source, target) {};\n\t            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n\t                this.isAnimationsEnabled = isEnabled;\n\t            };\n\t            AnimationManager.prototype.tick = function() {\n\t                var now = Date.now();\n\t                var animations = this.animations;\n\t                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n\t                    var animation = animations[i_1];\n\t                    if (this.isAnimationsEnabled) {\n\t                        animation.tick(now);\n\t                    } else {\n\t                        animation.completeAndStop();\n\t                    }\n\t                }\n\t                var i = animations.length;\n\t                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n\t                this.lastTickTime = now;\n\t            };\n\t            AnimationManager.prototype.hasActiveAnimations = function() {\n\t                return this.animations.length > 0;\n\t            };\n\t            return AnimationManager;\n\t        }();\n\t        exports.AnimationManager = AnimationManager;\n\t        var Animation = function() {\n\t            function Animation(animationManager, time, createdTime, easing) {\n\t                if (easing === void 0) {\n\t                    easing = Easing_1.EASING.Quadratic.Out;\n\t                }\n\t                this.animationManager = animationManager;\n\t                this.time = time;\n\t                this.createdTime = createdTime;\n\t                this.easing = easing;\n\t                this.progress = 0;\n\t                this.delay = 0;\n\t                this.isFinished = false;\n\t                this.isStopped = false;\n\t                this.startTime = createdTime;\n\t            }\n\t            Animation.prototype.tick = function(now) {\n\t                if (!this.isStopped) {\n\t                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n\t                    this.setProgress(progress);\n\t                }\n\t            };\n\t            Animation.prototype.from = function(sourceObj) {\n\t                if (typeof sourceObj == \"object\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = {};\n\t                    var sourceIteralable = sourceObj;\n\t                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n\t                        this.initialObj[key] = sourceIteralable[key];\n\t                    }\n\t                } else if (typeof sourceObj == \"number\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = sourceObj;\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.to = function(targetObj) {\n\t                this.targetObject = targetObj;\n\t                if (typeof this.initialObj == \"object\") {\n\t                    var initialIteralable = this.initialObj;\n\t                    for (var key in this.targetObject) {\n\t                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                    var targetIteralable = this.targetObject;\n\t                    for (var key in initialIteralable) {\n\t                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.onTick = function(onTickCb) {\n\t                this.onTickCb = onTickCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.then = function(onFinishCb) {\n\t                this.onFinishCb = onFinishCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Animation.prototype.completeAndStop = function() {\n\t                this.setProgress(1);\n\t            };\n\t            Animation.prototype.withDelay = function(delay) {\n\t                this.delay = delay;\n\t                this.startTime = this.createdTime + delay;\n\t                return this;\n\t            };\n\t            Animation.prototype.setProgress = function(progress) {\n\t                if (progress < 0) return;\n\t                progress = Math.min(progress, 1);\n\t                this.progress = progress;\n\t                var k = this.easing(progress);\n\t                if (typeof this.sourceObj == \"number\") {\n\t                    var initialVal = this.initialObj;\n\t                    var targetVal = this.targetObject;\n\t                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n\t                } else if (this.sourceObj && this.targetObject) {\n\t                    for (var key in this.initialObj) {\n\t                        var initialVal = this.initialObj[key];\n\t                        var targetVal = this.targetObject[key];\n\t                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n\t                    }\n\t                }\n\t                if (progress == 1) {\n\t                    this.isStopped = true;\n\t                    this.isFinished = true;\n\t                }\n\t                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n\t                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n\t            };\n\t            return Animation;\n\t        }();\n\t        exports.Animation = Animation;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.EASING = {\n\t            Linear: {\n\t                None: function(k) {\n\t                    return k;\n\t                }\n\t            },\n\t            Quadratic: {\n\t                In: function(k) {\n\t                    return k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return k * (2 - k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k;\n\t                    }\n\t                    return -.5 * (--k * (k - 2) - 1);\n\t                }\n\t            },\n\t            Cubic: {\n\t                In: function(k) {\n\t                    return k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k + 2);\n\t                }\n\t            },\n\t            Quartic: {\n\t                In: function(k) {\n\t                    return k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return 1 - --k * k * k * k;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k;\n\t                    }\n\t                    return -.5 * ((k -= 2) * k * k * k - 2);\n\t                }\n\t            },\n\t            Quintic: {\n\t                In: function(k) {\n\t                    return k * k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k * k * k + 2);\n\t                }\n\t            },\n\t            Sinusoidal: {\n\t                In: function(k) {\n\t                    return 1 - Math.cos(k * Math.PI / 2);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sin(k * Math.PI / 2);\n\t                },\n\t                InOut: function(k) {\n\t                    return .5 * (1 - Math.cos(Math.PI * k));\n\t                }\n\t            },\n\t            Exponential: {\n\t                In: function(k) {\n\t                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t                },\n\t                Out: function(k) {\n\t                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * Math.pow(1024, k - 1);\n\t                    }\n\t                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t                }\n\t            },\n\t            Circular: {\n\t                In: function(k) {\n\t                    return 1 - Math.sqrt(1 - k * k);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sqrt(1 - --k * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n\t                    }\n\t                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t                }\n\t            },\n\t            Elastic: {\n\t                In: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                },\n\t                Out: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    k *= 2;\n\t                    if (k < 1) {\n\t                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                    }\n\t                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t                }\n\t            },\n\t            Back: {\n\t                In: function(k) {\n\t                    var s = 1.70158;\n\t                    return k * k * ((s + 1) * k - s);\n\t                },\n\t                Out: function(k) {\n\t                    var s = 1.70158;\n\t                    return --k * k * ((s + 1) * k + s) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    var s = 1.70158 * 1.525;\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * (k * k * ((s + 1) * k - s));\n\t                    }\n\t                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t                }\n\t            },\n\t            Bounce: {\n\t                In: function(k) {\n\t                    return 1 - exports.EASING.Bounce.Out(1 - k);\n\t                },\n\t                Out: function(k) {\n\t                    if (k < 1 / 2.75) {\n\t                        return 7.5625 * k * k;\n\t                    } else if (k < 2 / 2.75) {\n\t                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n\t                    } else if (k < 2.5 / 2.75) {\n\t                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n\t                    } else {\n\t                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n\t                    }\n\t                },\n\t                InOut: function(k) {\n\t                    if (k < .5) {\n\t                        return exports.EASING.Bounce.In(k * 2) * .5;\n\t                    }\n\t                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(22);\n\t        var GridWidget_1 = __webpack_require__(24);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var Color_1 = __webpack_require__(25);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.Color(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(22);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var Color_1 = __webpack_require__(25);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var Color = function() {\n\t            function Color(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            Color.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            Color.numberToHexStr = function(value) {\n\t                var result = value.toString(16);\n\t                return \"#\" + \"0\".repeat(6 - result.length) + result;\n\t            };\n\t            Color.prototype.set = function(color) {\n\t                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n\t                var colorStr = color;\n\t                var rgba = Color.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = Color.numberToHexStr(this.value);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            Color.prototype.getTransparent = function(opacity) {\n\t                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n\t            };\n\t            return Color;\n\t        }();\n\t        exports.Color = Color;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Color_1 = __webpack_require__(25);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i < segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(22);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var UniqCollectionItem = function() {\n\t            function UniqCollectionItem() {}\n\t            UniqCollectionItem.prototype.getId = function() {\n\t                return this._id;\n\t            };\n\t            return UniqCollectionItem;\n\t        }();\n\t        exports.UniqCollectionItem = UniqCollectionItem;\n\t        var ID_KEY = \"_id\";\n\t        var EVENTS = {\n\t            CREATE: \"create\",\n\t            UPDATE: \"update\",\n\t            REMOVE: \"remove\"\n\t        };\n\t        var UniqCollection = function() {\n\t            function UniqCollection(options) {\n\t                this.items = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t            }\n\t            UniqCollection.prototype.patch = function(models) {\n\t                var options = this.options;\n\t                for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n\t                    var model = models_1[_i];\n\t                    var id = model[ID_KEY];\n\t                    if (!id) Utils_1.Utils.error(\"Collection item without id detected\");\n\t                    var ind = this.getItemInd(id);\n\t                    var item = this.items[ind];\n\t                    var justCreated = false;\n\t                    if (!item) {\n\t                        justCreated = true;\n\t                        item = options.createInstance(model);\n\t                        this.items.push(item);\n\t                    }\n\t                    if (Object.keys(model).length > 1) {\n\t                        var prevProps = {};\n\t                        Utils_1.Utils.copyProps(item, prevProps, model);\n\t                        Utils_1.Utils.patch(item, model);\n\t                        justCreated && this.ee.emit(EVENTS.CREATE, item);\n\t                        this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\n\t                    } else {\n\t                        this.items.splice(ind, 1);\n\t                        this.ee.emit(EVENTS.REMOVE, item);\n\t                    }\n\t                }\n\t            };\n\t            UniqCollection.prototype.getItem = function(id) {\n\t                return this.items[this.getItemInd(id)];\n\t            };\n\t            UniqCollection.prototype.getLast = function() {\n\t                return this.items[this.items.length - 1];\n\t            };\n\t            UniqCollection.prototype.forEach = function(cb) {\n\t                for (var key in this.items) cb(this.items[key]);\n\t            };\n\t            UniqCollection.prototype.filter = function(cb) {\n\t                var result = [];\n\t                this.forEach(function(item) {\n\t                    return cb(item) && result.push(item);\n\t                });\n\t                return result;\n\t            };\n\t            UniqCollection.prototype.onCreate = function(cb) {\n\t                return this.ee.subscribe(EVENTS.CREATE, cb);\n\t            };\n\t            UniqCollection.prototype.onUpdate = function(cb) {\n\t                return this.ee.subscribe(EVENTS.UPDATE, cb);\n\t            };\n\t            UniqCollection.prototype.onRemove = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REMOVE, cb);\n\t            };\n\t            UniqCollection.prototype.getItemInd = function(id) {\n\t                return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\n\t            };\n\t            return UniqCollection;\n\t        }();\n\t        exports.UniqCollection = UniqCollection;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(24));\n\t        __export(__webpack_require__(27));\n\t        __export(__webpack_require__(28));\n\t        __export(__webpack_require__(26));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(35));\r\n\t__export(__webpack_require__(36));\r\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar TrendsMarksWidget_1 = __webpack_require__(36);\r\n\tvar Easing_1 = __webpack_require__(21);\r\n\t(function (TREND_MARK_SIDE) {\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n\t})(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\r\n\tvar TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\r\n\t(function (EVENTS) {\r\n\t    EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\r\n\t})(exports.EVENTS || (exports.EVENTS = {}));\r\n\tvar EVENTS = exports.EVENTS;\r\n\t(function (TEXTURE_FILTER) {\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"AUTO\"] = 0] = \"AUTO\";\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"LINEAR\"] = 1] = \"LINEAR\";\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"NEAREST\"] = 2] = \"NEAREST\";\r\n\t})(exports.TEXTURE_FILTER || (exports.TEXTURE_FILTER = {}));\r\n\tvar TEXTURE_FILTER = exports.TEXTURE_FILTER;\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    trendName: '',\r\n\t    title: '',\r\n\t    color: 'rgba(#0099d9, 0.5)',\r\n\t    xVal: 0,\r\n\t    orientation: TREND_MARK_SIDE.TOP,\r\n\t    width: 105,\r\n\t    height: 100,\r\n\t    margin: 10,\r\n\t    ease: Easing_1.EASING.Elastic.Out,\r\n\t    easeSpeed: 1000,\r\n\t    textureFilter: TEXTURE_FILTER.AUTO,\r\n\t    onRender: TrendsMarksWidget_1.DEFAULT_RENDERER\r\n\t};\r\n\tvar TrendsMarksPlugin = (function (_super) {\r\n\t    __extends(TrendsMarksPlugin, _super);\r\n\t    function TrendsMarksPlugin(trendsMarksPluginOptions) {\r\n\t        _super.call(this, trendsMarksPluginOptions);\r\n\t        this.items = {};\r\n\t        this.rects = {};\r\n\t    }\r\n\t    TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onStateChangedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMark = function (options) {\r\n\t        var marksOptions = this.getOptions().items;\r\n\t        var newMarkOptions = marksOptions.concat([options]);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = { items: newMarkOptions }, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.trendsManager.onSegmentsRebuilded(function () {\r\n\t            _this.updateMarksSegments();\r\n\t        });\r\n\t        this.chart.screen.onZoomFrame(function () { return _this.calclulateMarksPositions(); });\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onMarksChangeHandler = function () {\r\n\t        var trendsMarksOptions = this.getOptions().items;\r\n\t        var actualMarksNames = [];\r\n\t        for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\r\n\t            var options = trendsMarksOptions_1[_i];\r\n\t            var marks = this.items;\r\n\t            // set mark name\r\n\t            if (!options.name) {\r\n\t                options.name = three_charts_1.Utils.getUid().toString();\r\n\t                actualMarksNames.push(options.name);\r\n\t                if (marks[options.name])\r\n\t                    three_charts_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            }\r\n\t            else if (marks[options.name]) {\r\n\t                actualMarksNames.push(options.name);\r\n\t                continue;\r\n\t            }\r\n\t            options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            var mark = new TrendMark(this.chart, options);\r\n\t            marks[options.name] = mark;\r\n\t        }\r\n\t        // delete not relevant marks\r\n\t        for (var markName in this.items) {\r\n\t            if (actualMarksNames.indexOf(markName) != -1)\r\n\t                continue;\r\n\t            delete this.items[markName];\r\n\t        }\r\n\t        this.updateMarksSegments();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.calclulateMarksPositions = function () {\r\n\t        this.rects = {};\r\n\t        for (var markName in this.items) {\r\n\t            this.createMarkRect(this.items[markName]);\r\n\t        }\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMarkRect = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var chart = this.chart;\r\n\t        var options = mark.options;\r\n\t        var width = options.width, height = options.height, name = options.name;\r\n\t        var left = chart.getPointOnXAxis(mark.xVal) - width / 2;\r\n\t        var top = chart.getPointOnYAxis(mark.yVal);\r\n\t        var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t        var newOffset;\r\n\t        var row = 0;\r\n\t        if (isTopSideMark) {\r\n\t            top += height;\r\n\t        }\r\n\t        var markRect = [left, top, width, height];\r\n\t        var hasIntersection = false;\r\n\t        do {\r\n\t            for (var markName in this.rects) {\r\n\t                var rect = this.rects[markName];\r\n\t                hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\r\n\t                if (!hasIntersection)\r\n\t                    continue;\r\n\t                if (isTopSideMark) {\r\n\t                    markRect[1] = rect[1] + markRect[3] + options.margin;\r\n\t                }\r\n\t                else {\r\n\t                    markRect[1] = rect[1] - rect[3] - options.margin;\r\n\t                }\r\n\t                row++;\r\n\t                break;\r\n\t            }\r\n\t        } while (hasIntersection);\r\n\t        if (isTopSideMark) {\r\n\t            newOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\r\n\t        }\r\n\t        else {\r\n\t            newOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\r\n\t        }\r\n\t        mark._setOffset(newOffset);\r\n\t        mark._setRow(row);\r\n\t        this.rects[name] = markRect;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.updateMarksSegments = function () {\r\n\t        var chart = this.chart;\r\n\t        var trends = chart.trendsManager.trends;\r\n\t        for (var trendName in trends) {\r\n\t            var marks = this.getTrendMarks(trendName);\r\n\t            var marksArr = [];\r\n\t            var xVals = [];\r\n\t            for (var markName in marks) {\r\n\t                var mark = marks[markName];\r\n\t                xVals.push(mark.options.xVal);\r\n\t                marksArr.push(mark);\r\n\t                mark._setSegment(null);\r\n\t            }\r\n\t            marksArr.sort(function (a, b) { return a.options.xVal - b.options.xVal; });\r\n\t            var trend = chart.getTrend(trendName);\r\n\t            var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function (a, b) { return a - b; }));\r\n\t            for (var markInd = 0; markInd < marksArr.length; markInd++) {\r\n\t                marksArr[markInd]._setSegment(points[markInd]);\r\n\t            }\r\n\t        }\r\n\t        this.calclulateMarksPositions();\r\n\t        this.ee.emit(EVENTS[EVENTS.CHANGE]);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getTrendMarks = function (trendName) {\r\n\t        var trendMarks = [];\r\n\t        for (var markName in this.items) {\r\n\t            if (this.items[markName].options.trendName != trendName)\r\n\t                continue;\r\n\t            trendMarks.push(this.items[markName]);\r\n\t        }\r\n\t        return trendMarks;\r\n\t    };\r\n\t    TrendsMarksPlugin.NAME = 'TrendsMarks';\r\n\t    TrendsMarksPlugin.providedWidgets = [TrendsMarksWidget_1.TrendsMarksWidget];\r\n\t    return TrendsMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.TrendsMarksPlugin = TrendsMarksPlugin;\r\n\tvar TrendMark = (function () {\r\n\t    function TrendMark(chart, options) {\r\n\t        this.row = 0;\r\n\t        this.options = options;\r\n\t        this.chart = chart;\r\n\t    }\r\n\t    /**\r\n\t     * only for internal usage\r\n\t     */\r\n\t    TrendMark.prototype._setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        if (!segment)\r\n\t            return;\r\n\t        var trend = this.chart.getTrend(this.options.trendName);\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            this.xVal = segment.endXVal;\r\n\t            this.yVal = segment.endYVal;\r\n\t        }\r\n\t        else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.maxYVal;\r\n\t        }\r\n\t        else {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.minYVal;\r\n\t        }\r\n\t    };\r\n\t    TrendMark.prototype._setOffset = function (offset) {\r\n\t        this.offset = offset;\r\n\t    };\r\n\t    TrendMark.prototype._setRow = function (row) {\r\n\t        this.row = row;\r\n\t    };\r\n\t    return TrendMark;\r\n\t}());\r\n\texports.TrendMark = TrendMark;\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(35);\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar LinearFilter = THREE.LinearFilter;\r\n\tvar NearestFilter = THREE.NearestFilter;\r\n\t/**\r\n\t * widget for drawing trends marks for all trends\r\n\t */\r\n\tvar TrendsMarksWidget = (function (_super) {\r\n\t    __extends(TrendsMarksWidget, _super);\r\n\t    function TrendsMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsMarksWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendMarksWidget;\r\n\t    };\r\n\t    TrendsMarksWidget.widgetName = \"TrendsMarks\";\r\n\t    return TrendsMarksWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsMarksWidget = TrendsMarksWidget;\r\n\t/**\r\n\t * widget for drawing trend marks for one trend\r\n\t */\r\n\tvar TrendMarksWidget = (function (_super) {\r\n\t    __extends(TrendMarksWidget, _super);\r\n\t    function TrendMarksWidget(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.marksWidgets = {};\r\n\t        this.object3D = new Object3D();\r\n\t        this.onMarksChange();\r\n\t    }\r\n\t    TrendMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.getTrendsMarksPlugin().onChange(function () { return _this.onMarksChange(); }));\r\n\t        this.bindEvent(this.chart.screen.onTransformationEvent(function (event) { return _this.onScreenTransformationEvent(event); }));\r\n\t    };\r\n\t    TrendMarksWidget.prototype.getTrendsMarksPlugin = function () {\r\n\t        return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onMarksChange = function () {\r\n\t        var marksItems = this.getTrendsMarksPlugin().getItems();\r\n\t        var widgets = this.marksWidgets;\r\n\t        var actualMarksNames = [];\r\n\t        for (var markName in marksItems) {\r\n\t            actualMarksNames.push(markName);\r\n\t            if (!widgets[markName])\r\n\t                this.createMarkWidget(marksItems[markName]);\r\n\t        }\r\n\t        for (var markName in this.marksWidgets) {\r\n\t            if (actualMarksNames.indexOf(markName) !== -1)\r\n\t                continue;\r\n\t            this.destroyMarkWidget(markName);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.createMarkWidget = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var markWidget = new TrendMarkWidget(this.chart, mark);\r\n\t        this.marksWidgets[mark.options.name] = markWidget;\r\n\t        this.object3D.add(markWidget.getObject3D());\r\n\t    };\r\n\t    TrendMarksWidget.prototype.destroyMarkWidget = function (markName) {\r\n\t        this.object3D.remove(this.marksWidgets[markName].getObject3D());\r\n\t        delete this.marksWidgets[markName];\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onScreenTransformationEvent = function (event) {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onScreenTransformationEventHandler(event);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onZoomFrame = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onZoomFrameHandler();\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onSegmentsAnimate = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onSegmentsAnimate();\r\n\t        }\r\n\t    };\r\n\t    return TrendMarksWidget;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendMarksWidget = TrendMarksWidget;\r\n\t/**\r\n\t * widget for drawing one trend mark\r\n\t */\r\n\tvar TrendMarkWidget = (function () {\r\n\t    function TrendMarkWidget(chart, trendMark) {\r\n\t        this.chart = chart;\r\n\t        this.mark = trendMark;\r\n\t        this.initObject();\r\n\t        this.show();\r\n\t    }\r\n\t    TrendMarkWidget.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var options = this.mark.options;\r\n\t        var width = options.width, height = options.height;\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(width, height, function (ctx) {\r\n\t            options.onRender(_this, ctx, _this.chart);\r\n\t        });\r\n\t        // make text sharp when screen is not transforming\r\n\t        switch (options.textureFilter) {\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.AUTO:\r\n\t                texture.magFilter = this.chart.screen.transformationInProgress ? LinearFilter : NearestFilter;\r\n\t                break;\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.LINEAR:\r\n\t                texture.magFilter = LinearFilter;\r\n\t                break;\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.NEAREST:\r\n\t                texture.magFilter = NearestFilter;\r\n\t                break;\r\n\t        }\r\n\t        texture.needsUpdate = true;\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.markMesh = new Mesh(new THREE.PlaneGeometry(width, height), material);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.markMesh;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onSegmentsAnimate = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onZoomFrameHandler = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onScreenTransformationEventHandler = function (event) {\r\n\t        var texture = this.markMesh.material.map;\r\n\t        // make text sharp when screen is not transforming\r\n\t        if (this.mark.options.textureFilter !== TrendsMarksPlugin_1.TEXTURE_FILTER.AUTO)\r\n\t            return;\r\n\t        texture.magFilter = (event == three_charts_1.TRANSFORMATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.updatePosition = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        var mark = this.mark;\r\n\t        var screen = this.chart.screen;\r\n\t        var posX = screen.getPointOnXAxis(mark.xVal);\r\n\t        var posY = screen.getPointOnYAxis(mark.yVal);\r\n\t        this.markMesh.position.set(posX, posY, 0);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.show = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        this.updatePosition();\r\n\t        this.markMesh.scale.set(0.01, 0.01, 1);\r\n\t        this.chart.animationManager\r\n\t            .animate(1000, this.mark.options.ease)\r\n\t            .from(this.markMesh.scale)\r\n\t            .to({ x: 1, y: 1 });\r\n\t    };\r\n\t    return TrendMarkWidget;\r\n\t}());\r\n\texports.TrendMarkWidget = TrendMarkWidget;\r\n\texports.DEFAULT_RENDERER = function (trendMarkWidget, ctx, chart) {\r\n\t    var mark = trendMarkWidget.mark;\r\n\t    var options = mark.options;\r\n\t    var isTopSide = options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\r\n\t    var color = options.color !== void 0 ?\r\n\t        new three_charts_1.Color(options.color) :\r\n\t        new three_charts_1.Color(chart.getTrend(options.trendName).getOptions().lineColor);\r\n\t    var rgbaColor = color.getTransparent(0.5).rgbaStr;\r\n\t    var width = options.width, height = options.height;\r\n\t    var centerX = Math.round(width / 2);\r\n\t    var centerY = Math.round(height / 2);\r\n\t    var font = chart.state.font.m;\r\n\t    var textOffset = parseInt(font);\r\n\t    var textPosX = centerX;\r\n\t    var textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\r\n\t    // draw rect\r\n\t    ctx.fillStyle = rgbaColor;\r\n\t    ctx.strokeStyle = rgbaColor;\r\n\t    ctx.fillRect(0, isTopSide ? 0 : height, width, isTopSide ? textOffset * 2 : -textOffset * 2);\r\n\t    // draw dot\r\n\t    ctx.beginPath();\r\n\t    ctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\r\n\t    ctx.fill();\r\n\t    // draw line\r\n\t    var lineEndY = textPosY;\r\n\t    ctx.beginPath();\r\n\t    ctx.moveTo(centerX, centerY);\r\n\t    ctx.lineTo(centerX, lineEndY);\r\n\t    ctx.stroke();\r\n\t    // draw text\r\n\t    ctx.beginPath();\r\n\t    ctx.textAlign = 'center';\r\n\t    ctx.font = font;\r\n\t    ctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\r\n\t    ctx.fillText(options.title, Math.round(textPosX), Math.round(textPosY));\r\n\t    // uncomment to preview mark rect\r\n\t    // ctx.rect(0, 0, width, height);\r\n\t    // ctx.stroke();\r\n\t};\r\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(38));\r\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar ANIMATION_TIME = 1000;\r\n\tvar ANIMATION_DELAY = 300;\r\n\t/**\r\n\t * widget adds blinking beacon on trends end\r\n\t * activated when trend.hasBeacon = true\r\n\t */\r\n\tvar TrendsBeaconWidget = (function (_super) {\r\n\t    __extends(TrendsBeaconWidget, _super);\r\n\t    function TrendsBeaconWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsBeaconWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendBeacon;\r\n\t    };\r\n\t    TrendsBeaconWidget.widgetName = 'TrendsBeacon';\r\n\t    return TrendsBeaconWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsBeaconWidget = TrendsBeaconWidget;\r\n\tvar TrendBeacon = (function (_super) {\r\n\t    __extends(TrendBeacon, _super);\r\n\t    function TrendBeacon(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    TrendBeacon.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendBeacon.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendBeacon.prototype.onTrendChange = function () {\r\n\t        this.updatePosition();\r\n\t        this.animate();\r\n\t    };\r\n\t    TrendBeacon.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.chart.onScroll(function () { return _this.updatePosition(); }));\r\n\t    };\r\n\t    TrendBeacon.prototype.initObject = function () {\r\n\t        // add beacon\r\n\t        var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendBeacon.createTexture(), transparent: true }));\r\n\t        this.setInitialState();\r\n\t        // add dot\r\n\t        light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({ map: TrendBeacon.createTexture() })));\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t    };\r\n\t    TrendBeacon.prototype.animate = function () {\r\n\t        var _this = this;\r\n\t        if (!this.chart.state.animations.enabled)\r\n\t            return;\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t        this.setInitialState();\r\n\t        var mesh = this.mesh;\r\n\t        var animationObject = {\r\n\t            scale: mesh.scale.x,\r\n\t            opacity: mesh.material.opacity\r\n\t        };\r\n\t        this.animation = this.chart.animationManager\r\n\t            .animate(ANIMATION_TIME)\r\n\t            .withDelay(ANIMATION_DELAY)\r\n\t            .from(animationObject)\r\n\t            .to({ scale: 1, opacity: 0 })\r\n\t            .onTick(function (animationObject) {\r\n\t            mesh.scale.set(animationObject.scale, animationObject.scale, 1);\r\n\t            mesh.material.opacity = animationObject.opacity;\r\n\t        }).then(function () {\r\n\t            _this.setInitialState();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.setInitialState = function () {\r\n\t        this.mesh.scale.set(0.2, 0.2, 1);\r\n\t        this.mesh.material.opacity = 1;\r\n\t    };\r\n\t    TrendBeacon.prototype.onDestroy = function () {\r\n\t        _super.prototype.onDestroy.call(this);\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t    };\r\n\t    TrendBeacon.createTexture = function () {\r\n\t        var h = 32, w = 32;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\r\n\t            ctx.fillStyle = 'white';\r\n\t            ctx.fill();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.onTransformationFrame = function () {\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.onSegmentsAnimate = function (trendsSegments) {\r\n\t        this.segment = trendsSegments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var xVal, yVal;\r\n\t        var currentAnimationState = this.segment.currentAnimationState;\r\n\t        if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            xVal = currentAnimationState.endXVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        else {\r\n\t            xVal = currentAnimationState.xVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\r\n\t        var screenWidth = chart.state.width;\r\n\t        var x = endPointVector.x;\r\n\t        var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\r\n\t        if (screenX < 0) {\r\n\t            x = chart.screen.getPointByScreenX(0);\r\n\t        }\r\n\t        if (screenX > screenWidth)\r\n\t            x = chart.screen.getPointByScreenX(screenWidth);\r\n\t        this.mesh.position.set(x, endPointVector.y, 0.1);\r\n\t    };\r\n\t    return TrendBeacon;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendBeacon = TrendBeacon;\r\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(40));\r\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\t/**\r\n\t * widget adds loading indicator\r\n\t * activated when animations enabled\r\n\t */\r\n\tvar TrendsLoadingWidget = (function (_super) {\r\n\t    __extends(TrendsLoadingWidget, _super);\r\n\t    function TrendsLoadingWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLoadingWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLoading;\r\n\t    };\r\n\t    TrendsLoadingWidget.widgetName = 'TrendsLoading';\r\n\t    return TrendsLoadingWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsLoadingWidget = TrendsLoadingWidget;\r\n\tvar TrendLoading = (function (_super) {\r\n\t    __extends(TrendLoading, _super);\r\n\t    function TrendLoading(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.isActive = false;\r\n\t        // add beacon\r\n\t        this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendLoading.createTexture(), transparent: true }));\r\n\t        this.deactivate();\r\n\t    }\r\n\t    TrendLoading.widgetIsEnabled = function (trendOptions, chart) {\r\n\t        return trendOptions.enabled && chart.state.animations.enabled;\r\n\t    };\r\n\t    TrendLoading.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendLoading.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.onPrependRequest(function () { return _this.activate(); }));\r\n\t    };\r\n\t    TrendLoading.prototype.prependData = function () {\r\n\t        this.deactivate();\r\n\t    };\r\n\t    TrendLoading.prototype.activate = function () {\r\n\t        var mesh = this.mesh;\r\n\t        mesh.material.opacity = 1;\r\n\t        mesh.rotation.z = 0;\r\n\t        var animation = TweenLite.to(this.mesh.rotation, 0.5, { z: Math.PI * 2 });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animation.restart();\r\n\t        });\r\n\t        this.animation = animation;\r\n\t        this.isActive = true;\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.deactivate = function () {\r\n\t        this.animation && this.animation.kill();\r\n\t        this.mesh.material.opacity = 0;\r\n\t        this.isActive = false;\r\n\t    };\r\n\t    TrendLoading.createTexture = function () {\r\n\t        var h = 64, w = 64;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t            ctx.lineWidth = 5;\r\n\t            var center = h / 2;\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, 0, Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 3, 0, Math.PI * 2);\r\n\t            ctx.stroke();\r\n\t        });\r\n\t    };\r\n\t    TrendLoading.prototype.onZoomFrame = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.updatePosition = function () {\r\n\t        if (!this.isActive)\r\n\t            return;\r\n\t        var trend = this.trend;\r\n\t        // set new widget position\r\n\t        var segment = trend.segmentsManager.getStartSegment();\r\n\t        var x, y;\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            x = segment.currentAnimationState.startXVal;\r\n\t            y = segment.currentAnimationState.startYVal;\r\n\t        }\r\n\t        else {\r\n\t            x = segment.currentAnimationState.xVal - segment.maxLength;\r\n\t            y = segment.currentAnimationState.yVal;\r\n\t        }\r\n\t        var pointVector = this.chart.screen.getPointOnChart(x, y);\r\n\t        this.mesh.position.set(pointVector.x, pointVector.y, 0);\r\n\t    };\r\n\t    return TrendLoading;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendLoading = TrendLoading;\r\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(42));\r\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar CANVAS_WIDTH = 150;\r\n\tvar CANVAS_HEIGHT = 64;\r\n\tvar OFFSET_X = 15;\r\n\tvar TrendsIndicatorWidget = (function (_super) {\r\n\t    __extends(TrendsIndicatorWidget, _super);\r\n\t    function TrendsIndicatorWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsIndicatorWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendIndicator;\r\n\t    };\r\n\t    TrendsIndicatorWidget.widgetName = 'TrendsIndicator';\r\n\t    return TrendsIndicatorWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsIndicatorWidget = TrendsIndicatorWidget;\r\n\tvar TrendIndicator = (function (_super) {\r\n\t    __extends(TrendIndicator, _super);\r\n\t    function TrendIndicator(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.onTrendChange();\r\n\t    }\r\n\t    TrendIndicator.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasIndicator;\r\n\t    };\r\n\t    TrendIndicator.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendIndicator.prototype.onTrendChange = function () {\r\n\t        // update canvas value\r\n\t        var trendData = this.trend.getData();\r\n\t        var lastItem = trendData[trendData.length - 1];\r\n\t        var texture = this.mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        // uncomment to preview indicator rect\r\n\t        // ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t        // ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendIndicator.prototype.initObject = function () {\r\n\t        var color = new three_charts_1.Color(this.trend.getOptions().lineColor);\r\n\t        var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.font = \"15px Arial\";\r\n\t            ctx.fillStyle = color.rgbaStr;\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\r\n\t    };\r\n\t    TrendIndicator.prototype.onTransformationFrame = function () {\r\n\t        // set new widget position\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.onSegmentsAnimate = function (segments) {\r\n\t        // set new widget position\r\n\t        this.segment = segments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\r\n\t        var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\r\n\t        var screenWidth = chart.state.width;\r\n\t        var x = endPointVector.x + OFFSET_X;\r\n\t        var y = endPointVector.y;\r\n\t        var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\r\n\t        var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\r\n\t        if (indicatorIsOutOfScreen) {\r\n\t            if (screenX < 0)\r\n\t                x = chart.screen.getPointByScreenX(0) + 20;\r\n\t            if (screenX > screenWidth)\r\n\t                x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\r\n\t            y -= 25;\r\n\t        }\r\n\t        this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\r\n\t    };\r\n\t    return TrendIndicator;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendIndicator = TrendIndicator;\r\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar AxisMarksWidget_1 = __webpack_require__(44);\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    lineWidth: 3,\r\n\t    width: 200,\r\n\t    value: 0,\r\n\t    stickToEdges: false,\r\n\t    color: 'rgba(#45a9e1, 0.6)',\r\n\t    title: '',\r\n\t    ease: three_charts_1.EASING.Quadratic.Out,\r\n\t    easeSpeed: 500,\r\n\t    opacity: 1\r\n\t};\r\n\tvar AxisMark = (function (_super) {\r\n\t    __extends(AxisMark, _super);\r\n\t    function AxisMark(axisMarkPlugin, chart) {\r\n\t        _super.call(this);\r\n\t        this.axisMarkPlugin = axisMarkPlugin;\r\n\t        this.chart = chart;\r\n\t        three_charts_1.Utils.patch(this, AXIS_MARK_DEFAULT_OPTIONS);\r\n\t    }\r\n\t    AxisMark.prototype.remove = function () {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [{ _id: this.getId() }], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMark.prototype.update = function (newOptions) {\r\n\t        var options = three_charts_1.Utils.deepMerge({ _id: this.getId() }, newOptions);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [options], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    return AxisMark;\r\n\t}(three_charts_1.UniqCollectionItem));\r\n\texports.AxisMark = AxisMark;\r\n\tvar AxisMarksPlugin = (function (_super) {\r\n\t    __extends(AxisMarksPlugin, _super);\r\n\t    function AxisMarksPlugin(axisMarksPluginOptions) {\r\n\t        var _this = this;\r\n\t        _super.call(this, axisMarksPluginOptions);\r\n\t        this.marksCollection = new three_charts_1.UniqCollection({\r\n\t            createInstance: function () { return new AxisMark(_this, _this.chart); }\r\n\t        });\r\n\t    }\r\n\t    AxisMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onStateChangedHandler(this.getOptions());\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.onStateChangedHandler = function (axisMarksOptions) {\r\n\t        this.marksCollection.patch(axisMarksOptions);\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.createMark = function (markOptions) {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = [markOptions], _a) });\r\n\t        return this.marksCollection.getLast();\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMarksPlugin.NAME = 'AxisMarks';\r\n\t    AxisMarksPlugin.providedWidgets = [AxisMarksWidget_1.AxisMarksWidget];\r\n\t    return AxisMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.AxisMarksPlugin = AxisMarksPlugin;\r\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(32);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(43);\r\n\t/**\r\n\t * widget for shows marks on axis\r\n\t */\r\n\tvar AxisMarksWidget = (function (_super) {\r\n\t    __extends(AxisMarksWidget, _super);\r\n\t    function AxisMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.axisMarksWidgets = [];\r\n\t    }\r\n\t    AxisMarksWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t        this.axisMarksPlugin.marksCollection.forEach(function (mark) { return _this.createAxisMarkWidget(mark); });\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisMarksWidget.prototype.createAxisMarkWidget = function (axisMark) {\r\n\t        var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\r\n\t        this.axisMarksWidgets.push(axisMarkWidget);\r\n\t        this.object3D.add(axisMarkWidget.getObject3D());\r\n\t    };\r\n\t    AxisMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var marksCollection = this.axisMarksPlugin.marksCollection;\r\n\t        this.bindEvent(this.chart.screen.onTransformationFrame(function () { return _this.updateMarksPositions(); }), this.chart.onResize(function () { return _this.updateMarksPositions(); }), this.chart.onChange(function (changedProps) { return _this.onStateChangeHandler(changedProps); }), marksCollection.onCreate(function (mark) { return _this.createAxisMarkWidget(mark); }), marksCollection.onUpdate(function (mark, changedOptions) { return _this.onMarkUpdateHandler(mark, changedOptions); }), marksCollection.onRemove(function (mark) { return _this.onMarkRemoveHandler(mark); }));\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkUpdateHandler = function (mark, changedOptions) {\r\n\t        var widget = this.axisMarksWidgets.find(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        widget.update(changedOptions);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkRemoveHandler = function (mark) {\r\n\t        var ind = this.axisMarksWidgets.findIndex(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        var widget = this.axisMarksWidgets[ind];\r\n\t        this.object3D.remove(widget.getObject3D());\r\n\t        this.axisMarksWidgets.splice(ind, 1);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.updateMarksPositions = function () {\r\n\t        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            widget.updatePosition();\r\n\t        }\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            widget.onStateChangeHandler(changedProps);\r\n\t        }\r\n\t    };\r\n\t    AxisMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarksWidget.widgetName = 'AxisMarks';\r\n\t    return AxisMarksWidget;\r\n\t}(three_charts_1.ChartWidget));\r\n\texports.AxisMarksWidget = AxisMarksWidget;\r\n\texports.DEFAULT_AXIS_MARK_RENDERER = function (axisMarkWidget, ctx, width, height, chart) {\r\n\t    var markOptions = axisMarkWidget.axisMark;\r\n\t    var color = new three_charts_1.Color(markOptions.color);\r\n\t    var font = chart.state.font.l;\r\n\t    var offset = parseInt(font);\r\n\t    ctx.clearRect(0, 0, width, height);\r\n\t    ctx.beginPath();\r\n\t    ctx.strokeStyle = color.rgbaStr;\r\n\t    ctx.fillStyle = color.rgbaStr;\r\n\t    ctx.lineWidth = markOptions.lineWidth;\r\n\t    ctx.font = font;\r\n\t    if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t        ctx.moveTo(width / 2, 0);\r\n\t        ctx.lineTo(width / 2, height);\r\n\t        ctx.stroke();\r\n\t        ctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\r\n\t        if (axisMarkWidget.displayedValue) {\r\n\t            ctx.fillText(axisMarkWidget.displayedValue, width / 2 + offset, offset * 4);\r\n\t        }\r\n\t    }\r\n\t    else {\r\n\t        ctx.moveTo(0, height / 2);\r\n\t        ctx.lineTo(width, height / 2);\r\n\t        ctx.stroke();\r\n\t        ctx.fillText(markOptions.title, offset, height / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2));\r\n\t    }\r\n\t};\r\n\tvar AxisMarkWidget = (function () {\r\n\t    function AxisMarkWidget(chart, axisMark) {\r\n\t        this.isStickOnTop = false;\r\n\t        this.isStickOnBottom = false;\r\n\t        this.displayedValue = '';\r\n\t        this.height = 0;\r\n\t        this.width = 0;\r\n\t        this.frameValue = 0;\r\n\t        this.frameOpacity = 0;\r\n\t        this.chart = chart;\r\n\t        this.axisMark = axisMark;\r\n\t        this.frameOpacity = axisMark.opacity;\r\n\t        this.frameValue = axisMark.value;\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    AxisMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.initObject = function () {\r\n\t        this.width = this.chart.state.width;\r\n\t        this.height = this.chart.state.height;\r\n\t        var markOptions = this.axisMark;\r\n\t        if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t            this.width = markOptions.width;\r\n\t        }\r\n\t        else {\r\n\t            this.height = markOptions.width;\r\n\t        }\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(this.width, this.height);\r\n\t        this.object3D = new Mesh(new THREE.PlaneGeometry(this.width, this.height), new MeshBasicMaterial({ map: texture, transparent: true }));\r\n\t        this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        var needRender = this.axisMark.needRender && this.axisMark.needRender(this, changedProps, this.chart);\r\n\t        needRender && this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.render = function () {\r\n\t        var markOptions = this.axisMark;\r\n\t        var mesh = this.getObject3D();\r\n\t        var texture = mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        var renderer = markOptions.renderer ? markOptions.renderer : exports.DEFAULT_AXIS_MARK_RENDERER;\r\n\t        if (markOptions.displayedValue)\r\n\t            this.displayedValue = markOptions.displayedValue(this, this.chart);\r\n\t        renderer(this, ctx, this.width, this.height, this.chart);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.update = function (options) {\r\n\t        var _this = this;\r\n\t        var mark = this.axisMark;\r\n\t        this.animation && this.animation.stop();\r\n\t        this.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\r\n\t            .from([this.frameValue, this.frameOpacity])\r\n\t            .to([mark.value, mark.opacity])\r\n\t            .onTick(function (arr) {\r\n\t            _this.frameValue = arr[0];\r\n\t            _this.frameOpacity = arr[1];\r\n\t            _this.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarkWidget.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var screen = chart.screen;\r\n\t        var mark = this.axisMark;\r\n\t        var isXAxis = mark.axisType == three_charts_1.AXIS_TYPE.X;\r\n\t        var hasStickMode = mark.stickToEdges;\r\n\t        var _a = chart.state, width = _a.width, height = _a.height;\r\n\t        var val = this.frameValue;\r\n\t        var opactity = this.frameOpacity;\r\n\t        var material = this.object3D.material;\r\n\t        material.opacity = opactity;\r\n\t        if (isXAxis) {\r\n\t            // TODO: make stickToEdges mode for AXIS_TYPE.X\r\n\t            this.object3D.position.x = screen.getPointOnXAxis(val);\r\n\t            this.object3D.position.y = screen.options.scrollY + height / 2;\r\n\t        }\r\n\t        else {\r\n\t            var bottomVal = screen.getBottomVal();\r\n\t            var topVal = screen.getTopVal();\r\n\t            var needToStickOnTop = hasStickMode && val > topVal;\r\n\t            var needToStickOnBottom = hasStickMode && val < bottomVal;\r\n\t            var centerYVal = screen.getCenterYVal();\r\n\t            this.object3D.position.x = screen.options.scrollX + width / 2;\r\n\t            if (needToStickOnTop) {\r\n\t                this.isStickOnTop = true;\r\n\t                this.object3D.position.y = screen.getTop();\r\n\t            }\r\n\t            else if (needToStickOnBottom) {\r\n\t                this.isStickOnBottom = true;\r\n\t                this.object3D.position.y = screen.getBottom();\r\n\t            }\r\n\t            else {\r\n\t                this.isStickOnBottom = this.isStickOnTop = false;\r\n\t                this.object3D.position.y = screen.getPointOnYAxis(val);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return AxisMarkWidget;\r\n\t}());\r\n\texports.AxisMarkWidget = AxisMarkWidget;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4ca07fd65cd4b0cc2ace\n **/","\n// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE, AXIS_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/src/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/src/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/src/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/src/TrendsIndicatorWidget';\nimport { AxisMarksPlugin } from \"../plugins/src/AxisMarksPlugin/AxisMarksPlugin\";\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chartView: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\txVal: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\n\t\t\tcolor: Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\n\t\t\torientation: orientation,\n\t\t\t// textureFilter: TEXTURE_FILTER.NEAREST,\n\t\t\tuserData: {\n\t\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\t\tdescriptionColor: descriptionColor\n\t\t\t}\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchartView = new ChartView({\n\t\tyAxis: {\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 0, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000,\n\t\t\t\tmargin: {end: 200},\n\t\t\t},\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\t// minSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]}),\n\t\tnew AxisMarksPlugin([\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.startTime, name: 'test', title: 'DEADLINE'},\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', color: '#ff6600'},\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', color: '#005187', displayedValue: () => String((new Date()).getSeconds()), needRender: () => true},\n\n\t\t])\n\t]\n\t);\n\n\n\tlet axisMarks = chartView.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\n\tsetTimeout(() => {\n\t\tlet mark = axisMarks.createMark({axisType: AXIS_TYPE.Y, value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', color: '#29874b', stickToEdges: true});\n\t\tsetInterval(() => {\n\t\t\tmark.update({value: mark.value + 1})\n\t\t}, 1000);\n\t}, 1000);\n\t\n\t(<any>window)['chartView'] = chartView;\n\n\tvar mainTrend = chartView.getTrend('main');\n\t// var deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\n\t// var closeMark = chartView.chart.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\t// var closeValue = closeMark.options.value;\n\t\t// if (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t// \tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t// \tcloseMark.setOptions({value: closeValue + 20000})\n\t\t// }\n\t\tvar markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\tif (markOptions) setTimeout(() => {\n\t\t\tlet trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t\ttrendsMarks.createMark(markOptions);\n\t\t}, 500);\n\t});\n\n\n\n\tvar i = 0;\n\n\tchartView.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chartView.getTrend('main').appendData([val]);\n\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchartView.chart.setState({autoScroll: false});\n\t\t\tchartView.chart.zoomToRange(range);\n\t\t\tchartView.chart.scrollToEnd().then(() => {\n\t\t\t\tchartView.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","export declare type TEase = (k: number) => number;\n\n/**\n * Easing from tween.js lib https://github.com/tweenjs/tween.js\n **/\nexport const EASING = {\n\n\tLinear: {\n\n\t\tNone: function (k: number) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - EASING.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn EASING.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Easing.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 32\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __webpack_require__(2);\n        __export(__webpack_require__(9));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(11));\n        __export(__webpack_require__(30));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(31));\n        __export(__webpack_require__(10));\n        __export(__webpack_require__(25));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(12));\n        __export(__webpack_require__(21));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(3);\n        exports.isPlainObject = __webpack_require__(4);\n        exports.EE2 = __webpack_require__(6);\n        var es6_promise_1 = __webpack_require__(7);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(8);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(5);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Plugin_1 = __webpack_require__(10);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var Chart_1 = __webpack_require__(14);\n        var Widget_1 = __webpack_require__(22);\n        var Utils_1 = __webpack_require__(11);\n        var AxisWidget_1 = __webpack_require__(23);\n        var GridWidget_1 = __webpack_require__(24);\n        var TrendsGradientWidget_1 = __webpack_require__(26);\n        var TrendsLineWidget_1 = __webpack_require__(28);\n        var TrendsCandleWidget_1 = __webpack_require__(29);\n        var deps_1 = __webpack_require__(13);\n        var Color_1 = __webpack_require__(25);\n        var ChartBlankView = function() {\n            function ChartBlankView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartBlankView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartBlankView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartBlankView.prototype.render = function() {\n                this.chart.render();\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartBlankView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartBlankView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartBlankView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartBlankView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartBlankView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartBlankView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartBlankView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartBlankView.prototype.setupCamera = function() {\n                var camSettings = this.chart.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.screen.options);\n            };\n            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartBlankView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartBlankView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartBlankView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                this.chart.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n            ChartBlankView.preinstalledWidgets = [];\n            ChartBlankView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartBlankView;\n        }();\n        exports.ChartBlankView = ChartBlankView;\n        var ChartView = function(_super) {\n            __extends(ChartView, _super);\n            function ChartView() {\n                _super.apply(this, arguments);\n            }\n            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n            return ChartView;\n        }(ChartBlankView);\n        exports.ChartView = ChartView;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var EventEmmiter_1 = __webpack_require__(12);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChangedHandler = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(2);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.patch = function(objectToPatch, patch) {\n                var idKey = \"_id\";\n                for (var key in patch) {\n                    if (!patch.hasOwnProperty(key)) continue;\n                    if (objectToPatch[key]) {\n                        if (Array.isArray(patch[key])) {\n                            var _loop_1 = function(patchItem) {\n                                var subObject = objectToPatch[key].find(function(item) {\n                                    return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n                                });\n                                if (subObject) {\n                                    this_1.patch(subObject, patchItem);\n                                } else {\n                                    objectToPatch[key].push(patchItem);\n                                }\n                            };\n                            var this_1 = this;\n                            for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\n                                var patchItem = _a[_i];\n                                _loop_1(patchItem);\n                            }\n                            continue;\n                        } else if (typeof patch[key] === \"object\" && objectToPatch[key] != void 0) {\n                            if (patch[idKey] && Object.keys(patch).length == 1) {\n                                delete objectToPatch[key];\n                            } else {\n                                this.patch(objectToPatch[key], patch[key]);\n                            }\n                            continue;\n                        }\n                    }\n                    objectToPatch[key] = patch[key];\n                }\n                if (objectToPatch[\"_onUpdate\"]) objectToPatch[\"_onUpdate\"].call(objectToPatch, patch);\n                return objectToPatch;\n            };\n            Utils.travers = function(object, fn) {\n                for (var key in object) {\n                    if (!object.hasOwnProperty(key)) continue;\n                    var allowTraverseDeeper = fn(object[key]);\n                    var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == \"object\";\n                    if (canTraverseDeeper) this.travers(object[key], fn);\n                }\n            };\n            Utils.setIdsToArrayItems = function(sourceObject) {\n                var idKey = \"_id\";\n                Utils.travers(sourceObject, function(item) {\n                    if (!Array.isArray(item)) return true;\n                    var arr = item;\n                    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                        var obj = arr_1[_i];\n                        if (typeof obj !== \"object\" || Array.isArray(obj)) continue;\n                        if (!obj[idKey]) obj[idKey] = Utils.getUid();\n                    }\n                });\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn && fn(ctx, width, height);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createNearestTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.magFilter = THREE.NearestFilter;\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.binarySearchInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((hi - lo) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                    if (arr[lo][key] == num) {\n                        return lo;\n                    } else if (arr[hi][key] == num) {\n                        return hi;\n                    }\n                }\n                return -1;\n            };\n            Utils.binarySearch = function(arr, num, key) {\n                var ind = this.binarySearchInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else if (typeof srcObject[key] == \"function\") {\n                        dstObject[key] = srcObject[key];\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(13);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Utils_1 = __webpack_require__(11);\n        var TrendsManager_1 = __webpack_require__(17);\n        var Screen_1 = __webpack_require__(18);\n        var interfaces_1 = __webpack_require__(19);\n        var deps_1 = __webpack_require__(2);\n        var AnimationManager_1 = __webpack_require__(20);\n        var Easing_1 = __webpack_require__(21);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            DRAG_STATE_CHAGED: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: 250,\n                        scrollSpeed: 1e3,\n                        scrollEase: Easing_1.EASING.Quadratic.Out,\n                        zoomEase: Easing_1.EASING.Quadratic.Out,\n                        autoScrollSpeed: 1100,\n                        autoScrollEase: Easing_1.EASING.Linear.None\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280,\n                    inertialScroll: true\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.isDestroyed = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.patch(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.animationManager = new AnimationManager_1.AnimationManager();\n                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n                this.screen = new Screen_1.Screen(this);\n                this.bindEvents();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n                this.isDestroyed = true;\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onDragStateChanged = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.render = function() {\n                this.animationManager.tick();\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                if (this.isDestroyed) {\n                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n                }\n                var stateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (stateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                newState = Utils_1.Utils.deepMerge({}, newState);\n                Utils_1.Utils.setIdsToArrayItems(newState);\n                this.state = Utils_1.Utils.patch(this.state, newState);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.patch({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.patch(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        Utils_1.Utils.patch(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        Utils_1.Utils.patch(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        Utils_1.Utils.patch(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        Utils_1.Utils.patch(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                Utils_1.Utils.patch(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n                this.onDragStateChanged(function(dragState) {\n                    return _this.onDragStateChangedHandler(dragState);\n                });\n                this.ee.on(\"animationsChange\", function(animationOptions) {\n                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n                    }\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n                var state = this.state;\n                if (!state.autoScroll || state.cursor.dragMode) return;\n                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleXVal = this.screen.getScreenRightVal();\n                    var paddingRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n                    var marginRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.margin.end);\n                    var currentScroll = state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n                        return;\n                    }\n                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n                var state = this.state;\n                if (!state.inertialScroll || isDragMode) return;\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime);\n                });\n            };\n            Chart.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getValueOnXAxis = function(x) {\n                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.getValueByScreenX = function(x) {\n                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.getValueByScreenY = function(y) {\n                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            Chart.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Chart.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Chart.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            Chart.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.state.width);\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var TrendSegmentsManager_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var deps_1 = __webpack_require__(2);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chart = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n                this.bindEvents();\n            }\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chart;\n                chartState.onDragStateChanged(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chart.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chart.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chart.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chart;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(11);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chart, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.unbindList = [];\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                }), this.chart.onZoom(function() {\n                    return _this.onZoomHandler();\n                }), this.chart.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }) ];\n            };\n            TrendSegmentsManager.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbind) {\n                    return unbind();\n                });\n            };\n            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.unbindEvents();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chart.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chart.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) {\n                            initialAnimationState = initialSegment.createAnimationState();\n                        }\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chart.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chart.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var _this = this;\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                trend.segmentsManager.onRebuild(function() {\n                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                });\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(12);\n        (function(TRANSFORMATION_EVENT) {\n            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n        })(exports.TRANSFORMATION_EVENT || (exports.TRANSFORMATION_EVENT = {}));\n        var TRANSFORMATION_EVENT = exports.TRANSFORMATION_EVENT;\n        var SCREEN_EVENTS = {\n            ZOOM_FRAME: \"zoomFrame\",\n            SCROLL_FRAME: \"scrollFrame\",\n            TRANSFORMATION_FRAME: \"transformationFrame\",\n            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n        };\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.transformationInProgress = false;\n                this.chart = chartState;\n                var _a = chartState.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chart.state.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chart.state, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n            };\n            Screen.prototype.onTransformationEvent = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n                var transformationStarted = hasActiveAnimations && !this.transformationInProgress;\n                var transformationFinished = !hasActiveAnimations && this.transformationInProgress;\n                if (transformationStarted) {\n                    this.transformationInProgress = true;\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.STARTED);\n                }\n                if (transformationFinished) {\n                    this.transformationInProgress = false;\n                }\n                if (!this.transformationInProgress) {\n                    this.options.scrollX = options.scrollX = Math.round(this.options.scrollX);\n                    this.options.scrollY = options.scrollY = Math.round(this.options.scrollY);\n                }\n                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n                if (transformationFinished) {\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.FINISHED);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var chart = this.chart;\n                var isDragMode = chart.state.cursor.dragMode;\n                var animations = chart.state.animations;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                var range = chart.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                if (isDragMode && !chart.state.inertialScroll) time = 0;\n                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.options.scrollX).to(targetX).onTick(function(value) {\n                    _this.transform({\n                        scrollX: value\n                    });\n                });\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var range = chart.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.scrollY).to(targetY).onTick(function(value) {\n                    _this.transform({\n                        scrollY: value\n                    });\n                });\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var targetZoom = chart.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomX).to(targetZoom).onTick(function(value) {\n                    _this.transform({\n                        zoomX: value\n                    });\n                });\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var targetZoom = chart.state.yAxis.range.zoom;\n                var animations = chart.state.animations;\n                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomY).to(targetZoom).onTick(function(value) {\n                    _this.transform({\n                        zoomY: value\n                    });\n                });\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chart.state.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chart.state.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chart.state.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chart.state.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chart.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chart.state.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chart.state.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chart.state.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chart.state.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Easing_1 = __webpack_require__(21);\n        var AnimationManager = function() {\n            function AnimationManager() {\n                this.isAnimationsEnabled = true;\n                this.animations = [];\n                this.lastTickTime = Date.now();\n            }\n            AnimationManager.prototype.animate = function(time, timingFunction) {\n                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n                this.animations.push(animation);\n                return animation;\n            };\n            AnimationManager.prototype.animateObj = function(source, target) {};\n            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n                this.isAnimationsEnabled = isEnabled;\n            };\n            AnimationManager.prototype.tick = function() {\n                var now = Date.now();\n                var animations = this.animations;\n                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n                    var animation = animations[i_1];\n                    if (this.isAnimationsEnabled) {\n                        animation.tick(now);\n                    } else {\n                        animation.completeAndStop();\n                    }\n                }\n                var i = animations.length;\n                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n                this.lastTickTime = now;\n            };\n            AnimationManager.prototype.hasActiveAnimations = function() {\n                return this.animations.length > 0;\n            };\n            return AnimationManager;\n        }();\n        exports.AnimationManager = AnimationManager;\n        var Animation = function() {\n            function Animation(animationManager, time, createdTime, easing) {\n                if (easing === void 0) {\n                    easing = Easing_1.EASING.Quadratic.Out;\n                }\n                this.animationManager = animationManager;\n                this.time = time;\n                this.createdTime = createdTime;\n                this.easing = easing;\n                this.progress = 0;\n                this.delay = 0;\n                this.isFinished = false;\n                this.isStopped = false;\n                this.startTime = createdTime;\n            }\n            Animation.prototype.tick = function(now) {\n                if (!this.isStopped) {\n                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n                    this.setProgress(progress);\n                }\n            };\n            Animation.prototype.from = function(sourceObj) {\n                if (typeof sourceObj == \"object\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = {};\n                    var sourceIteralable = sourceObj;\n                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n                        this.initialObj[key] = sourceIteralable[key];\n                    }\n                } else if (typeof sourceObj == \"number\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = sourceObj;\n                }\n                return this;\n            };\n            Animation.prototype.to = function(targetObj) {\n                this.targetObject = targetObj;\n                if (typeof this.initialObj == \"object\") {\n                    var initialIteralable = this.initialObj;\n                    for (var key in this.targetObject) {\n                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                    var targetIteralable = this.targetObject;\n                    for (var key in initialIteralable) {\n                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                }\n                return this;\n            };\n            Animation.prototype.onTick = function(onTickCb) {\n                this.onTickCb = onTickCb;\n                return this;\n            };\n            Animation.prototype.then = function(onFinishCb) {\n                this.onFinishCb = onFinishCb;\n                return this;\n            };\n            Animation.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Animation.prototype.completeAndStop = function() {\n                this.setProgress(1);\n            };\n            Animation.prototype.withDelay = function(delay) {\n                this.delay = delay;\n                this.startTime = this.createdTime + delay;\n                return this;\n            };\n            Animation.prototype.setProgress = function(progress) {\n                if (progress < 0) return;\n                progress = Math.min(progress, 1);\n                this.progress = progress;\n                var k = this.easing(progress);\n                if (typeof this.sourceObj == \"number\") {\n                    var initialVal = this.initialObj;\n                    var targetVal = this.targetObject;\n                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n                } else if (this.sourceObj && this.targetObject) {\n                    for (var key in this.initialObj) {\n                        var initialVal = this.initialObj[key];\n                        var targetVal = this.targetObject[key];\n                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n                    }\n                }\n                if (progress == 1) {\n                    this.isStopped = true;\n                    this.isFinished = true;\n                }\n                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n            };\n            return Animation;\n        }();\n        exports.Animation = Animation;\n    }, function(module, exports) {\n        \"use strict\";\n        exports.EASING = {\n            Linear: {\n                None: function(k) {\n                    return k;\n                }\n            },\n            Quadratic: {\n                In: function(k) {\n                    return k * k;\n                },\n                Out: function(k) {\n                    return k * (2 - k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k;\n                    }\n                    return -.5 * (--k * (k - 2) - 1);\n                }\n            },\n            Cubic: {\n                In: function(k) {\n                    return k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k + 2);\n                }\n            },\n            Quartic: {\n                In: function(k) {\n                    return k * k * k * k;\n                },\n                Out: function(k) {\n                    return 1 - --k * k * k * k;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k;\n                    }\n                    return -.5 * ((k -= 2) * k * k * k - 2);\n                }\n            },\n            Quintic: {\n                In: function(k) {\n                    return k * k * k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k * k * k + 2);\n                }\n            },\n            Sinusoidal: {\n                In: function(k) {\n                    return 1 - Math.cos(k * Math.PI / 2);\n                },\n                Out: function(k) {\n                    return Math.sin(k * Math.PI / 2);\n                },\n                InOut: function(k) {\n                    return .5 * (1 - Math.cos(Math.PI * k));\n                }\n            },\n            Exponential: {\n                In: function(k) {\n                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n                },\n                Out: function(k) {\n                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    if ((k *= 2) < 1) {\n                        return .5 * Math.pow(1024, k - 1);\n                    }\n                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n                }\n            },\n            Circular: {\n                In: function(k) {\n                    return 1 - Math.sqrt(1 - k * k);\n                },\n                Out: function(k) {\n                    return Math.sqrt(1 - --k * k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n                    }\n                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n                }\n            },\n            Elastic: {\n                In: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                },\n                Out: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    k *= 2;\n                    if (k < 1) {\n                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                    }\n                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n                }\n            },\n            Back: {\n                In: function(k) {\n                    var s = 1.70158;\n                    return k * k * ((s + 1) * k - s);\n                },\n                Out: function(k) {\n                    var s = 1.70158;\n                    return --k * k * ((s + 1) * k + s) + 1;\n                },\n                InOut: function(k) {\n                    var s = 1.70158 * 1.525;\n                    if ((k *= 2) < 1) {\n                        return .5 * (k * k * ((s + 1) * k - s));\n                    }\n                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n                }\n            },\n            Bounce: {\n                In: function(k) {\n                    return 1 - exports.EASING.Bounce.Out(1 - k);\n                },\n                Out: function(k) {\n                    if (k < 1 / 2.75) {\n                        return 7.5625 * k * k;\n                    } else if (k < 2 / 2.75) {\n                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n                    } else if (k < 2.5 / 2.75) {\n                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n                    } else {\n                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n                    }\n                },\n                InOut: function(k) {\n                    if (k < .5) {\n                        return exports.EASING.Bounce.In(k * 2) * .5;\n                    }\n                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n                }\n            }\n        };\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(22);\n        var GridWidget_1 = __webpack_require__(24);\n        var Utils_1 = __webpack_require__(11);\n        var interfaces_1 = __webpack_require__(19);\n        var Color_1 = __webpack_require__(25);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.Color(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(22);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(11);\n        var Color_1 = __webpack_require__(25);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var Color = function() {\n            function Color(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            Color.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            Color.numberToHexStr = function(value) {\n                var result = value.toString(16);\n                return \"#\" + \"0\".repeat(6 - result.length) + result;\n            };\n            Color.prototype.set = function(color) {\n                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n                var colorStr = color;\n                var rgba = Color.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = Color.numberToHexStr(this.value);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            Color.prototype.getTransparent = function(opacity) {\n                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n            };\n            return Color;\n        }();\n        exports.Color = Color;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(11);\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Color_1 = __webpack_require__(25);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i < segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(22);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(11);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(15);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(11);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var UniqCollectionItem = function() {\n            function UniqCollectionItem() {}\n            UniqCollectionItem.prototype.getId = function() {\n                return this._id;\n            };\n            return UniqCollectionItem;\n        }();\n        exports.UniqCollectionItem = UniqCollectionItem;\n        var ID_KEY = \"_id\";\n        var EVENTS = {\n            CREATE: \"create\",\n            UPDATE: \"update\",\n            REMOVE: \"remove\"\n        };\n        var UniqCollection = function() {\n            function UniqCollection(options) {\n                this.items = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n            }\n            UniqCollection.prototype.patch = function(models) {\n                var options = this.options;\n                for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n                    var model = models_1[_i];\n                    var id = model[ID_KEY];\n                    if (!id) Utils_1.Utils.error(\"Collection item without id detected\");\n                    var ind = this.getItemInd(id);\n                    var item = this.items[ind];\n                    var justCreated = false;\n                    if (!item) {\n                        justCreated = true;\n                        item = options.createInstance(model);\n                        this.items.push(item);\n                    }\n                    if (Object.keys(model).length > 1) {\n                        var prevProps = {};\n                        Utils_1.Utils.copyProps(item, prevProps, model);\n                        Utils_1.Utils.patch(item, model);\n                        justCreated && this.ee.emit(EVENTS.CREATE, item);\n                        this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\n                    } else {\n                        this.items.splice(ind, 1);\n                        this.ee.emit(EVENTS.REMOVE, item);\n                    }\n                }\n            };\n            UniqCollection.prototype.getItem = function(id) {\n                return this.items[this.getItemInd(id)];\n            };\n            UniqCollection.prototype.getLast = function() {\n                return this.items[this.items.length - 1];\n            };\n            UniqCollection.prototype.forEach = function(cb) {\n                for (var key in this.items) cb(this.items[key]);\n            };\n            UniqCollection.prototype.filter = function(cb) {\n                var result = [];\n                this.forEach(function(item) {\n                    return cb(item) && result.push(item);\n                });\n                return result;\n            };\n            UniqCollection.prototype.onCreate = function(cb) {\n                return this.ee.subscribe(EVENTS.CREATE, cb);\n            };\n            UniqCollection.prototype.onUpdate = function(cb) {\n                return this.ee.subscribe(EVENTS.UPDATE, cb);\n            };\n            UniqCollection.prototype.onRemove = function(cb) {\n                return this.ee.subscribe(EVENTS.REMOVE, cb);\n            };\n            UniqCollection.prototype.getItemInd = function(id) {\n                return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\n            };\n            return UniqCollection;\n        }();\n        exports.UniqCollection = UniqCollection;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(24));\n        __export(__webpack_require__(27));\n        __export(__webpack_require__(28));\n        __export(__webpack_require__(26));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 33\n ** module chunks = 1\n **/","export * from './TrendsMarksPlugin';\nexport * from './TrendsMarksWidget';\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/index.ts\n **/","\nimport Vector3 = THREE.Vector3;\nimport { ChartPlugin, ChartWidget, TrendSegment, TREND_TYPE, Utils, Chart, TColor, TEase } from 'three-charts';\nimport { TrendsMarksWidget, DEFAULT_RENDERER, TrendMarkWidget } from './TrendsMarksWidget';\nimport { EASING } from \"../../../src/Easing\";\n\nexport enum TREND_MARK_SIDE {TOP, BOTTOM}\nexport enum EVENTS {CHANGE}\nexport enum TEXTURE_FILTER {AUTO, LINEAR, NEAREST}\nexport type TTrendsMarksPluginOptions = {items: ITrendMarkOptions[]};\n\nexport interface ITrendMarkOptions {\n\ttrendName: string,\n\txVal: number,\n\ttitle?: string,\n\tname?: string,\n\tcolor?: TColor,\n\torientation?: TREND_MARK_SIDE,\n\twidth?: number,\n\theight?: number,\n\ttextureFilter?: TEXTURE_FILTER\n\t/**\n\t * space between marks\n\t */\n\tmargin?: number,\n\t/**\n\t * custom render function\n\t */\n\tonRender?: (\n\t\ttrendMarkWidget: TrendMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\tchart: Chart\n\t) => any,\n\tease?: TEase,\n\teaseSpeed?: number,\n\tuserData?: any\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: ITrendMarkOptions = {\n\ttrendName: '',\n\ttitle: '',\n\tcolor: 'rgba(#0099d9, 0.5)',\n\txVal: 0,\n\torientation: TREND_MARK_SIDE.TOP,\n\twidth: 105,\n\theight: 100,\n\tmargin: 10,\n\tease: EASING.Elastic.Out,\n\teaseSpeed: 1000,\n\ttextureFilter: TEXTURE_FILTER.AUTO,\n\tonRender: DEFAULT_RENDERER\n};\n\n\nexport class TrendsMarksPlugin extends ChartPlugin<TTrendsMarksPluginOptions> {\n\tstatic NAME = 'TrendsMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [TrendsMarksWidget];\n\n\tprivate items: {[name: string]: TrendMark} = {};\n\tprivate rects: {[name: string]: number[]} = {};\n\n\tconstructor(trendsMarksPluginOptions: TTrendsMarksPluginOptions) {\n\t\tsuper(trendsMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t\tthis.bindEvents();\n\t}\n\n\n\tprotected onStateChangedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n\tcreateMark(options: ITrendMarkOptions) {\n\t\tvar marksOptions = this.getOptions().items;\n\t\tvar newMarkOptions = marksOptions.concat([options]);\n\t\tthis.chart.setState({pluginsState: {[this.name]: {items: newMarkOptions}}});\n\t}\n\n\tonChange(cb: () => any) {\n\t\treturn this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.trendsManager.onSegmentsRebuilded(() => {\n\t\t\tthis.updateMarksSegments()\n\t\t});\n\t\tthis.chart.screen.onZoomFrame(() => this.calclulateMarksPositions());\n\t}\n\n\tprivate onMarksChangeHandler() {\n\t\tvar trendsMarksOptions = this.getOptions().items;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let options of trendsMarksOptions) {\n\t\t\tvar marks = this.items;\n\n\t\t\t// set mark name\n\t\t\tif (!options.name) {\n\t\t\t\toptions.name = Utils.getUid().toString();\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t} else if (marks[options.name]) {\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\n\t\t\tlet mark = new TrendMark(this.chart, options);\n\t\t\tmarks[options.name] = mark;\n\t\t}\n\n\t\t// delete not relevant marks\n\t\tfor (let markName in this.items) {\n\t\t\tif (actualMarksNames.indexOf(markName) != -1) continue;\n\t\t\tdelete this.items[markName];\n\t\t}\n\t\tthis.updateMarksSegments();\n\t}\n\n\n\tprivate calclulateMarksPositions() {\n\t\tthis.rects = {};\n\t\tfor (let markName in this.items) {\n\t\t\tthis.createMarkRect(this.items[markName]);\n\t\t}\n\t}\n\n\tprivate createMarkRect(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\n\t\tlet chart = this.chart;\n\t\tlet options = mark.options;\n\t\tlet {width, height, name} = options;\n\t\tlet left = chart.getPointOnXAxis(mark.xVal) - width / 2;\n\t\tlet top = chart.getPointOnYAxis(mark.yVal);\n\t\tlet isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t\tlet newOffset: number;\n\t\tlet row = 0;\n\n\t\tif (isTopSideMark) {\n\t\t\ttop += height;\n\t\t}\n\n\t\tlet markRect = [left, top, width, height];\n\t\tlet hasIntersection = false;\n\t\tdo {\n\t\t\tfor (let markName in this.rects) {\n\t\t\t\tlet rect = this.rects[markName];\n\t\t\t\thasIntersection = Utils.rectsIntersect(rect, markRect);\n\t\t\t\tif (!hasIntersection) continue;\n\t\t\t\tif (isTopSideMark) {\n\t\t\t\t\tmarkRect[1] = rect[1] + markRect[3] + options.margin;\n\t\t\t\t} else {\n\t\t\t\t\tmarkRect[1] = rect[1] - rect[3] - options.margin;\n\t\t\t\t}\n\t\t\t\trow++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (hasIntersection);\n\n\t\tif (isTopSideMark) {\n\t\t\tnewOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\n\t\t} else {\n\t\t\tnewOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\n\t\t}\n\n\t\tmark._setOffset(newOffset);\n\t\tmark._setRow(row);\n\t\tthis.rects[name] = markRect;\n\t}\n\n\tprivate updateMarksSegments() {\n\t\tlet chart = this.chart;\n\t\tlet trends = chart.trendsManager.trends;\n\t\tfor (let trendName in trends) {\n\t\t\tvar marks = this.getTrendMarks(trendName);\n\t\t\tvar marksArr: TrendMark[] = [];\n\t\t\tvar xVals: number[] = [];\n\t\t\tfor (let markName in marks) {\n\t\t\t\tlet mark = marks[markName];\n\t\t\t\txVals.push(mark.options.xVal);\n\t\t\t\tmarksArr.push(mark);\n\t\t\t\tmark._setSegment(null);\n\t\t\t}\n\t\t\tmarksArr.sort((a, b) => a.options.xVal - b.options.xVal);\n\t\t\tlet trend = chart.getTrend(trendName);\n\t\t\tlet points = trend.segmentsManager.getSegmentsForXValues(xVals.sort((a, b) => a - b));\n\t\t\tfor (let markInd = 0; markInd < marksArr.length; markInd++) {\n\t\t\t\tmarksArr[markInd]._setSegment(points[markInd]);\n\t\t\t}\n\t\t}\n\t\tthis.calclulateMarksPositions();\n\t\tthis.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t}\n\n\tprivate getTrendMarks(trendName: string): TrendMark[] {\n\t\tlet trendMarks: TrendMark[] = [];\n\t\tfor (let markName in this.items) {\n\t\t\tif (this.items[markName].options.trendName != trendName) continue;\n\t\t\ttrendMarks.push(this.items[markName]);\n\t\t}\n\t\treturn trendMarks;\n\t}\n\n}\n\nexport class TrendMark {\n\toptions: ITrendMarkOptions;\n\tsegment: TrendSegment;\n\txVal: number;\n\tyVal: number;\n\toffset: number;\n\trow = 0;\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart, options: ITrendMarkOptions) {\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t}\n\n\n\t/**\n\t * only for internal usage\n\t */\n\t_setSegment(segment: TrendSegment) {\n\t\tthis.segment = segment;\n\t\tif (!segment) return;\n\n\t\tlet trend = this.chart.getTrend(this.options.trendName);\n\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tthis.xVal = segment.endXVal;\n\t\t\tthis.yVal = segment.endYVal;\n\t\t} else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.maxYVal;\n\t\t} else {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.minYVal;\n\t\t}\n\t}\n\n\t_setOffset(offset: number) {\n\t\tthis.offset = offset;\n\t}\n\n\t_setRow(row: number) {\n\t\tthis.row = row;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts\n **/","import {Chart, Utils, TrendsWidget, TrendWidget, TRANSFORMATION_EVENT, Color } from 'three-charts';\nimport { TrendMark, TREND_MARK_SIDE, TrendsMarksPlugin, TEXTURE_FILTER } from \"./TrendsMarksPlugin\";\nimport Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport LineSegments = THREE.LineSegments;\nimport LineDashedMaterial = THREE.LineDashedMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport LinearFilter = THREE.LinearFilter;\nimport NearestFilter = THREE.NearestFilter;\n\n\n/**\n * widget for drawing trends marks for all trends\n */\nexport class TrendsMarksWidget extends TrendsWidget<TrendMarksWidget> {\n\tstatic widgetName = \"TrendsMarks\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendMarksWidget;\n\t}\n}\n\n/**\n * widget for drawing trend marks for one trend\n */\nexport class TrendMarksWidget extends TrendWidget {\n\n\tprivate object3D: Object3D;\n\tprivate marksWidgets: {[name: string]: TrendMarkWidget} = {};\n\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.object3D = new Object3D();\n\t\tthis.onMarksChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\t\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.getTrendsMarksPlugin().onChange(() => this.onMarksChange()));\n\t\tthis.bindEvent(this.chart.screen.onTransformationEvent((event) => this.onScreenTransformationEvent(event)));\n\t}\n\n\tprivate getTrendsMarksPlugin(): TrendsMarksPlugin {\n\t\treturn this.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t}\n\n\tprivate onMarksChange() {\n\t\tlet marksItems = this.getTrendsMarksPlugin().getItems();\n\t\tlet widgets = this.marksWidgets;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let markName in marksItems) {\n\t\t\tactualMarksNames.push(markName);\n\t\t\tif (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t\t}\n\t\tfor (let markName in this.marksWidgets) {\n\t\t\tif (actualMarksNames.indexOf(markName) !== -1) continue;\n\t\t\tthis.destroyMarkWidget(markName);\n\t\t}\n\n\t}\n\t\n\tprivate createMarkWidget(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\t\tlet markWidget = new TrendMarkWidget(this.chart, mark);\n\t\tthis.marksWidgets[mark.options.name] = markWidget;\n\t\tthis.object3D.add(markWidget.getObject3D());\n\t}\n\n\tprivate destroyMarkWidget(markName: string) {\n\t\tthis.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t\tdelete this.marksWidgets[markName];\n\t}\n\n\tprivate onScreenTransformationEvent(event: TRANSFORMATION_EVENT) {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onScreenTransformationEventHandler(event);\n\t\t}\n\t}\n\n\tprotected onZoomFrame() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onZoomFrameHandler();\n\t\t}\n\t}\n\n\tprotected onSegmentsAnimate() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onSegmentsAnimate();\n\t\t}\n\t}\n\n}\n\n/**\n * widget for drawing one trend mark\n */\nexport class TrendMarkWidget {\n\tmark: TrendMark;\n\tprivate chart: Chart;\n\tprivate markMesh: Mesh;\n\n\tconstructor(chart: Chart, trendMark: TrendMark) {\n\t\tthis.chart = chart;\n\t\tthis.mark = trendMark;\n\t\tthis.initObject();\n\t\tthis.show();\n\t}\n\t\n\tprotected initObject() {\n\t\tlet options = this.mark.options;\n\t\tlet {width, height} = options;\n\n\t\tlet texture = Utils.createNearestTexture(width, height, (ctx) => {\n\t\t\toptions.onRender(this, ctx, this.chart);\n\t\t});\n\n\t\t// make text sharp when screen is not transforming\n\t\tswitch (options.textureFilter) {\n\t\t\tcase TEXTURE_FILTER.AUTO:\n\t\t\t\ttexture.magFilter = this.chart.screen.transformationInProgress ? LinearFilter : NearestFilter;\n\t\t\t\tbreak;\n\t\t\tcase TEXTURE_FILTER.LINEAR:\n\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\tbreak;\n\t\t\tcase TEXTURE_FILTER.NEAREST:\n\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\tbreak;\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tthis.markMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(width, height),\n\t\t\tmaterial\n\t\t);\n\n\n\t}\n\n\tgetObject3D() {\n\t\treturn this.markMesh;\n\t}\n\n\tonSegmentsAnimate() {\n\t\tthis.updatePosition();\n\t}\n\n\tonZoomFrameHandler() {\n\t\tthis.updatePosition();\n\t}\n\n\tonScreenTransformationEventHandler(event: TRANSFORMATION_EVENT) {\n\t\tlet texture = (this.markMesh.material as MeshBasicMaterial).map;\n\n\t\t// make text sharp when screen is not transforming\n\t\tif (this.mark.options.textureFilter !== TEXTURE_FILTER.AUTO) return;\n\t\ttexture.magFilter = (event == TRANSFORMATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.mark.segment) return;\n\t\tlet mark = this.mark;\n\t\tlet screen = this.chart.screen;\n\n\t\tlet posX = screen.getPointOnXAxis(mark.xVal);\n\t\tlet posY = screen.getPointOnYAxis(mark.yVal);\n\n\t\tthis.markMesh.position.set(posX, posY, 0);\n\t}\n\n\tprivate show() {\n\t\tif (!this.mark.segment) return;\n\t\tthis.updatePosition();\n\t\tthis.markMesh.scale.set(0.01, 0.01, 1);\n\n\t\tthis.chart.animationManager\n\t\t\t.animate(1000, this.mark.options.ease)\n\t\t\t.from(this.markMesh.scale as Object)\n\t\t\t.to({x: 1, y: 1});\n\t}\n}\n\nexport const DEFAULT_RENDERER = (\n\ttrendMarkWidget: TrendMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\tchart: Chart\n) =>  {\n\n\tlet mark = trendMarkWidget.mark;\n\tlet options = mark.options;\n\tlet isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\n\tlet color = options.color !== void 0 ?\n\t\tnew Color(options.color) :\n\t\tnew Color(chart.getTrend(options.trendName).getOptions().lineColor);\n\tlet rgbaColor = color.getTransparent(0.5).rgbaStr;\n\tlet {width, height} = options;\n\tlet centerX = Math.round(width / 2);\n\tlet centerY =  Math.round(height / 2);\n\tlet font = chart.state.font.m;\n\tlet textOffset = parseInt(font);\n\tlet textPosX = centerX;\n\tlet textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\n\n\t// draw rect\n\tctx.fillStyle = rgbaColor;\n\tctx.strokeStyle = rgbaColor;\n\tctx.fillRect(\n\t\t0,\n\t\tisTopSide ? 0 : height,\n\t\twidth,\n\t\tisTopSide ? textOffset * 2 : -textOffset * 2\n\t);\n\n\t// draw dot\n\tctx.beginPath();\n\tctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\n\tctx.fill();\n\n\t// draw line\n\tlet lineEndY = textPosY ;\n\tctx.beginPath();\n\tctx.moveTo(centerX, centerY);\n\tctx.lineTo(centerX, lineEndY);\n\tctx.stroke();\n\n\t// draw text\n\tctx.beginPath();\n\tctx.textAlign = 'center';\n\tctx.font = font;\n\tctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\n\tctx.fillText(\n\t\toptions.title,\n\t\tMath.round(textPosX),\n\t\tMath.round(textPosY)\n\t);\n\n\n\n\t// uncomment to preview mark rect\n\t// ctx.rect(0, 0, width, height);\n\t// ctx.stroke();\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts\n **/","export * from './TrendsBeaconWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\n\nimport {\n\tUtils,\n\tChart,\n\tIChartState,\n\tTrendsWidget,\n\tTrendWidget,\n\tTrendSegment,\n\tTrendSegmentsManager,\n\tITrendOptions,\n\tAnimation,\n\tTREND_TYPE\n} from 'three-charts';\n\nconst ANIMATION_TIME = 1000;\nconst ANIMATION_DELAY = 300;\n\n/**\n * widget adds blinking beacon on trends end\n * activated when trend.hasBeacon = true\n */\nexport class TrendsBeaconWidget extends TrendsWidget<TrendBeacon> {\n\tstatic widgetName = 'TrendsBeacon';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendBeacon;\n\t}\n}\n\nexport class TrendBeacon extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animated: boolean;\n\tprivate segment: TrendSegment;\n\tprivate animation: Animation<any>;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\tthis.updatePosition();\n\t\tthis.animate();\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.chart.onScroll(() => this.updatePosition()));\n\t}\n\n\tprivate initObject() {\n\n\t\t// add beacon\n\t\tlet light = this.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture(), transparent: true})\n\t\t);\n\n\t\tthis.setInitialState();\n\n\t\t// add dot\n\t\tlight.add(new Mesh(\n\t\t\tnew PlaneBufferGeometry(5, 5),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture()})\n\t\t));\n\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t}\n\n\tprivate animate() {\n\t\tif (!this.chart.state.animations.enabled) return;\n\n\t\tif (this.animation) this.animation.stop();\n\t\tthis.setInitialState();\n\n\t\tlet mesh = this.mesh;\n\t\tlet animationObject = {\n\t\t\tscale: mesh.scale.x,\n\t\t\topacity: mesh.material.opacity\n\t\t};\n\n\t\tthis.animation = this.chart.animationManager\n\t\t\t.animate(ANIMATION_TIME)\n\t\t\t.withDelay(ANIMATION_DELAY)\n\t\t\t.from(animationObject)\n\t\t\t.to({scale: 1, opacity: 0})\n\t\t\t.onTick(animationObject => {\n\t\t\t\tmesh.scale.set(animationObject.scale, animationObject.scale, 1);\n\t\t\t\tmesh.material.opacity = animationObject.opacity\n\t\t\t}).then(() => {\n\t\t\t\tthis.setInitialState();\n\t\t\t});\n\t}\n\n\tprivate setInitialState() {\n\t\tthis.mesh.scale.set(0.2, 0.2, 1);\n\t\tthis.mesh.material.opacity = 1;\n\t}\n\n\tonDestroy() {\n\t\tsuper.onDestroy();\n\t\tif (this.animation) this.animation.stop();\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 32, w = 32;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.fill();\n\t\t});\n\t}\n\n\tprotected onTransformationFrame() {\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(trendsSegments: TrendSegmentsManager) {\n\t\tthis.segment = trendsSegments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tvar chart = this.chart;\n\t\tvar xVal: number, yVal: number;\n\t\tvar currentAnimationState = this.segment.currentAnimationState;\n\t\tif (this.trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\txVal = currentAnimationState.endXVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t} else {\n\t\t\txVal = currentAnimationState.xVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t}\n\t\tvar endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n\t\tvar screenWidth = chart.state.width;\n\t\tvar x = endPointVector.x;\n\t\tvar screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t\tif (screenX < 0) {\n\t\t\tx = chart.screen.getPointByScreenX(0);\n\t\t}\n\t\tif (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n\t\tthis.mesh.position.set(x, endPointVector.y, 0.1);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts\n **/","export * from './TrendsLoadingWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport { TrendWidget, TrendsWidget, ITrendOptions, TREND_TYPE, Chart, Utils } from 'three-charts';\n\n/**\n * widget adds loading indicator\n * activated when animations enabled\n */\nexport class TrendsLoadingWidget extends TrendsWidget<TrendLoading> {\n\tstatic widgetName = 'TrendsLoading';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLoading;\n\t}\n}\n\nexport class TrendLoading extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animation: TweenLite;\n\tprivate isActive = false;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chart: Chart) {\n\t\treturn trendOptions.enabled && chart.state.animations.enabled;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\t// add beacon\n\t\tthis.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendLoading.createTexture(), transparent: true})\n\t\t);\n\t\tthis.deactivate();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tbindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.onPrependRequest(() => this.activate()));\n\t}\n\n\tprependData() {\n\t\tthis.deactivate();\n\t}\n\n\tprivate activate() {\n\t\tvar mesh = this.mesh;\n\t\tmesh.material.opacity = 1;\n\t\tmesh.rotation.z = 0;\n\t\tvar animation = TweenLite.to(this.mesh.rotation, 0.5, {z: Math.PI * 2});\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimation.restart();\n\t\t});\n\t\tthis.animation = animation;\n\t\tthis.isActive = true;\n\t\tthis.updatePosition();\n\t}\n\n\tprivate deactivate() {\n\t\tthis.animation && this.animation.kill();\n\t\tthis.mesh.material.opacity = 0;\n\t\tthis.isActive = false;\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 64, w = 64;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t\tctx.lineWidth = 5;\n\t\t\tvar center = h / 2;\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(center, center, 22, 0, Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 3, 0, Math.PI * 2);\n\t\t\tctx.stroke();\n\t\t});\n\t}\n\n\tprotected onZoomFrame() {\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.isActive) return;\n\t\tlet trend = this.trend;\n\t\t// set new widget position\n\t\tlet segment = trend.segmentsManager.getStartSegment();\n\t\tlet x: number, y: number;\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tx = segment.currentAnimationState.startXVal;\n\t\t\ty = segment.currentAnimationState.startYVal;\n\t\t} else {\n\t\t\tx = segment.currentAnimationState.xVal - segment.maxLength;\n\t\t\ty = segment.currentAnimationState.yVal\n\t\t}\n\t\tlet pointVector = this.chart.screen.getPointOnChart(x, y);\n\t\tthis.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts\n **/","export * from './TrendsIndicatorWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport {\n\tTrendSegmentsManager,\n\tTrendSegment,\n\tColor,\n\tChart,\n\tUtils,\n\tTrendWidget,\n\tTrendsWidget,\n\tITrendOptions\n} from \"three-charts\";\n\nconst CANVAS_WIDTH = 150;\nconst CANVAS_HEIGHT = 64;\nconst OFFSET_X = 15;\n\nexport class TrendsIndicatorWidget extends TrendsWidget<TrendIndicator> {\n\tstatic widgetName = 'TrendsIndicator';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendIndicator;\n\t}\n}\n\nexport class TrendIndicator extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate segment: TrendSegment;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasIndicator;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.initObject();\n\t\tthis.onTrendChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\t// update canvas value\n\t\tlet trendData = this.trend.getData();\n\t\tvar lastItem = trendData[trendData.length - 1];\n\t\tvar texture = (this.mesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\t// uncomment to preview indicator rect\n\t\t// ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t\t// ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\tctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate initObject() {\n\t\tvar color = new Color(this.trend.getOptions().lineColor);\n\t\tvar texture = Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, (ctx) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.font = \"15px Arial\";\n\t\t\tctx.fillStyle = color.rgbaStr;\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t});\n\n\t\tvar material = new THREE.MeshBasicMaterial({map: texture, side: THREE.FrontSide});\n\t\tmaterial.transparent = true;\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT),\n\t\t\tmaterial\n\t\t);\n\t}\n\n\tprotected onTransformationFrame() {\n\t\t// set new widget position\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t\t// set new widget position\n\t\tthis.segment = segments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tvar chart = this.chart;\n\t\tvar {endXVal: segmentEndXVal, endYVal: segmentEndYVal} = this.segment.currentAnimationState;\n\t\tvar endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t\tvar screenWidth = chart.state.width;\n\t\tvar x = endPointVector.x + OFFSET_X;\n\t\tvar y = endPointVector.y;\n\n\t\tvar screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t\tvar indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t\tif (indicatorIsOutOfScreen) {\n\t\t\tif (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n\t\t\tif (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t\t\ty -= 25;\n\t\t}\n\t\tthis.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\n\t}\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts\n **/","\nimport {\n\tChartPlugin, ChartWidget, AXIS_TYPE, Utils, Chart, TColor, IChartState, UniqCollection,\n\tUniqCollectionItem, IIteralable, TEase, EASING\n} from 'three-charts';\nimport { AxisMarksWidget, AxisMarkWidget } from './AxisMarksWidget';\n\nexport declare type TAxisMarksPluginOptions = IAxisMarkOptions[];\n\nexport interface IAxisMarkOptions {\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\taxisType?: AXIS_TYPE;\n\tcolor?: TColor;\n\tlineWidth?: number;\n\twidth?: number;\n\tstickToEdges?: boolean;\n\tvalue?: number;\n\tdisplayedValue?: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData?: any;\n\tneedRender?: (axisMarkWidget: AxisMarkWidget, changedProps: IChartState, chart: Chart) => boolean,\n\tease?: TEase;\n\teaseSpeed?: number;\n\topacity?: number;\n\trenderer?: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: IAxisMarkOptions = {\n\tlineWidth: 3,\n\twidth: 200,\n\tvalue: 0,\n\tstickToEdges: false,\n\tcolor: 'rgba(#45a9e1, 0.6)',\n\ttitle: '',\n\tease: EASING.Quadratic.Out,\n\teaseSpeed: 500,\n\topacity: 1\n};\n\nexport class AxisMark extends UniqCollectionItem implements IAxisMarkOptions {\n\tname: string;\n\ttitle: string;\n\tdescription: string;\n\taxisType: AXIS_TYPE;\n\tcolor: TColor;\n\tlineWidth: number;\n\twidth: number;\n\tstickToEdges: boolean;\n\tvalue: number;\n\topacity: number;\n\tdisplayedValue: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData: any;\n\tneedRender: (axisMarkWidget: AxisMarkWidget, changedProps: IChartState, chart: Chart) => boolean;\n\tease?: TEase;\n\teaseSpeed?: number;\n\trenderer: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n\n\tconstructor (private axisMarkPlugin: AxisMarksPlugin, private chart: Chart) {\n\t\tsuper();\n\t\tUtils.patch(this as IIteralable, AXIS_MARK_DEFAULT_OPTIONS);\n\t}\n\n\tremove() {\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [{_id: this.getId()}]}});\n\t}\n\n\tupdate(newOptions: IAxisMarkOptions) {\n\t\tlet options = Utils.deepMerge({_id: this.getId()} as IAxisMarkOptions, newOptions);\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [options]}});\n\t}\n}\n\n\n\nexport class AxisMarksPlugin extends ChartPlugin<TAxisMarksPluginOptions> {\n\tstatic NAME = 'AxisMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [AxisMarksWidget];\n\n\tmarksCollection = new UniqCollection<AxisMark, IAxisMarkOptions>({\n\t\tcreateInstance: () => new AxisMark(this, this.chart)\n\t});\n\n\tconstructor(axisMarksPluginOptions: TAxisMarksPluginOptions) {\n\t\tsuper(axisMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onStateChangedHandler(this.getOptions());\n\t}\n\n\tprotected onStateChangedHandler(axisMarksOptions: IAxisMarkOptions[]) {\n\t\tthis.marksCollection.patch(axisMarksOptions);\n\t}\n\n\tcreateMark(markOptions: IAxisMarkOptions): AxisMark {\n\t\tthis.chart.setState({pluginsState: {[this.name]: [markOptions]}});\n\t\treturn this.marksCollection.getLast();\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts\n **/","import Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Mesh = THREE.Mesh;\nimport Texture = THREE.Texture;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\n\nimport { ChartWidget, Chart, Color, AXIS_TYPE, Utils, IChartState, Animation } from 'three-charts';\nimport { AxisMark, AxisMarksPlugin, IAxisMarkOptions } from \"./AxisMarksPlugin\";\nimport BufferGeometry = THREE.BufferGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\n\n/**\n * widget for shows marks on axis\n */\nexport class AxisMarksWidget extends ChartWidget {\n\tstatic widgetName = 'AxisMarks';\n\n\tprotected object3D: Object3D;\n\tprotected axisMarksWidgets: AxisMarkWidget[] = [];\n\tprotected axisMarksPlugin: AxisMarksPlugin;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\t\tthis.axisMarksPlugin.marksCollection.forEach(mark => this.createAxisMarkWidget(mark));\n\t\tthis.bindEvents();\n\t}\n\n\tprivate createAxisMarkWidget(axisMark: AxisMark) {\n\t\tvar axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n\t\tthis.axisMarksWidgets.push(axisMarkWidget);\n\t\tthis.object3D.add(axisMarkWidget.getObject3D());\n\t}\n\n\tprotected bindEvents() {\n\t\tlet marksCollection = this.axisMarksPlugin.marksCollection;\n\t\tthis.bindEvent(\n\t\t\tthis.chart.screen.onTransformationFrame(() => this.updateMarksPositions()),\n\t\t\tthis.chart.onResize(() => this.updateMarksPositions()),\n\t\t\tthis.chart.onChange((changedProps) => this.onStateChangeHandler(changedProps)),\n\t\t\tmarksCollection.onCreate((mark) => this.createAxisMarkWidget(mark)),\n\t\t\tmarksCollection.onUpdate((mark, changedOptions) => this.onMarkUpdateHandler(mark, changedOptions)),\n\t\t\tmarksCollection.onRemove((mark) => this.onMarkRemoveHandler(mark))\n\t\t);\n\t}\n\n\tprotected onMarkUpdateHandler(mark: AxisMark, changedOptions: IAxisMarkOptions) {\n\t\tlet widget = this.axisMarksWidgets.find(widget => widget.axisMark.getId() == mark.getId());\n\t\twidget.update(changedOptions);\n\t}\n\n\tprotected onMarkRemoveHandler(mark: AxisMark) {\n\t\tlet ind = this.axisMarksWidgets.findIndex(widget => widget.axisMark.getId() == mark.getId());\n\t\tlet widget = this.axisMarksWidgets[ind];\n\t\tthis.object3D.remove(widget.getObject3D());\n\t\tthis.axisMarksWidgets.splice(ind, 1);\n\t}\n\n\tprivate updateMarksPositions() {\n\t\tfor (let widget of this.axisMarksWidgets) widget.updatePosition();\n\t}\n\n\tprivate onStateChangeHandler(changedProps: IChartState) {\n\t\tfor (let widget of this.axisMarksWidgets) widget.onStateChangeHandler(changedProps);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n}\n\n\n\nexport const DEFAULT_AXIS_MARK_RENDERER = (\n\taxisMarkWidget: AxisMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\twidth: number,\n\theight: number,\n\tchart: Chart\n) => {\n\tlet markOptions = axisMarkWidget.axisMark;\n\tlet color = new Color(markOptions.color);\n\tlet font = chart.state.font.l;\n\tlet offset = parseInt(font);\n\tctx.clearRect(0,0, width, height);\n\tctx.beginPath();\n\tctx.strokeStyle = color.rgbaStr;\n\tctx.fillStyle = color.rgbaStr;\n\tctx.lineWidth = markOptions.lineWidth;\n\tctx.font = font;\n\n\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\tctx.moveTo(width / 2, 0);\n\t\tctx.lineTo(width / 2, height);\n\t\tctx.stroke();\n\t\tctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\n\t\tif (axisMarkWidget.displayedValue) {\n\t\t\tctx.fillText(axisMarkWidget.displayedValue, width / 2 + offset, offset * 4)\n\t\t}\n\t} else {\n\t\tctx.moveTo(0, height / 2);\n\t\tctx.lineTo(width, height / 2);\n\t\tctx.stroke();\n\t\tctx.fillText(markOptions.title, offset,\n\t\t\theight / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2)\n\t\t);\n\t}\n};\n\n\nexport class AxisMarkWidget {\n\taxisMark: AxisMark;\n\tisStickOnTop = false;\n\tisStickOnBottom = false;\n\tdisplayedValue = '';\n\theight = 0;\n\twidth = 0;\n\tframeValue = 0;\n\tframeOpacity = 0;\n\tanimation: Animation<number[]>;\n\tprotected object3D: Object3D;\n\tprotected chart: Chart;\n\n\n\tconstructor(chart: Chart, axisMark: AxisMark) {\n\t\tthis.chart = chart;\n\t\tthis.axisMark = axisMark;\n\t\tthis.frameOpacity = axisMark.opacity;\n\t\tthis.frameValue = axisMark.value;\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tinitObject() {\n\t\tthis.width = this.chart.state.width;\n\t\tthis.height = this.chart.state.height;\n\t\tlet markOptions = this.axisMark;\n\t\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\t\tthis.width = markOptions.width;\n\t\t} else {\n\t\t\tthis.height = markOptions.width;\n\t\t}\n\t\tlet texture = Utils.createNearestTexture(this.width, this.height);\n\n\t\tthis.object3D = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(this.width, this.height),\n\t\t\tnew MeshBasicMaterial({map: texture, transparent: true})\n\t\t);\n\n\t\tthis.render();\n\t}\n\n\tonStateChangeHandler(changedProps: IChartState) {\n\t\tlet needRender = this.axisMark.needRender && this.axisMark.needRender(this, changedProps, this.chart);\n\t\tneedRender && this.render();\n\t}\n\n\trender() {\n\t\tlet markOptions = this.axisMark;\n\t\tlet mesh = this.getObject3D() as Mesh;\n\t\tlet texture = (mesh.material as MeshBasicMaterial).map;\n\t\tlet ctx = (texture.image as HTMLCanvasElement).getContext('2d');\n\t\tlet renderer = markOptions.renderer ? markOptions.renderer : DEFAULT_AXIS_MARK_RENDERER;\n\t\tif (markOptions.displayedValue) this.displayedValue = markOptions.displayedValue(this, this.chart);\n\t\trenderer(this, ctx, this.width, this.height, this.chart);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tupdate(options: IAxisMarkOptions) {\n\t\tlet mark = this.axisMark;\n\t\tthis.animation && this.animation.stop();\n\t\tthis.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\n\t\t\t.from([this.frameValue, this.frameOpacity])\n\t\t\t.to([mark.value, mark.opacity])\n\t\t\t.onTick((arr) => {\n\t\t\t\tthis.frameValue = arr[0];\n\t\t\t\tthis.frameOpacity = arr[1];\n\t\t\t\tthis.updatePosition();\n\t\t\t})\n\t}\n\n\tupdatePosition()  {\n\t\tlet chart = this.chart;\n\t\tlet screen = chart.screen;\n\t\tlet mark = this.axisMark;\n\t\tlet isXAxis = mark.axisType == AXIS_TYPE.X;\n\t\tlet hasStickMode = mark.stickToEdges;\n\t\tlet {width, height} = chart.state;\n\t\tlet val = this.frameValue;\n\t\tlet opactity = this.frameOpacity;\n\t\tlet material = (this.object3D as Mesh).material;\n\n\t\tmaterial.opacity = opactity;\n\n\t\tif (isXAxis) {\n\t\t\t// TODO: make stickToEdges mode for AXIS_TYPE.X\n\t\t\tthis.object3D.position.x = screen.getPointOnXAxis(val);\n\t\t\tthis.object3D.position.y = screen.options.scrollY + height / 2;\n\t\t} else {\n\t\t\tlet bottomVal = screen.getBottomVal();\n\t\t\tlet topVal = screen.getTopVal();\n\t\t\tlet needToStickOnTop = hasStickMode && val > topVal;\n\t\t\tlet needToStickOnBottom = hasStickMode && val < bottomVal;\n\t\t\tlet centerYVal = screen.getCenterYVal();\n\t\t\tthis.object3D.position.x = screen.options.scrollX + width / 2;\n\t\t\tif (needToStickOnTop) {\n\t\t\t\tthis.isStickOnTop = true;\n\t\t\t\tthis.object3D.position.y = screen.getTop();\n\t\t\t} else if (needToStickOnBottom) {\n\t\t\t\tthis.isStickOnBottom = true;\n\t\t\t\tthis.object3D.position.y = screen.getBottom();\n\t\t\t} else {\n\t\t\t\tthis.isStickOnBottom = this.isStickOnTop = false;\n\t\t\t\tthis.object3D.position.y = screen.getPointOnYAxis(val);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts\n **/"],"sourceRoot":""}