{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 1882e81cb09c88bf6ed5?94de","webpack:///./demo/demoApp.ts","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/build/TrendsBeaconWidget/index.js","webpack:///./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js","webpack:///./plugins/build/TrendsLoadingWidget/index.js","webpack:///./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js","webpack:///./plugins/build/TrendsIndicatorWidget/index.js","webpack:///./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","0","three_charts_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chart","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","marks","value","name","title","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","minSegmentLengthInPx","document","querySelector","setState","animations","enabled","mainTrend","getTrend","deadlineMark","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setTimeout","setInterval","appendData","$checkboxMaintrend","addEventListener","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","30","31","__export","hasOwnProperty","Plugin_1","PerspectiveCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","$container","pluginsAndWidgets","_this","widgets","REVISION","error","style","getComputedStyle","width","parseInt","height","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","init","_a","w","h","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","backgroundColor","ChartColor","setSize","setPixelRatio","devicePixelRatio","setClearColor","a","appendChild","domElement","$el","display","stats","Stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","constructor","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","apply","concat","map","WidgetClass","widget","setupChart","onReadyHandler","add","getObject3D","isDestroyed","begin","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","trendName","controls","ev","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","resizeSensor","ResizeSensor","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","onTrendsChange","autoscroll","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","detach","e","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","position","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","preventDefault","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","min","max","autoScrollIsEnabled","CanvasRenderer","WebGLRenderer","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","NAME","ee","EventEmitter","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChanged","getOptions","pluginsState","changedState","removeAllListeners","args","_i","arguments","Array","isArray","unsubscriber","deepmerge","target","src","mergeArrays","array","dst","indexOf","Object","keys","key","obj1","obj2","obj","JSON","parse","stringify","toFixed","num","digitsCount","maxDigits","result","intVal","floor","intStr","toString","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","split","substr","createTexture","fn","canvas","createElement","ctx","getContext","texture","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","console","warn","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","s","getRandomItem","copyProps","srcObject","dstObject","props","excludeProps","isPlainObject","TweenLite","TweenMax","EE2","es6_promise_1","Promise","dom","k","d","children","l","cssText","g","performance","r","Panel","f","self","memory","t","addPanel","showPanel","update","usedJSHeapSize","jsHeapSizeLimit","setMode","Infinity","u","n","q","b","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","drawImage","isObject","isObjectObject","o","ctor","prot","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","defaultMaxListeners","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","**","growListenerTree","listener","slice","shift","warned","trace","setMaxListeners","event","once","many","ttl","Error","off","_origin","on","emit","_all","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","listenersAny","EventEmitter2","element","callback","EventQueue","j","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","removeChild","eventName","subscribe","listenersCount","Vector3","Trend_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","LIGHT_BLUE","ALL","NUMBER","grid","minSizePx","color","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","zoomEase","scrollSpeed","scrollEase","Linear","easeNone","autoScrollSpeed","autoScrollEase","maxSegmentLength","lineWidth","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onChange","onTrendChange","onZoom","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","getPlugin","changedTrends","newData","handleTrendsChange","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","abs","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","items","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","_loop_1","this_1","scrollXVal","scrollYVal","zoomX","zoomY","currentScrollX","currentScrollY","currentZoomX","currentZoomY","transform","vFOV","PI","tan","onZoomFrame","onScrollFrame","cameraIsMoving","scrollXAnimation","zoomXAnimation","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","scrollYAnimation","zoomYAnimation","isDragMode","canAnimate","zoomXChanged","isAutoscroll","pause","targetX","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","__extends","__","create","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","_super","unbindList","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","orientation","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","rgbaStr","strokeStyle","material","MeshBasicMaterial","side","FrontSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","pxVal","textAlign","getDateStr","stroke","closePath","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","opacity","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","pow","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","replace","exec","isNaN","colorStr","rgba","hexStr","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","unbind","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","32","33","require","__WEBPACK_EXTERNAL_MODULE_2__","PlaneBufferGeometry","TrendBeacon","updatePosition","mesh","onStateChange","stopAnimation","light","animated","object","animationObject","restart","arc","fill","trendsSegments","endPointVector","screenWidth","34","35","TrendLoading","deactivate","activate","rotation","center","pointVector","36","37","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(30);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(32);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(34);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(36);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chart;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\t// class MarksSource {\r\n\t// \tstatic getNext(val: number): ITrendMarkOptions {\r\n\t// \t\tif (Math.random() > 0.2) return null;\r\n\t// \t\treturn this.generate(val);\r\n\t// \t}\r\n\t//\r\n\t// \tstatic generate(val: number): ITrendMarkOptions {\r\n\t// \t\tlet descriptionColor = 'rgb(40,136,75)';\r\n\t// \t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\r\n\t// \t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\r\n\t// \t\t\tdescriptionColor = 'rgb(219,73,49)';\r\n\t// \t\t}\r\n\t//\r\n\t// \t\treturn {\r\n\t// \t\t\ttrendName: 'main',\r\n\t// \t\t\tvalue: val,\r\n\t// \t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\r\n\t// \t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t// \t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t// \t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\r\n\t// \t\t\torientation: orientation,\r\n\t// \t\t\tdescriptionColor: descriptionColor\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chart = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 200, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {\r\n\t                    minSegmentLengthInPx: 10\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'));\r\n\t    chart.setState({ animations: { enabled: false } });\r\n\t    chart.setState({ animations: { enabled: true } });\r\n\t    window['chart'] = chart;\r\n\t    var mainTrend = chart.getTrend('main');\r\n\t    var deadlineMark = chart.chart.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chart.chart.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        // var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        // if (markOptions) setTimeout(() => {\r\n\t        // \tlet trendsMarks = state.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\r\n\t        // \ttrendsMarks.createMark(markOptions);\r\n\t        // }, 500);\r\n\t    });\r\n\t    // var previewChart1 = ChartView.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-state')[0],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.state, hasBeacon: true}\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart2 = ChartView.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-state')[1],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.state, hasBeacon: true}\r\n\t    // \t},\r\n\t    //\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart3 = ChartView.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-state')[2],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.state, hasBeacon: true},\r\n\t    // \t\t'red': {dataset: dsRed.state, lineColor: 0xFF2222},\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    var i = 0;\r\n\t    chart.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chart.getTrend('main').appendData([val]);\r\n\t        // state.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\r\n\t        // state.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // state.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // state.getTrend('red').appendData([val + 10 + Math.random() * 20]);\r\n\t        // state.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.getTrend('main').appendData([val]);\r\n\t        // previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\r\n\t        // previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.appendData(dataToAppend1);\r\n\t        //\r\n\t        // var chartData2 = previewChart2.state.state.trends[0].state;\r\n\t        // var lastItem2 = chartData2[chartData.length - 1];\r\n\t        // var dataToAppend2 = [\r\n\t        // \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\r\n\t        // ];\r\n\t        // previewChart2.appendData(dataToAppend2);\r\n\t        // previewChart3.appendData(dataToAppend2);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.chart.state.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.chart.state.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chart.chart.setState({ autoScroll: false });\r\n\t            chart.chart.zoomToRange(range);\r\n\t            chart.chart.scrollToEnd().then(function () {\r\n\t                chart.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(31)\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(13));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(4));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(3));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(29));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Plugin_1 = __webpack_require__(3);\n\t        __webpack_require__(5);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var Chart_1 = __webpack_require__(13);\n\t        var Widget_1 = __webpack_require__(20);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var AxisWidget_1 = __webpack_require__(21);\n\t        var GridWidget_1 = __webpack_require__(22);\n\t        var TrendsGradientWidget_1 = __webpack_require__(24);\n\t        var TrendsLineWidget_1 = __webpack_require__(26);\n\t        var TrendsCandleWidget_1 = __webpack_require__(27);\n\t        var deps_1 = __webpack_require__(28);\n\t        var Color_1 = __webpack_require__(23);\n\t        var ChartView = function() {\n\t            function ChartView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.ChartColor(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartView.prototype.render = function() {\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.onTrendsChange(function() {\n\t                    return _this.autoscroll();\n\t                }), this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartView.prototype.setupCamera = function() {\n\t                var camSettings = this.chart.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.screen.options);\n\t            };\n\t            ChartView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartView.prototype.autoscroll = function() {\n\t                var state = this.chart;\n\t                if (!state.state.autoScroll) return;\n\t                var oldTrendsMaxX = state.state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleX = this.chart.screen.getScreenRightVal();\n\t                    var paddingRightX = this.chart.getPaddingRight();\n\t                    var currentScroll = state.state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = trendsMaxXDelta;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartView.prototype.onScrollStop = function() {};\n\t            ChartView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var _this = this;\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                var autoScrollIsEnabled = this.chart.state.autoScroll;\n\t                if (autoScrollIsEnabled) this.chart.setState({\n\t                    autoScroll: false\n\t                });\n\t                this.chart.zoom(zoomValue, zoomOrigin).then(function() {\n\t                    if (autoScrollIsEnabled) _this.setState({\n\t                        autoScroll: true\n\t                    });\n\t                });\n\t            };\n\t            ChartView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartView.preinstalledWidgets = [];\n\t            ChartView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartView;\n\t        }();\n\t        exports.ChartView = ChartView;\n\t        ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(4);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(5);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(6);\n\t        exports.isPlainObject = __webpack_require__(7);\n\t        exports.EE2 = __webpack_require__(9);\n\t        var es6_promise_1 = __webpack_require__(10);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(11);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(8);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(5);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsManager_1 = __webpack_require__(16);\n\t        var Screen_1 = __webpack_require__(17);\n\t        var AxisMarks_1 = __webpack_require__(18);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var deps_1 = __webpack_require__(5);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            SCROLL_STOP: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        autoScroll: true,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: .25,\n\t                        zoomEase: void 0,\n\t                        scrollSpeed: .5,\n\t                        scrollEase: Linear.easeNone,\n\t                        autoScrollSpeed: 1,\n\t                        autoScrollEase: Linear.easeNone\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.initListeners();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onScrollStop = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var stateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (stateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.initListeners = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var _this = this;\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getValueOnXAxis = function(x) {\n\t                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            Chart.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Chart.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Chart.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            Chart.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.state.width);\n\t            };\n\t            Chart.prototype.getPaddingRight = function() {\n\t                return this.getValueByScreenX(this.state.width - this.state.xAxis.range.padding.end);\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendSegmentsManager_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var deps_1 = __webpack_require__(5);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chartState = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.onInitialStateApplied = function() {\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\n\t            };\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chartState;\n\t                chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateApplied();\n\t                });\n\t                chartState.onScrollStop(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chartState.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chartState.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chartState.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chartState;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chartState, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.chartState.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                });\n\t                this.chartState.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(14);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t                this.bindEvents();\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                });\n\t            };\n\t            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                var _this = this;\n\t                var _loop_1 = function(trendName) {\n\t                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n\t                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                    });\n\t                };\n\t                var this_1 = this;\n\t                for (var trendName in this.trends) {\n\t                    _loop_1(trendName);\n\t                }\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.currentScrollX = {\n\t                    x: 0\n\t                };\n\t                this.currentScrollY = {\n\t                    y: 0\n\t                };\n\t                this.currentZoomX = {\n\t                    val: 1\n\t                };\n\t                this.currentZoomY = {\n\t                    val: 1\n\t                };\n\t                this.chartState = chartState;\n\t                var _a = chartState.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chartState.state.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chartState.state, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"zoomFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"scrollFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"transformationFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                this.ee.emit(\"transformationFrame\", options);\n\t                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t                    this.ee.emit(\"scrollFrame\", options);\n\t                }\n\t                if (options.zoomX != void 0 || options.zoomY != void 0) {\n\t                    this.ee.emit(\"zoomFrame\", options);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.scrollXAnimation && this.scrollXAnimation.kill();\n\t                this.scrollYAnimation && this.scrollYAnimation.kill();\n\t                this.zoomXAnimation && this.zoomXAnimation.kill();\n\t                this.zoomYAnimation && this.zoomYAnimation.kill();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var isDragMode = state.state.cursor.dragMode;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled && !isDragMode;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = state.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n\t                var range = state.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollX.x = this.options.scrollX;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollX: _this.currentScrollX.x\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t                        x: targetX,\n\t                        ease: ease\n\t                    });\n\t                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollX.x = targetX;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t                var range = state.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollY.y = this.options.scrollY;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollY: _this.currentScrollY.y\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t                        y: targetY,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollY.y = targetY;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomX: _this.currentZoomX.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomX.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.state.yAxis.range.zoom;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomY: _this.currentZoomY.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomY.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chartState.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chartState.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chartState.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chartState.state.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chartState.state.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chartState.state.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chartState.state.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chartState.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chartState.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chartState.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chartState.state.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chartState.state.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chartState.state.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chartState.state.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(4);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(20);\n\t        var GridWidget_1 = __webpack_require__(22);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var Color_1 = __webpack_require__(23);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.ChartColor(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(20);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var Color_1 = __webpack_require__(23);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.ChartColor(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartColor = function() {\n\t            function ChartColor(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            ChartColor.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            ChartColor.prototype.set = function(color) {\n\t                if (typeof color == \"number\") {\n\t                    color = color.toString(16);\n\t                    color = \"#\" + \"0\".repeat(6 - color.length) + color;\n\t                }\n\t                var colorStr = color;\n\t                var rgba = ChartColor.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = \"#\" + this.value.toString(16);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            return ChartColor;\n\t        }();\n\t        exports.ChartColor = ChartColor;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsWidget_1 = __webpack_require__(25);\n\t        var Color_1 = __webpack_require__(23);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(20);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(25);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(25);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(5));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(25));\n\t        __export(__webpack_require__(26));\n\t        __export(__webpack_require__(24));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(33)\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(30)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsBeaconWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsBeaconWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsBeaconWidget = function(_super) {\n\t            __extends(TrendsBeaconWidget, _super);\n\t            function TrendsBeaconWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendBeacon;\n\t            };\n\t            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t            return TrendsBeaconWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t        var TrendBeacon = function(_super) {\n\t            __extends(TrendBeacon, _super);\n\t            function TrendBeacon(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.initObject();\n\t                if (chart.state.animations.enabled) {\n\t                    this.animate();\n\t                }\n\t                this.updatePosition();\n\t            }\n\t            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendBeacon.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendBeacon.prototype.onTrendChange = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return _this.updatePosition();\n\t                }));\n\t                this.bindEvent(this.chart.onChange(function(changedProps) {\n\t                    return _this.onStateChange(changedProps);\n\t                }));\n\t                this.bindEvent(this.chart.onDestroy(function() {\n\t                    return _this.stopAnimation();\n\t                }));\n\t            };\n\t            TrendBeacon.prototype.initObject = function() {\n\t                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                light.scale.set(.2, .2, 1);\n\t                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture()\n\t                })));\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t            };\n\t            TrendBeacon.prototype.animate = function() {\n\t                var _this = this;\n\t                this.animated = true;\n\t                var object = this.mesh;\n\t                var animationObject = {\n\t                    scale: object.scale.x,\n\t                    opacity: object.material.opacity\n\t                };\n\t                this.mesh.scale.set(.1, .1, 1);\n\t                setTimeout(function() {\n\t                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                        scale: 1,\n\t                        opacity: 0\n\t                    });\n\t                    animation.eventCallback(\"onUpdate\", function() {\n\t                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                        object.material.opacity = animationObject.opacity;\n\t                    }).eventCallback(\"onComplete\", function() {\n\t                        _this.animation && animation.restart();\n\t                    });\n\t                }, 500);\n\t            };\n\t            TrendBeacon.prototype.stopAnimation = function() {\n\t                this.animated = false;\n\t                this.animation && this.animation.kill();\n\t                this.animation = null;\n\t            };\n\t            TrendBeacon.createTexture = function() {\n\t                var h = 32, w = 32;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                    ctx.fillStyle = \"white\";\n\t                    ctx.fill();\n\t                });\n\t            };\n\t            TrendBeacon.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                this.segment = trendsSegments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                if (!changedProps.animations) return;\n\t                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                if (changedProps.animations.enabled) {\n\t                    this.animate();\n\t                } else {\n\t                    this.stopAnimation();\n\t                }\n\t            };\n\t            TrendBeacon.prototype.updatePosition = function() {\n\t                var chart = this.chart;\n\t                var xVal, yVal;\n\t                var currentAnimationState = this.segment.currentAnimationState;\n\t                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    xVal = currentAnimationState.endXVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                } else {\n\t                    xVal = currentAnimationState.xVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                }\n\t                var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n\t                var screenWidth = chart.state.width;\n\t                var x = endPointVector.x;\n\t                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t                if (screenX < 0) x = chart.screen.getPointByScreenX(0);\n\t                if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n\t                this.mesh.position.set(x, endPointVector.y, .1);\n\t            };\n\t            return TrendBeacon;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendBeacon = TrendBeacon;\n\t    }, function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(35)\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(30)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsLoadingWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsLoadingWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(4));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, , function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsLoadingWidget = function(_super) {\n\t            __extends(TrendsLoadingWidget, _super);\n\t            function TrendsLoadingWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLoading;\n\t            };\n\t            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t            return TrendsLoadingWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t        var TrendLoading = function(_super) {\n\t            __extends(TrendLoading, _super);\n\t            function TrendLoading(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.isActive = false;\n\t                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendLoading.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                this.deactivate();\n\t            }\n\t            TrendLoading.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled && chart.state.animations.enabled;\n\t            };\n\t            TrendLoading.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendLoading.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.onPrependRequest(function() {\n\t                    return _this.activate();\n\t                }));\n\t            };\n\t            TrendLoading.prototype.prependData = function() {\n\t                this.deactivate();\n\t            };\n\t            TrendLoading.prototype.activate = function() {\n\t                var mesh = this.mesh;\n\t                mesh.material.opacity = 1;\n\t                mesh.rotation.z = 0;\n\t                var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                    z: Math.PI * 2\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animation.restart();\n\t                });\n\t                this.animation = animation;\n\t                this.isActive = true;\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.deactivate = function() {\n\t                this.animation && this.animation.kill();\n\t                this.mesh.material.opacity = 0;\n\t                this.isActive = false;\n\t            };\n\t            TrendLoading.createTexture = function() {\n\t                var h = 64, w = 64;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                    ctx.lineWidth = 5;\n\t                    var center = h / 2;\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                    ctx.stroke();\n\t                });\n\t            };\n\t            TrendLoading.prototype.onZoomFrame = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.updatePosition = function() {\n\t                if (!this.isActive) return;\n\t                var trend = this.trend;\n\t                var segment = trend.segmentsManager.getStartSegment();\n\t                var x, y;\n\t                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    x = segment.currentAnimationState.startXVal;\n\t                    y = segment.currentAnimationState.startYVal;\n\t                } else {\n\t                    x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                    y = segment.currentAnimationState.yVal;\n\t                }\n\t                var pointVector = this.chart.screen.getPointOnChart(x, y);\n\t                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t            };\n\t            return TrendLoading;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendLoading = TrendLoading;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(37)\n\n/***/ },\n\n/***/ 37:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(30)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsIndicatorWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsIndicatorWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(3));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var CANVAS_WIDTH = 128;\n\t        var CANVAS_HEIGHT = 64;\n\t        var OFFSET_X = 15;\n\t        var TrendsIndicatorWidget = function(_super) {\n\t            __extends(TrendsIndicatorWidget, _super);\n\t            function TrendsIndicatorWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendIndicator;\n\t            };\n\t            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t            return TrendsIndicatorWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t        var TrendIndicator = function(_super) {\n\t            __extends(TrendIndicator, _super);\n\t            function TrendIndicator(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.initObject();\n\t                this.onTrendChange();\n\t            }\n\t            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasIndicator;\n\t            };\n\t            TrendIndicator.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendIndicator.prototype.onTrendChange = function() {\n\t                var trendData = this.trend.getData();\n\t                var lastItem = trendData[trendData.length - 1];\n\t                var texture = this.mesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                texture.needsUpdate = true;\n\t            };\n\t            TrendIndicator.prototype.initObject = function() {\n\t                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n\t                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"15px Arial\";\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t            };\n\t            TrendIndicator.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                this.segment = segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.updatePosition = function() {\n\t                var chart = this.chart;\n\t                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                var screenWidth = chart.state.width;\n\t                var x = endPointVector.x + OFFSET_X;\n\t                var y = endPointVector.y;\n\t                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                if (indicatorIsOutOfScreen) {\n\t                    if (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n\t                    if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                    y -= 25;\n\t                }\n\t                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t            };\n\t            return TrendIndicator;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendIndicator = TrendIndicator;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n/***/ }\n\n/******/ })\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1882e81cb09c88bf6ed5\n **/","\n// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/build/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/build/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/build/TrendsIndicatorWidget';\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chart: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\n// class MarksSource {\n// \tstatic getNext(val: number): ITrendMarkOptions {\n// \t\tif (Math.random() > 0.2) return null;\n// \t\treturn this.generate(val);\n// \t}\n//\n// \tstatic generate(val: number): ITrendMarkOptions {\n// \t\tlet descriptionColor = 'rgb(40,136,75)';\n// \t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n// \t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n// \t\t\tdescriptionColor = 'rgb(219,73,49)';\n// \t\t}\n//\n// \t\treturn {\n// \t\t\ttrendName: 'main',\n// \t\t\tvalue: val,\n// \t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\n// \t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n// \t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n// \t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\n// \t\t\torientation: orientation,\n// \t\t\tdescriptionColor: descriptionColor\n// \t\t}\n// \t}\n// }\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchart = new ChartView({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 200, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t// \t,\n\t// [\n\t// \tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t// ]\n\t);\n\n\tchart.setState({animations: {enabled: false}});\n\tchart.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chart'] = chart;\n\n\tvar mainTrend = chart.getTrend('main');\n\tvar deadlineMark = chart.chart.xAxisMarks.getItem('deadline');\n\tvar closeMark = chart.chart.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\t// var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\t// if (markOptions) setTimeout(() => {\n\t\t// \tlet trendsMarks = state.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t// \ttrendsMarks.createMark(markOptions);\n\t\t// }, 500);\n\t});\n\n\n\t// var previewChart1 = ChartView.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-state')[0],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.state, hasBeacon: true}\n\t// \t}\n\t// });\n\t//\n\t// var previewChart2 = ChartView.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-state')[1],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.state, hasBeacon: true}\n\t// \t},\n\t//\n\t// });\n\t//\n\t// var previewChart3 = ChartView.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-state')[2],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.state, hasBeacon: true},\n\t// \t\t'red': {dataset: dsRed.state, lineColor: 0xFF2222},\n\t// \t}\n\t// });\n\t//\n\n\tvar i = 0;\n\n\tchart.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chart.getTrend('main').appendData([val]);\n\t\t// state.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\n\t\t// state.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// state.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// state.getTrend('red').appendData([val + 10 + Math.random() * 20]);\n\t\t// state.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\n\n\n\n\t\t// previewChart1.getTrend('main').appendData([val]);\n\t\t// previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\n\t\t// previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\n\t\t\n\t\t// previewChart1.appendData(dataToAppend1);\n\t\t//\n\t\t// var chartData2 = previewChart2.state.state.trends[0].state;\n\t\t// var lastItem2 = chartData2[chartData.length - 1];\n\t\t// var dataToAppend2 = [\n\t\t// \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\n\t\t// ];\n\t\t// previewChart2.appendData(dataToAppend2);\n\t\t// previewChart3.appendData(dataToAppend2);\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.chart.state.xAxis.range;\n\t\tchart.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.chart.state.xAxis.range;\n\t\tchart.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchart.chart.setState({autoScroll: false});\n\t\t\tchart.chart.zoomToRange(range);\n\t\t\tchart.chart.scrollToEnd().then(() => {\n\t\t\t\tchart.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 30\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(13));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(4));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(3));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(29));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Plugin_1 = __webpack_require__(3);\n        __webpack_require__(5);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var Chart_1 = __webpack_require__(13);\n        var Widget_1 = __webpack_require__(20);\n        var Utils_1 = __webpack_require__(4);\n        var AxisWidget_1 = __webpack_require__(21);\n        var GridWidget_1 = __webpack_require__(22);\n        var TrendsGradientWidget_1 = __webpack_require__(24);\n        var TrendsLineWidget_1 = __webpack_require__(26);\n        var TrendsCandleWidget_1 = __webpack_require__(27);\n        var deps_1 = __webpack_require__(28);\n        var Color_1 = __webpack_require__(23);\n        var ChartView = function() {\n            function ChartView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.ChartColor(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartView.prototype.render = function() {\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.onTrendsChange(function() {\n                    return _this.autoscroll();\n                }), this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartView.prototype.setupCamera = function() {\n                var camSettings = this.chart.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.screen.options);\n            };\n            ChartView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartView.prototype.autoscroll = function() {\n                var state = this.chart;\n                if (!state.state.autoScroll) return;\n                var oldTrendsMaxX = state.state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleX = this.chart.screen.getScreenRightVal();\n                    var paddingRightX = this.chart.getPaddingRight();\n                    var currentScroll = state.state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                        return;\n                    }\n                    var scrollDelta = trendsMaxXDelta;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            ChartView.prototype.onScrollStop = function() {};\n            ChartView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var _this = this;\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                var autoScrollIsEnabled = this.chart.state.autoScroll;\n                if (autoScrollIsEnabled) this.chart.setState({\n                    autoScroll: false\n                });\n                this.chart.zoom(zoomValue, zoomOrigin).then(function() {\n                    if (autoScrollIsEnabled) _this.setState({\n                        autoScroll: true\n                    });\n                });\n            };\n            ChartView.devicePixelRatio = window.devicePixelRatio;\n            ChartView.preinstalledWidgets = [];\n            ChartView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartView;\n        }();\n        exports.ChartView = ChartView;\n        ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(4);\n        var EventEmmiter_1 = __webpack_require__(12);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(5);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(6);\n        exports.isPlainObject = __webpack_require__(7);\n        exports.EE2 = __webpack_require__(9);\n        var es6_promise_1 = __webpack_require__(10);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(11);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(8);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(5);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(14);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Utils_1 = __webpack_require__(4);\n        var TrendsManager_1 = __webpack_require__(16);\n        var Screen_1 = __webpack_require__(17);\n        var AxisMarks_1 = __webpack_require__(18);\n        var interfaces_1 = __webpack_require__(19);\n        var deps_1 = __webpack_require__(5);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            SCROLL_STOP: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        autoScroll: true,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: .25,\n                        zoomEase: void 0,\n                        scrollSpeed: .5,\n                        scrollEase: Linear.easeNone,\n                        autoScrollSpeed: 1,\n                        autoScrollEase: Linear.easeNone\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.initListeners();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onScrollStop = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var stateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (stateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.initListeners = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var _this = this;\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getValueOnXAxis = function(x) {\n                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.getValueByScreenX = function(x) {\n                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.getValueByScreenY = function(y) {\n                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            Chart.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Chart.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Chart.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            Chart.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.state.width);\n            };\n            Chart.prototype.getPaddingRight = function() {\n                return this.getValueByScreenX(this.state.width - this.state.xAxis.range.padding.end);\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(4);\n        var TrendSegmentsManager_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var deps_1 = __webpack_require__(5);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chartState = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvents();\n            }\n            Trend.prototype.onInitialStateApplied = function() {\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\n            };\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chartState;\n                chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateApplied();\n                });\n                chartState.onScrollStop(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chartState.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chartState.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chartState.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chartState;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(4);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chartState, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.chartState.onZoom(function() {\n                    return _this.onZoomHandler();\n                });\n                this.chartState.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(14);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n                this.bindEvents();\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                });\n            };\n            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                var _this = this;\n                var _loop_1 = function(trendName) {\n                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                    });\n                };\n                var this_1 = this;\n                for (var trendName in this.trends) {\n                    _loop_1(trendName);\n                }\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.currentScrollX = {\n                    x: 0\n                };\n                this.currentScrollY = {\n                    y: 0\n                };\n                this.currentZoomX = {\n                    val: 1\n                };\n                this.currentZoomY = {\n                    val: 1\n                };\n                this.chartState = chartState;\n                var _a = chartState.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chartState.state.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chartState.state, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                var _this = this;\n                var eventName = \"zoomFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                var _this = this;\n                var eventName = \"scrollFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                var _this = this;\n                var eventName = \"transformationFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                this.ee.emit(\"transformationFrame\", options);\n                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n                    this.ee.emit(\"scrollFrame\", options);\n                }\n                if (options.zoomX != void 0 || options.zoomY != void 0) {\n                    this.ee.emit(\"zoomFrame\", options);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.scrollXAnimation && this.scrollXAnimation.kill();\n                this.scrollYAnimation && this.scrollYAnimation.kill();\n                this.zoomXAnimation && this.zoomXAnimation.kill();\n                this.zoomYAnimation && this.zoomYAnimation.kill();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var state = this.chartState;\n                var isDragMode = state.state.cursor.dragMode;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled && !isDragMode;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = state.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n                var range = state.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollX.x = this.options.scrollX;\n                var cb = function() {\n                    _this.transform({\n                        scrollX: _this.currentScrollX.x\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n                        x: targetX,\n                        ease: ease\n                    });\n                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollX.x = targetX;\n                    cb();\n                }\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n                var range = state.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollY.y = this.options.scrollY;\n                var cb = function() {\n                    _this.transform({\n                        scrollY: _this.currentScrollY.y\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n                        y: targetY,\n                        ease: animations.zoomEase\n                    });\n                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollY.y = targetY;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomX: _this.currentZoomX.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomX.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.state.yAxis.range.zoom;\n                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomY: _this.currentZoomY.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomY.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chartState.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chartState.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chartState.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chartState.state.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chartState.state.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chartState.state.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chartState.state.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chartState.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chartState.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chartState.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chartState.state.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chartState.state.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chartState.state.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chartState.state.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(4);\n        var interfaces_1 = __webpack_require__(19);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(20);\n        var GridWidget_1 = __webpack_require__(22);\n        var Utils_1 = __webpack_require__(4);\n        var interfaces_1 = __webpack_require__(19);\n        var Color_1 = __webpack_require__(23);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.ChartColor(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(20);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(4);\n        var Color_1 = __webpack_require__(23);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.ChartColor(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartColor = function() {\n            function ChartColor(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            ChartColor.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            ChartColor.prototype.set = function(color) {\n                if (typeof color == \"number\") {\n                    color = color.toString(16);\n                    color = \"#\" + \"0\".repeat(6 - color.length) + color;\n                }\n                var colorStr = color;\n                var rgba = ChartColor.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = \"#\" + this.value.toString(16);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            return ChartColor;\n        }();\n        exports.ChartColor = ChartColor;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(4);\n        var TrendsWidget_1 = __webpack_require__(25);\n        var Color_1 = __webpack_require__(23);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(20);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(25);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(4);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(25);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(14);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(4);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(5));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(25));\n        __export(__webpack_require__(26));\n        __export(__webpack_require__(24));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 31\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsBeaconWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/index.js\n ** module id = 32\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsBeaconWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsBeaconWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsBeaconWidget = function(_super) {\n            __extends(TrendsBeaconWidget, _super);\n            function TrendsBeaconWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                return TrendBeacon;\n            };\n            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n            return TrendsBeaconWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n        var TrendBeacon = function(_super) {\n            __extends(TrendBeacon, _super);\n            function TrendBeacon(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.initObject();\n                if (chart.state.animations.enabled) {\n                    this.animate();\n                }\n                this.updatePosition();\n            }\n            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n            };\n            TrendBeacon.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendBeacon.prototype.onTrendChange = function() {\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return _this.updatePosition();\n                }));\n                this.bindEvent(this.chart.onChange(function(changedProps) {\n                    return _this.onStateChange(changedProps);\n                }));\n                this.bindEvent(this.chart.onDestroy(function() {\n                    return _this.stopAnimation();\n                }));\n            };\n            TrendBeacon.prototype.initObject = function() {\n                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture(),\n                    transparent: true\n                }));\n                light.scale.set(.2, .2, 1);\n                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture()\n                })));\n                this.segment = this.trend.segmentsManager.getEndSegment();\n            };\n            TrendBeacon.prototype.animate = function() {\n                var _this = this;\n                this.animated = true;\n                var object = this.mesh;\n                var animationObject = {\n                    scale: object.scale.x,\n                    opacity: object.material.opacity\n                };\n                this.mesh.scale.set(.1, .1, 1);\n                setTimeout(function() {\n                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                        scale: 1,\n                        opacity: 0\n                    });\n                    animation.eventCallback(\"onUpdate\", function() {\n                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n                        object.material.opacity = animationObject.opacity;\n                    }).eventCallback(\"onComplete\", function() {\n                        _this.animation && animation.restart();\n                    });\n                }, 500);\n            };\n            TrendBeacon.prototype.stopAnimation = function() {\n                this.animated = false;\n                this.animation && this.animation.kill();\n                this.animation = null;\n            };\n            TrendBeacon.createTexture = function() {\n                var h = 32, w = 32;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.beginPath();\n                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                });\n            };\n            TrendBeacon.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                this.segment = trendsSegments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onStateChange = function(changedProps) {\n                if (!changedProps.animations) return;\n                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                if (changedProps.animations.enabled) {\n                    this.animate();\n                } else {\n                    this.stopAnimation();\n                }\n            };\n            TrendBeacon.prototype.updatePosition = function() {\n                var chart = this.chart;\n                var xVal, yVal;\n                var currentAnimationState = this.segment.currentAnimationState;\n                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    xVal = currentAnimationState.endXVal;\n                    yVal = currentAnimationState.endYVal;\n                } else {\n                    xVal = currentAnimationState.xVal;\n                    yVal = currentAnimationState.endYVal;\n                }\n                var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n                var screenWidth = chart.state.width;\n                var x = endPointVector.x;\n                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n                if (screenX < 0) x = chart.screen.getPointByScreenX(0);\n                if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n                this.mesh.position.set(x, endPointVector.y, .1);\n            };\n            return TrendBeacon;\n        }(three_charts_1.TrendWidget);\n        exports.TrendBeacon = TrendBeacon;\n    }, function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js\n ** module id = 33\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsLoadingWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/index.js\n ** module id = 34\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsLoadingWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsLoadingWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(4));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, , function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsLoadingWidget = function(_super) {\n            __extends(TrendsLoadingWidget, _super);\n            function TrendsLoadingWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLoading;\n            };\n            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n            return TrendsLoadingWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n        var TrendLoading = function(_super) {\n            __extends(TrendLoading, _super);\n            function TrendLoading(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.isActive = false;\n                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendLoading.createTexture(),\n                    transparent: true\n                }));\n                this.deactivate();\n            }\n            TrendLoading.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled && chart.state.animations.enabled;\n            };\n            TrendLoading.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendLoading.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.onPrependRequest(function() {\n                    return _this.activate();\n                }));\n            };\n            TrendLoading.prototype.prependData = function() {\n                this.deactivate();\n            };\n            TrendLoading.prototype.activate = function() {\n                var mesh = this.mesh;\n                mesh.material.opacity = 1;\n                mesh.rotation.z = 0;\n                var animation = TweenLite.to(this.mesh.rotation, .5, {\n                    z: Math.PI * 2\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animation.restart();\n                });\n                this.animation = animation;\n                this.isActive = true;\n                this.updatePosition();\n            };\n            TrendLoading.prototype.deactivate = function() {\n                this.animation && this.animation.kill();\n                this.mesh.material.opacity = 0;\n                this.isActive = false;\n            };\n            TrendLoading.createTexture = function() {\n                var h = 64, w = 64;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                    ctx.lineWidth = 5;\n                    var center = h / 2;\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n                    ctx.stroke();\n                });\n            };\n            TrendLoading.prototype.onZoomFrame = function() {\n                this.updatePosition();\n            };\n            TrendLoading.prototype.updatePosition = function() {\n                if (!this.isActive) return;\n                var trend = this.trend;\n                var segment = trend.segmentsManager.getStartSegment();\n                var x, y;\n                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    x = segment.currentAnimationState.startXVal;\n                    y = segment.currentAnimationState.startYVal;\n                } else {\n                    x = segment.currentAnimationState.xVal - segment.maxLength;\n                    y = segment.currentAnimationState.yVal;\n                }\n                var pointVector = this.chart.screen.getPointOnChart(x, y);\n                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n            };\n            return TrendLoading;\n        }(three_charts_1.TrendWidget);\n        exports.TrendLoading = TrendLoading;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js\n ** module id = 35\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsIndicatorWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/index.js\n ** module id = 36\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsIndicatorWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsIndicatorWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(3));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var three_charts_1 = __webpack_require__(2);\n        var CANVAS_WIDTH = 128;\n        var CANVAS_HEIGHT = 64;\n        var OFFSET_X = 15;\n        var TrendsIndicatorWidget = function(_super) {\n            __extends(TrendsIndicatorWidget, _super);\n            function TrendsIndicatorWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                return TrendIndicator;\n            };\n            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n            return TrendsIndicatorWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n        var TrendIndicator = function(_super) {\n            __extends(TrendIndicator, _super);\n            function TrendIndicator(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.initObject();\n                this.onTrendChange();\n            }\n            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasIndicator;\n            };\n            TrendIndicator.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendIndicator.prototype.onTrendChange = function() {\n                var trendData = this.trend.getData();\n                var lastItem = trendData[trendData.length - 1];\n                var texture = this.mesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                texture.needsUpdate = true;\n            };\n            TrendIndicator.prototype.initObject = function() {\n                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"15px Arial\";\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n            };\n            TrendIndicator.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                this.segment = segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.updatePosition = function() {\n                var chart = this.chart;\n                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                var screenWidth = chart.state.width;\n                var x = endPointVector.x + OFFSET_X;\n                var y = endPointVector.y;\n                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                if (indicatorIsOutOfScreen) {\n                    if (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n                    if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                    y -= 25;\n                }\n                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n            };\n            return TrendIndicator;\n        }(three_charts_1.TrendWidget);\n        exports.TrendIndicator = TrendIndicator;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js\n ** module id = 37\n ** module chunks = 1\n **/"],"sourceRoot":""}