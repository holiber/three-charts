{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap aa8a96c64dad3de6cbf0?2f97","webpack:///./demo/demoApp.ts","webpack:///./src/index.ts?eac3","webpack:///./src/Chart.ts?8278","webpack:///./src/Plugin.ts?e59a","webpack:///./src/Utils.ts?fbb5","webpack:///./src/deps/deps.ts?8fcc","webpack:///./~/three/examples/js/libs/stats.min.js?9b50","webpack:///./~/three/examples/js/renderers/CanvasRenderer.js?661f","webpack:///./~/three/examples/js/renderers/Projector.js?6a55","webpack:///./~/is-plain-object/index.js?2af1","webpack:///./~/isobject/index.js?cf96","webpack:///./~/EventEmitter2/lib/eventemitter2.js?0e9a","webpack:///./src/polyfills/es6-promise.js?de39","webpack:///./~/css-element-queries/src/ResizeSensor.js?9f87","webpack:///./src/EventEmmiter.ts?e60a","webpack:///./src/State.ts?5d25","webpack:///./src/Trend.ts?84c2","webpack:///./src/TrendSegmentsManager.ts?2220","webpack:///./src/TrendsManager.ts?c94d","webpack:///./src/Screen.ts?9286","webpack:///./src/AxisMarks.ts?f3fd","webpack:///./src/interfaces.ts?f1fb","webpack:///./src/Widget.ts?d904","webpack:///./src/widgets/AxisWidget.ts?5f76","webpack:///./src/widgets/GridWidget.ts?61b2","webpack:///./src/widgets/TrendsGradientWidget.ts?4409","webpack:///./src/widgets/TrendsWidget.ts?6f55","webpack:///./src/Color.ts?1948","webpack:///./src/widgets/TrendsLineWidget.ts?d378","webpack:///./src/widgets/TrendsCandleWidget.ts?9d04"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","_1","chart","DataSourse","data","sec","val","startTime","Date","now","push","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","window","onload","initListeners","dsMain","dsRed","dsBlue","Chart","yAxis","marks","value","name","title","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","minSegmentLengthInPx","document","querySelector","setState","animations","enabled","mainTrend","getTrend","deadlineMark","state","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setTimeout","setInterval","appendData","$checkboxMaintrend","addEventListener","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","__export","hasOwnProperty","Plugin_1","PerspectiveCamera","THREE","State_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","$container","pluginsAndWidgets","_this","widgets","REVISION","error","style","getComputedStyle","width","parseInt","height","plugins","filter","pluginOrWidget","ChartPlugin","ChartState","zoomThrottled","throttle","zoomValue","origin","zoom","init","installWidget","Widget","widgetName","preinstalledWidgets","_a","w","h","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","setClearColor","backgroundColor","backgroundOpacity","appendChild","domElement","$el","display","stats","Stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","constructor","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","apply","concat","map","WidgetClass","widget","setupChartState","onReadyHandler","add","getObject3D","isDestroyed","begin","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","trendName","controls","ev","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","unsubscribers","onTrendsChange","autoscroll","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","resizeSensor","detach","e","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","position","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","preventDefault","zoomOrigin","layerX","wheelDeltaY","touches","onChartContainerResizeHandler","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","min","max","autoScrollIsEnabled","CanvasRenderer","WebGLRenderer","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","NAME","chartState","ee","EventEmitter","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChanged","getOptions","pluginsState","changedState","removeAllListeners","args","_i","arguments","Array","isArray","unsubscriber","deps_1","deepmerge","target","src","mergeArrays","array","dst","indexOf","Object","keys","key","obj1","obj2","obj","JSON","parse","stringify","toFixed","num","digitsCount","maxDigits","result","intVal","floor","intStr","toString","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","split","substr","createTexture","fn","canvas","createElement","ctx","getContext","texture","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","console","warn","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","s","getRandomItem","copyProps","srcObject","dstObject","props","excludeProps","isPlainObject","TweenLite","TweenMax","EE2","es6_promise_1","Promise","ResizeSensor","a","dom","k","d","children","l","cssText","g","performance","r","Panel","f","self","memory","t","addPanel","showPanel","update","usedJSHeapSize","jsHeapSizeLimit","setMode","Infinity","u","n","q","b","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","drawImage","SpriteCanvasMaterial","parameters","Material","color","Color","program","setValues","create","material","copy","log","_renderData","_elements","_lights","_projector","Projector","_canvas","undefined","_canvasWidth","_canvasHeight","_canvasWidthHalf","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_context","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_camera","_v1","_v2","_v3","_v4","_v5","RenderableVertex","_v6","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_v4x","_v4y","_v5x","_v5y","_v6x","_v6y","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_clipBox","Box2","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_vector3","Vector3","_centroid","_normal","_normalViewMatrix","Matrix3","setLineDash","autoClear","sortObjects","sortElements","info","vertices","faces","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","updateStyle","setViewport","setScissor","setScissorTest","setClearColorHex","hex","getClearColor","getClearAlpha","getMaxAnisotropy","clear","isEmpty","intersect","expandByScalar","clearRect","setBlending","NormalBlending","setOpacity","setFillStyle","makeEmpty","clearColor","clearDepth","clearStencil","Camera","setTransform","translate","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","calculateLights","el","element","opacity","RenderableSprite","renderSprite","RenderableLine","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","RenderableFace","v3","overdraw","expand","renderFace3","union","setRGB","ll","light","lightColor","AmbientLight","DirectionalLight","PointLight","calculateLight","normal","lightPosition","setFromMatrixPosition","matrixWorld","normalize","amount","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","blending","scaleX","scale","scaleY","dist","sqrt","SpriteMaterial","pattern","version","textureToPattern","bitmap","image","ox","offset","oy","sx","sy","cx","cy","save","rotation","rotate","restore","getStyle","setStrokeStyle","beginPath","moveTo","lineTo","LineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","LineDashedMaterial","dashSize","gapSize","uv1","uv2","uv3","drawTriangle","MeshLambertMaterial","MeshPhongMaterial","emissive","FaceColors","multiply","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","MeshBasicMaterial","mapping","UVMapping","uvs","patternPath","envMap","SphericalReflectionMapping","vertexNormalsModel","applyMatrix3","MeshNormalMaterial","addScalar","x0","y0","x1","y1","x2","y2","closePath","fill","CompressedTexture","DataTexture","complete","repeatX","wrapS","RepeatWrapping","repeatY","wrapT","createPattern","onUpdate","u0","v0","u1","u2","det","idet","offsetX","offsetY","transform","clipImage","clip","pixels","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","MultiplyBlending","lineWidth","lineCap","lineJoin","strokeStyle","RenderableObject","object","renderOrder","vertexNormalsLength","Vector2","Vector4","visible","vertex","_object","_objectCount","_objectPool","_objectPoolLength","_vertex","_vertexCount","_vertexPool","_vertexPoolLength","_face","_faceCount","_facePool","_facePoolLength","_line","_lineCount","_linePool","_linePoolLength","_sprite","_spriteCount","_spritePool","_spritePoolLength","objects","_vector4","Box3","_boundingBox","_points3","_points4","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","project","unprojectVector","unproject","pickingRay","RenderList","normals","normalMatrix","setObject","projectVertex","applyMatrix4","invW","pushVertex","getNextVertexInPool","pushNormal","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","getNextLineInPool","pushTriangle","side","DoubleSide","getNextFaceInPool","fromArray","uv","renderList","autoUpdate","updateMatrixWorld","parent","getInverse","multiplyMatrices","projectionMatrix","setFromMatrix","addObject","getNextObjectInPool","applyProjection","traverseVisible","Light","Mesh","Line","frustumCulled","intersectsObject","Sprite","intersectsSprite","sort","painterSort","o","ol","geometry","BufferGeometry","attributes","groups","positions","index","indices","group","count","Geometry","faceVertexUvs","isFaceMaterial","MultiMaterial","objectMaterials","vl","morphTargets","morphInfluences","morphTargetInfluences","tl","influence","targetVertex","fl","face","materials","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","clipLine","colors","getNextSpriteInPool","abs","line","sprite","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","isObject","isObjectObject","ctor","prot","__WEBPACK_AMD_DEFINE_RESULT__","_isArray","defaultMaxListeners","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","**","growListenerTree","listener","slice","shift","warned","trace","setMaxListeners","event","once","many","ttl","Error","off","_origin","on","emit","_all","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","listenersAny","EventEmitter2","callback","EventQueue","j","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","className","styleChild","innerHTML","fixed","absolute","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","removeChild","eventName","subscribe","listenersCount","Trend_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","ALL","NUMBER","grid","minSizePx","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","zoomEase","scrollSpeed","scrollEase","Linear","easeNone","autoScrollSpeed","autoScrollEase","maxSegmentLength","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onChange","onTrendChange","onZoom","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","getPlugin","changedTrends","newData","handleTrendsChange","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","items","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","_loop_1","this_1","scrollXVal","scrollYVal","zoomX","zoomY","currentScrollX","currentScrollY","currentZoomX","currentZoomY","vFOV","PI","tan","onZoomFrame","onScrollFrame","cameraIsMoving","scrollXAnimation","zoomXAnimation","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","scrollYAnimation","zoomYAnimation","isDragMode","canAnimate","zoomXChanged","isAutoscroll","pause","targetX","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","__extends","__","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","_super","unbindList","unbindEvent","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","orientation","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","traverse","transparent","axisMesh","PlaneGeometry","axisOptions","axisGridParams","getGridParamsForAxis","edgeOffset","segmentsCount","pxVal","textAlign","getDateStr","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","xLinesCount","yLinesCount","lineSegments","setZ","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","pow","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","TrendsWidget_1","Color_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","Face3","ChartColor","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","unbind","parseColor","cache","replace","exec","isNaN","colorStr","rgba","hexStr","rgbaStr","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar _1 = __webpack_require__(1);\r\n\t// import { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/TrendsMarksPlugin';\r\n\tvar chart;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return _1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\t// class MarksSource {\r\n\t// \tstatic getNext(val: number): ITrendMarkOptions {\r\n\t// \t\tif (Math.random() > 0.2) return null;\r\n\t// \t\treturn this.generate(val);\r\n\t// \t}\r\n\t//\r\n\t// \tstatic generate(val: number): ITrendMarkOptions {\r\n\t// \t\tlet descriptionColor = 'rgb(40,136,75)';\r\n\t// \t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\r\n\t// \t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\r\n\t// \t\t\tdescriptionColor = 'rgb(219,73,49)';\r\n\t// \t\t}\r\n\t//\r\n\t// \t\treturn {\r\n\t// \t\t\ttrendName: 'main',\r\n\t// \t\t\tvalue: val,\r\n\t// \t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\r\n\t// \t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t// \t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t// \t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\r\n\t// \t\t\torientation: orientation,\r\n\t// \t\t\tdescriptionColor: descriptionColor\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    // Chart.installWidget(TrendsLoadingWidget);\r\n\t    // Chart.installWidget(TrendsBeaconWidget);\r\n\t    // Chart.installWidget(TrendsIndicatorWidget);\r\n\t    chart = new _1.Chart({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: _1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: _1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 200, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: _1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {\r\n\t                    minSegmentLengthInPx: 10\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'));\r\n\t    chart.setState({ animations: { enabled: false } });\r\n\t    chart.setState({ animations: { enabled: true } });\r\n\t    window['chart'] = chart;\r\n\t    var mainTrend = chart.getTrend('main');\r\n\t    var deadlineMark = chart.state.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chart.state.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        // var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        // if (markOptions) setTimeout(() => {\r\n\t        // \tlet trendsMarks = chart.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\r\n\t        // \ttrendsMarks.createMark(markOptions);\r\n\t        // }, 500);\r\n\t    });\r\n\t    // var previewChart1 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[0],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true}\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart2 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[1],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true}\r\n\t    // \t},\r\n\t    //\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart3 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[2],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true},\r\n\t    // \t\t'red': {dataset: dsRed.data, lineColor: 0xFF2222},\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    var i = 0;\r\n\t    chart.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chart.getTrend('main').appendData([val]);\r\n\t        // chart.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\r\n\t        // chart.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // chart.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // chart.getTrend('red').appendData([val + 10 + Math.random() * 20]);\r\n\t        // chart.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.getTrend('main').appendData([val]);\r\n\t        // previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\r\n\t        // previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.appendData(dataToAppend1);\r\n\t        //\r\n\t        // var chartData2 = previewChart2.state.data.trends[0].data;\r\n\t        // var lastItem2 = chartData2[chartData.length - 1];\r\n\t        // var dataToAppend2 = [\r\n\t        // \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\r\n\t        // ];\r\n\t        // previewChart2.appendData(dataToAppend2);\r\n\t        // previewChart3.appendData(dataToAppend2);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: _1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: _1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.state.data.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.state.data.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chart.state.setState({ autoScroll: false });\r\n\t            chart.state.zoomToRange(range);\r\n\t            chart.state.scrollToEnd().then(function () {\r\n\t                chart.state.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(2));\r\n\t__export(__webpack_require__(21));\r\n\t__export(__webpack_require__(20));\r\n\t__export(__webpack_require__(19));\r\n\t__export(__webpack_require__(15));\r\n\t__export(__webpack_require__(16));\r\n\t__export(__webpack_require__(17));\r\n\t__export(__webpack_require__(18));\r\n\t__export(__webpack_require__(4));\r\n\t__export(__webpack_require__(22));\r\n\t__export(__webpack_require__(3));\r\n\t__export(__webpack_require__(26));\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// deps must be always on top\r\n\tvar Plugin_1 = __webpack_require__(3);\r\n\t__webpack_require__(5);\r\n\tvar PerspectiveCamera = THREE.PerspectiveCamera;\r\n\tvar State_1 = __webpack_require__(15);\r\n\tvar Widget_1 = __webpack_require__(22);\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar AxisWidget_1 = __webpack_require__(23);\r\n\tvar GridWidget_1 = __webpack_require__(24);\r\n\tvar TrendsGradientWidget_1 = __webpack_require__(25);\r\n\tvar TrendsLineWidget_1 = __webpack_require__(28);\r\n\tvar TrendsCandleWidget_1 = __webpack_require__(29);\r\n\tvar Chart = (function () {\r\n\t    function Chart(state, $container, pluginsAndWidgets) {\r\n\t        var _this = this;\r\n\t        if (pluginsAndWidgets === void 0) { pluginsAndWidgets = []; }\r\n\t        this.widgets = [];\r\n\t        if (!THREE || !THREE.REVISION)\r\n\t            Utils_1.Utils.error('three.js not found');\r\n\t        if (!$container) {\r\n\t            Utils_1.Utils.error('$el must be set');\r\n\t        }\r\n\t        // calculate chart size\r\n\t        var style = getComputedStyle($container);\r\n\t        state.width = parseInt(style.width);\r\n\t        state.height = parseInt(style.height);\r\n\t        var plugins = pluginsAndWidgets.filter(function (pluginOrWidget) { return pluginOrWidget instanceof Plugin_1.ChartPlugin; });\r\n\t        this.state = new State_1.ChartState(state, plugins);\r\n\t        this.pluginsAndWidgets = pluginsAndWidgets;\r\n\t        this.zoomThrottled = Utils_1.Utils.throttle(function (zoomValue, origin) { return _this.zoom(zoomValue, origin); }, 200);\r\n\t        this.$container = $container;\r\n\t        this.init($container);\r\n\t    }\r\n\t    ;\r\n\t    Chart.installWidget = function (Widget) {\r\n\t        if (!Widget.widgetName)\r\n\t            Utils_1.Utils.error('unnamed widget');\r\n\t        this.preinstalledWidgets.push(Widget);\r\n\t    };\r\n\t    Chart.prototype.init = function ($container) {\r\n\t        var state = this.state;\r\n\t        var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\r\n\t        this.scene = new THREE.Scene();\r\n\t        this.isStopped = !autoRender.enabled;\r\n\t        var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\r\n\t            antialias: true,\r\n\t            alpha: true\r\n\t        });\r\n\t        renderer.setSize(w, h);\r\n\t        renderer.setPixelRatio(Chart.devicePixelRatio);\r\n\t        renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\r\n\t        $container.appendChild(renderer.domElement);\r\n\t        this.$el = renderer.domElement;\r\n\t        this.$el.style.display = 'block';\r\n\t        if (showStats) {\r\n\t            this.stats = new Stats();\r\n\t            $container.appendChild(this.stats.domElement);\r\n\t        }\r\n\t        this.setupCamera();\r\n\t        this.initWidgets();\r\n\t        this.bindEvents();\r\n\t        this.renderLoop();\r\n\t    };\r\n\t    /**\r\n\t     * collect and init widgets from preinstalled widgets, plugins widgets and custom widgets\r\n\t     */\r\n\t    Chart.prototype.initWidgets = function () {\r\n\t        var _this = this;\r\n\t        var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\r\n\t        var customWidgets = [];\r\n\t        this.pluginsAndWidgets.forEach(function (pluginOrWidget) {\r\n\t            if (pluginOrWidget instanceof Widget_1.ChartWidget) {\r\n\t                customWidgets.push(pluginOrWidget);\r\n\t                return;\r\n\t            }\r\n\t            if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin))\r\n\t                return;\r\n\t            var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\r\n\t            preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\r\n\t        });\r\n\t        this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function (WidgetClass) { return new WidgetClass(); }));\r\n\t        this.widgets.forEach(function (widget) {\r\n\t            widget.setupChartState(_this.state);\r\n\t            widget.onReadyHandler();\r\n\t            _this.scene.add(widget.getObject3D());\r\n\t        });\r\n\t    };\r\n\t    Chart.prototype.renderLoop = function () {\r\n\t        var _this = this;\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        this.stats && this.stats.begin();\r\n\t        this.render();\r\n\t        if (this.isStopped)\r\n\t            return;\r\n\t        var fpsLimit = this.state.data.autoRender.fps;\r\n\t        if (fpsLimit) {\r\n\t            var delay_1 = 1000 / fpsLimit;\r\n\t            setTimeout(function () { return requestAnimationFrame(function () { return _this.renderLoop(); }); }, delay_1);\r\n\t        }\r\n\t        else {\r\n\t            requestAnimationFrame(function () { return _this.renderLoop(); });\r\n\t        }\r\n\t        this.stats && this.stats.end();\r\n\t    };\r\n\t    Chart.prototype.render = function () {\r\n\t        this.renderer.render(this.scene, this.camera);\r\n\t    };\r\n\t    Chart.prototype.stop = function () {\r\n\t        this.isStopped = true;\r\n\t    };\r\n\t    Chart.prototype.run = function () {\r\n\t        this.isStopped = false;\r\n\t        this.renderLoop();\r\n\t    };\r\n\t    /**\r\n\t     * call to destroy chart an init garbage collection\r\n\t     */\r\n\t    Chart.prototype.destroy = function () {\r\n\t        this.isDestroyed = true;\r\n\t        this.stop();\r\n\t        this.state.destroy();\r\n\t        this.unbindEvents();\r\n\t        // WARNING! undocumented method for free webgl context\r\n\t        try {\r\n\t            this.renderer.forceContextLoss();\r\n\t        }\r\n\t        catch (wtf) {\r\n\t        }\r\n\t        this.renderer.context = null;\r\n\t        this.renderer.domElement = null;\r\n\t        this.renderer = null;\r\n\t    };\r\n\t    Chart.prototype.getState = function () {\r\n\t        return this.state.data;\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for Chart.state.getTrend\r\n\t     */\r\n\t    Chart.prototype.getTrend = function (trendName) {\r\n\t        return this.state.getTrend(trendName);\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for Chart.state.setState\r\n\t     */\r\n\t    Chart.prototype.setState = function (state) {\r\n\t        return this.state.setState(state);\r\n\t    };\r\n\t    Chart.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var $el = this.$el;\r\n\t        if (this.state.data.controls.enabled) {\r\n\t            $el.addEventListener('mousewheel', function (ev) {\r\n\t                _this.onMouseWheel(ev);\r\n\t            });\r\n\t            $el.addEventListener('mousemove', function (ev) {\r\n\t                _this.onMouseMove(ev);\r\n\t            });\r\n\t            $el.addEventListener('mousedown', function (ev) { return _this.onMouseDown(ev); });\r\n\t            $el.addEventListener('mouseup', function (ev) { return _this.onMouseUp(ev); });\r\n\t            $el.addEventListener('touchmove', function (ev) {\r\n\t                _this.onTouchMove(ev);\r\n\t            });\r\n\t            $el.addEventListener('touchend', function (ev) {\r\n\t                _this.onTouchEnd(ev);\r\n\t            });\r\n\t        }\r\n\t        if (this.state.data.autoResize) {\r\n\t        }\r\n\t        this.unsubscribers = [\r\n\t            this.state.onTrendsChange(function () { return _this.autoscroll(); }),\r\n\t            this.state.screen.onTransformationFrame(function (options) { return _this.onScreenTransformHandler(options); }),\r\n\t            this.state.onResize(function (options) { return _this.onChartResize(); })\r\n\t        ];\r\n\t    };\r\n\t    Chart.prototype.unbindEvents = function () {\r\n\t        // TODO: unbind events correctly\r\n\t        try {\r\n\t            this.resizeSensor && this.resizeSensor.detach();\r\n\t        }\r\n\t        catch (e) {\r\n\t        }\r\n\t        this.$el.remove();\r\n\t        this.unsubscribers.forEach(function (unsubscribe) { return unsubscribe(); });\r\n\t    };\r\n\t    Chart.prototype.setupCamera = function () {\r\n\t        var camSettings = this.state.screen.getCameraSettings();\r\n\t        if (!this.camera) {\r\n\t            this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\r\n\t            this.scene.add(this.camera);\r\n\t        }\r\n\t        else {\r\n\t            this.camera.fov = camSettings.FOV;\r\n\t            this.camera.aspect = camSettings.aspect;\r\n\t            this.camera.far = camSettings.far;\r\n\t            this.camera.near = camSettings.near;\r\n\t            this.camera.updateProjectionMatrix();\r\n\t        }\r\n\t        this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\r\n\t        this.cameraInitialPosition = this.camera.position.clone();\r\n\t        this.onScreenTransformHandler(this.state.screen.options);\r\n\t    };\r\n\t    Chart.prototype.onScreenTransformHandler = function (options) {\r\n\t        if (options.scrollX != void 0) {\r\n\t            var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\r\n\t            // scrollX =  Math.round(scrollX); // prevent to set camera beetween pixels\r\n\t            this.camera.position.setX(scrollX_1);\r\n\t        }\r\n\t        if (options.scrollY != void 0) {\r\n\t            var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\r\n\t            // scrollY = Math.round(scrollY); // prevent to set camera beetween pixels\r\n\t            this.camera.position.setY(scrollY_1);\r\n\t        }\r\n\t    };\r\n\t    Chart.prototype.autoscroll = function () {\r\n\t        var state = this.state;\r\n\t        if (!state.data.autoScroll)\r\n\t            return;\r\n\t        var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\r\n\t        var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\r\n\t        if (trendsMaxXDelta > 0) {\r\n\t            var maxVisibleX = this.state.screen.getScreenRightVal();\r\n\t            var paddingRightX = this.state.getPaddingRight();\r\n\t            var currentScroll = state.data.xAxis.range.scroll;\r\n\t            if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\r\n\t                return;\r\n\t            }\r\n\t            var scrollDelta = trendsMaxXDelta;\r\n\t            this.setState({ xAxis: { range: { scroll: currentScroll + scrollDelta } } });\r\n\t        }\r\n\t    };\r\n\t    Chart.prototype.onScrollStop = function () {\r\n\t        // var tendsXMax = this.state.data.computedData.trends.maxX;\r\n\t        // var paddingRightX = this.state.getPaddingRight();\r\n\t        // if (tendsXMax < paddingRightX) {\r\n\t        // \tthis.state.scrollToEnd();\r\n\t        // }\r\n\t    };\r\n\t    Chart.prototype.onMouseDown = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: true, x: ev.clientX, y: ev.clientY } });\r\n\t    };\r\n\t    Chart.prototype.onMouseUp = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: false } });\r\n\t    };\r\n\t    Chart.prototype.onMouseMove = function (ev) {\r\n\t        if (this.state.data.cursor.dragMode) {\r\n\t            this.setState({ cursor: { dragMode: true, x: ev.clientX, y: ev.clientY } });\r\n\t        }\r\n\t    };\r\n\t    Chart.prototype.onMouseWheel = function (ev) {\r\n\t        ev.stopPropagation();\r\n\t        ev.preventDefault();\r\n\t        var zoomOrigin = ev.layerX / this.state.data.width;\r\n\t        var zoomValue = 1 + ev.wheelDeltaY * 0.001;\r\n\t        this.zoom(zoomValue, zoomOrigin);\r\n\t    };\r\n\t    Chart.prototype.onTouchMove = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: true, x: ev.touches[0].clientX, y: ev.touches[0].clientY } });\r\n\t    };\r\n\t    Chart.prototype.onTouchEnd = function (ev) {\r\n\t        this.setState({ cursor: { dragMode: false } });\r\n\t    };\r\n\t    Chart.prototype.onChartContainerResizeHandler = function (width, height) {\r\n\t        this.setState({ width: width, height: height });\r\n\t    };\r\n\t    Chart.prototype.onChartResize = function () {\r\n\t        var _a = this.state.data, width = _a.width, height = _a.height;\r\n\t        this.renderer.setSize(width, height);\r\n\t        this.setupCamera();\r\n\t    };\r\n\t    Chart.prototype.zoom = function (zoomValue, zoomOrigin) {\r\n\t        var _this = this;\r\n\t        var MAX_ZOOM_VALUE = 1.5;\r\n\t        var MIN_ZOOM_VALUE = 0.7;\r\n\t        zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\r\n\t        zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\r\n\t        var autoScrollIsEnabled = this.state.data.autoScroll;\r\n\t        if (autoScrollIsEnabled)\r\n\t            this.state.setState({ autoScroll: false });\r\n\t        this.state.zoom(zoomValue, zoomOrigin).then(function () {\r\n\t            if (autoScrollIsEnabled)\r\n\t                _this.setState({ autoScroll: true });\r\n\t        });\r\n\t    };\r\n\t    Chart.devicePixelRatio = window.devicePixelRatio;\r\n\t    Chart.preinstalledWidgets = [];\r\n\t    Chart.renderers = {\r\n\t        CanvasRenderer: THREE.CanvasRenderer,\r\n\t        WebGLRenderer: THREE.WebGLRenderer\r\n\t    };\r\n\t    return Chart;\r\n\t}());\r\n\texports.Chart = Chart;\r\n\t// install built-in widgets\r\n\tChart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\r\n\tChart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\r\n\tChart.installWidget(AxisWidget_1.AxisWidget);\r\n\tChart.installWidget(GridWidget_1.GridWidget);\r\n\tChart.installWidget(TrendsGradientWidget_1.TrendsGradientWidget);\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\texports.DEFAULT_CONFIG = {\r\n\t    installPluginWidgets: true\r\n\t};\r\n\t/**\r\n\t * base class for all plugins\r\n\t * NAME is mandatory\r\n\t */\r\n\tvar ChartPlugin = (function () {\r\n\t    function ChartPlugin(options, config) {\r\n\t        if (config === void 0) { config = {}; }\r\n\t        this.unsubscribers = [];\r\n\t        this.initialState = options;\r\n\t        this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\r\n\t        this.name = this.constructor.NAME;\r\n\t        if (!this.name)\r\n\t            Utils_1.Utils.error('Unnamed plugin detected');\r\n\t    }\r\n\t    ChartPlugin.prototype.setupChartState = function (chartState) {\r\n\t        var _this = this;\r\n\t        this.chartState = chartState;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.bindEvent(this.chartState.onInitialStateApplied(function (initialState) { return _this.onInitialStateAppliedHandler(initialState); }), this.chartState.onReady(function () { return _this.onReadyHandler(); }), this.chartState.onDestroy(function () { return _this.onDestroyHandler(); }), this.chartState.onPluginsStateChange(function (changedPluginsStates) { return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]); }));\r\n\t    };\r\n\t    ChartPlugin.prototype.getOptions = function () {\r\n\t        return this.chartState.data.pluginsState[this.name];\r\n\t    };\r\n\t    ChartPlugin.prototype.onInitialStateAppliedHandler = function (initialState) {\r\n\t    };\r\n\t    ChartPlugin.prototype.onReadyHandler = function () {\r\n\t    };\r\n\t    ChartPlugin.prototype.onStateChanged = function (changedState) {\r\n\t    };\r\n\t    ChartPlugin.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t    };\r\n\t    ChartPlugin.prototype.bindEvent = function () {\r\n\t        var args = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            args[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        var unsubscribers = [];\r\n\t        if (!Array.isArray(args[0])) {\r\n\t            unsubscribers.push(args[0]);\r\n\t        }\r\n\t        else {\r\n\t            unsubscribers.push.apply(unsubscribers, (args));\r\n\t        }\r\n\t        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\r\n\t        var _a;\r\n\t    };\r\n\t    ChartPlugin.prototype.unbindEvents = function () {\r\n\t        this.unsubscribers.forEach(function (unsubscriber) { return unsubscriber(); });\r\n\t        this.unsubscribers.length = 0;\r\n\t    };\r\n\t    ChartPlugin.NAME = '';\r\n\t    ChartPlugin.providedWidgets = [];\r\n\t    return ChartPlugin;\r\n\t}());\r\n\texports.ChartPlugin = ChartPlugin;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar deps_1 = __webpack_require__(5);\r\n\tfunction deepmerge(target, src, mergeArrays) {\r\n\t    if (mergeArrays === void 0) { mergeArrays = true; }\r\n\t    var array = Array.isArray(src);\r\n\t    var dst = array && [] || {};\r\n\t    if (array) {\r\n\t        target = target || [];\r\n\t        if (mergeArrays) {\r\n\t            dst = dst.concat(target);\r\n\t        }\r\n\t        src.forEach(function (e, i) {\r\n\t            if (typeof dst[i] === 'undefined') {\r\n\t                dst[i] = e;\r\n\t            }\r\n\t            else if (typeof e === 'object') {\r\n\t                dst[i] = deepmerge(target[i], e, mergeArrays);\r\n\t            }\r\n\t            else {\r\n\t                if (target.indexOf(e) === -1) {\r\n\t                    dst.push(e);\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    else {\r\n\t        if (target && typeof target === 'object') {\r\n\t            Object.keys(target).forEach(function (key) {\r\n\t                dst[key] = target[key];\r\n\t            });\r\n\t        }\r\n\t        Object.keys(src).forEach(function (key) {\r\n\t            if (typeof src[key] !== 'object' || !src[key]) {\r\n\t                dst[key] = src[key];\r\n\t            }\r\n\t            else {\r\n\t                if (!target[key]) {\r\n\t                    dst[key] = src[key];\r\n\t                }\r\n\t                else {\r\n\t                    dst[key] = deepmerge(target[key], src[key], mergeArrays);\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t    return dst;\r\n\t}\r\n\t/**\r\n\t * project utils static class\r\n\t */\r\n\tvar Utils = (function () {\r\n\t    function Utils() {\r\n\t    }\r\n\t    /**\r\n\t     * deepMerge based on https://www.npmjs.com/package/deepmerge\r\n\t     */\r\n\t    Utils.deepMerge = function (obj1, obj2, mergeArrays) {\r\n\t        return deepmerge(obj1, obj2, mergeArrays);\r\n\t    };\r\n\t    /**\r\n\t     * deepCopy based on JSON.stringify function\r\n\t     * @deprecated\r\n\t     */\r\n\t    Utils.deepCopy = function (obj) {\r\n\t        // TODO: use deepMerge function to copy\r\n\t        return JSON.parse(JSON.stringify(obj));\r\n\t    };\r\n\t    /**\r\n\t     *\r\n\t     * @example\r\n\t     * // returns \"000015\"\r\n\t     * Utils.toFixed(15, 6);\r\n\t     */\r\n\t    Utils.toFixed = function (num, digitsCount) {\r\n\t        var maxDigits = 15;\r\n\t        var result = '';\r\n\t        var intVal = Math.floor(num);\r\n\t        var intStr = intVal.toString();\r\n\t        var lengthDiff = digitsCount - intStr.length;\r\n\t        if (lengthDiff > 0) {\r\n\t            result = '0'.repeat(lengthDiff) + intStr;\r\n\t        }\r\n\t        else {\r\n\t            result = intStr;\r\n\t        }\r\n\t        var afterPointDigitsCount = maxDigits - intStr.length;\r\n\t        var afterPointStr = num.toString().split('.')[1];\r\n\t        if (afterPointStr) {\r\n\t            result += '.' + afterPointStr.substr(0, afterPointDigitsCount);\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    Utils.bindEvent = function () {\r\n\t    };\r\n\t    /**\r\n\t     * generate texture from canvas context\r\n\t     * @example\r\n\t     * \t// create texture with rect\r\n\t     *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\r\n\t     */\r\n\t    Utils.createTexture = function (width, height, fn) {\r\n\t        var canvas = document.createElement('canvas');\r\n\t        canvas.width = width;\r\n\t        canvas.height = height;\r\n\t        var ctx = canvas.getContext('2d');\r\n\t        fn(ctx);\r\n\t        var texture = new THREE.Texture(canvas);\r\n\t        texture.needsUpdate = true;\r\n\t        return texture;\r\n\t    };\r\n\t    /**\r\n\t     * generate texture from canvas context with NearestFilter\r\n\t     * @example\r\n\t     * \t// create texture with rect\r\n\t     *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\r\n\t     */\r\n\t    Utils.createPixelPerfectTexture = function (width, height, fn) {\r\n\t        var texture = this.createTexture(width, height, fn);\r\n\t        // texture.magFilter = THREE.NearestFilter;\r\n\t        texture.minFilter = THREE.NearestFilter;\r\n\t        return texture;\r\n\t    };\r\n\t    /**\r\n\t     * throw error\r\n\t     */\r\n\t    Utils.error = function (msg) {\r\n\t        console.error('Chart error: ' + msg);\r\n\t        throw 'Chart: ' + msg;\r\n\t    };\r\n\t    /**\r\n\t     * throw error\r\n\t     */\r\n\t    Utils.warn = function (msg) {\r\n\t        console.warn('Chart warning: ' + msg);\r\n\t    };\r\n\t    /**\r\n\t     * @returns new unique id\r\n\t     */\r\n\t    Utils.getUid = function () {\r\n\t        return this.currentId++;\r\n\t    };\r\n\t    /**\r\n\t     * @returns distance between numbers\r\n\t     */\r\n\t    Utils.getDistance = function (num1, num2) {\r\n\t        return Math.max(num1, num2) - Math.min(num1, num2);\r\n\t    };\r\n\t    Utils.binarySearchClosestInd = function (arr, num, key) {\r\n\t        var mid;\r\n\t        var lo = 0;\r\n\t        var hi = arr.length - 1;\r\n\t        while (hi - lo > 1) {\r\n\t            mid = Math.floor((lo + hi) / 2);\r\n\t            if (arr[mid][key] < num) {\r\n\t                lo = mid;\r\n\t            }\r\n\t            else {\r\n\t                hi = mid;\r\n\t            }\r\n\t        }\r\n\t        if (num - arr[lo][key] <= arr[hi][key] - num) {\r\n\t            return lo;\r\n\t        }\r\n\t        return hi;\r\n\t    };\r\n\t    Utils.binarySearchClosest = function (arr, num, key) {\r\n\t        var ind = this.binarySearchClosestInd(arr, num, key);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.rectsIntersect = function (r1, r2) {\r\n\t        var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\r\n\t        var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\r\n\t        var _a = [left1 + width1, left2 + width2, top1 + height1, top2 + height2], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\r\n\t        return !(left2 > right1 ||\r\n\t            right2 < left1 ||\r\n\t            top2 > bottom1 ||\r\n\t            bottom2 < top1);\r\n\t    };\r\n\t    Utils.throttle = function (func, ms) {\r\n\t        var isThrottled = false, savedArgs, savedThis;\r\n\t        function wrapper() {\r\n\t            if (isThrottled) {\r\n\t                savedArgs = arguments;\r\n\t                savedThis = this;\r\n\t                return;\r\n\t            }\r\n\t            func.apply(this, arguments); // (1)\r\n\t            isThrottled = true;\r\n\t            setTimeout(function () {\r\n\t                isThrottled = false; // (3)\r\n\t                if (savedArgs) {\r\n\t                    wrapper.apply(savedThis, savedArgs);\r\n\t                    savedArgs = savedThis = null;\r\n\t                }\r\n\t            }, ms);\r\n\t        }\r\n\t        return wrapper;\r\n\t    };\r\n\t    Utils.msToTimeString = function (timestamp) {\r\n\t        var h = Math.floor(timestamp / 360000);\r\n\t        var m = Math.floor(timestamp / 60000);\r\n\t        var s = Math.floor(timestamp / 1000);\r\n\t        return h + ':' + m + ':' + s;\r\n\t    };\r\n\t    Utils.getRandomItem = function (arr) {\r\n\t        var ind = Math.floor(Math.random() * arr.length);\r\n\t        return arr[ind];\r\n\t    };\r\n\t    Utils.copyProps = function (srcObject, dstObject, props, excludeProps) {\r\n\t        if (excludeProps === void 0) { excludeProps = []; }\r\n\t        for (var key in props) {\r\n\t            if (excludeProps.indexOf(key) !== -1)\r\n\t                continue;\r\n\t            if (srcObject[key] == void 0)\r\n\t                continue;\r\n\t            if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\r\n\t                this.copyProps(srcObject[key], dstObject[key], props[key]);\r\n\t            }\r\n\t            else {\r\n\t                dstObject[key] = this.deepCopy(srcObject[key]);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Utils.currentId = 1;\r\n\t    return Utils;\r\n\t}());\r\n\texports.Utils = Utils;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"./ResizeSensor.ts\" />\r\n\t\"use strict\";\r\n\twindow.TweenLite = TweenMax;\r\n\twindow.Stats = __webpack_require__(6);\r\n\t//require('gsap/src/uncompressed/easing/EasePack.js');\r\n\t__webpack_require__(7);\r\n\t__webpack_require__(8);\r\n\texports.isPlainObject = __webpack_require__(9);\r\n\texports.EE2 = __webpack_require__(11);\r\n\tvar es6_promise_1 = __webpack_require__(12);\r\n\texports.Promise = es6_promise_1.Promise;\r\n\texports.ResizeSensor = __webpack_require__(13);\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// stats.js - http://github.com/mrdoob/stats.js\n\tvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\n\tif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\n\tStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\n\tv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\t\n\tTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\t\n\t\tTHREE.Material.call( this );\n\t\n\t\tthis.type = 'SpriteCanvasMaterial';\n\t\n\t\tthis.color = new THREE.Color( 0xffffff );\n\t\tthis.program = function ( context, color ) {};\n\t\n\t\tthis.setValues( parameters );\n\t\n\t};\n\t\n\tTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\n\tTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t\n\tTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\t\n\t\tvar material = new THREE.SpriteCanvasMaterial();\n\t\n\t\tmaterial.copy( this );\n\t\tmaterial.color.copy( this.color );\n\t\tmaterial.program = this.program;\n\t\n\t\treturn material;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.CanvasRenderer = function ( parameters ) {\n\t\n\t\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\t\n\t\tparameters = parameters || {};\n\t\n\t\tvar _this = this,\n\t\t_renderData, _elements, _lights,\n\t\t_projector = new THREE.Projector(),\n\t\n\t\t_canvas = parameters.canvas !== undefined\n\t\t\t\t ? parameters.canvas\n\t\t\t\t : document.createElement( 'canvas' ),\n\t\n\t\t_canvasWidth = _canvas.width,\n\t\t_canvasHeight = _canvas.height,\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\t\n\t\t_viewportX = 0,\n\t\t_viewportY = 0,\n\t\t_viewportWidth = _canvasWidth,\n\t\t_viewportHeight = _canvasHeight,\n\t\n\t\t_pixelRatio = 1,\n\t\n\t\t_context = _canvas.getContext( '2d', {\n\t\t\talpha: parameters.alpha === true\n\t\t} ),\n\t\n\t\t_clearColor = new THREE.Color( 0x000000 ),\n\t\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\t\n\t\t_contextGlobalAlpha = 1,\n\t\t_contextGlobalCompositeOperation = 0,\n\t\t_contextStrokeStyle = null,\n\t\t_contextFillStyle = null,\n\t\t_contextLineWidth = null,\n\t\t_contextLineCap = null,\n\t\t_contextLineJoin = null,\n\t\t_contextLineDash = [],\n\t\n\t\t_camera,\n\t\n\t\t_v1, _v2, _v3, _v4,\n\t\t_v5 = new THREE.RenderableVertex(),\n\t\t_v6 = new THREE.RenderableVertex(),\n\t\n\t\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\t\n\t\t_color = new THREE.Color(),\n\t\t_color1 = new THREE.Color(),\n\t\t_color2 = new THREE.Color(),\n\t\t_color3 = new THREE.Color(),\n\t\t_color4 = new THREE.Color(),\n\t\n\t\t_diffuseColor = new THREE.Color(),\n\t\t_emissiveColor = new THREE.Color(),\n\t\n\t\t_lightColor = new THREE.Color(),\n\t\n\t\t_patterns = {},\n\t\n\t\t_image, _uvs,\n\t\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\t\n\t\t_clipBox = new THREE.Box2(),\n\t\t_clearBox = new THREE.Box2(),\n\t\t_elemBox = new THREE.Box2(),\n\t\n\t\t_ambientLight = new THREE.Color(),\n\t\t_directionalLights = new THREE.Color(),\n\t\t_pointLights = new THREE.Color(),\n\t\n\t\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t\t_centroid = new THREE.Vector3(),\n\t\t_normal = new THREE.Vector3(),\n\t\t_normalViewMatrix = new THREE.Matrix3();\n\t\n\t\t/* TODO\n\t\t_canvas.mozImageSmoothingEnabled = false;\n\t\t_canvas.webkitImageSmoothingEnabled = false;\n\t\t_canvas.msImageSmoothingEnabled = false;\n\t\t_canvas.imageSmoothingEnabled = false;\n\t\t*/\n\t\n\t\t// dash+gap fallbacks for Firefox and everything else\n\t\n\t\tif ( _context.setLineDash === undefined ) {\n\t\n\t\t\t_context.setLineDash = function () {};\n\t\n\t\t}\n\t\n\t\tthis.domElement = _canvas;\n\t\n\t\tthis.autoClear = true;\n\t\tthis.sortObjects = true;\n\t\tthis.sortElements = true;\n\t\n\t\tthis.info = {\n\t\n\t\t\trender: {\n\t\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t// WebGLRenderer compatibility\n\t\n\t\tthis.supportsVertexTextures = function () {};\n\t\tthis.setFaceCulling = function () {};\n\t\n\t\t// API\n\t\n\t\tthis.getContext = function () {\n\t\n\t\t\treturn _context;\n\t\n\t\t};\n\t\n\t\tthis.getContextAttributes = function () {\n\t\n\t\t\treturn _context.getContextAttributes();\n\t\n\t\t};\n\t\n\t\tthis.getPixelRatio = function () {\n\t\n\t\t\treturn _pixelRatio;\n\t\n\t\t};\n\t\n\t\tthis.setPixelRatio = function ( value ) {\n\t\n\t\t\tif ( value !== undefined ) _pixelRatio = value;\n\t\n\t\t};\n\t\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\t\n\t\t\t_canvasWidth = width * _pixelRatio;\n\t\t\t_canvasHeight = height * _pixelRatio;\n\t\n\t\t\t_canvas.width = _canvasWidth;\n\t\t\t_canvas.height = _canvasHeight;\n\t\n\t\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\t\n\t\t\tif ( updateStyle !== false ) {\n\t\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\n\t\t\t}\n\t\n\t\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\t\n\t\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\t\n\t\t\t_contextGlobalAlpha = 1;\n\t\t\t_contextGlobalCompositeOperation = 0;\n\t\t\t_contextStrokeStyle = null;\n\t\t\t_contextFillStyle = null;\n\t\t\t_contextLineWidth = null;\n\t\t\t_contextLineCap = null;\n\t\t\t_contextLineJoin = null;\n\t\n\t\t\tthis.setViewport( 0, 0, width, height );\n\t\n\t\t};\n\t\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\t\n\t\t\t_viewportX = x * _pixelRatio;\n\t\t\t_viewportY = y * _pixelRatio;\n\t\n\t\t\t_viewportWidth = width * _pixelRatio;\n\t\t\t_viewportHeight = height * _pixelRatio;\n\t\n\t\t};\n\t\n\t\tthis.setScissor = function () {};\n\t\tthis.setScissorTest = function () {};\n\t\n\t\tthis.setClearColor = function ( color, alpha ) {\n\t\n\t\t\t_clearColor.set( color );\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\t\n\t\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\t\n\t\t};\n\t\n\t\tthis.setClearColorHex = function ( hex, alpha ) {\n\t\n\t\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\t\tthis.setClearColor( hex, alpha );\n\t\n\t\t};\n\t\n\t\tthis.getClearColor = function () {\n\t\n\t\t\treturn _clearColor;\n\t\n\t\t};\n\t\n\t\tthis.getClearAlpha = function () {\n\t\n\t\t\treturn _clearAlpha;\n\t\n\t\t};\n\t\n\t\tthis.getMaxAnisotropy = function () {\n\t\n\t\t\treturn 0;\n\t\n\t\t};\n\t\n\t\tthis.clear = function () {\n\t\n\t\t\tif ( _clearBox.isEmpty() === false ) {\n\t\n\t\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t\t_clearBox.expandByScalar( 2 );\n\t\n\t\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\t\n\t\t\t\tif ( _clearAlpha < 1 ) {\n\t\n\t\t\t\t\t_context.clearRect(\n\t\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t\t);\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( _clearAlpha > 0 ) {\n\t\n\t\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\t\tsetOpacity( 1 );\n\t\n\t\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\t\n\t\t\t\t\t_context.fillRect(\n\t\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t\t);\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_clearBox.makeEmpty();\n\t\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t// compatibility\n\t\n\t\tthis.clearColor = function () {};\n\t\tthis.clearDepth = function () {};\n\t\tthis.clearStencil = function () {};\n\t\n\t\tthis.render = function ( scene, camera ) {\n\t\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\n\t\n\t\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\t\n\t\t\t}\n\t\n\t\t\tif ( this.autoClear === true ) this.clear();\n\t\n\t\t\t_this.info.render.vertices = 0;\n\t\t\t_this.info.render.faces = 0;\n\t\n\t\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\t\n\t\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t\t_elements = _renderData.elements;\n\t\t\t_lights = _renderData.lights;\n\t\t\t_camera = camera;\n\t\n\t\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\t\n\t\t\t/* DEBUG\n\t\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t\t*/\n\t\n\t\t\tcalculateLights();\n\t\n\t\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\t\n\t\t\t\tvar element = _elements[ e ];\n\t\n\t\t\t\tvar material = element.material;\n\t\n\t\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\t\n\t\t\t\t_elemBox.makeEmpty();\n\t\n\t\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\t\n\t\t\t\t\t_v1 = element;\n\t\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\t\n\t\t\t\t\trenderSprite( _v1, element, material );\n\t\n\t\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\t\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\t\n\t\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen\n\t\t\t\t\t] );\n\t\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\t\n\t\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\t\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\t\n\t\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\t\n\t\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\t\n\t\t\t\t\tif ( material.overdraw > 0 ) {\n\t\n\t\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t\t_v3.positionScreen\n\t\t\t\t\t] );\n\t\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\t\n\t\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t/* DEBUG\n\t\t\t\tsetLineWidth( 1 );\n\t\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t\t*/\n\t\n\t\t\t\t_clearBox.union( _elemBox );\n\t\n\t\t\t}\n\t\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t\t*/\n\t\n\t\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tfunction calculateLights() {\n\t\n\t\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t\t_pointLights.setRGB( 0, 0, 0 );\n\t\n\t\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\t\n\t\t\t\tvar light = _lights[ l ];\n\t\t\t\tvar lightColor = light.color;\n\t\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\t\n\t\t\t\t\t_ambientLight.add( lightColor );\n\t\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\t\n\t\t\t\t\t// for sprites\n\t\n\t\t\t\t\t_directionalLights.add( lightColor );\n\t\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\t\n\t\t\t\t\t// for sprites\n\t\n\t\t\t\t\t_pointLights.add( lightColor );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction calculateLight( position, normal, color ) {\n\t\n\t\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\t\n\t\t\t\tvar light = _lights[ l ];\n\t\n\t\t\t\t_lightColor.copy( light.color );\n\t\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\t\n\t\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\t\n\t\t\t\t\tvar amount = normal.dot( lightPosition );\n\t\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\t\n\t\t\t\t\tamount *= light.intensity;\n\t\n\t\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\t\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\t\n\t\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\t\n\t\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\t\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\t\n\t\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\t\n\t\t\t\t\tif ( amount == 0 ) continue;\n\t\n\t\t\t\t\tamount *= light.intensity;\n\t\n\t\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction renderSprite( v1, element, material ) {\n\t\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\t\n\t\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\t\n\t\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\t\n\t\t\tif ( material instanceof THREE.SpriteMaterial ) {\n\t\n\t\t\t\tvar texture = material.map;\n\t\n\t\t\t\tif ( texture !== null ) {\n\t\n\t\t\t\t\tvar pattern = _patterns[ texture.id ];\n\t\n\t\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\t\n\t\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( pattern.canvas !== undefined ) {\n\t\n\t\t\t\t\t\tsetFillStyle( pattern.canvas );\n\t\n\t\t\t\t\t\tvar bitmap = texture.image;\n\t\n\t\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\t\n\t\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\t\n\t\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\t\tvar cy = scaleY / sy;\n\t\n\t\t\t\t\t\t_context.save();\n\t\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t\t_context.restore();\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// no texture\n\t\n\t\t\t\t\tsetFillStyle( material.color.getStyle() );\n\t\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t\t_context.restore();\n\t\n\t\t\t\t}\n\t\n\t\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\t\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\t\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, scaleY );\n\t\n\t\t\t\tmaterial.program( _context );\n\t\n\t\t\t\t_context.restore();\n\t\n\t\t\t}\n\t\n\t\t\t/* DEBUG\n\t\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t\t_context.stroke();\n\t\t\t*/\n\t\n\t\t}\n\t\n\t\tfunction renderLine( v1, v2, element, material ) {\n\t\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\t\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\t\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\t\n\t\t\t\tsetLineWidth( material.linewidth );\n\t\t\t\tsetLineCap( material.linecap );\n\t\t\t\tsetLineJoin( material.linejoin );\n\t\n\t\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\t\n\t\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\t\n\t\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\t\n\t\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\ttry {\n\t\n\t\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\t\n\t\t\t\t\t\t} catch ( exception ) {\n\t\n\t\t\t\t\t\t\tgrad = colorStyle1;\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tsetStrokeStyle( grad );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_context.stroke();\n\t\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\t\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\t\n\t\t\t\tsetLineWidth( material.linewidth );\n\t\t\t\tsetLineCap( material.linecap );\n\t\t\t\tsetLineJoin( material.linejoin );\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\t\n\t\t\t\t_context.stroke();\n\t\n\t\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\t\n\t\t\t\tsetLineDash( [] );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\t\n\t\t\t_this.info.render.vertices += 3;\n\t\t\t_this.info.render.faces ++;\n\t\n\t\t\tsetOpacity( material.opacity );\n\t\t\tsetBlending( material.blending );\n\t\n\t\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\t\n\t\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\t\n\t\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\t\n\t\t\t\t_diffuseColor.copy( material.color );\n\t\t\t\t_emissiveColor.copy( material.emissive );\n\t\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\t\n\t\t\t\t\t_diffuseColor.multiply( element.color );\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_color.copy( _ambientLight );\n\t\n\t\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\t\n\t\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\t\n\t\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\t\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t} else if ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t\t    material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t\t    material instanceof THREE.MeshPhongMaterial ) {\n\t\n\t\t\t\tif ( material.map !== null ) {\n\t\n\t\t\t\t\tvar mapping = material.map.mapping;\n\t\n\t\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\t\n\t\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( material.envMap !== null ) {\n\t\n\t\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\t\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\t\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\t\n\t\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\t\n\t\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t_color.copy( material.color );\n\t\n\t\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\t\n\t\t\t\t\t\t_color.multiply( element.color );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t\t}\n\t\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\t\n\t\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\t\n\t\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\t\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t} else {\n\t\n\t\t\t\t_color.setRGB( 1, 1, 1 );\n\t\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\t\n\t\t\t_context.beginPath();\n\t\t\t_context.moveTo( x0, y0 );\n\t\t\t_context.lineTo( x1, y1 );\n\t\t\t_context.lineTo( x2, y2 );\n\t\t\t_context.closePath();\n\t\n\t\t}\n\t\n\t\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\t\n\t\t\tsetLineWidth( linewidth );\n\t\t\tsetLineCap( linecap );\n\t\t\tsetLineJoin( linejoin );\n\t\t\tsetStrokeStyle( color.getStyle() );\n\t\n\t\t\t_context.stroke();\n\t\n\t\t\t_elemBox.expandByScalar( linewidth * 2 );\n\t\n\t\t}\n\t\n\t\tfunction fillPath( color ) {\n\t\n\t\t\tsetFillStyle( color.getStyle() );\n\t\t\t_context.fill();\n\t\n\t\t}\n\t\n\t\tfunction textureToPattern( texture ) {\n\t\n\t\t\tif ( texture.version === 0 ||\n\t\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\t\ttexture instanceof THREE.DataTexture ) {\n\t\n\t\t\t\treturn {\n\t\t\t\t\tcanvas: undefined,\n\t\t\t\t\tversion: texture.version\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tvar image = texture.image;\n\t\n\t\t\tif ( image.complete === false ) {\n\t\n\t\t\t\treturn {\n\t\t\t\t\tcanvas: undefined,\n\t\t\t\t\tversion: 0\n\t\t\t\t};\n\t\n\t\t\t}\n\t\n\t\t\tvar canvas = document.createElement( 'canvas' );\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\t\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\t\tcontext.drawImage( image, 0, 0 );\n\t\n\t\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t\n\t\t\tvar repeat = 'no-repeat';\n\t\n\t\t\tif ( repeatX === true && repeatY === true ) {\n\t\n\t\t\t\trepeat = 'repeat';\n\t\n\t\t\t} else if ( repeatX === true ) {\n\t\n\t\t\t\trepeat = 'repeat-x';\n\t\n\t\t\t} else if ( repeatY === true ) {\n\t\n\t\t\t\trepeat = 'repeat-y';\n\t\n\t\t\t}\n\t\n\t\t\tvar pattern = _context.createPattern( canvas, repeat );\n\t\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\t\n\t\t\treturn {\n\t\t\t\tcanvas: pattern,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\t\n\t\t}\n\t\n\t\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\t\n\t\t\tvar pattern = _patterns[ texture.id ];\n\t\n\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\t\n\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t_patterns[ texture.id ] = pattern;\n\t\n\t\t\t}\n\t\n\t\t\tif ( pattern.canvas !== undefined ) {\n\t\n\t\t\t\tsetFillStyle( pattern.canvas );\n\t\n\t\t\t} else {\n\t\n\t\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t\t_context.fill();\n\t\t\t\treturn;\n\t\n\t\t\t}\n\t\n\t\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\t\n\t\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\t\twidth = texture.image.width * texture.repeat.x,\n\t\t\theight = texture.image.height * texture.repeat.y;\n\t\n\t\t\tu0 = ( u0 + offsetX ) * width;\n\t\t\tv0 = ( v0 + offsetY ) * height;\n\t\n\t\t\tu1 = ( u1 + offsetX ) * width;\n\t\t\tv1 = ( v1 + offsetY ) * height;\n\t\n\t\t\tu2 = ( u2 + offsetX ) * width;\n\t\t\tv2 = ( v2 + offsetY ) * height;\n\t\n\t\t\tx1 -= x0; y1 -= y0;\n\t\t\tx2 -= x0; y2 -= y0;\n\t\n\t\t\tu1 -= u0; v1 -= v0;\n\t\t\tu2 -= u0; v2 -= v0;\n\t\n\t\t\tdet = u1 * v2 - u2 * v1;\n\t\n\t\t\tif ( det === 0 ) return;\n\t\n\t\t\tidet = 1 / det;\n\t\n\t\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\t\n\t\t\te = x0 - a * u0 - c * v0;\n\t\t\tf = y0 - b * u0 - d * v0;\n\t\n\t\t\t_context.save();\n\t\t\t_context.transform( a, b, c, d, e, f );\n\t\t\t_context.fill();\n\t\t\t_context.restore();\n\t\n\t\t}\n\t\n\t\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\t\n\t\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\t\n\t\t\tvar a, b, c, d, e, f, det, idet,\n\t\t\twidth = image.width - 1,\n\t\t\theight = image.height - 1;\n\t\n\t\t\tu0 *= width; v0 *= height;\n\t\t\tu1 *= width; v1 *= height;\n\t\t\tu2 *= width; v2 *= height;\n\t\n\t\t\tx1 -= x0; y1 -= y0;\n\t\t\tx2 -= x0; y2 -= y0;\n\t\n\t\t\tu1 -= u0; v1 -= v0;\n\t\t\tu2 -= u0; v2 -= v0;\n\t\n\t\t\tdet = u1 * v2 - u2 * v1;\n\t\n\t\t\tidet = 1 / det;\n\t\n\t\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\t\n\t\t\te = x0 - a * u0 - c * v0;\n\t\t\tf = y0 - b * u0 - d * v0;\n\t\n\t\t\t_context.save();\n\t\t\t_context.transform( a, b, c, d, e, f );\n\t\t\t_context.clip();\n\t\t\t_context.drawImage( image, 0, 0 );\n\t\t\t_context.restore();\n\t\n\t\t}\n\t\n\t\t// Hide anti-alias gaps\n\t\n\t\tfunction expand( v1, v2, pixels ) {\n\t\n\t\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\t\tdet = x * x + y * y, idet;\n\t\n\t\t\tif ( det === 0 ) return;\n\t\n\t\t\tidet = pixels / Math.sqrt( det );\n\t\n\t\t\tx *= idet; y *= idet;\n\t\n\t\t\tv2.x += x; v2.y += y;\n\t\t\tv1.x -= x; v1.y -= y;\n\t\n\t\t}\n\t\n\t\t// Context cached methods.\n\t\n\t\tfunction setOpacity( value ) {\n\t\n\t\t\tif ( _contextGlobalAlpha !== value ) {\n\t\n\t\t\t\t_context.globalAlpha = value;\n\t\t\t\t_contextGlobalAlpha = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setBlending( value ) {\n\t\n\t\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\t\n\t\t\t\tif ( value === THREE.NormalBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\t\n\t\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\t\n\t\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'darker';\n\t\n\t\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\t\n\t\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\t\n\t\t\t\t}\n\t\n\t\t\t\t_contextGlobalCompositeOperation = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineWidth( value ) {\n\t\n\t\t\tif ( _contextLineWidth !== value ) {\n\t\n\t\t\t\t_context.lineWidth = value;\n\t\t\t\t_contextLineWidth = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineCap( value ) {\n\t\n\t\t\t// \"butt\", \"round\", \"square\"\n\t\n\t\t\tif ( _contextLineCap !== value ) {\n\t\n\t\t\t\t_context.lineCap = value;\n\t\t\t\t_contextLineCap = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineJoin( value ) {\n\t\n\t\t\t// \"round\", \"bevel\", \"miter\"\n\t\n\t\t\tif ( _contextLineJoin !== value ) {\n\t\n\t\t\t\t_context.lineJoin = value;\n\t\t\t\t_contextLineJoin = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setStrokeStyle( value ) {\n\t\n\t\t\tif ( _contextStrokeStyle !== value ) {\n\t\n\t\t\t\t_context.strokeStyle = value;\n\t\t\t\t_contextStrokeStyle = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setFillStyle( value ) {\n\t\n\t\t\tif ( _contextFillStyle !== value ) {\n\t\n\t\t\t\t_context.fillStyle = value;\n\t\t\t\t_contextFillStyle = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction setLineDash( value ) {\n\t\n\t\t\tif ( _contextLineDash.length !== value.length ) {\n\t\n\t\t\t\t_context.setLineDash( value );\n\t\t\t\t_contextLineDash = value;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author julianwa / https://github.com/julianwa\n\t */\n\t\n\tTHREE.RenderableObject = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.object = null;\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableFace = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.v1 = new THREE.RenderableVertex();\n\t\tthis.v2 = new THREE.RenderableVertex();\n\t\tthis.v3 = new THREE.RenderableVertex();\n\t\n\t\tthis.normalModel = new THREE.Vector3();\n\t\n\t\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t\tthis.vertexNormalsLength = 0;\n\t\n\t\tthis.color = new THREE.Color();\n\t\tthis.material = null;\n\t\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableVertex = function () {\n\t\n\t\tthis.position = new THREE.Vector3();\n\t\tthis.positionWorld = new THREE.Vector3();\n\t\tthis.positionScreen = new THREE.Vector4();\n\t\n\t\tthis.visible = true;\n\t\n\t};\n\t\n\tTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\t\n\t\tthis.positionWorld.copy( vertex.positionWorld );\n\t\tthis.positionScreen.copy( vertex.positionScreen );\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableLine = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.v1 = new THREE.RenderableVertex();\n\t\tthis.v2 = new THREE.RenderableVertex();\n\t\n\t\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t\tthis.material = null;\n\t\n\t\tthis.z = 0;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.RenderableSprite = function () {\n\t\n\t\tthis.id = 0;\n\t\n\t\tthis.object = null;\n\t\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.z = 0;\n\t\n\t\tthis.rotation = 0;\n\t\tthis.scale = new THREE.Vector2();\n\t\n\t\tthis.material = null;\n\t\tthis.renderOrder = 0;\n\t\n\t};\n\t\n\t//\n\t\n\tTHREE.Projector = function () {\n\t\n\t\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\t\n\t\t_renderData = { objects: [], lights: [], elements: [] },\n\t\n\t\t_vector3 = new THREE.Vector3(),\n\t\t_vector4 = new THREE.Vector4(),\n\t\n\t\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t\t_boundingBox = new THREE.Box3(),\n\t\t_points3 = new Array( 3 ),\n\t\t_points4 = new Array( 4 ),\n\t\n\t\t_viewMatrix = new THREE.Matrix4(),\n\t\t_viewProjectionMatrix = new THREE.Matrix4(),\n\t\n\t\t_modelMatrix,\n\t\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\t\n\t\t_normalMatrix = new THREE.Matrix3(),\n\t\n\t\t_frustum = new THREE.Frustum(),\n\t\n\t\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\t\n\t\t//\n\t\n\t\tthis.projectVector = function ( vector, camera ) {\n\t\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\t\tvector.project( camera );\n\t\n\t\t};\n\t\n\t\tthis.unprojectVector = function ( vector, camera ) {\n\t\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\t\tvector.unproject( camera );\n\t\n\t\t};\n\t\n\t\tthis.pickingRay = function ( vector, camera ) {\n\t\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\t\n\t\t};\n\t\n\t\t//\n\t\n\t\tvar RenderList = function () {\n\t\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\t\n\t\t\tvar object = null;\n\t\t\tvar material = null;\n\t\n\t\t\tvar normalMatrix = new THREE.Matrix3();\n\t\n\t\t\tfunction setObject( value ) {\n\t\n\t\t\t\tobject = value;\n\t\t\t\tmaterial = object.material;\n\t\n\t\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\t\n\t\t\t\tnormals.length = 0;\n\t\t\t\tuvs.length = 0;\n\t\n\t\t\t}\n\t\n\t\t\tfunction projectVertex( vertex ) {\n\t\n\t\t\t\tvar position = vertex.position;\n\t\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\t\tvar positionScreen = vertex.positionScreen;\n\t\n\t\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\t\n\t\t\t\tvar invW = 1 / positionScreen.w;\n\t\n\t\t\t\tpositionScreen.x *= invW;\n\t\t\t\tpositionScreen.y *= invW;\n\t\t\t\tpositionScreen.z *= invW;\n\t\n\t\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushVertex( x, y, z ) {\n\t\n\t\t\t\t_vertex = getNextVertexInPool();\n\t\t\t\t_vertex.position.set( x, y, z );\n\t\n\t\t\t\tprojectVertex( _vertex );\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushNormal( x, y, z ) {\n\t\n\t\t\t\tnormals.push( x, y, z );\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushUv( x, y ) {\n\t\n\t\t\t\tuvs.push( x, y );\n\t\n\t\t\t}\n\t\n\t\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\t\n\t\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\t\n\t\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t\t_points3[ 2 ] = v3.positionScreen;\n\t\n\t\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\t\n\t\t\t}\n\t\n\t\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\t\n\t\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushLine( a, b ) {\n\t\n\t\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\t\tvar v2 = _vertexPool[ b ];\n\t\n\t\t\t\t_line = getNextLineInPool();\n\t\n\t\t\t\t_line.id = object.id;\n\t\t\t\t_line.v1.copy( v1 );\n\t\t\t\t_line.v2.copy( v2 );\n\t\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\t\t\t\t_line.renderOrder = object.renderOrder;\n\t\n\t\t\t\t_line.material = object.material;\n\t\n\t\t\t\t_renderData.elements.push( _line );\n\t\n\t\t\t}\n\t\n\t\t\tfunction pushTriangle( a, b, c ) {\n\t\n\t\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\t\tvar v3 = _vertexPool[ c ];\n\t\n\t\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\t\n\t\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\t\n\t\t\t\t\t_face = getNextFaceInPool();\n\t\n\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\t\n\t\t\t\t\t// use first vertex normal as face normal\n\t\n\t\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\t\n\t\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\t\n\t\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\t_face.vertexNormalsLength = 3;\n\t\n\t\t\t\t\t_face.material = object.material;\n\t\n\t\t\t\t\t_renderData.elements.push( _face );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tsetObject: setObject,\n\t\t\t\tprojectVertex: projectVertex,\n\t\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\t\tpushVertex: pushVertex,\n\t\t\t\tpushNormal: pushNormal,\n\t\t\t\tpushUv: pushUv,\n\t\t\t\tpushLine: pushLine,\n\t\t\t\tpushTriangle: pushTriangle\n\t\t\t}\n\t\n\t\t};\n\t\n\t\tvar renderList = new RenderList();\n\t\n\t\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\t\n\t\t\t_faceCount = 0;\n\t\t\t_lineCount = 0;\n\t\t\t_spriteCount = 0;\n\t\n\t\t\t_renderData.elements.length = 0;\n\t\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\t\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\t\n\t\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\t\n\t\t\t//\n\t\n\t\t\t_objectCount = 0;\n\t\n\t\t\t_renderData.objects.length = 0;\n\t\t\t_renderData.lights.length = 0;\n\t\n\t\t\tfunction addObject( object ) {\n\t\n\t\t\t\t_object = getNextObjectInPool();\n\t\t\t\t_object.id = object.id;\n\t\t\t\t_object.object = object;\n\t\n\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t_vector3.applyProjection( _viewProjectionMatrix );\n\t\t\t\t_object.z = _vector3.z;\n\t\t\t\t_object.renderOrder = object.renderOrder;\n\t\n\t\t\t\t_renderData.objects.push( _object );\n\t\n\t\t\t}\n\t\n\t\t\tscene.traverseVisible( function ( object ) {\n\t\n\t\t\t\tif ( object instanceof THREE.Light ) {\n\t\n\t\t\t\t\t_renderData.lights.push( object );\n\t\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {\n\t\n\t\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\t\n\t\t\t\t\taddObject( object );\n\t\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\t\n\t\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\t\n\t\t\t\t\taddObject( object );\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tif ( sortObjects === true ) {\n\t\n\t\t\t\t_renderData.objects.sort( painterSort );\n\t\n\t\t\t}\n\t\n\t\t\t//\n\t\n\t\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\t\n\t\t\t\tvar object = _renderData.objects[ o ].object;\n\t\t\t\tvar geometry = object.geometry;\n\t\n\t\t\t\trenderList.setObject( object );\n\t\n\t\t\t\t_modelMatrix = object.matrixWorld;\n\t\n\t\t\t\t_vertexCount = 0;\n\t\n\t\t\t\tif ( object instanceof THREE.Mesh ) {\n\t\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\t\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\t\tvar groups = geometry.groups;\n\t\n\t\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\t\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar normals = attributes.normal.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\t\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\t\n\t\t\t\t\t\t\tif ( groups.length > 0 ) {\n\t\n\t\t\t\t\t\t\t\tfor ( var o = 0; o < groups.length; o ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tvar group = groups[ o ];\n\t\n\t\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\t\n\t\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\n\t\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\t\n\t\t\t\t\t\tvar material = object.material;\n\t\n\t\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\t\n\t\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\t\n\t\t\t\t\t\t\tvar vertex = vertices[ v ];\n\t\n\t\t\t\t\t\t\t_vector3.copy( vertex );\n\t\n\t\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\t\n\t\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\t\n\t\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\t\n\t\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\t\n\t\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\t\n\t\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\t\n\t\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\t\n\t\t\t\t\t\t\tvar face = faces[ f ];\n\t\n\t\t\t\t\t\t\tmaterial = isFaceMaterial === true\n\t\t\t\t\t\t\t\t ? objectMaterials.materials[ face.materialIndex ]\n\t\t\t\t\t\t\t\t : object.material;\n\t\n\t\t\t\t\t\t\tif ( material === undefined ) continue;\n\t\n\t\t\t\t\t\t\tvar side = material.side;\n\t\n\t\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\t\n\t\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\t\n\t\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\t\n\t\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\t\n\t\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face = getNextFaceInPool();\n\t\n\t\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t\t_face.v3.copy( v3 );\n\t\n\t\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\t\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\t\n\t\t\t\t\t\t\t\t_face.normalModel.negate();\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\t\n\t\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\t\n\t\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\t\n\t\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\t\n\t\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\t\n\t\t\t\t\t\t\t\t\tnormalModel.negate();\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\t\n\t\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\t\n\t\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\t\n\t\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\t\n\t\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t\t_face.material = material;\n\t\n\t\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\t\n\t\t\t\t\t\t\t_renderData.elements.push( _face );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( object instanceof THREE.Line ) {\n\t\n\t\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\t\n\t\t\t\t\t\tvar attributes = geometry.attributes;\n\t\n\t\t\t\t\t\tif ( attributes.position !== undefined ) {\n\t\n\t\t\t\t\t\t\tvar positions = attributes.position.array;\n\t\n\t\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\t\n\t\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( geometry.index !== null ) {\n\t\n\t\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\t\n\t\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\t\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\t\n\t\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\t\n\t\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\t\n\t\t\t\t\t\tvar vertices = object.geometry.vertices;\n\t\n\t\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\t\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\t\n\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\t\n\t\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\t\n\t\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\t\n\t\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\t\n\t\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\t\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\t\n\t\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\t\n\t\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\t\n\t\t\t\t\t\t\t\t_line = getNextLineInPool();\n\t\n\t\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\t\n\t\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\t\n\t\t\t\t\t\t\t\t_line.material = object.material;\n\t\n\t\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\t\n\t\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\t\n\t\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\t\n\t\t\t\t\tvar invW = 1 / _vector4.w;\n\t\n\t\t\t\t\t_vector4.z *= invW;\n\t\n\t\t\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\t\n\t\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t\t_sprite.object = object;\n\t\n\t\t\t\t\t\t_sprite.rotation = object.rotation;\n\t\n\t\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\t\n\t\t\t\t\t\t_sprite.material = object.material;\n\t\n\t\t\t\t\t\t_renderData.elements.push( _sprite );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tif ( sortElements === true ) {\n\t\n\t\t\t\t_renderData.elements.sort( painterSort );\n\t\n\t\t\t}\n\t\n\t\t\treturn _renderData;\n\t\n\t\t};\n\t\n\t\t// Pools\n\t\n\t\tfunction getNextObjectInPool() {\n\t\n\t\t\tif ( _objectCount === _objectPoolLength ) {\n\t\n\t\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t\t_objectPool.push( object );\n\t\t\t\t_objectPoolLength ++;\n\t\t\t\t_objectCount ++;\n\t\t\t\treturn object;\n\t\n\t\t\t}\n\t\n\t\t\treturn _objectPool[ _objectCount ++ ];\n\t\n\t\t}\n\t\n\t\tfunction getNextVertexInPool() {\n\t\n\t\t\tif ( _vertexCount === _vertexPoolLength ) {\n\t\n\t\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t\t_vertexPool.push( vertex );\n\t\t\t\t_vertexPoolLength ++;\n\t\t\t\t_vertexCount ++;\n\t\t\t\treturn vertex;\n\t\n\t\t\t}\n\t\n\t\t\treturn _vertexPool[ _vertexCount ++ ];\n\t\n\t\t}\n\t\n\t\tfunction getNextFaceInPool() {\n\t\n\t\t\tif ( _faceCount === _facePoolLength ) {\n\t\n\t\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t\t_facePool.push( face );\n\t\t\t\t_facePoolLength ++;\n\t\t\t\t_faceCount ++;\n\t\t\t\treturn face;\n\t\n\t\t\t}\n\t\n\t\t\treturn _facePool[ _faceCount ++ ];\n\t\n\t\n\t\t}\n\t\n\t\tfunction getNextLineInPool() {\n\t\n\t\t\tif ( _lineCount === _linePoolLength ) {\n\t\n\t\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t\t_linePool.push( line );\n\t\t\t\t_linePoolLength ++;\n\t\t\t\t_lineCount ++;\n\t\t\t\treturn line;\n\t\n\t\t\t}\n\t\n\t\t\treturn _linePool[ _lineCount ++ ];\n\t\n\t\t}\n\t\n\t\tfunction getNextSpriteInPool() {\n\t\n\t\t\tif ( _spriteCount === _spritePoolLength ) {\n\t\n\t\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t\t_spritePool.push( sprite );\n\t\t\t\t_spritePoolLength ++;\n\t\t\t\t_spriteCount ++;\n\t\t\t\treturn sprite;\n\t\n\t\t\t}\n\t\n\t\t\treturn _spritePool[ _spriteCount ++ ];\n\t\n\t\t}\n\t\n\t\t//\n\t\n\t\tfunction painterSort( a, b ) {\n\t\n\t\t\tif ( a.renderOrder !== b.renderOrder ) {\n\t\n\t\t\t\treturn a.renderOrder - b.renderOrder;\n\t\n\t\t\t} else if ( a.z !== b.z ) {\n\t\n\t\t\t\treturn b.z - a.z;\n\t\n\t\t\t} else if ( a.id !== b.id ) {\n\t\n\t\t\t\treturn a.id - b.id;\n\t\n\t\t\t} else {\n\t\n\t\t\t\treturn 0;\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tfunction clipLine( s1, s2 ) {\n\t\n\t\t\tvar alpha1 = 0, alpha2 = 1,\n\t\n\t\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t\t// Z = -1 and Z = +1, respectively.\n\t\t\tbc1near =  s1.z + s1.w,\n\t\t\tbc2near =  s2.z + s2.w,\n\t\t\tbc1far =  - s1.z + s1.w,\n\t\t\tbc2far =  - s2.z + s2.w;\n\t\n\t\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\t\n\t\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\t\treturn true;\n\t\n\t\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\t\n\t\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\t\treturn false;\n\t\n\t\t\t} else {\n\t\n\t\t\t\t// The line segment spans at least one clip plane.\n\t\n\t\t\t\tif ( bc1near < 0 ) {\n\t\n\t\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\t\n\t\t\t\t} else if ( bc2near < 0 ) {\n\t\n\t\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( bc1far < 0 ) {\n\t\n\t\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\t\n\t\t\t\t} else if ( bc2far < 0 ) {\n\t\n\t\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( alpha2 < alpha1 ) {\n\t\n\t\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\t\n\t\t\t\t\treturn true;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t}\n\t\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar isObject = __webpack_require__(10);\n\t\n\tfunction isObjectObject(o) {\n\t  return isObject(o) === true\n\t    && Object.prototype.toString.call(o) === '[object Object]';\n\t}\n\t\n\tmodule.exports = function isPlainObject(o) {\n\t  var ctor,prot;\n\t  \n\t  if (isObjectObject(o) === false) return false;\n\t  \n\t  // If has modified constructor\n\t  ctor = o.constructor;\n\t  if (typeof ctor !== 'function') return false;\n\t  \n\t  // If has modified prototype\n\t  prot = ctor.prototype;\n\t  if (isObjectObject(prot) === false) return false;\n\t  \n\t  // If constructor does not have an Object-specific method\n\t  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n\t    return false;\n\t  }\n\t  \n\t  // Most likely a plain Object\n\t  return true;\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = function isObject(val) {\n\t  return val != null && typeof val === 'object'\n\t    && !Array.isArray(val);\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * EventEmitter2\n\t * https://github.com/hij1nx/EventEmitter2\n\t *\n\t * Copyright (c) 2013 hij1nx\n\t * Licensed under the MIT license.\n\t */\n\t;!function(undefined) {\n\t\n\t  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t    return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t  };\n\t  var defaultMaxListeners = 10;\n\t\n\t  function init() {\n\t    this._events = {};\n\t    if (this._conf) {\n\t      configure.call(this, this._conf);\n\t    }\n\t  }\n\t\n\t  function configure(conf) {\n\t    if (conf) {\n\t\n\t      this._conf = conf;\n\t\n\t      conf.delimiter && (this.delimiter = conf.delimiter);\n\t      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t      conf.wildcard && (this.wildcard = conf.wildcard);\n\t      conf.newListener && (this.newListener = conf.newListener);\n\t\n\t      if (this.wildcard) {\n\t        this.listenerTree = {};\n\t      }\n\t    }\n\t  }\n\t\n\t  function EventEmitter(conf) {\n\t    this._events = {};\n\t    this.newListener = false;\n\t    configure.call(this, conf);\n\t  }\n\t\n\t  //\n\t  // Attention, function return type now is array, always !\n\t  // It has zero elements if no any matches found and one or more\n\t  // elements (leafs) if there are matches\n\t  //\n\t  function searchListenerTree(handlers, type, tree, i) {\n\t    if (!tree) {\n\t      return [];\n\t    }\n\t    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n\t        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n\t    if (i === typeLength && tree._listeners) {\n\t      //\n\t      // If at the end of the event(s) list and the tree has listeners\n\t      // invoke those listeners.\n\t      //\n\t      if (typeof tree._listeners === 'function') {\n\t        handlers && handlers.push(tree._listeners);\n\t        return [tree];\n\t      } else {\n\t        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t          handlers && handlers.push(tree._listeners[leaf]);\n\t        }\n\t        return [tree];\n\t      }\n\t    }\n\t\n\t    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n\t      //\n\t      // If the event emitted is '*' at this part\n\t      // or there is a concrete match at this patch\n\t      //\n\t      if (currentType === '*') {\n\t        for (branch in tree) {\n\t          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n\t            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n\t          }\n\t        }\n\t        return listeners;\n\t      } else if(currentType === '**') {\n\t        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n\t        if(endReached && tree._listeners) {\n\t          // The next element has a _listeners, add it to the handlers.\n\t          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t        }\n\t\n\t        for (branch in tree) {\n\t          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n\t            if(branch === '*' || branch === '**') {\n\t              if(tree[branch]._listeners && !endReached) {\n\t                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t              }\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t            } else if(branch === nextType) {\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n\t            } else {\n\t              // No match on this one, shift into the tree but not in the type array.\n\t              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t            }\n\t          }\n\t        }\n\t        return listeners;\n\t      }\n\t\n\t      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n\t    }\n\t\n\t    xTree = tree['*'];\n\t    if (xTree) {\n\t      //\n\t      // If the listener tree will allow any match for this part,\n\t      // then recursively explore all branches of the tree\n\t      //\n\t      searchListenerTree(handlers, type, xTree, i+1);\n\t    }\n\t\n\t    xxTree = tree['**'];\n\t    if(xxTree) {\n\t      if(i < typeLength) {\n\t        if(xxTree._listeners) {\n\t          // If we have a listener on a '**', it will catch all, so add its handler.\n\t          searchListenerTree(handlers, type, xxTree, typeLength);\n\t        }\n\t\n\t        // Build arrays of matching next branches and others.\n\t        for(branch in xxTree) {\n\t          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n\t            if(branch === nextType) {\n\t              // We know the next element will match, so jump twice.\n\t              searchListenerTree(handlers, type, xxTree[branch], i+2);\n\t            } else if(branch === currentType) {\n\t              // Current node matches, move into the tree.\n\t              searchListenerTree(handlers, type, xxTree[branch], i+1);\n\t            } else {\n\t              isolatedBranch = {};\n\t              isolatedBranch[branch] = xxTree[branch];\n\t              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n\t            }\n\t          }\n\t        }\n\t      } else if(xxTree._listeners) {\n\t        // We have reached the end and still on a '**'\n\t        searchListenerTree(handlers, type, xxTree, typeLength);\n\t      } else if(xxTree['*'] && xxTree['*']._listeners) {\n\t        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n\t      }\n\t    }\n\t\n\t    return listeners;\n\t  }\n\t\n\t  function growListenerTree(type, listener) {\n\t\n\t    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t\n\t    //\n\t    // Looks for two consecutive '**', if so, don't add the event at all.\n\t    //\n\t    for(var i = 0, len = type.length; i+1 < len; i++) {\n\t      if(type[i] === '**' && type[i+1] === '**') {\n\t        return;\n\t      }\n\t    }\n\t\n\t    var tree = this.listenerTree;\n\t    var name = type.shift();\n\t\n\t    while (name) {\n\t\n\t      if (!tree[name]) {\n\t        tree[name] = {};\n\t      }\n\t\n\t      tree = tree[name];\n\t\n\t      if (type.length === 0) {\n\t\n\t        if (!tree._listeners) {\n\t          tree._listeners = listener;\n\t        }\n\t        else if(typeof tree._listeners === 'function') {\n\t          tree._listeners = [tree._listeners, listener];\n\t        }\n\t        else if (isArray(tree._listeners)) {\n\t\n\t          tree._listeners.push(listener);\n\t\n\t          if (!tree._listeners.warned) {\n\t\n\t            var m = defaultMaxListeners;\n\t\n\t            if (typeof this._events.maxListeners !== 'undefined') {\n\t              m = this._events.maxListeners;\n\t            }\n\t\n\t            if (m > 0 && tree._listeners.length > m) {\n\t\n\t              tree._listeners.warned = true;\n\t              console.error('(node) warning: possible EventEmitter memory ' +\n\t                            'leak detected. %d listeners added. ' +\n\t                            'Use emitter.setMaxListeners() to increase limit.',\n\t                            tree._listeners.length);\n\t              console.trace();\n\t            }\n\t          }\n\t        }\n\t        return true;\n\t      }\n\t      name = type.shift();\n\t    }\n\t    return true;\n\t  }\n\t\n\t  // By default EventEmitters will print a warning if more than\n\t  // 10 listeners are added to it. This is a useful default which\n\t  // helps finding memory leaks.\n\t  //\n\t  // Obviously not all Emitters should be limited to 10. This function allows\n\t  // that to be increased. Set to zero for unlimited.\n\t\n\t  EventEmitter.prototype.delimiter = '.';\n\t\n\t  EventEmitter.prototype.setMaxListeners = function(n) {\n\t    this._events || init.call(this);\n\t    this._events.maxListeners = n;\n\t    if (!this._conf) this._conf = {};\n\t    this._conf.maxListeners = n;\n\t  };\n\t\n\t  EventEmitter.prototype.event = '';\n\t\n\t  EventEmitter.prototype.once = function(event, fn) {\n\t    this.many(event, 1, fn);\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.many = function(event, ttl, fn) {\n\t    var self = this;\n\t\n\t    if (typeof fn !== 'function') {\n\t      throw new Error('many only accepts instances of Function');\n\t    }\n\t\n\t    function listener() {\n\t      if (--ttl === 0) {\n\t        self.off(event, listener);\n\t      }\n\t      fn.apply(this, arguments);\n\t    }\n\t\n\t    listener._origin = fn;\n\t\n\t    this.on(event, listener);\n\t\n\t    return self;\n\t  };\n\t\n\t  EventEmitter.prototype.emit = function() {\n\t\n\t    this._events || init.call(this);\n\t\n\t    var type = arguments[0];\n\t\n\t    if (type === 'newListener' && !this.newListener) {\n\t      if (!this._events.newListener) { return false; }\n\t    }\n\t\n\t    // Loop through the *_all* functions and invoke them.\n\t    if (this._all) {\n\t      var l = arguments.length;\n\t      var args = new Array(l - 1);\n\t      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t      for (i = 0, l = this._all.length; i < l; i++) {\n\t        this.event = type;\n\t        this._all[i].apply(this, args);\n\t      }\n\t    }\n\t\n\t    // If there is no 'error' event listener then throw.\n\t    if (type === 'error') {\n\t\n\t      if (!this._all &&\n\t        !this._events.error &&\n\t        !(this.wildcard && this.listenerTree.error)) {\n\t\n\t        if (arguments[1] instanceof Error) {\n\t          throw arguments[1]; // Unhandled 'error' event\n\t        } else {\n\t          throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t        }\n\t        return false;\n\t      }\n\t    }\n\t\n\t    var handler;\n\t\n\t    if(this.wildcard) {\n\t      handler = [];\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t    }\n\t    else {\n\t      handler = this._events[type];\n\t    }\n\t\n\t    if (typeof handler === 'function') {\n\t      this.event = type;\n\t      if (arguments.length === 1) {\n\t        handler.call(this);\n\t      }\n\t      else if (arguments.length > 1)\n\t        switch (arguments.length) {\n\t          case 2:\n\t            handler.call(this, arguments[1]);\n\t            break;\n\t          case 3:\n\t            handler.call(this, arguments[1], arguments[2]);\n\t            break;\n\t          // slower\n\t          default:\n\t            var l = arguments.length;\n\t            var args = new Array(l - 1);\n\t            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t            handler.apply(this, args);\n\t        }\n\t      return true;\n\t    }\n\t    else if (handler) {\n\t      var l = arguments.length;\n\t      var args = new Array(l - 1);\n\t      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t\n\t      var listeners = handler.slice();\n\t      for (var i = 0, l = listeners.length; i < l; i++) {\n\t        this.event = type;\n\t        listeners[i].apply(this, args);\n\t      }\n\t      return (listeners.length > 0) || !!this._all;\n\t    }\n\t    else {\n\t      return !!this._all;\n\t    }\n\t\n\t  };\n\t\n\t  EventEmitter.prototype.on = function(type, listener) {\n\t\n\t    if (typeof type === 'function') {\n\t      this.onAny(type);\n\t      return this;\n\t    }\n\t\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('on only accepts instances of Function');\n\t    }\n\t    this._events || init.call(this);\n\t\n\t    // To avoid recursion in the case that type == \"newListeners\"! Before\n\t    // adding it to the listeners, first emit \"newListeners\".\n\t    this.emit('newListener', type, listener);\n\t\n\t    if(this.wildcard) {\n\t      growListenerTree.call(this, type, listener);\n\t      return this;\n\t    }\n\t\n\t    if (!this._events[type]) {\n\t      // Optimize the case of one listener. Don't need the extra array object.\n\t      this._events[type] = listener;\n\t    }\n\t    else if(typeof this._events[type] === 'function') {\n\t      // Adding the second element, need to change to array.\n\t      this._events[type] = [this._events[type], listener];\n\t    }\n\t    else if (isArray(this._events[type])) {\n\t      // If we've already got an array, just append.\n\t      this._events[type].push(listener);\n\t\n\t      // Check for listener leak\n\t      if (!this._events[type].warned) {\n\t\n\t        var m = defaultMaxListeners;\n\t\n\t        if (typeof this._events.maxListeners !== 'undefined') {\n\t          m = this._events.maxListeners;\n\t        }\n\t\n\t        if (m > 0 && this._events[type].length > m) {\n\t\n\t          this._events[type].warned = true;\n\t          console.error('(node) warning: possible EventEmitter memory ' +\n\t                        'leak detected. %d listeners added. ' +\n\t                        'Use emitter.setMaxListeners() to increase limit.',\n\t                        this._events[type].length);\n\t          console.trace();\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.onAny = function(fn) {\n\t\n\t    if (typeof fn !== 'function') {\n\t      throw new Error('onAny only accepts instances of Function');\n\t    }\n\t\n\t    if(!this._all) {\n\t      this._all = [];\n\t    }\n\t\n\t    // Add the function to the event listener collection.\n\t    this._all.push(fn);\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t  EventEmitter.prototype.off = function(type, listener) {\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('removeListener only takes instances of Function');\n\t    }\n\t\n\t    var handlers,leafs=[];\n\t\n\t    if(this.wildcard) {\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t    }\n\t    else {\n\t      // does not use listeners(), so no side effect of creating _events[type]\n\t      if (!this._events[type]) return this;\n\t      handlers = this._events[type];\n\t      leafs.push({_listeners:handlers});\n\t    }\n\t\n\t    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n\t      var leaf = leafs[iLeaf];\n\t      handlers = leaf._listeners;\n\t      if (isArray(handlers)) {\n\t\n\t        var position = -1;\n\t\n\t        for (var i = 0, length = handlers.length; i < length; i++) {\n\t          if (handlers[i] === listener ||\n\t            (handlers[i].listener && handlers[i].listener === listener) ||\n\t            (handlers[i]._origin && handlers[i]._origin === listener)) {\n\t            position = i;\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (position < 0) {\n\t          continue;\n\t        }\n\t\n\t        if(this.wildcard) {\n\t          leaf._listeners.splice(position, 1);\n\t        }\n\t        else {\n\t          this._events[type].splice(position, 1);\n\t        }\n\t\n\t        if (handlers.length === 0) {\n\t          if(this.wildcard) {\n\t            delete leaf._listeners;\n\t          }\n\t          else {\n\t            delete this._events[type];\n\t          }\n\t        }\n\t        return this;\n\t      }\n\t      else if (handlers === listener ||\n\t        (handlers.listener && handlers.listener === listener) ||\n\t        (handlers._origin && handlers._origin === listener)) {\n\t        if(this.wildcard) {\n\t          delete leaf._listeners;\n\t        }\n\t        else {\n\t          delete this._events[type];\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.offAny = function(fn) {\n\t    var i = 0, l = 0, fns;\n\t    if (fn && this._all && this._all.length > 0) {\n\t      fns = this._all;\n\t      for(i = 0, l = fns.length; i < l; i++) {\n\t        if(fn === fns[i]) {\n\t          fns.splice(i, 1);\n\t          return this;\n\t        }\n\t      }\n\t    } else {\n\t      this._all = [];\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t\n\t  EventEmitter.prototype.removeAllListeners = function(type) {\n\t    if (arguments.length === 0) {\n\t      !this._events || init.call(this);\n\t      return this;\n\t    }\n\t\n\t    if(this.wildcard) {\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t\n\t      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n\t        var leaf = leafs[iLeaf];\n\t        leaf._listeners = null;\n\t      }\n\t    }\n\t    else {\n\t      if (!this._events[type]) return this;\n\t      this._events[type] = null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  EventEmitter.prototype.listeners = function(type) {\n\t    if(this.wildcard) {\n\t      var handlers = [];\n\t      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\t      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t      return handlers;\n\t    }\n\t\n\t    this._events || init.call(this);\n\t\n\t    if (!this._events[type]) this._events[type] = [];\n\t    if (!isArray(this._events[type])) {\n\t      this._events[type] = [this._events[type]];\n\t    }\n\t    return this._events[type];\n\t  };\n\t\n\t  EventEmitter.prototype.listenersAny = function() {\n\t\n\t    if(this._all) {\n\t      return this._all;\n\t    }\n\t    else {\n\t      return [];\n\t    }\n\t\n\t  };\n\t\n\t  if (true) {\n\t     // AMD. Register as an anonymous module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return EventEmitter;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    // CommonJS\n\t    exports.EventEmitter2 = EventEmitter;\n\t  }\n\t  else {\n\t    // Browser global.\n\t    window.EventEmitter2 = EventEmitter;\n\t  }\n\t}();\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {Promise: window['Promise']}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n\t * directory of this distribution and at\n\t * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n\t */\n\t;\n\t(function() {\n\t\n\t    /**\n\t     * Class for dimension change detection.\n\t     *\n\t     * @param {Element|Element[]|Elements|jQuery} element\n\t     * @param {Function} callback\n\t     *\n\t     * @constructor\n\t     */\n\t    var ResizeSensor = function(element, callback) {\n\t        /**\n\t         *\n\t         * @constructor\n\t         */\n\t        function EventQueue() {\n\t            this.q = [];\n\t            this.add = function(ev) {\n\t                this.q.push(ev);\n\t            };\n\t\n\t            var i, j;\n\t            this.call = function() {\n\t                for (i = 0, j = this.q.length; i < j; i++) {\n\t                    this.q[i].call();\n\t                }\n\t            };\n\t        }\n\t\n\t        /**\n\t         * @param {HTMLElement} element\n\t         * @param {String}      prop\n\t         * @returns {String|Number}\n\t         */\n\t        function getComputedStyle(element, prop) {\n\t            if (element.currentStyle) {\n\t                return element.currentStyle[prop];\n\t            } else if (window.getComputedStyle) {\n\t                return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t            } else {\n\t                return element.style[prop];\n\t            }\n\t        }\n\t\n\t        /**\n\t         *\n\t         * @param {HTMLElement} element\n\t         * @param {Function}    resized\n\t         */\n\t        function attachResizeEvent(element, resized) {\n\t            if (!element.resizedAttached) {\n\t                element.resizedAttached = new EventQueue();\n\t                element.resizedAttached.add(resized);\n\t            } else if (element.resizedAttached) {\n\t                element.resizedAttached.add(resized);\n\t                return;\n\t            }\n\t\n\t            element.resizeSensor = document.createElement('div');\n\t            element.resizeSensor.className = 'resize-sensor';\n\t            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n\t            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\t\n\t            element.resizeSensor.style.cssText = style;\n\t            element.resizeSensor.innerHTML =\n\t                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n\t                    '<div style=\"' + styleChild + '\"></div>' +\n\t                '</div>' +\n\t                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n\t                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n\t                '</div>';\n\t            element.appendChild(element.resizeSensor);\n\t\n\t            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n\t                element.style.position = 'relative';\n\t            }\n\t\n\t            var expand = element.resizeSensor.childNodes[0];\n\t            var expandChild = expand.childNodes[0];\n\t            var shrink = element.resizeSensor.childNodes[1];\n\t            var shrinkChild = shrink.childNodes[0];\n\t\n\t            var lastWidth, lastHeight;\n\t\n\t            var reset = function() {\n\t                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n\t                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n\t                expand.scrollLeft = expand.scrollWidth;\n\t                expand.scrollTop = expand.scrollHeight;\n\t                shrink.scrollLeft = shrink.scrollWidth;\n\t                shrink.scrollTop = shrink.scrollHeight;\n\t                lastWidth = element.offsetWidth;\n\t                lastHeight = element.offsetHeight;\n\t            };\n\t\n\t            reset();\n\t\n\t            var changed = function() {\n\t                if (element.resizedAttached) {\n\t                    element.resizedAttached.call();\n\t                }\n\t            };\n\t\n\t            var addEvent = function(el, name, cb) {\n\t                if (el.attachEvent) {\n\t                    el.attachEvent('on' + name, cb);\n\t                } else {\n\t                    el.addEventListener(name, cb);\n\t                }\n\t            };\n\t\n\t            var onScroll = function() {\n\t              if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                  changed();\n\t              }\n\t              reset();\n\t            };\n\t\n\t            addEvent(expand, 'scroll', onScroll);\n\t            addEvent(shrink, 'scroll', onScroll);\n\t        }\n\t\n\t        var elementType = Object.prototype.toString.call(element);\n\t        var isCollectionTyped = ('[object Array]' === elementType\n\t            || ('[object NodeList]' === elementType)\n\t            || ('[object HTMLCollection]' === elementType)\n\t            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n\t            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n\t        );\n\t\n\t        if (isCollectionTyped) {\n\t            var i = 0, j = element.length;\n\t            for (; i < j; i++) {\n\t                attachResizeEvent(element[i], callback);\n\t            }\n\t        } else {\n\t            attachResizeEvent(element, callback);\n\t        }\n\t\n\t        this.detach = function() {\n\t            if (isCollectionTyped) {\n\t                var i = 0, j = element.length;\n\t                for (; i < j; i++) {\n\t                    ResizeSensor.detach(element[i]);\n\t                }\n\t            } else {\n\t                ResizeSensor.detach(element);\n\t            }\n\t        };\n\t    };\n\t\n\t    ResizeSensor.detach = function(element) {\n\t        if (element.resizeSensor) {\n\t            element.removeChild(element.resizeSensor);\n\t            delete element.resizeSensor;\n\t            delete element.resizedAttached;\n\t        }\n\t    };\n\t\n\t    // make available to common module loader\n\t    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n\t        module.exports = ResizeSensor;\n\t    }\n\t    else {\n\t        window.ResizeSensor = ResizeSensor;\n\t    }\n\t\n\t})();\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar deps_1 = __webpack_require__(5);\r\n\t/**\r\n\t * this class uses as proxy for EventEmitter2\r\n\t */\r\n\tvar EventEmitter = (function () {\r\n\t    function EventEmitter() {\r\n\t        this.ee = new deps_1.EE2();\r\n\t    }\r\n\t    EventEmitter.prototype.emit = function (eventName) {\r\n\t        var args = [];\r\n\t        for (var _i = 1; _i < arguments.length; _i++) {\r\n\t            args[_i - 1] = arguments[_i];\r\n\t        }\r\n\t        (_a = this.ee).emit.apply(_a, [eventName].concat(args));\r\n\t        var _a;\r\n\t    };\r\n\t    EventEmitter.prototype.on = function (eventName, callback) {\r\n\t        return this.ee.on(eventName, callback);\r\n\t    };\r\n\t    EventEmitter.prototype.off = function (eventName, callback) {\r\n\t        return this.ee.off(eventName, callback);\r\n\t    };\r\n\t    EventEmitter.prototype.subscribe = function (eventName, callback) {\r\n\t        var _this = this;\r\n\t        this.on(eventName, callback);\r\n\t        return function () { return _this.off(eventName, callback); };\r\n\t    };\r\n\t    EventEmitter.prototype.setMaxListeners = function (listenersCount) {\r\n\t        this.ee.setMaxListeners(listenersCount);\r\n\t    };\r\n\t    EventEmitter.prototype.removeAllListeners = function (eventName) {\r\n\t        this.ee.removeAllListeners(eventName);\r\n\t    };\r\n\t    return EventEmitter;\r\n\t}());\r\n\texports.EventEmitter = EventEmitter;\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Trend_1 = __webpack_require__(16);\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar TrendsManager_1 = __webpack_require__(18);\r\n\tvar Screen_1 = __webpack_require__(19);\r\n\tvar AxisMarks_1 = __webpack_require__(20);\r\n\tvar interfaces_1 = __webpack_require__(21);\r\n\tvar deps_1 = __webpack_require__(5);\r\n\tvar CHART_STATE_EVENTS = {\r\n\t    INITIAL_STATE_APPLIED: 'initialStateApplied',\r\n\t    READY: 'ready',\r\n\t    DESTROY: 'destroy',\r\n\t    CHANGE: 'change',\r\n\t    TREND_CHANGE: 'trendChange',\r\n\t    TRENDS_CHANGE: 'trendsChange',\r\n\t    ZOOM: 'zoom',\r\n\t    RESIZE: 'resize',\r\n\t    SCROLL: 'scroll',\r\n\t    SCROLL_STOP: 'scrollStop',\r\n\t    PLUGINS_STATE_CHANGED: 'pluginsStateChanged'\r\n\t};\r\n\t/**\r\n\t *  class for manage chart state, all state changes caused only by State.setState method\r\n\t */\r\n\tvar ChartState = (function () {\r\n\t    function ChartState(initialState, plugins) {\r\n\t        if (plugins === void 0) { plugins = []; }\r\n\t        this.data = {\r\n\t            prevState: {},\r\n\t            zoom: 0,\r\n\t            xAxis: {\r\n\t                range: {\r\n\t                    type: interfaces_1.AXIS_RANGE_TYPE.ALL,\r\n\t                    from: 0,\r\n\t                    to: 0,\r\n\t                    scroll: 0,\r\n\t                    zoom: 1,\r\n\t                    padding: { start: 0, end: 5 },\r\n\t                    margin: { start: 0, end: 5 }\r\n\t                },\r\n\t                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\r\n\t                grid: { enabled: true, minSizePx: 100 },\r\n\t                autoScroll: true,\r\n\t                marks: [],\r\n\t            },\r\n\t            yAxis: {\r\n\t                range: {\r\n\t                    type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\r\n\t                    from: 0,\r\n\t                    to: 0,\r\n\t                    zoom: 1,\r\n\t                    padding: { start: 5, end: 5 },\r\n\t                    margin: { start: 5, end: 5 },\r\n\t                },\r\n\t                grid: { enabled: true, minSizePx: 50 },\r\n\t                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\r\n\t                marks: []\r\n\t            },\r\n\t            animations: {\r\n\t                enabled: true,\r\n\t                trendChangeSpeed: 0.5,\r\n\t                trendChangeEase: void 0,\r\n\t                zoomSpeed: 0.25,\r\n\t                zoomEase: void 0,\r\n\t                scrollSpeed: 0.5,\r\n\t                scrollEase: Linear.easeNone,\r\n\t                autoScrollSpeed: 1,\r\n\t                autoScrollEase: Linear.easeNone,\r\n\t            },\r\n\t            autoRender: { enabled: true, fps: 0 },\r\n\t            autoResize: true,\r\n\t            renderer: 'WebGLRenderer',\r\n\t            autoScroll: true,\r\n\t            controls: { enabled: true },\r\n\t            trendDefaultState: {\r\n\t                enabled: true,\r\n\t                type: Trend_1.TREND_TYPE.LINE,\r\n\t                data: [],\r\n\t                maxSegmentLength: 1000,\r\n\t                lineWidth: 2,\r\n\t                lineColor: 0xFFFFFF,\r\n\t                hasBackground: false,\r\n\t                backgroundColor: 'rgba(#5273BD, 0.15)',\r\n\t                hasBeacon: false,\r\n\t                settingsForTypes: {\r\n\t                    CANDLE: {\r\n\t                        minSegmentLengthInPx: 20,\r\n\t                        maxSegmentLengthInPx: 40,\r\n\t                    },\r\n\t                    LINE: {\r\n\t                        minSegmentLengthInPx: 2,\r\n\t                        maxSegmentLengthInPx: 10,\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t            cursor: {\r\n\t                dragMode: false,\r\n\t                x: 0,\r\n\t                y: 0\r\n\t            },\r\n\t            backgroundColor: 0x000000,\r\n\t            backgroundOpacity: 1,\r\n\t            showStats: false,\r\n\t            pluginsState: {},\r\n\t            eventEmitterMaxListeners: 20,\r\n\t            maxVisibleSegments: 1280\r\n\t        };\r\n\t        this.plugins = {};\r\n\t        /**\r\n\t         * true then chartState was initialized and ready to use\r\n\t         */\r\n\t        this.isReady = false;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\r\n\t        this.data = Utils_1.Utils.deepMerge(this.data, initialState);\r\n\t        this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\r\n\t        initialState.trends = this.trendsManager.calculatedOptions;\r\n\t        initialState = this.installPlugins(plugins, initialState);\r\n\t        this.setState(initialState);\r\n\t        this.setState({ computedData: this.getComputedData() });\r\n\t        this.savePrevState();\r\n\t        this.screen = new Screen_1.Screen(this);\r\n\t        this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\r\n\t        this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\r\n\t        this.initListeners();\r\n\t        // message to other modules that ChartState.data is ready for use \r\n\t        this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\r\n\t        // message to other modules that ChartState is ready for use\r\n\t        this.isReady = true;\r\n\t        this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\r\n\t    }\r\n\t    /**\r\n\t     * destroy state, use Chart.destroy to completely destroy chart\r\n\t     */\r\n\t    ChartState.prototype.destroy = function () {\r\n\t        this.ee.emit(CHART_STATE_EVENTS.DESTROY);\r\n\t        this.ee.removeAllListeners();\r\n\t        this.data = {};\r\n\t    };\r\n\t    ChartState.prototype.onDestroy = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\r\n\t    };\r\n\t    ChartState.prototype.onInitialStateApplied = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\r\n\t    };\r\n\t    ChartState.prototype.onReady = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\r\n\t    };\r\n\t    ChartState.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\r\n\t    };\r\n\t    ChartState.prototype.onTrendChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\r\n\t    };\r\n\t    ChartState.prototype.onTrendsChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\r\n\t    };\r\n\t    ChartState.prototype.onScrollStop = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\r\n\t    };\r\n\t    ChartState.prototype.onScroll = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\r\n\t    };\r\n\t    ChartState.prototype.onZoom = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\r\n\t    };\r\n\t    ChartState.prototype.onResize = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\r\n\t    };\r\n\t    ChartState.prototype.onPluginsStateChange = function (cb) {\r\n\t        return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\r\n\t    };\r\n\t    ChartState.prototype.getTrend = function (trendName) {\r\n\t        return this.trendsManager.getTrend(trendName);\r\n\t    };\r\n\t    ChartState.prototype.setState = function (newState, eventData, silent) {\r\n\t        if (silent === void 0) { silent = false; }\r\n\t        var stateData = this.data;\r\n\t        var newStateObj = newState;\r\n\t        var changedProps = {};\r\n\t        for (var key in newStateObj) {\r\n\t            if (stateData[key] !== newStateObj[key]) {\r\n\t                changedProps[key] = newStateObj[key];\r\n\t            }\r\n\t        }\r\n\t        this.savePrevState(changedProps);\r\n\t        // temporary remove trends data from newState by performance reasons\r\n\t        var trendsData = {};\r\n\t        if (newState.trends)\r\n\t            for (var trendName in newState.trends) {\r\n\t                var trendOptions = newState.trends[trendName];\r\n\t                if (trendOptions.data)\r\n\t                    trendsData[trendName] = trendOptions.data;\r\n\t                delete trendOptions.data;\r\n\t            }\r\n\t        var newStateContainsData = Object.keys(trendsData).length > 0;\r\n\t        this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\r\n\t        // return data to state\r\n\t        if (newStateContainsData)\r\n\t            for (var trendName in trendsData) {\r\n\t                this.data.trends[trendName].data = trendsData[trendName];\r\n\t            }\r\n\t        if (silent)\r\n\t            return;\r\n\t        // recalculate all dynamic state props\r\n\t        var recalculateResult = this.recalculateState(changedProps);\r\n\t        changedProps = recalculateResult.changedProps;\r\n\t        this.emitChangedStateEvents(changedProps, eventData);\r\n\t    };\r\n\t    /**\r\n\t     * recalculate all computed state props\r\n\t     */\r\n\t    ChartState.prototype.recalculateState = function (changedProps) {\r\n\t        var data = this.data;\r\n\t        var patch = {};\r\n\t        var actualData = Utils_1.Utils.deepMerge({}, data);\r\n\t        // recalculate scroll position by changed cursor options\r\n\t        var cursorOptions = changedProps.cursor;\r\n\t        var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\r\n\t        if (isMouseDrag) {\r\n\t            var oldX = data.prevState.cursor.x;\r\n\t            var currentX = cursorOptions.x;\r\n\t            var currentScroll = data.xAxis.range.scroll;\r\n\t            var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\r\n\t            patch.xAxis = { range: { scroll: currentScroll + deltaXVal } };\r\n\t            actualData = Utils_1.Utils.deepMerge(actualData, { xAxis: patch.xAxis });\r\n\t        }\r\n\t        var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\r\n\t        var scrollXChanged = false;\r\n\t        var needToRecalculateXAxis = (isMouseDrag ||\r\n\t            chartWasResized ||\r\n\t            (changedProps.xAxis && (changedProps.xAxis.range)) ||\r\n\t            this.data.xAxis.range.zeroVal == void 0);\r\n\t        if (needToRecalculateXAxis) {\r\n\t            var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\r\n\t            if (xAxisPatch) {\r\n\t                scrollXChanged = true;\r\n\t                patch = Utils_1.Utils.deepMerge(patch, { xAxis: xAxisPatch });\r\n\t                actualData = Utils_1.Utils.deepMerge(actualData, { xAxis: xAxisPatch });\r\n\t            }\r\n\t        }\r\n\t        // recalculate axis \"from\" and \"to\" for dynamics AXIS_RANGE_TYPE\r\n\t        var needToRecalculateYAxis = (chartWasResized ||\r\n\t            (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END ||\r\n\t                data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO ||\r\n\t                data.yAxis.range.isMirrorMode) &&\r\n\t                (scrollXChanged || changedProps.trends || changedProps.yAxis) ||\r\n\t            this.data.yAxis.range.zeroVal == void 0);\r\n\t        if (needToRecalculateYAxis) {\r\n\t            var yAxisPatch = this.recalculateYAxis(actualData);\r\n\t            if (yAxisPatch) {\r\n\t                patch = Utils_1.Utils.deepMerge(patch, { yAxis: yAxisPatch });\r\n\t                actualData = Utils_1.Utils.deepMerge(actualData, { yAxis: yAxisPatch });\r\n\t            }\r\n\t        }\r\n\t        this.savePrevState(patch);\r\n\t        var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\r\n\t        patch.computedData = this.getComputedData(allChangedProps);\r\n\t        this.savePrevState(patch);\r\n\t        this.data = Utils_1.Utils.deepMerge(this.data, patch);\r\n\t        return { changedProps: allChangedProps, patch: patch };\r\n\t    };\r\n\t    ChartState.prototype.getComputedData = function (changedProps) {\r\n\t        var computeAll = !changedProps;\r\n\t        var computedData = {};\r\n\t        if (computeAll || changedProps.trends && this.trendsManager) {\r\n\t            computedData.trends = {\r\n\t                maxXVal: this.trendsManager.getEndXVal(),\r\n\t                minXVal: this.trendsManager.getStartXVal()\r\n\t            };\r\n\t        }\r\n\t        return computedData;\r\n\t    };\r\n\t    ChartState.prototype.savePrevState = function (changedProps) {\r\n\t        if (!changedProps)\r\n\t            changedProps = this.data;\r\n\t        var prevState = this.data.prevState;\r\n\t        // prevent to store prev trend data by performance reasons\r\n\t        Utils_1.Utils.copyProps(this.data, prevState, changedProps, ['trends']);\r\n\t    };\r\n\t    ChartState.prototype.emitChangedStateEvents = function (changedProps, eventData) {\r\n\t        var prevState = this.data.prevState;\r\n\t        // emit common change event\r\n\t        this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\r\n\t        // emit event for each changed state property\r\n\t        for (var key in changedProps) {\r\n\t            this.ee.emit(key + 'Change', changedProps[key], eventData);\r\n\t        }\r\n\t        if (!this.isReady)\r\n\t            return;\r\n\t        // emit special events based on changed state\r\n\t        var scrollStopEventNeeded = (changedProps.cursor &&\r\n\t            changedProps.cursor.dragMode === false &&\r\n\t            prevState.cursor.dragMode === true);\r\n\t        scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\r\n\t        var scrollChangeEventsNeeded = (changedProps.xAxis &&\r\n\t            changedProps.xAxis.range &&\r\n\t            changedProps.xAxis.range.scroll !== void 0);\r\n\t        scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\r\n\t        var zoomEventsNeeded = ((changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom) ||\r\n\t            (changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom));\r\n\t        zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\r\n\t        var resizeEventNeeded = (changedProps.width || changedProps.height);\r\n\t        resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\r\n\t        var pluginStateChangedEventNeeded = !!(changedProps.pluginsState);\r\n\t        pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\r\n\t    };\r\n\t    /**\r\n\t     * init plugins and save plugins options in initialState\r\n\t     */\r\n\t    ChartState.prototype.installPlugins = function (plugins, initialState) {\r\n\t        var _this = this;\r\n\t        initialState.pluginsState = {};\r\n\t        plugins.forEach(function (plugin) {\r\n\t            var PluginClass = plugin.constructor;\r\n\t            var pluginName = PluginClass.NAME;\r\n\t            initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\r\n\t            _this.plugins[pluginName] = plugin;\r\n\t            plugin.setupChartState(_this);\r\n\t        });\r\n\t        return initialState;\r\n\t    };\r\n\t    /**\r\n\t     * returns plugin instance by plugin name\r\n\t     * @example\r\n\t     */\r\n\t    ChartState.prototype.getPlugin = function (pluginName) {\r\n\t        return this.plugins[pluginName];\r\n\t    };\r\n\t    ChartState.prototype.initListeners = function () {\r\n\t        var _this = this;\r\n\t        this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function (changedTrends, newData) {\r\n\t            _this.handleTrendsChange(changedTrends, newData);\r\n\t        });\r\n\t    };\r\n\t    ChartState.prototype.handleTrendsChange = function (changedTrends, newData) {\r\n\t        for (var trendName in changedTrends) {\r\n\t            this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\r\n\t        }\r\n\t    };\r\n\t    ChartState.prototype.recalculateXAxis = function (actualData, changedProps) {\r\n\t        var axisRange = actualData.xAxis.range;\r\n\t        var patch = { range: {} };\r\n\t        var isInitialize = axisRange.zeroVal == void 0;\r\n\t        var zeroVal, scaleFactor;\r\n\t        var zoom = axisRange.zoom;\r\n\t        if (axisRange.isMirrorMode) {\r\n\t            Utils_1.Utils.error('range.isMirrorMode available only for yAxis.range');\r\n\t        }\r\n\t        if (isInitialize) {\r\n\t            zeroVal = axisRange.from;\r\n\t            scaleFactor = actualData.width / (axisRange.to - axisRange.from);\r\n\t            patch = { range: { zeroVal: zeroVal, scaleFactor: scaleFactor } };\r\n\t        }\r\n\t        else {\r\n\t            zeroVal = axisRange.zeroVal;\r\n\t            scaleFactor = axisRange.scaleFactor;\r\n\t            // recalculate range.zoom and range.scroll then range.from or range.to was changed\r\n\t            if (changedProps.xAxis &&\r\n\t                (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\r\n\t                if (changedProps.xAxis.range.zoom) {\r\n\t                    Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\r\n\t                }\r\n\t                var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\r\n\t                patch.range.scroll = axisRange.from - zeroVal;\r\n\t                patch.range.zoom = currentScaleFactor / scaleFactor;\r\n\t                return patch;\r\n\t            }\r\n\t        }\r\n\t        // recalculate range.from and range.to then range.zoom or range.scroll was changed\r\n\t        do {\r\n\t            var from = zeroVal + axisRange.scroll;\r\n\t            var to = from + actualData.width / (scaleFactor * zoom);\r\n\t            var rangeLength = to - from;\r\n\t            var needToRecalculateZoom = false;\r\n\t            var rangeMoreThenMaxValue = (axisRange.maxLength && rangeLength > axisRange.maxLength);\r\n\t            var rangeLessThenMinValue = (axisRange.minLength && rangeLength < axisRange.minLength);\r\n\t            needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\r\n\t            if (needToRecalculateZoom) {\r\n\t                var fixScale = rangeLength > axisRange.maxLength ?\r\n\t                    rangeLength / axisRange.maxLength :\r\n\t                    rangeLength / axisRange.minLength;\r\n\t                var zoom = zoom * fixScale;\r\n\t                patch.range.zoom = zoom;\r\n\t            }\r\n\t        } while (needToRecalculateZoom);\r\n\t        patch.range.from = from;\r\n\t        patch.range.to = to;\r\n\t        return patch;\r\n\t    };\r\n\t    ChartState.prototype.recalculateYAxis = function (actualData) {\r\n\t        var patch = { range: {} };\r\n\t        var yAxisRange = actualData.yAxis.range;\r\n\t        var isInitialize = yAxisRange.scaleFactor == void 0;\r\n\t        var trends = this.trendsManager;\r\n\t        var trendsEndXVal = trends.getEndXVal();\r\n\t        var trendsStartXVal = trends.getStartXVal();\r\n\t        var xRange = actualData.xAxis.range;\r\n\t        var xFrom = xRange.from, xTo = xRange.to;\r\n\t        var xRangeLength = xTo - xFrom;\r\n\t        var zeroVal, scaleFactor, scroll, zoom, needToZoom;\r\n\t        // check situation when chart was scrolled behind trends end or before trends start\r\n\t        if (xTo > trendsEndXVal) {\r\n\t            xTo = trendsEndXVal;\r\n\t            xFrom = xTo - xRangeLength;\r\n\t        }\r\n\t        else if (xFrom < trendsStartXVal) {\r\n\t            xFrom = trendsStartXVal;\r\n\t            xTo = xFrom + xRangeLength;\r\n\t        }\r\n\t        var maxY = trends.getMaxYVal(xFrom, xTo);\r\n\t        var minY = trends.getMinYVal(xFrom, xTo);\r\n\t        var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\r\n\t        if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\r\n\t            if (trendLastY > maxY)\r\n\t                maxY = trendLastY;\r\n\t            if (trendLastY < minY)\r\n\t                minY = trendLastY;\r\n\t        }\r\n\t        if (yAxisRange.isMirrorMode) {\r\n\t            if (yAxisRange.zeroVal == void 0)\r\n\t                Utils_1.Utils.error('range.zeroVal must be set when range.isMirrorMode');\r\n\t            var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\r\n\t            var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\r\n\t            var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\r\n\t            maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\r\n\t            minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\r\n\t        }\r\n\t        var margin = yAxisRange.margin;\r\n\t        var padding = {\r\n\t            start: yAxisRange.padding.start + margin.start,\r\n\t            end: yAxisRange.padding.end + margin.end\r\n\t        };\r\n\t        if (padding.end + padding.start >= actualData.height) {\r\n\t            Utils_1.Utils.warn('Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly');\r\n\t        }\r\n\t        var rangeLength = maxY - minY;\r\n\t        var paddingTopInPercents = padding.end / actualData.height;\r\n\t        var paddingBottomInPercents = padding.start / actualData.height;\r\n\t        var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\r\n\t        var visibleRangeLength = rangeLength / rangeLengthInPercents;\r\n\t        var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\r\n\t        var toVal = maxY + visibleRangeLength * paddingTopInPercents;\r\n\t        if (isInitialize) {\r\n\t            zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\r\n\t            scaleFactor = actualData.height / (toVal - fromVal);\r\n\t            patch = { range: { zeroVal: zeroVal, scaleFactor: scaleFactor } };\r\n\t            needToZoom = true;\r\n\t        }\r\n\t        else {\r\n\t            scaleFactor = yAxisRange.scaleFactor;\r\n\t            zeroVal = yAxisRange.zeroVal;\r\n\t            var maxScreenY = Math.round(this.getScreenYByValue(maxY));\r\n\t            var minScreenY = Math.round(this.getScreenYByValue(minY));\r\n\t            needToZoom = (maxScreenY > actualData.height - margin.end ||\r\n\t                maxScreenY < actualData.height - padding.end ||\r\n\t                minScreenY < margin.start ||\r\n\t                minScreenY > padding.start);\r\n\t        }\r\n\t        if (!needToZoom)\r\n\t            return null;\r\n\t        scroll = fromVal - zeroVal;\r\n\t        zoom = (actualData.height / (toVal - fromVal)) / scaleFactor;\r\n\t        var currentAxisRange = this.data.yAxis.range;\r\n\t        if (currentAxisRange.from !== fromVal)\r\n\t            patch.range.from = fromVal;\r\n\t        if (currentAxisRange.to !== toVal)\r\n\t            patch.range.to = toVal;\r\n\t        if (currentAxisRange.scroll !== scroll)\r\n\t            patch.range.scroll = scroll;\r\n\t        if (currentAxisRange.zoom !== zoom)\r\n\t            patch.range.zoom = zoom;\r\n\t        return patch;\r\n\t    };\r\n\t    ChartState.prototype.zoom = function (zoomValue, origin) {\r\n\t        var _this = this;\r\n\t        if (origin === void 0) { origin = 0.5; }\r\n\t        var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\r\n\t        var newZoom = zoom * zoomValue;\r\n\t        var currentRange = this.data.width / (scaleFactor * zoom);\r\n\t        var nextRange = this.data.width / (scaleFactor * newZoom);\r\n\t        var newScroll = scroll + (currentRange - nextRange) * origin;\r\n\t        this.setState({ xAxis: { range: { zoom: newZoom, scroll: newScroll } } });\r\n\t        return new deps_1.Promise(function (resolve) {\r\n\t            var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\r\n\t            setTimeout(resolve, animationTime * 1000);\r\n\t        });\r\n\t    };\r\n\t    ChartState.prototype.zoomToRange = function (range, origin) {\r\n\t        var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\r\n\t        var currentRange = this.data.width / (scaleFactor * zoom);\r\n\t        return this.zoom(currentRange / range, origin);\r\n\t    };\r\n\t    ChartState.prototype.scrollToEnd = function () {\r\n\t        var _this = this;\r\n\t        var state = this.data;\r\n\t        var endXVal = this.trendsManager.getEndXVal();\r\n\t        var range = state.xAxis.range;\r\n\t        var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\r\n\t        this.setState({ xAxis: { range: { scroll: scroll } } });\r\n\t        return new deps_1.Promise(function (resolve) {\r\n\t            var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\r\n\t            setTimeout(resolve, animationTime * 1000);\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     *  returns offset in pixels from xAxis.range.zeroVal to xVal\r\n\t     */\r\n\t    ChartState.prototype.getPointOnXAxis = function (xVal) {\r\n\t        var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\r\n\t        return (xVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  returns offset in pixels from yAxis.range.zeroVal to yVal\r\n\t     */\r\n\t    ChartState.prototype.getPointOnYAxis = function (yVal) {\r\n\t        var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\r\n\t        return (yVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    /**\r\n\t     * returns value by offset in pixels from xAxis.range.zeroVal\r\n\t     */\r\n\t    ChartState.prototype.getValueOnXAxis = function (x) {\r\n\t        return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\r\n\t    };\r\n\t    /**\r\n\t     *  convert value to pixels by using settings from xAxis.range\r\n\t     */\r\n\t    ChartState.prototype.valueToPxByXAxis = function (xVal) {\r\n\t        return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  convert value to pixels by using settings from yAxis.range\r\n\t     */\r\n\t    ChartState.prototype.valueToPxByYAxis = function (yVal) {\r\n\t        return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  convert pixels to value by using settings from xAxis.range\r\n\t     */\r\n\t    ChartState.prototype.pxToValueByXAxis = function (xVal) {\r\n\t        return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  convert pixels to value by using settings from yAxis.range\r\n\t     */\r\n\t    ChartState.prototype.pxToValueByYAxis = function (yVal) {\r\n\t        return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  returns x value by screen x coordinate\r\n\t     */\r\n\t    ChartState.prototype.getValueByScreenX = function (x) {\r\n\t        var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\r\n\t        return zeroVal + scroll + this.pxToValueByXAxis(x);\r\n\t    };\r\n\t    /**\r\n\t     *  returns y value by screen y coordinate\r\n\t     */\r\n\t    ChartState.prototype.getValueByScreenY = function (y) {\r\n\t        var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\r\n\t        return zeroVal + scroll + this.pxToValueByYAxis(y);\r\n\t    };\r\n\t    /**\r\n\t     *  returns screen x value by screen y coordinate\r\n\t     */\r\n\t    ChartState.prototype.getScreenXByValue = function (xVal) {\r\n\t        var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\r\n\t        return this.valueToPxByXAxis(xVal - zeroVal - scroll);\r\n\t    };\r\n\t    /**\r\n\t     *  returns screen y value by screen y coordinate\r\n\t     */\r\n\t    ChartState.prototype.getScreenYByValue = function (yVal) {\r\n\t        var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\r\n\t        return this.valueToPxByYAxis(yVal - zeroVal - scroll);\r\n\t    };\r\n\t    /**\r\n\t     * returns screen x coordinate by offset in pixels from xAxis.range.zeroVal value\r\n\t     */\r\n\t    ChartState.prototype.getScreenXByPoint = function (xVal) {\r\n\t        return this.getScreenXByValue(this.getValueOnXAxis(xVal));\r\n\t    };\r\n\t    /**\r\n\t     * returns offset in pixels from xAxis.range.zeroVal value by screen x coordinate\r\n\t     */\r\n\t    ChartState.prototype.getPointByScreenX = function (screenX) {\r\n\t        return this.getPointOnXAxis(this.getValueByScreenX(screenX));\r\n\t    };\r\n\t    ChartState.prototype.getPointOnChart = function (xVal, yVal) {\r\n\t        return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\r\n\t    };\r\n\t    ChartState.prototype.getScreenLeftVal = function () {\r\n\t        return this.getValueByScreenX(0);\r\n\t    };\r\n\t    ChartState.prototype.getScreenRightVal = function () {\r\n\t        return this.getValueByScreenX(this.data.width);\r\n\t    };\r\n\t    ChartState.prototype.getPaddingRight = function () {\r\n\t        return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\r\n\t    };\r\n\t    return ChartState;\r\n\t}());\r\n\texports.ChartState = ChartState;\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar TrendSegmentsManager_1 = __webpack_require__(17);\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\tvar deps_1 = __webpack_require__(5);\r\n\tvar EVENTS = {\r\n\t    CHANGE: 'Change',\r\n\t    PREPEND_REQUEST: 'prependRequest'\r\n\t};\r\n\t(function (TREND_TYPE) {\r\n\t    TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\r\n\t    TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\r\n\t})(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\r\n\tvar TREND_TYPE = exports.TREND_TYPE;\r\n\tvar Trend = (function () {\r\n\t    function Trend(chartState, trendName, initialState) {\r\n\t        this.minXVal = Infinity;\r\n\t        this.minYVal = Infinity;\r\n\t        this.maxXVal = -Infinity;\r\n\t        this.maxYVal = -Infinity;\r\n\t        var options = initialState.trends[trendName];\r\n\t        this.name = trendName;\r\n\t        this.chartState = chartState;\r\n\t        this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.data.trendDefaultState, options);\r\n\t        this.calculatedOptions.name = trendName;\r\n\t        if (options.dataset)\r\n\t            this.calculatedOptions.data = Trend.prepareData(options.dataset);\r\n\t        this.calculatedOptions.dataset = [];\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    Trend.prototype.onInitialStateApplied = function () {\r\n\t        this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\r\n\t    };\r\n\t    Trend.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var chartState = this.chartState;\r\n\t        chartState.onInitialStateApplied(function () { return _this.onInitialStateApplied(); });\r\n\t        chartState.onScrollStop(function () { return _this.checkForPrependRequest(); });\r\n\t        chartState.onZoom(function () { return _this.checkForPrependRequest(); });\r\n\t        chartState.onTrendChange(function (trendName, changedOptions, newData) { return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData); });\r\n\t        chartState.onDestroy(function () { return _this.ee.removeAllListeners(); });\r\n\t    };\r\n\t    Trend.prototype.getCalculatedOptions = function () {\r\n\t        return this.calculatedOptions;\r\n\t    };\r\n\t    Trend.prototype.appendData = function (rawData) {\r\n\t        var options = this.getOptions();\r\n\t        var newData = Trend.prepareData(rawData, this.getData());\r\n\t        var updatedTrendData = options.data.concat(newData);\r\n\t        this.changeData(updatedTrendData, newData);\r\n\t    };\r\n\t    Trend.prototype.prependData = function (rawData) {\r\n\t        var options = this.getOptions();\r\n\t        var newData = Trend.prepareData(rawData, this.getData(), true);\r\n\t        var updatedTrendData = newData.concat(options.data);\r\n\t        this.changeData(updatedTrendData, newData);\r\n\t    };\r\n\t    Trend.prototype.changeData = function (allData, newData) {\r\n\t        for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\r\n\t            var item = newData_1[_i];\r\n\t            if (item.xVal < this.minXVal)\r\n\t                this.minXVal = item.xVal;\r\n\t            if (item.xVal > this.maxXVal)\r\n\t                this.maxXVal = item.xVal;\r\n\t            if (item.yVal < this.minYVal)\r\n\t                this.minYVal = item.yVal;\r\n\t            if (item.yVal > this.maxYVal)\r\n\t                this.maxYVal = item.yVal;\r\n\t        }\r\n\t        var options = this.getOptions();\r\n\t        var statePatch = { trends: (_a = {}, _a[options.name] = { data: allData }, _a) };\r\n\t        this.chartState.setState(statePatch, newData);\r\n\t        var _a;\r\n\t    };\r\n\t    Trend.prototype.getData = function (fromX, toX) {\r\n\t        var data = this.getOptions().data;\r\n\t        if (fromX == void 0 && toX == void 0)\r\n\t            return data;\r\n\t        fromX = fromX !== void 0 ? fromX : data[0].xVal;\r\n\t        toX = toX !== void 0 ? toX : data[data.length].xVal;\r\n\t        var filteredData = [];\r\n\t        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n\t            var item = data_1[_i];\r\n\t            if (item.xVal < fromX)\r\n\t                continue;\r\n\t            if (item.xVal > toX)\r\n\t                break;\r\n\t            filteredData.push(item);\r\n\t        }\r\n\t        return filteredData;\r\n\t    };\r\n\t    Trend.prototype.getFirstItem = function () {\r\n\t        return this.getOptions().data[0];\r\n\t    };\r\n\t    Trend.prototype.getLastItem = function () {\r\n\t        var data = this.getOptions().data;\r\n\t        return data[data.length - 1];\r\n\t    };\r\n\t    Trend.prototype.getOptions = function () {\r\n\t        return this.chartState.data.trends[this.name];\r\n\t    };\r\n\t    Trend.prototype.setOptions = function (options) {\r\n\t        this.chartState.setState({ trends: (_a = {}, _a[this.name] = options, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    Trend.prototype.onPrependRequest = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on(EVENTS.PREPEND_REQUEST, cb);\r\n\t        return function () {\r\n\t            _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * shortcut for ChartState.onTrendChange\r\n\t     */\r\n\t    Trend.prototype.onChange = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on(EVENTS.CHANGE, cb);\r\n\t        return function () { _this.ee.off(EVENTS.CHANGE, cb); };\r\n\t    };\r\n\t    Trend.prototype.onDataChange = function (cb) {\r\n\t        var _this = this;\r\n\t        var onChangeCb = function (changedOptions, newData) {\r\n\t            if (newData)\r\n\t                cb(newData);\r\n\t        };\r\n\t        this.ee.on(EVENTS.CHANGE, onChangeCb);\r\n\t        return function () {\r\n\t            _this.ee.off(EVENTS.CHANGE, onChangeCb);\r\n\t        };\r\n\t    };\r\n\t    Trend.prototype.checkForPrependRequest = function () {\r\n\t        var _this = this;\r\n\t        if (this.prependRequest)\r\n\t            return;\r\n\t        var chartState = this.chartState;\r\n\t        var minXVal = chartState.data.computedData.trends.minXVal;\r\n\t        var minScreenX = chartState.getScreenXByValue(minXVal);\r\n\t        var needToRequest = minScreenX > 0;\r\n\t        var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\r\n\t        var requestedDataLength = to - from;\r\n\t        if (!needToRequest)\r\n\t            return;\r\n\t        this.prependRequest = new deps_1.Promise(function (resolve, reject) {\r\n\t            _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\r\n\t        });\r\n\t        this.prependRequest.then(function (newData) {\r\n\t            _this.prependData(newData);\r\n\t            _this.prependRequest = null;\r\n\t        }, function () {\r\n\t            _this.prependRequest = null;\r\n\t        });\r\n\t    };\r\n\t    Trend.prepareData = function (newData, currentData, isPrepend) {\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var data = [];\r\n\t        if (typeof newData[0] == 'number') {\r\n\t            currentData = currentData || [];\r\n\t            var initialItem = void 0;\r\n\t            var xVal = void 0;\r\n\t            if (isPrepend) {\r\n\t                initialItem = currentData[0];\r\n\t                xVal = initialItem.xVal - newData.length;\r\n\t            }\r\n\t            else {\r\n\t                initialItem = currentData[currentData.length - 1];\r\n\t                xVal = initialItem ? initialItem.xVal + 1 : 0;\r\n\t            }\r\n\t            for (var _i = 0, _a = newData; _i < _a.length; _i++) {\r\n\t                var yVal = _a[_i];\r\n\t                data.push({ xVal: xVal, yVal: yVal, id: Utils_1.Utils.getUid() });\r\n\t                xVal++;\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            data = newData;\r\n\t        }\r\n\t        return data;\r\n\t    };\r\n\t    return Trend;\r\n\t}());\r\n\texports.Trend = Trend;\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Trend_1 = __webpack_require__(16);\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar MAX_ANIMATED_SEGMENTS = 100;\r\n\tvar EVENTS = {\r\n\t    REBUILD: 'rebuild',\r\n\t    DISLPAYED_RANGE_CHANGED: 'displayedRangeChanged',\r\n\t    ANIMATION_FRAME: 'animationFrame'\r\n\t};\r\n\t/**\r\n\t *  Class helps to display and animate trends segments\r\n\t */\r\n\tvar TrendSegmentsManager = (function () {\r\n\t    function TrendSegmentsManager(chartState, trend) {\r\n\t        this.segmentsById = {};\r\n\t        this.segments = [];\r\n\t        this.animatedSegmentsIds = [];\r\n\t        this.segmentsLength = 0;\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        this.animatedSegmentsForPrepend = [];\r\n\t        this.nextEmptyId = 0;\r\n\t        this.startSegmentId = 0;\r\n\t        this.endSegmentId = 0;\r\n\t        this.chartState = chartState;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.trend = trend;\r\n\t        this.maxSegmentLength = trend.getOptions().maxSegmentLength;\r\n\t        this.tryToRebuildSegments();\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendSegmentsManager.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.trend.onChange(function (changedOptions, newData) { return _this.onTrendChangeHandler(changedOptions, newData); });\r\n\t        this.chartState.onZoom(function () { return _this.onZoomHandler(); });\r\n\t        this.chartState.onScroll(function () { return _this.recalculateDisplayedRange(); });\r\n\t        this.chartState.onDestroy(function () { return _this.onDestroyHandler(); });\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t        this.appendAnimation && this.appendAnimation.kill();\r\n\t        this.prependAnimation && this.prependAnimation.kill();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onZoomHandler = function () {\r\n\t        var segmentsRebuilded = this.tryToRebuildSegments();\r\n\t        if (!segmentsRebuilded) {\r\n\t            this.recalculateDisplayedRange();\r\n\t        }\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onTrendChangeHandler = function (changedOptions, newData) {\r\n\t        var needToRebuildSegments = (changedOptions.type != void 0 ||\r\n\t            changedOptions.maxSegmentLength != void 0);\r\n\t        if (needToRebuildSegments) {\r\n\t            this.tryToRebuildSegments(true);\r\n\t            return;\r\n\t        }\r\n\t        if (!newData)\r\n\t            return;\r\n\t        var data = this.trend.getData();\r\n\t        var isAppend = (!data.length || data[0].xVal < newData[0].xVal);\r\n\t        isAppend ? this.appendData(newData) : this.prependData(newData);\r\n\t        this.recalculateDisplayedRange();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getSegment = function (id) {\r\n\t        return this.segmentsById[id];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getEndSegment = function () {\r\n\t        return this.segmentsById[this.endSegmentId];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.getStartSegment = function () {\r\n\t        return this.segmentsById[this.startSegmentId];\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.tryToRebuildSegments = function (force) {\r\n\t        if (force === void 0) { force = false; }\r\n\t        var options = this.trend.getOptions();\r\n\t        var trendTypeName = Trend_1.TREND_TYPE[options.type];\r\n\t        var trendTypesSettings = options.settingsForTypes;\r\n\t        var trendTypeSettings = trendTypesSettings[trendTypeName];\r\n\t        var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\r\n\t        var needToRebuild = this.segments.length === 0 || force;\r\n\t        var segmentLength = this.maxSegmentLength;\r\n\t        // call toFixed(2) to prevent floating segment error compare\r\n\t        var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\r\n\t        var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\r\n\t        if (currentSegmentLengthInPx < minSegmentLengthInPx) {\r\n\t            needToRebuild = true;\r\n\t            segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\r\n\t        }\r\n\t        else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\r\n\t            needToRebuild = true;\r\n\t            segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\r\n\t        }\r\n\t        if (!needToRebuild)\r\n\t            return false;\r\n\t        this.maxSegmentLength = segmentLength;\r\n\t        this.segmentsById = {};\r\n\t        this.segments = [];\r\n\t        this.nextEmptyId = 0;\r\n\t        this.startSegmentId = 0;\r\n\t        this.endSegmentId = 0;\r\n\t        this.segmentsLength = 0;\r\n\t        this.stopAllAnimations();\r\n\t        this.appendData(null, true);\r\n\t        this.recalculateDisplayedRange(true);\r\n\t        this.ee.emit(EVENTS.REBUILD);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.stopAllAnimations = function () {\r\n\t        this.animatedSegmentsIds = [];\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        this.animatedSegmentsForAppend = [];\r\n\t        if (this.prependAnimation)\r\n\t            this.prependAnimation.kill();\r\n\t        if (this.appendAnimation)\r\n\t            this.appendAnimation.kill();\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.recalculateDisplayedRange = function (segmentsAreRebuilded) {\r\n\t        if (segmentsAreRebuilded === void 0) { segmentsAreRebuilded = false; }\r\n\t        var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\r\n\t        var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\r\n\t        var displayedRange = to - from;\r\n\t        this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, 'startXVal');\r\n\t        this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\r\n\t        this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, 'endXVal');\r\n\t        this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\r\n\t        if (segmentsAreRebuilded)\r\n\t            return;\r\n\t        var displayedRangeChanged = (firstDisplayedSegment.id !== this.firstDisplayedSegment.id ||\r\n\t            lastDisplayedSegment.id !== this.lastDisplayedSegment.id);\r\n\t        if (displayedRangeChanged)\r\n\t            this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\r\n\t    };\r\n\t    // getSegments(fromX?: number, toX?: number): TrendSegment[] {\r\n\t    // \tvar segments = this.segments;\r\n\t    // \tif (fromX == void 0 && toX == void 0) return segments;\r\n\t    // \tfromX = fromX !== void 0 ? fromX : segments[0].startXVal;\r\n\t    // \ttoX = toX !== void 0 ? toX : segments[this.segmentsLength].endXVal;\r\n\t    // \tvar startSegmentInd = Utils.closestBinarySearch(segments, fromX, 'xVal');\r\n\t    // \tvar endSegmentInd = Utils.closestBinarySearch(segments, toX, 'xVal');\r\n\t    // \treturn segments.slice(startSegmentInd, endSegmentInd);\r\n\t    // }\r\n\t    /**\r\n\t     * returns array of segments for values array\r\n\t     * values must be sorted!\r\n\t     */\r\n\t    TrendSegmentsManager.prototype.getSegmentsForXValues = function (values) {\r\n\t        var valueInd = 0;\r\n\t        var value = values[valueInd];\r\n\t        var lastValueInd = values.length - 1;\r\n\t        var results = [];\r\n\t        var segment = this.getStartSegment();\r\n\t        if (!segment.hasValue)\r\n\t            return [];\r\n\t        while (segment) {\r\n\t            while (value < segment.startXVal) {\r\n\t                results.push(void 0);\r\n\t                value = values[++valueInd];\r\n\t            }\r\n\t            while (value > segment.endXVal) {\r\n\t                segment = segment.getNext();\r\n\t                if (!segment)\r\n\t                    break;\r\n\t            }\r\n\t            var valueInPoint = (segment.startXVal == value || segment.endXVal == value ||\r\n\t                (segment.startXVal < value && segment.endXVal > value));\r\n\t            if (valueInPoint) {\r\n\t                results.push(segment);\r\n\t                value = values[++valueInd];\r\n\t            }\r\n\t            if (valueInd > lastValueInd)\r\n\t                break;\r\n\t        }\r\n\t        return results;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onAnimationFrame = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onRebuild = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.REBUILD, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onDisplayedRangeChanged = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.allocateNextSegment = function () {\r\n\t        var id = this.nextEmptyId++;\r\n\t        var segment = new TrendSegment(this, id);\r\n\t        var prevSegment = this.segmentsById[this.endSegmentId];\r\n\t        if (prevSegment && prevSegment.hasValue) {\r\n\t            prevSegment.nextId = id;\r\n\t            segment.prevId = prevSegment.id;\r\n\t        }\r\n\t        this.endSegmentId = id;\r\n\t        this.segmentsLength++;\r\n\t        this.segmentsById[id] = segment;\r\n\t        this.segments.push(segment);\r\n\t        return segment;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.allocatePrevSegment = function () {\r\n\t        var id = this.nextEmptyId++;\r\n\t        var segment = new TrendSegment(this, id);\r\n\t        var nextSegment = this.segmentsById[this.startSegmentId];\r\n\t        if (nextSegment && nextSegment.hasValue) {\r\n\t            nextSegment.prevId = id;\r\n\t            segment.nextId = nextSegment.id;\r\n\t        }\r\n\t        this.startSegmentId = id;\r\n\t        this.segmentsLength++;\r\n\t        this.segmentsById[id] = segment;\r\n\t        this.segments.unshift(segment);\r\n\t        return segment;\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.appendData = function (newData, needRebuildSegments) {\r\n\t        // WARNING: bottleneck method!\r\n\t        if (needRebuildSegments === void 0) { needRebuildSegments = false; }\r\n\t        // var t1 = performance.now();\r\n\t        var trendData = this.trend.getData();\r\n\t        if (needRebuildSegments) {\r\n\t            newData = trendData;\r\n\t            this.animatedSegmentsForAppend = [];\r\n\t        }\r\n\t        var startItemInd = trendData.length - newData.length;\r\n\t        var segment = this.getEndSegment() || this.allocateNextSegment();\r\n\t        var initialSegment = segment.hasValue ? segment : null;\r\n\t        var initialAnimationState = segment.createAnimationState();\r\n\t        var itemInd = 0;\r\n\t        while (itemInd < newData.length) {\r\n\t            var item = newData[itemInd];\r\n\t            var itemIsInserted = segment.appendItem(item);\r\n\t            var isLastItem = itemInd == newData.length - 1;\r\n\t            if (itemIsInserted) {\r\n\t                if (!isLastItem)\r\n\t                    itemInd++;\r\n\t            }\r\n\t            else {\r\n\t                if (!segment.isCompleted)\r\n\t                    segment.complete();\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted) {\r\n\t                segment.recalculateItems();\r\n\t            }\r\n\t            var segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\r\n\t            if (segmentIsReadyForAnimate) {\r\n\t                var id = segment.id;\r\n\t                if (!initialSegment)\r\n\t                    initialSegment = segment;\r\n\t                if (!initialAnimationState)\r\n\t                    initialAnimationState = initialSegment.createAnimationState();\r\n\t                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                if (this.animatedSegmentsForAppend.length > 0) {\r\n\t                    segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\r\n\t                    segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\r\n\t                }\r\n\t                segment.targetAnimationState = segment.createAnimationState();\r\n\t                this.animatedSegmentsForAppend.push(id);\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted)\r\n\t                break;\r\n\t            if (!segment.isCompleted)\r\n\t                continue;\r\n\t            segment = this.allocateNextSegment();\r\n\t            var prevItem = trendData[startItemInd + itemInd - 1];\r\n\t            segment.appendItem(prevItem);\r\n\t        }\r\n\t        var animationsOptions = this.chartState.data.animations;\r\n\t        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\r\n\t        // var t2 = performance.now();\r\n\t        // console.log(t2 - t1);\r\n\t        // do not create animation if segments was rebuilded\r\n\t        if (needRebuildSegments) {\r\n\t            for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\r\n\t                var segmentId = _a[_i];\r\n\t                var segment_1 = this.segmentsById[segmentId];\r\n\t                segment_1.currentAnimationState = segment_1.createAnimationState();\r\n\t            }\r\n\t            this.animatedSegmentsForAppend = [];\r\n\t            return;\r\n\t        }\r\n\t        if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS)\r\n\t            time = 0;\r\n\t        this.animate(time);\r\n\t    };\r\n\t    // TODO: refactor duplicated code from appendData\r\n\t    TrendSegmentsManager.prototype.prependData = function (newData) {\r\n\t        var trendData = this.trend.getData();\r\n\t        var segment = this.getStartSegment() || this.segmentsById[0];\r\n\t        var initialSegment = segment.hasValue ? segment : null;\r\n\t        var itemInd = newData.length - 1;\r\n\t        var initialAnimationState = segment.createAnimationState();\r\n\t        while (itemInd >= 0) {\r\n\t            var item = newData[itemInd];\r\n\t            var itemIsInserted = segment.prependItem(item);\r\n\t            var isLastItem = itemInd == 0;\r\n\t            if (itemIsInserted) {\r\n\t                if (!isLastItem)\r\n\t                    itemInd--;\r\n\t            }\r\n\t            else {\r\n\t                if (!segment.isCompleted)\r\n\t                    segment.complete();\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted) {\r\n\t                segment.recalculateItems();\r\n\t            }\r\n\t            var segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\r\n\t            if (segmentIsReadyForAnimate) {\r\n\t                var id = segment.id;\r\n\t                if (!initialSegment)\r\n\t                    initialSegment = segment;\r\n\t                if (!initialAnimationState)\r\n\t                    initialAnimationState = initialSegment.createAnimationState();\r\n\t                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\r\n\t                if (this.animatedSegmentsForPrepend.length > 0) {\r\n\t                    segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\r\n\t                    segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\r\n\t                }\r\n\t                segment.targetAnimationState = segment.createAnimationState();\r\n\t                this.animatedSegmentsForPrepend.push(id);\r\n\t            }\r\n\t            if (isLastItem && itemIsInserted)\r\n\t                break;\r\n\t            if (!segment.isCompleted)\r\n\t                continue;\r\n\t            segment = this.allocatePrevSegment();\r\n\t            var nextItem = trendData[itemInd + 1];\r\n\t            segment.prependItem(nextItem);\r\n\t        }\r\n\t        var animationsOptions = this.chartState.data.animations;\r\n\t        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\r\n\t        if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS)\r\n\t            time = 0;\r\n\t        this.animate(time, true);\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.animate = function (time, isPrepend) {\r\n\t        var _this = this;\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\r\n\t        var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\r\n\t        if ((animation && animation.isActive()) || time == 0) {\r\n\t            if (animation)\r\n\t                animation.kill();\r\n\t            this.onAnimationFrameHandler(1, isPrepend);\r\n\t            animatedSegmentsIds.length = 0;\r\n\t            return;\r\n\t        }\r\n\t        var animationsOptions = this.chartState.data.animations;\r\n\t        var ease = animationsOptions.trendChangeEase;\r\n\t        var objectToAnimate = { animationValue: 0 };\r\n\t        animation = TweenLite.to(objectToAnimate, time, { animationValue: 1, ease: ease });\r\n\t        animation.eventCallback('onUpdate', function () { return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend); });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animatedSegmentsIds.length = 0;\r\n\t            _this.appendAnimation = null;\r\n\t        });\r\n\t        if (isPrepend) {\r\n\t            this.prependAnimation = animation;\r\n\t        }\r\n\t        else {\r\n\t            this.appendAnimation = animation;\r\n\t        }\r\n\t    };\r\n\t    TrendSegmentsManager.prototype.onAnimationFrameHandler = function (coefficient, isPrepend) {\r\n\t        if (isPrepend === void 0) { isPrepend = false; }\r\n\t        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\r\n\t        for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\r\n\t            var segmentId = animatedSegmentsIds_1[_i];\r\n\t            var segment = this.segmentsById[segmentId];\r\n\t            for (var key in segment.targetAnimationState) {\r\n\t                var targetValue = segment.targetAnimationState[key];\r\n\t                var initialValue = segment.initialAnimationState[key];\r\n\t                var currentValue = initialValue + (targetValue - initialValue) * coefficient;\r\n\t                segment.currentAnimationState[key] = currentValue;\r\n\t            }\r\n\t        }\r\n\t        this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\r\n\t        this.ee.emit(EVENTS.ANIMATION_FRAME, this);\r\n\t    };\r\n\t    return TrendSegmentsManager;\r\n\t}());\r\n\texports.TrendSegmentsManager = TrendSegmentsManager;\r\n\tvar TrendSegment = (function () {\r\n\t    function TrendSegment(trendPoints, id) {\r\n\t        this.isCompleted = false;\r\n\t        this.items = [];\r\n\t        this.initialAnimationState = {};\r\n\t        this.targetAnimationState = {};\r\n\t        this.currentAnimationState = {};\r\n\t        this.trendSegments = trendPoints;\r\n\t        this.id = id;\r\n\t        this.maxLength = trendPoints.maxSegmentLength;\r\n\t    }\r\n\t    TrendSegment.prototype.createAnimationState = function () {\r\n\t        var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\r\n\t        return {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal,\r\n\t            startXVal: startXVal,\r\n\t            startYVal: startYVal,\r\n\t            endXVal: endXVal,\r\n\t            endYVal: endYVal,\r\n\t            maxYVal: maxYVal,\r\n\t            minYVal: minYVal,\r\n\t            maxLength: maxLength\r\n\t        };\r\n\t    };\r\n\t    ;\r\n\t    TrendSegment.prototype.appendItem = function (item) {\r\n\t        if (this.isCompleted)\r\n\t            return false;\r\n\t        var items = this.items;\r\n\t        if (items.length < 2) {\r\n\t            this.items.push(item);\r\n\t            this.hasValue = true;\r\n\t            return true;\r\n\t        }\r\n\t        var startXVal = items[0].xVal;\r\n\t        if (item.xVal - startXVal > this.maxLength)\r\n\t            return false;\r\n\t        items.push(item);\r\n\t        return true;\r\n\t    };\r\n\t    TrendSegment.prototype.prependItem = function (item) {\r\n\t        if (this.isCompleted)\r\n\t            return false;\r\n\t        var items = this.items;\r\n\t        if (items.length < 2) {\r\n\t            this.items.unshift(item);\r\n\t            this.hasValue = true;\r\n\t            return true;\r\n\t        }\r\n\t        var endXVal = items[items.length - 1].xVal;\r\n\t        if (endXVal - item.xVal > this.maxLength)\r\n\t            return false;\r\n\t        items.unshift(item);\r\n\t        return true;\r\n\t    };\r\n\t    TrendSegment.prototype.complete = function () {\r\n\t        this.isCompleted = true;\r\n\t        this.recalculateItems();\r\n\t        this.items = []; // free memory for completed ranges\r\n\t    };\r\n\t    TrendSegment.prototype.recalculateItems = function () {\r\n\t        var items = this.items;\r\n\t        var itemsLength = items.length;\r\n\t        if (itemsLength === 0)\r\n\t            Utils_1.Utils.error('Unable to create TrendSegment without TrendItems');\r\n\t        var endItem = items[itemsLength - 1];\r\n\t        var endXVal = endItem.xVal, endYVal = endItem.yVal;\r\n\t        var startXVal, startYVal;\r\n\t        var startItem = items[0];\r\n\t        startXVal = startItem.xVal;\r\n\t        startYVal = startItem.yVal;\r\n\t        var minX = Math.min(startXVal, endXVal);\r\n\t        var maxX = Math.max(startXVal, endXVal);\r\n\t        var middleXVal = minX + (maxX - minX) / 2;\r\n\t        var minY = Math.min(startYVal, endYVal);\r\n\t        var maxY = Math.max(startYVal, endYVal);\r\n\t        var middleYVal = minY + (maxY - minY) / 2;\r\n\t        var yVals = items.map(function (item) { return item.yVal; });\r\n\t        this.startXVal = startXVal;\r\n\t        this.startYVal = startYVal;\r\n\t        this.endXVal = endXVal;\r\n\t        this.endYVal = endYVal;\r\n\t        this.xVal = middleXVal;\r\n\t        this.yVal = middleYVal;\r\n\t        this.maxYVal = Math.max.apply(Math, yVals);\r\n\t        this.minYVal = Math.min.apply(Math, yVals);\r\n\t        if (!this.currentAnimationState)\r\n\t            this.currentAnimationState = this.createAnimationState();\r\n\t    };\r\n\t    TrendSegment.prototype.getNext = function () {\r\n\t        var nextPoint = this.trendSegments.segmentsById[this.nextId];\r\n\t        return nextPoint && nextPoint.hasValue ? nextPoint : null;\r\n\t    };\r\n\t    TrendSegment.prototype.getPrev = function () {\r\n\t        var prevPoint = this.trendSegments.segmentsById[this.prevId];\r\n\t        return prevPoint && prevPoint.hasValue ? prevPoint : null;\r\n\t    };\r\n\t    TrendSegment.prototype.getFrameVal = function () {\r\n\t        var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\r\n\t        return new Vector3(xVal, yVal, 0);\r\n\t    };\r\n\t    TrendSegment.prototype.getFramePoint = function () {\r\n\t        var frameVal = this.getFrameVal();\r\n\t        return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\r\n\t    };\r\n\t    return TrendSegment;\r\n\t}());\r\n\texports.TrendSegment = TrendSegment;\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Trend_1 = __webpack_require__(16);\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\tvar EVENTS = {\r\n\t    SEGMENTS_REBUILDED: 'segmentsRebuilded'\r\n\t};\r\n\t/**\r\n\t * Trends manager\r\n\t */\r\n\tvar TrendsManager = (function () {\r\n\t    function TrendsManager(state, initialState) {\r\n\t        this.trends = {};\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.chartState = state;\r\n\t        var trendsCalculatedOptions = {};\r\n\t        for (var trendName in initialState.trends) {\r\n\t            var trend = this.createTrend(state, trendName, initialState);\r\n\t            trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\r\n\t        }\r\n\t        this.calculatedOptions = trendsCalculatedOptions;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendsManager.prototype.getTrend = function (trendName) {\r\n\t        return this.trends[trendName];\r\n\t    };\r\n\t    TrendsManager.prototype.getEnabledTrends = function () {\r\n\t        var enabledTrends = [];\r\n\t        var allTrends = this.trends;\r\n\t        for (var trendName in allTrends) {\r\n\t            var trend = allTrends[trendName];\r\n\t            trend.getOptions().enabled && enabledTrends.push(trend);\r\n\t        }\r\n\t        return enabledTrends;\r\n\t    };\r\n\t    TrendsManager.prototype.getStartXVal = function () {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        return trends[0].getData()[0].xVal;\r\n\t    };\r\n\t    TrendsManager.prototype.getEndXVal = function () {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        var firstTrendData = trends[0].getData();\r\n\t        return firstTrendData[firstTrendData.length - 1].xVal;\r\n\t    };\r\n\t    TrendsManager.prototype.getExtremumYVal = function (extremumIsMax, fromX, toX) {\r\n\t        var trends = this.getEnabledTrends();\r\n\t        var compareFn;\r\n\t        var result;\r\n\t        if (extremumIsMax) {\r\n\t            result = -Infinity;\r\n\t            compareFn = Math.max;\r\n\t        }\r\n\t        else {\r\n\t            result = Infinity;\r\n\t            compareFn = Math.min;\r\n\t        }\r\n\t        for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\r\n\t            var trend = trends_1[_i];\r\n\t            var trendData = trend.getData(fromX, toX);\r\n\t            var trendYValues = trendData.map(function (dataItem) { return dataItem.yVal; });\r\n\t            result = compareFn.apply(void 0, [result].concat(trendYValues));\r\n\t        }\r\n\t        if (result == Infinity || result == -Infinity)\r\n\t            result = NaN;\r\n\t        return result;\r\n\t    };\r\n\t    TrendsManager.prototype.getMaxYVal = function (fromX, toX) { return this.getExtremumYVal(true, fromX, toX); };\r\n\t    TrendsManager.prototype.getMinYVal = function (fromX, toX) { return this.getExtremumYVal(false, fromX, toX); };\r\n\t    TrendsManager.prototype.onSegmentsRebuilded = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\r\n\t    };\r\n\t    TrendsManager.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chartState.onInitialStateApplied(function () { return _this.onInitialStateAppliedHandler(); });\r\n\t    };\r\n\t    TrendsManager.prototype.onInitialStateAppliedHandler = function () {\r\n\t        var _this = this;\r\n\t        var _loop_1 = function(trendName) {\r\n\t            this_1.trends[trendName].segmentsManager.onRebuild(function () { return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName); });\r\n\t        };\r\n\t        var this_1 = this;\r\n\t        for (var trendName in this.trends) {\r\n\t            _loop_1(trendName);\r\n\t        }\r\n\t    };\r\n\t    TrendsManager.prototype.createTrend = function (state, trendName, initialState) {\r\n\t        var trend = new Trend_1.Trend(state, trendName, initialState);\r\n\t        this.trends[trendName] = trend;\r\n\t        return trend;\r\n\t    };\r\n\t    return TrendsManager;\r\n\t}());\r\n\texports.TrendsManager = TrendsManager;\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\t/**\r\n\t * manage camera, and contains methods for transforming pixels to values\r\n\t */\r\n\tvar Screen = (function () {\r\n\t    function Screen(chartState) {\r\n\t        this.options = { scrollXVal: 0, scrollX: 0, scrollYVal: 0, scrollY: 0, zoomX: 1, zoomY: 1 };\r\n\t        this.currentScrollX = { x: 0 };\r\n\t        this.currentScrollY = { y: 0 };\r\n\t        this.currentZoomX = { val: 1 };\r\n\t        this.currentZoomY = { val: 1 };\r\n\t        this.chartState = chartState;\r\n\t        var _a = chartState.data, w = _a.width, h = _a.height;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.transform({\r\n\t            scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\r\n\t            zoomY: 1\r\n\t        });\r\n\t        this.bindEvents();\r\n\t        //camera.position.z = 1500;\r\n\t    }\r\n\t    Screen.prototype.getCameraSettings = function () {\r\n\t        var _a = this.chartState.data, w = _a.width, h = _a.height;\r\n\t        // settings for pixel-perfect camera\r\n\t        var FOV = 75;\r\n\t        var vFOV = FOV * (Math.PI / 180);\r\n\t        return {\r\n\t            FOV: FOV,\r\n\t            aspect: w / h,\r\n\t            near: 0.1,\r\n\t            far: 5000,\r\n\t            z: h / (2 * Math.tan(vFOV / 2)),\r\n\t            // move 0,0 to left-bottom corner\r\n\t            x: w / 2,\r\n\t            y: h / 2\r\n\t        };\r\n\t    };\r\n\t    Screen.prototype.onZoomFrame = function (cb) {\r\n\t        var _this = this;\r\n\t        var eventName = 'zoomFrame';\r\n\t        this.ee.on(eventName, cb);\r\n\t        return function () {\r\n\t            _this.ee.off(eventName, cb);\r\n\t        };\r\n\t    };\r\n\t    Screen.prototype.onScrollFrame = function (cb) {\r\n\t        var _this = this;\r\n\t        var eventName = 'scrollFrame';\r\n\t        this.ee.on(eventName, cb);\r\n\t        return function () {\r\n\t            _this.ee.off(eventName, cb);\r\n\t        };\r\n\t    };\r\n\t    Screen.prototype.onTransformationFrame = function (cb) {\r\n\t        var _this = this;\r\n\t        var eventName = 'transformationFrame';\r\n\t        this.ee.on(eventName, cb);\r\n\t        return function () {\r\n\t            _this.ee.off(eventName, cb);\r\n\t        };\r\n\t    };\r\n\t    Screen.prototype.cameraIsMoving = function () {\r\n\t        return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() ||\r\n\t            this.zoomXAnimation && this.zoomXAnimation.isActive());\r\n\t    };\r\n\t    Screen.prototype.transform = function (options, silent) {\r\n\t        if (silent === void 0) { silent = false; }\r\n\t        var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\r\n\t        if (scrollX != void 0)\r\n\t            this.options.scrollX = scrollX;\r\n\t        if (scrollY != void 0)\r\n\t            this.options.scrollY = scrollY;\r\n\t        if (zoomX != void 0)\r\n\t            this.options.zoomX = zoomX;\r\n\t        if (zoomY != void 0)\r\n\t            this.options.zoomY = zoomY;\r\n\t        if (scrollX != void 0 || zoomX) {\r\n\t            options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\r\n\t            this.options.scrollXVal = options.scrollXVal;\r\n\t        }\r\n\t        if (scrollY != void 0 || zoomY) {\r\n\t            options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\r\n\t            this.options.scrollYVal = options.scrollYVal;\r\n\t        }\r\n\t        if (silent)\r\n\t            return;\r\n\t        this.ee.emit('transformationFrame', options);\r\n\t        if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\r\n\t            this.ee.emit('scrollFrame', options);\r\n\t        }\r\n\t        if (options.zoomX != void 0 || options.zoomY != void 0) {\r\n\t            this.ee.emit('zoomFrame', options);\r\n\t        }\r\n\t    };\r\n\t    Screen.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        // handle scroll and zoom\r\n\t        state.onChange(function (changedProps) {\r\n\t            if (changedProps.xAxis && changedProps.xAxis.range) {\r\n\t                if (changedProps.xAxis.range.scroll != void 0)\r\n\t                    _this.onScrollXHandler(changedProps);\r\n\t                if (changedProps.xAxis.range.zoom)\r\n\t                    _this.onZoomXHandler();\r\n\t            }\r\n\t            if (changedProps.yAxis && changedProps.yAxis.range) {\r\n\t                if (changedProps.yAxis.range.scroll != void 0)\r\n\t                    _this.onScrollYHandler();\r\n\t                if (changedProps.yAxis.range.zoom)\r\n\t                    _this.onZoomYHandler();\r\n\t            }\r\n\t        });\r\n\t        state.onDestroy(function () { return _this.onDestroyHandler(); });\r\n\t    };\r\n\t    Screen.prototype.onDestroyHandler = function () {\r\n\t        this.ee.removeAllListeners();\r\n\t        this.scrollXAnimation && this.scrollXAnimation.kill();\r\n\t        this.scrollYAnimation && this.scrollYAnimation.kill();\r\n\t        this.zoomXAnimation && this.zoomXAnimation.kill();\r\n\t        this.zoomYAnimation && this.zoomYAnimation.kill();\r\n\t    };\r\n\t    Screen.prototype.onScrollXHandler = function (changedProps) {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        var isDragMode = state.data.cursor.dragMode;\r\n\t        var animations = state.data.animations;\r\n\t        var canAnimate = animations.enabled && !isDragMode;\r\n\t        var zoomXChanged = changedProps.xAxis.range.zoom;\r\n\t        var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\r\n\t        var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\r\n\t        var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\r\n\t        if (this.scrollXAnimation)\r\n\t            this.scrollXAnimation.pause();\r\n\t        var range = state.data.xAxis.range;\r\n\t        var targetX = range.scroll * range.scaleFactor * range.zoom;\r\n\t        this.currentScrollX.x = this.options.scrollX;\r\n\t        var cb = function () {\r\n\t            _this.transform({ scrollX: _this.currentScrollX.x });\r\n\t        };\r\n\t        if (canAnimate) {\r\n\t            this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\r\n\t                x: targetX, ease: ease\r\n\t            });\r\n\t            this.scrollXAnimation.eventCallback('onUpdate', cb);\r\n\t        }\r\n\t        else {\r\n\t            this.currentScrollX.x = targetX;\r\n\t            cb();\r\n\t        }\r\n\t    };\r\n\t    Screen.prototype.onScrollYHandler = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        var animations = state.data.animations;\r\n\t        var canAnimate = animations.enabled;\r\n\t        var time = animations.zoomSpeed;\r\n\t        if (this.scrollYAnimation)\r\n\t            this.scrollYAnimation.pause();\r\n\t        var range = state.data.yAxis.range;\r\n\t        var targetY = range.scroll * range.scaleFactor * range.zoom;\r\n\t        this.currentScrollY.y = this.options.scrollY;\r\n\t        var cb = function () {\r\n\t            _this.transform({ scrollY: _this.currentScrollY.y });\r\n\t        };\r\n\t        if (canAnimate) {\r\n\t            this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\r\n\t                y: targetY, ease: animations.zoomEase\r\n\t            });\r\n\t            this.scrollYAnimation.eventCallback('onUpdate', cb);\r\n\t        }\r\n\t        else {\r\n\t            this.currentScrollY.y = targetY;\r\n\t            cb();\r\n\t        }\r\n\t    };\r\n\t    Screen.prototype.onZoomXHandler = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        var animations = state.data.animations;\r\n\t        var canAnimate = animations.enabled;\r\n\t        var time = animations.zoomSpeed;\r\n\t        var targetZoom = state.data.xAxis.range.zoom;\r\n\t        if (this.zoomXAnimation)\r\n\t            this.zoomXAnimation.pause();\r\n\t        var cb = function () {\r\n\t            _this.transform({ zoomX: _this.currentZoomX.val });\r\n\t        };\r\n\t        if (canAnimate) {\r\n\t            this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\r\n\t                val: targetZoom, ease: animations.zoomEase\r\n\t            });\r\n\t            this.zoomXAnimation.eventCallback('onUpdate', cb);\r\n\t        }\r\n\t        else {\r\n\t            this.currentZoomX.val = targetZoom;\r\n\t            cb();\r\n\t        }\r\n\t    };\r\n\t    Screen.prototype.onZoomYHandler = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        var animations = state.data.animations;\r\n\t        var canAnimate = animations.enabled;\r\n\t        var time = animations.zoomSpeed;\r\n\t        var targetZoom = state.data.yAxis.range.zoom;\r\n\t        if (this.zoomYAnimation)\r\n\t            this.zoomYAnimation.pause();\r\n\t        var cb = function () {\r\n\t            _this.transform({ zoomY: _this.currentZoomY.val });\r\n\t        };\r\n\t        if (canAnimate) {\r\n\t            this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\r\n\t                val: targetZoom, ease: animations.zoomEase\r\n\t            });\r\n\t            this.zoomYAnimation.eventCallback('onUpdate', cb);\r\n\t        }\r\n\t        else {\r\n\t            this.currentZoomY.val = targetZoom;\r\n\t            cb();\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     *  returns offset in pixels from xAxis.range.zeroVal to scrollXVal\r\n\t     */\r\n\t    Screen.prototype.getPointOnXAxis = function (xVal) {\r\n\t        var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\r\n\t        var zoom = this.options.zoomX;\r\n\t        return (xVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  returns offset in pixels from yAxis.range.zeroVal to scrollYVal\r\n\t     */\r\n\t    Screen.prototype.getPointOnYAxis = function (yVal) {\r\n\t        var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\r\n\t        var zoom = this.options.zoomY;\r\n\t        return (yVal - zeroVal) * scaleFactor * zoom;\r\n\t    };\r\n\t    /**\r\n\t     *  returns offset in pixels from xAxis.range.zeroVal and from yAxis.range.zeroVal to scrollXVal and scrollYVal\r\n\t     */\r\n\t    Screen.prototype.getPointOnChart = function (xVal, yVal) {\r\n\t        return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\r\n\t    };\r\n\t    /**\r\n\t     * returns value by offset in pixels from xAxis.range.zeroVal\r\n\t     */\r\n\t    Screen.prototype.getValueOnXAxis = function (x) {\r\n\t        return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\r\n\t    };\r\n\t    /**\r\n\t     *  convert value to pixels by using settings from xAxis.range\r\n\t     */\r\n\t    Screen.prototype.valueToPxByXAxis = function (xVal) {\r\n\t        return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\r\n\t    };\r\n\t    /**\r\n\t     *  convert value to pixels by using settings from yAxis.range\r\n\t     */\r\n\t    Screen.prototype.valueToPxByYAxis = function (yVal) {\r\n\t        return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\r\n\t    };\r\n\t    /**\r\n\t     *  convert pixels to value by using settings from xAxis.range\r\n\t     */\r\n\t    Screen.prototype.pxToValueByXAxis = function (xVal) {\r\n\t        return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\r\n\t    };\r\n\t    /**\r\n\t     *  convert pixels to value by using settings from yAxis.range\r\n\t     */\r\n\t    Screen.prototype.pxToValueByYAxis = function (yVal) {\r\n\t        return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\r\n\t    };\r\n\t    /**\r\n\t     *  returns scrollX value by screen scrollX coordinate\r\n\t     */\r\n\t    Screen.prototype.getValueByScreenX = function (x) {\r\n\t        return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\r\n\t    };\r\n\t    /**\r\n\t     *  returns scrollY value by screen scrollY coordinate\r\n\t     */\r\n\t    Screen.prototype.getValueByScreenY = function (y) {\r\n\t        return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\r\n\t    };\r\n\t    //\r\n\t    /**\r\n\t     *  returns screen scrollX value by screen scrollY coordinate\r\n\t     */\r\n\t    Screen.prototype.getScreenXByValue = function (xVal) {\r\n\t        var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\r\n\t        return this.valueToPxByXAxis(xVal - zeroVal - scroll);\r\n\t    };\r\n\t    // /**\r\n\t    //  *  returns screen scrollY value by screen scrollY coordinate\r\n\t    //  */\r\n\t    // getScreenYByValue(scrollYVal: number): number {\r\n\t    // \tvar {scroll, zeroVal} = this.data.yAxis.range;\r\n\t    // \treturn this.valueToPxByYAxis(scrollYVal - zeroVal - scroll)\r\n\t    // }\r\n\t    //\r\n\t    //\r\n\t    /**\r\n\t     * returns screen scrollX coordinate by offset in pixels from xAxis.range.zeroVal value\r\n\t     */\r\n\t    Screen.prototype.getScreenXByPoint = function (xVal) {\r\n\t        return this.getScreenXByValue(this.getValueOnXAxis(xVal));\r\n\t    };\r\n\t    /**\r\n\t     * returns offset in pixels from xAxis.range.zeroVal value by screen scrollX coordinate\r\n\t     */\r\n\t    Screen.prototype.getPointByScreenX = function (screenX) {\r\n\t        return this.getPointOnXAxis(this.getValueByScreenX(screenX));\r\n\t    };\r\n\t    /**\r\n\t     * returns offset in pixels from yAxis.range.zeroVal value by screen scrollY coordinate\r\n\t     */\r\n\t    Screen.prototype.getPointByScreenY = function (screenY) {\r\n\t        return this.getPointOnYAxis(this.getValueByScreenY(screenY));\r\n\t    };\r\n\t    Screen.prototype.getTop = function () {\r\n\t        return this.getPointByScreenY(this.chartState.data.height);\r\n\t    };\r\n\t    Screen.prototype.getBottom = function () {\r\n\t        return this.getPointByScreenY(0);\r\n\t    };\r\n\t    Screen.prototype.getLeft = function () {\r\n\t        return this.getPointByScreenX(0);\r\n\t    };\r\n\t    Screen.prototype.getScreenRightVal = function () {\r\n\t        return this.getValueByScreenX(this.chartState.data.width);\r\n\t    };\r\n\t    Screen.prototype.getTopVal = function () {\r\n\t        return this.getValueByScreenY(this.chartState.data.height);\r\n\t    };\r\n\t    Screen.prototype.getBottomVal = function () {\r\n\t        return this.getValueByScreenY(0);\r\n\t    };\r\n\t    Screen.prototype.getCenterYVal = function () {\r\n\t        return this.getValueByScreenY(this.chartState.data.height / 2);\r\n\t    };\r\n\t    return Screen;\r\n\t}());\r\n\texports.Screen = Screen;\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar interfaces_1 = __webpack_require__(21);\r\n\tvar EventEmmiter_1 = __webpack_require__(14);\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    type: 'simple',\r\n\t    lineWidth: 1,\r\n\t    value: 0,\r\n\t    showValue: false,\r\n\t    stickToEdges: false,\r\n\t    lineColor: '#FFFFFF',\r\n\t    title: ''\r\n\t};\r\n\tvar AxisMarks = (function () {\r\n\t    function AxisMarks(chartState, axisType) {\r\n\t        this.items = {};\r\n\t        this.chartState = chartState;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.axisType = axisType;\r\n\t        var marks = this.items;\r\n\t        var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\r\n\t        for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\r\n\t            var options = axisMarksOptions_1[_i];\r\n\t            var axisMark = void 0;\r\n\t            options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            // set mark name\r\n\t            if (!options.name)\r\n\t                options.name = Utils_1.Utils.getUid().toString();\r\n\t            if (marks[options.name])\r\n\t                Utils_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            // create mark instance based on type option\r\n\t            if (options.type == 'timeleft') {\r\n\t                axisMark = new AxisTimeleftMark(chartState, axisType, options);\r\n\t            }\r\n\t            else {\r\n\t                axisMark = new AxisMark(chartState, axisType, options);\r\n\t            }\r\n\t            marks[options.name] = axisMark;\r\n\t        }\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    AxisMarks.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chartState.onTrendChange(function (trendName, changedOptions, newData) {\r\n\t            _this.onTrendChange(trendName, newData);\r\n\t        });\r\n\t        this.chartState.onDestroy(function () { return _this.ee.removeAllListeners(); });\r\n\t    };\r\n\t    AxisMarks.prototype.onTrendChange = function (trendName, newData) {\r\n\t        if (!newData)\r\n\t            return;\r\n\t        var startVal = newData[0].xVal;\r\n\t        var endVal = newData[newData.length - 1].xVal;\r\n\t        var marks = this.items;\r\n\t        for (var markName in marks) {\r\n\t            var mark = marks[markName];\r\n\t            var markVal = mark.options.value;\r\n\t            var markWasCrossed = (startVal == markVal || endVal == markVal || (startVal < markVal && endVal > markVal));\r\n\t            if (markWasCrossed)\r\n\t                this.ee.emit('markCrossed', trendName, newData);\r\n\t        }\r\n\t    };\r\n\t    AxisMarks.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    AxisMarks.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    return AxisMarks;\r\n\t}());\r\n\texports.AxisMarks = AxisMarks;\r\n\tvar AxisMark = (function () {\r\n\t    function AxisMark(chartState, axisType, options) {\r\n\t        this.renderOnTrendsChange = false;\r\n\t        this.ee = new EventEmmiter_1.EventEmitter();\r\n\t        this.options = options;\r\n\t        this.axisType = axisType;\r\n\t        this.chartState = chartState;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    AxisMark.prototype.bindEvents = function () { };\r\n\t    AxisMark.prototype.setOptions = function (newOptions) {\r\n\t        var value = this.options.value;\r\n\t        this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\r\n\t        if (this.options.value !== value)\r\n\t            this.ee.emit('valueChange');\r\n\t        this.ee.emit('onDisplayedValueChange');\r\n\t    };\r\n\t    AxisMark.prototype.getDisplayedVal = function () {\r\n\t        var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\r\n\t        return String(displayedValue !== void 0 ? displayedValue : value);\r\n\t    };\r\n\t    AxisMark.prototype.onMarkCrossed = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on('markCrossed', cb);\r\n\t        return function () {\r\n\t            _this.ee.off('markCrossed', cb);\r\n\t        };\r\n\t    };\r\n\t    AxisMark.prototype.onValueChange = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on('valueChange', cb);\r\n\t        return function () {\r\n\t            _this.ee.off('valueChange', cb);\r\n\t        };\r\n\t    };\r\n\t    AxisMark.prototype.onDisplayedValueChange = function (cb) {\r\n\t        var _this = this;\r\n\t        this.ee.on('onDisplayedValueChange', cb);\r\n\t        return function () {\r\n\t            _this.ee.off('onDisplayedValueChange', cb);\r\n\t        };\r\n\t    };\r\n\t    AxisMark.typeName = 'simple';\r\n\t    return AxisMark;\r\n\t}());\r\n\texports.AxisMark = AxisMark;\r\n\tvar AxisTimeleftMark = (function (_super) {\r\n\t    __extends(AxisTimeleftMark, _super);\r\n\t    function AxisTimeleftMark() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.renderOnTrendsChange = true;\r\n\t    }\r\n\t    AxisTimeleftMark.prototype.getDisplayedVal = function () {\r\n\t        var markVal = this.options.value;\r\n\t        var maxXVal = this.chartState.data.computedData.trends.maxXVal;\r\n\t        var time = markVal - maxXVal;\r\n\t        if (time < 0)\r\n\t            time = 0;\r\n\t        return Utils_1.Utils.msToTimeString(time);\r\n\t    };\r\n\t    AxisTimeleftMark.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chartState.onTrendsChange(function () { return _this.onTrendsChange(); });\r\n\t    };\r\n\t    AxisTimeleftMark.prototype.onTrendsChange = function () {\r\n\t        this.ee.emit('onDisplayedValueChange');\r\n\t    };\r\n\t    AxisTimeleftMark.typeName = 'timeleft';\r\n\t    return AxisTimeleftMark;\r\n\t}(AxisMark));\r\n\texports.AxisTimeleftMark = AxisTimeleftMark;\r\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (AXIS_RANGE_TYPE) {\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\r\n\t    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\"; // TODO: AXIS_RANGE_TYPE.ALL\r\n\t})(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\r\n\tvar AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\r\n\t;\r\n\t(function (AXIS_TYPE) {\r\n\t    AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\r\n\t    AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\r\n\t})(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\r\n\tvar AXIS_TYPE = exports.AXIS_TYPE;\r\n\t(function (AXIS_DATA_TYPE) {\r\n\t    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\r\n\t    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\r\n\t})(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\r\n\tvar AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\r\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * base class for all widgets\r\n\t * each widget must have widgetName static property\r\n\t */\r\n\tvar ChartWidget = (function () {\r\n\t    function ChartWidget() {\r\n\t        this.unbindList = [];\r\n\t    }\r\n\t    ChartWidget.prototype.setupChartState = function (chartState) {\r\n\t        this.chartState = chartState;\r\n\t    };\r\n\t    ChartWidget.prototype.bindEvent = function () {\r\n\t        var args = [];\r\n\t        for (var _i = 0; _i < arguments.length; _i++) {\r\n\t            args[_i - 0] = arguments[_i];\r\n\t        }\r\n\t        var unbindList = [];\r\n\t        if (!Array.isArray(args[0])) {\r\n\t            unbindList.push(args[0]);\r\n\t        }\r\n\t        else {\r\n\t            unbindList.push.apply(unbindList, (args));\r\n\t        }\r\n\t        (_a = this.unbindList).push.apply(_a, unbindList);\r\n\t        var _a;\r\n\t    };\r\n\t    ChartWidget.prototype.unbindEvents = function () {\r\n\t        this.unbindList.forEach(function (unbindEvent) { return unbindEvent(); });\r\n\t        this.unbindList.length = 0;\r\n\t    };\r\n\t    ChartWidget.widgetName = '';\r\n\t    return ChartWidget;\r\n\t}());\r\n\texports.ChartWidget = ChartWidget;\r\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Widget_1 = __webpack_require__(22);\r\n\tvar GridWidget_1 = __webpack_require__(24);\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar interfaces_1 = __webpack_require__(21);\r\n\t/**\r\n\t * widget for drawing axis\r\n\t */\r\n\tvar AxisWidget = (function (_super) {\r\n\t    __extends(AxisWidget, _super);\r\n\t    function AxisWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isDestroyed = false;\r\n\t    }\r\n\t    AxisWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisXObject = new Object3D();\r\n\t        this.axisYObject = new Object3D();\r\n\t        this.object3D.add(this.axisXObject);\r\n\t        this.object3D.add(this.axisYObject);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t        // canvas drawing is expensive operation, so when we scroll, redraw must be called only once per second\r\n\t        this.updateAxisXRequest = Utils_1.Utils.throttle(function () { return _this.updateAxis(interfaces_1.AXIS_TYPE.X); }, 1000);\r\n\t        this.onScrollChange(this.chartState.screen.options.scrollX, this.chartState.screen.options.scrollY);\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        this.bindEvent(state.screen.onTransformationFrame(function (options) {\r\n\t            _this.onScrollChange(options.scrollX, options.scrollY);\r\n\t        }), state.screen.onZoomFrame(function (options) { _this.onZoomFrame(options); }), state.onDestroy(function () { return _this.onDestroy(); }), state.onResize(function () { return _this.onResize(); }));\r\n\t    };\r\n\t    AxisWidget.prototype.onDestroy = function () {\r\n\t        this.isDestroyed = true;\r\n\t        this.unbindEvents();\r\n\t    };\r\n\t    AxisWidget.prototype.onScrollChange = function (x, y) {\r\n\t        if (y != void 0) {\r\n\t            this.axisYObject.position.y = y;\r\n\t            this.axisXObject.position.y = y;\r\n\t        }\r\n\t        if (x != void 0) {\r\n\t            this.axisYObject.position.x = x;\r\n\t            this.updateAxisXRequest();\r\n\t        }\r\n\t    };\r\n\t    AxisWidget.prototype.onResize = function () {\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t    };\r\n\t    AxisWidget.prototype.setupAxis = function (orientation) {\r\n\t        var _this = this;\r\n\t        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\r\n\t        var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\r\n\t        var canvasWidth = 0, canvasHeight = 0;\r\n\t        // clean meshes\r\n\t        if (isXAxis) {\r\n\t            this.axisXObject.traverse(function (obj) { return _this.axisXObject.remove(obj); });\r\n\t            canvasWidth = visibleWidth * 3;\r\n\t            canvasHeight = 50;\r\n\t        }\r\n\t        else {\r\n\t            this.axisYObject.traverse(function (obj) { return _this.axisYObject.remove(obj); });\r\n\t            canvasWidth = 50;\r\n\t            canvasHeight = visibleHeight * 3;\r\n\t        }\r\n\t        var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.font = \"10px Arial\";\r\n\t            ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\r\n\t        if (isXAxis) {\r\n\t            axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\r\n\t            this.axisXObject.add(axisMesh);\r\n\t        }\r\n\t        else {\r\n\t            axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\r\n\t            this.axisYObject.add(axisMesh);\r\n\t        }\r\n\t        this.updateAxis(orientation);\r\n\t    };\r\n\t    AxisWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisWidget.prototype.updateAxis = function (orientation) {\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\r\n\t        var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\r\n\t        var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\r\n\t        var axisOptions;\r\n\t        var axisMesh;\r\n\t        var axisGridParams;\r\n\t        if (isXAxis) {\r\n\t            axisMesh = this.axisXObject.children[0];\r\n\t            axisOptions = this.chartState.data.xAxis;\r\n\t            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\r\n\t        }\r\n\t        else {\r\n\t            axisMesh = this.axisYObject.children[0];\r\n\t            axisOptions = this.chartState.data.yAxis;\r\n\t            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\r\n\t        }\r\n\t        var geometry = axisMesh.geometry;\r\n\t        var canvasWidth = geometry.parameters.width;\r\n\t        var canvasHeight = geometry.parameters.height;\r\n\t        var texture = axisMesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\t        if (isXAxis) {\r\n\t            axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\r\n\t        }\r\n\t        // TODO: draw text and lines in different loops\r\n\t        var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\r\n\t        var startVal = axisGridParams.start - edgeOffset;\r\n\t        var endVal = axisGridParams.end + edgeOffset;\r\n\t        ctx.beginPath();\r\n\t        for (var val = startVal; val <= endVal; val += axisGridParams.step) {\r\n\t            var displayedValue = '';\r\n\t            if (isXAxis) {\r\n\t                var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\r\n\t                ctx.textAlign = \"center\";\r\n\t                // uncomment for dots\r\n\t                // ctx.moveTo(pxVal + 0.5, canvasHeight);\r\n\t                // ctx.lineTo(pxVal + 0.5, canvasHeight - 5);\r\n\t                if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\r\n\t                    displayedValue = AxisWidget.getDateStr(val, axisGridParams);\r\n\t                }\r\n\t                else {\r\n\t                    displayedValue = Number(val.toFixed(14)).toString();\r\n\t                }\r\n\t                ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\r\n\t            }\r\n\t            else {\r\n\t                var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\r\n\t                ctx.textAlign = \"right\";\r\n\t                // uncomment for dots\r\n\t                // ctx.moveTo(canvasWidth, pxVal + 0.5);\r\n\t                // ctx.lineTo(canvasWidth - 5, pxVal + 0.5);\r\n\t                displayedValue = Number(val.toFixed(14)).toString();\r\n\t                ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\r\n\t            }\r\n\t            ctx.stroke();\r\n\t        }\r\n\t        // uncomment to preview canvas borders\r\n\t        // ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n\t        ctx.stroke();\r\n\t        ctx.closePath();\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisWidget.prototype.onZoomFrame = function (options) {\r\n\t        if (options.zoomX) {\r\n\t            this.updateAxis(interfaces_1.AXIS_TYPE.X);\r\n\t        }\r\n\t        if (options.zoomY) {\r\n\t            this.updateAxis(interfaces_1.AXIS_TYPE.Y);\r\n\t        }\r\n\t    };\r\n\t    // private temporaryHideAxis(orientation: AXIS_TYPE) {\r\n\t    // \tvar isXAxis = orientation == AXIS_TYPE.X;\r\n\t    // \tvar timeoutId = setTimeout(() => {\r\n\t    // \t\t\tthis.showAxis(orientation);\r\n\t    // \t}, 200);\r\n\t    //\r\n\t    // \tif (isXAxis) {\r\n\t    // \t\t(this.axisXObject.children[0] as Mesh).material.opacity = 0;\r\n\t    // \t\tclearTimeout(this.showAxisXTimeout);\r\n\t    // \t\tthis.showAxisXTimeout =\ttimeoutId;\r\n\t    // \t} else {\r\n\t    // \t\tclearTimeout(this.showAxisYTimeout);\r\n\t    // \t\t(this.axisYObject.children[0] as Mesh).material.opacity = 0;\r\n\t    // \t\tthis.showAxisYTimeout = timeoutId;\r\n\t    // \t}\r\n\t    // }\r\n\t    // private showAxis(orientation: AXIS_TYPE) {\r\n\t    // \tvar isXAxis = orientation == AXIS_TYPE.X;\r\n\t    // \tvar material: MeshBasicMaterial;\r\n\t    // \tif (isXAxis) {\r\n\t    // \t\tmaterial = (this.axisXObject.children[0] as Mesh).material as MeshBasicMaterial;\r\n\t    // \t} else {\r\n\t    // \t\tmaterial = (this.axisYObject.children[0] as Mesh).material as MeshBasicMaterial;\r\n\t    // \t}\r\n\t    // \tthis.updateAxis(orientation);\r\n\t    // \tTweenLite.to(material, 0.3, {opacity: 1});\r\n\t    // }\r\n\t    AxisWidget.getDateStr = function (timestamp, gridParams) {\r\n\t        var sec = 1000;\r\n\t        var min = sec * 60;\r\n\t        var hour = min * 60;\r\n\t        var day = hour * 60;\r\n\t        var step = gridParams.step;\r\n\t        var d = new Date(timestamp);\r\n\t        var tf = function (num) { return Utils_1.Utils.toFixed(num, 2); };\r\n\t        return tf(d.getHours()) + ':' + tf(d.getMinutes()) + ':' + tf(d.getSeconds());\r\n\t    };\r\n\t    AxisWidget.widgetName = 'Axis';\r\n\t    return AxisWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.AxisWidget = AxisWidget;\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Widget_1 = __webpack_require__(22);\r\n\tvar LineSegments = THREE.LineSegments;\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\t/**\r\n\t * widget for drawing chart grid\r\n\t */\r\n\tvar GridWidget = (function (_super) {\r\n\t    __extends(GridWidget, _super);\r\n\t    function GridWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.isDestroyed = false;\r\n\t    }\r\n\t    GridWidget.prototype.onReadyHandler = function () {\r\n\t        var _a = this.chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\r\n\t        this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\r\n\t        this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\r\n\t        this.initGrid();\r\n\t        this.updateGrid();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    GridWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        // grid is bigger then screen, so it's no need to update it on each scroll event\r\n\t        var updateGridThrottled = Utils_1.Utils.throttle(function () { return _this.updateGrid(); }, 1000);\r\n\t        this.bindEvent(this.chartState.onScroll(function () { return updateGridThrottled(); }), this.chartState.screen.onZoomFrame(function (options) {\r\n\t            updateGridThrottled();\r\n\t            _this.onZoomFrame(options);\r\n\t        }), this.chartState.onDestroy(function () {\r\n\t            _this.isDestroyed = true;\r\n\t            _this.unbindEvents();\r\n\t        }), this.chartState.onResize(function () {\r\n\t            _this.updateGrid();\r\n\t        }));\r\n\t    };\r\n\t    GridWidget.prototype.initGrid = function () {\r\n\t        var geometry = new THREE.Geometry();\r\n\t        var material = new THREE.LineBasicMaterial({ linewidth: 1, opacity: 0.1, transparent: true });\r\n\t        var xLinesCount = this.gridSizeH;\r\n\t        var yLinesCount = this.gridSizeV;\r\n\t        while (xLinesCount--)\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t        while (yLinesCount--)\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t        this.lineSegments = new LineSegments(geometry, material);\r\n\t        this.lineSegments.position.setZ(-1);\r\n\t        this.lineSegments.frustumCulled = false;\r\n\t    };\r\n\t    GridWidget.prototype.updateGrid = function () {\r\n\t        if (this.isDestroyed)\r\n\t            return;\r\n\t        var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\r\n\t        var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\r\n\t        var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\r\n\t        var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\r\n\t        var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\r\n\t        var gridScrollXVal = scrollXInSegments * axisXGrid.step;\r\n\t        var gridScrollYVal = scrollYInSegments * axisYGrid.step;\r\n\t        var startXVal = axisXGrid.start + gridScrollXVal;\r\n\t        var startYVal = axisYGrid.start + gridScrollYVal;\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        var vertices = geometry.vertices;\r\n\t        var lineInd = 0;\r\n\t        for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\r\n\t            var value = startXVal + i * axisXGrid.step;\r\n\t            var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\r\n\t            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\r\n\t            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\r\n\t            lineInd++;\r\n\t        }\r\n\t        for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\r\n\t            var value = startYVal + i * axisYGrid.step;\r\n\t            var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\r\n\t            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\r\n\t            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\r\n\t            lineInd++;\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t        this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\r\n\t    };\r\n\t    GridWidget.prototype.getHorizontalLineSegment = function (yVal, scrollXVal, scrollYVal) {\r\n\t        var chartState = this.chartState;\r\n\t        var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\r\n\t        var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\r\n\t        return [\r\n\t            new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0),\r\n\t            new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0)\r\n\t        ];\r\n\t    };\r\n\t    GridWidget.prototype.getVerticalLineSegment = function (xVal, scrollXVal, scrollYVal) {\r\n\t        var chartState = this.chartState;\r\n\t        var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\r\n\t        var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\r\n\t        return [\r\n\t            new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0),\r\n\t            new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0)\r\n\t        ];\r\n\t    };\r\n\t    GridWidget.prototype.onZoomFrame = function (options) {\r\n\t        var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\r\n\t        if (options.zoomX)\r\n\t            this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\r\n\t    };\r\n\t    // TODO: move this code to core\r\n\t    GridWidget.getGridParamsForAxis = function (axisOptions, axisWidth, zoom) {\r\n\t        var axisRange = axisOptions.range;\r\n\t        var from = axisRange.from;\r\n\t        var to = axisRange.to;\r\n\t        var axisLength = to - from;\r\n\t        var gridStep = 0;\r\n\t        var gridStepInPixels = 0;\r\n\t        var minGridStepInPixels = axisOptions.grid.minSizePx;\r\n\t        var axisLengthStr = String(axisLength);\r\n\t        var axisLengthPointPosition = axisLengthStr.indexOf('.');\r\n\t        var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\r\n\t        var gridStepFound = false;\r\n\t        var digitPos = 0;\r\n\t        while (!gridStepFound) {\r\n\t            var power = intPartLength - digitPos - 1;\r\n\t            var multiplier = (Math.pow(10, power) || 1);\r\n\t            var dividers = [1, 2, 5];\r\n\t            for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\r\n\t                var nextGridStep = multiplier / dividers[dividerInd];\r\n\t                var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\r\n\t                if (nextGridStepInPixels >= minGridStepInPixels) {\r\n\t                    gridStep = nextGridStep;\r\n\t                    gridStepInPixels = nextGridStepInPixels;\r\n\t                }\r\n\t                else {\r\n\t                    gridStepFound = true;\r\n\t                    if (gridStep === 0) {\r\n\t                        gridStep = nextGridStep;\r\n\t                        gridStepInPixels = nextGridStepInPixels;\r\n\t                    }\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            if (!gridStepFound)\r\n\t                digitPos++;\r\n\t        }\r\n\t        var gridStart = Math.floor(from / gridStep) * gridStep;\r\n\t        var gridEnd = Math.floor(to / gridStep) * gridStep;\r\n\t        return {\r\n\t            start: gridStart,\r\n\t            end: gridEnd,\r\n\t            step: gridStep,\r\n\t            stepInPx: gridStepInPixels,\r\n\t            length: gridEnd - gridStart,\r\n\t            segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\r\n\t        };\r\n\t    };\r\n\t    GridWidget.prototype.getObject3D = function () {\r\n\t        return this.lineSegments;\r\n\t    };\r\n\t    GridWidget.widgetName = 'Grid';\r\n\t    return GridWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.GridWidget = GridWidget;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar TrendsWidget_1 = __webpack_require__(26);\r\n\tvar Color_1 = __webpack_require__(27);\r\n\tvar TrendsGradientWidget = (function (_super) {\r\n\t    __extends(TrendsGradientWidget, _super);\r\n\t    function TrendsGradientWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsGradientWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendGradient;\r\n\t    };\r\n\t    TrendsGradientWidget.widgetName = \"TrendsGradient\";\r\n\t    return TrendsGradientWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsGradientWidget = TrendsGradientWidget;\r\n\tvar TrendGradient = (function (_super) {\r\n\t    __extends(TrendGradient, _super);\r\n\t    function TrendGradient(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        this.visibleSegmentsCnt = 0;\r\n\t        this.trend = chartState.trendsManager.getTrend(trendName);\r\n\t        this.segmentsIds = new Uint16Array(chartState.data.maxVisibleSegments);\r\n\t        this.initGradient();\r\n\t        this.updateSegments();\r\n\t    }\r\n\t    TrendGradient.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBackground;\r\n\t    };\r\n\t    TrendGradient.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            // TODO: optimize updateSegments for onDisplayedRangeChanged\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.chartState.onZoom(function () {\r\n\t            _this.updateSegments();\r\n\t        }));\r\n\t    };\r\n\t    TrendGradient.prototype.getObject3D = function () {\r\n\t        return this.gradient;\r\n\t    };\r\n\t    TrendGradient.prototype.initGradient = function () {\r\n\t        var geometry = new Geometry();\r\n\t        for (var i = 0; i < this.segmentsIds.length; i++) {\r\n\t            geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\r\n\t            var ind = i * 4;\r\n\t            // gradient segment scheme\r\n\t            //\r\n\t            // vert0 +---+ vert3\r\n\t            //       |\\  |\r\n\t            // face1 | \\ | face2\r\n\t            // \t     |  \\|\r\n\t            // vert1 +---+ vert2\r\n\t            geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\r\n\t        }\r\n\t        var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\r\n\t        this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color: color.value, transparent: true, opacity: color.a }));\r\n\t        var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.gradient.frustumCulled = false;\r\n\t    };\r\n\t    TrendGradient.prototype.onZoomFrame = function (options) {\r\n\t        var state = this.chartState.data;\r\n\t        var scaleXFactor = state.xAxis.range.scaleFactor;\r\n\t        var scaleYFactor = state.yAxis.range.scaleFactor;\r\n\t        var currentScale = this.gradient.scale;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendGradient.prototype.onSegmentsAnimate = function (trendSegmentsManager) {\r\n\t        var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\r\n\t        for (var i = 0; i < this.visibleSegmentsCnt; i++) {\r\n\t            var segmentId = this.segmentsIds[i];\r\n\t            if (!animatedSegmentsIds.includes(segmentId))\r\n\t                continue;\r\n\t            this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\r\n\t        }\r\n\t        this.gradient.geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendGradient.prototype.updateSegments = function () {\r\n\t        var geometry = this.gradient.geometry;\r\n\t        var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\r\n\t        var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\r\n\t        this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\r\n\t        var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\r\n\t        if (segmentsToProcessCnt > this.segmentsIds.length) {\r\n\t            Utils_1.Utils.error(TrendsGradientWidget.widgetName + ': MAX_SEGMENTS reached');\r\n\t        }\r\n\t        // setup visible segments and collapse invisible\r\n\t        for (var i = 0; i <= segmentsToProcessCnt; i++) {\r\n\t            if (segmentInd <= lastDisplayedSegmentInd) {\r\n\t                var segment = trendSegments[segmentInd];\r\n\t                this.setupSegmentVertices(i, segment.currentAnimationState);\r\n\t                this.segmentsIds[i] = segment.id;\r\n\t                segmentInd++;\r\n\t            }\r\n\t            else {\r\n\t                this.setupSegmentVertices(i);\r\n\t            }\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    /**\r\n\t     * setup gradient segment by segmentState\r\n\t     * if segmentState is undefined, then collapse vertices to 0,0,0\r\n\t     */\r\n\t    TrendGradient.prototype.setupSegmentVertices = function (segmentInd, segmentState) {\r\n\t        var gradientSegmentInd = segmentInd * 4;\r\n\t        var vertices = this.gradient.geometry.vertices;\r\n\t        var topLeft = vertices[gradientSegmentInd];\r\n\t        var bottomLeft = vertices[gradientSegmentInd + 1];\r\n\t        var bottomRight = vertices[gradientSegmentInd + 2];\r\n\t        var topRight = vertices[gradientSegmentInd + 3];\r\n\t        var screenHeightVal = Math.max(this.chartState.pxToValueByYAxis(this.chartState.data.height), this.chartState.screen.pxToValueByYAxis(this.chartState.data.height));\r\n\t        if (segmentState) {\r\n\t            var startX = this.toLocalX(segmentState.startXVal);\r\n\t            var startY = this.toLocalY(segmentState.startYVal);\r\n\t            var endX = this.toLocalX(segmentState.endXVal);\r\n\t            var endY = this.toLocalY(segmentState.endYVal);\r\n\t            topLeft.set(startX, startY, 0);\r\n\t            topRight.set(endX, endY, 0);\r\n\t            bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\r\n\t            bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\r\n\t        }\r\n\t        else {\r\n\t            topLeft.set(0, 0, 0);\r\n\t            topRight.set(0, 0, 0);\r\n\t            bottomLeft.set(0, 0, 0);\r\n\t            bottomRight.set(0, 0, 0);\r\n\t        }\r\n\t    };\r\n\t    TrendGradient.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chartState.data.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendGradient.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chartState.data.yAxis.range.zeroVal;\r\n\t    };\r\n\t    return TrendGradient;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendGradient = TrendGradient;\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Widget_1 = __webpack_require__(22);\r\n\tvar Object3D = THREE.Object3D;\r\n\t/**\r\n\t * abstract manager class for all trends widgets\r\n\t */\r\n\tvar TrendsWidget = (function (_super) {\r\n\t    __extends(TrendsWidget, _super);\r\n\t    function TrendsWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.widgets = {};\r\n\t    }\r\n\t    TrendsWidget.prototype.onReadyHandler = function () {\r\n\t        this.object3D = new Object3D();\r\n\t        this.onTrendsChange();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var state = this.chartState;\r\n\t        state.onTrendsChange(function () { return _this.onTrendsChange(); });\r\n\t        state.onTrendChange(function (trendName, changedOptions, newData) {\r\n\t            _this.onTrendChange(trendName, changedOptions, newData);\r\n\t        });\r\n\t    };\r\n\t    TrendsWidget.prototype.onTrendsChange = function () {\r\n\t        var trendsOptions = this.chartState.data.trends;\r\n\t        var TrendWidgetClass = this.getTrendWidgetClass();\r\n\t        for (var trendName in trendsOptions) {\r\n\t            var trendOptions = trendsOptions[trendName];\r\n\t            var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\r\n\t            if (widgetCanBeEnabled && !this.widgets[trendName]) {\r\n\t                this.createTrendWidget(trendName);\r\n\t            }\r\n\t            else if (!widgetCanBeEnabled && this.widgets[trendName]) {\r\n\t                this.destroyTrendWidget(trendName);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    TrendsWidget.prototype.onTrendChange = function (trendName, changedOptions, newData) {\r\n\t        var widget = this.widgets[trendName];\r\n\t        if (!widget)\r\n\t            return;\r\n\t        widget.onTrendChange(changedOptions);\r\n\t        if (newData) {\r\n\t            var data = this.chartState.getTrend(trendName).getData();\r\n\t            var isAppend = (!data.length || data[0].xVal < newData[0].xVal);\r\n\t            isAppend ? widget.appendData(newData) : widget.prependData(newData);\r\n\t        }\r\n\t    };\r\n\t    TrendsWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendsWidget.prototype.createTrendWidget = function (trendName) {\r\n\t        var WidgetConstructor = this.getTrendWidgetClass();\r\n\t        var widget = new WidgetConstructor(this.chartState, trendName);\r\n\t        this.widgets[trendName] = widget;\r\n\t        var widgetObject = widget.getObject3D();\r\n\t        widgetObject.name = trendName;\r\n\t        this.object3D.add(widget.getObject3D());\r\n\t    };\r\n\t    TrendsWidget.prototype.destroyTrendWidget = function (trendName) {\r\n\t        this.widgets[trendName].onDestroy();\r\n\t        delete this.widgets[trendName];\r\n\t        var widgetObject = this.object3D.getObjectByName(trendName);\r\n\t        this.object3D.remove(widgetObject);\r\n\t    };\r\n\t    return TrendsWidget;\r\n\t}(Widget_1.ChartWidget));\r\n\texports.TrendsWidget = TrendsWidget;\r\n\t/**\r\n\t * based class for all trends widgets\r\n\t */\r\n\tvar TrendWidget = (function () {\r\n\t    function TrendWidget(chartState, trendName) {\r\n\t        this.chartState = chartState;\r\n\t        this.trendName = trendName;\r\n\t        this.unbindList = [];\r\n\t        this.trend = chartState.trendsManager.getTrend(trendName);\r\n\t        this.chartState = chartState;\r\n\t        this.bindEvents();\r\n\t    }\r\n\t    TrendWidget.widgetIsEnabled = function (trendOptions, chartState) {\r\n\t        return trendOptions.enabled;\r\n\t    };\r\n\t    TrendWidget.prototype.appendData = function (newData) { };\r\n\t    ;\r\n\t    TrendWidget.prototype.prependData = function (newData) { };\r\n\t    ;\r\n\t    TrendWidget.prototype.onTrendChange = function (changedOptions) { };\r\n\t    TrendWidget.prototype.onDestroy = function () {\r\n\t        for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\r\n\t            var unsubscriber = _a[_i];\r\n\t            unsubscriber();\r\n\t        }\r\n\t    };\r\n\t    TrendWidget.prototype.onSegmentsAnimate = function (segments) {\r\n\t    };\r\n\t    TrendWidget.prototype.onZoomFrame = function (options) {\r\n\t    };\r\n\t    TrendWidget.prototype.onTransformationFrame = function (options) {\r\n\t    };\r\n\t    TrendWidget.prototype.onZoom = function () {\r\n\t    };\r\n\t    TrendWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function (trendPoints) { return _this.onSegmentsAnimate(trendPoints); }));\r\n\t        this.bindEvent(this.chartState.screen.onTransformationFrame(function (options) { return _this.onTransformationFrame(options); }));\r\n\t        this.bindEvent(this.chartState.screen.onZoomFrame(function (options) { return _this.onZoomFrame(options); }));\r\n\t        this.bindEvent(this.chartState.onZoom(function () { return _this.onZoom(); }));\r\n\t    };\r\n\t    ;\r\n\t    TrendWidget.prototype.bindEvent = function (unbind) {\r\n\t        this.unbindList.push(unbind);\r\n\t    };\r\n\t    return TrendWidget;\r\n\t}());\r\n\texports.TrendWidget = TrendWidget;\r\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar ChartColor = (function () {\r\n\t    function ChartColor(color) {\r\n\t        this.set(color);\r\n\t    }\r\n\t    /**!\r\n\t     * @preserve $.parseColor\r\n\t     * Copyright 2011 THEtheChad Elliott\r\n\t     * Released under the MIT and GPL licenses.\r\n\t     */\r\n\t    /**\r\n\t     * Parse hex/rgb{a} color syntax.\r\n\t     * @input string\r\n\t     * @returns array [r,g,b{,o}]\r\n\t     */\r\n\t    ChartColor.parseColor = function (color) {\r\n\t        var cache, p = parseInt // Use p as a byte saving reference to parseInt\r\n\t        , color = color.replace(/\\s\\s*/g, ''); //var\r\n\t        // Checks for 6 digit hex and converts string to integer\r\n\t        if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\r\n\t        else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\r\n\t            cache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\r\n\t        else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\r\n\t        else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3], +cache[4]];\r\n\t        else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3]];\r\n\t        else\r\n\t            throw Error(color + ' is not supported by parseColor');\r\n\t        // Performs RGBA conversion by default\r\n\t        isNaN(cache[3]) && (cache[3] = 1);\r\n\t        return cache;\r\n\t        // Adds or removes 4th value based on rgba support\r\n\t        // Support is flipped twice to prevent erros if\r\n\t        // it's not defined\r\n\t        //return cache.slice(0,3 + !!$.support.rgba);\r\n\t    };\r\n\t    ChartColor.prototype.set = function (color) {\r\n\t        if (typeof color == 'number')\r\n\t            color = '#' + color.toString(16);\r\n\t        var colorStr = color;\r\n\t        var rgba = ChartColor.parseColor(colorStr);\r\n\t        this.r = rgba[0];\r\n\t        this.g = rgba[1];\r\n\t        this.b = rgba[2];\r\n\t        this.a = rgba[3];\r\n\t        this.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\r\n\t        this.hexStr = '#' + this.value.toString(16);\r\n\t        this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\r\n\t    };\r\n\t    return ChartColor;\r\n\t}());\r\n\texports.ChartColor = ChartColor;\r\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar LineBasicMaterial = THREE.LineBasicMaterial;\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar TrendsWidget_1 = __webpack_require__(26);\r\n\tvar LineSegments = THREE.LineSegments;\r\n\tvar Trend_1 = __webpack_require__(16);\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\t/**\r\n\t * widget for drawing trends lines\r\n\t */\r\n\tvar TrendsLineWidget = (function (_super) {\r\n\t    __extends(TrendsLineWidget, _super);\r\n\t    function TrendsLineWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLineWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLine;\r\n\t    };\r\n\t    TrendsLineWidget.widgetName = \"TrendsLine\";\r\n\t    return TrendsLineWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsLineWidget = TrendsLineWidget;\r\n\tvar TrendLine = (function (_super) {\r\n\t    __extends(TrendLine, _super);\r\n\t    function TrendLine(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        // contains indexes of free segments\r\n\t        this.freeSegmentsInds = [];\r\n\t        // contains segments to display\r\n\t        this.displayedSegments = {};\r\n\t        var options = this.trend.getOptions();\r\n\t        this.material = new LineBasicMaterial({ color: options.lineColor, linewidth: options.lineWidth });\r\n\t        this.initLine();\r\n\t    }\r\n\t    TrendLine.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendLine.prototype.getObject3D = function () {\r\n\t        return this.lineSegments;\r\n\t    };\r\n\t    TrendLine.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.destroySegments();\r\n\t            _this.setupSegments();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            _this.setupSegments();\r\n\t        }));\r\n\t    };\r\n\t    TrendLine.prototype.initLine = function () {\r\n\t        var geometry = new Geometry();\r\n\t        var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.lineSegments = new LineSegments(geometry, this.material);\r\n\t        this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.lineSegments.frustumCulled = false;\r\n\t        for (var i = 0; i < this.chartState.data.maxVisibleSegments; i++) {\r\n\t            geometry.vertices.push(new Vector3(), new Vector3());\r\n\t            this.freeSegmentsInds.push(i);\r\n\t        }\r\n\t        this.vertices = geometry.vertices;\r\n\t        this.setupSegments();\r\n\t    };\r\n\t    TrendLine.prototype.setupSegments = function () {\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\r\n\t        for (var segmentId in this.displayedSegments) {\r\n\t            var lineSegment = this.displayedSegments[segmentId];\r\n\t            var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\r\n\t            var segmentIsNotDisplayed = (segment_1.startXVal < firstDisplayedSegment.startXVal ||\r\n\t                segment_1.endXVal > lastDisplayedSegment.endXVal);\r\n\t            if (segmentIsNotDisplayed)\r\n\t                this.destroySegment(Number(segmentId));\r\n\t        }\r\n\t        var segment = firstDisplayedSegment;\r\n\t        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\r\n\t            this.setupSegment(segment.id, segment.currentAnimationState);\r\n\t            segment = segment.getNext();\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendLine.prototype.setupSegment = function (segmentId, segmentState) {\r\n\t        var lineSegment = this.displayedSegments[segmentId];\r\n\t        if (!lineSegment) {\r\n\t            if (this.freeSegmentsInds.length == 0)\r\n\t                Utils_1.Utils.error('Max allocated segments reached');\r\n\t            var ind = this.freeSegmentsInds.pop();\r\n\t            lineSegment = this.displayedSegments[segmentId] = { segmentId: segmentId, ind: ind };\r\n\t        }\r\n\t        var segmentInd = lineSegment.ind;\r\n\t        var lineStartVertex = this.vertices[segmentInd * 2];\r\n\t        var lineEndVertex = this.vertices[segmentInd * 2 + 1];\r\n\t        lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\r\n\t        lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\r\n\t    };\r\n\t    TrendLine.prototype.destroySegments = function () {\r\n\t        for (var segmentId in this.displayedSegments)\r\n\t            this.destroySegment(Number(segmentId));\r\n\t    };\r\n\t    TrendLine.prototype.destroySegment = function (segmentId) {\r\n\t        var lineSegment = this.displayedSegments[segmentId];\r\n\t        var lineStartVertex = this.vertices[lineSegment.ind * 2];\r\n\t        var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\r\n\t        lineStartVertex.set(0, 0, 0);\r\n\t        lineEndVertex.set(0, 0, 0);\r\n\t        delete this.displayedSegments[segmentId];\r\n\t        this.freeSegmentsInds.push(lineSegment.ind);\r\n\t    };\r\n\t    TrendLine.prototype.onZoomFrame = function (options) {\r\n\t        var currentScale = this.lineSegments.scale;\r\n\t        var state = this.chartState.data;\r\n\t        var scaleXFactor = state.xAxis.range.scaleFactor;\r\n\t        var scaleYFactor = state.yAxis.range.scaleFactor;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendLine.prototype.onSegmentsAnimate = function (trendSegments) {\r\n\t        var geometry = this.lineSegments.geometry;\r\n\t        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\r\n\t            var segmentId = _a[_i];\r\n\t            if (!this.displayedSegments[segmentId])\r\n\t                continue;\r\n\t            this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\r\n\t        }\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chartState.data.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chartState.data.yAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendLine.prototype.toLocalVec = function (vec) {\r\n\t        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\r\n\t    };\r\n\t    return TrendLine;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendLine = TrendLine;\r\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar TrendsWidget_1 = __webpack_require__(26);\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Vector3 = THREE.Vector3;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Line = THREE.Line;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar PlaneGeometry = THREE.PlaneGeometry;\r\n\tvar Trend_1 = __webpack_require__(16);\r\n\tvar LineBasicMaterial = THREE.LineBasicMaterial;\r\n\tvar Utils_1 = __webpack_require__(4);\r\n\tvar RISE_COLOR = 0x2CAC40;\r\n\tvar FALL_COLOR = 0xEE5533;\r\n\tvar MARGIN_PERCENT = 0.3;\r\n\tvar MAX_CANDLES = 100;\r\n\t/**\r\n\t * widget for drawing trends candles\r\n\t */\r\n\tvar TrendsCandlesWidget = (function (_super) {\r\n\t    __extends(TrendsCandlesWidget, _super);\r\n\t    function TrendsCandlesWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsCandlesWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendCandlesWidget;\r\n\t    };\r\n\t    TrendsCandlesWidget.widgetName = \"TrendsCandles\";\r\n\t    return TrendsCandlesWidget;\r\n\t}(TrendsWidget_1.TrendsWidget));\r\n\texports.TrendsCandlesWidget = TrendsCandlesWidget;\r\n\tvar TrendCandlesWidget = (function (_super) {\r\n\t    __extends(TrendCandlesWidget, _super);\r\n\t    function TrendCandlesWidget(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        // contains indexes of free candles\r\n\t        this.freeCandlesInds = [];\r\n\t        this.candlesPool = [];\r\n\t        this.candles = {};\r\n\t        this.initObject();\r\n\t    }\r\n\t    TrendCandlesWidget.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.segmentsManager.onRebuild(function () {\r\n\t            _this.destroyCandles();\r\n\t            _this.setupCandles();\r\n\t        }));\r\n\t        this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function () {\r\n\t            _this.setupCandles();\r\n\t        }));\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.initObject = function () {\r\n\t        var stateData = this.chartState.data;\r\n\t        var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\r\n\t        var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\r\n\t        this.scaleXFactor = scaleXFactor;\r\n\t        this.scaleYFactor = scaleYFactor;\r\n\t        this.object3D = new Object3D();\r\n\t        this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\r\n\t        this.object3D.frustumCulled = false;\r\n\t        for (var i = 0; i < MAX_CANDLES; i++)\r\n\t            this.freeCandlesInds.push(i);\r\n\t        this.setupCandles();\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.setupCandles = function () {\r\n\t        // remove invisible\r\n\t        var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\r\n\t        for (var segmentId in this.candles) {\r\n\t            var segment_1 = this.candles[segmentId].segment;\r\n\t            var segmentIsNotDisplayed = (segment_1.startXVal < firstDisplayedSegment.startXVal ||\r\n\t                segment_1.endXVal > lastDisplayedSegment.endXVal);\r\n\t            if (segmentIsNotDisplayed)\r\n\t                this.destroyCandle(Number(segmentId));\r\n\t        }\r\n\t        var segment = firstDisplayedSegment;\r\n\t        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\r\n\t            this.setupCandle(segment.id, segment.currentAnimationState);\r\n\t            segment = segment.getNext();\r\n\t        }\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.destroyCandles = function () {\r\n\t        for (var segmentId in this.candles)\r\n\t            this.destroyCandle(Number(segmentId));\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.destroyCandle = function (segmentId) {\r\n\t        var candle = this.candles[segmentId];\r\n\t        this.object3D.remove(candle.getObject3D());\r\n\t        delete this.candles[segmentId];\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.onZoomFrame = function (options) {\r\n\t        var currentScale = this.object3D.scale;\r\n\t        if (options.zoomX)\r\n\t            currentScale.setX(this.scaleXFactor * options.zoomX);\r\n\t        if (options.zoomY)\r\n\t            currentScale.setY(this.scaleYFactor * options.zoomY);\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.onSegmentsAnimate = function (trendSegments) {\r\n\t        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\r\n\t            var segmentId = _a[_i];\r\n\t            if (!this.candles[segmentId])\r\n\t                continue;\r\n\t            var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\r\n\t            this.setupCandle(segmentId, segmentState);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t     * create or modify candle\r\n\t     */\r\n\t    TrendCandlesWidget.prototype.setupCandle = function (candleId, segmentState) {\r\n\t        var candleInd = candleId % MAX_CANDLES;\r\n\t        // get candle from candlesPool to avoid creating new Objects by performance reasons\r\n\t        var candle = this.candlesPool[candleInd];\r\n\t        if (!candle) {\r\n\t            candle = this.candlesPool[candleInd] = new CandleWidget();\r\n\t        }\r\n\t        if (!this.candles[candleId]) {\r\n\t            this.candles[candleId] = candle;\r\n\t            this.object3D.add(candle.getObject3D());\r\n\t        }\r\n\t        candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\r\n\t        candle.setSegment(segmentState);\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalX = function (xVal) {\r\n\t        return xVal - this.chartState.data.xAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalY = function (yVal) {\r\n\t        return yVal - this.chartState.data.yAxis.range.zeroVal;\r\n\t    };\r\n\t    TrendCandlesWidget.prototype.toLocalVec = function (vec) {\r\n\t        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\r\n\t    };\r\n\t    return TrendCandlesWidget;\r\n\t}(TrendsWidget_1.TrendWidget));\r\n\texports.TrendCandlesWidget = TrendCandlesWidget;\r\n\tvar CandleWidget = (function () {\r\n\t    function CandleWidget() {\r\n\t        this.initObject();\r\n\t    }\r\n\t    CandleWidget.prototype.getObject3D = function () {\r\n\t        return this.rect;\r\n\t    };\r\n\t    CandleWidget.prototype.setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\r\n\t        // update rect\r\n\t        var geometry = this.rect.geometry;\r\n\t        var material = this.rect.material;\r\n\t        var width = segment.endXVal - segment.startXVal;\r\n\t        width -= width * MARGIN_PERCENT;\r\n\t        var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\r\n\t        var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\r\n\t        leftTop.set(-width / 2, height / 2, 0);\r\n\t        rightTop.set(width / 2, height / 2, 0);\r\n\t        leftBottom.set(-width / 2, -height / 2, 0);\r\n\t        rightBottom.set(width / 2, -height / 2, 0);\r\n\t        // prevent to draw bars with height < 1px\r\n\t        if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\r\n\t            leftBottom.setY(leftBottom.y + 1);\r\n\t            rightBottom.setY(rightBottom.y + 1);\r\n\t        }\r\n\t        material.color.set(color);\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t        // update lines\r\n\t        var vLineGeometry = this.vLine.geometry;\r\n\t        var vLineMaterial = this.vLine.material;\r\n\t        var lineTop = segment.maxYVal - segment.yVal;\r\n\t        var lineBottom = segment.minYVal - segment.yVal;\r\n\t        vLineGeometry.vertices[0].set(0, lineTop, 0);\r\n\t        vLineGeometry.vertices[1].set(0, lineBottom, 0);\r\n\t        vLineMaterial.color.set(color);\r\n\t        vLineGeometry.verticesNeedUpdate = true;\r\n\t        var hLineGeometry = this.hLine.geometry;\r\n\t        var hLineMaterial = this.hLine.material;\r\n\t        var lineLeft = (-width) / 2;\r\n\t        var lineRight = width / 2;\r\n\t        hLineGeometry.vertices[0].set(lineLeft, 0, 0);\r\n\t        hLineGeometry.vertices[1].set(lineRight, 0, 0);\r\n\t        hLineMaterial.color.set(color);\r\n\t        hLineGeometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    CandleWidget.prototype.initObject = function () {\r\n\t        this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\r\n\t        var vLineGeometry = new Geometry();\r\n\t        var hLineGeometry = new Geometry();\r\n\t        vLineGeometry.vertices.push(new Vector3(), new Vector3);\r\n\t        hLineGeometry.vertices.push(new Vector3(), new Vector3);\r\n\t        this.vLine = new Line(vLineGeometry, new LineBasicMaterial({ linewidth: 1 }));\r\n\t        this.hLine = new Line(hLineGeometry, new LineBasicMaterial({ linewidth: 1 }));\r\n\t        this.rect.add(this.vLine);\r\n\t        this.rect.add(this.hLine);\r\n\t    };\r\n\t    return CandleWidget;\r\n\t}());\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aa8a96c64dad3de6cbf0\n **/","import { Chart, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src/';\nimport enabled = THREE.Cache.enabled;\n// import { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/TrendsMarksPlugin';\n\nvar chart: Chart;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\n// class MarksSource {\n// \tstatic getNext(val: number): ITrendMarkOptions {\n// \t\tif (Math.random() > 0.2) return null;\n// \t\treturn this.generate(val);\n// \t}\n//\n// \tstatic generate(val: number): ITrendMarkOptions {\n// \t\tlet descriptionColor = 'rgb(40,136,75)';\n// \t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n// \t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n// \t\t\tdescriptionColor = 'rgb(219,73,49)';\n// \t\t}\n//\n// \t\treturn {\n// \t\t\ttrendName: 'main',\n// \t\t\tvalue: val,\n// \t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\n// \t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n// \t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n// \t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\n// \t\t\torientation: orientation,\n// \t\t\tdescriptionColor: descriptionColor\n// \t\t}\n// \t}\n// }\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\t// Chart.installWidget(TrendsLoadingWidget);\n\t// Chart.installWidget(TrendsBeaconWidget);\n\t// Chart.installWidget(TrendsIndicatorWidget);\n\n\tchart = new Chart({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 200, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.data, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.data, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t// \t,\n\t// [\n\t// \tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t// ]\n\t);\n\n\tchart.setState({animations: {enabled: false}});\n\tchart.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chart'] = chart;\n\n\tvar mainTrend = chart.getTrend('main');\n\tvar deadlineMark = chart.state.xAxisMarks.getItem('deadline');\n\tvar closeMark = chart.state.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\t// var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\t// if (markOptions) setTimeout(() => {\n\t\t// \tlet trendsMarks = chart.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t// \ttrendsMarks.createMark(markOptions);\n\t\t// }, 500);\n\t});\n\n\n\t// var previewChart1 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[0],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true}\n\t// \t}\n\t// });\n\t//\n\t// var previewChart2 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[1],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true}\n\t// \t},\n\t//\n\t// });\n\t//\n\t// var previewChart3 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[2],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true},\n\t// \t\t'red': {dataset: dsRed.data, lineColor: 0xFF2222},\n\t// \t}\n\t// });\n\t//\n\n\tvar i = 0;\n\n\tchart.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chart.getTrend('main').appendData([val]);\n\t\t// chart.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\n\t\t// chart.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// chart.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// chart.getTrend('red').appendData([val + 10 + Math.random() * 20]);\n\t\t// chart.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\n\n\n\n\t\t// previewChart1.getTrend('main').appendData([val]);\n\t\t// previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\n\t\t// previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\n\t\t\n\t\t// previewChart1.appendData(dataToAppend1);\n\t\t//\n\t\t// var chartData2 = previewChart2.state.data.trends[0].data;\n\t\t// var lastItem2 = chartData2[chartData.length - 1];\n\t\t// var dataToAppend2 = [\n\t\t// \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\n\t\t// ];\n\t\t// previewChart2.appendData(dataToAppend2);\n\t\t// previewChart3.appendData(dataToAppend2);\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.state.data.xAxis.range;\n\t\tchart.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.state.data.xAxis.range;\n\t\tchart.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchart.state.setState({autoScroll: false});\n\t\t\tchart.state.zoomToRange(range);\n\t\t\tchart.state.scrollToEnd().then(() => {\n\t\t\t\tchart.state.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","export * from './Chart';\nexport * from './interfaces';\nexport * from './AxisMarks';\nexport * from './Screen';\nexport * from './State';\nexport * from './Trend';\nexport * from './TrendSegmentsManager';\nexport * from './TrendsManager';\nexport * from './Utils';\nexport * from './Widget';\nexport * from './Plugin';\nexport * from './widgets/TrendsWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","// deps must be always on top\nimport { ChartPlugin } from './Plugin';\nrequire('./deps/deps');\n\nimport { Trend } from \"./Trend\";\nimport Vector3 = THREE.Vector3;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport Scene = THREE.Scene;\nimport Renderer = THREE.Renderer;\nimport WebGLRenderer = THREE.WebGLRenderer;\nimport Object3D = THREE.Object3D;\nimport { ChartState, IChartState } from \"./State\";\nimport { ChartWidget, IChartWidgetConstructor } from \"./Widget\";\nimport { Utils } from \"./Utils\";\nimport { IScreenTransformOptions } from \"./Screen\";\nimport { AxisWidget } from \"./widgets/AxisWidget\";\nimport { GridWidget } from \"./widgets/GridWidget\";\nimport { TrendsGradientWidget } from \"./widgets/TrendsGradientWidget\";\nimport { TrendsLoadingWidget } from \"./widgets/TrendsLoadingWidget\";\nimport { AxisMarksWidget } from \"./widgets/AxisMarksWidget\";\nimport { BorderWidget } from \"./widgets/BorderWidget\";\nimport { TrendsIndicatorWidget } from \"./widgets/TrendsIndicatorWidget\";\nimport { TrendsLineWidget } from \"./widgets/TrendsLineWidget\";\nimport { TrendsCandlesWidget } from './widgets/TrendsCandleWidget';\nimport { TrendsBeaconWidget } from \"./widgets/TrendsBeaconWidget\";\nimport { ResizeSensor, ResizeSensorType } from './deps';\nimport OrthographicCamera = THREE.OrthographicCamera;\n\n\nexport class Chart {\n\n\tstatic devicePixelRatio = window.devicePixelRatio;\n\tstatic preinstalledWidgets: typeof ChartWidget[] = [];\n\tstatic renderers: {[rendererName: string]: any} = {\n\t\tCanvasRenderer: (THREE as any).CanvasRenderer,\n\t\tWebGLRenderer: THREE.WebGLRenderer\n\t};\n\n\tstate: ChartState;\n\tisStopped: boolean;\n\tisDestroyed: boolean;\n\tprivate $container: Element;\n\tprivate $el: HTMLElement;\n\tprivate renderer: Renderer;\n\tprivate scene: Scene;\n\tprivate camera: PerspectiveCamera;\n\tprivate cameraInitialPosition: Vector3;\n\tprivate widgets: Array<ChartWidget> = [];\n\tprivate stats: Stats;\n\tprivate zoomThrottled: Function;\n\tprivate unsubscribers: Function[];\n\tprivate resizeSensor: ResizeSensorType;\n\tprivate pluginsAndWidgets: Array<ChartPlugin | ChartWidget>;\n\n\tconstructor(state: IChartState, $container: Element, pluginsAndWidgets: Array<ChartPlugin | ChartWidget> = []) {\n\n\t\tif (!THREE || !THREE.REVISION) Utils.error('three.js not found');\n\n\t\tif (!$container) {\n\t\t\tUtils.error('$el must be set');\n\t\t}\n\t\t// calculate chart size\n\t\tlet style = getComputedStyle($container);\n\t\tstate.width = parseInt(style.width);\n\t\tstate.height = parseInt(style.height);\n\n\t\tlet plugins = pluginsAndWidgets.filter(pluginOrWidget => pluginOrWidget instanceof ChartPlugin) as ChartPlugin[];\n\n\t\tthis.state = new ChartState(state, plugins);\n\t\tthis.pluginsAndWidgets = pluginsAndWidgets;\n\t\tthis.zoomThrottled = Utils.throttle((zoomValue: number, origin: number) => this.zoom(zoomValue, origin), 200);\n\t\tthis.$container = $container;\n\t\tthis.init($container);\n\t};\n\n\tstatic installWidget<WidgetClass extends typeof ChartWidget>(Widget: WidgetClass) {\n\t\tif (!Widget.widgetName) Utils.error('unnamed widget');\n\t\tthis.preinstalledWidgets.push(Widget);\n\t}\n\n\tprivate init($container: Element) {\n\t\tvar state = this.state;\n\t\tvar {width: w, height: h, showStats, autoRender} = state.data;\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.isStopped = !autoRender.enabled;\n\n\t\tvar renderer = this.renderer = new (Chart.renderers[this.state.data.renderer] as any)({\n\t\t\tantialias: true,\n\t\t\talpha: true\n\t\t});\n\t\trenderer.setSize(w, h);\n\t\trenderer.setPixelRatio(Chart.devicePixelRatio);\n\t\trenderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n\t\t$container.appendChild(renderer.domElement);\n\t\tthis.$el = renderer.domElement;\n\t\tthis.$el.style.display = 'block';\n\n\t\tif (showStats) {\n\t\t\tthis.stats = new Stats();\n\t\t\t$container.appendChild(this.stats.domElement);\n\t\t}\n\n\t\tthis.setupCamera();\n\t\tthis.initWidgets();\n\t\tthis.bindEvents();\n\t\tthis.renderLoop();\n\t}\n\n\t/**\n\t * collect and init widgets from preinstalled widgets, plugins widgets and custom widgets\n\t */\n\tprivate initWidgets() {\n\t\tlet preinstalledWidgetsClasses = (this.constructor as typeof Chart).preinstalledWidgets;\n\t\tlet customWidgets: ChartWidget[] = [];\n\n\t\tthis.pluginsAndWidgets.forEach(pluginOrWidget => {\n\t\t\tif (pluginOrWidget instanceof ChartWidget) {\n\t\t\t\tcustomWidgets.push(pluginOrWidget);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!(pluginOrWidget instanceof ChartPlugin)) return;\n\t\t\tlet pluginWidgetClasses = (pluginOrWidget.constructor as typeof ChartPlugin).providedWidgets;\n\t\t\tpreinstalledWidgetsClasses.push(...pluginWidgetClasses);\n\t\t});\n\n\t\tthis.widgets = customWidgets.concat(\n\t\t\tpreinstalledWidgetsClasses.map((WidgetClass: IChartWidgetConstructor) => new WidgetClass())\n\t\t);\n\n\t\tthis.widgets.forEach(widget => {\n\t\t\twidget.setupChartState(this.state);\n\t\t\twidget.onReadyHandler();\n\t\t\tthis.scene.add(widget.getObject3D());\n\t\t});\n\t}\n\n\tprivate renderLoop() {\n\t\tif (this.isDestroyed) return;\n\t\tthis.stats && this.stats.begin();\n\t\tthis.render();\n\t\tif (this.isStopped) return;\n\t\tvar fpsLimit = this.state.data.autoRender.fps;\n\n\t\tif (fpsLimit) {\n\t\t\tlet delay = 1000 / fpsLimit;\n\t\t\tsetTimeout(() => requestAnimationFrame(() => this.renderLoop()), delay);\n\t\t} else {\n\t\t\trequestAnimationFrame(() => this.renderLoop());\n\t\t}\n\t\tthis.stats && this.stats.end();\n\t}\n\n\trender() {\n\t\tthis.renderer.render(this.scene, this.camera);\n\t}\n\n\tstop() {\n\t\tthis.isStopped = true;\n\t}\n\n\trun() {\n\t\tthis.isStopped = false;\n\t\tthis.renderLoop();\n\t}\n\n\t/**\n\t * call to destroy chart an init garbage collection\n\t */\n\tdestroy() {\n\t\tthis.isDestroyed = true;\n\t\tthis.stop();\n\t\tthis.state.destroy();\n\t\tthis.unbindEvents();\n\t\t// WARNING! undocumented method for free webgl context\n\t\ttry {\n\t\t\t(this.renderer as any).forceContextLoss();\n\t\t} catch (wtf) {\n\t\t\t// sometimes with many chart instances forceContextLoss not working\n\t\t}\n\t\t(this.renderer as any).context = null;\n\t\tthis.renderer.domElement = null;\n\t\tthis.renderer = null;\n\t}\n\n\tgetState(): IChartState {\n\t\treturn this.state.data\n\t}\n\n\t/**\n\t * shortcut for Chart.state.getTrend\n\t */\n\tgetTrend(trendName: string): Trend {\n\t\treturn this.state.getTrend(trendName);\n\t}\n\n\t/**\n\t * shortcut for Chart.state.setState\n\t */\n\tsetState(state: IChartState) {\n\t\treturn this.state.setState(state);\n\t}\n\n\n\tprivate bindEvents() {\n\t\tvar $el = this.$el;\n\t\tif (this.state.data.controls.enabled) {\n\t\t\t$el.addEventListener('mousewheel', (ev: MouseWheelEvent) => {\n\t\t\t\tthis.onMouseWheel(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('mousemove', (ev: MouseEvent) => {\n\t\t\t\tthis.onMouseMove(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('mousedown', (ev: MouseEvent) => this.onMouseDown(ev));\n\t\t\t$el.addEventListener('mouseup', (ev: MouseEvent) => this.onMouseUp(ev));\n\t\t\t$el.addEventListener('touchmove', (ev: TouchEvent) => {\n\t\t\t\tthis.onTouchMove(ev)\n\t\t\t});\n\t\t\t$el.addEventListener('touchend', (ev: TouchEvent) => {\n\t\t\t\tthis.onTouchEnd(ev)\n\t\t\t});\n\t\t}\n\t\tif (this.state.data.autoResize) {\n\t\t\t// this.resizeSensor = new ResizeSensor(this.$container, () => {\n\t\t\t// \tthis.onChartContainerResizeHandler(this.$container.clientWidth, this.$container.clientHeight);\n\t\t\t// });\n\t\t}\n\n\t\tthis.unsubscribers = [\n\t\t\tthis.state.onTrendsChange(() => this.autoscroll()),\n\t\t\tthis.state.screen.onTransformationFrame((options) => this.onScreenTransformHandler(options)),\n\t\t\tthis.state.onResize((options) => this.onChartResize())\n\t\t];\n\t}\n\n\tprivate unbindEvents() {\n\t\t// TODO: unbind events correctly\n\t\ttry {\n\t\t\tthis.resizeSensor && this.resizeSensor.detach();\n\t\t} catch (e) {\n\t\t\t// ups.. somebody already removed resizeSensor childNode\n\t\t\t// detected in angular2 apps\n\t\t}\n\t\tthis.$el.remove();\n\t\tthis.unsubscribers.forEach(unsubscribe => unsubscribe());\n\t}\n\n\tprivate setupCamera() {\n\t\tlet camSettings = this.state.screen.getCameraSettings();\n\t\tif (!this.camera) {\n\t\t\tthis.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t\t\tthis.scene.add(this.camera);\n\t\t} else {\n\t\t\tthis.camera.fov = camSettings.FOV;\n\t\t\tthis.camera.aspect = camSettings.aspect;\n\t\t\tthis.camera.far = camSettings.far;\n\t\t\tthis.camera.near = camSettings.near;\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t}\n\t\tthis.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t\tthis.cameraInitialPosition = this.camera.position.clone();\n\t\tthis.onScreenTransformHandler(this.state.screen.options);\n\t}\n\n\tprivate onScreenTransformHandler(options: IScreenTransformOptions) {\n\t\tif (options.scrollX != void 0) {\n\t\t\tlet scrollX = this.cameraInitialPosition.x + options.scrollX;\n\t\t\t// scrollX =  Math.round(scrollX); // prevent to set camera beetween pixels\n\t\t\tthis.camera.position.setX(scrollX);\n\t\t}\n\t\tif (options.scrollY != void 0) {\n\t\t\tlet scrollY = this.cameraInitialPosition.y + options.scrollY;\n\t\t\t// scrollY = Math.round(scrollY); // prevent to set camera beetween pixels\n\t\t\tthis.camera.position.setY(scrollY);\n\t\t}\n\t}\n\n\tprivate autoscroll() {\n\t\tvar state = this.state;\n\t\tif (!state.data.autoScroll) return;\n\t\tvar oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n\t\tvar trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n\t\tif (trendsMaxXDelta > 0) {\n\t\t\tvar maxVisibleX = this.state.screen.getScreenRightVal();\n\t\t\tvar paddingRightX = this.state.getPaddingRight();\n\t\t\tvar currentScroll = state.data.xAxis.range.scroll;\n\t\t\tif (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar scrollDelta = trendsMaxXDelta;\n\t\t\tthis.setState({xAxis: {range: {scroll: currentScroll + scrollDelta}}});\n\t\t}\n\t}\n\n\tprivate onScrollStop() {\n\t\t// var tendsXMax = this.state.data.computedData.trends.maxX;\n\t\t// var paddingRightX = this.state.getPaddingRight();\n\t\t// if (tendsXMax < paddingRightX) {\n\t\t// \tthis.state.scrollToEnd();\n\t\t// }\n\t}\n\n\tprivate onMouseDown(ev: MouseEvent) {\n\t\tthis.setState({cursor: {dragMode: true, x: ev.clientX, y: ev.clientY}});\n\t}\n\n\tprivate onMouseUp(ev: MouseEvent) {\n\t\tthis.setState({cursor: {dragMode: false}});\n\t}\n\n\tprivate onMouseMove(ev: MouseEvent) {\n\t\tif (this.state.data.cursor.dragMode) {\n\t\t\tthis.setState({cursor: {dragMode: true, x: ev.clientX, y: ev.clientY}});\n\t\t}\n\t}\n\n\tprivate onMouseWheel(ev: MouseWheelEvent) {\n\t\tev.stopPropagation();\n\t\tev.preventDefault();\n\t\tlet zoomOrigin = ev.layerX / this.state.data.width;\n\t\tlet zoomValue = 1 + ev.wheelDeltaY * 0.001;\n\t\tthis.zoom(zoomValue, zoomOrigin);\n\t}\n\n\tprivate onTouchMove(ev: TouchEvent) {\n\t\tthis.setState({cursor: {dragMode: true, x: ev.touches[0].clientX, y: ev.touches[0].clientY}});\n\t}\n\n\tprivate onTouchEnd(ev: TouchEvent) {\n\t\tthis.setState({cursor: {dragMode: false}});\n\t}\n\n\tprivate onChartContainerResizeHandler(width: number, height: number) {\n\t\tthis.setState({width, height});\n\t}\n\n\tprivate onChartResize() {\n\t\tlet {width, height} = this.state.data;\n\t\tthis.renderer.setSize(width, height);\n\t\tthis.setupCamera();\n\t}\n\n\tprivate zoom(zoomValue: number, zoomOrigin: number) {\n\t\tconst MAX_ZOOM_VALUE = 1.5;\n\t\tconst MIN_ZOOM_VALUE = 0.7;\n\t\tzoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t\tzoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t\tlet autoScrollIsEnabled = this.state.data.autoScroll;\n\t\tif (autoScrollIsEnabled) this.state.setState({autoScroll: false});\n\t\tthis.state.zoom(zoomValue, zoomOrigin).then(() => {\n\t\t\tif (autoScrollIsEnabled) this.setState({autoScroll: true});\n\t\t});\n\t}\n\n\n}\n\n// install built-in widgets\nChart.installWidget(TrendsLineWidget);\nChart.installWidget(TrendsCandlesWidget);\nChart.installWidget(AxisWidget);\nChart.installWidget(GridWidget);\nChart.installWidget(TrendsGradientWidget);\n\n\n/** WEBPACK FOOTER **\n ** ./src/Chart.ts\n **/","import { ChartState, IChartState } from \"./State\";\nimport { Utils } from './Utils';\nimport { EventEmitter } from './EventEmmiter';\nimport { ChartWidget } from './Widget';\n\nexport interface IChartPluginState {\n}\n\nexport interface IChartPluginConfig {\n\tinstallPluginWidgets?: boolean;\n}\n\nexport const DEFAULT_CONFIG: IChartPluginConfig = {\n\tinstallPluginWidgets: true\n};\n\n/**\n * base class for all plugins\n * NAME is mandatory\n */\nexport abstract class ChartPlugin {\n\tstatic NAME: string = '';\n\tstatic providedWidgets: typeof ChartWidget[] = [];\n\n\tinitialState: IChartPluginState;\n\tconfig: IChartPluginConfig;\n\tname: string;\n\tprotected chartState: ChartState;\n\tprotected unsubscribers: Function[] = [];\n\tprotected ee: EventEmitter;\n\n\tconstructor (options?: IChartPluginState, config: IChartPluginConfig = {}) {\n\t\tthis.initialState = options;\n\t\tthis.config = Utils.deepMerge(DEFAULT_CONFIG, config);\n\t\tthis.name = (this.constructor as typeof ChartPlugin).NAME;\n\t\tif (!this.name) Utils.error('Unnamed plugin detected');\n\t}\n\n\tsetupChartState(chartState: ChartState) {\n\t\tthis.chartState = chartState;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.bindEvent(\n\t\t\tthis.chartState.onInitialStateApplied(initialState => this.onInitialStateAppliedHandler(initialState)),\n\t\t\tthis.chartState.onReady(() => this.onReadyHandler()),\n\t\t\tthis.chartState.onDestroy(() => this.onDestroyHandler()),\n\t\t\tthis.chartState.onPluginsStateChange(changedPluginsStates => changedPluginsStates[this.name] && this.onStateChanged(changedPluginsStates[this.name]))\n\t\t)\n\t}\n\n\tgetOptions(): IChartPluginState {\n\t\treturn this.chartState.data.pluginsState[this.name];\n\t}\n\n\tprotected onInitialStateAppliedHandler(initialState: IChartState) {\n\t}\n\n\tprotected onReadyHandler() {\n\t}\n\n\tprotected onStateChanged(changedState: IChartPluginState) {\n\t}\n\n\tprotected onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t}\n\n\tprotected bindEvent(...args: Array<Function | Function[]>): void {\n\t\tlet unsubscribers: Function[] = [];\n\t\tif (!Array.isArray(args[0])) {\n\t\t\tunsubscribers.push(args[0] as Function);\n\t\t} else {\n\t\t\tunsubscribers.push(...args as Function[]);\n\t\t}\n\t\tthis.unsubscribers.push(...unsubscribers);\n\t}\n\n\n\tprotected unbindEvents() {\n\t\tthis.unsubscribers.forEach(unsubscriber => unsubscriber());\n\t\tthis.unsubscribers.length = 0;\n\t}\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Plugin.ts\n **/","import Texture = THREE.Texture;\nimport Color = THREE.Color;\nimport { TIteralable, IIteralable } from \"./interfaces\";\nimport { isPlainObject } from './deps/deps';\n\nfunction deepmerge(target: any, src: any, mergeArrays = true) {\n\tvar array = Array.isArray(src);\n\tvar dst: any = array && [] || {};\n\n\tif (array) {\n\t\ttarget = target || [];\n\t\tif (mergeArrays) {\n\t\t\tdst = dst.concat(target);\n\t\t}\n\t\tsrc.forEach(function(e: any, i: any) {\n\t\t\tif (typeof dst[i] === 'undefined') {\n\t\t\t\tdst[i] = e;\n\t\t\t} else if (typeof e === 'object') {\n\t\t\t\tdst[i] = deepmerge(target[i], e, mergeArrays);\n\t\t\t} else {\n\t\t\t\tif (target.indexOf(e) === -1) {\n\t\t\t\t\tdst.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else {\n\t\tif (target && typeof target === 'object') {\n\t\t\tObject.keys(target).forEach(function (key) {\n\t\t\t\tdst[key] = target[key];\n\t\t\t})\n\t\t}\n\t\tObject.keys(src).forEach(function (key) {\n\t\t\tif (typeof src[key] !== 'object' || !src[key]) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t} else {\n\t\t\t\t\tdst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn dst;\n}\n\n\n\nexport declare type TUid = number;\n\n/**\n * project utils static class\n */\nexport class Utils {\n\n\tprivate static currentId: TUid = 1;\n\n\t/**\n\t * deepMerge based on https://www.npmjs.com/package/deepmerge\n\t */\n\tstatic deepMerge<T> (obj1: T, obj2: T, mergeArrays?: boolean) {\n\t\treturn deepmerge(obj1, obj2, mergeArrays) as T;\n\t}\n\n\t/**\n\t * deepCopy based on JSON.stringify function\n\t * @deprecated\n\t */\n\tstatic deepCopy<T> (obj: T) {\n\t\t// TODO: use deepMerge function to copy\n\t\treturn JSON.parse(JSON.stringify(obj)) as T;\n\t}\n\n\t/**\n\t *\n\t * @example\n\t * // returns \"000015\"\n\t * Utils.toFixed(15, 6);\n\t */\n\tstatic toFixed(num: number, digitsCount: number): string {\n\t\tvar maxDigits = 15;\n\t\tvar result = '';\n\t\tvar intVal = Math.floor(num);\n\t\tvar intStr = intVal.toString();\n\t\tvar lengthDiff = digitsCount - intStr.length;\n\t\tif (lengthDiff > 0 ) {\n\t\t\tresult = (<any>'0').repeat(lengthDiff) + intStr;\n\t\t} else {\n\t\t\tresult = intStr;\n\t\t}\n\t\tvar afterPointDigitsCount = maxDigits - intStr.length;\n\t\tvar afterPointStr = num.toString().split('.')[1];\n\t\tif (afterPointStr) {\n\t\t\tresult += '.' + afterPointStr.substr(0, afterPointDigitsCount);\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic bindEvent() {\n\n\t}\n\n\t/**\n\t * generate texture from canvas context\n\t * @example\n\t * \t// create texture with rect\n\t *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\n\t */\n\tstatic createTexture(width: number, height: number, fn: (ctx: CanvasRenderingContext2D) => void ): Texture {\n\t\tvar canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\tvar ctx = canvas.getContext('2d');\n\t\tfn(ctx);\n\t\tvar texture = new THREE.Texture(canvas);\n\t\ttexture.needsUpdate = true;\n\t\treturn texture;\n\t}\n\n\t/**\n\t * generate texture from canvas context with NearestFilter\n\t * @example\n\t * \t// create texture with rect\n\t *  var texture = Utils.createTexture(20, 20, (ctx) => {ctx.fillRect(0, 0, 10, 10)});\n\t */\n\tstatic createPixelPerfectTexture(width: number, height: number, fn: (ctx: CanvasRenderingContext2D) => void ): Texture{\n\t\tvar texture = this.createTexture(width, height, fn);\n\t\t// texture.magFilter = THREE.NearestFilter;\n\t\ttexture.minFilter = THREE.NearestFilter;\n\t\treturn texture;\n\t}\n\n\t/**\n\t * throw error\n\t */\n\tstatic error(msg: string) {\n\t\tconsole.error('Chart error: ' + msg);\n\t\tthrow 'Chart: ' + msg;\n\t}\n\n\t/**\n\t * throw error\n\t */\n\tstatic warn(msg: string) {\n\t\tconsole.warn('Chart warning: ' + msg);\n\t}\n\n\t/**\n\t * @returns new unique id\n\t */\n\tstatic getUid(): TUid {\n\t\treturn this.currentId++;\n\t}\n\n\t/**\n\t * @returns distance between numbers\n\t */\n\tstatic getDistance(num1: number, num2: number) {\n\t\treturn Math.max(num1, num2) - Math.min(num1, num2);\n\t}\n\n\tstatic binarySearchClosestInd(arr: IIteralable[], num: number, key: string): number {\n\t\tvar mid: number;\n\t\tvar lo = 0;\n\t\tvar hi = arr.length - 1;\n\t\twhile (hi - lo > 1) {\n\t\t\tmid = Math.floor ((lo + hi) / 2);\n\t\t\tif (arr[mid][key] < num) {\n\t\t\t\tlo = mid;\n\t\t\t} else {\n\t\t\t\thi = mid;\n\t\t\t}\n\t\t}\n\t\tif (num - arr[lo][key] <= arr[hi][key] - num) {\n\t\t\treturn lo;\n\t\t}\n\t\treturn hi;\n\t}\n\t\n\tstatic binarySearchClosest<ArrayItem>(arr: ArrayItem[], num: number, key: string): ArrayItem {\n\t\tlet ind = this.binarySearchClosestInd(arr, num, key);\n\t\treturn arr[ind];\n\t}\n\n\n\tstatic rectsIntersect(r1: number[], r2: number[]) {\n\t\tlet [left1, top1, width1, height1] = r1;\n\t\tlet [left2, top2, width2, height2] = r2;\n\t\tlet [right1, right2, bottom1, bottom2] = [left1 + width1, left2 + width2, top1 + height1, top2 + height2];\n\t\treturn !(left2 > right1 ||\n\t\t\tright2 < left1 ||\n\t\t\ttop2 > bottom1 ||\n\t\t\tbottom2 < top1\n\t\t);\n\t}\n\n\n\tstatic throttle(func: Function, ms: number) {\n\n\t\tvar isThrottled = false,\n\t\t\tsavedArgs: any,\n\t\t\tsavedThis: any;\n\n\t\tfunction wrapper() {\n\n\t\t\tif (isThrottled) { // (2)\n\t\t\t\tsavedArgs = arguments;\n\t\t\t\tsavedThis = this;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunc.apply(this, arguments); // (1)\n\n\t\t\tisThrottled = true;\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tisThrottled = false; // (3)\n\t\t\t\tif (savedArgs) {\n\t\t\t\t\twrapper.apply(savedThis, savedArgs);\n\t\t\t\t\tsavedArgs = savedThis = null;\n\t\t\t\t}\n\t\t\t}, ms);\n\t\t}\n\n\t\treturn wrapper;\n\t}\n\n\tstatic msToTimeString(timestamp: number) {\n\t\tvar h = Math.floor(timestamp / 360000);\n\t\tvar m =  Math.floor(timestamp / 60000);\n\t\tvar s =  Math.floor(timestamp / 1000);\n\t\treturn h + ':' + m + ':' + s;\n\t}\n\t\n\tstatic getRandomItem<T>(arr: Array<T>): T {\n\t\tvar ind = Math.floor(Math.random() * arr.length);\n\t\treturn arr[ind];\n\t}\n\n\tstatic copyProps(srcObject: TIteralable, dstObject: TIteralable, props: TIteralable, excludeProps: string[] = []) {\n\t\tfor (var key in props) {\n\t\t\tif (excludeProps.indexOf(key) !== -1) continue;\n\t\t\tif (srcObject[key] == void 0) continue;\n\t\t\tif (isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t\t\t\tthis.copyProps(srcObject[key], dstObject[key], props[key])\n\t\t\t} else {\n\t\t\t\tdstObject[key] = this.deepCopy(srcObject[key]);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Utils.ts\n **/","/// <reference path=\"./ResizeSensor.ts\" />\n\n// TODO: think about different bundles\n\nimport { ResizeSensorType } from './ResizeSensor';\n(<any>window).TweenLite = TweenMax;\n(<any>window).Stats = require('three/examples/js/libs/stats.min');\n\n//require('gsap/src/uncompressed/easing/EasePack.js');\nrequire('three/examples/js/renderers/CanvasRenderer.js');\nrequire('three/examples/js/renderers/Projector.js');\nexport const isPlainObject = require('is-plain-object') as Function;\nexport const EE2 = require('EventEmitter2') as typeof EventEmitter2;\n\n\nexport { Promise } from '../polyfills/es6-promise';\n\nexport * from './ResizeSensor';\nexport const ResizeSensor = require('css-element-queries/src/ResizeSensor') as ResizeSensorType;\n\n\n/** WEBPACK FOOTER **\n ** ./src/deps/deps.ts\n **/","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function h(a){c.appendChild(a.dom);return a}function k(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();k(++l%c.children.length)},!1);var g=(performance||Date).now(),e=g,a=0,r=h(new Stats.Panel(\"FPS\",\"#0ff\",\"#002\")),f=h(new Stats.Panel(\"MS\",\"#0f0\",\"#020\"));\nif(self.performance&&self.performance.memory)var t=h(new Stats.Panel(\"MB\",\"#f08\",\"#201\"));k(0);return{REVISION:16,dom:c,addPanel:h,showPanel:k,begin:function(){g=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();f.update(c-g,200);if(c>e+1E3&&(r.update(1E3*a/(c-e),100),e=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){g=this.end()},domElement:c,setMode:k}};\nStats.Panel=function(h,k,l){var c=Infinity,g=0,e=Math.round,a=e(window.devicePixelRatio||1),r=80*a,f=48*a,t=3*a,u=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=f;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,f);b.fillStyle=k;b.fillText(h,t,u);b.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(f,\nv){c=Math.min(c,f);g=Math.max(g,f);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=k;b.fillText(e(f)+\" \"+h+\" (\"+e(c)+\"-\"+e(g)+\")\",t,u);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,e((1-f/v)*p))}}};\"object\"===typeof module&&(module.exports=Stats);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/libs/stats.min.js\n ** module id = 6\n ** module chunks = 0 1\n **/","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.SpriteCanvasMaterial = function ( parameters ) {\n\n\tTHREE.Material.call( this );\n\n\tthis.type = 'SpriteCanvasMaterial';\n\n\tthis.color = new THREE.Color( 0xffffff );\n\tthis.program = function ( context, color ) {};\n\n\tthis.setValues( parameters );\n\n};\n\nTHREE.SpriteCanvasMaterial.prototype = Object.create( THREE.Material.prototype );\nTHREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\nTHREE.SpriteCanvasMaterial.prototype.clone = function () {\n\n\tvar material = new THREE.SpriteCanvasMaterial();\n\n\tmaterial.copy( this );\n\tmaterial.color.copy( this.color );\n\tmaterial.program = this.program;\n\n\treturn material;\n\n};\n\n//\n\nTHREE.CanvasRenderer = function ( parameters ) {\n\n\tconsole.log( 'THREE.CanvasRenderer', THREE.REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _this = this,\n\t_renderData, _elements, _lights,\n\t_projector = new THREE.Projector(),\n\n\t_canvas = parameters.canvas !== undefined\n\t\t\t ? parameters.canvas\n\t\t\t : document.createElement( 'canvas' ),\n\n\t_canvasWidth = _canvas.width,\n\t_canvasHeight = _canvas.height,\n\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 ),\n\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 ),\n\n\t_viewportX = 0,\n\t_viewportY = 0,\n\t_viewportWidth = _canvasWidth,\n\t_viewportHeight = _canvasHeight,\n\n\t_pixelRatio = 1,\n\n\t_context = _canvas.getContext( '2d', {\n\t\talpha: parameters.alpha === true\n\t} ),\n\n\t_clearColor = new THREE.Color( 0x000000 ),\n\t_clearAlpha = parameters.alpha === true ? 0 : 1,\n\n\t_contextGlobalAlpha = 1,\n\t_contextGlobalCompositeOperation = 0,\n\t_contextStrokeStyle = null,\n\t_contextFillStyle = null,\n\t_contextLineWidth = null,\n\t_contextLineCap = null,\n\t_contextLineJoin = null,\n\t_contextLineDash = [],\n\n\t_camera,\n\n\t_v1, _v2, _v3, _v4,\n\t_v5 = new THREE.RenderableVertex(),\n\t_v6 = new THREE.RenderableVertex(),\n\n\t_v1x, _v1y, _v2x, _v2y, _v3x, _v3y,\n\t_v4x, _v4y, _v5x, _v5y, _v6x, _v6y,\n\n\t_color = new THREE.Color(),\n\t_color1 = new THREE.Color(),\n\t_color2 = new THREE.Color(),\n\t_color3 = new THREE.Color(),\n\t_color4 = new THREE.Color(),\n\n\t_diffuseColor = new THREE.Color(),\n\t_emissiveColor = new THREE.Color(),\n\n\t_lightColor = new THREE.Color(),\n\n\t_patterns = {},\n\n\t_image, _uvs,\n\t_uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y,\n\n\t_clipBox = new THREE.Box2(),\n\t_clearBox = new THREE.Box2(),\n\t_elemBox = new THREE.Box2(),\n\n\t_ambientLight = new THREE.Color(),\n\t_directionalLights = new THREE.Color(),\n\t_pointLights = new THREE.Color(),\n\n\t_vector3 = new THREE.Vector3(), // Needed for PointLight\n\t_centroid = new THREE.Vector3(),\n\t_normal = new THREE.Vector3(),\n\t_normalViewMatrix = new THREE.Matrix3();\n\n\t/* TODO\n\t_canvas.mozImageSmoothingEnabled = false;\n\t_canvas.webkitImageSmoothingEnabled = false;\n\t_canvas.msImageSmoothingEnabled = false;\n\t_canvas.imageSmoothingEnabled = false;\n\t*/\n\n\t// dash+gap fallbacks for Firefox and everything else\n\n\tif ( _context.setLineDash === undefined ) {\n\n\t\t_context.setLineDash = function () {};\n\n\t}\n\n\tthis.domElement = _canvas;\n\n\tthis.autoClear = true;\n\tthis.sortObjects = true;\n\tthis.sortElements = true;\n\n\tthis.info = {\n\n\t\trender: {\n\n\t\t\tvertices: 0,\n\t\t\tfaces: 0\n\n\t\t}\n\n\t};\n\n\t// WebGLRenderer compatibility\n\n\tthis.supportsVertexTextures = function () {};\n\tthis.setFaceCulling = function () {};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _context;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _context.getContextAttributes();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value !== undefined ) _pixelRatio = value;\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t_canvasWidth = width * _pixelRatio;\n\t\t_canvasHeight = height * _pixelRatio;\n\n\t\t_canvas.width = _canvasWidth;\n\t\t_canvas.height = _canvasHeight;\n\n\t\t_canvasWidthHalf = Math.floor( _canvasWidth / 2 );\n\t\t_canvasHeightHalf = Math.floor( _canvasHeight / 2 );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\t_clipBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clipBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t\t_contextGlobalAlpha = 1;\n\t\t_contextGlobalCompositeOperation = 0;\n\t\t_contextStrokeStyle = null;\n\t\t_contextFillStyle = null;\n\t\t_contextLineWidth = null;\n\t\t_contextLineCap = null;\n\t\t_contextLineJoin = null;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewportX = x * _pixelRatio;\n\t\t_viewportY = y * _pixelRatio;\n\n\t\t_viewportWidth = width * _pixelRatio;\n\t\t_viewportHeight = height * _pixelRatio;\n\n\t};\n\n\tthis.setScissor = function () {};\n\tthis.setScissorTest = function () {};\n\n\tthis.setClearColor = function ( color, alpha ) {\n\n\t\t_clearColor.set( color );\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n\t\t_clearBox.min.set( - _canvasWidthHalf, - _canvasHeightHalf );\n\t\t_clearBox.max.set(   _canvasWidthHalf,   _canvasHeightHalf );\n\n\t};\n\n\tthis.setClearColorHex = function ( hex, alpha ) {\n\n\t\tconsole.warn( 'THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.' );\n\t\tthis.setClearColor( hex, alpha );\n\n\t};\n\n\tthis.getClearColor = function () {\n\n\t\treturn _clearColor;\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn _clearAlpha;\n\n\t};\n\n\tthis.getMaxAnisotropy = function () {\n\n\t\treturn 0;\n\n\t};\n\n\tthis.clear = function () {\n\n\t\tif ( _clearBox.isEmpty() === false ) {\n\n\t\t\t_clearBox.intersect( _clipBox );\n\t\t\t_clearBox.expandByScalar( 2 );\n\n\t\t\t_clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t\t\t_clearBox.min.y =  - _clearBox.min.y + _canvasHeightHalf;\t\t// higher y value !\n\t\t\t_clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t\t\t_clearBox.max.y =  - _clearBox.max.y + _canvasHeightHalf;\t\t// lower y value !\n\n\t\t\tif ( _clearAlpha < 1 ) {\n\n\t\t\t\t_context.clearRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( _clearAlpha > 0 ) {\n\n\t\t\t\tsetBlending( THREE.NormalBlending );\n\t\t\t\tsetOpacity( 1 );\n\n\t\t\t\tsetFillStyle( 'rgba(' + Math.floor( _clearColor.r * 255 ) + ',' + Math.floor( _clearColor.g * 255 ) + ',' + Math.floor( _clearColor.b * 255 ) + ',' + _clearAlpha + ')' );\n\n\t\t\t\t_context.fillRect(\n\t\t\t\t\t_clearBox.min.x | 0,\n\t\t\t\t\t_clearBox.max.y | 0,\n\t\t\t\t\t( _clearBox.max.x - _clearBox.min.x ) | 0,\n\t\t\t\t\t( _clearBox.min.y - _clearBox.max.y ) | 0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\t_clearBox.makeEmpty();\n\n\t\t}\n\n\t};\n\n\t// compatibility\n\n\tthis.clearColor = function () {};\n\tthis.clearDepth = function () {};\n\tthis.clearStencil = function () {};\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera instanceof THREE.Camera === false ) {\n\n\t\t\tconsole.error( 'THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.autoClear === true ) this.clear();\n\n\t\t_this.info.render.vertices = 0;\n\t\t_this.info.render.faces = 0;\n\n\t\t_context.setTransform( _viewportWidth / _canvasWidth, 0, 0, - _viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY );\n\t\t_context.translate( _canvasWidthHalf, _canvasHeightHalf );\n\n\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t_elements = _renderData.elements;\n\t\t_lights = _renderData.lights;\n\t\t_camera = camera;\n\n\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t/* DEBUG\n\t\tsetFillStyle( 'rgba( 0, 255, 255, 0.5 )' );\n\t\t_context.fillRect( _clipBox.min.x, _clipBox.min.y, _clipBox.max.x - _clipBox.min.x, _clipBox.max.y - _clipBox.min.y );\n\t\t*/\n\n\t\tcalculateLights();\n\n\t\tfor ( var e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\tvar element = _elements[ e ];\n\n\t\t\tvar material = element.material;\n\n\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t_elemBox.makeEmpty();\n\n\t\t\tif ( element instanceof THREE.RenderableSprite ) {\n\n\t\t\t\t_v1 = element;\n\t\t\t\t_v1.x *= _canvasWidthHalf; _v1.y *= _canvasHeightHalf;\n\n\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t} else if ( element instanceof THREE.RenderableLine ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderLine( _v1, _v2, element, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( element instanceof THREE.RenderableFace ) {\n\n\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t_v1.positionScreen.x *= _canvasWidthHalf; _v1.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v2.positionScreen.x *= _canvasWidthHalf; _v2.positionScreen.y *= _canvasHeightHalf;\n\t\t\t\t_v3.positionScreen.x *= _canvasWidthHalf; _v3.positionScreen.y *= _canvasHeightHalf;\n\n\t\t\t\tif ( material.overdraw > 0 ) {\n\n\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, material.overdraw );\n\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, material.overdraw );\n\n\t\t\t\t}\n\n\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t_v3.positionScreen\n\t\t\t\t] );\n\n\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\trenderFace3( _v1, _v2, _v3, 0, 1, 2, element, material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* DEBUG\n\t\t\tsetLineWidth( 1 );\n\t\t\tsetStrokeStyle( 'rgba( 0, 255, 0, 0.5 )' );\n\t\t\t_context.strokeRect( _elemBox.min.x, _elemBox.min.y, _elemBox.max.x - _elemBox.min.x, _elemBox.max.y - _elemBox.min.y );\n\t\t\t*/\n\n\t\t\t_clearBox.union( _elemBox );\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetLineWidth( 1 );\n\t\tsetStrokeStyle( 'rgba( 255, 0, 0, 0.5 )' );\n\t\t_context.strokeRect( _clearBox.min.x, _clearBox.min.y, _clearBox.max.x - _clearBox.min.x, _clearBox.max.y - _clearBox.min.y );\n\t\t*/\n\n\t\t_context.setTransform( 1, 0, 0, 1, 0, 0 );\n\n\t};\n\n\t//\n\n\tfunction calculateLights() {\n\n\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\t\t\tvar lightColor = light.color;\n\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\n\n\t\t\t\t_ambientLight.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_directionalLights.add( lightColor );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\t// for sprites\n\n\t\t\t\t_pointLights.add( lightColor );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction calculateLight( position, normal, color ) {\n\n\t\tfor ( var l = 0, ll = _lights.length; l < ll; l ++ ) {\n\n\t\t\tvar light = _lights[ l ];\n\n\t\t\t_lightColor.copy( light.color );\n\n\t\t\tif ( light instanceof THREE.DirectionalLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\tvar amount = normal.dot( lightPosition );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\n\n\t\t\t\tvar lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tvar amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\tamount *= light.intensity;\n\n\t\t\t\tcolor.add( _lightColor.multiplyScalar( amount ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderSprite( v1, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\tvar scaleX = element.scale.x * _canvasWidthHalf;\n\t\tvar scaleY = element.scale.y * _canvasHeightHalf;\n\n\t\tvar dist = 0.5 * Math.sqrt( scaleX * scaleX + scaleY * scaleY ); // allow for rotated sprite\n\t\t_elemBox.min.set( v1.x - dist, v1.y - dist );\n\t\t_elemBox.max.set( v1.x + dist, v1.y + dist );\n\n\t\tif ( material instanceof THREE.SpriteMaterial ) {\n\n\t\t\tvar texture = material.map;\n\n\t\t\tif ( texture !== null ) {\n\n\t\t\t\tvar pattern = _patterns[ texture.id ];\n\n\t\t\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\t\t\tpattern = textureToPattern( texture );\n\t\t\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t\t\t\tvar bitmap = texture.image;\n\n\t\t\t\t\tvar ox = bitmap.width * texture.offset.x;\n\t\t\t\t\tvar oy = bitmap.height * texture.offset.y;\n\n\t\t\t\t\tvar sx = bitmap.width * texture.repeat.x;\n\t\t\t\t\tvar sy = bitmap.height * texture.repeat.y;\n\n\t\t\t\t\tvar cx = scaleX / sx;\n\t\t\t\t\tvar cy = scaleY / sy;\n\n\t\t\t\t\t_context.save();\n\t\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t\t_context.translate( - scaleX / 2, - scaleY / 2 );\n\t\t\t\t\t_context.scale( cx, cy );\n\t\t\t\t\t_context.translate( - ox, - oy );\n\t\t\t\t\t_context.fillRect( ox, oy, sx, sy );\n\t\t\t\t\t_context.restore();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// no texture\n\n\t\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t\t_context.save();\n\t\t\t\t_context.translate( v1.x, v1.y );\n\t\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t\t_context.scale( scaleX, - scaleY );\n\t\t\t\t_context.fillRect( - 0.5, - 0.5, 1, 1 );\n\t\t\t\t_context.restore();\n\n\t\t\t}\n\n\t\t} else if ( material instanceof THREE.SpriteCanvasMaterial ) {\n\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetFillStyle( material.color.getStyle() );\n\n\t\t\t_context.save();\n\t\t\t_context.translate( v1.x, v1.y );\n\t\t\tif ( material.rotation !== 0 ) _context.rotate( material.rotation );\n\t\t\t_context.scale( scaleX, scaleY );\n\n\t\t\tmaterial.program( _context );\n\n\t\t\t_context.restore();\n\n\t\t}\n\n\t\t/* DEBUG\n\t\tsetStrokeStyle( 'rgb(255,255,0)' );\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.x - 10, v1.y );\n\t\t_context.lineTo( v1.x + 10, v1.y );\n\t\t_context.moveTo( v1.x, v1.y - 10 );\n\t\t_context.lineTo( v1.x, v1.y + 10 );\n\t\t_context.stroke();\n\t\t*/\n\n\t}\n\n\tfunction renderLine( v1, v2, element, material ) {\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( v1.positionScreen.x, v1.positionScreen.y );\n\t\t_context.lineTo( v2.positionScreen.x, v2.positionScreen.y );\n\n\t\tif ( material instanceof THREE.LineBasicMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\n\t\t\tif ( material.vertexColors !== THREE.VertexColors ) {\n\n\t\t\t\tsetStrokeStyle( material.color.getStyle() );\n\n\t\t\t} else {\n\n\t\t\t\tvar colorStyle1 = element.vertexColors[ 0 ].getStyle();\n\t\t\t\tvar colorStyle2 = element.vertexColors[ 1 ].getStyle();\n\n\t\t\t\tif ( colorStyle1 === colorStyle2 ) {\n\n\t\t\t\t\tsetStrokeStyle( colorStyle1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tvar grad = _context.createLinearGradient(\n\t\t\t\t\t\t\tv1.positionScreen.x,\n\t\t\t\t\t\t\tv1.positionScreen.y,\n\t\t\t\t\t\t\tv2.positionScreen.x,\n\t\t\t\t\t\t\tv2.positionScreen.y\n\t\t\t\t\t\t);\n\t\t\t\t\t\tgrad.addColorStop( 0, colorStyle1 );\n\t\t\t\t\t\tgrad.addColorStop( 1, colorStyle2 );\n\n\t\t\t\t\t} catch ( exception ) {\n\n\t\t\t\t\t\tgrad = colorStyle1;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tsetStrokeStyle( grad );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_context.stroke();\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\n\n\t\t\tsetLineWidth( material.linewidth );\n\t\t\tsetLineCap( material.linecap );\n\t\t\tsetLineJoin( material.linejoin );\n\t\t\tsetStrokeStyle( material.color.getStyle() );\n\t\t\tsetLineDash( [ material.dashSize, material.gapSize ] );\n\n\t\t\t_context.stroke();\n\n\t\t\t_elemBox.expandByScalar( material.linewidth * 2 );\n\n\t\t\tsetLineDash( [] );\n\n\t\t}\n\n\t}\n\n\tfunction renderFace3( v1, v2, v3, uv1, uv2, uv3, element, material ) {\n\n\t\t_this.info.render.vertices += 3;\n\t\t_this.info.render.faces ++;\n\n\t\tsetOpacity( material.opacity );\n\t\tsetBlending( material.blending );\n\n\t\t_v1x = v1.positionScreen.x; _v1y = v1.positionScreen.y;\n\t\t_v2x = v2.positionScreen.x; _v2y = v2.positionScreen.y;\n\t\t_v3x = v3.positionScreen.x; _v3y = v3.positionScreen.y;\n\n\t\tdrawTriangle( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y );\n\n\t\tif ( ( material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial ) && material.map === null ) {\n\n\t\t\t_diffuseColor.copy( material.color );\n\t\t\t_emissiveColor.copy( material.emissive );\n\n\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t}\n\n\t\t\t_color.copy( _ambientLight );\n\n\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\tcalculateLight( _centroid, element.normalModel, _color );\n\n\t\t\t_color.multiply( _diffuseColor ).add( _emissiveColor );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else if ( material instanceof THREE.MeshBasicMaterial ||\n\t\t\t\t    material instanceof THREE.MeshLambertMaterial ||\n\t\t\t\t    material instanceof THREE.MeshPhongMaterial ) {\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tvar mapping = material.map.mapping;\n\n\t\t\t\tif ( mapping === THREE.UVMapping ) {\n\n\t\t\t\t\t_uvs = element.uvs;\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[ uv1 ].x, _uvs[ uv1 ].y, _uvs[ uv2 ].x, _uvs[ uv2 ].y, _uvs[ uv3 ].x, _uvs[ uv3 ].y, material.map );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.envMap !== null ) {\n\n\t\t\t\tif ( material.envMap.mapping === THREE.SphericalReflectionMapping ) {\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv1 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv1x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv1y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv2 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv2x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv2y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\t_normal.copy( element.vertexNormalsModel[ uv3 ] ).applyMatrix3( _normalViewMatrix );\n\t\t\t\t\t_uv3x = 0.5 * _normal.x + 0.5;\n\t\t\t\t\t_uv3y = 0.5 * _normal.y + 0.5;\n\n\t\t\t\t\tpatternPath( _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors === THREE.FaceColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.wireframe === true\n\t\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t\t : fillPath( _color );\n\n\t\t\t}\n\n\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\n\n\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix );\n\n\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t} else {\n\n\t\t\t_color.setRGB( 1, 1, 1 );\n\n\t\t\tmaterial.wireframe === true\n\t\t\t\t ? strokePath( _color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin )\n\t\t\t\t : fillPath( _color );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction drawTriangle( x0, y0, x1, y1, x2, y2 ) {\n\n\t\t_context.beginPath();\n\t\t_context.moveTo( x0, y0 );\n\t\t_context.lineTo( x1, y1 );\n\t\t_context.lineTo( x2, y2 );\n\t\t_context.closePath();\n\n\t}\n\n\tfunction strokePath( color, linewidth, linecap, linejoin ) {\n\n\t\tsetLineWidth( linewidth );\n\t\tsetLineCap( linecap );\n\t\tsetLineJoin( linejoin );\n\t\tsetStrokeStyle( color.getStyle() );\n\n\t\t_context.stroke();\n\n\t\t_elemBox.expandByScalar( linewidth * 2 );\n\n\t}\n\n\tfunction fillPath( color ) {\n\n\t\tsetFillStyle( color.getStyle() );\n\t\t_context.fill();\n\n\t}\n\n\tfunction textureToPattern( texture ) {\n\n\t\tif ( texture.version === 0 ||\n\t\t\ttexture instanceof THREE.CompressedTexture ||\n\t\t\ttexture instanceof THREE.DataTexture ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: texture.version\n\t\t\t};\n\n\t\t}\n\n\t\tvar image = texture.image;\n\n\t\tif ( image.complete === false ) {\n\n\t\t\treturn {\n\t\t\t\tcanvas: undefined,\n\t\t\t\tversion: 0\n\t\t\t};\n\n\t\t}\n\n\t\tvar canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.setTransform( 1, 0, 0, - 1, 0, image.height );\n\t\tcontext.drawImage( image, 0, 0 );\n\n\t\tvar repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t\tvar repeatY = texture.wrapT === THREE.RepeatWrapping;\n\n\t\tvar repeat = 'no-repeat';\n\n\t\tif ( repeatX === true && repeatY === true ) {\n\n\t\t\trepeat = 'repeat';\n\n\t\t} else if ( repeatX === true ) {\n\n\t\t\trepeat = 'repeat-x';\n\n\t\t} else if ( repeatY === true ) {\n\n\t\t\trepeat = 'repeat-y';\n\n\t\t}\n\n\t\tvar pattern = _context.createPattern( canvas, repeat );\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\treturn {\n\t\t\tcanvas: pattern,\n\t\t\tversion: texture.version\n\t\t};\n\n\t}\n\n\tfunction patternPath( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture ) {\n\n\t\tvar pattern = _patterns[ texture.id ];\n\n\t\tif ( pattern === undefined || pattern.version !== texture.version ) {\n\n\t\t\tpattern = textureToPattern( texture );\n\t\t\t_patterns[ texture.id ] = pattern;\n\n\t\t}\n\n\t\tif ( pattern.canvas !== undefined ) {\n\n\t\t\tsetFillStyle( pattern.canvas );\n\n\t\t} else {\n\n\t\t\tsetFillStyle( 'rgba( 0, 0, 0, 1)' );\n\t\t\t_context.fill();\n\t\t\treturn;\n\n\t\t}\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\toffsetX = texture.offset.x / texture.repeat.x,\n\t\toffsetY = texture.offset.y / texture.repeat.y,\n\t\twidth = texture.image.width * texture.repeat.x,\n\t\theight = texture.image.height * texture.repeat.y;\n\n\t\tu0 = ( u0 + offsetX ) * width;\n\t\tv0 = ( v0 + offsetY ) * height;\n\n\t\tu1 = ( u1 + offsetX ) * width;\n\t\tv1 = ( v1 + offsetY ) * height;\n\n\t\tu2 = ( u2 + offsetX ) * width;\n\t\tv2 = ( v2 + offsetY ) * height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.fill();\n\t\t_context.restore();\n\n\t}\n\n\tfunction clipImage( x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image ) {\n\n\t\t// http://extremelysatisfactorytotalitarianism.com/blog/?p=2120\n\n\t\tvar a, b, c, d, e, f, det, idet,\n\t\twidth = image.width - 1,\n\t\theight = image.height - 1;\n\n\t\tu0 *= width; v0 *= height;\n\t\tu1 *= width; v1 *= height;\n\t\tu2 *= width; v2 *= height;\n\n\t\tx1 -= x0; y1 -= y0;\n\t\tx2 -= x0; y2 -= y0;\n\n\t\tu1 -= u0; v1 -= v0;\n\t\tu2 -= u0; v2 -= v0;\n\n\t\tdet = u1 * v2 - u2 * v1;\n\n\t\tidet = 1 / det;\n\n\t\ta = ( v2 * x1 - v1 * x2 ) * idet;\n\t\tb = ( v2 * y1 - v1 * y2 ) * idet;\n\t\tc = ( u1 * x2 - u2 * x1 ) * idet;\n\t\td = ( u1 * y2 - u2 * y1 ) * idet;\n\n\t\te = x0 - a * u0 - c * v0;\n\t\tf = y0 - b * u0 - d * v0;\n\n\t\t_context.save();\n\t\t_context.transform( a, b, c, d, e, f );\n\t\t_context.clip();\n\t\t_context.drawImage( image, 0, 0 );\n\t\t_context.restore();\n\n\t}\n\n\t// Hide anti-alias gaps\n\n\tfunction expand( v1, v2, pixels ) {\n\n\t\tvar x = v2.x - v1.x, y = v2.y - v1.y,\n\t\tdet = x * x + y * y, idet;\n\n\t\tif ( det === 0 ) return;\n\n\t\tidet = pixels / Math.sqrt( det );\n\n\t\tx *= idet; y *= idet;\n\n\t\tv2.x += x; v2.y += y;\n\t\tv1.x -= x; v1.y -= y;\n\n\t}\n\n\t// Context cached methods.\n\n\tfunction setOpacity( value ) {\n\n\t\tif ( _contextGlobalAlpha !== value ) {\n\n\t\t\t_context.globalAlpha = value;\n\t\t\t_contextGlobalAlpha = value;\n\n\t\t}\n\n\t}\n\n\tfunction setBlending( value ) {\n\n\t\tif ( _contextGlobalCompositeOperation !== value ) {\n\n\t\t\tif ( value === THREE.NormalBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'source-over';\n\n\t\t\t} else if ( value === THREE.AdditiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'lighter';\n\n\t\t\t} else if ( value === THREE.SubtractiveBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'darker';\n\n\t\t\t} else if ( value === THREE.MultiplyBlending ) {\n\n\t\t\t\t_context.globalCompositeOperation = 'multiply';\n\n\t\t\t}\n\n\t\t\t_contextGlobalCompositeOperation = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineWidth( value ) {\n\n\t\tif ( _contextLineWidth !== value ) {\n\n\t\t\t_context.lineWidth = value;\n\t\t\t_contextLineWidth = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineCap( value ) {\n\n\t\t// \"butt\", \"round\", \"square\"\n\n\t\tif ( _contextLineCap !== value ) {\n\n\t\t\t_context.lineCap = value;\n\t\t\t_contextLineCap = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineJoin( value ) {\n\n\t\t// \"round\", \"bevel\", \"miter\"\n\n\t\tif ( _contextLineJoin !== value ) {\n\n\t\t\t_context.lineJoin = value;\n\t\t\t_contextLineJoin = value;\n\n\t\t}\n\n\t}\n\n\tfunction setStrokeStyle( value ) {\n\n\t\tif ( _contextStrokeStyle !== value ) {\n\n\t\t\t_context.strokeStyle = value;\n\t\t\t_contextStrokeStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setFillStyle( value ) {\n\n\t\tif ( _contextFillStyle !== value ) {\n\n\t\t\t_context.fillStyle = value;\n\t\t\t_contextFillStyle = value;\n\n\t\t}\n\n\t}\n\n\tfunction setLineDash( value ) {\n\n\t\tif ( _contextLineDash.length !== value.length ) {\n\n\t\t\t_context.setLineDash( value );\n\t\t\t_contextLineDash = value;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/renderers/CanvasRenderer.js\n ** module id = 7\n ** module chunks = 0 1\n **/","/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author julianwa / https://github.com/julianwa\n */\n\nTHREE.RenderableObject = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableFace = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\tthis.v3 = new THREE.RenderableVertex();\n\n\tthis.normalModel = new THREE.Vector3();\n\n\tthis.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tthis.vertexNormalsLength = 0;\n\n\tthis.color = new THREE.Color();\n\tthis.material = null;\n\tthis.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableVertex = function () {\n\n\tthis.position = new THREE.Vector3();\n\tthis.positionWorld = new THREE.Vector3();\n\tthis.positionScreen = new THREE.Vector4();\n\n\tthis.visible = true;\n\n};\n\nTHREE.RenderableVertex.prototype.copy = function ( vertex ) {\n\n\tthis.positionWorld.copy( vertex.positionWorld );\n\tthis.positionScreen.copy( vertex.positionScreen );\n\n};\n\n//\n\nTHREE.RenderableLine = function () {\n\n\tthis.id = 0;\n\n\tthis.v1 = new THREE.RenderableVertex();\n\tthis.v2 = new THREE.RenderableVertex();\n\n\tthis.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\tthis.material = null;\n\n\tthis.z = 0;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.RenderableSprite = function () {\n\n\tthis.id = 0;\n\n\tthis.object = null;\n\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.z = 0;\n\n\tthis.rotation = 0;\n\tthis.scale = new THREE.Vector2();\n\n\tthis.material = null;\n\tthis.renderOrder = 0;\n\n};\n\n//\n\nTHREE.Projector = function () {\n\n\tvar _object, _objectCount, _objectPool = [], _objectPoolLength = 0,\n\t_vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0,\n\t_face, _faceCount, _facePool = [], _facePoolLength = 0,\n\t_line, _lineCount, _linePool = [], _linePoolLength = 0,\n\t_sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0,\n\n\t_renderData = { objects: [], lights: [], elements: [] },\n\n\t_vector3 = new THREE.Vector3(),\n\t_vector4 = new THREE.Vector4(),\n\n\t_clipBox = new THREE.Box3( new THREE.Vector3( - 1, - 1, - 1 ), new THREE.Vector3( 1, 1, 1 ) ),\n\t_boundingBox = new THREE.Box3(),\n\t_points3 = new Array( 3 ),\n\t_points4 = new Array( 4 ),\n\n\t_viewMatrix = new THREE.Matrix4(),\n\t_viewProjectionMatrix = new THREE.Matrix4(),\n\n\t_modelMatrix,\n\t_modelViewProjectionMatrix = new THREE.Matrix4(),\n\n\t_normalMatrix = new THREE.Matrix3(),\n\n\t_frustum = new THREE.Frustum(),\n\n\t_clippedVertex1PositionScreen = new THREE.Vector4(),\n\t_clippedVertex2PositionScreen = new THREE.Vector4();\n\n\t//\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function ( vector, camera ) {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n\t//\n\n\tvar RenderList = function () {\n\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar object = null;\n\t\tvar material = null;\n\n\t\tvar normalMatrix = new THREE.Matrix3();\n\n\t\tfunction setObject( value ) {\n\n\t\t\tobject = value;\n\t\t\tmaterial = object.material;\n\n\t\t\tnormalMatrix.getNormalMatrix( object.matrixWorld );\n\n\t\t\tnormals.length = 0;\n\t\t\tuvs.length = 0;\n\n\t\t}\n\n\t\tfunction projectVertex( vertex ) {\n\n\t\t\tvar position = vertex.position;\n\t\t\tvar positionWorld = vertex.positionWorld;\n\t\t\tvar positionScreen = vertex.positionScreen;\n\n\t\t\tpositionWorld.copy( position ).applyMatrix4( _modelMatrix );\n\t\t\tpositionScreen.copy( positionWorld ).applyMatrix4( _viewProjectionMatrix );\n\n\t\t\tvar invW = 1 / positionScreen.w;\n\n\t\t\tpositionScreen.x *= invW;\n\t\t\tpositionScreen.y *= invW;\n\t\t\tpositionScreen.z *= invW;\n\n\t\t\tvertex.visible = positionScreen.x >= - 1 && positionScreen.x <= 1 &&\n\t\t\t\t\t positionScreen.y >= - 1 && positionScreen.y <= 1 &&\n\t\t\t\t\t positionScreen.z >= - 1 && positionScreen.z <= 1;\n\n\t\t}\n\n\t\tfunction pushVertex( x, y, z ) {\n\n\t\t\t_vertex = getNextVertexInPool();\n\t\t\t_vertex.position.set( x, y, z );\n\n\t\t\tprojectVertex( _vertex );\n\n\t\t}\n\n\t\tfunction pushNormal( x, y, z ) {\n\n\t\t\tnormals.push( x, y, z );\n\n\t\t}\n\n\t\tfunction pushUv( x, y ) {\n\n\t\t\tuvs.push( x, y );\n\n\t\t}\n\n\t\tfunction checkTriangleVisibility( v1, v2, v3 ) {\n\n\t\t\tif ( v1.visible === true || v2.visible === true || v3.visible === true ) return true;\n\n\t\t\t_points3[ 0 ] = v1.positionScreen;\n\t\t\t_points3[ 1 ] = v2.positionScreen;\n\t\t\t_points3[ 2 ] = v3.positionScreen;\n\n\t\t\treturn _clipBox.intersectsBox( _boundingBox.setFromPoints( _points3 ) );\n\n\t\t}\n\n\t\tfunction checkBackfaceCulling( v1, v2, v3 ) {\n\n\t\t\treturn ( ( v3.positionScreen.x - v1.positionScreen.x ) *\n\t\t\t\t    ( v2.positionScreen.y - v1.positionScreen.y ) -\n\t\t\t\t    ( v3.positionScreen.y - v1.positionScreen.y ) *\n\t\t\t\t    ( v2.positionScreen.x - v1.positionScreen.x ) ) < 0;\n\n\t\t}\n\n\t\tfunction pushLine( a, b ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\n\t\t\t_line = getNextLineInPool();\n\n\t\t\t_line.id = object.id;\n\t\t\t_line.v1.copy( v1 );\n\t\t\t_line.v2.copy( v2 );\n\t\t\t_line.z = ( v1.positionScreen.z + v2.positionScreen.z ) / 2;\n\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t_line.material = object.material;\n\n\t\t\t_renderData.elements.push( _line );\n\n\t\t}\n\n\t\tfunction pushTriangle( a, b, c ) {\n\n\t\t\tvar v1 = _vertexPool[ a ];\n\t\t\tvar v2 = _vertexPool[ b ];\n\t\t\tvar v3 = _vertexPool[ c ];\n\n\t\t\tif ( checkTriangleVisibility( v1, v2, v3 ) === false ) return;\n\n\t\t\tif ( material.side === THREE.DoubleSide || checkBackfaceCulling( v1, v2, v3 ) === true ) {\n\n\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t_face.id = object.id;\n\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t_face.v3.copy( v3 );\n\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t// use first vertex normal as face normal\n\n\t\t\t\t_face.normalModel.fromArray( normals, a * 3 );\n\t\t\t\t_face.normalModel.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tvar normal = _face.vertexNormalsModel[ i ];\n\t\t\t\t\tnormal.fromArray( normals, arguments[ i ] * 3 );\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\tvar uv = _face.uvs[ i ];\n\t\t\t\t\tuv.fromArray( uvs, arguments[ i ] * 2 );\n\n\t\t\t\t}\n\n\t\t\t\t_face.vertexNormalsLength = 3;\n\n\t\t\t\t_face.material = object.material;\n\n\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetObject: setObject,\n\t\t\tprojectVertex: projectVertex,\n\t\t\tcheckTriangleVisibility: checkTriangleVisibility,\n\t\t\tcheckBackfaceCulling: checkBackfaceCulling,\n\t\t\tpushVertex: pushVertex,\n\t\t\tpushNormal: pushNormal,\n\t\t\tpushUv: pushUv,\n\t\t\tpushLine: pushLine,\n\t\t\tpushTriangle: pushTriangle\n\t\t}\n\n\t};\n\n\tvar renderList = new RenderList();\n\n\tthis.projectScene = function ( scene, camera, sortObjects, sortElements ) {\n\n\t\t_faceCount = 0;\n\t\t_lineCount = 0;\n\t\t_spriteCount = 0;\n\n\t\t_renderData.elements.length = 0;\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\t_viewMatrix.copy( camera.matrixWorldInverse.getInverse( camera.matrixWorld ) );\n\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t_frustum.setFromMatrix( _viewProjectionMatrix );\n\n\t\t//\n\n\t\t_objectCount = 0;\n\n\t\t_renderData.objects.length = 0;\n\t\t_renderData.lights.length = 0;\n\n\t\tfunction addObject( object ) {\n\n\t\t\t_object = getNextObjectInPool();\n\t\t\t_object.id = object.id;\n\t\t\t_object.object = object;\n\n\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t_vector3.applyProjection( _viewProjectionMatrix );\n\t\t\t_object.z = _vector3.z;\n\t\t\t_object.renderOrder = object.renderOrder;\n\n\t\t\t_renderData.objects.push( _object );\n\n\t\t}\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object instanceof THREE.Light ) {\n\n\t\t\t\t_renderData.lights.push( object );\n\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsObject( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\tif ( object.material.visible === false ) return;\n\t\t\t\tif ( object.frustumCulled === true && _frustum.intersectsSprite( object ) === false ) return;\n\n\t\t\t\taddObject( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( sortObjects === true ) {\n\n\t\t\t_renderData.objects.sort( painterSort );\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var o = 0, ol = _renderData.objects.length; o < ol; o ++ ) {\n\n\t\t\tvar object = _renderData.objects[ o ].object;\n\t\t\tvar geometry = object.geometry;\n\n\t\t\trenderList.setObject( object );\n\n\t\t\t_modelMatrix = object.matrixWorld;\n\n\t\t\t_vertexCount = 0;\n\n\t\t\tif ( object instanceof THREE.Mesh ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tif ( attributes.position === undefined ) continue;\n\n\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.normal !== undefined ) {\n\n\t\t\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = normals.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushNormal( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = uvs.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\trenderList.pushUv( uvs[ i ], uvs[ i + 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\t\t\t\tfor ( var o = 0; o < groups.length; o ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ o ];\n\n\t\t\t\t\t\t\t\tfor ( var i = group.start, l = group.start + group.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushTriangle( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushTriangle( i, i + 1, i + 2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\n\t\t\t\t\t_normalMatrix.getNormalMatrix( _modelMatrix );\n\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t\t\t\t\tvar objectMaterials = isFaceMaterial === true ? object.material : null;\n\n\t\t\t\t\tfor ( var v = 0, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tvar vertex = vertices[ v ];\n\n\t\t\t\t\t\t_vector3.copy( vertex );\n\n\t\t\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\t\tvar target = morphTargets[ t ];\n\t\t\t\t\t\t\t\tvar targetVertex = target.vertices[ v ];\n\n\t\t\t\t\t\t\t\t_vector3.x += ( targetVertex.x - vertex.x ) * influence;\n\t\t\t\t\t\t\t\t_vector3.y += ( targetVertex.y - vertex.y ) * influence;\n\t\t\t\t\t\t\t\t_vector3.z += ( targetVertex.z - vertex.z ) * influence;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderList.pushVertex( _vector3.x, _vector3.y, _vector3.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ f ];\n\n\t\t\t\t\t\tmaterial = isFaceMaterial === true\n\t\t\t\t\t\t\t ? objectMaterials.materials[ face.materialIndex ]\n\t\t\t\t\t\t\t : object.material;\n\n\t\t\t\t\t\tif ( material === undefined ) continue;\n\n\t\t\t\t\t\tvar side = material.side;\n\n\t\t\t\t\t\tvar v1 = _vertexPool[ face.a ];\n\t\t\t\t\t\tvar v2 = _vertexPool[ face.b ];\n\t\t\t\t\t\tvar v3 = _vertexPool[ face.c ];\n\n\t\t\t\t\t\tif ( renderList.checkTriangleVisibility( v1, v2, v3 ) === false ) continue;\n\n\t\t\t\t\t\tvar visible = renderList.checkBackfaceCulling( v1, v2, v3 );\n\n\t\t\t\t\t\tif ( side !== THREE.DoubleSide ) {\n\n\t\t\t\t\t\t\tif ( side === THREE.FrontSide && visible === false ) continue;\n\t\t\t\t\t\t\tif ( side === THREE.BackSide && visible === true ) continue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face = getNextFaceInPool();\n\n\t\t\t\t\t\t_face.id = object.id;\n\t\t\t\t\t\t_face.v1.copy( v1 );\n\t\t\t\t\t\t_face.v2.copy( v2 );\n\t\t\t\t\t\t_face.v3.copy( v3 );\n\n\t\t\t\t\t\t_face.normalModel.copy( face.normal );\n\n\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t_face.normalModel.negate();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.normalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\tvar faceVertexNormals = face.vertexNormals;\n\n\t\t\t\t\t\tfor ( var n = 0, nl = Math.min( faceVertexNormals.length, 3 ); n < nl; n ++ ) {\n\n\t\t\t\t\t\t\tvar normalModel = _face.vertexNormalsModel[ n ];\n\t\t\t\t\t\t\tnormalModel.copy( faceVertexNormals[ n ] );\n\n\t\t\t\t\t\t\tif ( visible === false && ( side === THREE.BackSide || side === THREE.DoubleSide ) ) {\n\n\t\t\t\t\t\t\t\tnormalModel.negate();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnormalModel.applyMatrix3( _normalMatrix ).normalize();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.vertexNormalsLength = faceVertexNormals.length;\n\n\t\t\t\t\t\tvar vertexUvs = faceVertexUvs[ f ];\n\n\t\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\t\tfor ( var u = 0; u < 3; u ++ ) {\n\n\t\t\t\t\t\t\t\t_face.uvs[ u ].copy( vertexUvs[ u ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_face.color = face.color;\n\t\t\t\t\t\t_face.material = material;\n\n\t\t\t\t\t\t_face.z = ( v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z ) / 3;\n\t\t\t\t\t\t_face.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t_renderData.elements.push( _face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Line ) {\n\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\n\n\t\t\t\t\tvar attributes = geometry.attributes;\n\n\t\t\t\t\tif ( attributes.position !== undefined ) {\n\n\t\t\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 3 ) {\n\n\t\t\t\t\t\t\trenderList.pushVertex( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t\t\t\tvar indices = geometry.index.array;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( indices[ i ], indices[ i + 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = ( positions.length / 3 ) - 1; i < l; i += step ) {\n\n\t\t\t\t\t\t\t\trenderList.pushLine( i, i + 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\n\n\t\t\t\t\t_modelViewProjectionMatrix.multiplyMatrices( _viewProjectionMatrix, _modelMatrix );\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\n\t\t\t\t\tif ( vertices.length === 0 ) continue;\n\n\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\tv1.positionScreen.copy( vertices[ 0 ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\tvar step = object instanceof THREE.LineSegments ? 2 : 1;\n\n\t\t\t\t\tfor ( var v = 1, vl = vertices.length; v < vl; v ++ ) {\n\n\t\t\t\t\t\tv1 = getNextVertexInPool();\n\t\t\t\t\t\tv1.positionScreen.copy( vertices[ v ] ).applyMatrix4( _modelViewProjectionMatrix );\n\n\t\t\t\t\t\tif ( ( v + 1 ) % step > 0 ) continue;\n\n\t\t\t\t\t\tv2 = _vertexPool[ _vertexCount - 2 ];\n\n\t\t\t\t\t\t_clippedVertex1PositionScreen.copy( v1.positionScreen );\n\t\t\t\t\t\t_clippedVertex2PositionScreen.copy( v2.positionScreen );\n\n\t\t\t\t\t\tif ( clipLine( _clippedVertex1PositionScreen, _clippedVertex2PositionScreen ) === true ) {\n\n\t\t\t\t\t\t\t// Perform the perspective divide\n\t\t\t\t\t\t\t_clippedVertex1PositionScreen.multiplyScalar( 1 / _clippedVertex1PositionScreen.w );\n\t\t\t\t\t\t\t_clippedVertex2PositionScreen.multiplyScalar( 1 / _clippedVertex2PositionScreen.w );\n\n\t\t\t\t\t\t\t_line = getNextLineInPool();\n\n\t\t\t\t\t\t\t_line.id = object.id;\n\t\t\t\t\t\t\t_line.v1.positionScreen.copy( _clippedVertex1PositionScreen );\n\t\t\t\t\t\t\t_line.v2.positionScreen.copy( _clippedVertex2PositionScreen );\n\n\t\t\t\t\t\t\t_line.z = Math.max( _clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z );\n\t\t\t\t\t\t\t_line.renderOrder = object.renderOrder;\n\n\t\t\t\t\t\t\t_line.material = object.material;\n\n\t\t\t\t\t\t\tif ( object.material.vertexColors === THREE.VertexColors ) {\n\n\t\t\t\t\t\t\t\t_line.vertexColors[ 0 ].copy( object.geometry.colors[ v ] );\n\t\t\t\t\t\t\t\t_line.vertexColors[ 1 ].copy( object.geometry.colors[ v - 1 ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_renderData.elements.push( _line );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\n\n\t\t\t\t_vector4.set( _modelMatrix.elements[ 12 ], _modelMatrix.elements[ 13 ], _modelMatrix.elements[ 14 ], 1 );\n\t\t\t\t_vector4.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\tvar invW = 1 / _vector4.w;\n\n\t\t\t\t_vector4.z *= invW;\n\n\t\t\t\tif ( _vector4.z >= - 1 && _vector4.z <= 1 ) {\n\n\t\t\t\t\t_sprite = getNextSpriteInPool();\n\t\t\t\t\t_sprite.id = object.id;\n\t\t\t\t\t_sprite.x = _vector4.x * invW;\n\t\t\t\t\t_sprite.y = _vector4.y * invW;\n\t\t\t\t\t_sprite.z = _vector4.z;\n\t\t\t\t\t_sprite.renderOrder = object.renderOrder;\n\t\t\t\t\t_sprite.object = object;\n\n\t\t\t\t\t_sprite.rotation = object.rotation;\n\n\t\t\t\t\t_sprite.scale.x = object.scale.x * Math.abs( _sprite.x - ( _vector4.x + camera.projectionMatrix.elements[ 0 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 12 ] ) );\n\t\t\t\t\t_sprite.scale.y = object.scale.y * Math.abs( _sprite.y - ( _vector4.y + camera.projectionMatrix.elements[ 5 ] ) / ( _vector4.w + camera.projectionMatrix.elements[ 13 ] ) );\n\n\t\t\t\t\t_sprite.material = object.material;\n\n\t\t\t\t\t_renderData.elements.push( _sprite );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( sortElements === true ) {\n\n\t\t\t_renderData.elements.sort( painterSort );\n\n\t\t}\n\n\t\treturn _renderData;\n\n\t};\n\n\t// Pools\n\n\tfunction getNextObjectInPool() {\n\n\t\tif ( _objectCount === _objectPoolLength ) {\n\n\t\t\tvar object = new THREE.RenderableObject();\n\t\t\t_objectPool.push( object );\n\t\t\t_objectPoolLength ++;\n\t\t\t_objectCount ++;\n\t\t\treturn object;\n\n\t\t}\n\n\t\treturn _objectPool[ _objectCount ++ ];\n\n\t}\n\n\tfunction getNextVertexInPool() {\n\n\t\tif ( _vertexCount === _vertexPoolLength ) {\n\n\t\t\tvar vertex = new THREE.RenderableVertex();\n\t\t\t_vertexPool.push( vertex );\n\t\t\t_vertexPoolLength ++;\n\t\t\t_vertexCount ++;\n\t\t\treturn vertex;\n\n\t\t}\n\n\t\treturn _vertexPool[ _vertexCount ++ ];\n\n\t}\n\n\tfunction getNextFaceInPool() {\n\n\t\tif ( _faceCount === _facePoolLength ) {\n\n\t\t\tvar face = new THREE.RenderableFace();\n\t\t\t_facePool.push( face );\n\t\t\t_facePoolLength ++;\n\t\t\t_faceCount ++;\n\t\t\treturn face;\n\n\t\t}\n\n\t\treturn _facePool[ _faceCount ++ ];\n\n\n\t}\n\n\tfunction getNextLineInPool() {\n\n\t\tif ( _lineCount === _linePoolLength ) {\n\n\t\t\tvar line = new THREE.RenderableLine();\n\t\t\t_linePool.push( line );\n\t\t\t_linePoolLength ++;\n\t\t\t_lineCount ++;\n\t\t\treturn line;\n\n\t\t}\n\n\t\treturn _linePool[ _lineCount ++ ];\n\n\t}\n\n\tfunction getNextSpriteInPool() {\n\n\t\tif ( _spriteCount === _spritePoolLength ) {\n\n\t\t\tvar sprite = new THREE.RenderableSprite();\n\t\t\t_spritePool.push( sprite );\n\t\t\t_spritePoolLength ++;\n\t\t\t_spriteCount ++;\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn _spritePool[ _spriteCount ++ ];\n\n\t}\n\n\t//\n\n\tfunction painterSort( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else if ( a.id !== b.id ) {\n\n\t\t\treturn a.id - b.id;\n\n\t\t} else {\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tfunction clipLine( s1, s2 ) {\n\n\t\tvar alpha1 = 0, alpha2 = 1,\n\n\t\t// Calculate the boundary coordinate of each vertex for the near and far clip planes,\n\t\t// Z = -1 and Z = +1, respectively.\n\t\tbc1near =  s1.z + s1.w,\n\t\tbc2near =  s2.z + s2.w,\n\t\tbc1far =  - s1.z + s1.w,\n\t\tbc2far =  - s2.z + s2.w;\n\n\t\tif ( bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0 ) {\n\n\t\t\t// Both vertices lie entirely within all clip planes.\n\t\t\treturn true;\n\n\t\t} else if ( ( bc1near < 0 && bc2near < 0 ) || ( bc1far < 0 && bc2far < 0 ) ) {\n\n\t\t\t// Both vertices lie entirely outside one of the clip planes.\n\t\t\treturn false;\n\n\t\t} else {\n\n\t\t\t// The line segment spans at least one clip plane.\n\n\t\t\tif ( bc1near < 0 ) {\n\n\t\t\t\t// v1 lies outside the near plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t} else if ( bc2near < 0 ) {\n\n\t\t\t\t// v2 lies outside the near plane, v1 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1near / ( bc1near - bc2near ) );\n\n\t\t\t}\n\n\t\t\tif ( bc1far < 0 ) {\n\n\t\t\t\t// v1 lies outside the far plane, v2 inside\n\t\t\t\talpha1 = Math.max( alpha1, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t} else if ( bc2far < 0 ) {\n\n\t\t\t\t// v2 lies outside the far plane, v2 inside\n\t\t\t\talpha2 = Math.min( alpha2, bc1far / ( bc1far - bc2far ) );\n\n\t\t\t}\n\n\t\t\tif ( alpha2 < alpha1 ) {\n\n\t\t\t\t// The line segment spans two boundaries, but is outside both of them.\n\t\t\t\t// (This can't happen when we're only clipping against just near/far but good\n\t\t\t\t//  to leave the check here for future usage if other clip planes are added.)\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\n\t\t\t\t// Update the s1 and s2 vertices to match the clipped line segment.\n\t\t\t\ts1.lerp( s2, alpha1 );\n\t\t\t\ts2.lerp( s1, 1 - alpha2 );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/examples/js/renderers/Projector.js\n ** module id = 8\n ** module chunks = 0 1\n **/","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n  \n  if (isObjectObject(o) === false) return false;\n  \n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n  \n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n  \n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n  \n  // Most likely a plain Object\n  return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-plain-object/index.js\n ** module id = 9\n ** module chunks = 0 1\n **/","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object'\n    && !Array.isArray(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isobject/index.js\n ** module id = 10\n ** module chunks = 0 1\n **/","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n      conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this.newListener = conf.newListener);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this.newListener = false;\n    configure.call(this, conf);\n  }\n\n  //\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i) {\n    if (!tree) {\n      return [];\n    }\n    var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n        typeLength = type.length, currentType = type[i], nextType = type[i+1];\n    if (i === typeLength && tree._listeners) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n      if (typeof tree._listeners === 'function') {\n        handlers && handlers.push(tree._listeners);\n        return [tree];\n      } else {\n        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n          handlers && handlers.push(tree._listeners[leaf]);\n        }\n        return [tree];\n      }\n    }\n\n    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n      //\n      // If the event emitted is '*' at this part\n      // or there is a concrete match at this patch\n      //\n      if (currentType === '*') {\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n          }\n        }\n        return listeners;\n      } else if(currentType === '**') {\n        endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n        if(endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n        }\n\n        for (branch in tree) {\n          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n            if(branch === '*' || branch === '**') {\n              if(tree[branch]._listeners && !endReached) {\n                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n              }\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            } else if(branch === nextType) {\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n            }\n          }\n        }\n        return listeners;\n      }\n\n      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n    }\n\n    xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i+1);\n    }\n\n    xxTree = tree['**'];\n    if(xxTree) {\n      if(i < typeLength) {\n        if(xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        for(branch in xxTree) {\n          if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n            if(branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i+2);\n            } else if(branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i+1);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n            }\n          }\n        }\n      } else if(xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength);\n      } else if(xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener) {\n\n    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    for(var i = 0, len = type.length; i+1 < len; i++) {\n      if(type[i] === '**' && type[i+1] === '**') {\n        return;\n      }\n    }\n\n    var tree = this.listenerTree;\n    var name = type.shift();\n\n    while (name) {\n\n      if (!tree[name]) {\n        tree[name] = {};\n      }\n\n      tree = tree[name];\n\n      if (type.length === 0) {\n\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        }\n        else if(typeof tree._listeners === 'function') {\n          tree._listeners = [tree._listeners, listener];\n        }\n        else if (isArray(tree._listeners)) {\n\n          tree._listeners.push(listener);\n\n          if (!tree._listeners.warned) {\n\n            var m = defaultMaxListeners;\n\n            if (typeof this._events.maxListeners !== 'undefined') {\n              m = this._events.maxListeners;\n            }\n\n            if (m > 0 && tree._listeners.length > m) {\n\n              tree._listeners.warned = true;\n              console.error('(node) warning: possible EventEmitter memory ' +\n                            'leak detected. %d listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit.',\n                            tree._listeners.length);\n              console.trace();\n            }\n          }\n        }\n        return true;\n      }\n      name = type.shift();\n    }\n    return true;\n  }\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    this._events || init.call(this);\n    this._events.maxListeners = n;\n    if (!this._conf) this._conf = {};\n    this._conf.maxListeners = n;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn) {\n    this.many(event, 1, fn);\n    return this;\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    this.on(event, listener);\n\n    return self;\n  };\n\n  EventEmitter.prototype.emit = function() {\n\n    this._events || init.call(this);\n\n    var type = arguments[0];\n\n    if (type === 'newListener' && !this.newListener) {\n      if (!this._events.newListener) { return false; }\n    }\n\n    // Loop through the *_all* functions and invoke them.\n    if (this._all) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        this._all[i].apply(this, args);\n      }\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (type === 'error') {\n\n      if (!this._all &&\n        !this._events.error &&\n        !(this.wildcard && this.listenerTree.error)) {\n\n        if (arguments[1] instanceof Error) {\n          throw arguments[1]; // Unhandled 'error' event\n        } else {\n          throw new Error(\"Uncaught, unspecified 'error' event.\");\n        }\n        return false;\n      }\n    }\n\n    var handler;\n\n    if(this.wildcard) {\n      handler = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    }\n    else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      if (arguments.length === 1) {\n        handler.call(this);\n      }\n      else if (arguments.length > 1)\n        switch (arguments.length) {\n          case 2:\n            handler.call(this, arguments[1]);\n            break;\n          case 3:\n            handler.call(this, arguments[1], arguments[2]);\n            break;\n          // slower\n          default:\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n            handler.apply(this, args);\n        }\n      return true;\n    }\n    else if (handler) {\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\n      var listeners = handler.slice();\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        this.event = type;\n        listeners[i].apply(this, args);\n      }\n      return (listeners.length > 0) || !!this._all;\n    }\n    else {\n      return !!this._all;\n    }\n\n  };\n\n  EventEmitter.prototype.on = function(type, listener) {\n\n    if (typeof type === 'function') {\n      this.onAny(type);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    this.emit('newListener', type, listener);\n\n    if(this.wildcard) {\n      growListenerTree.call(this, type, listener);\n      return this;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    }\n    else if(typeof this._events[type] === 'function') {\n      // Adding the second element, need to change to array.\n      this._events[type] = [this._events[type], listener];\n    }\n    else if (isArray(this._events[type])) {\n      // If we've already got an array, just append.\n      this._events[type].push(listener);\n\n      // Check for listener leak\n      if (!this._events[type].warned) {\n\n        var m = defaultMaxListeners;\n\n        if (typeof this._events.maxListeners !== 'undefined') {\n          m = this._events.maxListeners;\n        }\n\n        if (m > 0 && this._events[type].length > m) {\n\n          this._events[type].warned = true;\n          console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n          console.trace();\n        }\n      }\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if(!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    this._all.push(fn);\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n    }\n    else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          return this;\n        }\n      }\n    } else {\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function(type) {\n    if (arguments.length === 0) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n      for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n        var leaf = leafs[iLeaf];\n        leaf._listeners = null;\n      }\n    }\n    else {\n      if (!this._events[type]) return this;\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function(type) {\n    if(this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers;\n    }\n\n    this._events || init.call(this);\n\n    if (!this._events[type]) this._events[type] = [];\n    if (!isArray(this._events[type])) {\n      this._events[type] = [this._events[type]];\n    }\n    return this._events[type];\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    exports.EventEmitter2 = EventEmitter;\n  }\n  else {\n    // Browser global.\n    window.EventEmitter2 = EventEmitter;\n  }\n}();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/EventEmitter2/lib/eventemitter2.js\n ** module id = 11\n ** module chunks = 0 1\n **/","module.exports = {Promise: window['Promise']}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/polyfills/es6-promise.js\n ** module id = 12\n ** module chunks = 0 1\n **/","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function() {\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            this.q = [];\n            this.add = function(ev) {\n                this.q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = this.q.length; i < j; i++) {\n                    this.q[i].call();\n                }\n            };\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var shrinkChild = shrink.childNodes[0];\n\n            var lastWidth, lastHeight;\n\n            var reset = function() {\n                expandChild.style.width = expand.offsetWidth + 10 + 'px';\n                expandChild.style.height = expand.offsetHeight + 10 + 'px';\n                expand.scrollLeft = expand.scrollWidth;\n                expand.scrollTop = expand.scrollHeight;\n                shrink.scrollLeft = shrink.scrollWidth;\n                shrink.scrollTop = shrink.scrollHeight;\n                lastWidth = element.offsetWidth;\n                lastHeight = element.offsetHeight;\n            };\n\n            reset();\n\n            var changed = function() {\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            var onScroll = function() {\n              if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                  changed();\n              }\n              reset();\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        var elementType = Object.prototype.toString.call(element);\n        var isCollectionTyped = ('[object Array]' === elementType\n            || ('[object NodeList]' === elementType)\n            || ('[object HTMLCollection]' === elementType)\n            || ('undefined' !== typeof jQuery && element instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && element instanceof Elements) //mootools\n        );\n\n        if (isCollectionTyped) {\n            var i = 0, j = element.length;\n            for (; i < j; i++) {\n                attachResizeEvent(element[i], callback);\n            }\n        } else {\n            attachResizeEvent(element, callback);\n        }\n\n        this.detach = function() {\n            if (isCollectionTyped) {\n                var i = 0, j = element.length;\n                for (; i < j; i++) {\n                    ResizeSensor.detach(element[i]);\n                }\n            } else {\n                ResizeSensor.detach(element);\n            }\n        };\n    };\n\n    ResizeSensor.detach = function(element) {\n        if (element.resizeSensor) {\n            element.removeChild(element.resizeSensor);\n            delete element.resizeSensor;\n            delete element.resizedAttached;\n        }\n    };\n\n    // make available to common module loader\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = ResizeSensor;\n    }\n    else {\n        window.ResizeSensor = ResizeSensor;\n    }\n\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-element-queries/src/ResizeSensor.js\n ** module id = 13\n ** module chunks = 0 1\n **/","import {EE2} from './deps/deps';\n\n/**\n * this class uses as proxy for EventEmitter2\n */\nexport class EventEmitter {\n\tprivate ee: EventEmitter2;\n\tconstructor() {\n\t\tthis.ee = new EE2();\n\t}\n\temit(eventName: string, ...args: any[]) {\n\t\tthis.ee.emit(eventName, ...args)\n\t}\n\ton(eventName: string, callback: Function) {\n\t\treturn this.ee.on(eventName, callback)\n\t}\n\toff(eventName: string, callback: Function) {\n\t\treturn this.ee.off(eventName, callback);\n\t}\n\tsubscribe(eventName: string, callback: Function): Function {\n\t\tthis.on(eventName, callback);\n\t\treturn () => this.off(eventName, callback);\n\t}\n\tsetMaxListeners(listenersCount: number) {\n\t\tthis.ee.setMaxListeners(listenersCount);\n\t}\n\tremoveAllListeners(eventName?: string) {\n\t\tthis.ee.removeAllListeners(eventName);\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/EventEmmiter.ts\n **/","import Vector3 = THREE.Vector3;\nimport { ITrendOptions, Trend, ITrendData, TREND_TYPE } from \"./Trend\";\nimport {EventEmitter} from './EventEmmiter';\nimport {Utils} from './Utils';\nimport {TrendsManager, ITrendsOptions} from \"./TrendsManager\";\nimport {Screen} from \"./Screen\";\nimport {AxisMarks} from \"./AxisMarks\";\nimport {\n\tAXIS_TYPE, AXIS_DATA_TYPE, IAxisOptions, IAnimationsOptions, AXIS_RANGE_TYPE\n} from \"./interfaces\";\nimport { Promise } from './deps/deps';\nimport { ChartPlugin } from './Plugin';\n\n\ninterface IRecalculatedStateResult {\n\tchangedProps: IChartState,\n\tpatch: IChartState\n}\n\nconst CHART_STATE_EVENTS = {\n\tINITIAL_STATE_APPLIED: 'initialStateApplied',\n\tREADY: 'ready',\n\tDESTROY: 'destroy',\n\tCHANGE: 'change',\n\tTREND_CHANGE: 'trendChange',\n\tTRENDS_CHANGE: 'trendsChange',\n\tZOOM: 'zoom',\n\tRESIZE: 'resize',\n\tSCROLL: 'scroll',\n\tSCROLL_STOP: 'scrollStop',\n\tPLUGINS_STATE_CHANGED: 'pluginsStateChanged'\n};\n\n/**\n * readonly computed state data\n * calculated after recalculateState() call\n * contains cached values\n */\nexport interface IChartStateComputedData {\n\ttrends?: {\n\t\tmaxXVal: number,\n\t\tminXVal: number\n\t}\n}\n\nexport interface IChartState {\n\tprevState?: IChartState,\n\twidth?: number;\n\theight?: number;\n\tzoom?: number;\n\txAxis?: IAxisOptions,\n\tyAxis?: IAxisOptions,\n\tanimations?: IAnimationsOptions,\n\ttrends?: ITrendsOptions,\n\ttrendDefaultState?: ITrendOptions;\n\tcursor?: {\n\t\tdragMode?: boolean,\n\t\tx?: number,\n\t\ty?: number\n\t},\n\n\t/**\n\t * use fps = 0 for no limits\n\t */\n\tautoRender?: {enabled?: boolean, fps?: number};\n\n\t/**\n\t * by default 'WebGLRenderer'\n\t * also available 'CanvasRenderer'\n\t */\n\trenderer?: 'WebGLRenderer' | 'CanvasRenderer';\n\n\n\t/**\n\t * buffer size for displayed segments\n\t * used by widgets\n\t */\n\tmaxVisibleSegments?: number;\n\tautoResize?: boolean;\n\tcontrols?: {enabled: boolean};\n\tautoScroll?: boolean;\n\tshowStats?: boolean;\n\tbackgroundColor?: number;\n\tbackgroundOpacity?: number;\n\tcomputedData?: IChartStateComputedData,\n\tpluginsState?: {[pluginName: string]: any};\n\teventEmitterMaxListeners?: number;\n}\n\n/**\n *  class for manage chart state, all state changes caused only by State.setState method\n */\nexport class ChartState {\n\n\tdata: IChartState = {\n\t\tprevState: {},\n\t\tzoom: 0,\n\t\txAxis: {\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.ALL,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 0,\n\t\t\t\tscroll: 0,\n\t\t\t\tzoom: 1,\n\t\t\t\tpadding: {start: 0, end: 5},\n\t\t\t\tmargin: {start: 0, end: 5}\n\t\t\t},\n\t\t\tdataType: AXIS_DATA_TYPE.NUMBER,\n\t\t\tgrid: {enabled: true, minSizePx:  100},\n\t\t\tautoScroll: true,\n\t\t\tmarks: [],\n\t\t},\n\t\tyAxis: {\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.RELATIVE_END,\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 0,\n\t\t\t\tzoom: 1,\n\t\t\t\tpadding: {start: 5, end: 5},\n\t\t\t\tmargin: {start: 5, end: 5},\n\t\t\t},\n\t\t\tgrid: {enabled: true, minSizePx:  50},\n\t\t\tdataType: AXIS_DATA_TYPE.NUMBER,\n\t\t\tmarks: []\n\t\t},\n\t\tanimations: {\n\t\t\tenabled: true,\n\t\t\ttrendChangeSpeed: 0.5,\n\t\t\ttrendChangeEase: void 0,\n\t\t\tzoomSpeed: 0.25,\n\t\t\tzoomEase:  void 0,\n\t\t\tscrollSpeed: 0.5,\n\t\t\tscrollEase: Linear.easeNone,\n\t\t\tautoScrollSpeed: 1,\n\t\t\tautoScrollEase: Linear.easeNone,\n\t\t},\n\t\tautoRender: {enabled: true, fps: 0},\n\t\tautoResize: true,\n\t\trenderer: 'WebGLRenderer',\n\t\tautoScroll: true,\n\t\tcontrols: {enabled: true},\n\t\ttrendDefaultState: {\n\t\t\tenabled: true,\n\t\t\ttype: TREND_TYPE.LINE,\n\t\t\tdata: [],\n\t\t\tmaxSegmentLength: 1000,\n\t\t\tlineWidth: 2,\n\t\t\tlineColor: 0xFFFFFF,\n\t\t\thasBackground: false,\n\t\t\tbackgroundColor: 'rgba(#5273BD, 0.15)',\n\t\t\thasBeacon: false,\n\t\t\tsettingsForTypes: {\n\t\t\t\tCANDLE: {\n\t\t\t\t\tminSegmentLengthInPx: 20,\n\t\t\t\t\tmaxSegmentLengthInPx: 40,\n\t\t\t\t},\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 2,\n\t\t\t\t\tmaxSegmentLengthInPx: 10,\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcursor: {\n\t\t\tdragMode: false,\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\tbackgroundColor: 0x000000,\n\t\tbackgroundOpacity: 1,\n\t\tshowStats: false,\n\t\tpluginsState: {},\n\t\teventEmitterMaxListeners: 20,\n\t\tmaxVisibleSegments: 1280\n\t};\n\tplugins: {[pluginName: string]: ChartPlugin} = {};\n\ttrendsManager: TrendsManager;\n\tscreen: Screen;\n\txAxisMarks: AxisMarks;\n\tyAxisMarks: AxisMarks;\n\n\t/**\n\t * true then chartState was initialized and ready to use\n\t */\n\tisReady = false;\n\n\n\tprivate ee: EventEmitter;\n\n\tconstructor(\n\t\tinitialState: IChartState,\n\t\tplugins: ChartPlugin[] = []\n\t) {\n\t\tthis.ee = new EventEmitter();\n\t\tthis.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n\n\t\tthis.data = Utils.deepMerge(this.data, initialState);\n\t\tthis.trendsManager = new TrendsManager(this, initialState);\n\t\tinitialState.trends = this.trendsManager.calculatedOptions;\n\t\tinitialState = this.installPlugins(plugins, initialState);\n\t\tthis.setState(initialState);\n\t\tthis.setState({computedData: this.getComputedData()});\n\t\tthis.savePrevState();\n\n\t\tthis.screen = new Screen(this);\n\t\tthis.xAxisMarks = new AxisMarks(this, AXIS_TYPE.X);\n\t\tthis.yAxisMarks = new AxisMarks(this, AXIS_TYPE.Y);\n\t\tthis.initListeners();\n\t\t\n\t\t// message to other modules that ChartState.data is ready for use \n\t\tthis.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\n\t\t// message to other modules that ChartState is ready for use\n\t\tthis.isReady = true;\n\t\tthis.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t}\n\n\t/**\n\t * destroy state, use Chart.destroy to completely destroy chart\n\t */\n\tdestroy() {\n\t\tthis.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t\tthis.ee.removeAllListeners();\n\t\tthis.data = {};\n\t}\n\n\tonDestroy(cb: Function) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t}\n\n\tonInitialStateApplied(cb: (initialState: IChartState) => void ): Function {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t}\n\n\tonReady(cb: (initialState: IChartState) => void ): Function {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t}\n\n\tonChange(cb: (changedProps: IChartState) => void ) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t}\n\n\tonTrendChange(cb: (trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t}\n\n\tonTrendsChange(cb: (trendsOptions: ITrendsOptions) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t}\n\n\tonScrollStop(cb: () => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t}\n\n\tonScroll(cb: (scrollOptions: {deltaX: number}) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t}\n\n\tonZoom(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t}\n\n\tonResize(cb: (changedProps: IChartState) => void) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t}\n\n\tonPluginsStateChange(cb: (changedPluginsStates: {[pluginName: string]: Plugin}) => any) {\n\t\treturn this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t}\n\t\n\tgetTrend(trendName: string): Trend {\n\t\treturn this.trendsManager.getTrend(trendName);\n\t}\n\n\tsetState(newState: IChartState, eventData?: any, silent = false) {\n\t\tlet stateData = this.data as {[key: string]: any};\n\t\tlet newStateObj = newState as {[key: string]: any};\n\n\t\tvar changedProps: {[key: string]: any} = {};\n\t\tfor (let key in newStateObj) {\n\t\t\tif (stateData[key] !== newStateObj[key]) {\n\t\t\t\tchangedProps[key] = newStateObj[key] as any;\n\t\t\t}\n\t\t}\n\n\t\tthis.savePrevState(changedProps as IChartState);\n\n\n\t\t// temporary remove trends data from newState by performance reasons\n\t\tlet trendsData: {[trendName: string]: ITrendData} = {};\n\t\tif (newState.trends) for (let trendName in newState.trends) {\n\t\t\tlet trendOptions = newState.trends[trendName];\n\t\t\tif (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t\t\tdelete trendOptions.data;\n\t\t}\n\t\tlet newStateContainsData = Object.keys(trendsData).length > 0;\n\t\t\n\n\t\tthis.data = Utils.deepMerge(this.data, newState, false);\n\n\t\t// return data to state\n\t\tif (newStateContainsData) for (let trendName in trendsData) {\n\t\t\tthis.data.trends[trendName].data = trendsData[trendName];\n\t\t}\n\n\t\tif (silent) return;\n\n\t\t// recalculate all dynamic state props\n\t\tvar recalculateResult = this.recalculateState(changedProps);\n\t\tchangedProps = recalculateResult.changedProps;\n\t\t\n\t\tthis.emitChangedStateEvents(changedProps, eventData);\n\n\t}\n\n\t/**\n\t * recalculate all computed state props\n\t */\n\tprivate recalculateState(changedProps?: IChartState): IRecalculatedStateResult {\n\t\tvar data = this.data;\n\t\tvar patch: IChartState = {};\n\t\tvar actualData = Utils.deepMerge({}, data);\n\n\t\t// recalculate scroll position by changed cursor options\n\t\tvar cursorOptions = changedProps.cursor;\n\t\tvar isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t\tif (isMouseDrag) {\n\t\t\tvar oldX = data.prevState.cursor.x;\n\t\t\tvar currentX =  cursorOptions.x;\n\t\t\tvar currentScroll = data.xAxis.range.scroll;\n\t\t\tvar deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t\t\tpatch.xAxis = {range: {scroll: currentScroll + deltaXVal}};\n\t\t\tactualData = Utils.deepMerge(actualData, {xAxis: patch.xAxis} as IChartState)\n\t\t}\n\n\t\tlet chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\n\t\tlet scrollXChanged = false;\n\t\tlet needToRecalculateXAxis = (\n\t\t\tisMouseDrag ||\n\t\t\tchartWasResized ||\n\t\t\t(changedProps.xAxis && (changedProps.xAxis.range)) ||\n\t\t\tthis.data.xAxis.range.zeroVal == void 0\n\t\t);\n\t\tif (needToRecalculateXAxis) {\n\t\t\tlet xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t\t\tif (xAxisPatch) {\n\t\t\t\tscrollXChanged = true;\n\t\t\t\tpatch = Utils.deepMerge(patch, {xAxis: xAxisPatch});\n\t\t\t\tactualData = Utils.deepMerge(actualData, {xAxis: xAxisPatch} as IChartState);\n\t\t\t}\n\t\t}\n\n\n\n\t\t// recalculate axis \"from\" and \"to\" for dynamics AXIS_RANGE_TYPE\n\t\tlet needToRecalculateYAxis = (\n\t\t\tchartWasResized ||\n\t\t\t(\n\t\t\t\tdata.yAxis.range.type === AXIS_RANGE_TYPE.RELATIVE_END ||\n\t\t\t\tdata.yAxis.range.type === AXIS_RANGE_TYPE.AUTO ||\n\t\t\t\tdata.yAxis.range.isMirrorMode\n\t\t\t) &&\n\t\t\t(scrollXChanged || changedProps.trends || changedProps.yAxis) ||\n\t\t\tthis.data.yAxis.range.zeroVal == void 0\n\t\t);\n\t\tif (needToRecalculateYAxis){\n\t\t\tlet yAxisPatch = this.recalculateYAxis(actualData);\n\t\t\tif (yAxisPatch) {\n\t\t\t\tpatch = Utils.deepMerge(patch, {yAxis: yAxisPatch});\n\t\t\t\tactualData = Utils.deepMerge(actualData, {yAxis: yAxisPatch} as IChartState);\n\t\t\t}\n\t\t}\n\n\t\tthis.savePrevState(patch);\n\t\tlet allChangedProps = Utils.deepMerge(changedProps, patch);\n\t\tpatch.computedData = this.getComputedData(allChangedProps);\n\t\tthis.savePrevState(patch);\n\t\tthis.data = Utils.deepMerge(this.data, patch);\n\t\treturn {changedProps: allChangedProps, patch: patch}\n\t}\n\n\tprivate getComputedData(changedProps?: IChartState): IChartStateComputedData {\n\t\tvar computeAll = !changedProps;\n\t\tvar computedData: IChartStateComputedData = {};\n\n\t\tif (computeAll || changedProps.trends && this.trendsManager) {\n\t\t\tcomputedData.trends = {\n\t\t\t\tmaxXVal: this.trendsManager.getEndXVal(),\n\t\t\t\tminXVal: this.trendsManager.getStartXVal()\n\t\t\t}\n\t\t}\n\t\treturn computedData;\n\t}\n\n\tprivate savePrevState(changedProps?: IChartState) {\n\t\tif (!changedProps) changedProps = this.data;\n\t\tvar prevState = this.data.prevState;\n\n\t\t// prevent to store prev trend data by performance reasons\n\t\tUtils.copyProps(this.data, prevState, changedProps, ['trends']);\n\n\t}\n\n\tprivate emitChangedStateEvents(changedProps: IChartState, eventData: any) {\n\t\tvar prevState = this.data.prevState;\n\n\t\t// emit common change event\n\t\tthis.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\n\t\t// emit event for each changed state property\n\t\tfor (let key in changedProps) {\n\t\t\tthis.ee.emit(key + 'Change', (changedProps as {[key: string]: any})[key], eventData);\n\t\t}\n\n\t\tif (!this.isReady) return;\n\n\t\t// emit special events based on changed state\n\t\tlet scrollStopEventNeeded = (\n\t\t\tchangedProps.cursor &&\n\t\t\tchangedProps.cursor.dragMode === false &&\n\t\t\tprevState.cursor.dragMode === true\n\t\t);\n\t\tscrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\n\t\tlet scrollChangeEventsNeeded = (\n\t\t\tchangedProps.xAxis &&\n\t\t\tchangedProps.xAxis.range &&\n\t\t\tchangedProps.xAxis.range.scroll !== void 0\n\t\t);\n\t\tscrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\n\t\tlet zoomEventsNeeded = (\n\t\t\t(changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom) ||\n\t\t\t(changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom)\n\t\t);\n\t\tzoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\n\t\tlet resizeEventNeeded = (changedProps.width || changedProps.height);\n\t\tresizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\n\t\tlet pluginStateChangedEventNeeded = !!(changedProps.pluginsState);\n\t\tpluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t}\n\n\n\t/**\n\t * init plugins and save plugins options in initialState\n\t */\n\tprivate installPlugins(plugins: ChartPlugin[], initialState: IChartState): IChartState {\n\t\tinitialState.pluginsState = {};\n\t\tplugins.forEach(plugin => {\n\t\t\tlet PluginClass = plugin.constructor as typeof ChartPlugin;\n\t\t\tlet pluginName = PluginClass.NAME;\n\t\t\tinitialState.pluginsState[pluginName] = Utils.deepMerge({}, plugin.initialState);\n\t\t\tthis.plugins[pluginName] = plugin;\n\t\t\tplugin.setupChartState(this);\n\t\t});\n\t\treturn initialState;\n\t}\n\n\n\t/**\n\t * returns plugin instance by plugin name\n\t * @example\n\t */\n\tgetPlugin(pluginName: string): ChartPlugin {\n\t\treturn this.plugins[pluginName];\n\t}\n\n\n\tprivate initListeners() {\n\t\tthis.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, (changedTrends: ITrendsOptions, newData: ITrendData) => {\n\t\t\tthis.handleTrendsChange(changedTrends, newData)\n\t\t});\n\t}\n\n\tprivate handleTrendsChange(changedTrends: ITrendsOptions, newData: ITrendData) {\n\t\tfor (let trendName in changedTrends) {\n\t\t\tthis.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t\t}\n\t}\n\n\tprivate recalculateXAxis(actualData: IChartState, changedProps: IChartState): IAxisOptions {\n\t\tvar axisRange = actualData.xAxis.range;\n\t\tvar patch: IAxisOptions = {range: {}};\n\t\tvar isInitialize = axisRange.zeroVal == void 0;\n\t\tvar zeroVal: number, scaleFactor: number;\n\t\tvar zoom = axisRange.zoom;\n\n\t\tif (axisRange.isMirrorMode) {\n\t\t\tUtils.error('range.isMirrorMode available only for yAxis.range');\n\t\t}\n\n\t\tif (isInitialize) {\n\t\t\tzeroVal = axisRange.from;\n\t\t\tscaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t\t\tpatch = { range: {zeroVal: zeroVal, scaleFactor: scaleFactor}};\n\t\t} else {\n\t\t\tzeroVal = axisRange.zeroVal;\n\t\t\tscaleFactor = axisRange.scaleFactor;\n\n\t\t\t// recalculate range.zoom and range.scroll then range.from or range.to was changed\n\t\t\tif (\n\t\t\t\tchangedProps.xAxis &&\n\t\t\t\t(changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)\n\t\t\t) {\n\t\t\t\tif (changedProps.xAxis.range.zoom) {\n\t\t\t\t\tUtils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t\t\t\t}\n\t\t\t\tlet currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t\t\t\tpatch.range.scroll = axisRange.from - zeroVal;\n\t\t\t\tpatch.range.zoom = currentScaleFactor / scaleFactor;\n\t\t\t\treturn patch;\n\t\t\t}\n\t\t}\n\n\n\t\t// recalculate range.from and range.to then range.zoom or range.scroll was changed\n\t\tdo {\n\t\t\tvar from = zeroVal + axisRange.scroll;\n\t\t\tvar to = from + actualData.width / (scaleFactor * zoom);\n\t\t\tvar rangeLength = to - from;\n\t\t\tvar needToRecalculateZoom = false;\n\t\t\tvar rangeMoreThenMaxValue = (axisRange.maxLength && rangeLength > axisRange.maxLength);\n\t\t\tvar rangeLessThenMinValue = (axisRange.minLength && rangeLength < axisRange.minLength);\n\t\t\tneedToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t\t\tif (needToRecalculateZoom) {\n\t\t\t\tvar fixScale = rangeLength > axisRange.maxLength ?\n\t\t\t\t\trangeLength / axisRange.maxLength :\n\t\t\t\t\trangeLength / axisRange.minLength;\n\t\t\t\tvar zoom = zoom * fixScale;\n\t\t\t\tpatch.range.zoom = zoom;\n\t\t\t}\n\t\t} while (needToRecalculateZoom);\n\n\t\tpatch.range.from = from;\n\t\tpatch.range.to = to;\n\t\treturn patch;\n\t}\n\n\n\tprivate recalculateYAxis(actualData: IChartState): IAxisOptions {\n\t\tvar patch: IAxisOptions = {range: {}};\n\t\tvar yAxisRange = actualData.yAxis.range;\n\t\tvar isInitialize = yAxisRange.scaleFactor == void 0;\n\t\tvar trends = this.trendsManager;\n\t\tvar trendsEndXVal = trends.getEndXVal();\n\t\tvar trendsStartXVal = trends.getStartXVal();\n\t\tvar xRange = actualData.xAxis.range;\n\t\tvar {from: xFrom, to: xTo} = xRange;\n\t\tvar xRangeLength = xTo - xFrom;\n\t\tvar zeroVal: number, scaleFactor: number, scroll: number, zoom: number, needToZoom: boolean;\n\n\t\t// check situation when chart was scrolled behind trends end or before trends start\n\t\tif (xTo > trendsEndXVal) {\n\t\t\txTo = trendsEndXVal;\n\t\t\txFrom = xTo - xRangeLength;\n\t\t} else if (xFrom < trendsStartXVal) {\n\t\t\txFrom = trendsStartXVal;\n\t\t\txTo = xFrom + xRangeLength;\n\t\t}\n\n\t\tvar maxY = trends.getMaxYVal(xFrom, xTo);\n\t\tvar minY = trends.getMinYVal(xFrom, xTo);\n\n\t\tvar trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t\tif (yAxisRange.type == AXIS_RANGE_TYPE.RELATIVE_END) {\n\t\t\tif (trendLastY > maxY) maxY = trendLastY;\n\t\t\tif (trendLastY < minY) minY = trendLastY;\n\t\t}\n\n\t\tif (yAxisRange.isMirrorMode) {\n\t\t\tif (yAxisRange.zeroVal == void 0) Utils.error('range.zeroVal must be set when range.isMirrorMode');\n\t\t\tlet distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t\t\tlet distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t\t\tlet maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t\t\tmaxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t\t\tminY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t\t}\n\t\tlet margin = yAxisRange.margin;\n\t\tlet padding = {\n\t\t\tstart: yAxisRange.padding.start + margin.start,\n\t\t\tend: yAxisRange.padding.end + margin.end\n\t\t};\n\n\t\tif (padding.end + padding.start >= actualData.height) {\n\t\t\tUtils.warn('Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly');\n\t\t}\n\n\t\tlet rangeLength = maxY - minY;\n\t\tlet paddingTopInPercents = padding.end / actualData.height;\n\t\tlet paddingBottomInPercents = padding.start / actualData.height;\n\t\tlet rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t\tlet visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t\tlet fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t\tlet toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t\t\n\t\tif (isInitialize) {\n\t\t\tzeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t\t\tscaleFactor = actualData.height / (toVal - fromVal);\n\t\t\tpatch = { range: {zeroVal: zeroVal, scaleFactor: scaleFactor}};\n\t\t\tneedToZoom = true;\n\t\t} else {\n\t\t\tscaleFactor = yAxisRange.scaleFactor;\n\t\t\tzeroVal = yAxisRange.zeroVal;\n\n\t\t\tlet maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t\t\tlet minScreenY = Math.round(this.getScreenYByValue(minY));\n\t\t\tneedToZoom = (\n\t\t\t\tmaxScreenY > actualData.height - margin.end ||\n\t\t\t\tmaxScreenY < actualData.height - padding.end ||\n\t\t\t\tminScreenY < margin.start ||\n\t\t\t\tminScreenY > padding.start\n\t\t\t);\n\t\t}\n\n\t\tif (!needToZoom) return null;\n\n\t\tscroll = fromVal - zeroVal;\n\t\tzoom = (actualData.height / (toVal - fromVal)) / scaleFactor ;\n\n\t\tvar currentAxisRange = this.data.yAxis.range;\n\t\tif (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t\tif (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t\tif (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t\tif (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t\t\n\t\treturn patch;\n\t}\n\n\tzoom(zoomValue: number, origin = 0.5): Promise<void> {\n\t\tlet {zoom, scroll, scaleFactor} = this.data.xAxis.range;\n\t\tlet newZoom = zoom * zoomValue;\n\t\tlet currentRange = this.data.width / (scaleFactor * zoom);\n\t\tlet nextRange = this.data.width / (scaleFactor * newZoom);\n\t\tlet newScroll = scroll + (currentRange - nextRange) * origin;\n\t\tthis.setState({xAxis: {range: {zoom: newZoom, scroll: newScroll}}});\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet animationTime = this.data.animations.enabled ? this.data.animations.zoomSpeed : 0;\n\t\t\tsetTimeout(resolve, animationTime * 1000);\n\t\t});\n\t}\n\t\n\tzoomToRange(range: number, origin?: number): Promise<void> {\n\t\tvar {scaleFactor, zoom} = this.data.xAxis.range;\n\t\tlet currentRange = this.data.width / (scaleFactor * zoom);\n\t\treturn this.zoom(currentRange / range, origin);\n\t}\n\n\tscrollToEnd(): Promise<void> {\n\t\tlet state = this.data;\n\t\tlet endXVal = this.trendsManager.getEndXVal();\n\t\tlet range = state.xAxis.range;\n\t\tvar scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t\tthis.setState({xAxis: {range: {scroll: scroll}}});\n\t\treturn new Promise<void>((resolve) => {\n\t\t\tlet animationTime = this.data.animations.enabled ? this.data.animations.scrollSpeed : 0;\n\t\t\tsetTimeout(resolve, animationTime * 1000);\n\t\t});\n\t}\n\n\t/**\n\t *  returns offset in pixels from xAxis.range.zeroVal to xVal\n\t */\n\tgetPointOnXAxis(xVal: number): number {\n\t\tvar {scaleFactor, zoom, zeroVal} = this.data.xAxis.range;\n\t\treturn (xVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\t/**\n\t *  returns offset in pixels from yAxis.range.zeroVal to yVal\n\t */\n\tgetPointOnYAxis(yVal: number): number {\n\t\tvar {scaleFactor, zoom, zeroVal} = this.data.yAxis.range;\n\t\treturn (yVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\t/**\n\t * returns value by offset in pixels from xAxis.range.zeroVal\n\t */\n\tgetValueOnXAxis(x: number): number {\n\t\treturn this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t}\n\n\n\t/**\n\t *  convert value to pixels by using settings from xAxis.range\n\t */\n\tvalueToPxByXAxis(xVal: number) {\n\t\treturn xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n\t}\n\n\n\t/**\n\t *  convert value to pixels by using settings from yAxis.range\n\t */\n\tvalueToPxByYAxis(yVal: number) {\n\t\treturn yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n\t}\n\n\t/**\n\t *  convert pixels to value by using settings from xAxis.range\n\t */\n\tpxToValueByXAxis(xVal: number) {\n\t\treturn xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n\t}\n\n\n\t/**\n\t *  convert pixels to value by using settings from yAxis.range\n\t */\n\tpxToValueByYAxis(yVal: number) {\n\t\treturn yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n\t}\n\n\n\t/**\n\t *  returns x value by screen x coordinate\n\t */\n\tgetValueByScreenX(x: number): number {\n\t\tvar {zeroVal, scroll} = this.data.xAxis.range;\n\t\treturn zeroVal + scroll + this.pxToValueByXAxis(x);\n\t}\n\n\n\t/**\n\t *  returns y value by screen y coordinate\n\t */\n\tgetValueByScreenY(y: number): number {\n\t\tvar {zeroVal, scroll} = this.data.yAxis.range;\n\t\treturn zeroVal + scroll + this.pxToValueByYAxis(y);\n\t}\n\n\n\t/**\n\t *  returns screen x value by screen y coordinate\n\t */\n\tgetScreenXByValue(xVal: number): number {\n\t\tvar {scroll, zeroVal} = this.data.xAxis.range;\n\t\treturn this.valueToPxByXAxis(xVal - zeroVal - scroll)\n\t}\n\n\t/**\n\t *  returns screen y value by screen y coordinate\n\t */\n\tgetScreenYByValue(yVal: number): number {\n\t\tvar {scroll, zeroVal} = this.data.yAxis.range;\n\t\treturn this.valueToPxByYAxis(yVal - zeroVal - scroll)\n\t}\n\n\n\t/**\n\t * returns screen x coordinate by offset in pixels from xAxis.range.zeroVal value\n\t */\n\tgetScreenXByPoint(xVal: number): number {\n\t\treturn this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t}\n\n\n\t/**\n\t * returns offset in pixels from xAxis.range.zeroVal value by screen x coordinate\n\t */\n\tgetPointByScreenX(screenX: number): number {\n\t\treturn this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t}\n\n\n\tgetPointOnChart(xVal: number, yVal: number): Vector3 {\n\t\treturn new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t}\n\n\n\tgetScreenLeftVal() {\n\t\treturn this.getValueByScreenX(0);\n\t}\n\n\n\tgetScreenRightVal() {\n\t\treturn this.getValueByScreenX(this.data.width);\n\t}\n\n\n\tgetPaddingRight(): number {\n\t\treturn this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n\t}\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/State.ts\n **/","import {ChartState, IChartState} from \"./State\";\nimport {Utils} from \"./Utils\";\nimport {TrendSegmentsManager} from \"./TrendSegmentsManager\";\nimport {EventEmitter} from './EventEmmiter';\nimport {Promise} from './deps/deps';\nimport { TChartColor } from './Color';\n\nexport interface IPrependPromiseExecutor {\n\t(requestedDataLength: number, resolve: (data: TTrendRawData) => void, reject: () => void): void;\n}\nconst EVENTS = {\n\tCHANGE: 'Change',\n\tPREPEND_REQUEST: 'prependRequest'\n};\nexport enum TREND_TYPE {LINE, CANDLE}\nexport type TTrendRawData = ITrendData | number[];\nexport interface ITrendItem {xVal: number, yVal: number, id?: number}\nexport interface ITrendData extends Array<ITrendItem>{}\nexport interface ITrendTypeSettings {\n\tminSegmentLengthInPx?: number;\n\tmaxSegmentLengthInPx?: number;\n}\nexport interface ITrendOptions {\n\tenabled?: boolean,\n\tdata?: ITrendData\n\tdataset?: ITrendData | number[];\n\tname?: string;\n\ttype?: TREND_TYPE;\n\tlineWidth?: number;\n\tlineColor?: TChartColor;\n\tbackgroundColor?: TChartColor;\n\thasIndicator?: boolean;\n\thasBackground?: boolean;\n\thasBeacon?: boolean;\n\tmaxSegmentLength?: number;\n\tsettingsForTypes?: {\n\t\tCANDLE?: ITrendTypeSettings,\n\t\tLINE?: ITrendTypeSettings\n\t}\n}\n\nexport class Trend {\n\tname: string;\n\tsegmentsManager: TrendSegmentsManager;\n\tminXVal = Infinity;\n\tminYVal = Infinity;\n\tmaxXVal = -Infinity;\n\tmaxYVal = -Infinity;\n\tprivate chartState: ChartState;\n\tprivate calculatedOptions: ITrendOptions;\n\tprivate prependRequest: Promise<TTrendRawData>;\n\tprivate ee: EventEmitter;\n\t\n\tconstructor(chartState: ChartState, trendName: string, initialState: IChartState) {\n\t\tvar options = initialState.trends[trendName];\n\t\tthis.name = trendName;\n\t\tthis.chartState = chartState;\n\t\tthis.calculatedOptions = Utils.deepMerge(this.chartState.data.trendDefaultState, options);\n\t\tthis.calculatedOptions.name = trendName;\n\t\tif (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t\tthis.calculatedOptions.dataset = [];\n\t\tthis.ee = new EventEmitter();\n\t\tthis.bindEvents();\n\t}\n\n\tprivate onInitialStateApplied() {\n\t\tthis.segmentsManager = new TrendSegmentsManager(this.chartState, this);\n\t}\n\n\tprivate bindEvents() {\n\t\tvar chartState = this.chartState;\n\t\tchartState.onInitialStateApplied(() => this.onInitialStateApplied());\n\t\tchartState.onScrollStop(() => this.checkForPrependRequest());\n\t\tchartState.onZoom(() => this.checkForPrependRequest());\n\t\tchartState.onTrendChange((trendName, changedOptions, newData) => this.ee.emit(EVENTS.CHANGE, changedOptions, newData));\n\t\tchartState.onDestroy(() => this.ee.removeAllListeners());\n\t}\n\n\tgetCalculatedOptions() {\n\t\treturn this.calculatedOptions;\n\t}\n\n\tappendData(rawData: TTrendRawData) {\n\t\tvar options = this.getOptions();\n\t\tvar newData = Trend.prepareData(rawData, this.getData());\n\t\tvar updatedTrendData = options.data.concat(newData);\n\t\tthis.changeData(updatedTrendData, newData);\n\t}\n\n\tprependData(rawData: TTrendRawData) {\n\t\tvar options = this.getOptions();\n\t\tvar newData = Trend.prepareData(rawData, this.getData(), true);\n\t\tvar updatedTrendData = newData.concat(options.data);\n\t\tthis.changeData(updatedTrendData, newData);\n\t}\n\n\tprivate changeData(allData: ITrendData, newData: ITrendData) {\n\t\tfor (let item of newData) {\n\t\t\tif (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t\t\tif (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t\t\tif (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t\t\tif (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t\t}\n\t\tvar options = this.getOptions();\n\t\tvar statePatch: IChartState = {trends: {[options.name]: {data: allData}}};\n\t\tthis.chartState.setState(statePatch, newData);\n\t}\n\t\n\tgetData(fromX?: number, toX?: number): ITrendData {\n\t\tvar data = this.getOptions().data;\n\t\tif (fromX == void 0 && toX == void 0) return data;\n\n\t\tfromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t\ttoX = toX !== void 0 ? toX : data[data.length].xVal;\n\t\tvar filteredData: ITrendData = [];\n\t\tfor (let item of data) {\n\t\t\tif (item.xVal < fromX) continue;\n\t\t\tif (item.xVal > toX) break;\n\t\t\tfilteredData.push(item)\n\t\t}\n\t\treturn filteredData;\n\t}\n\n\tgetFirstItem(): ITrendItem {\n\t\treturn this.getOptions().data[0];\n\t}\n\t\n\tgetLastItem(): ITrendItem {\n\t\tvar data = this.getOptions().data;\n\t\treturn data[data.length - 1];\n\t}\n\n\tgetOptions() {\n\t\treturn this.chartState.data.trends[this.name]\n\t}\n\n\tsetOptions(options: ITrendOptions) {\n\t\tthis.chartState.setState({trends: {[this.name]: options}});\n\t}\n\n\tonPrependRequest(cb: IPrependPromiseExecutor): Function {\n\t\tthis.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t\treturn () => {\n\t\t\tthis.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t\t}\n\t}\n\n\t/**\n\t * shortcut for ChartState.onTrendChange\n\t */\n\tonChange(cb: (changedOptions: ITrendOptions, newData: ITrendData) => void): Function {\n\t\tthis.ee.on(EVENTS.CHANGE, cb);\n\t\treturn () => { this.ee.off(EVENTS.CHANGE, cb);}\n\t}\n\n\tonDataChange(cb: (newData: ITrendData) => void): Function {\n\t\tvar onChangeCb = (changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tif (newData) cb(newData);\n\t\t};\n\t\tthis.ee.on(EVENTS.CHANGE, onChangeCb);\n\t\treturn () => {\n\t\t\tthis.ee.off(EVENTS.CHANGE, onChangeCb);\n\t\t}\n\t}\n\n\tprivate checkForPrependRequest() {\n\t\tif (this.prependRequest) return;\n\t\tvar chartState = this.chartState;\n\t\tvar minXVal = chartState.data.computedData.trends.minXVal;\n\t\tvar minScreenX = chartState.getScreenXByValue(minXVal);\n\t\tvar needToRequest = minScreenX > 0;\n\t\tvar {from, to} = chartState.data.xAxis.range;\n\t\tvar requestedDataLength = to - from;\n\t\tif (!needToRequest) return;\n\t\t\n\t\tthis.prependRequest = new Promise<TTrendRawData>((resolve: Function, reject: Function) => {\n\t\t\tthis.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t\t});\n\n\t\tthis.prependRequest.then((newData: TTrendRawData) => {\n\t\t\tthis.prependData(newData);\n\t\t\tthis.prependRequest = null;\n\t\t}, () => {\n\t\t\tthis.prependRequest = null;\n\t\t})\n\t\n\t}\n\n\tstatic prepareData (newData: TTrendRawData, currentData?: ITrendData, isPrepend = false): ITrendData {\n\t\tvar data: ITrendData = [];\n\t\tif (typeof newData[0] == 'number') {\n\t\t\tcurrentData = currentData || [];\n\t\t\tlet initialItem: ITrendItem;\n\t\t\tlet xVal: number;\n\t\t\tif (isPrepend) {\n\t\t\t\tinitialItem = currentData[0];\n\t\t\t\txVal = initialItem.xVal - newData.length;\n\t\t\t} else {\n\t\t\t\tinitialItem = currentData[currentData.length - 1];\n\t\t\t\txVal = initialItem ? initialItem.xVal + 1 : 0;\n\t\t\t}\n\t\t\tfor (let yVal of newData as number[]) {\n\t\t\t\tdata.push({xVal: xVal, yVal: yVal, id: Utils.getUid()});\n\t\t\t\txVal++;\n\t\t\t}\n\t\t} else {\n\t\t\tdata = newData as ITrendData;\n\t\t}\n\t\treturn data;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Trend.ts\n **/","import { IIteralable } from \"./interfaces\";\nimport { EventEmitter } from './EventEmmiter';\nimport { ChartState } from \"./State\";\nimport Vector3 = THREE.Vector3;\nimport { ITrendData, ITrendOptions, ITrendItem, Trend, TREND_TYPE, ITrendTypeSettings } from \"./Trend\";\nimport { Utils } from \"./Utils\";\n\nconst MAX_ANIMATED_SEGMENTS = 100;\nconst EVENTS = {\n\tREBUILD: 'rebuild',\n\tDISLPAYED_RANGE_CHANGED: 'displayedRangeChanged',\n\tANIMATION_FRAME: 'animationFrame'\n};\n\n/**\n *  Class helps to display and animate trends segments\n */\nexport class TrendSegmentsManager {\n\tsegmentsById: {[id: string]: TrendSegment} = {};\n\tsegments: TrendSegment[] = [];\n\tchartState: ChartState;\n\tanimatedSegmentsIds: number[] = [];\n\tmaxSegmentLength: number;\n\tsegmentsLength = 0;\n\tfirstDisplayedSegmentInd: number;\n\tfirstDisplayedSegment: TrendSegment;\n\tlastDisplayedSegmentInd: number;\n\tlastDisplayedSegment: TrendSegment;\n\tprivate appendAnimation: TweenLite;\n\tprivate prependAnimation: TweenLite;\n\tprivate animatedSegmentsForAppend: number[] = [];\n\tprivate animatedSegmentsForPrepend: number[] = [];\n\tprivate nextEmptyId = 0;\n\tprivate startSegmentId = 0;\n\tprivate endSegmentId = 0;\n\tprivate trend: Trend;\n\tprivate ee: EventEmitter;\n\n\tconstructor (chartState: ChartState, trend: Trend) {\n\t\tthis.chartState = chartState;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.trend = trend;\n\t\tthis.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t\tthis.tryToRebuildSegments();\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.trend.onChange((changedOptions, newData) => this.onTrendChangeHandler(changedOptions, newData));\n\t\tthis.chartState.onZoom(() => this.onZoomHandler());\n\t\tthis.chartState.onScroll(() => this.recalculateDisplayedRange());\n\t\tthis.chartState.onDestroy(() => this.onDestroyHandler());\n\t}\n\n\tprivate onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t\tthis.appendAnimation && this.appendAnimation.kill();\n\t\tthis.prependAnimation && this.prependAnimation.kill();\n\t}\n\n\tprivate onZoomHandler() {\n\t\tlet segmentsRebuilded = this.tryToRebuildSegments();\n\t\tif (!segmentsRebuilded) {\n\t\t\tthis.recalculateDisplayedRange()\n\t\t}\n\t}\n\n\tprivate onTrendChangeHandler(changedOptions: ITrendOptions, newData: ITrendData) {\n\t\tvar needToRebuildSegments = (\n\t\t\tchangedOptions.type != void 0 ||\n\t\t\tchangedOptions.maxSegmentLength != void 0\n\t\t);\n\n\n\t\tif (needToRebuildSegments) {\n\t\t\tthis.tryToRebuildSegments(true);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!newData) return;\n\n\t\tvar data = this.trend.getData();\n\t\tvar isAppend = (!data.length || data[0].xVal < newData[0].xVal);\n\t\tisAppend ? this.appendData(newData) : this.prependData(newData);\n\t\tthis.recalculateDisplayedRange();\n\t}\n\n\tgetSegment(id: number) {\n\t\treturn this.segmentsById[id];\n\t}\n\n\tgetEndSegment(): TrendSegment {\n\t\treturn this.segmentsById[this.endSegmentId];\n\t}\n\n\tgetStartSegment(): TrendSegment {\n\t\treturn this.segmentsById[this.startSegmentId];\n\t}\n\t\n\tprivate tryToRebuildSegments(force = false): boolean {\n\t\tlet options = this.trend.getOptions();\n\t\tlet trendTypeName = TREND_TYPE[options.type] as string;\n\t\tlet trendTypesSettings =  options.settingsForTypes as IIteralable;\n\t\tlet trendTypeSettings = trendTypesSettings[trendTypeName] as ITrendTypeSettings;\n\t\tlet {\n\t\t\tminSegmentLengthInPx,\n\t\t\tmaxSegmentLengthInPx\n\t\t} = trendTypeSettings;\n\n\t\tlet needToRebuild = this.segments.length === 0 || force;\n\t\tlet segmentLength = this.maxSegmentLength;\n\n\t\t// call toFixed(2) to prevent floating segment error compare\n\t\tlet currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t\tlet currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\n\t\tif (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t\t\tneedToRebuild = true;\n\t\t\tsegmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t\t} else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t\t\tneedToRebuild = true;\n\t\t\tsegmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t\t}\n\n\t\tif (!needToRebuild) return false;\n\n\t\tthis.maxSegmentLength = segmentLength;\n\t\tthis.segmentsById = {};\n\t\tthis.segments = [];\n\t\tthis.nextEmptyId = 0;\n\t\tthis.startSegmentId = 0;\n\t\tthis.endSegmentId = 0;\n\t\tthis.segmentsLength = 0;\n\t\tthis.stopAllAnimations();\n\t\tthis.appendData(null, true);\n\t\tthis.recalculateDisplayedRange(true);\n\t\tthis.ee.emit(EVENTS.REBUILD);\n\t}\n\n\tprivate stopAllAnimations() {\n\t\tthis.animatedSegmentsIds = [];\n\t\tthis.animatedSegmentsForAppend = [];\n\t\tthis.animatedSegmentsForAppend = [];\n\t\tif (this.prependAnimation) this.prependAnimation.kill();\n\t\tif (this.appendAnimation) this.appendAnimation.kill();\n\t}\n\t\n\tprivate recalculateDisplayedRange(segmentsAreRebuilded = false) {\n\t\tvar {from, to} = this.chartState.data.xAxis.range;\n\t\tvar {firstDisplayedSegment, lastDisplayedSegment} = this;\n\t\tvar displayedRange = to - from;\n\n\t\tthis.firstDisplayedSegmentInd = Utils.binarySearchClosestInd(this.segments, from - displayedRange, 'startXVal');\n\t\tthis.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t\tthis.lastDisplayedSegmentInd = Utils.binarySearchClosestInd(this.segments, to + displayedRange, 'endXVal');\n\t\tthis.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t\tif (segmentsAreRebuilded) return;\n\n\t\tvar displayedRangeChanged = (\n\t\t\tfirstDisplayedSegment.id !== this.firstDisplayedSegment.id ||\n\t\t\tlastDisplayedSegment.id !== this.lastDisplayedSegment.id\n\t\t);\n\t\tif (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t}\n\n\t// getSegments(fromX?: number, toX?: number): TrendSegment[] {\n\t// \tvar segments = this.segments;\n\t// \tif (fromX == void 0 && toX == void 0) return segments;\n\t// \tfromX = fromX !== void 0 ? fromX : segments[0].startXVal;\n\t// \ttoX = toX !== void 0 ? toX : segments[this.segmentsLength].endXVal;\n\t// \tvar startSegmentInd = Utils.closestBinarySearch(segments, fromX, 'xVal');\n\t// \tvar endSegmentInd = Utils.closestBinarySearch(segments, toX, 'xVal');\n\t// \treturn segments.slice(startSegmentInd, endSegmentInd);\n\t// }\n\n\t/**\n\t * returns array of segments for values array\n\t * values must be sorted!\n\t */\n\tgetSegmentsForXValues(values: number[]): TrendSegment[] {\n\t\tvar valueInd = 0;\n\t\tvar value = values[valueInd];\n\t\tvar lastValueInd = values.length - 1;\n\t\tvar results: TrendSegment[] = [];\n\t\tvar segment = this.getStartSegment();\n\t\tif (!segment.hasValue) return [];\n\t\twhile (segment) {\n\t\t\n\t\t\twhile (value < segment.startXVal) {\n\t\t\t\tresults.push(void 0);\n\t\t\t\tvalue = values[++valueInd];\n\t\t\t}\n\t\t\n\t\t\twhile (value > segment.endXVal) {\n\t\t\t\tsegment = segment.getNext();\n\t\t\t\tif (!segment) break;\n\t\t\t}\n\t\t\n\t\t\tvar valueInPoint = (\n\t\t\t\tsegment.startXVal == value || segment.endXVal == value ||\n\t\t\t\t(segment.startXVal < value && segment.endXVal > value)\n\t\t\t);\n\t\t\tif (valueInPoint) {\n\t\t\t\tresults.push(segment);\n\t\t\t\tvalue = values[++valueInd];\n\t\t\t}\n\t\t\tif (valueInd > lastValueInd) break;\n\t\t}\n\t\treturn results;\n\t}\n\n\tonAnimationFrame(cb: (animationState: TrendSegmentsManager) => void): Function {\n\t\treturn this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t}\n\n\tonRebuild(cb: Function) {\n\t\treturn this.ee.subscribe(EVENTS.REBUILD, cb);\n\t}\n\n\tonDisplayedRangeChanged(cb: Function) {\n\t\treturn this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t}\n\t\n\tallocateNextSegment() {\n\t\tvar id = this.nextEmptyId++;\n\t\tvar segment = new TrendSegment(this, id);\n\t\tvar prevSegment = this.segmentsById[this.endSegmentId];\n\t\tif (prevSegment && prevSegment.hasValue) {\n\t\t\tprevSegment.nextId = id;\n\t\t\tsegment.prevId = prevSegment.id;\n\t\t}\n\t\tthis.endSegmentId = id;\n\t\tthis.segmentsLength++;\n\t\tthis.segmentsById[id] = segment;\n\t\tthis.segments.push(segment);\n\t\treturn segment;\n\t}\n\n\tallocatePrevSegment() {\n\t\tvar id = this.nextEmptyId++;\n\t\tvar segment = new TrendSegment(this, id);\n\t\tvar nextSegment = this.segmentsById[this.startSegmentId];\n\t\tif (nextSegment && nextSegment.hasValue) {\n\t\t\tnextSegment.prevId = id;\n\t\t\tsegment.nextId = nextSegment.id;\n\t\t}\n\t\tthis.startSegmentId = id;\n\t\tthis.segmentsLength++;\n\t\tthis.segmentsById[id] = segment;\n\t\tthis.segments.unshift(segment);\n\t\treturn segment;\n\t}\n\n\tprivate appendData(newData: ITrendData, needRebuildSegments = false) {\n\n\t\t// WARNING: bottleneck method!\n\n\t\t// var t1 = performance.now();\n\t\tvar trendData = this.trend.getData();\n\t\tif (needRebuildSegments) {\n\t\t\tnewData = trendData;\n\t\t\tthis.animatedSegmentsForAppend = [];\n\t\t}\n\n\t\tvar startItemInd = trendData.length - newData.length;\n\t\tvar segment = this.getEndSegment() || this.allocateNextSegment();\n\t\tvar initialSegment = segment.hasValue ? segment : null;\n\t\tvar initialAnimationState = segment.createAnimationState();\n\t\tvar itemInd = 0;\n\t\twhile (itemInd < newData.length) {\n\t\t\tlet item = newData[itemInd];\n\t\t\tlet itemIsInserted = segment.appendItem(item);\n\t\t\tlet isLastItem = itemInd == newData.length - 1;\n\n\t\t\tif (itemIsInserted) {\n\t\t\t\tif (!isLastItem) itemInd++;\n\t\t\t} else {\n\t\t\t\tif (!segment.isCompleted) segment.complete();\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) {\n\t\t\t\tsegment.recalculateItems();\n\t\t\t}\n\n\t\t\tlet segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\n\t\t\tif (segmentIsReadyForAnimate) {\n\t\t\t\tlet id = segment.id;\n\t\t\t\tif (!initialSegment) initialSegment = segment;\n\t\t\t\tif (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\n\t\t\t\tsegment.initialAnimationState = Utils.deepMerge({}, initialAnimationState);\n\t\t\t\tif (this.animatedSegmentsForAppend.length > 0) {\n\t\t\t\t\tsegment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t\t\t\t\tsegment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t\t\t\t}\n\n\t\t\t\tsegment.targetAnimationState = segment.createAnimationState();\n\t\t\t\tthis.animatedSegmentsForAppend.push(id);\n\n\t\t\t}\n\n\n\t\t\tif (isLastItem && itemIsInserted) break;\n\t\t\tif (!segment.isCompleted) continue;\n\n\t\t\tsegment = this.allocateNextSegment();\n\t\t\tlet prevItem = trendData[startItemInd + itemInd - 1];\n\t\t\tsegment.appendItem(prevItem);\n\n\t\t}\n\n\t\tvar animationsOptions = this.chartState.data.animations;\n\t\tvar time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\n\t\t// var t2 = performance.now();\n\t\t// console.log(t2 - t1);\n\n\t\t// do not create animation if segments was rebuilded\n\t\tif (needRebuildSegments) {\n\t\t\tfor (let segmentId of this.animatedSegmentsForAppend) {\n\t\t\t\tlet segment = this.segmentsById[segmentId];\n\t\t\t\tsegment.currentAnimationState = segment.createAnimationState();\n\t\t\t}\n\t\t\tthis.animatedSegmentsForAppend = [];\n\t\t\treturn;\n\t\t}\n\t\tif (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t\tthis.animate(time);\n\t}\n\n\n\t// TODO: refactor duplicated code from appendData\n\tprivate prependData(newData: ITrendData) {\n\t\tvar trendData = this.trend.getData();\n\t\tvar segment = this.getStartSegment() || this.segmentsById[0];\n\t\tvar initialSegment = segment.hasValue ? segment : null;\n\t\tvar itemInd = newData.length - 1;\n\t\tvar initialAnimationState = segment.createAnimationState();\n\t\twhile (itemInd >= 0) {\n\t\t\tlet item = newData[itemInd];\n\t\t\tlet itemIsInserted = segment.prependItem(item);\n\t\t\tlet isLastItem = itemInd == 0;\n\n\t\t\tif (itemIsInserted) {\n\t\t\t\tif (!isLastItem) itemInd--;\n\t\t\t} else {\n\t\t\t\tif (!segment.isCompleted) segment.complete();\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) {\n\t\t\t\tsegment.recalculateItems();\n\t\t\t}\n\n\t\t\tlet segmentIsReadyForAnimate = segment.isCompleted || (isLastItem && itemIsInserted);\n\t\t\tif (segmentIsReadyForAnimate) {\n\t\t\t\tlet id = segment.id;\n\t\t\t\tif (!initialSegment) initialSegment = segment;\n\t\t\t\tif (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\n\t\t\t\tsegment.initialAnimationState = Utils.deepMerge({}, initialAnimationState);\n\t\t\t\tif (this.animatedSegmentsForPrepend.length > 0) {\n\t\t\t\t\tsegment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t\t\t\t\tsegment.initialAnimationState.endYVal =  initialAnimationState.startYVal;\n\t\t\t\t}\n\n\t\t\t\tsegment.targetAnimationState = segment.createAnimationState();\n\t\t\t\tthis.animatedSegmentsForPrepend.push(id);\n\n\t\t\t}\n\n\t\t\tif (isLastItem && itemIsInserted) break;\n\t\t\tif (!segment.isCompleted) continue;\n\n\t\t\tsegment = this.allocatePrevSegment();\n\t\t\tlet nextItem = trendData[itemInd + 1];\n\t\t\tsegment.prependItem(nextItem);\n\n\t\t}\n\n\t\tvar animationsOptions = this.chartState.data.animations;\n\t\tvar time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\n\t\tif (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t\tthis.animate(time, true);\n\t}\n\n\tprivate animate(time: number, isPrepend = false) {\n\n\t\tvar animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t\tvar animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\n\t\tif ((animation && animation.isActive()) || time == 0) {\n\t\t\tif (animation) animation.kill();\n\t\t\tthis.onAnimationFrameHandler(1, isPrepend);\n\t\t\tanimatedSegmentsIds.length = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar animationsOptions = this.chartState.data.animations;\n\t\tvar ease = animationsOptions.trendChangeEase;\n\t\tvar objectToAnimate = {animationValue: 0};\n\t\tanimation = TweenLite.to(objectToAnimate, time, {animationValue: 1, ease});\n\t\tanimation.eventCallback('onUpdate', () => this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend));\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimatedSegmentsIds.length = 0;\n\t\t\tthis.appendAnimation = null;\n\t\t});\n\n\t\tif (isPrepend) {\n\t\t\tthis.prependAnimation = animation;\n\t\t} else {\n\t\t\tthis.appendAnimation = animation;\n\t\t}\n\t}\n\n\tprivate onAnimationFrameHandler(coefficient: number, isPrepend = false) {\n\t\tlet animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t\tfor (let segmentId of animatedSegmentsIds) {\n\t\t\tlet segment = this.segmentsById[segmentId];\n\t\t\tfor (let key in segment.targetAnimationState) {\n\t\t\t\tlet targetValue = segment.targetAnimationState[key] as number;\n\t\t\t\tlet initialValue = segment.initialAnimationState[key] as number;\n\t\t\t\tlet currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t\t\t\tsegment.currentAnimationState[key] = currentValue;\n\t\t\t}\n\t\t}\n\t\tthis.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t\tthis.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t}\n\n}\n\nexport interface ITrendSegmentState extends IIteralable {\n\txVal?: number;\n\tyVal?: number;\n\tstartXVal?: number;\n\tstartYVal?: number;\n\tendXVal?: number;\n\tendYVal?: number;\n\tmaxYVal?: number;\n\tminYVal?: number;\n\tmaxLength?: number;\n}\n\nexport class TrendSegment implements ITrendSegmentState {\n\tid: number;\n\tprevId: number;\n\tnextId: number;\n\thasValue: boolean;\n\txVal: number;\n\tyVal: number;\n\tstartXVal: number;\n\tstartYVal: number;\n\tendXVal: number;\n\tendYVal: number;\n\tmaxYVal: number;\n\tminYVal: number;\n\tisCompleted = false;\n\tmaxLength: number;\n\titems: ITrendItem[] = [];\n\n\tinitialAnimationState: ITrendSegmentState = {};\n\ttargetAnimationState: ITrendSegmentState = {};\n\tcurrentAnimationState: ITrendSegmentState = {};\n\n\tprivate trendSegments: TrendSegmentsManager;\n\t\n\tconstructor(trendPoints: TrendSegmentsManager, id: number) {\n\t\tthis.trendSegments = trendPoints;\n\t\tthis.id = id;\n\t\tthis.maxLength = trendPoints.maxSegmentLength;\n\t}\n\n\tcreateAnimationState(): ITrendSegmentState {\n\t\tvar {\n\t\t\txVal,\n\t\t\tyVal,\n\t\t\tstartXVal,\n\t\t\tstartYVal,\n\t\t\tendXVal,\n\t\t\tendYVal,\n\t\t\tmaxYVal,\n\t\t\tminYVal,\n\t\t\tmaxLength\n\t\t} = this;\n\t\treturn {\n\t\t\txVal,\n\t\t\tyVal,\n\t\t\tstartXVal,\n\t\t\tstartYVal,\n\t\t\tendXVal,\n\t\t\tendYVal,\n\t\t\tmaxYVal,\n\t\t\tminYVal,\n\t\t\tmaxLength\n\t\t}\n\t};\n\t\n\tappendItem(item: ITrendItem): boolean {\n\t\tif (this.isCompleted) return false;\n\n\t\tvar items = this.items;\n\t\tif (items.length < 2) {\n\t\t\tthis.items.push(item);\n\t\t\tthis.hasValue = true;\n\t\t\treturn true;\n\t\t}\n\t\tvar startXVal = items[0].xVal;\n\t\tif (item.xVal - startXVal > this.maxLength) return false;\n\t\titems.push(item);\n\t\treturn true;\n\t}\n\n\tprependItem(item: ITrendItem): boolean {\n\t\tif (this.isCompleted) return false;\n\t\tvar items = this.items;\n\t\tif (items.length < 2) {\n\t\t\tthis.items.unshift(item);\n\t\t\tthis.hasValue = true;\n\t\t\treturn true;\n\t\t}\n\t\tvar endXVal = items[items.length - 1].xVal;\n\t\tif (endXVal - item.xVal > this.maxLength) return false;\n\t\titems.unshift(item);\n\t\treturn true;\n\t}\n\n\tcomplete() {\n\t\tthis.isCompleted = true;\n\t\tthis.recalculateItems();\n\t\tthis.items = []; // free memory for completed ranges\n\t}\n\n\trecalculateItems() {\n\t\tlet items = this.items;\n\t\tlet itemsLength = items.length;\n\t\tif (itemsLength === 0) Utils.error('Unable to create TrendSegment without TrendItems');\n\t\tlet endItem = items[itemsLength - 1];\n\t\tlet {xVal: endXVal, yVal: endYVal} = endItem;\n\t\tlet startXVal: number, startYVal: number;\n\n\n\t\tlet startItem = items[0];\n\t\tstartXVal = startItem.xVal;\n\t\tstartYVal = startItem.yVal;\n\n\t\tlet minX = Math.min(startXVal, endXVal);\n\t\tlet maxX = Math.max(startXVal, endXVal);\n\t\tlet middleXVal = minX + (maxX - minX) / 2;\n\n\t\tlet minY = Math.min(startYVal, endYVal);\n\t\tlet maxY = Math.max(startYVal, endYVal);\n\t\tlet middleYVal = minY + (maxY - minY) / 2;\n\n\t\tlet yVals = items.map(item => item.yVal);\n\n\t\tthis.startXVal = startXVal;\n\t\tthis.startYVal = startYVal;\n\t\tthis.endXVal = endXVal;\n\t\tthis.endYVal = endYVal;\n\t\tthis.xVal = middleXVal;\n\t\tthis.yVal = middleYVal;\n\t\tthis.maxYVal = Math.max(...yVals);\n\t\tthis.minYVal = Math.min(...yVals);\n\t\tif (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t}\n\n\tgetNext() {\n\t\tvar nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t\treturn nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t}\n\n\tgetPrev() {\n\t\tvar prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t\treturn prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t}\n\t\n\tgetFrameVal(): Vector3 {\n\t\tlet {xVal, yVal} = this.createAnimationState();\n\t\treturn new Vector3(xVal, yVal, 0);\n\t}\n\n\tgetFramePoint(): Vector3 {\n\t\tvar frameVal = this.getFrameVal();\n\t\treturn this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TrendSegmentsManager.ts\n **/","\nimport {Trend, ITrendOptions} from \"./Trend\";\nimport {ChartState, IChartState} from \"./State\";\nimport { EventEmitter } from './EventEmmiter';\n\nexport interface ITrendsOptions {\n\t[trendName: string]: ITrendOptions;\n}\n\nconst EVENTS = {\n\tSEGMENTS_REBUILDED: 'segmentsRebuilded'\n};\n\n/**\n * Trends manager\n */\nexport class TrendsManager {\n\ttrends: {[name: string]: Trend} = {};\n\tcalculatedOptions: ITrendsOptions;\n\tprivate ee = new EventEmitter();\n\tprivate chartState: ChartState;\n\t\n\tconstructor(state: ChartState, initialState: IChartState) {\n\t\tthis.chartState = state;\n\t\tvar trendsCalculatedOptions: ITrendsOptions = {};\n\t\tfor (let trendName in initialState.trends) {\n\t\t\tlet trend = this.createTrend(state, trendName, initialState);\n\t\t\ttrendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t\t}\n\t\tthis.calculatedOptions = trendsCalculatedOptions;\n\t\tthis.bindEvents();\n\t}\n\n\tgetTrend(trendName: string) {\n\t\treturn this.trends[trendName];\n\t}\n\t\n\tgetEnabledTrends(): Trend[] {\n\t\tvar enabledTrends: Trend[] = [];\n\t\tvar allTrends = this.trends;\n\t\tfor (let trendName in allTrends) {\n\t\t\tlet trend = allTrends[trendName];\n\t\t\ttrend.getOptions().enabled && enabledTrends.push(trend);\n\t\t}\n\t\treturn enabledTrends;\n\t}\n\n\n\tgetStartXVal() {\n\t\tvar trends = this.getEnabledTrends();\n\t\treturn trends[0].getData()[0].xVal;\n\t}\n\n\n\tgetEndXVal(): number {\n\t\tvar trends = this.getEnabledTrends();\n\t\tvar firstTrendData = trends[0].getData();\n\t\treturn firstTrendData[firstTrendData.length - 1].xVal;\n\t}\n\t\n\t\n\tgetExtremumYVal(extremumIsMax: boolean, fromX?: number, toX?: number) {\n\t\tvar trends = this.getEnabledTrends();\n\t\tvar compareFn: Function;\n\t\tvar result: number;\n\t\tif (extremumIsMax) {\n\t\t\tresult = -Infinity;\n\t\t\tcompareFn = Math.max;\n\t\t} else {\n\t\t\tresult = Infinity;\n\t\t\tcompareFn = Math.min;\n\t\t}\n\t\tfor (let trend of trends) {\n\t\t\tvar trendData = trend.getData(fromX, toX);\n\t\t\tvar trendYValues = trendData.map((dataItem) => dataItem.yVal);\n\t\t\tresult = compareFn(result, ...trendYValues);\n\t\t}\n\t\tif (result == Infinity || result == -Infinity) result = NaN;\n\t\treturn result;\n\t}\n\n\tgetMaxYVal(fromX?: number, toX?: number) {return this.getExtremumYVal(true, fromX, toX)}\n\tgetMinYVal(fromX?: number, toX?: number) {return this.getExtremumYVal(false, fromX, toX)}\n\n\tonSegmentsRebuilded(cb: (trendName: string) => any) {\n\t\treturn this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t}\n\n\tprivate bindEvents() {\n\t\tthis.chartState.onInitialStateApplied(() => this.onInitialStateAppliedHandler());\n\t}\n\n\tprivate onInitialStateAppliedHandler() {\n\t\tfor (let trendName in this.trends) {\n\t\t\tthis.trends[trendName].segmentsManager.onRebuild(() => this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName));\n\t\t}\n\t}\n\n\tprivate createTrend(state: ChartState, trendName: string, initialState: IChartState): Trend {\n\t\tlet trend = new Trend(state, trendName, initialState);\n\t\tthis.trends[trendName] = trend;\n\t\treturn trend;\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/TrendsManager.ts\n **/","import PerspectiveCamera = THREE.PerspectiveCamera;\nimport Vector3 = THREE.Vector3;\nimport {ChartState, IChartState} from \"./State\";\nimport forestgreen = THREE.ColorKeywords.forestgreen;\nimport {EventEmitter} from './EventEmmiter';\n\nexport interface IScreenTransformOptions {\n\tscrollXVal?: number,\n\tscrollYVal?: number,\n\tscrollX?: number,\n\tscrollY?: number,\n\tzoomX?: number,\n\tzoomY?: number\n}\n\n/**\n * manage camera, and contains methods for transforming pixels to values\n */\nexport class Screen {\n\toptions: IScreenTransformOptions = {scrollXVal: 0, scrollX: 0, scrollYVal: 0, scrollY: 0, zoomX: 1, zoomY: 1};\n\tprivate chartState: ChartState;\n\tprivate scrollXAnimation: TweenLite;\n\tprivate scrollYAnimation: TweenLite;\n\tprivate zoomXAnimation: TweenLite;\n\tprivate zoomYAnimation: TweenLite;\n\tprivate currentScrollX = {x: 0};\n\tprivate currentScrollY = {y: 0};\n\tprivate currentZoomX = {val: 1};\n\tprivate currentZoomY = {val: 1};\n\tprivate ee: EventEmitter;\n\n\tconstructor(chartState: ChartState) {\n\t\tthis.chartState = chartState;\n\t\tvar {width: w, height: h} = chartState.data;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.transform({\n\t\t\tscrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n\t\t\tzoomY: 1\n\t\t});\n\t\tthis.bindEvents();\n\n\t\t//camera.position.z = 1500;\n\t}\n\t\n\tgetCameraSettings() {\n\n\t\tvar {width: w, height: h} = this.chartState.data;\n\n\t\t// settings for pixel-perfect camera\n\t\tvar FOV = 75;\n\t\tvar vFOV = FOV * (Math.PI / 180);\n\t\t\n\t\treturn {\n\t\t\tFOV: FOV,\n\t\t\taspect: w / h,\n\t\t\tnear: 0.1,\n\t\t\tfar: 5000,\n\t\t\tz: h / (2 * Math.tan(vFOV / 2) ),\n\n\t\t\t// move 0,0 to left-bottom corner\n\t\t\tx: w / 2,\n\t\t\ty: h / 2\n\t\t}\n\t}\n\n\tonZoomFrame(cb: (zoomX: number, zoomY: number) => void): Function {\n\t\tvar eventName = 'zoomFrame';\n\t\tthis.ee.on(eventName, cb);\n\t\treturn () => {\n\t\t\tthis.ee.off(eventName, cb);\n\t\t}\n\t}\n\n\tonScrollFrame(cb: (options: IScreenTransformOptions) => void): Function {\n\t\tvar eventName = 'scrollFrame';\n\t\tthis.ee.on(eventName, cb);\n\t\treturn () => {\n\t\t\tthis.ee.off(eventName, cb);\n\t\t}\n\t}\n\n\tonTransformationFrame(cb: (options: IScreenTransformOptions) => void): Function {\n\t\tvar eventName = 'transformationFrame';\n\t\tthis.ee.on(eventName, cb);\n\t\treturn () => {\n\t\t\tthis.ee.off(eventName, cb);\n\t\t}\n\t}\n\n\tcameraIsMoving(): boolean {\n\t\treturn !!(\n\t\t\tthis.scrollXAnimation && this.scrollXAnimation.isActive() ||\n\t\t\t\tthis.zoomXAnimation && this.zoomXAnimation.isActive()\n\t\t);\n\t}\n\n\tprivate transform (options: IScreenTransformOptions, silent = false) {\n\t\tvar {scrollX, scrollY, zoomX, zoomY} = options;\n\t\t\n\t\tif (scrollX != void 0) this.options.scrollX = scrollX;\n\t\tif (scrollY != void 0) this.options.scrollY = scrollY;\n\t\tif (zoomX != void 0) this.options.zoomX = zoomX;\n\t\tif (zoomY != void 0) this.options.zoomY = zoomY;\n\n\t\tif (scrollX != void 0 || zoomX) {\n\t\t\toptions.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t\t\tthis.options.scrollXVal = options.scrollXVal;\n\t\t}\n\n\t\tif (scrollY != void 0 || zoomY) {\n\t\t\toptions.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t\t\tthis.options.scrollYVal = options.scrollYVal;\n\t\t}\n\n\t\tif (silent) return;\n\n\t\tthis.ee.emit('transformationFrame', options);\n\t\t\n\t\tif (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t\t\tthis.ee.emit('scrollFrame', options);\n\t\t}\n\t\t\n\t\tif (options.zoomX != void 0 || options.zoomY != void 0) {\n\t\t\tthis.ee.emit('zoomFrame', options);\n\t\t}\n\t}\n\n\n\tprivate bindEvents() {\n\t\tvar state = this.chartState;\n\n\t\t// handle scroll and zoom\n\t\tstate.onChange((changedProps) => {\n\t\t\tif (changedProps.xAxis && changedProps.xAxis.range) {\n\t\t\t\tif (changedProps.xAxis.range.scroll != void 0) this.onScrollXHandler(changedProps);\n\t\t\t\tif (changedProps.xAxis.range.zoom) this.onZoomXHandler();\n\t\t\t}\n\t\t\tif (changedProps.yAxis && changedProps.yAxis.range){\n\t\t\t\tif (changedProps.yAxis.range.scroll != void 0) this.onScrollYHandler();\n\t\t\t\tif (changedProps.yAxis.range.zoom) this.onZoomYHandler();\n\t\t\t}\n\t\t});\n\t\tstate.onDestroy(() => this.onDestroyHandler());\n\t}\n\n\tprivate onDestroyHandler() {\n\t\tthis.ee.removeAllListeners();\n\t\tthis.scrollXAnimation && this.scrollXAnimation.kill();\n\t\tthis.scrollYAnimation && this.scrollYAnimation.kill();\n\t\tthis.zoomXAnimation && this.zoomXAnimation.kill();\n\t\tthis.zoomYAnimation && this.zoomYAnimation.kill();\n\t}\n\n\tprivate onScrollXHandler(changedProps: IChartState) {\n\t\tvar state = this.chartState;\n\t\tvar isDragMode = state.data.cursor.dragMode;\n\t\tvar animations =  state.data.animations;\n\t\tvar canAnimate = animations.enabled && !isDragMode;\n\t\tvar zoomXChanged = changedProps.xAxis.range.zoom;\n\t\tvar isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n\t\tvar time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t\tvar ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t\tif (this.scrollXAnimation) this.scrollXAnimation.pause();\n\n\t\tvar range = state.data.xAxis.range;\n\t\tvar targetX = range.scroll * range.scaleFactor * range.zoom;\n\t\tthis.currentScrollX.x = this.options.scrollX;\n\n\t\tvar cb = () => {\n\t\t\tthis.transform({scrollX: this.currentScrollX.x});\n\t\t};\n\n\t\tif (canAnimate) {\n\t\t\tthis.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t\t\t\tx: targetX, ease: ease\n\t\t\t});\n\t\t\tthis.scrollXAnimation.eventCallback('onUpdate', cb);\n\t\t} else {\n\t\t\tthis.currentScrollX.x = targetX;\n\t\t\tcb();\n\t\t}\n\n\t}\n\n\tprivate onScrollYHandler() {\n\t\tvar state = this.chartState;\n\t\tvar animations =  state.data.animations;\n\t\tvar canAnimate = animations.enabled;\n\t\tvar time = animations.zoomSpeed;\n\t\tif (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t\tvar range = state.data.yAxis.range;\n\t\tvar targetY = range.scroll * range.scaleFactor * range.zoom;\n\n\t\tthis.currentScrollY.y = this.options.scrollY;\n\n\t\tvar cb = () => {\n\t\t\tthis.transform({scrollY: this.currentScrollY.y});\n\t\t};\n\n\t\tif (canAnimate) {\n\t\t\tthis.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t\t\t\ty: targetY, ease: animations.zoomEase\n\t\t\t});\n\t\t\tthis.scrollYAnimation.eventCallback('onUpdate', cb);\n\t\t} else {\n\t\t\tthis.currentScrollY.y = targetY;\n\t\t\tcb();\n\t\t}\n\t}\n\n\tprivate onZoomXHandler() {\n\t\tvar state = this.chartState;\n\t\tvar animations =  state.data.animations;\n\t\tvar canAnimate = animations.enabled;\n\t\tvar time = animations.zoomSpeed;\n\t\tvar targetZoom = state.data.xAxis.range.zoom;\n\t\tif (this.zoomXAnimation) this.zoomXAnimation.pause();\n\n\t\tvar cb = () => {\n\t\t\tthis.transform({zoomX: this.currentZoomX.val});\n\t\t};\n\n\t\tif (canAnimate) {\n\t\t\tthis.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t\t\t\tval: targetZoom, ease: animations.zoomEase\n\t\t\t});\n\t\t\tthis.zoomXAnimation.eventCallback('onUpdate', cb);\n\t\t} else {\n\t\t\tthis.currentZoomX.val = targetZoom;\n\t\t\tcb();\n\t\t}\n\t}\n\n\tprivate onZoomYHandler() {\n\t\tvar state = this.chartState;\n\t\tvar animations =  state.data.animations;\n\t\tvar canAnimate = animations.enabled;\n\t\tvar time = animations.zoomSpeed;\n\t\tvar targetZoom = state.data.yAxis.range.zoom;\n\t\tif (this.zoomYAnimation) this.zoomYAnimation.pause();\n\n\t\tvar cb = () => {\n\t\t\tthis.transform({zoomY: this.currentZoomY.val});\n\t\t};\n\n\t\tif (canAnimate) {\n\t\t\tthis.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t\t\t\tval: targetZoom, ease: animations.zoomEase\n\t\t\t});\n\t\t\tthis.zoomYAnimation.eventCallback('onUpdate', cb);\n\t\t} else {\n\t\t\tthis.currentZoomY.val = targetZoom;\n\t\t\tcb();\n\t\t}\n\t}\n\n\n\t/**\n\t *  returns offset in pixels from xAxis.range.zeroVal to scrollXVal\n\t */\n\tgetPointOnXAxis(xVal: number): number {\n\t\tvar {scaleFactor, zeroVal} = this.chartState.data.xAxis.range;\n\t\tvar zoom = this.options.zoomX;\n\t\treturn (xVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\t/**\n\t *  returns offset in pixels from yAxis.range.zeroVal to scrollYVal\n\t */\n\tgetPointOnYAxis(yVal: number): number {\n\t\tvar {scaleFactor, zeroVal} =  this.chartState.data.yAxis.range;\n\t\tvar zoom = this.options.zoomY;\n\t\treturn (yVal - zeroVal) * scaleFactor * zoom;\n\t}\n\n\t/**\n\t *  returns offset in pixels from xAxis.range.zeroVal and from yAxis.range.zeroVal to scrollXVal and scrollYVal\n\t */\n\tgetPointOnChart(xVal: number, yVal: number): Vector3 {\n\t\treturn new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t}\n\t\n\t/**\n\t * returns value by offset in pixels from xAxis.range.zeroVal\n\t */\n\tgetValueOnXAxis(x: number): number {\n\t\treturn this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t}\n\n\n\t/**\n\t *  convert value to pixels by using settings from xAxis.range\n\t */\n\tvalueToPxByXAxis(xVal: number) {\n\t\treturn xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n\t}\n\n\n\t/**\n\t *  convert value to pixels by using settings from yAxis.range\n\t */\n\tvalueToPxByYAxis(yVal: number) {\n\t\treturn yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n\t}\n\t\n\t/**\n\t *  convert pixels to value by using settings from xAxis.range\n\t */\n\tpxToValueByXAxis(xVal: number) {\n\t\treturn xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n\t}\n\n\n\t/**\n\t *  convert pixels to value by using settings from yAxis.range\n\t */\n\tpxToValueByYAxis(yVal: number) {\n\t\treturn yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n\t}\n\n\n\t/**\n\t *  returns scrollX value by screen scrollX coordinate\n\t */\n\tgetValueByScreenX(x: number): number {\n\t\treturn this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t}\n\t\n\t\n\t/**\n\t *  returns scrollY value by screen scrollY coordinate\n\t */\n\tgetValueByScreenY(y: number): number {\n\t\treturn this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t}\n\t\n\t//\n\t/**\n\t *  returns screen scrollX value by screen scrollY coordinate\n\t */\n\tgetScreenXByValue(xVal: number): number {\n\t\tvar {scroll, zeroVal} = this.chartState.data.xAxis.range;\n\t\treturn this.valueToPxByXAxis(xVal - zeroVal - scroll)\n\t}\n\n\t// /**\n\t//  *  returns screen scrollY value by screen scrollY coordinate\n\t//  */\n\t// getScreenYByValue(scrollYVal: number): number {\n\t// \tvar {scroll, zeroVal} = this.data.yAxis.range;\n\t// \treturn this.valueToPxByYAxis(scrollYVal - zeroVal - scroll)\n\t// }\n\t//\n\t//\n\t/**\n\t * returns screen scrollX coordinate by offset in pixels from xAxis.range.zeroVal value\n\t */\n\tgetScreenXByPoint(xVal: number): number {\n\t\treturn this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t}\n\n\n\t/**\n\t * returns offset in pixels from xAxis.range.zeroVal value by screen scrollX coordinate\n\t */\n\tgetPointByScreenX(screenX: number): number {\n\t\treturn this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t}\n\n\t/**\n\t * returns offset in pixels from yAxis.range.zeroVal value by screen scrollY coordinate\n\t */\n\tgetPointByScreenY(screenY: number): number {\n\t\treturn this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t}\n\n\tgetTop(): number {\n\t\treturn this.getPointByScreenY(this.chartState.data.height);\n\t}\n\t\n\tgetBottom(): number {\n\t\treturn this.getPointByScreenY(0);\n\t}\n\n\tgetLeft(): number {\n\t\treturn this.getPointByScreenX(0);\n\t}\n\n\tgetScreenRightVal() {\n\t\treturn this.getValueByScreenX(this.chartState.data.width);\n\t}\n\n\tgetTopVal() {\n\t\treturn this.getValueByScreenY(this.chartState.data.height);\n\t}\n\t\n\tgetBottomVal() {\n\t\treturn this.getValueByScreenY(0);\n\t}\n\n\tgetCenterYVal() {\n\t\treturn this.getValueByScreenY(this.chartState.data.height / 2);\n\t}\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Screen.ts\n **/","\nimport {ChartState} from \"./State\";\nimport {Utils} from \"./Utils\";\nimport {AXIS_TYPE} from \"./interfaces\";\nimport {ITrendData, ITrendOptions} from \"./Trend\";\nimport {EventEmitter} from './EventEmmiter';\n\nexport interface IAxisMarkUpdateOptions {\n\tvalue: number,\n\tdisplayedValue?: string\n}\n\nexport interface IAxisMarkOptions extends IAxisMarkUpdateOptions {\n\tname?: string;\n\ttitle?: string;\n\ttype?: string;\n\tlineColor?: string;\n\tlineWidth?: number;\n\tshowValue?: boolean;\n\tstickToEdges?: boolean;\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: IAxisMarkOptions = {\n\ttype: 'simple',\n\tlineWidth: 1,\n\tvalue: 0,\n\tshowValue: false,\n\tstickToEdges: false,\n\tlineColor: '#FFFFFF',\n\ttitle: ''\n};\n\nexport class AxisMarks {\n\tprivate chartState: ChartState;\n\tprivate axisType: AXIS_TYPE;\n\tprivate ee: EventEmitter;\n\tprivate items: {[name: string]: AxisMark} = {};\n\n\tconstructor(chartState: ChartState, axisType: AXIS_TYPE) {\n\t\tthis.chartState = chartState;\n\t\tthis.ee = new EventEmitter();\n\t\tthis.axisType = axisType;\n\t\tvar marks = this.items;\n\t\tvar axisMarksOptions = axisType == AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n\t\t\n\t\tfor (let options of axisMarksOptions) {\n\t\t\tlet axisMark: AxisMark;\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t\t\t\n\t\t\t// set mark name\n\t\t\tif (!options.name) options.name = Utils.getUid().toString();\n\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t\n\t\t\t// create mark instance based on type option\n\t\t\tif (options.type == 'timeleft') {\n\t\t\t\taxisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t\t\t} else {\n\t\t\t\taxisMark = new AxisMark(chartState, axisType, options);\n\t\t\t}\n\t\t\tmarks[options.name] = axisMark;\n\t\t}\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chartState.onTrendChange((trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tthis.onTrendChange(trendName, newData)\n\t\t});\n\t\tthis.chartState.onDestroy(() => this.ee.removeAllListeners());\n\t}\n\n\tprivate onTrendChange(trendName: string, newData: ITrendData) {\n\t\tif (!newData) return;\n\t\tvar startVal = newData[0].xVal;\n\t\tvar endVal = newData[newData.length - 1].xVal;\n\t\tvar marks = this.items;\n\n\t\tfor (let markName in marks) {\n\t\t\tlet mark = marks[markName];\n\t\t\tlet markVal = mark.options.value;\n\t\t\tlet markWasCrossed = (startVal == markVal || endVal == markVal || (startVal < markVal && endVal > markVal));\n\t\t\tif (markWasCrossed) this.ee.emit('markCrossed', trendName, newData);\n\t\t}\n\t}\n\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\t\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n}\n\nexport class AxisMark {\n\tstatic typeName = 'simple';\n\toptions: IAxisMarkOptions;\n\taxisType: AXIS_TYPE;\n\tprotected chartState: ChartState;\n\tprotected renderOnTrendsChange = false;\n\tprotected ee: EventEmitter;\n\n\tconstructor(chartState: ChartState, axisType: AXIS_TYPE, options: IAxisMarkOptions) {\n\t\tthis.ee = new EventEmitter();\n\t\tthis.options = options;\n\t\tthis.axisType = axisType;\n\t\tthis.chartState = chartState;\n\t\tthis.bindEvents();\n\t}\n\t\n\tprotected bindEvents() {}\n\n\tsetOptions(newOptions: IAxisMarkUpdateOptions) {\n\t\tvar value = this.options.value;\n\t\tthis.options = Utils.deepMerge(this.options, newOptions);\n\t\tif (this.options.value !== value) this.ee.emit('valueChange');\n\t\tthis.ee.emit('onDisplayedValueChange');\n\t}\n\n\tgetDisplayedVal(): string {\n\t\tlet {value, displayedValue} = this.options;\n\t\treturn String(displayedValue !== void 0 ? displayedValue : value);\n\t}\n\n\tonMarkCrossed(cb: (trendName: string, newData: ITrendData) => void): Function {\n\t\tthis.ee.on('markCrossed', cb);\n\t\treturn () => {\n\t\t\tthis.ee.off('markCrossed', cb);\n\t\t}\n\t}\n\n\tonValueChange(cb: () => void) {\n\t\tthis.ee.on('valueChange', cb);\n\t\treturn () => {\n\t\t\tthis.ee.off('valueChange', cb);\n\t\t}\n\t}\n\n\tonDisplayedValueChange(cb: () => void) {\n\t\tthis.ee.on('onDisplayedValueChange', cb);\n\t\treturn () => {\n\t\t\tthis.ee.off('onDisplayedValueChange', cb);\n\t\t}\n\t}\n}\n\nexport class AxisTimeleftMark extends AxisMark {\n\tstatic typeName = 'timeleft';\n\tprotected renderOnTrendsChange = true;\n\t\n\tgetDisplayedVal(): string {\n\t\tvar markVal = this.options.value;\n\t\tvar maxXVal = this.chartState.data.computedData.trends.maxXVal;\n\t\tvar time = markVal - maxXVal;\n\t\tif (time < 0) time = 0;\n\t\treturn Utils.msToTimeString(time);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chartState.onTrendsChange(() => this.onTrendsChange());\n\t}\n\n\tprotected onTrendsChange() {\n\t\tthis.ee.emit('onDisplayedValueChange');\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/AxisMarks.ts\n **/","\n\n/**\n * defines how axis range will be calculated\n * FIXED - directly use range.from and range.to value\n * AUTO - automatically sets range.from and range.to by visible part of opposite axis\n * RELATIVE_END - same as AUTO, but trend end always present in range\n * ALL - automatically sets range.from and range.to by all values of opposite axis\n *\n */\nimport {IAxisMarkOptions} from \"./AxisMarks\";\nexport enum AXIS_RANGE_TYPE {\n\tFIXED,\n\tRELATIVE_END,\n\tAUTO,\n\tALL // TODO: AXIS_RANGE_TYPE.ALL\n}\n\n/**\n * Animation ease type\n */\nexport declare type TEase = Ease | Linear;\n\nexport declare type TIteralable = {[key: string]: any};\nexport interface IIteralable {[key: string]: any};\n\nexport enum AXIS_TYPE {X, Y}\n\nexport interface IAxisRange {\n\ttype?: AXIS_RANGE_TYPE,\n\tfrom?: number,\n\tto?: number,\n\tzoom?: number,\n\tscroll?: number,\n\n\t/**\n\t * Mode only for Y axis. When true displayed center of Y axis never changed. To use set range.zeroVal as center value.\n\t */\n\tisMirrorMode?: boolean,\n\n\tpadding?: {\n\t\tstart?: number,\n\t\tend?: number\n\t},\n\n\tmargin?: {\n\t\tstart?: number,\n\t\tend?: number\n\t},\n\n\tmaxLength?: number;\n\tminLength?: number;\n\n\t/**\n\t * value in world center coordinate\n\t */\n\tzeroVal?: number,\n\n\t/**\n\t * ratio between 1 pixel and 1 value for zoom = 1\n\t */\n\tscaleFactor?: number,\n}\n\nexport enum AXIS_DATA_TYPE {NUMBER, DATE}\n\nexport interface IAxisOptions {\n\trange?: IAxisRange;\n\tdataType?: AXIS_DATA_TYPE;\n\tautoScroll?: boolean;\n\tmarks?: IAxisMarkOptions[];\n\tgrid?: IGridOptions\n}\n\nexport interface IGridOptions {\n\tenabled: boolean;\n\tminSizePx?: number;\n}\n\nexport interface IAnimationsOptions {\n\tenabled?: boolean,\n\ttrendChangeSpeed?: number,\n\ttrendChangeEase?: TEase,\n\tscrollSpeed?: number,\n\tscrollEase?: TEase,\n\tautoScrollSpeed?: number,\n\tautoScrollEase?: TEase,\n\tzoomSpeed?: number,\n\tzoomEase?: TEase,\n}\n\nexport interface PromiseExecutor<T> {\n\t(resolve: (data: T) => void, reject: (data: T) => void): void;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/interfaces.ts\n **/","import {ChartState} from \"./State\";\nimport Object3D = THREE.Object3D;\n\nexport interface IChartWidgetConstructor {\n\tnew (): ChartWidget;\n\twidgetName: string;\n}\n\n/**\n * base class for all widgets\n * each widget must have widgetName static property\n */\nexport abstract class ChartWidget {\n\tstatic widgetName = '';\n\tprotected chartState: ChartState;\n\tprivate unbindList: Function[] = [];\n\n\n\tsetupChartState(chartState: ChartState) {\n\t\tthis.chartState = chartState;\n\t}\n\n\tabstract onReadyHandler(): any;\n\tabstract getObject3D(): Object3D;\n\n\n\tprotected bindEvent(...args: Array<Function | Function[]>): void {\n\t\tlet unbindList: Function[] = [];\n\t\tif (!Array.isArray(args[0])) {\n\t\t\tunbindList.push(args[0] as Function);\n\t\t} else {\n\t\t\tunbindList.push(...args as Function[]);\n\t\t}\n\t\tthis.unbindList.push(...unbindList);\n\t}\n\tprotected unbindEvents() {\n\t\tthis.unbindList.forEach(unbindEvent => unbindEvent());\n\t\tthis.unbindList.length = 0;\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Widget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport UVMapping = THREE.UVMapping;\nimport GridHelper = THREE.GridHelper;\nimport {ChartWidget} from \"../Widget\";\nimport {ChartState} from \"../State\";\nimport {GridWidget, IGridParamsForAxis} from \"./GridWidget\";\nimport {Utils} from \"../Utils\";\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport OrthographicCamera = THREE.OrthographicCamera;\nimport {IScreenTransformOptions} from \"../Screen\";\nimport {AXIS_TYPE, AXIS_DATA_TYPE, IAxisOptions} from \"../interfaces\";\n\n/**\n * widget for drawing axis\n */\nexport class AxisWidget extends ChartWidget {\n\tstatic widgetName = 'Axis';\n\tprivate isDestroyed = false;\n\tprivate object3D: Object3D;\n\tprivate axisXObject: Object3D;\n\tprivate axisYObject: Object3D;\n\tprivate updateAxisXRequest: () => void;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisXObject = new Object3D();\n\t\tthis.axisYObject = new Object3D();\n\t\tthis.object3D.add(this.axisXObject);\n\t\tthis.object3D.add(this.axisYObject);\n\t\tthis.setupAxis(AXIS_TYPE.X);\n\t\tthis.setupAxis(AXIS_TYPE.Y);\n\n\t\t// canvas drawing is expensive operation, so when we scroll, redraw must be called only once per second\n\t\tthis.updateAxisXRequest = Utils.throttle(() => this.updateAxis(AXIS_TYPE.X), 1000);\n\n\t\tthis.onScrollChange(\n\t\t\tthis.chartState.screen.options.scrollX,\n\t\t\tthis.chartState.screen.options.scrollY\n\t\t);\n\t\tthis.bindEvents();\n\t}\n\n\tbindEvents() {\n\t\tvar state = this.chartState;\n\n\t\tthis.bindEvent(\n\t\t\tstate.screen.onTransformationFrame((options) => {\n\t\t\t\tthis.onScrollChange(options.scrollX, options.scrollY);\n\t\t\t}),\n\t\t\tstate.screen.onZoomFrame((options) => {this.onZoomFrame(options)}),\n\t\t\tstate.onDestroy(() => this.onDestroy()),\n\t\t\tstate.onResize(() => this.onResize())\n\t\t);\n\t}\n\n\tprivate onDestroy() {\n\t\tthis.isDestroyed = true;\n\t\tthis.unbindEvents();\n\t}\n\n\tprivate onScrollChange(x: number, y: number) {\n\n\t\tif (y != void 0) {\n\t\t\tthis.axisYObject.position.y = y;\n\t\t\tthis.axisXObject.position.y = y;\n\t\t}\n\n\t\tif (x != void 0) {\n\t\t\tthis.axisYObject.position.x = x;\n\t\t\tthis.updateAxisXRequest();\n\t\t}\n\n\t}\n\n\tprivate onResize() {\n\t\tthis.setupAxis(AXIS_TYPE.X);\n\t\tthis.setupAxis(AXIS_TYPE.Y);\n\t}\n\n\tprivate setupAxis(orientation: AXIS_TYPE) {\n\n\t\tlet isXAxis = orientation == AXIS_TYPE.X;\n\t\tlet {width: visibleWidth, height: visibleHeight} = this.chartState.data;\n\t\tlet canvasWidth = 0, canvasHeight = 0;\n\n\t\t// clean meshes\n\t\tif (isXAxis) {\n\t\t\tthis.axisXObject.traverse(obj => this.axisXObject.remove(obj));\n\t\t\tcanvasWidth = visibleWidth * 3;\n\t\t\tcanvasHeight = 50;\n\t\t} else {\n\t\t\tthis.axisYObject.traverse(obj => this.axisYObject.remove(obj));\n\t\t\tcanvasWidth = 50;\n\t\t\tcanvasHeight = visibleHeight * 3;\n\t\t}\n\n\t\tvar texture = Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, (ctx) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.font = \"10px Arial\";\n\t\t\tctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n\t\t});\n\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tvar axisMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(canvasWidth, canvasHeight),\n\t\t\tmaterial\n\t\t);\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t\t\tthis.axisXObject.add(axisMesh);\n\t\t} else {\n\t\t\taxisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t\t\tthis.axisYObject.add(axisMesh);\n\t\t}\n\n\t\tthis.updateAxis(orientation);\n\n\t}\n\t\n\tgetObject3D(): Object3D {\n\t\treturn this.object3D;\n\t}\n\n\tprivate updateAxis(orientation: AXIS_TYPE) {\n\t\tif (this.isDestroyed) return;\n\t\tvar isXAxis = orientation == AXIS_TYPE.X;\n\t\tvar {width: visibleWidth, height: visibleHeight} = this.chartState.data;\n\t\tvar {scrollX, scrollY, zoomX, zoomY} = this.chartState.screen.options;\n\t\tvar axisOptions: IAxisOptions;\n\t\tvar axisMesh: Mesh;\n\t\tvar axisGridParams: IGridParamsForAxis;\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh = this.axisXObject.children[0] as Mesh;\n\t\t\taxisOptions = this.chartState.data.xAxis;\n\t\t\taxisGridParams = GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t\t} else {\n\t\t\taxisMesh = this.axisYObject.children[0] as Mesh;\n\t\t\taxisOptions = this.chartState.data.yAxis;\n\t\t\taxisGridParams = GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t\t}\n\n\t\tvar geometry = axisMesh.geometry as PlaneGeometry;\n\t\tvar canvasWidth = geometry.parameters.width;\n\t\tvar canvasHeight = geometry.parameters.height;\n\t\tvar texture = (axisMesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\n\t\tif (isXAxis) {\n\t\t\taxisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t\t}\n\n\n\t\t// TODO: draw text and lines in different loops\n\t\tvar edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t\tvar startVal = axisGridParams.start  - edgeOffset;\n\t\tvar endVal = axisGridParams.end + edgeOffset;\n\n\t\tctx.beginPath();\n\t\tfor (let val = startVal; val <= endVal; val += axisGridParams.step) {\n\t\t\tlet displayedValue = '';\n\t\t\tif (isXAxis) {\n\t\t\t\tlet pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\t// uncomment for dots\n\t\t\t\t// ctx.moveTo(pxVal + 0.5, canvasHeight);\n\t\t\t\t// ctx.lineTo(pxVal + 0.5, canvasHeight - 5);\n\t\t\t\tif (axisOptions.dataType == AXIS_DATA_TYPE.DATE) {\n\t\t\t\t\tdisplayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t\t\t\t} else {\n\t\t\t\t\tdisplayedValue = Number(val.toFixed(14)).toString();\n\t\t\t\t}\n\n\t\t\t\tctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t\t\t} else {\n\t\t\t\tlet pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t// uncomment for dots\n\t\t\t\t// ctx.moveTo(canvasWidth, pxVal + 0.5);\n\t\t\t\t// ctx.lineTo(canvasWidth - 5, pxVal + 0.5);\n\n\t\t\t\tdisplayedValue = Number(val.toFixed(14)).toString();\n\t\t\t\tctx.fillText(displayedValue, canvasWidth - 15 , pxVal + 3);\n\n\t\t\t\t// uncomment for left-side axis\n\t\t\t\t// ctx.moveTo(0, pxVal + 0.5);\n\t\t\t\t// ctx.lineTo(5, pxVal + 0.5);\n\t\t\t\t// ctx.fillText(Number(val.toFixed(14)).toString(), 15 , pxVal + 3);\n\t\t\t}\n\t\t\tctx.stroke();\n\t\t}\n\t\t// uncomment to preview canvas borders\n\t\t// ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\tctx.stroke();\n\t\tctx.closePath();\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate onZoomFrame(options: IScreenTransformOptions) {\n\t\tif (options.zoomX) {\n\t\t\tthis.updateAxis(AXIS_TYPE.X);\n\t\t\t//this.temporaryHideAxis(AXIS_ORIENTATION.H)\n\t\t}\n\t\tif (options.zoomY) {\n\t\t\tthis.updateAxis(AXIS_TYPE.Y);\n\t\t\t//this.temporaryHideAxis(AXIS_ORIENTATION.V)\n\t\t}\n\t}\n\n\t// private temporaryHideAxis(orientation: AXIS_TYPE) {\n\t// \tvar isXAxis = orientation == AXIS_TYPE.X;\n\t// \tvar timeoutId = setTimeout(() => {\n\t// \t\t\tthis.showAxis(orientation);\n\t// \t}, 200);\n\t//\n\t// \tif (isXAxis) {\n\t// \t\t(this.axisXObject.children[0] as Mesh).material.opacity = 0;\n\t// \t\tclearTimeout(this.showAxisXTimeout);\n\t// \t\tthis.showAxisXTimeout =\ttimeoutId;\n\t// \t} else {\n\t// \t\tclearTimeout(this.showAxisYTimeout);\n\t// \t\t(this.axisYObject.children[0] as Mesh).material.opacity = 0;\n\t// \t\tthis.showAxisYTimeout = timeoutId;\n\t// \t}\n\t// }\n\n\t// private showAxis(orientation: AXIS_TYPE) {\n\t// \tvar isXAxis = orientation == AXIS_TYPE.X;\n\t// \tvar material: MeshBasicMaterial;\n\t// \tif (isXAxis) {\n\t// \t\tmaterial = (this.axisXObject.children[0] as Mesh).material as MeshBasicMaterial;\n\t// \t} else {\n\t// \t\tmaterial = (this.axisYObject.children[0] as Mesh).material as MeshBasicMaterial;\n\t// \t}\n\t// \tthis.updateAxis(orientation);\n\t// \tTweenLite.to(material, 0.3, {opacity: 1});\n\t// }\n\n\tstatic getDateStr(timestamp: number, gridParams: IGridParamsForAxis): string {\n\t\tvar sec = 1000;\n\t\tvar min = sec * 60;\n\t\tvar hour = min * 60;\n\t\tvar day = hour * 60;\n\t\tvar step = gridParams.step;\n\t\tvar d = new Date(timestamp);\n\t\tvar tf = (num: number) => Utils.toFixed(num, 2);\n\t\treturn tf(d.getHours()) + ':' + tf(d.getMinutes()) + ':' + tf(d.getSeconds());\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/AxisWidget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport {ChartWidget} from \"../Widget\";\nimport LineSegments = THREE.LineSegments;\nimport {Utils} from \"../Utils\";\nimport {IScreenTransformOptions} from \"../Screen\";\nimport {IAxisOptions} from \"../interfaces\";\n\nexport interface IGridParamsForAxis {\n\tstart: number,\n\tend: number,\n\tstep: number,\n\tstepInPx: number,\n\tlength: number,\n\tsegmentsCount: number\n}\n\n/**\n * widget for drawing chart grid\n */\nexport class GridWidget extends ChartWidget{\n\tstatic widgetName = 'Grid';\n\tprivate lineSegments: LineSegments;\n\tprivate gridSizeH: number;\n\tprivate gridSizeV: number;\n\tprivate isDestroyed = false;\n\n\tonReadyHandler() {\n\t\tvar {width, height, xAxis, yAxis} = this.chartState.data;\n\t\tthis.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t\tthis.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t\tthis.initGrid();\n\t\tthis.updateGrid();\n\t\tthis.bindEvents();\n\t}\n\n\tbindEvents() {\n\t\t// grid is bigger then screen, so it's no need to update it on each scroll event\n\t\tlet updateGridThrottled = Utils.throttle(() => this.updateGrid(), 1000);\n\t\tthis.bindEvent(this.chartState.onScroll(() => updateGridThrottled()),\n\t\t\tthis.chartState.screen.onZoomFrame((options) => {\n\t\t\t\tupdateGridThrottled();\n\t\t\t\tthis.onZoomFrame(options);\n\t\t\t}),\n\t\t\tthis.chartState.onDestroy(() => {\n\t\t\t\tthis.isDestroyed = true;\n\t\t\t\tthis.unbindEvents();\n\t\t\t}),\n\t\t\tthis.chartState.onResize(() => {\n\t\t\t\tthis.updateGrid();\n\t\t\t})\n\t\t);\n\n\t}\n\n\tprivate initGrid() {\n\t\tvar geometry = new THREE.Geometry();\n\t\tvar material = new THREE.LineBasicMaterial( { linewidth: 1, opacity: 0.1, transparent: true});\n\t\tvar xLinesCount = this.gridSizeH;\n\t\tvar yLinesCount = this.gridSizeV;\n\t\twhile (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t\twhile (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t\tthis.lineSegments = new LineSegments(geometry, material);\n\t\tthis.lineSegments.position.setZ(-1);\n\t\tthis.lineSegments.frustumCulled = false;\n\t}\n\n\tprivate updateGrid() {\n\t\tif (this.isDestroyed) return;\n\t\tvar {yAxis, xAxis, width, height} = this.chartState.data;\n\t\tvar axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t\tvar axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t\tvar scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t\tvar scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t\tvar gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t\tvar gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t\tvar startXVal = axisXGrid.start + gridScrollXVal;\n\t\tvar startYVal = axisYGrid.start + gridScrollYVal;\n\t\tvar geometry = this.lineSegments.geometry as Geometry;\n\t\tvar vertices = geometry.vertices;\n\t\tvar lineInd = 0;\n\n\t\tfor (let i =  -this.gridSizeH / 3; i < this.gridSizeH * 2/3; i++) {\n\t\t\tlet value = startXVal + i * axisXGrid.step;\n\t\t\tlet lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t\t\tvertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t\t\tvertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t\t\tlineInd++;\n\t\t}\n\n\t\tfor (let i =  -this.gridSizeV / 3; i < this.gridSizeV * 2/3; i++) {\n\t\t\tlet value = startYVal + i * axisYGrid.step;\n\t\t\tlet lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t\t\tvertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t\t\tvertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t\t\tlineInd++;\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\tthis.lineSegments.scale.set(\n\t\t\txAxis.range.scaleFactor * xAxis.range.zoom,\n\t\t\tyAxis.range.scaleFactor * yAxis.range.zoom,\n\t\t\t1\n\t\t)\n\t}\n\n\tprivate getHorizontalLineSegment(yVal: number, scrollXVal: number, scrollYVal: number): Vector3[] {\n\t\tvar chartState = this.chartState;\n\t\tvar localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n\t\tvar widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n\t\treturn [\n\t\t\tnew THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0 ),\n\t\t\tnew THREE.Vector3( -widthVal + scrollXVal, localYVal, 0 )\n\t\t];\n\t}\n\n\tprivate getVerticalLineSegment(xVal: number, scrollXVal: number, scrollYVal: number): Vector3[] {\n\t\tvar chartState = this.chartState;\n\t\tvar localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n\t\tvar heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n\t\treturn [\n\t\t\tnew THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0 ),\n\t\t\tnew THREE.Vector3(localXVal, -heightVal + scrollYVal, 0 )\n\t\t];\n\t}\n\n\tprivate onZoomFrame(options: IScreenTransformOptions) {\n\t\tvar {xAxis, yAxis} = this.chartState.data;\n\t\tif (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t\tif (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t}\n\n\n\t// TODO: move this code to core\n\tstatic getGridParamsForAxis(axisOptions: IAxisOptions, axisWidth: number, zoom: number): IGridParamsForAxis {\n\t\tlet axisRange = axisOptions.range;\n\t\tlet from = axisRange.from;\n\t\tlet to = axisRange.to;\n\t\tlet axisLength = to - from;\n\t\tlet gridStep = 0;\n\t\tlet gridStepInPixels = 0;\n\t\tlet minGridStepInPixels = axisOptions.grid.minSizePx;\n\t\tlet axisLengthStr = String(axisLength);\n\t\tlet axisLengthPointPosition = axisLengthStr.indexOf('.');\n\t\tlet intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\n\t\tlet gridStepFound = false;\n\t\tlet digitPos = 0;\n\t\twhile (!gridStepFound) {\n\n\t\t\tlet power = intPartLength - digitPos - 1;\n\t\t\tlet multiplier = (Math.pow(10, power) || 1);\n\t\t\tlet dividers = [1, 2, 5];\n\t\t\tfor (let dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t\t\t\tlet nextGridStep = multiplier / dividers[dividerInd];\n\t\t\t\tlet nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t\t\t\tif (nextGridStepInPixels >= minGridStepInPixels) {\n\t\t\t\t\tgridStep = nextGridStep;\n\t\t\t\t\tgridStepInPixels = nextGridStepInPixels;\n\t\t\t\t} else {\n\t\t\t\t\tgridStepFound = true;\n\t\t\t\t\tif (gridStep === 0) {\n\t\t\t\t\t\tgridStep = nextGridStep;\n\t\t\t\t\t\tgridStepInPixels = nextGridStepInPixels;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!gridStepFound) digitPos++\n\n\t\t}\n\n\t\tvar gridStart = Math.floor(from / gridStep) * gridStep;\n\t\tvar gridEnd = Math.floor(to / gridStep) * gridStep;\n\n\t\treturn {\n\t\t\tstart: gridStart,\n\t\t\tend: gridEnd,\n\t\t\tstep: gridStep,\n\t\t\tstepInPx: gridStepInPixels,\n\t\t\tlength: gridEnd - gridStart,\n\t\t\tsegmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t\t}\n\t}\n\t\n\tgetObject3D() {\n\t\treturn this.lineSegments;\n\t}\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/GridWidget.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport {ChartState} from \"../State\";\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport {ITrendOptions} from \"../Trend\";\nimport {Utils} from \"../Utils\";\nimport {TrendsWidget, TrendWidget} from \"./TrendsWidget\";\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport { IScreenTransformOptions } from '../Screen';\nimport { TrendSegmentsManager, ITrendSegmentState } from '../TrendSegmentsManager';\nimport { ChartColor } from '../Color';\n\nexport class TrendsGradientWidget extends TrendsWidget<TrendGradient> {\n\tstatic widgetName = \"TrendsGradient\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendGradient;\n\t}\n}\n\n\nexport class TrendGradient extends TrendWidget {\n\tprivate gradient: Mesh;\n\tprivate visibleSegmentsCnt = 0;\n\tprivate segmentsIds: Uint16Array;\n\t\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBackground;\n\t}\n\n\tconstructor (chartState: ChartState, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.trend = chartState.trendsManager.getTrend(trendName);\n\t\tthis.segmentsIds = new Uint16Array(chartState.data.maxVisibleSegments)\n\t\tthis.initGradient();\n\t\tthis.updateSegments();\n\t}\n\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.updateSegments();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\t// TODO: optimize updateSegments for onDisplayedRangeChanged\n\t\t\tthis.updateSegments();\n\t\t}));\n\t\tthis.bindEvent(this.chartState.onZoom(() => {\n\t\t\tthis.updateSegments();\n\t\t}));\n\t}\n\n\n\tgetObject3D(): Object3D {\n\t\treturn this.gradient;\n\t}\n\n\n\tinitGradient() {\n\t\tlet geometry = new Geometry();\n\n\n\t\tfor (let i = 0; i < this.segmentsIds.length; i++) {\n\t\t\tgeometry.vertices.push(\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3(),\n\t\t\t\tnew THREE.Vector3()\n\t\t\t);\n\t\t\tlet ind = i * 4;\n\n\t\t\t// gradient segment scheme\n\t\t\t//\n\t\t\t// vert0 +---+ vert3\n\t\t\t//       |\\  |\n\t\t\t// face1 | \\ | face2\n\t\t\t// \t     |  \\|\n\t\t\t// vert1 +---+ vert2\n\n\t\t\tgeometry.faces.push(\n\t\t\t\tnew THREE.Face3( ind, ind + 1, ind + 2 ),\n\t\t\t\tnew THREE.Face3( ind + 3, ind, ind + 2 )\n\t\t\t);\n\t\t}\n\n\t\tlet color = new ChartColor(this.trend.getOptions().backgroundColor);\n\t\tthis.gradient = new THREE.Mesh(\n\t\t\tgeometry,\n\t\t\tnew THREE.MeshBasicMaterial( {color: color.value, transparent: true, opacity: color.a} )\n\t\t);\n\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = this.chartState.data.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = this.chartState.data.yAxis.range;\n\t\tthis.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.gradient.frustumCulled = false;\n\t}\n\n\n\tprotected onZoomFrame(options: IScreenTransformOptions) {\n\t\tlet state = this.chartState.data;\n\t\tlet scaleXFactor = state.xAxis.range.scaleFactor;\n\t\tlet scaleYFactor = state.yAxis.range.scaleFactor;\n\t\tvar currentScale = this.gradient.scale;\n\t\tif (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t}\n\n\n\tprotected onSegmentsAnimate(trendSegmentsManager: TrendSegmentsManager) {\n\t\tlet animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t\tfor (let i = 0; i < this.visibleSegmentsCnt; i++) {\n\t\t\tlet segmentId = this.segmentsIds[i];\n\t\t\tif (!animatedSegmentsIds.includes(segmentId)) continue;\n\t\t\tthis.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t\t}\n\t\t(this.gradient.geometry as PlaneGeometry).verticesNeedUpdate = true;\n\t}\n\n\n\tprivate updateSegments() {\n\t\tlet geometry = this.gradient.geometry as PlaneGeometry;\n\t\tlet {\n\t\t\tsegments: trendSegments,\n\t\t\tfirstDisplayedSegmentInd: segmentInd,\n\t\t\tlastDisplayedSegmentInd\n\t\t} = this.trend.segmentsManager;\n\t\tlet prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t\tthis.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t\tlet segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\n\t\tif (segmentsToProcessCnt > this.segmentsIds.length) {\n\t\t\tUtils.error(TrendsGradientWidget.widgetName + ': MAX_SEGMENTS reached');\n\t\t}\n\n\t\t// setup visible segments and collapse invisible\n\t\tfor (let i = 0; i <= segmentsToProcessCnt; i++) {\n\t\t\tif (segmentInd <= lastDisplayedSegmentInd) {\n\t\t\t\tlet segment = trendSegments[segmentInd];\n\t\t\t\tthis.setupSegmentVertices(i, segment.currentAnimationState);\n\t\t\t\tthis.segmentsIds[i] = segment.id;\n\t\t\t\tsegmentInd++;\n\t\t\t} else {\n\t\t\t\tthis.setupSegmentVertices(i);\n\t\t\t}\n\t\t}\n\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n\n\t/**\n\t * setup gradient segment by segmentState\n\t * if segmentState is undefined, then collapse vertices to 0,0,0\n\t */\n\tprivate setupSegmentVertices(segmentInd: number, segmentState?: ITrendSegmentState) {\n\t\tlet gradientSegmentInd = segmentInd * 4;\n\t\tlet vertices = (this.gradient.geometry as PlaneGeometry).vertices;\n\t\tlet\ttopLeft = vertices[gradientSegmentInd];\n\t\tlet\tbottomLeft = vertices[gradientSegmentInd + 1];\n\t\tlet\tbottomRight = vertices[gradientSegmentInd + 2];\n\t\tlet\ttopRight = vertices[gradientSegmentInd + 3];\n\t\tlet screenHeightVal = Math.max(\n\t\t\tthis.chartState.pxToValueByYAxis(this.chartState.data.height),\n\t\t\tthis.chartState.screen.pxToValueByYAxis(this.chartState.data.height)\n\t\t);\n\n\t\tif (segmentState) {\n\t\t\tlet startX = this.toLocalX(segmentState.startXVal);\n\t\t\tlet startY = this.toLocalY(segmentState.startYVal);\n\t\t\tlet endX = this.toLocalX(segmentState.endXVal);\n\t\t\tlet endY = this.toLocalY(segmentState.endYVal);\n\t\t\ttopLeft.set(startX, startY, 0);\n\t\t\ttopRight.set(endX, endY, 0);\n\t\t\tbottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t\t\tbottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t\t} else {\n\t\t\ttopLeft.set(0, 0, 0);\n\t\t\ttopRight.set(0, 0, 0);\n\t\t\tbottomLeft.set(0, 0, 0);\n\t\t\tbottomRight.set(0, 0, 0);\n\t\t}\n\n\t}\n\n\tprivate toLocalX(xVal: number): number {\n\t\treturn xVal - this.chartState.data.xAxis.range.zeroVal;\n\t}\n\n\n\tprivate toLocalY(yVal: number): number {\n\t\treturn yVal - this.chartState.data.yAxis.range.zeroVal;\n\t}\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsGradientWidget.ts\n **/","\nimport {ChartWidget} from \"../Widget\";\nimport Object3D = THREE.Object3D;\nimport {ChartState} from \"../State\";\nimport {ITrendOptions, ITrendData, Trend} from \"../Trend\";\nimport Vector2 = THREE.Vector2;\nimport Vector3 = THREE.Vector3;\nimport {TrendSegmentsManager} from \"../TrendSegmentsManager\";\nimport {IScreenTransformOptions} from \"../Screen\";\n\n\nexport interface ITrendWidgetClass<TrendWidgetType> {\n\tnew (chartState: ChartState, trendName: string): TrendWidgetType;\n\twidgetIsEnabled(trendOptions: ITrendOptions, chartState: ChartState): boolean;\n}\n\n/**\n * abstract manager class for all trends widgets\n */\nexport abstract class TrendsWidget<TrendWidgetType extends TrendWidget> extends ChartWidget {\n\tprotected abstract getTrendWidgetClass(): ITrendWidgetClass<TrendWidgetType>;\n\tprotected object3D: Object3D;\n\tprotected widgets: {[trendName: string]: TrendWidgetType} = {};\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.onTrendsChange();\n\t\tthis.bindEvents();\n\t}\n\n\tprotected bindEvents() {\n\t\tvar state = this.chartState;\n\t\tstate.onTrendsChange(() => this.onTrendsChange());\n\t\tstate.onTrendChange((trendName: string, changedOptions: ITrendOptions, newData: ITrendData) => {\n\t\t\tthis.onTrendChange(trendName, changedOptions, newData)\n\t\t});\n\t}\n\n\tprotected onTrendsChange() {\n\t\tvar trendsOptions = this.chartState.data.trends;\n\t\tvar TrendWidgetClass = this.getTrendWidgetClass();\n\t\tfor (let trendName in trendsOptions) {\n\t\t\tlet trendOptions = trendsOptions[trendName];\n\t\t\tlet widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n\t\t\tif (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t\t\t\tthis.createTrendWidget(trendName);\n\t\t\t} else if (!widgetCanBeEnabled && this.widgets[trendName]){\n\t\t\t\tthis.destroyTrendWidget(trendName);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onTrendChange(trendName: string, changedOptions: ITrendOptions, newData: ITrendData) {\n\t\tvar widget = this.widgets[trendName];\n\t\tif (!widget) return;\n\t\twidget.onTrendChange(changedOptions);\n\t\tif (newData) {\n\t\t\tvar data = this.chartState.getTrend(trendName).getData();\n\t\t\tvar isAppend = (!data.length || data[0].xVal < newData[0].xVal);\n\t\t\tisAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t\t}\n\t}\n\n\tgetObject3D(): Object3D {\n\t\treturn this.object3D;\n\t}\n\n\tprivate createTrendWidget(trendName: string) {\n\t\tvar WidgetConstructor = this.getTrendWidgetClass();\n\t\tvar widget = new WidgetConstructor(this.chartState, trendName);\n\t\tthis.widgets[trendName] = widget;\n\t\tvar widgetObject = widget.getObject3D();\n\t\twidgetObject.name = trendName;\n\t\tthis.object3D.add(widget.getObject3D());\n\t}\n\n\tprivate destroyTrendWidget(trendName: string) {\n\t\tthis.widgets[trendName].onDestroy();\n\t\tdelete this.widgets[trendName];\n\t\tvar widgetObject = this.object3D.getObjectByName(trendName);\n\t\tthis.object3D.remove(widgetObject);\n\t}\n}\n\n/**\n * based class for all trends widgets\n */\nexport abstract class TrendWidget {\n\tprotected trend: Trend;\n\tprotected unbindList: Function[] = [];\n\n\tconstructor (protected chartState: ChartState, protected trendName: string) {\n\t\tthis.trend = chartState.trendsManager.getTrend(trendName);\n\t\tthis.chartState = chartState;\n\t\tthis.bindEvents();\n\t}\n\tabstract getObject3D(): Object3D;\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chartState: ChartState) {\n\t\treturn trendOptions.enabled;\n\t}\n\tappendData(newData: ITrendData) {};\n\tprependData(newData: ITrendData) {};\n\tonTrendChange(changedOptions?: ITrendOptions) {}\n\tonDestroy() {\n\t\tfor (let unsubscriber of this.unbindList) {\n\t\t\tunsubscriber();\n\t\t}\n\t}\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t}\n\tprotected onZoomFrame(options: IScreenTransformOptions) {\n\t}\n\tprotected onTransformationFrame(options: IScreenTransformOptions) {\n\t}\n\tprotected onZoom() {\n\t}\n\n\n\tprotected bindEvents() {\n\n\t\tthis.bindEvent(this.trend.segmentsManager.onAnimationFrame(\n\t\t\t(trendPoints: TrendSegmentsManager) => this.onSegmentsAnimate(trendPoints)\n\t\t));\n\n\t\tthis.bindEvent(this.chartState.screen.onTransformationFrame(\n\t\t\t(options) => this.onTransformationFrame(options)\n\t\t));\n\t\t\n\t\tthis.bindEvent(this.chartState.screen.onZoomFrame(\n\t\t\t(options) => this.onZoomFrame(options)\n\t\t));\n\n\t\tthis.bindEvent(this.chartState.onZoom(() => this.onZoom()));\n\t};\n\n\tprotected bindEvent(unbind: Function) {\n\t\tthis.unbindList.push(unbind);\n\t}\n\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsWidget.ts\n **/","export declare type TChartColor = string | number;\n\n\nexport class ChartColor {\n\n\t/**!\n\t * @preserve $.parseColor\n\t * Copyright 2011 THEtheChad Elliott\n\t * Released under the MIT and GPL licenses.\n\t */\n\t/**\n\t * Parse hex/rgb{a} color syntax.\n\t * @input string\n\t * @returns array [r,g,b{,o}]\n\t */\n\tstatic parseColor(color: string): number[] {\n\n\t\tvar cache: any\n\t\t\t, p = parseInt // Use p as a byte saving reference to parseInt\n\t\t\t, color = color.replace(/\\s\\s*/g, '') // Remove all spaces\n\t\t\t;//var\n\n\t\t// Checks for 6 digit hex and converts string to integer\n\t\tif (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\n\n\t\t// Checks for 3 digit hex and converts string to integer\n\t\telse if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\n\t\t\tcache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\n\n\n\t\t// Checks for 6 digit hex with alpha and converts string to integer\n\t\telse if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\n\n\t\t// Checks for rgba and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3], +cache[4]];\n\n\t\t// Checks for rgb and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3]];\n\n\t\t// Otherwise throw an exception to make debugging easier\n\t\telse throw Error(color + ' is not supported by parseColor');\n\n\t\t// Performs RGBA conversion by default\n\t\tisNaN(cache[3]) && (cache[3] = 1);\n\t\treturn cache;\n\t\t// Adds or removes 4th value based on rgba support\n\t\t// Support is flipped twice to prevent erros if\n\t\t// it's not defined\n\t\t//return cache.slice(0,3 + !!$.support.rgba);\n\t}\n\n\tr: number;\n\tg: number;\n\tb: number;\n\ta: number;\n\tvalue: number;\n\thexStr: string;\n\trgbaStr: string;\n\n\tconstructor (color: TChartColor) {\n\t\tthis.set(color);\n\t}\n\n\tset(color: TChartColor) {\n\t\tif (typeof color == 'number') color = '#' + (color as number).toString(16);\n\t\tlet colorStr = color as string;\n\t\tlet rgba = ChartColor.parseColor(colorStr);\n\t\tthis.r = rgba[0];\n\t\tthis.g = rgba[1];\n\t\tthis.b = rgba[2];\n\t\tthis.a = rgba[3];\n\t\tthis.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\n\t\tthis.hexStr = '#' + this.value.toString(16);\n\t\tthis.rgbaStr = `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.ts\n **/","import Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport {ChartState} from \"../State\";\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport {TrendsWidget, TrendWidget} from \"./TrendsWidget\";\nimport { TrendSegmentsManager, ITrendSegmentState } from \"../TrendSegmentsManager\";\nimport LineSegments = THREE.LineSegments;\nimport {IScreenTransformOptions} from \"../Screen\";\nimport { ITrendOptions, TREND_TYPE } from '../Trend';\nimport { Utils } from '../Utils';\n\n\n/**\n * widget for drawing trends lines\n */\nexport class TrendsLineWidget extends TrendsWidget<TrendLine> {\n\tstatic widgetName = \"TrendsLine\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLine;\n\t}\n}\n\ninterface ILineSegment {\n\tind: number,\n\tsegmentId: number\n}\n\nexport class TrendLine extends TrendWidget {\n\tprivate material: LineBasicMaterial;\n\tprivate lineSegments: LineSegments;\n\tprivate vertices: Vector3[];\n\n\t// contains indexes of free segments\n\tprivate freeSegmentsInds: number[] = [];\n\n\t// contains segments to display\n\tprivate displayedSegments: {[segmentId: number]: ILineSegment} = {};\n\t\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\t\n\tconstructor (chartState: ChartState, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tvar options = this.trend.getOptions();\n\t\tthis.material = new LineBasicMaterial( { color: options.lineColor, linewidth: options.lineWidth } );\n\t\tthis.initLine();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.lineSegments;\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.destroySegments();\n\t\t\tthis.setupSegments();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\tthis.setupSegments();\n\t\t}));\n\t}\n\t\n\tprivate initLine() {\n\t\tlet geometry = new Geometry();\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = this.chartState.data.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = this.chartState.data.yAxis.range;\n\t\tthis.lineSegments = new LineSegments(geometry, this.material);\n\t\tthis.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.lineSegments.frustumCulled = false;\n\t\tfor (let i = 0; i < this.chartState.data.maxVisibleSegments; i++) {\n\t\t\tgeometry.vertices.push(new  Vector3(), new Vector3());\n\t\t\tthis.freeSegmentsInds.push(i);\n\t\t}\n\t\tthis.vertices = geometry.vertices;\n\t\tthis.setupSegments();\n\t}\n\n\tprivate setupSegments() {\n\t\tlet geometry = this.lineSegments.geometry as Geometry;\n\n\t\tlet {firstDisplayedSegment, lastDisplayedSegment} = this.trend.segmentsManager;\n\n\t\tfor (let segmentId in this.displayedSegments) {\n\t\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\t\tlet segment = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t\t\tlet segmentIsNotDisplayed = (\n\t\t\t\tsegment.startXVal < firstDisplayedSegment.startXVal ||\n\t\t\t\tsegment.endXVal > lastDisplayedSegment.endXVal\n\t\t\t);\n\t\t\tif (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t\t}\n\n\t\tlet segment = firstDisplayedSegment;\n\t\twhile (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t\t\tthis.setupSegment(segment.id, segment.currentAnimationState);\n\t\t\tsegment = segment.getNext();\n\t\t}\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t}\n\n\tprivate setupSegment(segmentId: number, segmentState: ITrendSegmentState) {\n\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\tif (!lineSegment) {\n\t\t\tif (this.freeSegmentsInds.length == 0) Utils.error('Max allocated segments reached');\n\t\t\tlet ind = this.freeSegmentsInds.pop();\n\t\t\tlineSegment = this.displayedSegments[segmentId] = {segmentId, ind};\n\t\t}\n\t\tlet segmentInd = lineSegment.ind;\n\t\tlet lineStartVertex = this.vertices[segmentInd * 2];\n\t\tlet lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t\tlineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t\tlineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t}\n\n\tprivate destroySegments() {\n\t\tfor (let segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t}\n\n\tprivate destroySegment(segmentId: number) {\n\t\tlet lineSegment = this.displayedSegments[segmentId];\n\t\tlet lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t\tlet lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t\tlineStartVertex.set(0, 0, 0);\n\t\tlineEndVertex.set(0, 0, 0);\n\t\tdelete this.displayedSegments[segmentId];\n\t\tthis.freeSegmentsInds.push(lineSegment.ind);\n\t}\n\n\n\tprotected onZoomFrame(options: IScreenTransformOptions) {\n\t\tvar currentScale = this.lineSegments.scale;\n\t\tlet state = this.chartState.data;\n\t\tlet scaleXFactor = state.xAxis.range.scaleFactor;\n\t\tlet scaleYFactor = state.yAxis.range.scaleFactor;\n\t\tif (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t}\n\n\n\tprotected onSegmentsAnimate(trendSegments: TrendSegmentsManager) {\n\t\tvar geometry = this.lineSegments.geometry as Geometry;\n\t\tfor (let segmentId of trendSegments.animatedSegmentsIds) {\n\t\t\tif (!this.displayedSegments[segmentId]) continue;\n\t\t\tthis.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t\t}\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n\n\tprivate toLocalX(xVal: number): number {\n\t\treturn xVal - this.chartState.data.xAxis.range.zeroVal;\n\t}\n\n\tprivate toLocalY(yVal: number): number {\n\t\treturn yVal - this.chartState.data.yAxis.range.zeroVal;\n\t}\n\n\tprivate toLocalVec(vec: Vector3): Vector3 {\n\t\treturn new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsLineWidget.ts\n **/","\n\nimport { TrendsWidget, TrendWidget } from './TrendsWidget';\nimport { ChartState } from '../State';\nimport Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport { IScreenTransformOptions } from '../Screen';\nimport { TrendSegmentsManager, ITrendSegmentState } from '../TrendSegmentsManager';\nimport Vector3 = THREE.Vector3;\nimport Mesh = THREE.Mesh;\nimport Line = THREE.Line;\nimport BoxGeometry = THREE.BoxGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport { TREND_TYPE, ITrendOptions } from '../Trend';\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport remove = THREE.Cache.remove;\nimport { Utils } from '../Utils';\n\n\nconst RISE_COLOR = 0x2CAC40;\nconst FALL_COLOR = 0xEE5533;\nconst MARGIN_PERCENT = 0.3;\nconst MAX_CANDLES = 100;\n\n/**\n * widget for drawing trends candles\n */\nexport class TrendsCandlesWidget extends TrendsWidget<TrendCandlesWidget> {\n\tstatic widgetName = \"TrendsCandles\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendCandlesWidget;\n\t}\n}\n\n\nexport class TrendCandlesWidget extends TrendWidget {\n\tprivate scaleXFactor: number;\n\tprivate scaleYFactor: number;\n\tprivate object3D: Object3D;\n\t\n\t// contains indexes of free candles\n\tprivate freeCandlesInds: number[] = [];\n\tprivate candlesPool: CandleWidget[] = [];\n\tprivate candles: {[segmentId: number]: CandleWidget} = {};\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.type == TREND_TYPE.CANDLE;\n\t}\n\n\tconstructor (chartState: ChartState, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.initObject();\n\t}\n\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.segmentsManager.onRebuild(() => {\n\t\t\tthis.destroyCandles();\n\t\t\tthis.setupCandles();\n\t\t}));\n\t\tthis.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(() => {\n\t\t\tthis.setupCandles();\n\t\t}));\n\t}\n\t\n\tprivate initObject() {\n\t\tlet stateData = this.chartState.data;\n\t\tlet {scaleFactor: scaleXFactor, zoom: zoomX} = stateData.xAxis.range;\n\t\tlet {scaleFactor: scaleYFactor, zoom: zoomY} = stateData.yAxis.range;\n\t\tthis.scaleXFactor = scaleXFactor;\n\t\tthis.scaleYFactor = scaleYFactor;\n\t\tthis.object3D = new Object3D();\n\t\tthis.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t\tthis.object3D.frustumCulled = false;\n\t\tfor (let i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t\tthis.setupCandles();\n\t}\n\n\tprivate setupCandles() {\n\n\t\t// remove invisible\n\t\tlet {firstDisplayedSegment, lastDisplayedSegment} = this.trend.segmentsManager;\n\n\t\tfor (let segmentId in this.candles) {\n\t\t\tlet segment = this.candles[segmentId].segment;\n\t\t\tlet segmentIsNotDisplayed = (\n\t\t\t\tsegment.startXVal < firstDisplayedSegment.startXVal ||\n\t\t\t\tsegment.endXVal > lastDisplayedSegment.endXVal\n\t\t\t);\n\t\t\tif (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t\t}\n\n\t\tlet segment = firstDisplayedSegment;\n\t\twhile (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t\t\tthis.setupCandle(segment.id, segment.currentAnimationState);\n\t\t\tsegment = segment.getNext();\n\t\t}\n\t}\n\n\tprivate destroyCandles() {\n\t\tfor (let segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t}\n\n\tprivate destroyCandle(segmentId: number) {\n\t\tlet candle = this.candles[segmentId];\n\t\tthis.object3D.remove(candle.getObject3D());\n\t\tdelete this.candles[segmentId];\n\t}\n\n\tprotected onZoomFrame(options: IScreenTransformOptions) {\n\t\tvar currentScale = this.object3D.scale;\n\t\tif (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t\tif (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t}\n\n\tprotected onSegmentsAnimate(trendSegments: TrendSegmentsManager) {\n\t\tfor (let segmentId of trendSegments.animatedSegmentsIds) {\n\t\t\tif (!this.candles[segmentId]) continue;\n\t\t\tlet segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t\t\tthis.setupCandle(segmentId, segmentState);\n\t\t}\n\t}\n\n\t/**\n\t * create or modify candle\n\t */\n\tprivate setupCandle(candleId: number, segmentState: ITrendSegmentState) {\n\t\tlet candleInd = candleId % MAX_CANDLES;\n\n\t\t// get candle from candlesPool to avoid creating new Objects by performance reasons\n\t\tlet candle = this.candlesPool[candleInd];\n\t\tif (!candle) {\n\t\t\tcandle = this.candlesPool[candleInd] = new CandleWidget();\n\t\t}\n\n\t\tif (!this.candles[candleId]) {\n\t\t\tthis.candles[candleId] = candle;\n\t\t\tthis.object3D.add(candle.getObject3D());\n\t\t}\n\t\tcandle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t\tcandle.setSegment(segmentState);\n\t}\n\n\ttoLocalX(xVal: number): number {\n\t\treturn xVal - this.chartState.data.xAxis.range.zeroVal;\n\t}\n\n\ttoLocalY(yVal: number): number {\n\t\treturn yVal - this.chartState.data.yAxis.range.zeroVal;\n\t}\n\n\ttoLocalVec(vec: Vector3): Vector3 {\n\t\treturn new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t}\n}\n\nclass CandleWidget {\n\tsegment: ITrendSegmentState;\n\tprivate rect: Mesh;\n\tprivate vLine: Line;\n\tprivate hLine: Line;\n\tconstructor () {\n\t\tthis.initObject();\n\t}\n\n\tgetObject3D(): Object3D {\n\t\treturn this.rect;\n\t}\n\n\tsetSegment(segment: ITrendSegmentState) {\n\t\tthis.segment = segment;\n\t\tlet color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\n\t\t// update rect\n\t\tlet geometry = this.rect.geometry as PlaneGeometry;\n\t\tlet material = this.rect.material as MeshBasicMaterial;\n\t\tlet width = segment.endXVal - segment.startXVal;\n\t\twidth -= width * MARGIN_PERCENT;\n\t\tlet height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t\tlet [leftTop, rightTop, leftBottom, rightBottom] = geometry.vertices;\n\t\tleftTop.set(-width / 2, height / 2, 0);\n\t\trightTop.set(width / 2, height / 2, 0);\n\t\tleftBottom.set(-width / 2, -height / 2, 0);\n\t\trightBottom.set(width / 2, -height / 2, 0);\n\n\t\t// prevent to draw bars with height < 1px\n\t\tif (Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t\t\tleftBottom.setY(leftBottom.y + 1);\n\t\t\trightBottom.setY(rightBottom.y + 1);\n\t\t}\n\n\t\tmaterial.color.set(color);\n\t\tgeometry.verticesNeedUpdate = true;\n\n\t\t// update lines\n\t\tlet vLineGeometry = this.vLine.geometry as Geometry;\n\t\tlet vLineMaterial = this.vLine.material as LineBasicMaterial;\n\t\tlet lineTop = segment.maxYVal - segment.yVal;\n\t\tlet lineBottom = segment.minYVal - segment.yVal;\n\t\tvLineGeometry.vertices[0].set(0, lineTop, 0);\n\t\tvLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t\tvLineMaterial.color.set(color);\n\t\tvLineGeometry.verticesNeedUpdate = true;\n\n\t\tlet hLineGeometry = this.hLine.geometry as Geometry;\n\t\tlet hLineMaterial = this.hLine.material as LineBasicMaterial;\n\t\tlet lineLeft = (-width) / 2;\n\t\tlet lineRight = width / 2;\n\t\thLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t\thLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t\thLineMaterial.color.set(color);\n\t\thLineGeometry.verticesNeedUpdate = true;\n\n\t}\n\n\tprivate initObject() {\n\t\tthis.rect = new Mesh(\n\t\t\tnew PlaneGeometry(1, 1),\n\t\t\tnew MeshBasicMaterial()\n\t\t);\n\t\tlet vLineGeometry = new Geometry();\n\t\tlet hLineGeometry = new Geometry();\n\t\tvLineGeometry.vertices.push(new Vector3(), new Vector3);\n\t\thLineGeometry.vertices.push(new Vector3(), new Vector3);\n\t\tthis.vLine = new Line(vLineGeometry, new LineBasicMaterial({linewidth: 1}));\n\t\tthis.hLine = new Line(hLineGeometry, new LineBasicMaterial({linewidth: 1}));\n\t\tthis.rect.add(this.vLine);\n\t\tthis.rect.add(this.hLine);\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/widgets/TrendsCandleWidget.ts\n **/"],"sourceRoot":""}