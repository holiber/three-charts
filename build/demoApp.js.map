{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 1f87fa5d0cf1819166dc?d506","webpack:///./demo/demoApp.ts","webpack:///./src/Color.ts?1948","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/src/TrendsMarksPlugin/index.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts","webpack:///./plugins/build/TrendsBeaconWidget/index.js","webpack:///./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js","webpack:///./plugins/build/TrendsLoadingWidget/index.js","webpack:///./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js","webpack:///./plugins/build/TrendsIndicatorWidget/index.js","webpack:///./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","three_charts_1","TrendsMarksPlugin_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chartView","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","title","color","userData","description","icon","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","marks","value","name","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","document","querySelector","TrendsMarksPlugin","items","setState","animations","enabled","mainTrend","getTrend","deadlineMark","chart","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","markOptions","setTimeout","trendsMarks","getPlugin","NAME","createMark","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setInterval","appendData","$checkboxMaintrend","addEventListener","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","Color","set","parseColor","cache","parseInt","replace","exec","Error","isNaN","numberToHexStr","result","toString","repeat","colorStr","rgba","r","g","b","a","hexStr","rgbaStr","getTransparent","opacity","__export","hasOwnProperty","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","h","appendChild","dom","k","d","children","style","display","l","createElement","cssText","preventDefault","performance","e","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","devicePixelRatio","u","n","q","width","height","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","isObject","isObjectObject","o","Object","ctor","prot","constructor","Array","isArray","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","concat","**","growListenerTree","listener","split","slice","shift","warned","console","error","trace","setMaxListeners","event","once","fn","many","ttl","off","apply","arguments","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","position","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","element","callback","EventQueue","add","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","__extends","__","create","Plugin_1","PerspectiveCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","AxisMarksWidget_1","ChartBlankView","$container","pluginsAndWidgets","_this","widgets","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","w","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","backgroundColor","ChartColor","setSize","setPixelRatio","setClearColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","map","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","onTrendsChange","autoscroll","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","autoScrollIsEnabled","CanvasRenderer","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","AxisMarksWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChanged","getOptions","pluginsState","changedState","_i","unsubscriber","deepmerge","target","src","mergeArrays","array","dst","indexOf","keys","key","obj1","obj2","JSON","parse","stringify","toFixed","num","digitsCount","maxDigits","intVal","floor","intStr","lengthDiff","afterPointDigitsCount","afterPointStr","substr","createTexture","canvas","ctx","texture","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","warn","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","s","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Vector3","Trend_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","AnimationManager_1","Easing_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","LIGHT_BLUE","ALL","NUMBER","grid","minSizePx","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","EASING","Quadratic","Out","zoomEase","autoScrollSpeed","autoScrollEase","Linear","None","maxSegmentLength","lineWidth","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","animationManager","AnimationManager","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onChange","onTrendChange","onZoom","tick","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","changedTrends","newData","handleTrendsChange","animationOptions","isAnimationsEnabled","setAimationsEnabled","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","abs","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","_loop_1","this_1","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","scrollXVal","scrollYVal","zoomX","zoomY","transform","vFOV","PI","tan","onZoomFrame","onScrollFrame","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","scrollEventNeeded","zoomEventNeeded","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","isDragMode","zoomXChanged","isAutoscroll","targetX","onTick","targetY","scrollYAnimation","targetZoom","zoomYAnimation","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","timingFunction","Animation","lastTickTime","animateObj","source","isEnabled","i_1","completeAndStop","hasActiveAnimations","easing","progress","setProgress","needToFinish","onFinishHandler","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","onTickCb","onFinishCb","initialVal","targetVal","sourceVal","In","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","sin","Exponential","pow","Circular","sqrt","Elastic","Back","Bounce","unbindList","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","strokeStyle","material","MeshBasicMaterial","side","FrontSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","pxVal","textAlign","getDateStr","stroke","closePath","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","unbind","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","axisMarksWidgets","createAxisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","updatePosition","DEFAULT_INDICATOR_RENDER_FUNCTION","indicatorWidth","indicatorHeight","xCoord","INDICATOR_POS_Z","indicatorRenderFunction","frameValue","line","createLine","indicator","createIndicator","renderIndicator","lineGeometry","onValueChangeHandler","moveAnimation","hasStickMode","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","centerYVal","indicatorPosY","TrendsMarksWidget_1","onRender","DEFAULT_RENDERER","trendsMarksPluginOptions","rects","onMarksChangeHandler","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","TrendMark","createMarkRect","left","top","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","sort","points","markInd","trendMarks","TrendsMarksWidget","offset","MAX_MARKS_IN_ROW","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onZoomFrameHandler","trendMark","show","markMesh","posX","posY","easeOut","isTopSide","rgbaColor","centerX","centerY","textOffset","textPosX","textPosY","arc","fill","lineEndY","moveTo","lineTo","require","__WEBPACK_EXTERNAL_MODULE_2__","PlaneBufferGeometry","TrendBeacon","mesh","onStateChange","stopAnimation","light","animated","object","animationObject","restart","trendsSegments","endPointVector","screenWidth","TrendLoading","deactivate","activate","rotation","center","pointVector","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(35);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(38);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(40);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(42);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chartView;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_charts_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            xVal: val,\r\n\t            title: three_charts_1.Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\r\n\t            color: three_charts_1.Utils.getRandomItem(['#ad57b2', '#0099d9']),\r\n\t            orientation: orientation,\r\n\t            userData: {\r\n\t                description: three_charts_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t                icon: three_charts_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t                descriptionColor: descriptionColor\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chartView = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 200, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {}\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] })\r\n\t    ]);\r\n\t    chartView.setState({ animations: { enabled: false } });\r\n\t    chartView.setState({ animations: { enabled: true } });\r\n\t    window['chartView'] = chartView;\r\n\t    var mainTrend = chartView.getTrend('main');\r\n\t    var deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chartView.chart.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        if (markOptions)\r\n\t            setTimeout(function () {\r\n\t                var trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t                trendsMarks.createMark(markOptions);\r\n\t            }, 500);\r\n\t    });\r\n\t    var i = 0;\r\n\t    chartView.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chartView.getTrend('main').appendData([val]);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chartView.chart.setState({ autoScroll: false });\r\n\t            chartView.chart.zoomToRange(range);\r\n\t            chartView.chart.scrollToEnd().then(function () {\r\n\t                chartView.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Color = (function () {\r\n\t    function Color(color) {\r\n\t        this.set(color);\r\n\t    }\r\n\t    /**!\r\n\t     * @preserve $.parseColor\r\n\t     * Copyright 2011 THEtheChad Elliott\r\n\t     * Released under the MIT and GPL licenses.\r\n\t     */\r\n\t    /**\r\n\t     * Parse hex/rgb{a} color syntax.\r\n\t     * @input string\r\n\t     * @returns array [r,g,b{,o}]\r\n\t     */\r\n\t    Color.parseColor = function (color) {\r\n\t        var cache, p = parseInt // Use p as a byte saving reference to parseInt\r\n\t        , color = color.replace(/\\s\\s*/g, ''); //var\r\n\t        // Checks for 6 digit hex and converts string to integer\r\n\t        if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\r\n\t        else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\r\n\t            cache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\r\n\t        else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\r\n\t            cache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\r\n\t        else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3], +cache[4]];\r\n\t        else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\r\n\t            cache = [+cache[1], +cache[2], +cache[3]];\r\n\t        else\r\n\t            throw Error(color + ' is not supported by parseColor');\r\n\t        // Performs RGBA conversion by default\r\n\t        isNaN(cache[3]) && (cache[3] = 1);\r\n\t        return cache;\r\n\t        // Adds or removes 4th xVal based on rgba support\r\n\t        // Support is flipped twice to prevent erros if\r\n\t        // it's not defined\r\n\t        //return cache.slice(0,3 + !!$.support.rgba);\r\n\t    };\r\n\t    Color.numberToHexStr = function (value) {\r\n\t        var result = value.toString(16);\r\n\t        return '#' + '0'.repeat(6 - result.length) + result;\r\n\t    };\r\n\t    Color.prototype.set = function (color) {\r\n\t        if (typeof color == 'number')\r\n\t            color = Color.numberToHexStr(color);\r\n\t        var colorStr = color;\r\n\t        var rgba = Color.parseColor(colorStr);\r\n\t        this.r = rgba[0];\r\n\t        this.g = rgba[1];\r\n\t        this.b = rgba[2];\r\n\t        this.a = rgba[3];\r\n\t        this.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\r\n\t        this.hexStr = Color.numberToHexStr(this.value);\r\n\t        this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\r\n\t    };\r\n\t    Color.prototype.getTransparent = function (opacity) {\r\n\t        return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\r\n\t    };\r\n\t    return Color;\r\n\t}());\r\n\texports.Color = Color;\r\n\n\n/***/ },\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(34)\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __webpack_require__(2);\n\t        __export(__webpack_require__(9));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(11));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(10));\n\t        __export(__webpack_require__(26));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(32));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(3);\n\t        exports.isPlainObject = __webpack_require__(4);\n\t        exports.EE2 = __webpack_require__(6);\n\t        var es6_promise_1 = __webpack_require__(7);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(8);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(5);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Plugin_1 = __webpack_require__(10);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var Chart_1 = __webpack_require__(14);\n\t        var Widget_1 = __webpack_require__(23);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var AxisWidget_1 = __webpack_require__(24);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var TrendsGradientWidget_1 = __webpack_require__(27);\n\t        var TrendsLineWidget_1 = __webpack_require__(29);\n\t        var TrendsCandleWidget_1 = __webpack_require__(30);\n\t        var deps_1 = __webpack_require__(13);\n\t        var Color_1 = __webpack_require__(26);\n\t        var AxisMarksWidget_1 = __webpack_require__(31);\n\t        var ChartBlankView = function() {\n\t            function ChartBlankView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartBlankView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.ChartColor(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartBlankView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartBlankView.prototype.render = function() {\n\t                this.chart.render();\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartBlankView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartBlankView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartBlankView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartBlankView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartBlankView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartBlankView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.onTrendsChange(function() {\n\t                    return _this.autoscroll();\n\t                }), this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartBlankView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartBlankView.prototype.setupCamera = function() {\n\t                var camSettings = this.chart.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.screen.options);\n\t            };\n\t            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartBlankView.prototype.autoscroll = function() {\n\t                var state = this.chart;\n\t                if (!state.state.autoScroll) return;\n\t                var oldTrendsMaxX = state.state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleX = this.chart.screen.getScreenRightVal();\n\t                    var paddingRightX = this.chart.getPaddingRight();\n\t                    var currentScroll = state.state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = trendsMaxXDelta;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onScrollStop = function() {};\n\t            ChartBlankView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var _this = this;\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                var autoScrollIsEnabled = this.chart.state.autoScroll;\n\t                if (autoScrollIsEnabled) this.chart.setState({\n\t                    autoScroll: false\n\t                });\n\t                this.chart.zoom(zoomValue, zoomOrigin).then(function() {\n\t                    if (autoScrollIsEnabled) _this.setState({\n\t                        autoScroll: true\n\t                    });\n\t                });\n\t            };\n\t            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartBlankView.preinstalledWidgets = [];\n\t            ChartBlankView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartBlankView;\n\t        }();\n\t        exports.ChartBlankView = ChartBlankView;\n\t        var ChartView = function(_super) {\n\t            __extends(ChartView, _super);\n\t            function ChartView() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget, AxisMarksWidget_1.AxisMarksWidget ];\n\t            return ChartView;\n\t        }(ChartBlankView);\n\t        exports.ChartView = ChartView;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(2);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(13);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsManager_1 = __webpack_require__(17);\n\t        var Screen_1 = __webpack_require__(18);\n\t        var AxisMarks_1 = __webpack_require__(19);\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var deps_1 = __webpack_require__(2);\n\t        var AnimationManager_1 = __webpack_require__(21);\n\t        var Easing_1 = __webpack_require__(22);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            SCROLL_STOP: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        autoScroll: true,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: 250,\n\t                        scrollSpeed: 1e3,\n\t                        scrollEase: Easing_1.EASING.Quadratic.Out,\n\t                        zoomEase: Easing_1.EASING.Quadratic.Out,\n\t                        autoScrollSpeed: 1e3,\n\t                        autoScrollEase: Easing_1.EASING.Linear.None\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280\n\t                };\n\t                this.plugins = {};\n\t                this.animationManager = new AnimationManager_1.AnimationManager();\n\t                this.isReady = false;\n\t                this.isDestroyed = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.initListeners();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t                this.isDestroyed = true;\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onScrollStop = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.animationManager.tick();\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                if (this.isDestroyed) {\n\t                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n\t                }\n\t                var stateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (stateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.initListeners = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t                this.ee.on(\"animationsChange\", function(animationOptions) {\n\t                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n\t                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var _this = this;\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getValueOnXAxis = function(x) {\n\t                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            Chart.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Chart.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Chart.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            Chart.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.state.width);\n\t            };\n\t            Chart.prototype.getPaddingRight = function() {\n\t                return this.getValueByScreenX(this.state.width - this.state.xAxis.range.padding.end);\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendSegmentsManager_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var deps_1 = __webpack_require__(2);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chart = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.onInitialStateApplied = function() {\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n\t            };\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chart;\n\t                chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateApplied();\n\t                });\n\t                chartState.onScrollStop(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chart.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chart.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chart.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chart;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chartState, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.chartState.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                });\n\t                this.chartState.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t                this.bindEvents();\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                });\n\t            };\n\t            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                var _this = this;\n\t                var _loop_1 = function(trendName) {\n\t                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n\t                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                    });\n\t                };\n\t                var this_1 = this;\n\t                for (var trendName in this.trends) {\n\t                    _loop_1(trendName);\n\t                }\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var SCREEN_EVENTS = {\n\t            ZOOM_FRAME: \"zoomFrame\",\n\t            SCROLL_FRAME: \"scrollFrame\",\n\t            TRANSFORMATION_FRAME: \"transformationFrame\"\n\t        };\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.chart = chartState;\n\t                var _a = chartState.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chart.state.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chart.state, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\t                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\t                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var isDragMode = chart.state.cursor.dragMode;\n\t                var animations = chart.state.animations;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                var range = chart.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n\t                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.options.scrollX).to(targetX).onTick(function(value) {\n\t                    _this.transform({\n\t                        scrollX: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var range = chart.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n\t                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.scrollY).to(targetY).onTick(function(value) {\n\t                    _this.transform({\n\t                        scrollY: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var targetZoom = chart.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n\t                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomX).to(targetZoom).onTick(function(value) {\n\t                    _this.transform({\n\t                        zoomX: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var targetZoom = chart.state.yAxis.range.zoom;\n\t                var animations = chart.state.animations;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n\t                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomY).to(targetZoom).onTick(function(value) {\n\t                    _this.transform({\n\t                        zoomY: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chart.state.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chart.state.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chart.state.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chart.state.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chart.state.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chart.state.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chart.state.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chart.state.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(11);\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Easing_1 = __webpack_require__(22);\n\t        var AnimationManager = function() {\n\t            function AnimationManager() {\n\t                this.isAnimationsEnabled = true;\n\t                this.animations = [];\n\t            }\n\t            AnimationManager.prototype.animate = function(time, timingFunction) {\n\t                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t                this.animations.push(animation);\n\t                return animation;\n\t            };\n\t            AnimationManager.prototype.animateObj = function(source, target) {};\n\t            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n\t                this.isAnimationsEnabled = isEnabled;\n\t            };\n\t            AnimationManager.prototype.tick = function() {\n\t                var now = Date.now();\n\t                var animations = this.animations;\n\t                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n\t                    var animation = animations[i_1];\n\t                    if (this.isAnimationsEnabled) {\n\t                        animation.tick(now);\n\t                    } else {\n\t                        animation.completeAndStop();\n\t                    }\n\t                }\n\t                var i = animations.length;\n\t                while (i--) {\n\t                    if (animations[i].isFinished) animations.splice(i, 1);\n\t                }\n\t                this.lastTickTime = Date.now();\n\t            };\n\t            AnimationManager.prototype.hasActiveAnimations = function() {\n\t                return this.animations.length > 0;\n\t            };\n\t            return AnimationManager;\n\t        }();\n\t        exports.AnimationManager = AnimationManager;\n\t        var Animation = function() {\n\t            function Animation(animationManager, time, startTime, easing) {\n\t                if (easing === void 0) {\n\t                    easing = Easing_1.EASING.Quadratic.Out;\n\t                }\n\t                this.animationManager = animationManager;\n\t                this.time = time;\n\t                this.startTime = startTime;\n\t                this.easing = easing;\n\t                this.progress = 0;\n\t                this.isFinished = false;\n\t                this.isStopped = false;\n\t            }\n\t            Animation.prototype.tick = function(now) {\n\t                if (!this.isStopped) {\n\t                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n\t                    this.setProgress(progress);\n\t                }\n\t                var needToFinish = (this.progress == 1 || this.isStopped) && !this.isFinished;\n\t                if (needToFinish) this.onFinishHandler();\n\t            };\n\t            Animation.prototype.from = function(sourceObj) {\n\t                if (typeof sourceObj == \"object\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = {};\n\t                    var sourceIteralable = sourceObj;\n\t                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n\t                        this.initialObj[key] = sourceIteralable[key];\n\t                    }\n\t                } else if (typeof sourceObj == \"number\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = sourceObj;\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.to = function(targetObj) {\n\t                this.targetObject = targetObj;\n\t                if (typeof this.initialObj == \"object\") {\n\t                    var initialIteralable = this.initialObj;\n\t                    for (var key in this.targetObject) {\n\t                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.onTick = function(onTickCb) {\n\t                this.onTickCb = onTickCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.then = function(onFinishCb) {\n\t                this.onFinishCb = onFinishCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Animation.prototype.completeAndStop = function() {\n\t                this.setProgress(1);\n\t                this.stop();\n\t            };\n\t            Animation.prototype.setProgress = function(progress) {\n\t                progress = Math.min(progress, 1);\n\t                this.progress = progress;\n\t                var k = this.easing(progress);\n\t                if (typeof this.sourceObj == \"number\") {\n\t                    var initialVal = this.initialObj;\n\t                    var targetVal = this.targetObject;\n\t                    var sourceVal = this.sourceObj;\n\t                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n\t                } else if (this.sourceObj && this.targetObject) {\n\t                    for (var key in this.initialObj) {\n\t                        var initialVal = this.initialObj[key];\n\t                        var targetVal = this.targetObject[key];\n\t                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n\t                    }\n\t                }\n\t                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k);\n\t            };\n\t            Animation.prototype.onFinishHandler = function() {\n\t                this.onFinishCb && this.onFinishCb(this.progress);\n\t                this.isFinished = true;\n\t            };\n\t            return Animation;\n\t        }();\n\t        exports.Animation = Animation;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.EASING = {\n\t            Linear: {\n\t                None: function(k) {\n\t                    return k;\n\t                }\n\t            },\n\t            Quadratic: {\n\t                In: function(k) {\n\t                    return k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return k * (2 - k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k;\n\t                    }\n\t                    return -.5 * (--k * (k - 2) - 1);\n\t                }\n\t            },\n\t            Cubic: {\n\t                In: function(k) {\n\t                    return k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k + 2);\n\t                }\n\t            },\n\t            Quartic: {\n\t                In: function(k) {\n\t                    return k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return 1 - --k * k * k * k;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k;\n\t                    }\n\t                    return -.5 * ((k -= 2) * k * k * k - 2);\n\t                }\n\t            },\n\t            Quintic: {\n\t                In: function(k) {\n\t                    return k * k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k * k * k + 2);\n\t                }\n\t            },\n\t            Sinusoidal: {\n\t                In: function(k) {\n\t                    return 1 - Math.cos(k * Math.PI / 2);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sin(k * Math.PI / 2);\n\t                },\n\t                InOut: function(k) {\n\t                    return .5 * (1 - Math.cos(Math.PI * k));\n\t                }\n\t            },\n\t            Exponential: {\n\t                In: function(k) {\n\t                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t                },\n\t                Out: function(k) {\n\t                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * Math.pow(1024, k - 1);\n\t                    }\n\t                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t                }\n\t            },\n\t            Circular: {\n\t                In: function(k) {\n\t                    return 1 - Math.sqrt(1 - k * k);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sqrt(1 - --k * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n\t                    }\n\t                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t                }\n\t            },\n\t            Elastic: {\n\t                In: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                },\n\t                Out: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    k *= 2;\n\t                    if (k < 1) {\n\t                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                    }\n\t                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t                }\n\t            },\n\t            Back: {\n\t                In: function(k) {\n\t                    var s = 1.70158;\n\t                    return k * k * ((s + 1) * k - s);\n\t                },\n\t                Out: function(k) {\n\t                    var s = 1.70158;\n\t                    return --k * k * ((s + 1) * k + s) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    var s = 1.70158 * 1.525;\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * (k * k * ((s + 1) * k - s));\n\t                    }\n\t                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t                }\n\t            },\n\t            Bounce: {\n\t                In: function(k) {\n\t                    return 1 - exports.EASING.Bounce.Out(1 - k);\n\t                },\n\t                Out: function(k) {\n\t                    if (k < 1 / 2.75) {\n\t                        return 7.5625 * k * k;\n\t                    } else if (k < 2 / 2.75) {\n\t                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n\t                    } else if (k < 2.5 / 2.75) {\n\t                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n\t                    } else {\n\t                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n\t                    }\n\t                },\n\t                InOut: function(k) {\n\t                    if (k < .5) {\n\t                        return exports.EASING.Bounce.In(k * 2) * .5;\n\t                    }\n\t                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(23);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var Color_1 = __webpack_require__(26);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.ChartColor(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(23);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var Color_1 = __webpack_require__(26);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.ChartColor(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartColor = function() {\n\t            function ChartColor(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            ChartColor.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            ChartColor.prototype.set = function(color) {\n\t                if (typeof color == \"number\") {\n\t                    color = color.toString(16);\n\t                    color = \"#\" + \"0\".repeat(6 - color.length) + color;\n\t                }\n\t                var colorStr = color;\n\t                var rgba = ChartColor.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = \"#\" + this.value.toString(16);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            return ChartColor;\n\t        }();\n\t        exports.ChartColor = ChartColor;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsWidget_1 = __webpack_require__(28);\n\t        var Color_1 = __webpack_require__(26);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(23);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(28);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(28);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(23);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var Line = THREE.Line;\n\t        var Mesh = THREE.Mesh;\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var Color_1 = __webpack_require__(26);\n\t        var AxisMarksWidget = function(_super) {\n\t            __extends(AxisMarksWidget, _super);\n\t            function AxisMarksWidget() {\n\t                _super.apply(this, arguments);\n\t                this.axisMarksWidgets = [];\n\t            }\n\t            AxisMarksWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                var _a = this.chart, xAxisMarks = _a.xAxisMarks, yAxisMarks = _a.yAxisMarks;\n\t                var items = xAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t                items = yAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t                this.bindEvents();\n\t            };\n\t            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n\t                var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n\t                this.axisMarksWidgets.push(axisMarkWidget);\n\t                this.object3D.add(axisMarkWidget.getObject3D());\n\t            };\n\t            AxisMarksWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function() {\n\t                    return _this.updateMarksPositions();\n\t                }), this.chart.onResize(function() {\n\t                    return _this.updateMarksPositions();\n\t                }));\n\t            };\n\t            AxisMarksWidget.prototype.updateMarksPositions = function() {\n\t                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n\t                    var widget = _a[_i];\n\t                    widget.updatePosition();\n\t                }\n\t            };\n\t            AxisMarksWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarksWidget.widgetName = \"AxisMarks\";\n\t            return AxisMarksWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisMarksWidget = AxisMarksWidget;\n\t        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n\t            var axisMark = axisMarkWidget.axisMark;\n\t            ctx.fillStyle = axisMark.options.lineColor;\n\t            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n\t            var xCoord = 15;\n\t            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n\t                ctx.textAlign = \"end\";\n\t                xCoord = axisMarkWidget.indicatorWidth;\n\t            }\n\t            ctx.fillText(axisMark.options.title, xCoord, 20);\n\t            if (!axisMark.options.showValue) return;\n\t            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n\t            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n\t        };\n\t        var INDICATOR_POS_Z = .1;\n\t        var AxisMarkWidget = function() {\n\t            function AxisMarkWidget(chartState, axisMark) {\n\t                this.indicatorWidth = 128;\n\t                this.indicatorHeight = 64;\n\t                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n\t                this.chartState = chartState;\n\t                this.axisMark = axisMark;\n\t                this.axisType = axisMark.axisType;\n\t                this.frameValue = axisMark.options.value;\n\t                this.object3D = new Object3D();\n\t                this.object3D.position.setZ(-.1);\n\t                this.line = this.createLine();\n\t                this.object3D.add(this.line);\n\t                this.indicator = this.createIndicator();\n\t                this.object3D.add(this.indicator);\n\t                this.renderIndicator();\n\t                this.updatePosition();\n\t                this.bindEvents();\n\t            }\n\t            AxisMarkWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarkWidget.prototype.createLine = function() {\n\t                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n\t                var lineGeometry = new Geometry();\n\t                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\t                return new Line(lineGeometry, new LineBasicMaterial({\n\t                    color: new Color_1.ChartColor(lineColor).value,\n\t                    linewidth: lineWidth\n\t                }));\n\t            };\n\t            AxisMarkWidget.prototype.createIndicator = function() {\n\t                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n\t            };\n\t            AxisMarkWidget.prototype.renderIndicator = function() {\n\t                var texture = this.indicator.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisMarkWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.axisMark.onDisplayedValueChange(function() {\n\t                    return _this.renderIndicator();\n\t                });\n\t                this.axisMark.onValueChange(function() {\n\t                    return _this.onValueChangeHandler();\n\t                });\n\t            };\n\t            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n\t                var _this = this;\n\t                if (this.moveAnimation) this.moveAnimation.kill();\n\t                var animations = this.chartState.state.animations;\n\t                var targetValue = this.axisMark.options.value;\n\t                var cb = function() {\n\t                    _this.updatePosition();\n\t                };\n\t                if (animations.enabled) {\n\t                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n\t                        frameValue: targetValue,\n\t                        ease: animations.trendChangeEase\n\t                    });\n\t                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.frameValue = targetValue;\n\t                    cb();\n\t                }\n\t            };\n\t            AxisMarkWidget.prototype.updatePosition = function() {\n\t                var chartState = this.chartState;\n\t                var screen = chartState.screen;\n\t                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n\t                var lineGeometry = this.line.geometry;\n\t                var hasStickMode = this.axisMark.options.stickToEdges;\n\t                var _a = this.chartState.state, width = _a.width, height = _a.height;\n\t                if (isXAxis) {\n\t                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n\t                    this.object3D.position.y = screen.getBottom();\n\t                    lineGeometry.vertices[1].setY(height);\n\t                    this.indicator.position.set(this.indicatorWidth / 2, chartState.state.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n\t                } else {\n\t                    var val = this.frameValue;\n\t                    var bottomVal = screen.getBottomVal();\n\t                    var topVal = screen.getTopVal();\n\t                    var needToStickOnTop = hasStickMode && val > topVal;\n\t                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n\t                    var centerYVal = screen.getCenterYVal();\n\t                    this.object3D.position.x = screen.getLeft();\n\t                    if (needToStickOnTop) {\n\t                        this.object3D.position.y = screen.getTop();\n\t                    } else if (needToStickOnBottom) {\n\t                        this.object3D.position.y = screen.getBottom();\n\t                    } else {\n\t                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n\t                    }\n\t                    lineGeometry.vertices[1].setX(width);\n\t                    var indicatorPosY = val > centerYVal ? -35 : 10;\n\t                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n\t                }\n\t                lineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            AxisMarkWidget.typeName = \"simple\";\n\t            return AxisMarkWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(24));\n\t        __export(__webpack_require__(25));\n\t        __export(__webpack_require__(28));\n\t        __export(__webpack_require__(29));\n\t        __export(__webpack_require__(27));\n\t        __export(__webpack_require__(31));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(36));\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar TrendsMarksWidget_1 = __webpack_require__(37);\r\n\t(function (TREND_MARK_SIDE) {\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n\t})(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\r\n\tvar TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\r\n\t(function (EVENTS) {\r\n\t    EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\r\n\t})(exports.EVENTS || (exports.EVENTS = {}));\r\n\tvar EVENTS = exports.EVENTS;\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    trendName: '',\r\n\t    title: '',\r\n\t    color: 'rgb(40,136,75)',\r\n\t    xVal: 0,\r\n\t    orientation: TREND_MARK_SIDE.TOP,\r\n\t    width: 85,\r\n\t    height: 200,\r\n\t    margin: 10,\r\n\t    onRender: TrendsMarksWidget_1.DEFAULT_RENDERER\r\n\t};\r\n\tvar TrendsMarksPlugin = (function (_super) {\r\n\t    __extends(TrendsMarksPlugin, _super);\r\n\t    function TrendsMarksPlugin(trendsMarksPluginOptions) {\r\n\t        _super.call(this, trendsMarksPluginOptions);\r\n\t        this.items = {};\r\n\t        this.rects = {};\r\n\t    }\r\n\t    TrendsMarksPlugin.prototype.onInitialStateApplied = function () {\r\n\t        this.bindEvents();\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onStateChanged = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getOptions = function () {\r\n\t        return _super.prototype.getOptions.call(this);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMark = function (options) {\r\n\t        var marksOptions = this.getOptions().items;\r\n\t        var newMarkOptions = marksOptions.concat([options]);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = { items: newMarkOptions }, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.trendsManager.onSegmentsRebuilded(function () { return _this.updateMarksSegments(); });\r\n\t        this.chart.screen.onZoomFrame(function () { return _this.calclulateMarksPositions(); });\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onMarksChangeHandler = function () {\r\n\t        var trendsMarksOptions = this.getOptions().items;\r\n\t        var actualMarksNames = [];\r\n\t        for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\r\n\t            var options = trendsMarksOptions_1[_i];\r\n\t            var marks = this.items;\r\n\t            // set mark name\r\n\t            if (!options.name) {\r\n\t                options.name = three_charts_1.Utils.getUid().toString();\r\n\t                actualMarksNames.push(options.name);\r\n\t                if (marks[options.name])\r\n\t                    three_charts_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            }\r\n\t            else if (marks[options.name]) {\r\n\t                actualMarksNames.push(options.name);\r\n\t                continue;\r\n\t            }\r\n\t            options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            var mark = new TrendMark(this.chart, options);\r\n\t            marks[options.name] = mark;\r\n\t        }\r\n\t        // delete not relevant marks\r\n\t        for (var markName in this.items) {\r\n\t            if (actualMarksNames.indexOf(markName) != -1)\r\n\t                continue;\r\n\t            delete this.items[markName];\r\n\t        }\r\n\t        this.updateMarksSegments();\r\n\t        this.ee.emit(EVENTS[EVENTS.CHANGE]);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.calclulateMarksPositions = function () {\r\n\t        this.rects = {};\r\n\t        for (var markName in this.items) {\r\n\t            this.createMarkRect(this.items[markName]);\r\n\t        }\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMarkRect = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var chart = this.chart;\r\n\t        var options = mark.options;\r\n\t        var width = options.width, height = options.height, name = options.name;\r\n\t        var left = chart.getPointOnXAxis(mark.xVal) - width / 2;\r\n\t        var top = chart.getPointOnYAxis(mark.yVal);\r\n\t        var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t        var newOffset;\r\n\t        var row = 0;\r\n\t        if (isTopSideMark) {\r\n\t            top += height;\r\n\t        }\r\n\t        var markRect = [left, top, width, height];\r\n\t        var hasIntersection = false;\r\n\t        do {\r\n\t            for (var markName in this.rects) {\r\n\t                var rect = this.rects[markName];\r\n\t                hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\r\n\t                if (!hasIntersection)\r\n\t                    continue;\r\n\t                if (isTopSideMark) {\r\n\t                    markRect[1] = rect[1] + markRect[3] + options.margin;\r\n\t                }\r\n\t                else {\r\n\t                    markRect[1] = rect[1] - rect[3] - options.margin;\r\n\t                }\r\n\t                row++;\r\n\t                break;\r\n\t            }\r\n\t        } while (hasIntersection);\r\n\t        if (isTopSideMark) {\r\n\t            newOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\r\n\t        }\r\n\t        else {\r\n\t            newOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\r\n\t        }\r\n\t        mark._setOffset(newOffset);\r\n\t        mark._setRow(row);\r\n\t        this.rects[name] = markRect;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.updateMarksSegments = function () {\r\n\t        var chart = this.chart;\r\n\t        var trends = chart.trendsManager.trends;\r\n\t        for (var trendName in trends) {\r\n\t            var marks = this.getTrendMarks(trendName);\r\n\t            var marksArr = [];\r\n\t            var xVals = [];\r\n\t            for (var markName in marks) {\r\n\t                var mark = marks[markName];\r\n\t                xVals.push(mark.options.xVal);\r\n\t                marksArr.push(mark);\r\n\t                mark._setSegment(null);\r\n\t            }\r\n\t            marksArr.sort(function (a, b) { return a.options.xVal - b.options.xVal; });\r\n\t            var trend = chart.getTrend(trendName);\r\n\t            var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function (a, b) { return a - b; }));\r\n\t            for (var markInd = 0; markInd < marksArr.length; markInd++) {\r\n\t                marksArr[markInd]._setSegment(points[markInd]);\r\n\t            }\r\n\t        }\r\n\t        this.calclulateMarksPositions();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getTrendMarks = function (trendName) {\r\n\t        var trendMarks = [];\r\n\t        for (var markName in this.items) {\r\n\t            if (this.items[markName].options.trendName != trendName)\r\n\t                continue;\r\n\t            trendMarks.push(this.items[markName]);\r\n\t        }\r\n\t        return trendMarks;\r\n\t    };\r\n\t    TrendsMarksPlugin.NAME = 'TrendsMarks';\r\n\t    TrendsMarksPlugin.providedWidgets = [TrendsMarksWidget_1.TrendsMarksWidget];\r\n\t    return TrendsMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.TrendsMarksPlugin = TrendsMarksPlugin;\r\n\tvar TrendMark = (function () {\r\n\t    function TrendMark(chart, options) {\r\n\t        this.row = 0;\r\n\t        this.options = options;\r\n\t        this.chart = chart;\r\n\t    }\r\n\t    /**\r\n\t     * only for internal usage\r\n\t     */\r\n\t    TrendMark.prototype._setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        if (!segment)\r\n\t            return;\r\n\t        var trend = this.chart.getTrend(this.options.trendName);\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            this.xVal = segment.endXVal;\r\n\t            this.yVal = segment.endYVal;\r\n\t        }\r\n\t        else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.maxYVal;\r\n\t        }\r\n\t        else {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.minYVal;\r\n\t        }\r\n\t    };\r\n\t    TrendMark.prototype._setOffset = function (offset) {\r\n\t        this.offset = offset;\r\n\t    };\r\n\t    TrendMark.prototype._setRow = function (row) {\r\n\t        this.row = row;\r\n\t    };\r\n\t    return TrendMark;\r\n\t}());\r\n\texports.TrendMark = TrendMark;\r\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(36);\r\n\tvar Color_1 = __webpack_require__(26);\r\n\tvar MAX_MARKS_IN_ROW = 3;\r\n\t/**\r\n\t * widget for drawing trends marks for all trends\r\n\t */\r\n\tvar TrendsMarksWidget = (function (_super) {\r\n\t    __extends(TrendsMarksWidget, _super);\r\n\t    function TrendsMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsMarksWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendMarksWidget;\r\n\t    };\r\n\t    TrendsMarksWidget.widgetName = \"TrendsMarks\";\r\n\t    return TrendsMarksWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsMarksWidget = TrendsMarksWidget;\r\n\t/**\r\n\t * widget for drawing trend marks for one trend\r\n\t */\r\n\tvar TrendMarksWidget = (function (_super) {\r\n\t    __extends(TrendMarksWidget, _super);\r\n\t    function TrendMarksWidget(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.marksWidgets = {};\r\n\t        this.object3D = new Object3D();\r\n\t        this.onMarksChange();\r\n\t    }\r\n\t    TrendMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.getTrendsMarksPlugin().onChange(function () { return _this.onMarksChange(); });\r\n\t    };\r\n\t    TrendMarksWidget.prototype.getTrendsMarksPlugin = function () {\r\n\t        return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onMarksChange = function () {\r\n\t        var marksItems = this.getTrendsMarksPlugin().getItems();\r\n\t        var widgets = this.marksWidgets;\r\n\t        var actualMarksNames = [];\r\n\t        for (var markName in marksItems) {\r\n\t            actualMarksNames.push(markName);\r\n\t            if (!widgets[markName])\r\n\t                this.createMarkWidget(marksItems[markName]);\r\n\t        }\r\n\t        for (var markName in this.marksWidgets) {\r\n\t            if (actualMarksNames.indexOf(markName) !== -1)\r\n\t                continue;\r\n\t            this.destroyMarkWidget(markName);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.createMarkWidget = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var markWidget = new TrendMarkWidget(this.chart, mark);\r\n\t        this.marksWidgets[mark.options.name] = markWidget;\r\n\t        this.object3D.add(markWidget.getObject3D());\r\n\t    };\r\n\t    TrendMarksWidget.prototype.destroyMarkWidget = function (markName) {\r\n\t        this.object3D.remove(this.marksWidgets[markName].getObject3D());\r\n\t        delete this.marksWidgets[markName];\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onZoomFrame = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onZoomFrameHandler();\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onSegmentsAnimate = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onSegmentsAnimate();\r\n\t        }\r\n\t    };\r\n\t    return TrendMarksWidget;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendMarksWidget = TrendMarksWidget;\r\n\t/**\r\n\t * widget for drawing one trend mark\r\n\t */\r\n\tvar TrendMarkWidget = (function () {\r\n\t    function TrendMarkWidget(chart, trendMark) {\r\n\t        this.chart = chart;\r\n\t        this.mark = trendMark;\r\n\t        this.initObject();\r\n\t        this.show();\r\n\t    }\r\n\t    TrendMarkWidget.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var options = this.mark.options;\r\n\t        var width = options.width, height = options.height;\r\n\t        var texture = three_charts_1.Utils.createPixelPerfectTexture(width, height, function (ctx) {\r\n\t            options.onRender([_this.mark], ctx, _this.chart);\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.markMesh = new Mesh(new THREE.PlaneGeometry(width, height), material);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.markMesh;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onSegmentsAnimate = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onZoomFrameHandler = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.updatePosition = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        var mark = this.mark;\r\n\t        var options = this.mark.options;\r\n\t        // let meshMaterial = this.markMesh.material as MeshBasicMaterial;\r\n\t        // let lineMaterial = this.line.material as LineBasicMaterial;\r\n\t        // if (mark.row >= MAX_MARKS_IN_ROW - 1) {\r\n\t        // \tmeshMaterial.opacity = 0;\r\n\t        // \tlineMaterial.opacity = 0;\r\n\t        // } else {\r\n\t        // \tmeshMaterial.opacity = 1;\r\n\t        // \tlineMaterial.opacity = 1;\r\n\t        // }\r\n\t        var screen = this.chart.screen;\r\n\t        var posX = screen.getPointOnXAxis(mark.xVal);\r\n\t        var posY = screen.getPointOnYAxis(mark.yVal);\r\n\t        this.markMesh.position.set(posX, posY, 0);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.show = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        this.updatePosition();\r\n\t        var animations = this.chart.state.animations;\r\n\t        var time = animations.enabled ? 1 : 0;\r\n\t        this.markMesh.scale.set(0.01, 0.01, 1);\r\n\t        TweenLite.to(this.markMesh.scale, time, { x: 1, y: 1, ease: Elastic.easeOut });\r\n\t    };\r\n\t    return TrendMarkWidget;\r\n\t}());\r\n\texports.DEFAULT_RENDERER = function (marks, ctx, chart) {\r\n\t    var mark = marks[0];\r\n\t    var options = mark.options;\r\n\t    var isTopSide = options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\r\n\t    var color = options.color !== void 0 ?\r\n\t        new Color_1.Color(options.color) :\r\n\t        new Color_1.Color(chart.getTrend(options.trendName).getOptions().lineColor);\r\n\t    var rgbaColor = color.getTransparent(0.5).rgbaStr;\r\n\t    var width = options.width, height = options.height;\r\n\t    var centerX = Math.round(width / 2);\r\n\t    var centerY = Math.round(height / 2);\r\n\t    var font = chart.state.font.m;\r\n\t    var textOffset = parseInt(font);\r\n\t    var textPosX = centerX;\r\n\t    var textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\r\n\t    // draw rect\r\n\t    ctx.fillStyle = rgbaColor; //'rgba(0,0,0,0.3)';\r\n\t    ctx.strokeStyle = rgbaColor;\r\n\t    ctx.fillRect(0, isTopSide ? 0 : height, width, isTopSide ? textOffset * 2 : -textOffset * 2);\r\n\t    // draw dot\r\n\t    ctx.beginPath();\r\n\t    ctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\r\n\t    ctx.fill();\r\n\t    // draw line\r\n\t    var lineEndY = textPosY;\r\n\t    ctx.beginPath();\r\n\t    ctx.moveTo(centerX, centerY);\r\n\t    ctx.lineTo(textPosX, lineEndY);\r\n\t    ctx.stroke();\r\n\t    // draw text\r\n\t    ctx.beginPath();\r\n\t    ctx.textAlign = 'center';\r\n\t    ctx.font = font;\r\n\t    ctx.fillStyle = 'white';\r\n\t    ctx.strokeStyle = 'white';\r\n\t    ctx.fillText(options.title, Math.round(textPosX), Math.round(textPosY));\r\n\t    // uncomment to preview mark rect\r\n\t    // ctx.rect(0, 0, width, height);\r\n\t    // ctx.stroke();\r\n\t    // let isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t    // var circleOffset = isTopSide ? 30 : 0;\r\n\t    // var circleR = 22;\r\n\t    // var circleX = markWidth / 2;\r\n\t    // var circleY = circleOffset + circleR;\r\n\t    // var textOffset = isTopSide ? 10 : circleR * 2 + 15;\r\n\t    // // title and description\r\n\t    // ctx.beginPath();\r\n\t    // ctx.textAlign = 'center';\r\n\t    // ctx.font = \"11px Arial\";\r\n\t    // ctx.fillStyle = 'rgba(255,255,255, 0.6)';\r\n\t    // ctx.fillText(options.title, circleX, textOffset);\r\n\t    // ctx.fillStyle = options.descriptionColor;\r\n\t    // ctx.fillText(options.description, circleX, textOffset + 12);\r\n\t    //\r\n\t    // // icon circle\r\n\t    // ctx.beginPath();\r\n\t    // ctx.fillStyle = options.iconColor;\r\n\t    // ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\r\n\t    // ctx.fill();\r\n\t    //\r\n\t    // // icon text\r\n\t    // ctx.font = \"19px Arial\";\r\n\t    // ctx.fillStyle = 'rgb(255, 255, 255)';\r\n\t    // ctx.fillText(options.icon, circleX, circleY + 7);\r\n\t};\r\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(39)\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(33)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsBeaconWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsBeaconWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsBeaconWidget = function(_super) {\n\t            __extends(TrendsBeaconWidget, _super);\n\t            function TrendsBeaconWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendBeacon;\n\t            };\n\t            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t            return TrendsBeaconWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t        var TrendBeacon = function(_super) {\n\t            __extends(TrendBeacon, _super);\n\t            function TrendBeacon(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.initObject();\n\t                if (chart.state.animations.enabled) {\n\t                    this.animate();\n\t                }\n\t                this.updatePosition();\n\t            }\n\t            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendBeacon.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendBeacon.prototype.onTrendChange = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return _this.updatePosition();\n\t                }));\n\t                this.bindEvent(this.chart.onChange(function(changedProps) {\n\t                    return _this.onStateChange(changedProps);\n\t                }));\n\t                this.bindEvent(this.chart.onDestroy(function() {\n\t                    return _this.stopAnimation();\n\t                }));\n\t            };\n\t            TrendBeacon.prototype.initObject = function() {\n\t                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                light.scale.set(.2, .2, 1);\n\t                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture()\n\t                })));\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t            };\n\t            TrendBeacon.prototype.animate = function() {\n\t                var _this = this;\n\t                this.animated = true;\n\t                var object = this.mesh;\n\t                var animationObject = {\n\t                    scale: object.scale.x,\n\t                    opacity: object.material.opacity\n\t                };\n\t                this.mesh.scale.set(.1, .1, 1);\n\t                setTimeout(function() {\n\t                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                        scale: 1,\n\t                        opacity: 0\n\t                    });\n\t                    animation.eventCallback(\"onUpdate\", function() {\n\t                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                        object.material.opacity = animationObject.opacity;\n\t                    }).eventCallback(\"onComplete\", function() {\n\t                        _this.animation && animation.restart();\n\t                    });\n\t                }, 500);\n\t            };\n\t            TrendBeacon.prototype.stopAnimation = function() {\n\t                this.animated = false;\n\t                this.animation && this.animation.kill();\n\t                this.animation = null;\n\t            };\n\t            TrendBeacon.createTexture = function() {\n\t                var h = 32, w = 32;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                    ctx.fillStyle = \"white\";\n\t                    ctx.fill();\n\t                });\n\t            };\n\t            TrendBeacon.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                this.segment = trendsSegments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                if (!changedProps.animations) return;\n\t                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                if (changedProps.animations.enabled) {\n\t                    this.animate();\n\t                } else {\n\t                    this.stopAnimation();\n\t                }\n\t            };\n\t            TrendBeacon.prototype.updatePosition = function() {\n\t                var chart = this.chart;\n\t                var xVal, yVal;\n\t                var currentAnimationState = this.segment.currentAnimationState;\n\t                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    xVal = currentAnimationState.endXVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                } else {\n\t                    xVal = currentAnimationState.xVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                }\n\t                var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n\t                var screenWidth = chart.state.width;\n\t                var x = endPointVector.x;\n\t                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t                if (screenX < 0) x = chart.screen.getPointByScreenX(0);\n\t                if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n\t                this.mesh.position.set(x, endPointVector.y, .1);\n\t            };\n\t            return TrendBeacon;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendBeacon = TrendBeacon;\n\t    }, function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(41)\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(33)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsLoadingWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsLoadingWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(4));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, , function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsLoadingWidget = function(_super) {\n\t            __extends(TrendsLoadingWidget, _super);\n\t            function TrendsLoadingWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLoading;\n\t            };\n\t            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t            return TrendsLoadingWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t        var TrendLoading = function(_super) {\n\t            __extends(TrendLoading, _super);\n\t            function TrendLoading(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.isActive = false;\n\t                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendLoading.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                this.deactivate();\n\t            }\n\t            TrendLoading.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled && chart.state.animations.enabled;\n\t            };\n\t            TrendLoading.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendLoading.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.onPrependRequest(function() {\n\t                    return _this.activate();\n\t                }));\n\t            };\n\t            TrendLoading.prototype.prependData = function() {\n\t                this.deactivate();\n\t            };\n\t            TrendLoading.prototype.activate = function() {\n\t                var mesh = this.mesh;\n\t                mesh.material.opacity = 1;\n\t                mesh.rotation.z = 0;\n\t                var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                    z: Math.PI * 2\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animation.restart();\n\t                });\n\t                this.animation = animation;\n\t                this.isActive = true;\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.deactivate = function() {\n\t                this.animation && this.animation.kill();\n\t                this.mesh.material.opacity = 0;\n\t                this.isActive = false;\n\t            };\n\t            TrendLoading.createTexture = function() {\n\t                var h = 64, w = 64;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                    ctx.lineWidth = 5;\n\t                    var center = h / 2;\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                    ctx.stroke();\n\t                });\n\t            };\n\t            TrendLoading.prototype.onZoomFrame = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.updatePosition = function() {\n\t                if (!this.isActive) return;\n\t                var trend = this.trend;\n\t                var segment = trend.segmentsManager.getStartSegment();\n\t                var x, y;\n\t                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    x = segment.currentAnimationState.startXVal;\n\t                    y = segment.currentAnimationState.startYVal;\n\t                } else {\n\t                    x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                    y = segment.currentAnimationState.yVal;\n\t                }\n\t                var pointVector = this.chart.screen.getPointOnChart(x, y);\n\t                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t            };\n\t            return TrendLoading;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendLoading = TrendLoading;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(43)\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(33)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsIndicatorWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsIndicatorWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(3));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var CANVAS_WIDTH = 128;\n\t        var CANVAS_HEIGHT = 64;\n\t        var OFFSET_X = 15;\n\t        var TrendsIndicatorWidget = function(_super) {\n\t            __extends(TrendsIndicatorWidget, _super);\n\t            function TrendsIndicatorWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendIndicator;\n\t            };\n\t            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t            return TrendsIndicatorWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t        var TrendIndicator = function(_super) {\n\t            __extends(TrendIndicator, _super);\n\t            function TrendIndicator(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.initObject();\n\t                this.onTrendChange();\n\t            }\n\t            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasIndicator;\n\t            };\n\t            TrendIndicator.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendIndicator.prototype.onTrendChange = function() {\n\t                var trendData = this.trend.getData();\n\t                var lastItem = trendData[trendData.length - 1];\n\t                var texture = this.mesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                texture.needsUpdate = true;\n\t            };\n\t            TrendIndicator.prototype.initObject = function() {\n\t                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n\t                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"15px Arial\";\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t            };\n\t            TrendIndicator.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                this.segment = segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.updatePosition = function() {\n\t                var chart = this.chart;\n\t                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                var screenWidth = chart.state.width;\n\t                var x = endPointVector.x + OFFSET_X;\n\t                var y = endPointVector.y;\n\t                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                if (indicatorIsOutOfScreen) {\n\t                    if (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n\t                    if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                    y -= 25;\n\t                }\n\t                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t            };\n\t            return TrendIndicator;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendIndicator = TrendIndicator;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1f87fa5d0cf1819166dc\n **/","\n// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/src/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/build/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/build/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/build/TrendsIndicatorWidget';\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chartView: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\txVal: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\n\t\t\tcolor: Utils.getRandomItem(['#ad57b2', '#0099d9']),\n\t\t\torientation: orientation,\n\t\t\tuserData: {\n\t\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\t\tdescriptionColor: descriptionColor\n\t\t\t}\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchartView = new ChartView({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 200, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\t// minSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t]\n\t);\n\n\tchartView.setState({animations: {enabled: false}});\n\tchartView.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chartView'] = chartView;\n\n\tvar mainTrend = chartView.getTrend('main');\n\tvar deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\n\tvar closeMark = chartView.chart.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\tvar markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\tif (markOptions) setTimeout(() => {\n\t\t\tlet trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t\ttrendsMarks.createMark(markOptions);\n\t\t}, 500);\n\t});\n\n\n\n\tvar i = 0;\n\n\tchartView.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chartView.getTrend('main').appendData([val]);\n\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchartView.chart.setState({autoScroll: false});\n\t\t\tchartView.chart.zoomToRange(range);\n\t\t\tchartView.chart.scrollToEnd().then(() => {\n\t\t\t\tchartView.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","export declare type TColor = string | number;\n\n\nexport class Color {\n\n\t/**!\n\t * @preserve $.parseColor\n\t * Copyright 2011 THEtheChad Elliott\n\t * Released under the MIT and GPL licenses.\n\t */\n\t/**\n\t * Parse hex/rgb{a} color syntax.\n\t * @input string\n\t * @returns array [r,g,b{,o}]\n\t */\n\tstatic parseColor(color: string): number[] {\n\n\t\tvar cache: any\n\t\t\t, p = parseInt // Use p as a byte saving reference to parseInt\n\t\t\t, color = color.replace(/\\s\\s*/g, '') // Remove all spaces\n\t\t\t;//var\n\n\t\t// Checks for 6 digit hex and converts string to integer\n\t\tif (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16)];\n\n\t\t// Checks for 3 digit hex and converts string to integer\n\t\telse if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color))\n\t\t\tcache = [p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17];\n\n\n\t\t// Checks for 6 digit hex with alpha and converts string to integer\n\t\telse if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color))\n\t\t\tcache = [p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4]];\n\n\t\t// Checks for rgba and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3], +cache[4]];\n\n\t\t// Checks for rgb and converts string to\n\t\t// integer/float using unary + operator to save bytes\n\t\telse if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color))\n\t\t\tcache = [+cache[1], +cache[2], +cache[3]];\n\n\t\t// Otherwise throw an exception to make debugging easier\n\t\telse throw Error(color + ' is not supported by parseColor');\n\n\t\t// Performs RGBA conversion by default\n\t\tisNaN(cache[3]) && (cache[3] = 1);\n\t\treturn cache;\n\t\t// Adds or removes 4th xVal based on rgba support\n\t\t// Support is flipped twice to prevent erros if\n\t\t// it's not defined\n\t\t//return cache.slice(0,3 + !!$.support.rgba);\n\t}\n\n\tr: number;\n\tg: number;\n\tb: number;\n\ta: number;\n\tvalue: number;\n\thexStr: string;\n\trgbaStr: string;\n\n\tconstructor (color: TColor) {\n\t\tthis.set(color);\n\t}\n\n\tstatic numberToHexStr(value: number): string {\n\t\tlet result = value.toString(16);\n\t\treturn '#' + '0'.repeat(6 - result.length) + result;\n\t}\n\n\n\tset(color: TColor) {\n\t\tif (typeof color == 'number') color = Color.numberToHexStr(color);\n\t\tlet colorStr = color as string;\n\t\tlet rgba = Color.parseColor(colorStr);\n\t\tthis.r = rgba[0];\n\t\tthis.g = rgba[1];\n\t\tthis.b = rgba[2];\n\t\tthis.a = rgba[3];\n\t\tthis.value = (rgba[0] << (8 * 2)) + (rgba[1] << 8) + rgba[2];\n\t\tthis.hexStr = Color.numberToHexStr(this.value);\n\t\tthis.rgbaStr = `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n\t}\n\n\tgetTransparent(opacity: number) {\n\t\treturn new Color(`rgba(${this.hexStr}, ${opacity})`);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Color.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 33\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __webpack_require__(2);\n        __export(__webpack_require__(9));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(11));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(10));\n        __export(__webpack_require__(26));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(32));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(3);\n        exports.isPlainObject = __webpack_require__(4);\n        exports.EE2 = __webpack_require__(6);\n        var es6_promise_1 = __webpack_require__(7);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(8);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(5);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Plugin_1 = __webpack_require__(10);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var Chart_1 = __webpack_require__(14);\n        var Widget_1 = __webpack_require__(23);\n        var Utils_1 = __webpack_require__(11);\n        var AxisWidget_1 = __webpack_require__(24);\n        var GridWidget_1 = __webpack_require__(25);\n        var TrendsGradientWidget_1 = __webpack_require__(27);\n        var TrendsLineWidget_1 = __webpack_require__(29);\n        var TrendsCandleWidget_1 = __webpack_require__(30);\n        var deps_1 = __webpack_require__(13);\n        var Color_1 = __webpack_require__(26);\n        var AxisMarksWidget_1 = __webpack_require__(31);\n        var ChartBlankView = function() {\n            function ChartBlankView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartBlankView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.ChartColor(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartBlankView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartBlankView.prototype.render = function() {\n                this.chart.render();\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartBlankView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartBlankView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartBlankView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartBlankView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartBlankView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartBlankView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.onTrendsChange(function() {\n                    return _this.autoscroll();\n                }), this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartBlankView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartBlankView.prototype.setupCamera = function() {\n                var camSettings = this.chart.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.screen.options);\n            };\n            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartBlankView.prototype.autoscroll = function() {\n                var state = this.chart;\n                if (!state.state.autoScroll) return;\n                var oldTrendsMaxX = state.state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleX = this.chart.screen.getScreenRightVal();\n                    var paddingRightX = this.chart.getPaddingRight();\n                    var currentScroll = state.state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                        return;\n                    }\n                    var scrollDelta = trendsMaxXDelta;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            ChartBlankView.prototype.onScrollStop = function() {};\n            ChartBlankView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartBlankView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartBlankView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var _this = this;\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                var autoScrollIsEnabled = this.chart.state.autoScroll;\n                if (autoScrollIsEnabled) this.chart.setState({\n                    autoScroll: false\n                });\n                this.chart.zoom(zoomValue, zoomOrigin).then(function() {\n                    if (autoScrollIsEnabled) _this.setState({\n                        autoScroll: true\n                    });\n                });\n            };\n            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n            ChartBlankView.preinstalledWidgets = [];\n            ChartBlankView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartBlankView;\n        }();\n        exports.ChartBlankView = ChartBlankView;\n        var ChartView = function(_super) {\n            __extends(ChartView, _super);\n            function ChartView() {\n                _super.apply(this, arguments);\n            }\n            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget, AxisMarksWidget_1.AxisMarksWidget ];\n            return ChartView;\n        }(ChartBlankView);\n        exports.ChartView = ChartView;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var EventEmmiter_1 = __webpack_require__(12);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(2);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(13);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Utils_1 = __webpack_require__(11);\n        var TrendsManager_1 = __webpack_require__(17);\n        var Screen_1 = __webpack_require__(18);\n        var AxisMarks_1 = __webpack_require__(19);\n        var interfaces_1 = __webpack_require__(20);\n        var deps_1 = __webpack_require__(2);\n        var AnimationManager_1 = __webpack_require__(21);\n        var Easing_1 = __webpack_require__(22);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            SCROLL_STOP: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        autoScroll: true,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: 250,\n                        scrollSpeed: 1e3,\n                        scrollEase: Easing_1.EASING.Quadratic.Out,\n                        zoomEase: Easing_1.EASING.Quadratic.Out,\n                        autoScrollSpeed: 1e3,\n                        autoScrollEase: Easing_1.EASING.Linear.None\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280\n                };\n                this.plugins = {};\n                this.animationManager = new AnimationManager_1.AnimationManager();\n                this.isReady = false;\n                this.isDestroyed = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.initListeners();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n                this.isDestroyed = true;\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onScrollStop = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.render = function() {\n                this.animationManager.tick();\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                if (this.isDestroyed) {\n                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n                }\n                var stateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (stateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.initListeners = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n                this.ee.on(\"animationsChange\", function(animationOptions) {\n                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n                    }\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var _this = this;\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getValueOnXAxis = function(x) {\n                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.getValueByScreenX = function(x) {\n                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.getValueByScreenY = function(y) {\n                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            Chart.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Chart.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Chart.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            Chart.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.state.width);\n            };\n            Chart.prototype.getPaddingRight = function() {\n                return this.getValueByScreenX(this.state.width - this.state.xAxis.range.padding.end);\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var TrendSegmentsManager_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var deps_1 = __webpack_require__(2);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chart = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvents();\n            }\n            Trend.prototype.onInitialStateApplied = function() {\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n            };\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chart;\n                chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateApplied();\n                });\n                chartState.onScrollStop(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chart.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chart.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chart.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chart;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(11);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chartState, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.chartState.onZoom(function() {\n                    return _this.onZoomHandler();\n                });\n                this.chartState.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n                this.bindEvents();\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                });\n            };\n            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                var _this = this;\n                var _loop_1 = function(trendName) {\n                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                    });\n                };\n                var this_1 = this;\n                for (var trendName in this.trends) {\n                    _loop_1(trendName);\n                }\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(12);\n        var SCREEN_EVENTS = {\n            ZOOM_FRAME: \"zoomFrame\",\n            SCROLL_FRAME: \"scrollFrame\",\n            TRANSFORMATION_FRAME: \"transformationFrame\"\n        };\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.chart = chartState;\n                var _a = chartState.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chart.state.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chart.state, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var chart = this.chart;\n                var isDragMode = chart.state.cursor.dragMode;\n                var animations = chart.state.animations;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                var range = chart.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.options.scrollX).to(targetX).onTick(function(value) {\n                    _this.transform({\n                        scrollX: value\n                    });\n                });\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var range = chart.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.scrollY).to(targetY).onTick(function(value) {\n                    _this.transform({\n                        scrollY: value\n                    });\n                });\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var targetZoom = chart.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomX).to(targetZoom).onTick(function(value) {\n                    _this.transform({\n                        zoomX: value\n                    });\n                });\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var targetZoom = chart.state.yAxis.range.zoom;\n                var animations = chart.state.animations;\n                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomY).to(targetZoom).onTick(function(value) {\n                    _this.transform({\n                        zoomY: value\n                    });\n                });\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chart.state.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chart.state.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chart.state.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chart.state.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chart.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chart.state.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chart.state.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chart.state.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chart.state.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(11);\n        var interfaces_1 = __webpack_require__(20);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Easing_1 = __webpack_require__(22);\n        var AnimationManager = function() {\n            function AnimationManager() {\n                this.isAnimationsEnabled = true;\n                this.animations = [];\n            }\n            AnimationManager.prototype.animate = function(time, timingFunction) {\n                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n                this.animations.push(animation);\n                return animation;\n            };\n            AnimationManager.prototype.animateObj = function(source, target) {};\n            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n                this.isAnimationsEnabled = isEnabled;\n            };\n            AnimationManager.prototype.tick = function() {\n                var now = Date.now();\n                var animations = this.animations;\n                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n                    var animation = animations[i_1];\n                    if (this.isAnimationsEnabled) {\n                        animation.tick(now);\n                    } else {\n                        animation.completeAndStop();\n                    }\n                }\n                var i = animations.length;\n                while (i--) {\n                    if (animations[i].isFinished) animations.splice(i, 1);\n                }\n                this.lastTickTime = Date.now();\n            };\n            AnimationManager.prototype.hasActiveAnimations = function() {\n                return this.animations.length > 0;\n            };\n            return AnimationManager;\n        }();\n        exports.AnimationManager = AnimationManager;\n        var Animation = function() {\n            function Animation(animationManager, time, startTime, easing) {\n                if (easing === void 0) {\n                    easing = Easing_1.EASING.Quadratic.Out;\n                }\n                this.animationManager = animationManager;\n                this.time = time;\n                this.startTime = startTime;\n                this.easing = easing;\n                this.progress = 0;\n                this.isFinished = false;\n                this.isStopped = false;\n            }\n            Animation.prototype.tick = function(now) {\n                if (!this.isStopped) {\n                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n                    this.setProgress(progress);\n                }\n                var needToFinish = (this.progress == 1 || this.isStopped) && !this.isFinished;\n                if (needToFinish) this.onFinishHandler();\n            };\n            Animation.prototype.from = function(sourceObj) {\n                if (typeof sourceObj == \"object\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = {};\n                    var sourceIteralable = sourceObj;\n                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n                        this.initialObj[key] = sourceIteralable[key];\n                    }\n                } else if (typeof sourceObj == \"number\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = sourceObj;\n                }\n                return this;\n            };\n            Animation.prototype.to = function(targetObj) {\n                this.targetObject = targetObj;\n                if (typeof this.initialObj == \"object\") {\n                    var initialIteralable = this.initialObj;\n                    for (var key in this.targetObject) {\n                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                }\n                return this;\n            };\n            Animation.prototype.onTick = function(onTickCb) {\n                this.onTickCb = onTickCb;\n                return this;\n            };\n            Animation.prototype.then = function(onFinishCb) {\n                this.onFinishCb = onFinishCb;\n                return this;\n            };\n            Animation.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Animation.prototype.completeAndStop = function() {\n                this.setProgress(1);\n                this.stop();\n            };\n            Animation.prototype.setProgress = function(progress) {\n                progress = Math.min(progress, 1);\n                this.progress = progress;\n                var k = this.easing(progress);\n                if (typeof this.sourceObj == \"number\") {\n                    var initialVal = this.initialObj;\n                    var targetVal = this.targetObject;\n                    var sourceVal = this.sourceObj;\n                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n                } else if (this.sourceObj && this.targetObject) {\n                    for (var key in this.initialObj) {\n                        var initialVal = this.initialObj[key];\n                        var targetVal = this.targetObject[key];\n                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n                    }\n                }\n                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k);\n            };\n            Animation.prototype.onFinishHandler = function() {\n                this.onFinishCb && this.onFinishCb(this.progress);\n                this.isFinished = true;\n            };\n            return Animation;\n        }();\n        exports.Animation = Animation;\n    }, function(module, exports) {\n        \"use strict\";\n        exports.EASING = {\n            Linear: {\n                None: function(k) {\n                    return k;\n                }\n            },\n            Quadratic: {\n                In: function(k) {\n                    return k * k;\n                },\n                Out: function(k) {\n                    return k * (2 - k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k;\n                    }\n                    return -.5 * (--k * (k - 2) - 1);\n                }\n            },\n            Cubic: {\n                In: function(k) {\n                    return k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k + 2);\n                }\n            },\n            Quartic: {\n                In: function(k) {\n                    return k * k * k * k;\n                },\n                Out: function(k) {\n                    return 1 - --k * k * k * k;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k;\n                    }\n                    return -.5 * ((k -= 2) * k * k * k - 2);\n                }\n            },\n            Quintic: {\n                In: function(k) {\n                    return k * k * k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k * k * k + 2);\n                }\n            },\n            Sinusoidal: {\n                In: function(k) {\n                    return 1 - Math.cos(k * Math.PI / 2);\n                },\n                Out: function(k) {\n                    return Math.sin(k * Math.PI / 2);\n                },\n                InOut: function(k) {\n                    return .5 * (1 - Math.cos(Math.PI * k));\n                }\n            },\n            Exponential: {\n                In: function(k) {\n                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n                },\n                Out: function(k) {\n                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    if ((k *= 2) < 1) {\n                        return .5 * Math.pow(1024, k - 1);\n                    }\n                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n                }\n            },\n            Circular: {\n                In: function(k) {\n                    return 1 - Math.sqrt(1 - k * k);\n                },\n                Out: function(k) {\n                    return Math.sqrt(1 - --k * k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n                    }\n                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n                }\n            },\n            Elastic: {\n                In: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                },\n                Out: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    k *= 2;\n                    if (k < 1) {\n                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                    }\n                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n                }\n            },\n            Back: {\n                In: function(k) {\n                    var s = 1.70158;\n                    return k * k * ((s + 1) * k - s);\n                },\n                Out: function(k) {\n                    var s = 1.70158;\n                    return --k * k * ((s + 1) * k + s) + 1;\n                },\n                InOut: function(k) {\n                    var s = 1.70158 * 1.525;\n                    if ((k *= 2) < 1) {\n                        return .5 * (k * k * ((s + 1) * k - s));\n                    }\n                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n                }\n            },\n            Bounce: {\n                In: function(k) {\n                    return 1 - exports.EASING.Bounce.Out(1 - k);\n                },\n                Out: function(k) {\n                    if (k < 1 / 2.75) {\n                        return 7.5625 * k * k;\n                    } else if (k < 2 / 2.75) {\n                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n                    } else if (k < 2.5 / 2.75) {\n                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n                    } else {\n                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n                    }\n                },\n                InOut: function(k) {\n                    if (k < .5) {\n                        return exports.EASING.Bounce.In(k * 2) * .5;\n                    }\n                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n                }\n            }\n        };\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(23);\n        var GridWidget_1 = __webpack_require__(25);\n        var Utils_1 = __webpack_require__(11);\n        var interfaces_1 = __webpack_require__(20);\n        var Color_1 = __webpack_require__(26);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.ChartColor(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(23);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(11);\n        var Color_1 = __webpack_require__(26);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.ChartColor(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartColor = function() {\n            function ChartColor(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            ChartColor.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            ChartColor.prototype.set = function(color) {\n                if (typeof color == \"number\") {\n                    color = color.toString(16);\n                    color = \"#\" + \"0\".repeat(6 - color.length) + color;\n                }\n                var colorStr = color;\n                var rgba = ChartColor.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = \"#\" + this.value.toString(16);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            return ChartColor;\n        }();\n        exports.ChartColor = ChartColor;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(11);\n        var TrendsWidget_1 = __webpack_require__(28);\n        var Color_1 = __webpack_require__(26);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(23);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(28);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(11);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(28);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(15);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(11);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(23);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var Utils_1 = __webpack_require__(11);\n        var Line = THREE.Line;\n        var Mesh = THREE.Mesh;\n        var interfaces_1 = __webpack_require__(20);\n        var Color_1 = __webpack_require__(26);\n        var AxisMarksWidget = function(_super) {\n            __extends(AxisMarksWidget, _super);\n            function AxisMarksWidget() {\n                _super.apply(this, arguments);\n                this.axisMarksWidgets = [];\n            }\n            AxisMarksWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                var _a = this.chart, xAxisMarks = _a.xAxisMarks, yAxisMarks = _a.yAxisMarks;\n                var items = xAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n                items = yAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n                this.bindEvents();\n            };\n            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n                var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n                this.axisMarksWidgets.push(axisMarkWidget);\n                this.object3D.add(axisMarkWidget.getObject3D());\n            };\n            AxisMarksWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.chart.screen.onTransformationFrame(function() {\n                    return _this.updateMarksPositions();\n                }), this.chart.onResize(function() {\n                    return _this.updateMarksPositions();\n                }));\n            };\n            AxisMarksWidget.prototype.updateMarksPositions = function() {\n                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n                    var widget = _a[_i];\n                    widget.updatePosition();\n                }\n            };\n            AxisMarksWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarksWidget.widgetName = \"AxisMarks\";\n            return AxisMarksWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisMarksWidget = AxisMarksWidget;\n        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n            var axisMark = axisMarkWidget.axisMark;\n            ctx.fillStyle = axisMark.options.lineColor;\n            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n            var xCoord = 15;\n            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n                ctx.textAlign = \"end\";\n                xCoord = axisMarkWidget.indicatorWidth;\n            }\n            ctx.fillText(axisMark.options.title, xCoord, 20);\n            if (!axisMark.options.showValue) return;\n            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n        };\n        var INDICATOR_POS_Z = .1;\n        var AxisMarkWidget = function() {\n            function AxisMarkWidget(chartState, axisMark) {\n                this.indicatorWidth = 128;\n                this.indicatorHeight = 64;\n                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n                this.chartState = chartState;\n                this.axisMark = axisMark;\n                this.axisType = axisMark.axisType;\n                this.frameValue = axisMark.options.value;\n                this.object3D = new Object3D();\n                this.object3D.position.setZ(-.1);\n                this.line = this.createLine();\n                this.object3D.add(this.line);\n                this.indicator = this.createIndicator();\n                this.object3D.add(this.indicator);\n                this.renderIndicator();\n                this.updatePosition();\n                this.bindEvents();\n            }\n            AxisMarkWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarkWidget.prototype.createLine = function() {\n                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n                var lineGeometry = new Geometry();\n                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n                return new Line(lineGeometry, new LineBasicMaterial({\n                    color: new Color_1.ChartColor(lineColor).value,\n                    linewidth: lineWidth\n                }));\n            };\n            AxisMarkWidget.prototype.createIndicator = function() {\n                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n                var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n            };\n            AxisMarkWidget.prototype.renderIndicator = function() {\n                var texture = this.indicator.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n                texture.needsUpdate = true;\n            };\n            AxisMarkWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.axisMark.onDisplayedValueChange(function() {\n                    return _this.renderIndicator();\n                });\n                this.axisMark.onValueChange(function() {\n                    return _this.onValueChangeHandler();\n                });\n            };\n            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n                var _this = this;\n                if (this.moveAnimation) this.moveAnimation.kill();\n                var animations = this.chartState.state.animations;\n                var targetValue = this.axisMark.options.value;\n                var cb = function() {\n                    _this.updatePosition();\n                };\n                if (animations.enabled) {\n                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n                        frameValue: targetValue,\n                        ease: animations.trendChangeEase\n                    });\n                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.frameValue = targetValue;\n                    cb();\n                }\n            };\n            AxisMarkWidget.prototype.updatePosition = function() {\n                var chartState = this.chartState;\n                var screen = chartState.screen;\n                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n                var lineGeometry = this.line.geometry;\n                var hasStickMode = this.axisMark.options.stickToEdges;\n                var _a = this.chartState.state, width = _a.width, height = _a.height;\n                if (isXAxis) {\n                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n                    this.object3D.position.y = screen.getBottom();\n                    lineGeometry.vertices[1].setY(height);\n                    this.indicator.position.set(this.indicatorWidth / 2, chartState.state.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n                } else {\n                    var val = this.frameValue;\n                    var bottomVal = screen.getBottomVal();\n                    var topVal = screen.getTopVal();\n                    var needToStickOnTop = hasStickMode && val > topVal;\n                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n                    var centerYVal = screen.getCenterYVal();\n                    this.object3D.position.x = screen.getLeft();\n                    if (needToStickOnTop) {\n                        this.object3D.position.y = screen.getTop();\n                    } else if (needToStickOnBottom) {\n                        this.object3D.position.y = screen.getBottom();\n                    } else {\n                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n                    }\n                    lineGeometry.vertices[1].setX(width);\n                    var indicatorPosY = val > centerYVal ? -35 : 10;\n                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n                }\n                lineGeometry.verticesNeedUpdate = true;\n            };\n            AxisMarkWidget.typeName = \"simple\";\n            return AxisMarkWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(24));\n        __export(__webpack_require__(25));\n        __export(__webpack_require__(28));\n        __export(__webpack_require__(29));\n        __export(__webpack_require__(27));\n        __export(__webpack_require__(31));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 34\n ** module chunks = 1\n **/","export * from './TrendsMarksPlugin';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/index.ts\n **/","\nimport Vector3 = THREE.Vector3;\nimport { ChartPlugin, ChartWidget, TrendSegment, TREND_TYPE, Utils, Chart } from 'three-charts';\nimport { TrendsMarksWidget, DEFAULT_RENDERER } from './TrendsMarksWidget';\nimport { TColor } from \"../../../src/Color\";\n\nexport enum TREND_MARK_SIDE {TOP, BOTTOM}\nexport enum EVENTS {CHANGE}\nexport type TTrendsMarksPluginOptions = {items: ITrendMarkOptions[]};\n\nexport interface ITrendMarkOptions {\n\ttrendName: string,\n\txVal: number,\n\ttitle?: string,\n\tname?: string,\n\tcolor?: TColor,\n\torientation?: TREND_MARK_SIDE,\n\twidth?: number,\n\theight?: number,\n\t/**\n\t * space between marks\n\t */\n\tmargin?: number,\n\t/**\n\t * custom render function\n\t */\n\tonRender?: (\n\t\tmarks: TrendMark[],\n\t\tctx: CanvasRenderingContext2D,\n\t\tchart: Chart\n\t) => any,\n\tuserData?: any\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: ITrendMarkOptions = {\n\ttrendName: '',\n\ttitle: '',\n\tcolor: 'rgb(40,136,75)',\n\txVal: 0,\n\torientation: TREND_MARK_SIDE.TOP,\n\twidth: 85,\n\theight: 200,\n\tmargin: 10,\n\tonRender: DEFAULT_RENDERER\n};\n\n\nexport class TrendsMarksPlugin extends ChartPlugin {\n\tstatic NAME = 'TrendsMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [TrendsMarksWidget];\n\n\tprivate items: {[name: string]: TrendMark} = {};\n\tprivate rects: {[name: string]: number[]} = {};\n\n\tconstructor(trendsMarksPluginOptions: TTrendsMarksPluginOptions) {\n\t\tsuper(trendsMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateApplied() {\n\t\tthis.bindEvents();\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tprotected onStateChanged() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\n\tgetOptions(): TTrendsMarksPluginOptions {\n\t\treturn super.getOptions() as TTrendsMarksPluginOptions;\n\t}\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n\tcreateMark(options: ITrendMarkOptions) {\n\t\tvar marksOptions = this.getOptions().items;\n\t\tvar newMarkOptions = marksOptions.concat([options]);\n\t\tthis.chart.setState({pluginsState: {[this.name]: {items: newMarkOptions}}});\n\t}\n\n\tonChange(cb: () => any) {\n\t\treturn this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.trendsManager.onSegmentsRebuilded(() => this.updateMarksSegments());\n\t\tthis.chart.screen.onZoomFrame(() => this.calclulateMarksPositions());\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tprivate onMarksChangeHandler() {\n\t\tvar trendsMarksOptions = this.getOptions().items;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let options of trendsMarksOptions) {\n\t\t\tvar marks = this.items;\n\n\t\t\t// set mark name\n\t\t\tif (!options.name) {\n\t\t\t\toptions.name = Utils.getUid().toString();\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t} else if (marks[options.name]) {\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\n\t\t\tlet mark = new TrendMark(this.chart, options);\n\t\t\tmarks[options.name] = mark;\n\t\t}\n\n\t\t// delete not relevant marks\n\t\tfor (let markName in this.items) {\n\t\t\tif (actualMarksNames.indexOf(markName) != -1) continue;\n\t\t\tdelete this.items[markName];\n\t\t}\n\t\tthis.updateMarksSegments();\n\t\tthis.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t}\n\n\n\tprivate calclulateMarksPositions() {\n\t\tthis.rects = {};\n\t\tfor (let markName in this.items) {\n\t\t\tthis.createMarkRect(this.items[markName]);\n\t\t}\n\t}\n\n\tprivate createMarkRect(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\n\t\tlet chart = this.chart;\n\t\tlet options = mark.options;\n\t\tlet {width, height, name} = options;\n\t\tlet left = chart.getPointOnXAxis(mark.xVal) - width / 2;\n\t\tlet top = chart.getPointOnYAxis(mark.yVal);\n\t\tlet isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t\tlet newOffset: number;\n\t\tlet row = 0;\n\n\t\tif (isTopSideMark) {\n\t\t\ttop += height;\n\t\t}\n\n\t\tlet markRect = [left, top, width, height];\n\t\tlet hasIntersection = false;\n\t\tdo {\n\t\t\tfor (let markName in this.rects) {\n\t\t\t\tlet rect = this.rects[markName];\n\t\t\t\thasIntersection = Utils.rectsIntersect(rect, markRect);\n\t\t\t\tif (!hasIntersection) continue;\n\t\t\t\tif (isTopSideMark) {\n\t\t\t\t\tmarkRect[1] = rect[1] + markRect[3] + options.margin;\n\t\t\t\t} else {\n\t\t\t\t\tmarkRect[1] = rect[1] - rect[3] - options.margin;\n\t\t\t\t}\n\t\t\t\trow++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (hasIntersection);\n\n\t\tif (isTopSideMark) {\n\t\t\tnewOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\n\t\t} else {\n\t\t\tnewOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\n\t\t}\n\n\t\tmark._setOffset(newOffset);\n\t\tmark._setRow(row);\n\t\tthis.rects[name] = markRect;\n\t}\n\n\tprivate updateMarksSegments() {\n\t\tlet chart = this.chart;\n\t\tlet trends = chart.trendsManager.trends;\n\t\tfor (let trendName in trends) {\n\t\t\tvar marks = this.getTrendMarks(trendName);\n\t\t\tvar marksArr: TrendMark[] = [];\n\t\t\tvar xVals: number[] = [];\n\t\t\tfor (let markName in marks) {\n\t\t\t\tlet mark = marks[markName];\n\t\t\t\txVals.push(mark.options.xVal);\n\t\t\t\tmarksArr.push(mark);\n\t\t\t\tmark._setSegment(null);\n\t\t\t}\n\t\t\tmarksArr.sort((a, b) => a.options.xVal - b.options.xVal);\n\t\t\tlet trend = chart.getTrend(trendName);\n\t\t\tlet points = trend.segmentsManager.getSegmentsForXValues(xVals.sort((a, b) => a - b));\n\t\t\tfor (let markInd = 0; markInd < marksArr.length; markInd++) {\n\t\t\t\tmarksArr[markInd]._setSegment(points[markInd]);\n\t\t\t}\n\t\t}\n\t\tthis.calclulateMarksPositions();\n\t}\n\n\tprivate getTrendMarks(trendName: string): TrendMark[] {\n\t\tlet trendMarks: TrendMark[] = [];\n\t\tfor (let markName in this.items) {\n\t\t\tif (this.items[markName].options.trendName != trendName) continue;\n\t\t\ttrendMarks.push(this.items[markName]);\n\t\t}\n\t\treturn trendMarks;\n\t}\n\n}\n\nexport class TrendMark {\n\toptions: ITrendMarkOptions;\n\tsegment: TrendSegment;\n\txVal: number;\n\tyVal: number;\n\toffset: number;\n\trow = 0;\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart, options: ITrendMarkOptions) {\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t}\n\n\n\t/**\n\t * only for internal usage\n\t */\n\t_setSegment(segment: TrendSegment) {\n\t\tthis.segment = segment;\n\t\tif (!segment) return;\n\n\t\tlet trend = this.chart.getTrend(this.options.trendName);\n\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tthis.xVal = segment.endXVal;\n\t\t\tthis.yVal = segment.endYVal;\n\t\t} else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.maxYVal;\n\t\t} else {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.minYVal;\n\t\t}\n\t}\n\n\t_setOffset(offset: number) {\n\t\tthis.offset = offset;\n\t}\n\n\t_setRow(row: number) {\n\t\tthis.row = row;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts\n **/","import {Chart, Utils, TrendsWidget, TrendWidget } from 'three-charts';\nimport Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport LineSegments = THREE.LineSegments;\nimport LineDashedMaterial = THREE.LineDashedMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport { TrendMark, TREND_MARK_SIDE, TrendsMarksPlugin } from \"./TrendsMarksPlugin\";\nimport { Color } from \"../../../src/Color\";\n\n\nconst MAX_MARKS_IN_ROW = 3;\n\n/**\n * widget for drawing trends marks for all trends\n */\nexport class TrendsMarksWidget extends TrendsWidget<TrendMarksWidget> {\n\tstatic widgetName = \"TrendsMarks\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendMarksWidget;\n\t}\n}\n\n/**\n * widget for drawing trend marks for one trend\n */\nexport class TrendMarksWidget extends TrendWidget {\n\n\tprivate trendsMarksPlugin: TrendsMarksPlugin;\n\tprivate object3D: Object3D;\n\tprivate marksWidgets: {[name: string]: TrendMarkWidget} = {};\n\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.object3D = new Object3D();\n\t\tthis.onMarksChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\t\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.getTrendsMarksPlugin().onChange(() => this.onMarksChange());\n\t}\n\n\tprivate getTrendsMarksPlugin(): TrendsMarksPlugin {\n\t\treturn this.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t}\n\n\tprivate onMarksChange() {\n\t\tlet marksItems = this.getTrendsMarksPlugin().getItems();\n\t\tlet widgets = this.marksWidgets;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let markName in marksItems) {\n\t\t\tactualMarksNames.push(markName);\n\t\t\tif (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t\t}\n\t\tfor (let markName in this.marksWidgets) {\n\t\t\tif (actualMarksNames.indexOf(markName) !== -1) continue;\n\t\t\tthis.destroyMarkWidget(markName);\n\t\t}\n\n\t}\n\t\n\tprivate createMarkWidget(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\t\tlet markWidget = new TrendMarkWidget(this.chart, mark);\n\t\tthis.marksWidgets[mark.options.name] = markWidget;\n\t\tthis.object3D.add(markWidget.getObject3D());\n\t}\n\n\tprivate destroyMarkWidget(markName: string) {\n\t\tthis.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t\tdelete this.marksWidgets[markName];\n\t}\n\n\tprotected onZoomFrame() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onZoomFrameHandler();\n\t\t}\n\t}\n\n\tprotected onSegmentsAnimate() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onSegmentsAnimate();\n\t\t}\n\t}\n}\n\n/**\n * widget for drawing one trend mark\n */\nclass TrendMarkWidget {\n\tprivate chart: Chart;\n\tprivate mark: TrendMark;\n\tprivate markMesh: Mesh;\n\n\tconstructor(chart: Chart, trendMark: TrendMark) {\n\t\tthis.chart = chart;\n\t\tthis.mark = trendMark;\n\t\tthis.initObject();\n\t\tthis.show();\n\t}\n\t\n\tprotected initObject() {\n\t\tlet options = this.mark.options;\n\t\tlet {width, height} = options;\n\n\t\tlet texture = Utils.createPixelPerfectTexture(width, height, (ctx) => {\n\t\t\toptions.onRender([this.mark], ctx, this.chart);\n\t\t});\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tthis.markMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(width, height),\n\t\t\tmaterial\n\t\t);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.markMesh;\n\t}\n\n\tonSegmentsAnimate() {\n\t\tthis.updatePosition();\n\t}\n\n\tonZoomFrameHandler() {\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.mark.segment) return;\n\t\tlet mark = this.mark;\n\t\tlet options = this.mark.options;\n\t\t// let meshMaterial = this.markMesh.material as MeshBasicMaterial;\n\t\t// let lineMaterial = this.line.material as LineBasicMaterial;\n\t\t// if (mark.row >= MAX_MARKS_IN_ROW - 1) {\n\t\t// \tmeshMaterial.opacity = 0;\n\t\t// \tlineMaterial.opacity = 0;\n\t\t// } else {\n\t\t// \tmeshMaterial.opacity = 1;\n\t\t// \tlineMaterial.opacity = 1;\n\t\t// }\n\n\t\tlet screen = this.chart.screen;\n\t\tlet posX = screen.getPointOnXAxis(mark.xVal);\n\t\tlet posY = screen.getPointOnYAxis(mark.yVal);\n\t\tthis.markMesh.position.set(posX, posY, 0);\n\t}\n\n\tprivate show() {\n\t\tif (!this.mark.segment) return;\n\t\tthis.updatePosition();\n\t\tvar animations = this.chart.state.animations;\n\t\tvar time = animations.enabled ? 1 : 0;\n\t\tthis.markMesh.scale.set(0.01, 0.01, 1);\n\t\tTweenLite.to(this.markMesh.scale, time, {x: 1, y: 1, ease: Elastic.easeOut});\n\t}\n}\n\nexport const DEFAULT_RENDERER = (\n\tmarks: TrendMark[],\n\tctx: CanvasRenderingContext2D,\n\tchart: Chart\n) =>  {\n\n\tlet mark = marks[0];\n\tlet options = mark.options;\n\tlet isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\n\tlet color = options.color !== void 0 ?\n\t\tnew Color(options.color) :\n\t\tnew Color(chart.getTrend(options.trendName).getOptions().lineColor);\n\tlet rgbaColor = color.getTransparent(0.5).rgbaStr;\n\tlet {width, height} = options;\n\tlet centerX = Math.round(width / 2);\n\tlet centerY =  Math.round(height / 2);\n\tlet font = chart.state.font.m;\n\tlet textOffset = parseInt(font);\n\tlet textPosX = centerX;\n\tlet textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\n\n\t// draw rect\n\tctx.fillStyle = rgbaColor; //'rgba(0,0,0,0.3)';\n\tctx.strokeStyle = rgbaColor;\n\tctx.fillRect(\n\t\t0,\n\t\tisTopSide ? 0 : height,\n\t\twidth,\n\t\tisTopSide ? textOffset * 2 : -textOffset * 2\n\t);\n\n\n\t// draw dot\n\tctx.beginPath();\n\tctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\n\tctx.fill();\n\n\t// draw line\n\tlet lineEndY = textPosY ;\n\tctx.beginPath();\n\tctx.moveTo(centerX, centerY);\n\tctx.lineTo(textPosX, lineEndY);\n\tctx.stroke();\n\n\t// draw text\n\tctx.beginPath();\n\tctx.textAlign = 'center';\n\tctx.font = font;\n\tctx.fillStyle = 'white';\n\tctx.strokeStyle = 'white';\n\tctx.fillText(\n\t\toptions.title,\n\t\tMath.round(textPosX),\n\t\tMath.round(textPosY)\n\t);\n\n\n\n\t// uncomment to preview mark rect\n\t// ctx.rect(0, 0, width, height);\n\t// ctx.stroke();\n\n\n\t// let isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\n\t// var circleOffset = isTopSide ? 30 : 0;\n\t// var circleR = 22;\n\t// var circleX = markWidth / 2;\n\t// var circleY = circleOffset + circleR;\n\t// var textOffset = isTopSide ? 10 : circleR * 2 + 15;\n\n\t// // title and description\n\t// ctx.beginPath();\n\t// ctx.textAlign = 'center';\n\t// ctx.font = \"11px Arial\";\n\t// ctx.fillStyle = 'rgba(255,255,255, 0.6)';\n\t// ctx.fillText(options.title, circleX, textOffset);\n\t// ctx.fillStyle = options.descriptionColor;\n\t// ctx.fillText(options.description, circleX, textOffset + 12);\n    //\n\t// // icon circle\n\t// ctx.beginPath();\n\t// ctx.fillStyle = options.iconColor;\n\t// ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n\t// ctx.fill();\n    //\n\t// // icon text\n\t// ctx.font = \"19px Arial\";\n\t// ctx.fillStyle = 'rgb(255, 255, 255)';\n\t// ctx.fillText(options.icon, circleX, circleY + 7);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts\n **/","module.exports = require(\"./TrendsBeaconWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/index.js\n ** module id = 38\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsBeaconWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsBeaconWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsBeaconWidget = function(_super) {\n            __extends(TrendsBeaconWidget, _super);\n            function TrendsBeaconWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                return TrendBeacon;\n            };\n            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n            return TrendsBeaconWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n        var TrendBeacon = function(_super) {\n            __extends(TrendBeacon, _super);\n            function TrendBeacon(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.initObject();\n                if (chart.state.animations.enabled) {\n                    this.animate();\n                }\n                this.updatePosition();\n            }\n            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n            };\n            TrendBeacon.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendBeacon.prototype.onTrendChange = function() {\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return _this.updatePosition();\n                }));\n                this.bindEvent(this.chart.onChange(function(changedProps) {\n                    return _this.onStateChange(changedProps);\n                }));\n                this.bindEvent(this.chart.onDestroy(function() {\n                    return _this.stopAnimation();\n                }));\n            };\n            TrendBeacon.prototype.initObject = function() {\n                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture(),\n                    transparent: true\n                }));\n                light.scale.set(.2, .2, 1);\n                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture()\n                })));\n                this.segment = this.trend.segmentsManager.getEndSegment();\n            };\n            TrendBeacon.prototype.animate = function() {\n                var _this = this;\n                this.animated = true;\n                var object = this.mesh;\n                var animationObject = {\n                    scale: object.scale.x,\n                    opacity: object.material.opacity\n                };\n                this.mesh.scale.set(.1, .1, 1);\n                setTimeout(function() {\n                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                        scale: 1,\n                        opacity: 0\n                    });\n                    animation.eventCallback(\"onUpdate\", function() {\n                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n                        object.material.opacity = animationObject.opacity;\n                    }).eventCallback(\"onComplete\", function() {\n                        _this.animation && animation.restart();\n                    });\n                }, 500);\n            };\n            TrendBeacon.prototype.stopAnimation = function() {\n                this.animated = false;\n                this.animation && this.animation.kill();\n                this.animation = null;\n            };\n            TrendBeacon.createTexture = function() {\n                var h = 32, w = 32;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.beginPath();\n                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                });\n            };\n            TrendBeacon.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                this.segment = trendsSegments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onStateChange = function(changedProps) {\n                if (!changedProps.animations) return;\n                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                if (changedProps.animations.enabled) {\n                    this.animate();\n                } else {\n                    this.stopAnimation();\n                }\n            };\n            TrendBeacon.prototype.updatePosition = function() {\n                var chart = this.chart;\n                var xVal, yVal;\n                var currentAnimationState = this.segment.currentAnimationState;\n                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    xVal = currentAnimationState.endXVal;\n                    yVal = currentAnimationState.endYVal;\n                } else {\n                    xVal = currentAnimationState.xVal;\n                    yVal = currentAnimationState.endYVal;\n                }\n                var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n                var screenWidth = chart.state.width;\n                var x = endPointVector.x;\n                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n                if (screenX < 0) x = chart.screen.getPointByScreenX(0);\n                if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n                this.mesh.position.set(x, endPointVector.y, .1);\n            };\n            return TrendBeacon;\n        }(three_charts_1.TrendWidget);\n        exports.TrendBeacon = TrendBeacon;\n    }, function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js\n ** module id = 39\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsLoadingWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/index.js\n ** module id = 40\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsLoadingWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsLoadingWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(4));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, , function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsLoadingWidget = function(_super) {\n            __extends(TrendsLoadingWidget, _super);\n            function TrendsLoadingWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLoading;\n            };\n            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n            return TrendsLoadingWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n        var TrendLoading = function(_super) {\n            __extends(TrendLoading, _super);\n            function TrendLoading(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.isActive = false;\n                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendLoading.createTexture(),\n                    transparent: true\n                }));\n                this.deactivate();\n            }\n            TrendLoading.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled && chart.state.animations.enabled;\n            };\n            TrendLoading.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendLoading.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.onPrependRequest(function() {\n                    return _this.activate();\n                }));\n            };\n            TrendLoading.prototype.prependData = function() {\n                this.deactivate();\n            };\n            TrendLoading.prototype.activate = function() {\n                var mesh = this.mesh;\n                mesh.material.opacity = 1;\n                mesh.rotation.z = 0;\n                var animation = TweenLite.to(this.mesh.rotation, .5, {\n                    z: Math.PI * 2\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animation.restart();\n                });\n                this.animation = animation;\n                this.isActive = true;\n                this.updatePosition();\n            };\n            TrendLoading.prototype.deactivate = function() {\n                this.animation && this.animation.kill();\n                this.mesh.material.opacity = 0;\n                this.isActive = false;\n            };\n            TrendLoading.createTexture = function() {\n                var h = 64, w = 64;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                    ctx.lineWidth = 5;\n                    var center = h / 2;\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n                    ctx.stroke();\n                });\n            };\n            TrendLoading.prototype.onZoomFrame = function() {\n                this.updatePosition();\n            };\n            TrendLoading.prototype.updatePosition = function() {\n                if (!this.isActive) return;\n                var trend = this.trend;\n                var segment = trend.segmentsManager.getStartSegment();\n                var x, y;\n                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    x = segment.currentAnimationState.startXVal;\n                    y = segment.currentAnimationState.startYVal;\n                } else {\n                    x = segment.currentAnimationState.xVal - segment.maxLength;\n                    y = segment.currentAnimationState.yVal;\n                }\n                var pointVector = this.chart.screen.getPointOnChart(x, y);\n                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n            };\n            return TrendLoading;\n        }(three_charts_1.TrendWidget);\n        exports.TrendLoading = TrendLoading;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js\n ** module id = 41\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsIndicatorWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/index.js\n ** module id = 42\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsIndicatorWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsIndicatorWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(3));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var three_charts_1 = __webpack_require__(2);\n        var CANVAS_WIDTH = 128;\n        var CANVAS_HEIGHT = 64;\n        var OFFSET_X = 15;\n        var TrendsIndicatorWidget = function(_super) {\n            __extends(TrendsIndicatorWidget, _super);\n            function TrendsIndicatorWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                return TrendIndicator;\n            };\n            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n            return TrendsIndicatorWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n        var TrendIndicator = function(_super) {\n            __extends(TrendIndicator, _super);\n            function TrendIndicator(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.initObject();\n                this.onTrendChange();\n            }\n            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasIndicator;\n            };\n            TrendIndicator.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendIndicator.prototype.onTrendChange = function() {\n                var trendData = this.trend.getData();\n                var lastItem = trendData[trendData.length - 1];\n                var texture = this.mesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                texture.needsUpdate = true;\n            };\n            TrendIndicator.prototype.initObject = function() {\n                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"15px Arial\";\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n            };\n            TrendIndicator.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                this.segment = segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.updatePosition = function() {\n                var chart = this.chart;\n                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                var screenWidth = chart.state.width;\n                var x = endPointVector.x + OFFSET_X;\n                var y = endPointVector.y;\n                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                if (indicatorIsOutOfScreen) {\n                    if (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n                    if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                    y -= 25;\n                }\n                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n            };\n            return TrendIndicator;\n        }(three_charts_1.TrendWidget);\n        exports.TrendIndicator = TrendIndicator;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js\n ** module id = 43\n ** module chunks = 1\n **/"],"sourceRoot":""}