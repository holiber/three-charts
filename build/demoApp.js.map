{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 5c809d50e94d1c2dc6d8?7c38","webpack:///./demo/demoApp.ts","webpack:///./src/Easing.ts?492d","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/src/TrendsMarksPlugin/index.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts","webpack:///./plugins/src/TrendsBeaconWidget/index.ts","webpack:///./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts","webpack:///./plugins/src/TrendsLoadingWidget/index.ts","webpack:///./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts","webpack:///./plugins/src/TrendsIndicatorWidget/index.ts","webpack:///./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","three_charts_1","TrendsMarksPlugin_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chartView","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","title","color","userData","description","icon","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","marks","value","name","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","document","querySelector","TrendsMarksPlugin","items","mainTrend","getTrend","deadlineMark","chart","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","markOptions","setTimeout","trendsMarks","getPlugin","NAME","createMark","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setInterval","appendData","$checkboxMaintrend","addEventListener","setState","enabled","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","EASING","Linear","None","k","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","pow","Circular","sqrt","Elastic","Back","s","Bounce","__export","hasOwnProperty","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","h","a","appendChild","dom","d","children","style","display","l","createElement","cssText","preventDefault","g","performance","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","devicePixelRatio","u","n","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","isObject","isObjectObject","o","Object","toString","ctor","prot","constructor","Array","isArray","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","concat","**","growListenerTree","listener","split","slice","shift","warned","console","error","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","apply","arguments","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","position","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","element","callback","EventQueue","add","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","__extends","__","create","Plugin_1","PerspectiveCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","AxisMarksWidget_1","ChartBlankView","$container","pluginsAndWidgets","_this","widgets","parseInt","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","w","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","backgroundColor","Color","setSize","setPixelRatio","setClearColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","map","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","CanvasRenderer","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","AxisMarksWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChanged","getOptions","pluginsState","changedState","_i","unsubscriber","deepmerge","target","src","mergeArrays","array","dst","indexOf","keys","key","obj1","obj2","JSON","parse","stringify","toFixed","num","digitsCount","maxDigits","result","intVal","floor","intStr","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","substr","createTexture","canvas","ctx","texture","Texture","needsUpdate","createNearestTexture","minFilter","NearestFilter","magFilter","createPixelPerfectTexture","msg","warn","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Vector3","Trend_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","AnimationManager_1","Easing_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","DRAG_STATE_CHAGED","PLUGINS_STATE_CHANGED","LIGHT_BLUE","prevState","ALL","scroll","NUMBER","grid","minSizePx","RELATIVE_END","animations","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","zoomEase","autoScrollSpeed","autoScrollEase","maxSegmentLength","lineWidth","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","inertialScroll","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","computedData","getComputedData","savePrevState","animationManager","AnimationManager","setAimationsEnabled","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onChange","onTrendChange","onTrendsChange","onDragStateChanged","onZoom","tick","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","cursorOptions","isMouseDrag","oldX","currentX","currentScroll","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","maxXVal","getEndXVal","minXVal","getStartXVal","dragEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","changedTrends","newData","handleTrendsChange","dragState","onDragStateChangedHandler","animationOptions","isAnimationsEnabled","oldTrendsMaxX","trendsMaxXDelta","maxVisibleXVal","getScreenRightVal","paddingRightVal","getValueByScreenX","marginRightVal","scrollDelta","isDragMode","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","abs","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","unbindList","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","unbind","tryToRebuildSegments","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","currentAnimationState","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","TRANSFORMATION_EVENT","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","scrollXVal","scrollYVal","zoomX","zoomY","transformationInProgress","transform","vFOV","tan","onZoomFrame","onScrollFrame","onTransformationEvent","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","hasActiveAnimations","scrollYAnimation","zoomYAnimation","transformationStarted","transformationFinished","STARTED","scrollEventNeeded","zoomEventNeeded","FINISHED","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","zoomXChanged","isAutoscroll","targetX","onTick","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","lastTickTime","timingFunction","Animation","animateObj","source","isEnabled","i_1","completeAndStop","createdTime","easing","progress","delay","setProgress","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","targetIteralable","onTickCb","onFinishCb","withDelay","initialVal","targetVal","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","rgbaStr","strokeStyle","material","MeshBasicMaterial","side","FrontSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","pxVal","textAlign","getDateStr","stroke","closePath","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","opacity","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","replace","exec","isNaN","numberToHexStr","colorStr","rgba","hexStr","getTransparent","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","axisMarksWidgets","createAxisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","updatePosition","DEFAULT_INDICATOR_RENDER_FUNCTION","indicatorWidth","indicatorHeight","xCoord","INDICATOR_POS_Z","indicatorRenderFunction","frameValue","line","createLine","indicator","createIndicator","renderIndicator","lineGeometry","onValueChangeHandler","moveAnimation","hasStickMode","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","centerYVal","indicatorPosY","TrendsMarksWidget_1","easeSpeed","onRender","DEFAULT_RENDERER","trendsMarksPluginOptions","rects","onMarksChangeHandler","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","TrendMark","createMarkRect","left","top","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","sort","points","markInd","trendMarks","TrendsMarksWidget","offset","LinearFilter","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","onScreenTransformationEvent","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onScreenTransformationEventHandler","onZoomFrameHandler","trendMark","show","markMesh","posX","posY","trendMarkWidget","isTopSide","rgbaColor","centerX","centerY","textOffset","textPosX","textPosY","arc","fill","lineEndY","moveTo","lineTo","PlaneBufferGeometry","ANIMATION_TIME","ANIMATION_DELAY","TrendBeacon","mesh","light","setInitialState","animationObject","trendsSegments","endPointVector","screenWidth","TrendLoading","deactivate","activate","rotation","restart","center","pointVector","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(35);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(38);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(40);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(42);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chartView;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_charts_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            xVal: val,\r\n\t            title: three_charts_1.Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\r\n\t            color: three_charts_1.Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\r\n\t            orientation: orientation,\r\n\t            userData: {\r\n\t                description: three_charts_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t                icon: three_charts_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t                descriptionColor: descriptionColor\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chartView = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 0, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000,\r\n\t                margin: { end: 200 },\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {}\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] })\r\n\t    ]);\r\n\t    // chartView.setState({animations: {enabled: false}});\r\n\t    // chartView.setState({animations: {enabled: true}});\r\n\t    window['chartView'] = chartView;\r\n\t    var mainTrend = chartView.getTrend('main');\r\n\t    var deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chartView.chart.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        if (markOptions)\r\n\t            setTimeout(function () {\r\n\t                var trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t                trendsMarks.createMark(markOptions);\r\n\t            }, 500);\r\n\t    });\r\n\t    var i = 0;\r\n\t    chartView.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chartView.getTrend('main').appendData([val]);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chartView.chart.setState({ autoScroll: false });\r\n\t            chartView.chart.zoomToRange(range);\r\n\t            chartView.chart.scrollToEnd().then(function () {\r\n\t                chartView.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Easing from tween.js lib https://github.com/tweenjs/tween.js\r\n\t **/\r\n\texports.EASING = {\r\n\t    Linear: {\r\n\t        None: function (k) {\r\n\t            return k;\r\n\t        }\r\n\t    },\r\n\t    Quadratic: {\r\n\t        In: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        }\r\n\t    },\r\n\t    Cubic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Quartic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        }\r\n\t    },\r\n\t    Quintic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Sinusoidal: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        }\r\n\t    },\r\n\t    Exponential: {\r\n\t        In: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        }\r\n\t    },\r\n\t    Circular: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        }\r\n\t    },\r\n\t    Elastic: {\r\n\t        In: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            k *= 2;\r\n\t            if (k < 1) {\r\n\t                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t            }\r\n\t            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\t        }\r\n\t    },\r\n\t    Back: {\r\n\t        In: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        }\r\n\t    },\r\n\t    Bounce: {\r\n\t        In: function (k) {\r\n\t            return 1 - exports.EASING.Bounce.Out(1 - k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return exports.EASING.Bounce.In(k * 2) * 0.5;\r\n\t            }\r\n\t            return exports.EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(34)\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __webpack_require__(2);\n\t        __export(__webpack_require__(9));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(11));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(10));\n\t        __export(__webpack_require__(26));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(32));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(3);\n\t        exports.isPlainObject = __webpack_require__(4);\n\t        exports.EE2 = __webpack_require__(6);\n\t        var es6_promise_1 = __webpack_require__(7);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(8);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(5);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Plugin_1 = __webpack_require__(10);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var Chart_1 = __webpack_require__(14);\n\t        var Widget_1 = __webpack_require__(23);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var AxisWidget_1 = __webpack_require__(24);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var TrendsGradientWidget_1 = __webpack_require__(27);\n\t        var TrendsLineWidget_1 = __webpack_require__(29);\n\t        var TrendsCandleWidget_1 = __webpack_require__(30);\n\t        var deps_1 = __webpack_require__(13);\n\t        var Color_1 = __webpack_require__(26);\n\t        var AxisMarksWidget_1 = __webpack_require__(31);\n\t        var ChartBlankView = function() {\n\t            function ChartBlankView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartBlankView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartBlankView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartBlankView.prototype.render = function() {\n\t                this.chart.render();\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartBlankView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartBlankView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartBlankView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartBlankView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartBlankView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartBlankView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartBlankView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartBlankView.prototype.setupCamera = function() {\n\t                var camSettings = this.chart.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.screen.options);\n\t            };\n\t            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                this.chart.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartBlankView.preinstalledWidgets = [];\n\t            ChartBlankView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartBlankView;\n\t        }();\n\t        exports.ChartBlankView = ChartBlankView;\n\t        var ChartView = function(_super) {\n\t            __extends(ChartView, _super);\n\t            function ChartView() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget, AxisMarksWidget_1.AxisMarksWidget ];\n\t            return ChartView;\n\t        }(ChartBlankView);\n\t        exports.ChartView = ChartView;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(2);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createNearestTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                texture.magFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.magFilter = THREE.NearestFilter;\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else if (typeof srcObject[key] == \"function\") {\n\t                        dstObject[key] = srcObject[key];\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(13);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsManager_1 = __webpack_require__(17);\n\t        var Screen_1 = __webpack_require__(18);\n\t        var AxisMarks_1 = __webpack_require__(19);\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var deps_1 = __webpack_require__(2);\n\t        var AnimationManager_1 = __webpack_require__(21);\n\t        var Easing_1 = __webpack_require__(22);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            DRAG_STATE_CHAGED: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: 250,\n\t                        scrollSpeed: 1e3,\n\t                        scrollEase: Easing_1.EASING.Quadratic.Out,\n\t                        zoomEase: Easing_1.EASING.Quadratic.Out,\n\t                        autoScrollSpeed: 1100,\n\t                        autoScrollEase: Easing_1.EASING.Linear.None\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280,\n\t                    inertialScroll: true\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.isDestroyed = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.animationManager = new AnimationManager_1.AnimationManager();\n\t                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.bindEvents();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t                this.isDestroyed = true;\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onDragStateChanged = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.animationManager.tick();\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                if (this.isDestroyed) {\n\t                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n\t                }\n\t                var stateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (stateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n\t                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t                this.onDragStateChanged(function(dragState) {\n\t                    return _this.onDragStateChangedHandler(dragState);\n\t                });\n\t                this.ee.on(\"animationsChange\", function(animationOptions) {\n\t                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n\t                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t                var state = this.state;\n\t                if (!state.autoScroll || state.cursor.dragMode) return;\n\t                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleXVal = this.screen.getScreenRightVal();\n\t                    var paddingRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n\t                    var marginRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.margin.end);\n\t                    var currentScroll = state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n\t                var state = this.state;\n\t                if (!state.inertialScroll || isDragMode) return;\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime);\n\t                });\n\t            };\n\t            Chart.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getValueOnXAxis = function(x) {\n\t                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            Chart.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Chart.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Chart.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            Chart.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.state.width);\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendSegmentsManager_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var deps_1 = __webpack_require__(2);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chart = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chart;\n\t                chartState.onDragStateChanged(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chart.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chart.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chart.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chart;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chart, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.unbindList = [];\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                }), this.chart.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                }), this.chart.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }) ];\n\t            };\n\t            TrendSegmentsManager.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbind) {\n\t                    return unbind();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.unbindEvents();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chart.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chart.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) {\n\t                            initialAnimationState = initialSegment.createAnimationState();\n\t                        }\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chart.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var _this = this;\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                trend.segmentsManager.onRebuild(function() {\n\t                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                });\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        (function(TRANSFORMATION_EVENT) {\n\t            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n\t            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n\t        })(exports.TRANSFORMATION_EVENT || (exports.TRANSFORMATION_EVENT = {}));\n\t        var TRANSFORMATION_EVENT = exports.TRANSFORMATION_EVENT;\n\t        var SCREEN_EVENTS = {\n\t            ZOOM_FRAME: \"zoomFrame\",\n\t            SCROLL_FRAME: \"scrollFrame\",\n\t            TRANSFORMATION_FRAME: \"transformationFrame\",\n\t            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n\t        };\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.transformationInProgress = false;\n\t                this.chart = chartState;\n\t                var _a = chartState.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chart.state.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chart.state, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t            };\n\t            Screen.prototype.onTransformationEvent = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n\t                var transformationStarted = hasActiveAnimations && !this.transformationInProgress;\n\t                var transformationFinished = !hasActiveAnimations && this.transformationInProgress;\n\t                if (transformationStarted) {\n\t                    this.transformationInProgress = true;\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.STARTED);\n\t                }\n\t                if (transformationFinished) {\n\t                    this.transformationInProgress = false;\n\t                }\n\t                if (!this.transformationInProgress) {\n\t                    this.options.scrollX = options.scrollX = Math.round(this.options.scrollX);\n\t                    this.options.scrollY = options.scrollY = Math.round(this.options.scrollY);\n\t                }\n\t                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\t                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\t                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\t                if (transformationFinished) {\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.FINISHED);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var isDragMode = chart.state.cursor.dragMode;\n\t                var animations = chart.state.animations;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                var range = chart.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                if (isDragMode) time = 0;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n\t                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.options.scrollX).to(targetX).onTick(function(value) {\n\t                    _this.transform({\n\t                        scrollX: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var range = chart.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n\t                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.scrollY).to(targetY).onTick(function(value) {\n\t                    _this.transform({\n\t                        scrollY: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var targetZoom = chart.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n\t                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomX).to(targetZoom).onTick(function(value) {\n\t                    _this.transform({\n\t                        zoomX: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var targetZoom = chart.state.yAxis.range.zoom;\n\t                var animations = chart.state.animations;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n\t                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomY).to(targetZoom).onTick(function(value) {\n\t                    _this.transform({\n\t                        zoomY: value\n\t                    });\n\t                });\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chart.state.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chart.state.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chart.state.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chart.state.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chart.state.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chart.state.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chart.state.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chart.state.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(11);\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Easing_1 = __webpack_require__(22);\n\t        var AnimationManager = function() {\n\t            function AnimationManager() {\n\t                this.isAnimationsEnabled = true;\n\t                this.animations = [];\n\t                this.lastTickTime = Date.now();\n\t            }\n\t            AnimationManager.prototype.animate = function(time, timingFunction) {\n\t                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t                this.animations.push(animation);\n\t                return animation;\n\t            };\n\t            AnimationManager.prototype.animateObj = function(source, target) {};\n\t            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n\t                this.isAnimationsEnabled = isEnabled;\n\t            };\n\t            AnimationManager.prototype.tick = function() {\n\t                var now = Date.now();\n\t                var animations = this.animations;\n\t                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n\t                    var animation = animations[i_1];\n\t                    if (this.isAnimationsEnabled) {\n\t                        animation.tick(now);\n\t                    } else {\n\t                        animation.completeAndStop();\n\t                    }\n\t                }\n\t                var i = animations.length;\n\t                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n\t                this.lastTickTime = now;\n\t            };\n\t            AnimationManager.prototype.hasActiveAnimations = function() {\n\t                return this.animations.length > 0;\n\t            };\n\t            return AnimationManager;\n\t        }();\n\t        exports.AnimationManager = AnimationManager;\n\t        var Animation = function() {\n\t            function Animation(animationManager, time, createdTime, easing) {\n\t                if (easing === void 0) {\n\t                    easing = Easing_1.EASING.Quadratic.Out;\n\t                }\n\t                this.animationManager = animationManager;\n\t                this.time = time;\n\t                this.createdTime = createdTime;\n\t                this.easing = easing;\n\t                this.progress = 0;\n\t                this.delay = 0;\n\t                this.isFinished = false;\n\t                this.isStopped = false;\n\t                this.startTime = createdTime;\n\t            }\n\t            Animation.prototype.tick = function(now) {\n\t                if (!this.isStopped) {\n\t                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n\t                    this.setProgress(progress);\n\t                }\n\t            };\n\t            Animation.prototype.from = function(sourceObj) {\n\t                if (typeof sourceObj == \"object\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = {};\n\t                    var sourceIteralable = sourceObj;\n\t                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n\t                        this.initialObj[key] = sourceIteralable[key];\n\t                    }\n\t                } else if (typeof sourceObj == \"number\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = sourceObj;\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.to = function(targetObj) {\n\t                this.targetObject = targetObj;\n\t                if (typeof this.initialObj == \"object\") {\n\t                    var initialIteralable = this.initialObj;\n\t                    for (var key in this.targetObject) {\n\t                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                    var targetIteralable = this.targetObject;\n\t                    for (var key in initialIteralable) {\n\t                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.onTick = function(onTickCb) {\n\t                this.onTickCb = onTickCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.then = function(onFinishCb) {\n\t                this.onFinishCb = onFinishCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Animation.prototype.completeAndStop = function() {\n\t                this.setProgress(1);\n\t            };\n\t            Animation.prototype.withDelay = function(delay) {\n\t                this.delay = delay;\n\t                this.startTime = this.createdTime + delay;\n\t                return this;\n\t            };\n\t            Animation.prototype.setProgress = function(progress) {\n\t                if (progress < 0) return;\n\t                progress = Math.min(progress, 1);\n\t                this.progress = progress;\n\t                var k = this.easing(progress);\n\t                if (typeof this.sourceObj == \"number\") {\n\t                    var initialVal = this.initialObj;\n\t                    var targetVal = this.targetObject;\n\t                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n\t                } else if (this.sourceObj && this.targetObject) {\n\t                    for (var key in this.initialObj) {\n\t                        var initialVal = this.initialObj[key];\n\t                        var targetVal = this.targetObject[key];\n\t                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n\t                    }\n\t                }\n\t                if (progress == 1) {\n\t                    this.isStopped = true;\n\t                    this.isFinished = true;\n\t                }\n\t                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n\t                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n\t            };\n\t            return Animation;\n\t        }();\n\t        exports.Animation = Animation;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.EASING = {\n\t            Linear: {\n\t                None: function(k) {\n\t                    return k;\n\t                }\n\t            },\n\t            Quadratic: {\n\t                In: function(k) {\n\t                    return k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return k * (2 - k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k;\n\t                    }\n\t                    return -.5 * (--k * (k - 2) - 1);\n\t                }\n\t            },\n\t            Cubic: {\n\t                In: function(k) {\n\t                    return k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k + 2);\n\t                }\n\t            },\n\t            Quartic: {\n\t                In: function(k) {\n\t                    return k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return 1 - --k * k * k * k;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k;\n\t                    }\n\t                    return -.5 * ((k -= 2) * k * k * k - 2);\n\t                }\n\t            },\n\t            Quintic: {\n\t                In: function(k) {\n\t                    return k * k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k * k * k + 2);\n\t                }\n\t            },\n\t            Sinusoidal: {\n\t                In: function(k) {\n\t                    return 1 - Math.cos(k * Math.PI / 2);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sin(k * Math.PI / 2);\n\t                },\n\t                InOut: function(k) {\n\t                    return .5 * (1 - Math.cos(Math.PI * k));\n\t                }\n\t            },\n\t            Exponential: {\n\t                In: function(k) {\n\t                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t                },\n\t                Out: function(k) {\n\t                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * Math.pow(1024, k - 1);\n\t                    }\n\t                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t                }\n\t            },\n\t            Circular: {\n\t                In: function(k) {\n\t                    return 1 - Math.sqrt(1 - k * k);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sqrt(1 - --k * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n\t                    }\n\t                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t                }\n\t            },\n\t            Elastic: {\n\t                In: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                },\n\t                Out: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    k *= 2;\n\t                    if (k < 1) {\n\t                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                    }\n\t                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t                }\n\t            },\n\t            Back: {\n\t                In: function(k) {\n\t                    var s = 1.70158;\n\t                    return k * k * ((s + 1) * k - s);\n\t                },\n\t                Out: function(k) {\n\t                    var s = 1.70158;\n\t                    return --k * k * ((s + 1) * k + s) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    var s = 1.70158 * 1.525;\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * (k * k * ((s + 1) * k - s));\n\t                    }\n\t                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t                }\n\t            },\n\t            Bounce: {\n\t                In: function(k) {\n\t                    return 1 - exports.EASING.Bounce.Out(1 - k);\n\t                },\n\t                Out: function(k) {\n\t                    if (k < 1 / 2.75) {\n\t                        return 7.5625 * k * k;\n\t                    } else if (k < 2 / 2.75) {\n\t                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n\t                    } else if (k < 2.5 / 2.75) {\n\t                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n\t                    } else {\n\t                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n\t                    }\n\t                },\n\t                InOut: function(k) {\n\t                    if (k < .5) {\n\t                        return exports.EASING.Bounce.In(k * 2) * .5;\n\t                    }\n\t                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(23);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var Color_1 = __webpack_require__(26);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.Color(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(23);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var Color_1 = __webpack_require__(26);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var Color = function() {\n\t            function Color(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            Color.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            Color.numberToHexStr = function(value) {\n\t                var result = value.toString(16);\n\t                return \"#\" + \"0\".repeat(6 - result.length) + result;\n\t            };\n\t            Color.prototype.set = function(color) {\n\t                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n\t                var colorStr = color;\n\t                var rgba = Color.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = Color.numberToHexStr(this.value);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            Color.prototype.getTransparent = function(opacity) {\n\t                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n\t            };\n\t            return Color;\n\t        }();\n\t        exports.Color = Color;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsWidget_1 = __webpack_require__(28);\n\t        var Color_1 = __webpack_require__(26);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i < segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(23);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(28);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(11);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(28);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(15);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(23);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var Utils_1 = __webpack_require__(11);\n\t        var Line = THREE.Line;\n\t        var Mesh = THREE.Mesh;\n\t        var interfaces_1 = __webpack_require__(20);\n\t        var Color_1 = __webpack_require__(26);\n\t        var AxisMarksWidget = function(_super) {\n\t            __extends(AxisMarksWidget, _super);\n\t            function AxisMarksWidget() {\n\t                _super.apply(this, arguments);\n\t                this.axisMarksWidgets = [];\n\t            }\n\t            AxisMarksWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                var _a = this.chart, xAxisMarks = _a.xAxisMarks, yAxisMarks = _a.yAxisMarks;\n\t                var items = xAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t                items = yAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t                this.bindEvents();\n\t            };\n\t            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n\t                var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n\t                this.axisMarksWidgets.push(axisMarkWidget);\n\t                this.object3D.add(axisMarkWidget.getObject3D());\n\t            };\n\t            AxisMarksWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function() {\n\t                    return _this.updateMarksPositions();\n\t                }), this.chart.onResize(function() {\n\t                    return _this.updateMarksPositions();\n\t                }));\n\t            };\n\t            AxisMarksWidget.prototype.updateMarksPositions = function() {\n\t                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n\t                    var widget = _a[_i];\n\t                    widget.updatePosition();\n\t                }\n\t            };\n\t            AxisMarksWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarksWidget.widgetName = \"AxisMarks\";\n\t            return AxisMarksWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisMarksWidget = AxisMarksWidget;\n\t        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n\t            var axisMark = axisMarkWidget.axisMark;\n\t            ctx.fillStyle = axisMark.options.lineColor;\n\t            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n\t            var xCoord = 15;\n\t            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n\t                ctx.textAlign = \"end\";\n\t                xCoord = axisMarkWidget.indicatorWidth;\n\t            }\n\t            ctx.fillText(axisMark.options.title, xCoord, 20);\n\t            if (!axisMark.options.showValue) return;\n\t            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n\t            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n\t        };\n\t        var INDICATOR_POS_Z = .1;\n\t        var AxisMarkWidget = function() {\n\t            function AxisMarkWidget(chartState, axisMark) {\n\t                this.indicatorWidth = 128;\n\t                this.indicatorHeight = 64;\n\t                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n\t                this.chartState = chartState;\n\t                this.axisMark = axisMark;\n\t                this.axisType = axisMark.axisType;\n\t                this.frameValue = axisMark.options.value;\n\t                this.object3D = new Object3D();\n\t                this.object3D.position.setZ(-.1);\n\t                this.line = this.createLine();\n\t                this.object3D.add(this.line);\n\t                this.indicator = this.createIndicator();\n\t                this.object3D.add(this.indicator);\n\t                this.renderIndicator();\n\t                this.updatePosition();\n\t                this.bindEvents();\n\t            }\n\t            AxisMarkWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarkWidget.prototype.createLine = function() {\n\t                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n\t                var lineGeometry = new Geometry();\n\t                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\t                return new Line(lineGeometry, new LineBasicMaterial({\n\t                    color: new Color_1.Color(lineColor).value,\n\t                    linewidth: lineWidth\n\t                }));\n\t            };\n\t            AxisMarkWidget.prototype.createIndicator = function() {\n\t                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n\t                var texture = Utils_1.Utils.createNearestTexture(width, height, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n\t            };\n\t            AxisMarkWidget.prototype.renderIndicator = function() {\n\t                var texture = this.indicator.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisMarkWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.axisMark.onDisplayedValueChange(function() {\n\t                    return _this.renderIndicator();\n\t                });\n\t                this.axisMark.onValueChange(function() {\n\t                    return _this.onValueChangeHandler();\n\t                });\n\t            };\n\t            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n\t                var _this = this;\n\t                if (this.moveAnimation) this.moveAnimation.kill();\n\t                var animations = this.chartState.state.animations;\n\t                var targetValue = this.axisMark.options.value;\n\t                var cb = function() {\n\t                    _this.updatePosition();\n\t                };\n\t                if (animations.enabled) {\n\t                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n\t                        frameValue: targetValue,\n\t                        ease: animations.trendChangeEase\n\t                    });\n\t                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.frameValue = targetValue;\n\t                    cb();\n\t                }\n\t            };\n\t            AxisMarkWidget.prototype.updatePosition = function() {\n\t                var chartState = this.chartState;\n\t                var screen = chartState.screen;\n\t                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n\t                var lineGeometry = this.line.geometry;\n\t                var hasStickMode = this.axisMark.options.stickToEdges;\n\t                var _a = this.chartState.state, width = _a.width, height = _a.height;\n\t                if (isXAxis) {\n\t                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n\t                    this.object3D.position.y = screen.getBottom();\n\t                    lineGeometry.vertices[1].setY(height);\n\t                    this.indicator.position.set(this.indicatorWidth / 2, chartState.state.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n\t                } else {\n\t                    var val = this.frameValue;\n\t                    var bottomVal = screen.getBottomVal();\n\t                    var topVal = screen.getTopVal();\n\t                    var needToStickOnTop = hasStickMode && val > topVal;\n\t                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n\t                    var centerYVal = screen.getCenterYVal();\n\t                    this.object3D.position.x = screen.getLeft();\n\t                    if (needToStickOnTop) {\n\t                        this.object3D.position.y = screen.getTop();\n\t                    } else if (needToStickOnBottom) {\n\t                        this.object3D.position.y = screen.getBottom();\n\t                    } else {\n\t                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n\t                    }\n\t                    lineGeometry.vertices[1].setX(width);\n\t                    var indicatorPosY = val > centerYVal ? -35 : 10;\n\t                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n\t                }\n\t                lineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            AxisMarkWidget.typeName = \"simple\";\n\t            return AxisMarkWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(24));\n\t        __export(__webpack_require__(25));\n\t        __export(__webpack_require__(28));\n\t        __export(__webpack_require__(29));\n\t        __export(__webpack_require__(27));\n\t        __export(__webpack_require__(31));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(36));\r\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar TrendsMarksWidget_1 = __webpack_require__(37);\r\n\tvar Easing_1 = __webpack_require__(22);\r\n\t(function (TREND_MARK_SIDE) {\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n\t})(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\r\n\tvar TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\r\n\t(function (EVENTS) {\r\n\t    EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\r\n\t})(exports.EVENTS || (exports.EVENTS = {}));\r\n\tvar EVENTS = exports.EVENTS;\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    trendName: '',\r\n\t    title: '',\r\n\t    color: 'rgba(#0099d9, 0.5)',\r\n\t    xVal: 0,\r\n\t    orientation: TREND_MARK_SIDE.TOP,\r\n\t    width: 105,\r\n\t    height: 100,\r\n\t    margin: 10,\r\n\t    ease: Easing_1.EASING.Elastic.Out,\r\n\t    easeSpeed: 1000,\r\n\t    onRender: TrendsMarksWidget_1.DEFAULT_RENDERER\r\n\t};\r\n\tvar TrendsMarksPlugin = (function (_super) {\r\n\t    __extends(TrendsMarksPlugin, _super);\r\n\t    function TrendsMarksPlugin(trendsMarksPluginOptions) {\r\n\t        _super.call(this, trendsMarksPluginOptions);\r\n\t        this.items = {};\r\n\t        this.rects = {};\r\n\t    }\r\n\t    TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onStateChanged = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getOptions = function () {\r\n\t        return _super.prototype.getOptions.call(this);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMark = function (options) {\r\n\t        var marksOptions = this.getOptions().items;\r\n\t        var newMarkOptions = marksOptions.concat([options]);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = { items: newMarkOptions }, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.trendsManager.onSegmentsRebuilded(function () {\r\n\t            _this.updateMarksSegments();\r\n\t        });\r\n\t        this.chart.screen.onZoomFrame(function () { return _this.calclulateMarksPositions(); });\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onMarksChangeHandler = function () {\r\n\t        var trendsMarksOptions = this.getOptions().items;\r\n\t        var actualMarksNames = [];\r\n\t        for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\r\n\t            var options = trendsMarksOptions_1[_i];\r\n\t            var marks = this.items;\r\n\t            // set mark name\r\n\t            if (!options.name) {\r\n\t                options.name = three_charts_1.Utils.getUid().toString();\r\n\t                actualMarksNames.push(options.name);\r\n\t                if (marks[options.name])\r\n\t                    three_charts_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            }\r\n\t            else if (marks[options.name]) {\r\n\t                actualMarksNames.push(options.name);\r\n\t                continue;\r\n\t            }\r\n\t            options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            var mark = new TrendMark(this.chart, options);\r\n\t            marks[options.name] = mark;\r\n\t        }\r\n\t        // delete not relevant marks\r\n\t        for (var markName in this.items) {\r\n\t            if (actualMarksNames.indexOf(markName) != -1)\r\n\t                continue;\r\n\t            delete this.items[markName];\r\n\t        }\r\n\t        this.updateMarksSegments();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.calclulateMarksPositions = function () {\r\n\t        this.rects = {};\r\n\t        for (var markName in this.items) {\r\n\t            this.createMarkRect(this.items[markName]);\r\n\t        }\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMarkRect = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var chart = this.chart;\r\n\t        var options = mark.options;\r\n\t        var width = options.width, height = options.height, name = options.name;\r\n\t        var left = chart.getPointOnXAxis(mark.xVal) - width / 2;\r\n\t        var top = chart.getPointOnYAxis(mark.yVal);\r\n\t        var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t        var newOffset;\r\n\t        var row = 0;\r\n\t        if (isTopSideMark) {\r\n\t            top += height;\r\n\t        }\r\n\t        var markRect = [left, top, width, height];\r\n\t        var hasIntersection = false;\r\n\t        do {\r\n\t            for (var markName in this.rects) {\r\n\t                var rect = this.rects[markName];\r\n\t                hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\r\n\t                if (!hasIntersection)\r\n\t                    continue;\r\n\t                if (isTopSideMark) {\r\n\t                    markRect[1] = rect[1] + markRect[3] + options.margin;\r\n\t                }\r\n\t                else {\r\n\t                    markRect[1] = rect[1] - rect[3] - options.margin;\r\n\t                }\r\n\t                row++;\r\n\t                break;\r\n\t            }\r\n\t        } while (hasIntersection);\r\n\t        if (isTopSideMark) {\r\n\t            newOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\r\n\t        }\r\n\t        else {\r\n\t            newOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\r\n\t        }\r\n\t        mark._setOffset(newOffset);\r\n\t        mark._setRow(row);\r\n\t        this.rects[name] = markRect;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.updateMarksSegments = function () {\r\n\t        var chart = this.chart;\r\n\t        var trends = chart.trendsManager.trends;\r\n\t        for (var trendName in trends) {\r\n\t            var marks = this.getTrendMarks(trendName);\r\n\t            var marksArr = [];\r\n\t            var xVals = [];\r\n\t            for (var markName in marks) {\r\n\t                var mark = marks[markName];\r\n\t                xVals.push(mark.options.xVal);\r\n\t                marksArr.push(mark);\r\n\t                mark._setSegment(null);\r\n\t            }\r\n\t            marksArr.sort(function (a, b) { return a.options.xVal - b.options.xVal; });\r\n\t            var trend = chart.getTrend(trendName);\r\n\t            var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function (a, b) { return a - b; }));\r\n\t            for (var markInd = 0; markInd < marksArr.length; markInd++) {\r\n\t                marksArr[markInd]._setSegment(points[markInd]);\r\n\t            }\r\n\t        }\r\n\t        this.calclulateMarksPositions();\r\n\t        this.ee.emit(EVENTS[EVENTS.CHANGE]);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getTrendMarks = function (trendName) {\r\n\t        var trendMarks = [];\r\n\t        for (var markName in this.items) {\r\n\t            if (this.items[markName].options.trendName != trendName)\r\n\t                continue;\r\n\t            trendMarks.push(this.items[markName]);\r\n\t        }\r\n\t        return trendMarks;\r\n\t    };\r\n\t    TrendsMarksPlugin.NAME = 'TrendsMarks';\r\n\t    TrendsMarksPlugin.providedWidgets = [TrendsMarksWidget_1.TrendsMarksWidget];\r\n\t    return TrendsMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.TrendsMarksPlugin = TrendsMarksPlugin;\r\n\tvar TrendMark = (function () {\r\n\t    function TrendMark(chart, options) {\r\n\t        this.row = 0;\r\n\t        this.options = options;\r\n\t        this.chart = chart;\r\n\t    }\r\n\t    /**\r\n\t     * only for internal usage\r\n\t     */\r\n\t    TrendMark.prototype._setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        if (!segment)\r\n\t            return;\r\n\t        var trend = this.chart.getTrend(this.options.trendName);\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            this.xVal = segment.endXVal;\r\n\t            this.yVal = segment.endYVal;\r\n\t        }\r\n\t        else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.maxYVal;\r\n\t        }\r\n\t        else {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.minYVal;\r\n\t        }\r\n\t    };\r\n\t    TrendMark.prototype._setOffset = function (offset) {\r\n\t        this.offset = offset;\r\n\t    };\r\n\t    TrendMark.prototype._setRow = function (row) {\r\n\t        this.row = row;\r\n\t    };\r\n\t    return TrendMark;\r\n\t}());\r\n\texports.TrendMark = TrendMark;\r\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(36);\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar LinearFilter = THREE.LinearFilter;\r\n\tvar NearestFilter = THREE.NearestFilter;\r\n\t/**\r\n\t * widget for drawing trends marks for all trends\r\n\t */\r\n\tvar TrendsMarksWidget = (function (_super) {\r\n\t    __extends(TrendsMarksWidget, _super);\r\n\t    function TrendsMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsMarksWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendMarksWidget;\r\n\t    };\r\n\t    TrendsMarksWidget.widgetName = \"TrendsMarks\";\r\n\t    return TrendsMarksWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsMarksWidget = TrendsMarksWidget;\r\n\t/**\r\n\t * widget for drawing trend marks for one trend\r\n\t */\r\n\tvar TrendMarksWidget = (function (_super) {\r\n\t    __extends(TrendMarksWidget, _super);\r\n\t    function TrendMarksWidget(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.marksWidgets = {};\r\n\t        this.object3D = new Object3D();\r\n\t        this.onMarksChange();\r\n\t    }\r\n\t    TrendMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.getTrendsMarksPlugin().onChange(function () { return _this.onMarksChange(); }));\r\n\t        this.bindEvent(this.chart.screen.onTransformationEvent(function (event) { return _this.onScreenTransformationEvent(event); }));\r\n\t    };\r\n\t    TrendMarksWidget.prototype.getTrendsMarksPlugin = function () {\r\n\t        return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onMarksChange = function () {\r\n\t        var marksItems = this.getTrendsMarksPlugin().getItems();\r\n\t        var widgets = this.marksWidgets;\r\n\t        var actualMarksNames = [];\r\n\t        for (var markName in marksItems) {\r\n\t            actualMarksNames.push(markName);\r\n\t            if (!widgets[markName])\r\n\t                this.createMarkWidget(marksItems[markName]);\r\n\t        }\r\n\t        for (var markName in this.marksWidgets) {\r\n\t            if (actualMarksNames.indexOf(markName) !== -1)\r\n\t                continue;\r\n\t            this.destroyMarkWidget(markName);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.createMarkWidget = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var markWidget = new TrendMarkWidget(this.chart, mark);\r\n\t        this.marksWidgets[mark.options.name] = markWidget;\r\n\t        this.object3D.add(markWidget.getObject3D());\r\n\t    };\r\n\t    TrendMarksWidget.prototype.destroyMarkWidget = function (markName) {\r\n\t        this.object3D.remove(this.marksWidgets[markName].getObject3D());\r\n\t        delete this.marksWidgets[markName];\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onScreenTransformationEvent = function (event) {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onScreenTransformationEventHandler(event);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onZoomFrame = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onZoomFrameHandler();\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onSegmentsAnimate = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onSegmentsAnimate();\r\n\t        }\r\n\t    };\r\n\t    return TrendMarksWidget;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendMarksWidget = TrendMarksWidget;\r\n\t/**\r\n\t * widget for drawing one trend mark\r\n\t */\r\n\tvar TrendMarkWidget = (function () {\r\n\t    function TrendMarkWidget(chart, trendMark) {\r\n\t        this.chart = chart;\r\n\t        this.mark = trendMark;\r\n\t        this.initObject();\r\n\t        this.show();\r\n\t    }\r\n\t    TrendMarkWidget.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var options = this.mark.options;\r\n\t        var width = options.width, height = options.height;\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(width, height, function (ctx) {\r\n\t            options.onRender(_this, ctx, _this.chart);\r\n\t        });\r\n\t        // make text sharp when screen is not transforming\r\n\t        texture.magFilter = this.chart.screen.transformationInProgress ? LinearFilter : NearestFilter;\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.markMesh = new Mesh(new THREE.PlaneGeometry(width, height), material);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.markMesh;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onSegmentsAnimate = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onZoomFrameHandler = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onScreenTransformationEventHandler = function (event) {\r\n\t        var texture = this.markMesh.material.map;\r\n\t        // make text sharp when screen is not transforming\r\n\t        texture.magFilter = (event == three_charts_1.TRANSFORMATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.updatePosition = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        var mark = this.mark;\r\n\t        var screen = this.chart.screen;\r\n\t        var posX = screen.getPointOnXAxis(mark.xVal);\r\n\t        var posY = screen.getPointOnYAxis(mark.yVal);\r\n\t        this.markMesh.position.set(posX, posY, 0);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.show = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        this.updatePosition();\r\n\t        this.markMesh.scale.set(0.01, 0.01, 1);\r\n\t        this.chart.animationManager\r\n\t            .animate(1000, this.mark.options.ease)\r\n\t            .from(this.markMesh.scale)\r\n\t            .to({ x: 1, y: 1 });\r\n\t    };\r\n\t    return TrendMarkWidget;\r\n\t}());\r\n\texports.TrendMarkWidget = TrendMarkWidget;\r\n\texports.DEFAULT_RENDERER = function (trendMarkWidget, ctx, chart) {\r\n\t    var mark = trendMarkWidget.mark;\r\n\t    var options = mark.options;\r\n\t    var isTopSide = options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\r\n\t    var color = options.color !== void 0 ?\r\n\t        new three_charts_1.Color(options.color) :\r\n\t        new three_charts_1.Color(chart.getTrend(options.trendName).getOptions().lineColor);\r\n\t    var rgbaColor = color.getTransparent(0.5).rgbaStr;\r\n\t    var width = options.width, height = options.height;\r\n\t    var centerX = Math.round(width / 2);\r\n\t    var centerY = Math.round(height / 2);\r\n\t    var font = chart.state.font.m;\r\n\t    var textOffset = parseInt(font);\r\n\t    var textPosX = centerX;\r\n\t    var textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\r\n\t    // draw rect\r\n\t    ctx.fillStyle = rgbaColor;\r\n\t    ctx.strokeStyle = rgbaColor;\r\n\t    ctx.fillRect(0, isTopSide ? 0 : height, width, isTopSide ? textOffset * 2 : -textOffset * 2);\r\n\t    // draw dot\r\n\t    ctx.beginPath();\r\n\t    ctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\r\n\t    ctx.fill();\r\n\t    // draw line\r\n\t    var lineEndY = textPosY;\r\n\t    ctx.beginPath();\r\n\t    ctx.moveTo(centerX, centerY);\r\n\t    ctx.lineTo(centerX, lineEndY);\r\n\t    ctx.stroke();\r\n\t    // draw text\r\n\t    ctx.beginPath();\r\n\t    ctx.textAlign = 'center';\r\n\t    ctx.font = font;\r\n\t    ctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\r\n\t    ctx.fillText(options.title, Math.round(textPosX), Math.round(textPosY));\r\n\t    // uncomment to preview mark rect\r\n\t    // ctx.rect(0, 0, width, height);\r\n\t    // ctx.stroke();\r\n\t};\r\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(39));\r\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar ANIMATION_TIME = 1000;\r\n\tvar ANIMATION_DELAY = 300;\r\n\t/**\r\n\t * widget adds blinking beacon on trends end\r\n\t * activated when trend.hasBeacon = true\r\n\t */\r\n\tvar TrendsBeaconWidget = (function (_super) {\r\n\t    __extends(TrendsBeaconWidget, _super);\r\n\t    function TrendsBeaconWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsBeaconWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendBeacon;\r\n\t    };\r\n\t    TrendsBeaconWidget.widgetName = 'TrendsBeacon';\r\n\t    return TrendsBeaconWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsBeaconWidget = TrendsBeaconWidget;\r\n\tvar TrendBeacon = (function (_super) {\r\n\t    __extends(TrendBeacon, _super);\r\n\t    function TrendBeacon(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    TrendBeacon.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendBeacon.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendBeacon.prototype.onTrendChange = function () {\r\n\t        this.updatePosition();\r\n\t        this.animate();\r\n\t    };\r\n\t    TrendBeacon.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.chart.onScroll(function () { return _this.updatePosition(); }));\r\n\t    };\r\n\t    TrendBeacon.prototype.initObject = function () {\r\n\t        // add beacon\r\n\t        var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendBeacon.createTexture(), transparent: true }));\r\n\t        this.setInitialState();\r\n\t        // add dot\r\n\t        light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({ map: TrendBeacon.createTexture() })));\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t    };\r\n\t    TrendBeacon.prototype.animate = function () {\r\n\t        var _this = this;\r\n\t        if (!this.chart.state.animations.enabled)\r\n\t            return;\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t        this.setInitialState();\r\n\t        var mesh = this.mesh;\r\n\t        var animationObject = {\r\n\t            scale: mesh.scale.x,\r\n\t            opacity: mesh.material.opacity\r\n\t        };\r\n\t        this.animation = this.chart.animationManager\r\n\t            .animate(ANIMATION_TIME)\r\n\t            .withDelay(ANIMATION_DELAY)\r\n\t            .from(animationObject)\r\n\t            .to({ scale: 1, opacity: 0 })\r\n\t            .onTick(function (animationObject) {\r\n\t            mesh.scale.set(animationObject.scale, animationObject.scale, 1);\r\n\t            mesh.material.opacity = animationObject.opacity;\r\n\t        }).then(function () {\r\n\t            _this.setInitialState();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.setInitialState = function () {\r\n\t        this.mesh.scale.set(0.2, 0.2, 1);\r\n\t        this.mesh.material.opacity = 1;\r\n\t    };\r\n\t    TrendBeacon.prototype.onDestroy = function () {\r\n\t        _super.prototype.onDestroy.call(this);\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t    };\r\n\t    TrendBeacon.createTexture = function () {\r\n\t        var h = 32, w = 32;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\r\n\t            ctx.fillStyle = 'white';\r\n\t            ctx.fill();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.onTransformationFrame = function () {\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.onSegmentsAnimate = function (trendsSegments) {\r\n\t        this.segment = trendsSegments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var xVal, yVal;\r\n\t        var currentAnimationState = this.segment.currentAnimationState;\r\n\t        if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            xVal = currentAnimationState.endXVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        else {\r\n\t            xVal = currentAnimationState.xVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\r\n\t        var screenWidth = chart.state.width;\r\n\t        var x = endPointVector.x;\r\n\t        var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\r\n\t        if (screenX < 0) {\r\n\t            x = chart.screen.getPointByScreenX(0);\r\n\t        }\r\n\t        if (screenX > screenWidth)\r\n\t            x = chart.screen.getPointByScreenX(screenWidth);\r\n\t        this.mesh.position.set(x, endPointVector.y, 0.1);\r\n\t    };\r\n\t    return TrendBeacon;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendBeacon = TrendBeacon;\r\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(41));\r\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\t/**\r\n\t * widget adds loading indicator\r\n\t * activated when animations enabled\r\n\t */\r\n\tvar TrendsLoadingWidget = (function (_super) {\r\n\t    __extends(TrendsLoadingWidget, _super);\r\n\t    function TrendsLoadingWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLoadingWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLoading;\r\n\t    };\r\n\t    TrendsLoadingWidget.widgetName = 'TrendsLoading';\r\n\t    return TrendsLoadingWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsLoadingWidget = TrendsLoadingWidget;\r\n\tvar TrendLoading = (function (_super) {\r\n\t    __extends(TrendLoading, _super);\r\n\t    function TrendLoading(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.isActive = false;\r\n\t        // add beacon\r\n\t        this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendLoading.createTexture(), transparent: true }));\r\n\t        this.deactivate();\r\n\t    }\r\n\t    TrendLoading.widgetIsEnabled = function (trendOptions, chart) {\r\n\t        return trendOptions.enabled && chart.state.animations.enabled;\r\n\t    };\r\n\t    TrendLoading.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendLoading.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.onPrependRequest(function () { return _this.activate(); }));\r\n\t    };\r\n\t    TrendLoading.prototype.prependData = function () {\r\n\t        this.deactivate();\r\n\t    };\r\n\t    TrendLoading.prototype.activate = function () {\r\n\t        var mesh = this.mesh;\r\n\t        mesh.material.opacity = 1;\r\n\t        mesh.rotation.z = 0;\r\n\t        var animation = TweenLite.to(this.mesh.rotation, 0.5, { z: Math.PI * 2 });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animation.restart();\r\n\t        });\r\n\t        this.animation = animation;\r\n\t        this.isActive = true;\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.deactivate = function () {\r\n\t        this.animation && this.animation.kill();\r\n\t        this.mesh.material.opacity = 0;\r\n\t        this.isActive = false;\r\n\t    };\r\n\t    TrendLoading.createTexture = function () {\r\n\t        var h = 64, w = 64;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t            ctx.lineWidth = 5;\r\n\t            var center = h / 2;\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, 0, Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 3, 0, Math.PI * 2);\r\n\t            ctx.stroke();\r\n\t        });\r\n\t    };\r\n\t    TrendLoading.prototype.onZoomFrame = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.updatePosition = function () {\r\n\t        if (!this.isActive)\r\n\t            return;\r\n\t        var trend = this.trend;\r\n\t        // set new widget position\r\n\t        var segment = trend.segmentsManager.getStartSegment();\r\n\t        var x, y;\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            x = segment.currentAnimationState.startXVal;\r\n\t            y = segment.currentAnimationState.startYVal;\r\n\t        }\r\n\t        else {\r\n\t            x = segment.currentAnimationState.xVal - segment.maxLength;\r\n\t            y = segment.currentAnimationState.yVal;\r\n\t        }\r\n\t        var pointVector = this.chart.screen.getPointOnChart(x, y);\r\n\t        this.mesh.position.set(pointVector.x, pointVector.y, 0);\r\n\t    };\r\n\t    return TrendLoading;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendLoading = TrendLoading;\r\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(43));\r\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar three_charts_1 = __webpack_require__(33);\r\n\tvar CANVAS_WIDTH = 150;\r\n\tvar CANVAS_HEIGHT = 64;\r\n\tvar OFFSET_X = 15;\r\n\tvar TrendsIndicatorWidget = (function (_super) {\r\n\t    __extends(TrendsIndicatorWidget, _super);\r\n\t    function TrendsIndicatorWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsIndicatorWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendIndicator;\r\n\t    };\r\n\t    TrendsIndicatorWidget.widgetName = 'TrendsIndicator';\r\n\t    return TrendsIndicatorWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsIndicatorWidget = TrendsIndicatorWidget;\r\n\tvar TrendIndicator = (function (_super) {\r\n\t    __extends(TrendIndicator, _super);\r\n\t    function TrendIndicator(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.onTrendChange();\r\n\t    }\r\n\t    TrendIndicator.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasIndicator;\r\n\t    };\r\n\t    TrendIndicator.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendIndicator.prototype.onTrendChange = function () {\r\n\t        // update canvas value\r\n\t        var trendData = this.trend.getData();\r\n\t        var lastItem = trendData[trendData.length - 1];\r\n\t        var texture = this.mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        // uncomment to preview indicator rect\r\n\t        // ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t        // ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendIndicator.prototype.initObject = function () {\r\n\t        var color = new three_charts_1.Color(this.trend.getOptions().lineColor);\r\n\t        var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.font = \"15px Arial\";\r\n\t            ctx.fillStyle = color.rgbaStr;\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\r\n\t    };\r\n\t    TrendIndicator.prototype.onTransformationFrame = function () {\r\n\t        // set new widget position\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.onSegmentsAnimate = function (segments) {\r\n\t        // set new widget position\r\n\t        this.segment = segments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\r\n\t        var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\r\n\t        var screenWidth = chart.state.width;\r\n\t        var x = endPointVector.x + OFFSET_X;\r\n\t        var y = endPointVector.y;\r\n\t        var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\r\n\t        var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\r\n\t        if (indicatorIsOutOfScreen) {\r\n\t            if (screenX < 0)\r\n\t                x = chart.screen.getPointByScreenX(0) + 20;\r\n\t            if (screenX > screenWidth)\r\n\t                x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\r\n\t            y -= 25;\r\n\t        }\r\n\t        this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\r\n\t    };\r\n\t    return TrendIndicator;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendIndicator = TrendIndicator;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5c809d50e94d1c2dc6d8\n **/","\n// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/src/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/src/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/src/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/src/TrendsIndicatorWidget';\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chartView: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\txVal: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\n\t\t\tcolor: Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\n\t\t\torientation: orientation,\n\t\t\tuserData: {\n\t\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\t\tdescriptionColor: descriptionColor\n\t\t\t}\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchartView = new ChartView({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 0, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000,\n\t\t\t\tmargin: {end: 200},\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\t// minSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t]\n\t);\n\n\t// chartView.setState({animations: {enabled: false}});\n\t// chartView.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chartView'] = chartView;\n\n\tvar mainTrend = chartView.getTrend('main');\n\tvar deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\n\tvar closeMark = chartView.chart.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\tvar markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\tif (markOptions) setTimeout(() => {\n\t\t\tlet trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t\ttrendsMarks.createMark(markOptions);\n\t\t}, 500);\n\t});\n\n\n\n\tvar i = 0;\n\n\tchartView.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chartView.getTrend('main').appendData([val]);\n\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchartView.chart.setState({autoScroll: false});\n\t\t\tchartView.chart.zoomToRange(range);\n\t\t\tchartView.chart.scrollToEnd().then(() => {\n\t\t\t\tchartView.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","export declare type TEase = (k: number) => number;\n\n/**\n * Easing from tween.js lib https://github.com/tweenjs/tween.js\n **/\nexport const EASING = {\n\n\tLinear: {\n\n\t\tNone: function (k: number) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - EASING.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn EASING.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Easing.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 33\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __webpack_require__(2);\n        __export(__webpack_require__(9));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(11));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(10));\n        __export(__webpack_require__(26));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(32));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(3);\n        exports.isPlainObject = __webpack_require__(4);\n        exports.EE2 = __webpack_require__(6);\n        var es6_promise_1 = __webpack_require__(7);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(8);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(5);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Plugin_1 = __webpack_require__(10);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var Chart_1 = __webpack_require__(14);\n        var Widget_1 = __webpack_require__(23);\n        var Utils_1 = __webpack_require__(11);\n        var AxisWidget_1 = __webpack_require__(24);\n        var GridWidget_1 = __webpack_require__(25);\n        var TrendsGradientWidget_1 = __webpack_require__(27);\n        var TrendsLineWidget_1 = __webpack_require__(29);\n        var TrendsCandleWidget_1 = __webpack_require__(30);\n        var deps_1 = __webpack_require__(13);\n        var Color_1 = __webpack_require__(26);\n        var AxisMarksWidget_1 = __webpack_require__(31);\n        var ChartBlankView = function() {\n            function ChartBlankView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartBlankView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartBlankView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartBlankView.prototype.render = function() {\n                this.chart.render();\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartBlankView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartBlankView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartBlankView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartBlankView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartBlankView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartBlankView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartBlankView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartBlankView.prototype.setupCamera = function() {\n                var camSettings = this.chart.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.screen.options);\n            };\n            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartBlankView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartBlankView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartBlankView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                this.chart.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n            ChartBlankView.preinstalledWidgets = [];\n            ChartBlankView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartBlankView;\n        }();\n        exports.ChartBlankView = ChartBlankView;\n        var ChartView = function(_super) {\n            __extends(ChartView, _super);\n            function ChartView() {\n                _super.apply(this, arguments);\n            }\n            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget, AxisMarksWidget_1.AxisMarksWidget ];\n            return ChartView;\n        }(ChartBlankView);\n        exports.ChartView = ChartView;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var EventEmmiter_1 = __webpack_require__(12);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(2);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createNearestTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                texture.magFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.magFilter = THREE.NearestFilter;\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else if (typeof srcObject[key] == \"function\") {\n                        dstObject[key] = srcObject[key];\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(13);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Utils_1 = __webpack_require__(11);\n        var TrendsManager_1 = __webpack_require__(17);\n        var Screen_1 = __webpack_require__(18);\n        var AxisMarks_1 = __webpack_require__(19);\n        var interfaces_1 = __webpack_require__(20);\n        var deps_1 = __webpack_require__(2);\n        var AnimationManager_1 = __webpack_require__(21);\n        var Easing_1 = __webpack_require__(22);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            DRAG_STATE_CHAGED: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: 250,\n                        scrollSpeed: 1e3,\n                        scrollEase: Easing_1.EASING.Quadratic.Out,\n                        zoomEase: Easing_1.EASING.Quadratic.Out,\n                        autoScrollSpeed: 1100,\n                        autoScrollEase: Easing_1.EASING.Linear.None\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280,\n                    inertialScroll: true\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.isDestroyed = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.animationManager = new AnimationManager_1.AnimationManager();\n                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.bindEvents();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n                this.isDestroyed = true;\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onDragStateChanged = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.render = function() {\n                this.animationManager.tick();\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                if (this.isDestroyed) {\n                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n                }\n                var stateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (stateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n                this.onDragStateChanged(function(dragState) {\n                    return _this.onDragStateChangedHandler(dragState);\n                });\n                this.ee.on(\"animationsChange\", function(animationOptions) {\n                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n                    }\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n                var state = this.state;\n                if (!state.autoScroll || state.cursor.dragMode) return;\n                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleXVal = this.screen.getScreenRightVal();\n                    var paddingRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n                    var marginRightVal = this.getValueByScreenX(this.state.width - state.xAxis.range.margin.end);\n                    var currentScroll = state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n                        return;\n                    }\n                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n                var state = this.state;\n                if (!state.inertialScroll || isDragMode) return;\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime);\n                });\n            };\n            Chart.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getValueOnXAxis = function(x) {\n                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.getValueByScreenX = function(x) {\n                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.getValueByScreenY = function(y) {\n                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            Chart.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Chart.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Chart.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            Chart.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.state.width);\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(11);\n        var TrendSegmentsManager_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var deps_1 = __webpack_require__(2);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chart = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n                this.bindEvents();\n            }\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chart;\n                chartState.onDragStateChanged(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chart.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chart.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chart.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chart;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(11);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chart, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.unbindList = [];\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                }), this.chart.onZoom(function() {\n                    return _this.onZoomHandler();\n                }), this.chart.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }) ];\n            };\n            TrendSegmentsManager.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbind) {\n                    return unbind();\n                });\n            };\n            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.unbindEvents();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chart.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chart.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chart.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) {\n                            initialAnimationState = initialSegment.createAnimationState();\n                        }\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chart.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chart.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var _this = this;\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                trend.segmentsManager.onRebuild(function() {\n                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                });\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(12);\n        (function(TRANSFORMATION_EVENT) {\n            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n            TRANSFORMATION_EVENT[TRANSFORMATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n        })(exports.TRANSFORMATION_EVENT || (exports.TRANSFORMATION_EVENT = {}));\n        var TRANSFORMATION_EVENT = exports.TRANSFORMATION_EVENT;\n        var SCREEN_EVENTS = {\n            ZOOM_FRAME: \"zoomFrame\",\n            SCROLL_FRAME: \"scrollFrame\",\n            TRANSFORMATION_FRAME: \"transformationFrame\",\n            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n        };\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.transformationInProgress = false;\n                this.chart = chartState;\n                var _a = chartState.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chart.state.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chart.state, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n            };\n            Screen.prototype.onTransformationEvent = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n                var transformationStarted = hasActiveAnimations && !this.transformationInProgress;\n                var transformationFinished = !hasActiveAnimations && this.transformationInProgress;\n                if (transformationStarted) {\n                    this.transformationInProgress = true;\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.STARTED);\n                }\n                if (transformationFinished) {\n                    this.transformationInProgress = false;\n                }\n                if (!this.transformationInProgress) {\n                    this.options.scrollX = options.scrollX = Math.round(this.options.scrollX);\n                    this.options.scrollY = options.scrollY = Math.round(this.options.scrollY);\n                }\n                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n                if (transformationFinished) {\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, TRANSFORMATION_EVENT.FINISHED);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var chart = this.chart;\n                var isDragMode = chart.state.cursor.dragMode;\n                var animations = chart.state.animations;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                var range = chart.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                if (isDragMode) time = 0;\n                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.options.scrollX).to(targetX).onTick(function(value) {\n                    _this.transform({\n                        scrollX: value\n                    });\n                });\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var range = chart.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.scrollY).to(targetY).onTick(function(value) {\n                    _this.transform({\n                        scrollY: value\n                    });\n                });\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var targetZoom = chart.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomX).to(targetZoom).onTick(function(value) {\n                    _this.transform({\n                        zoomX: value\n                    });\n                });\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var targetZoom = chart.state.yAxis.range.zoom;\n                var animations = chart.state.animations;\n                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.options.zoomY).to(targetZoom).onTick(function(value) {\n                    _this.transform({\n                        zoomY: value\n                    });\n                });\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chart.state.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chart.state.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chart.state.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chart.state.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chart.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chart.state.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chart.state.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chart.state.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chart.state.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(11);\n        var interfaces_1 = __webpack_require__(20);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Easing_1 = __webpack_require__(22);\n        var AnimationManager = function() {\n            function AnimationManager() {\n                this.isAnimationsEnabled = true;\n                this.animations = [];\n                this.lastTickTime = Date.now();\n            }\n            AnimationManager.prototype.animate = function(time, timingFunction) {\n                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n                this.animations.push(animation);\n                return animation;\n            };\n            AnimationManager.prototype.animateObj = function(source, target) {};\n            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n                this.isAnimationsEnabled = isEnabled;\n            };\n            AnimationManager.prototype.tick = function() {\n                var now = Date.now();\n                var animations = this.animations;\n                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n                    var animation = animations[i_1];\n                    if (this.isAnimationsEnabled) {\n                        animation.tick(now);\n                    } else {\n                        animation.completeAndStop();\n                    }\n                }\n                var i = animations.length;\n                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n                this.lastTickTime = now;\n            };\n            AnimationManager.prototype.hasActiveAnimations = function() {\n                return this.animations.length > 0;\n            };\n            return AnimationManager;\n        }();\n        exports.AnimationManager = AnimationManager;\n        var Animation = function() {\n            function Animation(animationManager, time, createdTime, easing) {\n                if (easing === void 0) {\n                    easing = Easing_1.EASING.Quadratic.Out;\n                }\n                this.animationManager = animationManager;\n                this.time = time;\n                this.createdTime = createdTime;\n                this.easing = easing;\n                this.progress = 0;\n                this.delay = 0;\n                this.isFinished = false;\n                this.isStopped = false;\n                this.startTime = createdTime;\n            }\n            Animation.prototype.tick = function(now) {\n                if (!this.isStopped) {\n                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n                    this.setProgress(progress);\n                }\n            };\n            Animation.prototype.from = function(sourceObj) {\n                if (typeof sourceObj == \"object\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = {};\n                    var sourceIteralable = sourceObj;\n                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n                        this.initialObj[key] = sourceIteralable[key];\n                    }\n                } else if (typeof sourceObj == \"number\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = sourceObj;\n                }\n                return this;\n            };\n            Animation.prototype.to = function(targetObj) {\n                this.targetObject = targetObj;\n                if (typeof this.initialObj == \"object\") {\n                    var initialIteralable = this.initialObj;\n                    for (var key in this.targetObject) {\n                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                    var targetIteralable = this.targetObject;\n                    for (var key in initialIteralable) {\n                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                }\n                return this;\n            };\n            Animation.prototype.onTick = function(onTickCb) {\n                this.onTickCb = onTickCb;\n                return this;\n            };\n            Animation.prototype.then = function(onFinishCb) {\n                this.onFinishCb = onFinishCb;\n                return this;\n            };\n            Animation.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Animation.prototype.completeAndStop = function() {\n                this.setProgress(1);\n            };\n            Animation.prototype.withDelay = function(delay) {\n                this.delay = delay;\n                this.startTime = this.createdTime + delay;\n                return this;\n            };\n            Animation.prototype.setProgress = function(progress) {\n                if (progress < 0) return;\n                progress = Math.min(progress, 1);\n                this.progress = progress;\n                var k = this.easing(progress);\n                if (typeof this.sourceObj == \"number\") {\n                    var initialVal = this.initialObj;\n                    var targetVal = this.targetObject;\n                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n                } else if (this.sourceObj && this.targetObject) {\n                    for (var key in this.initialObj) {\n                        var initialVal = this.initialObj[key];\n                        var targetVal = this.targetObject[key];\n                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n                    }\n                }\n                if (progress == 1) {\n                    this.isStopped = true;\n                    this.isFinished = true;\n                }\n                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n            };\n            return Animation;\n        }();\n        exports.Animation = Animation;\n    }, function(module, exports) {\n        \"use strict\";\n        exports.EASING = {\n            Linear: {\n                None: function(k) {\n                    return k;\n                }\n            },\n            Quadratic: {\n                In: function(k) {\n                    return k * k;\n                },\n                Out: function(k) {\n                    return k * (2 - k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k;\n                    }\n                    return -.5 * (--k * (k - 2) - 1);\n                }\n            },\n            Cubic: {\n                In: function(k) {\n                    return k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k + 2);\n                }\n            },\n            Quartic: {\n                In: function(k) {\n                    return k * k * k * k;\n                },\n                Out: function(k) {\n                    return 1 - --k * k * k * k;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k;\n                    }\n                    return -.5 * ((k -= 2) * k * k * k - 2);\n                }\n            },\n            Quintic: {\n                In: function(k) {\n                    return k * k * k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k * k * k + 2);\n                }\n            },\n            Sinusoidal: {\n                In: function(k) {\n                    return 1 - Math.cos(k * Math.PI / 2);\n                },\n                Out: function(k) {\n                    return Math.sin(k * Math.PI / 2);\n                },\n                InOut: function(k) {\n                    return .5 * (1 - Math.cos(Math.PI * k));\n                }\n            },\n            Exponential: {\n                In: function(k) {\n                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n                },\n                Out: function(k) {\n                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    if ((k *= 2) < 1) {\n                        return .5 * Math.pow(1024, k - 1);\n                    }\n                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n                }\n            },\n            Circular: {\n                In: function(k) {\n                    return 1 - Math.sqrt(1 - k * k);\n                },\n                Out: function(k) {\n                    return Math.sqrt(1 - --k * k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n                    }\n                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n                }\n            },\n            Elastic: {\n                In: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                },\n                Out: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    k *= 2;\n                    if (k < 1) {\n                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                    }\n                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n                }\n            },\n            Back: {\n                In: function(k) {\n                    var s = 1.70158;\n                    return k * k * ((s + 1) * k - s);\n                },\n                Out: function(k) {\n                    var s = 1.70158;\n                    return --k * k * ((s + 1) * k + s) + 1;\n                },\n                InOut: function(k) {\n                    var s = 1.70158 * 1.525;\n                    if ((k *= 2) < 1) {\n                        return .5 * (k * k * ((s + 1) * k - s));\n                    }\n                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n                }\n            },\n            Bounce: {\n                In: function(k) {\n                    return 1 - exports.EASING.Bounce.Out(1 - k);\n                },\n                Out: function(k) {\n                    if (k < 1 / 2.75) {\n                        return 7.5625 * k * k;\n                    } else if (k < 2 / 2.75) {\n                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n                    } else if (k < 2.5 / 2.75) {\n                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n                    } else {\n                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n                    }\n                },\n                InOut: function(k) {\n                    if (k < .5) {\n                        return exports.EASING.Bounce.In(k * 2) * .5;\n                    }\n                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n                }\n            }\n        };\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(23);\n        var GridWidget_1 = __webpack_require__(25);\n        var Utils_1 = __webpack_require__(11);\n        var interfaces_1 = __webpack_require__(20);\n        var Color_1 = __webpack_require__(26);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.Color(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(23);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(11);\n        var Color_1 = __webpack_require__(26);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var Color = function() {\n            function Color(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            Color.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            Color.numberToHexStr = function(value) {\n                var result = value.toString(16);\n                return \"#\" + \"0\".repeat(6 - result.length) + result;\n            };\n            Color.prototype.set = function(color) {\n                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n                var colorStr = color;\n                var rgba = Color.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = Color.numberToHexStr(this.value);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            Color.prototype.getTransparent = function(opacity) {\n                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n            };\n            return Color;\n        }();\n        exports.Color = Color;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(11);\n        var TrendsWidget_1 = __webpack_require__(28);\n        var Color_1 = __webpack_require__(26);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i < segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(23);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(28);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(11);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(28);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(15);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(11);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(23);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var Utils_1 = __webpack_require__(11);\n        var Line = THREE.Line;\n        var Mesh = THREE.Mesh;\n        var interfaces_1 = __webpack_require__(20);\n        var Color_1 = __webpack_require__(26);\n        var AxisMarksWidget = function(_super) {\n            __extends(AxisMarksWidget, _super);\n            function AxisMarksWidget() {\n                _super.apply(this, arguments);\n                this.axisMarksWidgets = [];\n            }\n            AxisMarksWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                var _a = this.chart, xAxisMarks = _a.xAxisMarks, yAxisMarks = _a.yAxisMarks;\n                var items = xAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n                items = yAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n                this.bindEvents();\n            };\n            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n                var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n                this.axisMarksWidgets.push(axisMarkWidget);\n                this.object3D.add(axisMarkWidget.getObject3D());\n            };\n            AxisMarksWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.chart.screen.onTransformationFrame(function() {\n                    return _this.updateMarksPositions();\n                }), this.chart.onResize(function() {\n                    return _this.updateMarksPositions();\n                }));\n            };\n            AxisMarksWidget.prototype.updateMarksPositions = function() {\n                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n                    var widget = _a[_i];\n                    widget.updatePosition();\n                }\n            };\n            AxisMarksWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarksWidget.widgetName = \"AxisMarks\";\n            return AxisMarksWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisMarksWidget = AxisMarksWidget;\n        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n            var axisMark = axisMarkWidget.axisMark;\n            ctx.fillStyle = axisMark.options.lineColor;\n            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n            var xCoord = 15;\n            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n                ctx.textAlign = \"end\";\n                xCoord = axisMarkWidget.indicatorWidth;\n            }\n            ctx.fillText(axisMark.options.title, xCoord, 20);\n            if (!axisMark.options.showValue) return;\n            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n        };\n        var INDICATOR_POS_Z = .1;\n        var AxisMarkWidget = function() {\n            function AxisMarkWidget(chartState, axisMark) {\n                this.indicatorWidth = 128;\n                this.indicatorHeight = 64;\n                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n                this.chartState = chartState;\n                this.axisMark = axisMark;\n                this.axisType = axisMark.axisType;\n                this.frameValue = axisMark.options.value;\n                this.object3D = new Object3D();\n                this.object3D.position.setZ(-.1);\n                this.line = this.createLine();\n                this.object3D.add(this.line);\n                this.indicator = this.createIndicator();\n                this.object3D.add(this.indicator);\n                this.renderIndicator();\n                this.updatePosition();\n                this.bindEvents();\n            }\n            AxisMarkWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarkWidget.prototype.createLine = function() {\n                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n                var lineGeometry = new Geometry();\n                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n                return new Line(lineGeometry, new LineBasicMaterial({\n                    color: new Color_1.Color(lineColor).value,\n                    linewidth: lineWidth\n                }));\n            };\n            AxisMarkWidget.prototype.createIndicator = function() {\n                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n                var texture = Utils_1.Utils.createNearestTexture(width, height, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n            };\n            AxisMarkWidget.prototype.renderIndicator = function() {\n                var texture = this.indicator.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n                texture.needsUpdate = true;\n            };\n            AxisMarkWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.axisMark.onDisplayedValueChange(function() {\n                    return _this.renderIndicator();\n                });\n                this.axisMark.onValueChange(function() {\n                    return _this.onValueChangeHandler();\n                });\n            };\n            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n                var _this = this;\n                if (this.moveAnimation) this.moveAnimation.kill();\n                var animations = this.chartState.state.animations;\n                var targetValue = this.axisMark.options.value;\n                var cb = function() {\n                    _this.updatePosition();\n                };\n                if (animations.enabled) {\n                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n                        frameValue: targetValue,\n                        ease: animations.trendChangeEase\n                    });\n                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.frameValue = targetValue;\n                    cb();\n                }\n            };\n            AxisMarkWidget.prototype.updatePosition = function() {\n                var chartState = this.chartState;\n                var screen = chartState.screen;\n                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n                var lineGeometry = this.line.geometry;\n                var hasStickMode = this.axisMark.options.stickToEdges;\n                var _a = this.chartState.state, width = _a.width, height = _a.height;\n                if (isXAxis) {\n                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n                    this.object3D.position.y = screen.getBottom();\n                    lineGeometry.vertices[1].setY(height);\n                    this.indicator.position.set(this.indicatorWidth / 2, chartState.state.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n                } else {\n                    var val = this.frameValue;\n                    var bottomVal = screen.getBottomVal();\n                    var topVal = screen.getTopVal();\n                    var needToStickOnTop = hasStickMode && val > topVal;\n                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n                    var centerYVal = screen.getCenterYVal();\n                    this.object3D.position.x = screen.getLeft();\n                    if (needToStickOnTop) {\n                        this.object3D.position.y = screen.getTop();\n                    } else if (needToStickOnBottom) {\n                        this.object3D.position.y = screen.getBottom();\n                    } else {\n                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n                    }\n                    lineGeometry.vertices[1].setX(width);\n                    var indicatorPosY = val > centerYVal ? -35 : 10;\n                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n                }\n                lineGeometry.verticesNeedUpdate = true;\n            };\n            AxisMarkWidget.typeName = \"simple\";\n            return AxisMarkWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(24));\n        __export(__webpack_require__(25));\n        __export(__webpack_require__(28));\n        __export(__webpack_require__(29));\n        __export(__webpack_require__(27));\n        __export(__webpack_require__(31));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 34\n ** module chunks = 1\n **/","export * from './TrendsMarksPlugin';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/index.ts\n **/","\nimport Vector3 = THREE.Vector3;\nimport { ChartPlugin, ChartWidget, TrendSegment, TREND_TYPE, Utils, Chart, TColor, TEase } from 'three-charts';\nimport { TrendsMarksWidget, DEFAULT_RENDERER, TrendMarkWidget } from './TrendsMarksWidget';\nimport { EASING } from \"../../../src/Easing\";\n\nexport enum TREND_MARK_SIDE {TOP, BOTTOM}\nexport enum EVENTS {CHANGE}\nexport type TTrendsMarksPluginOptions = {items: ITrendMarkOptions[]};\n\nexport interface ITrendMarkOptions {\n\ttrendName: string,\n\txVal: number,\n\ttitle?: string,\n\tname?: string,\n\tcolor?: TColor,\n\torientation?: TREND_MARK_SIDE,\n\twidth?: number,\n\theight?: number,\n\t/**\n\t * space between marks\n\t */\n\tmargin?: number,\n\t/**\n\t * custom render function\n\t */\n\tonRender?: (\n\t\ttrendMarkWidget: TrendMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\tchart: Chart\n\t) => any,\n\tease?: TEase,\n\teaseSpeed?: number,\n\tuserData?: any\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: ITrendMarkOptions = {\n\ttrendName: '',\n\ttitle: '',\n\tcolor: 'rgba(#0099d9, 0.5)',\n\txVal: 0,\n\torientation: TREND_MARK_SIDE.TOP,\n\twidth: 105,\n\theight: 100,\n\tmargin: 10,\n\tease: EASING.Elastic.Out,\n\teaseSpeed: 1000,\n\tonRender: DEFAULT_RENDERER\n};\n\n\nexport class TrendsMarksPlugin extends ChartPlugin {\n\tstatic NAME = 'TrendsMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [TrendsMarksWidget];\n\n\tprivate items: {[name: string]: TrendMark} = {};\n\tprivate rects: {[name: string]: number[]} = {};\n\n\tconstructor(trendsMarksPluginOptions: TTrendsMarksPluginOptions) {\n\t\tsuper(trendsMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t\tthis.bindEvents();\n\t}\n\n\n\tprotected onStateChanged() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\n\tgetOptions(): TTrendsMarksPluginOptions {\n\t\treturn super.getOptions() as TTrendsMarksPluginOptions;\n\t}\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n\tcreateMark(options: ITrendMarkOptions) {\n\t\tvar marksOptions = this.getOptions().items;\n\t\tvar newMarkOptions = marksOptions.concat([options]);\n\t\tthis.chart.setState({pluginsState: {[this.name]: {items: newMarkOptions}}});\n\t}\n\n\tonChange(cb: () => any) {\n\t\treturn this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.trendsManager.onSegmentsRebuilded(() => {\n\t\t\tthis.updateMarksSegments()\n\t\t});\n\t\tthis.chart.screen.onZoomFrame(() => this.calclulateMarksPositions());\n\t}\n\n\tprivate onMarksChangeHandler() {\n\t\tvar trendsMarksOptions = this.getOptions().items;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let options of trendsMarksOptions) {\n\t\t\tvar marks = this.items;\n\n\t\t\t// set mark name\n\t\t\tif (!options.name) {\n\t\t\t\toptions.name = Utils.getUid().toString();\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t} else if (marks[options.name]) {\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\n\t\t\tlet mark = new TrendMark(this.chart, options);\n\t\t\tmarks[options.name] = mark;\n\t\t}\n\n\t\t// delete not relevant marks\n\t\tfor (let markName in this.items) {\n\t\t\tif (actualMarksNames.indexOf(markName) != -1) continue;\n\t\t\tdelete this.items[markName];\n\t\t}\n\t\tthis.updateMarksSegments();\n\t}\n\n\n\tprivate calclulateMarksPositions() {\n\t\tthis.rects = {};\n\t\tfor (let markName in this.items) {\n\t\t\tthis.createMarkRect(this.items[markName]);\n\t\t}\n\t}\n\n\tprivate createMarkRect(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\n\t\tlet chart = this.chart;\n\t\tlet options = mark.options;\n\t\tlet {width, height, name} = options;\n\t\tlet left = chart.getPointOnXAxis(mark.xVal) - width / 2;\n\t\tlet top = chart.getPointOnYAxis(mark.yVal);\n\t\tlet isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t\tlet newOffset: number;\n\t\tlet row = 0;\n\n\t\tif (isTopSideMark) {\n\t\t\ttop += height;\n\t\t}\n\n\t\tlet markRect = [left, top, width, height];\n\t\tlet hasIntersection = false;\n\t\tdo {\n\t\t\tfor (let markName in this.rects) {\n\t\t\t\tlet rect = this.rects[markName];\n\t\t\t\thasIntersection = Utils.rectsIntersect(rect, markRect);\n\t\t\t\tif (!hasIntersection) continue;\n\t\t\t\tif (isTopSideMark) {\n\t\t\t\t\tmarkRect[1] = rect[1] + markRect[3] + options.margin;\n\t\t\t\t} else {\n\t\t\t\t\tmarkRect[1] = rect[1] - rect[3] - options.margin;\n\t\t\t\t}\n\t\t\t\trow++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (hasIntersection);\n\n\t\tif (isTopSideMark) {\n\t\t\tnewOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\n\t\t} else {\n\t\t\tnewOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\n\t\t}\n\n\t\tmark._setOffset(newOffset);\n\t\tmark._setRow(row);\n\t\tthis.rects[name] = markRect;\n\t}\n\n\tprivate updateMarksSegments() {\n\t\tlet chart = this.chart;\n\t\tlet trends = chart.trendsManager.trends;\n\t\tfor (let trendName in trends) {\n\t\t\tvar marks = this.getTrendMarks(trendName);\n\t\t\tvar marksArr: TrendMark[] = [];\n\t\t\tvar xVals: number[] = [];\n\t\t\tfor (let markName in marks) {\n\t\t\t\tlet mark = marks[markName];\n\t\t\t\txVals.push(mark.options.xVal);\n\t\t\t\tmarksArr.push(mark);\n\t\t\t\tmark._setSegment(null);\n\t\t\t}\n\t\t\tmarksArr.sort((a, b) => a.options.xVal - b.options.xVal);\n\t\t\tlet trend = chart.getTrend(trendName);\n\t\t\tlet points = trend.segmentsManager.getSegmentsForXValues(xVals.sort((a, b) => a - b));\n\t\t\tfor (let markInd = 0; markInd < marksArr.length; markInd++) {\n\t\t\t\tmarksArr[markInd]._setSegment(points[markInd]);\n\t\t\t}\n\t\t}\n\t\tthis.calclulateMarksPositions();\n\t\tthis.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t}\n\n\tprivate getTrendMarks(trendName: string): TrendMark[] {\n\t\tlet trendMarks: TrendMark[] = [];\n\t\tfor (let markName in this.items) {\n\t\t\tif (this.items[markName].options.trendName != trendName) continue;\n\t\t\ttrendMarks.push(this.items[markName]);\n\t\t}\n\t\treturn trendMarks;\n\t}\n\n}\n\nexport class TrendMark {\n\toptions: ITrendMarkOptions;\n\tsegment: TrendSegment;\n\txVal: number;\n\tyVal: number;\n\toffset: number;\n\trow = 0;\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart, options: ITrendMarkOptions) {\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t}\n\n\n\t/**\n\t * only for internal usage\n\t */\n\t_setSegment(segment: TrendSegment) {\n\t\tthis.segment = segment;\n\t\tif (!segment) return;\n\n\t\tlet trend = this.chart.getTrend(this.options.trendName);\n\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tthis.xVal = segment.endXVal;\n\t\t\tthis.yVal = segment.endYVal;\n\t\t} else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.maxYVal;\n\t\t} else {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.minYVal;\n\t\t}\n\t}\n\n\t_setOffset(offset: number) {\n\t\tthis.offset = offset;\n\t}\n\n\t_setRow(row: number) {\n\t\tthis.row = row;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts\n **/","import {Chart, Utils, TrendsWidget, TrendWidget, TRANSFORMATION_EVENT, Color } from 'three-charts';\nimport { TrendMark, TREND_MARK_SIDE, TrendsMarksPlugin } from \"./TrendsMarksPlugin\";\nimport Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport LineSegments = THREE.LineSegments;\nimport LineDashedMaterial = THREE.LineDashedMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport LinearFilter = THREE.LinearFilter;\nimport NearestFilter = THREE.NearestFilter;\n\n\n/**\n * widget for drawing trends marks for all trends\n */\nexport class TrendsMarksWidget extends TrendsWidget<TrendMarksWidget> {\n\tstatic widgetName = \"TrendsMarks\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendMarksWidget;\n\t}\n}\n\n/**\n * widget for drawing trend marks for one trend\n */\nexport class TrendMarksWidget extends TrendWidget {\n\n\tprivate object3D: Object3D;\n\tprivate marksWidgets: {[name: string]: TrendMarkWidget} = {};\n\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.object3D = new Object3D();\n\t\tthis.onMarksChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\t\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.getTrendsMarksPlugin().onChange(() => this.onMarksChange()));\n\t\tthis.bindEvent(this.chart.screen.onTransformationEvent((event) => this.onScreenTransformationEvent(event)));\n\t}\n\n\tprivate getTrendsMarksPlugin(): TrendsMarksPlugin {\n\t\treturn this.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t}\n\n\tprivate onMarksChange() {\n\t\tlet marksItems = this.getTrendsMarksPlugin().getItems();\n\t\tlet widgets = this.marksWidgets;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let markName in marksItems) {\n\t\t\tactualMarksNames.push(markName);\n\t\t\tif (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t\t}\n\t\tfor (let markName in this.marksWidgets) {\n\t\t\tif (actualMarksNames.indexOf(markName) !== -1) continue;\n\t\t\tthis.destroyMarkWidget(markName);\n\t\t}\n\n\t}\n\t\n\tprivate createMarkWidget(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\t\tlet markWidget = new TrendMarkWidget(this.chart, mark);\n\t\tthis.marksWidgets[mark.options.name] = markWidget;\n\t\tthis.object3D.add(markWidget.getObject3D());\n\t}\n\n\tprivate destroyMarkWidget(markName: string) {\n\t\tthis.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t\tdelete this.marksWidgets[markName];\n\t}\n\n\tprivate onScreenTransformationEvent(event: TRANSFORMATION_EVENT) {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onScreenTransformationEventHandler(event);\n\t\t}\n\t}\n\n\tprotected onZoomFrame() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onZoomFrameHandler();\n\t\t}\n\t}\n\n\tprotected onSegmentsAnimate() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onSegmentsAnimate();\n\t\t}\n\t}\n\n}\n\n/**\n * widget for drawing one trend mark\n */\nexport class TrendMarkWidget {\n\tmark: TrendMark;\n\tprivate chart: Chart;\n\tprivate markMesh: Mesh;\n\n\tconstructor(chart: Chart, trendMark: TrendMark) {\n\t\tthis.chart = chart;\n\t\tthis.mark = trendMark;\n\t\tthis.initObject();\n\t\tthis.show();\n\t}\n\t\n\tprotected initObject() {\n\t\tlet options = this.mark.options;\n\t\tlet {width, height} = options;\n\n\t\tlet texture = Utils.createNearestTexture(width, height, (ctx) => {\n\t\t\toptions.onRender(this, ctx, this.chart);\n\t\t});\n\n\n\t\t// make text sharp when screen is not transforming\n\t\ttexture.magFilter = this.chart.screen.transformationInProgress ? LinearFilter : NearestFilter;\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tthis.markMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(width, height),\n\t\t\tmaterial\n\t\t);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.markMesh;\n\t}\n\n\tonSegmentsAnimate() {\n\t\tthis.updatePosition();\n\t}\n\n\tonZoomFrameHandler() {\n\t\tthis.updatePosition();\n\t}\n\n\tonScreenTransformationEventHandler(event: TRANSFORMATION_EVENT) {\n\t\tlet texture = (this.markMesh.material as MeshBasicMaterial).map;\n\n\t\t// make text sharp when screen is not transforming\n\t\ttexture.magFilter = (event == TRANSFORMATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.mark.segment) return;\n\t\tlet mark = this.mark;\n\t\tlet screen = this.chart.screen;\n\n\t\tlet posX = screen.getPointOnXAxis(mark.xVal);\n\t\tlet posY = screen.getPointOnYAxis(mark.yVal);\n\n\t\tthis.markMesh.position.set(posX, posY, 0);\n\t}\n\n\tprivate show() {\n\t\tif (!this.mark.segment) return;\n\t\tthis.updatePosition();\n\t\tthis.markMesh.scale.set(0.01, 0.01, 1);\n\n\t\tthis.chart.animationManager\n\t\t\t.animate(1000, this.mark.options.ease)\n\t\t\t.from(this.markMesh.scale as Object)\n\t\t\t.to({x: 1, y: 1});\n\t}\n}\n\nexport const DEFAULT_RENDERER = (\n\ttrendMarkWidget: TrendMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\tchart: Chart\n) =>  {\n\n\tlet mark = trendMarkWidget.mark;\n\tlet options = mark.options;\n\tlet isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\n\tlet color = options.color !== void 0 ?\n\t\tnew Color(options.color) :\n\t\tnew Color(chart.getTrend(options.trendName).getOptions().lineColor);\n\tlet rgbaColor = color.getTransparent(0.5).rgbaStr;\n\tlet {width, height} = options;\n\tlet centerX = Math.round(width / 2);\n\tlet centerY =  Math.round(height / 2);\n\tlet font = chart.state.font.m;\n\tlet textOffset = parseInt(font);\n\tlet textPosX = centerX;\n\tlet textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\n\n\t// draw rect\n\tctx.fillStyle = rgbaColor;\n\tctx.strokeStyle = rgbaColor;\n\tctx.fillRect(\n\t\t0,\n\t\tisTopSide ? 0 : height,\n\t\twidth,\n\t\tisTopSide ? textOffset * 2 : -textOffset * 2\n\t);\n\n\t// draw dot\n\tctx.beginPath();\n\tctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\n\tctx.fill();\n\n\t// draw line\n\tlet lineEndY = textPosY ;\n\tctx.beginPath();\n\tctx.moveTo(centerX, centerY);\n\tctx.lineTo(centerX, lineEndY);\n\tctx.stroke();\n\n\t// draw text\n\tctx.beginPath();\n\tctx.textAlign = 'center';\n\tctx.font = font;\n\tctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\n\tctx.fillText(\n\t\toptions.title,\n\t\tMath.round(textPosX),\n\t\tMath.round(textPosY)\n\t);\n\n\n\n\t// uncomment to preview mark rect\n\t// ctx.rect(0, 0, width, height);\n\t// ctx.stroke();\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts\n **/","export * from './TrendsBeaconWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\n\nimport {\n\tUtils,\n\tChart,\n\tIChartState,\n\tTrendsWidget,\n\tTrendWidget,\n\tTrendSegment,\n\tTrendSegmentsManager,\n\tITrendOptions,\n\tAnimation,\n\tTREND_TYPE\n} from 'three-charts';\n\nconst ANIMATION_TIME = 1000;\nconst ANIMATION_DELAY = 300;\n\n/**\n * widget adds blinking beacon on trends end\n * activated when trend.hasBeacon = true\n */\nexport class TrendsBeaconWidget extends TrendsWidget<TrendBeacon> {\n\tstatic widgetName = 'TrendsBeacon';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendBeacon;\n\t}\n}\n\nexport class TrendBeacon extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animated: boolean;\n\tprivate segment: TrendSegment;\n\tprivate animation: Animation<any>;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\tthis.updatePosition();\n\t\tthis.animate();\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.chart.onScroll(() => this.updatePosition()));\n\t}\n\n\tprivate initObject() {\n\n\t\t// add beacon\n\t\tlet light = this.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture(), transparent: true})\n\t\t);\n\n\t\tthis.setInitialState();\n\n\t\t// add dot\n\t\tlight.add(new Mesh(\n\t\t\tnew PlaneBufferGeometry(5, 5),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture()})\n\t\t));\n\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t}\n\n\tprivate animate() {\n\t\tif (!this.chart.state.animations.enabled) return;\n\n\t\tif (this.animation) this.animation.stop();\n\t\tthis.setInitialState();\n\n\t\tlet mesh = this.mesh;\n\t\tlet animationObject = {\n\t\t\tscale: mesh.scale.x,\n\t\t\topacity: mesh.material.opacity\n\t\t};\n\n\t\tthis.animation = this.chart.animationManager\n\t\t\t.animate(ANIMATION_TIME)\n\t\t\t.withDelay(ANIMATION_DELAY)\n\t\t\t.from(animationObject)\n\t\t\t.to({scale: 1, opacity: 0})\n\t\t\t.onTick(animationObject => {\n\t\t\t\tmesh.scale.set(animationObject.scale, animationObject.scale, 1);\n\t\t\t\tmesh.material.opacity = animationObject.opacity\n\t\t\t}).then(() => {\n\t\t\t\tthis.setInitialState();\n\t\t\t});\n\t}\n\n\tprivate setInitialState() {\n\t\tthis.mesh.scale.set(0.2, 0.2, 1);\n\t\tthis.mesh.material.opacity = 1;\n\t}\n\n\tonDestroy() {\n\t\tsuper.onDestroy();\n\t\tif (this.animation) this.animation.stop();\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 32, w = 32;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.fill();\n\t\t});\n\t}\n\n\tprotected onTransformationFrame() {\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(trendsSegments: TrendSegmentsManager) {\n\t\tthis.segment = trendsSegments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tvar chart = this.chart;\n\t\tvar xVal: number, yVal: number;\n\t\tvar currentAnimationState = this.segment.currentAnimationState;\n\t\tif (this.trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\txVal = currentAnimationState.endXVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t} else {\n\t\t\txVal = currentAnimationState.xVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t}\n\t\tvar endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n\t\tvar screenWidth = chart.state.width;\n\t\tvar x = endPointVector.x;\n\t\tvar screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t\tif (screenX < 0) {\n\t\t\tx = chart.screen.getPointByScreenX(0);\n\t\t}\n\t\tif (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n\t\tthis.mesh.position.set(x, endPointVector.y, 0.1);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts\n **/","export * from './TrendsLoadingWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport { TrendWidget, TrendsWidget, ITrendOptions, TREND_TYPE, Chart, Utils } from 'three-charts';\n\n/**\n * widget adds loading indicator\n * activated when animations enabled\n */\nexport class TrendsLoadingWidget extends TrendsWidget<TrendLoading> {\n\tstatic widgetName = 'TrendsLoading';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLoading;\n\t}\n}\n\nexport class TrendLoading extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animation: TweenLite;\n\tprivate isActive = false;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chart: Chart) {\n\t\treturn trendOptions.enabled && chart.state.animations.enabled;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\t// add beacon\n\t\tthis.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendLoading.createTexture(), transparent: true})\n\t\t);\n\t\tthis.deactivate();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tbindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.onPrependRequest(() => this.activate()));\n\t}\n\n\tprependData() {\n\t\tthis.deactivate();\n\t}\n\n\tprivate activate() {\n\t\tvar mesh = this.mesh;\n\t\tmesh.material.opacity = 1;\n\t\tmesh.rotation.z = 0;\n\t\tvar animation = TweenLite.to(this.mesh.rotation, 0.5, {z: Math.PI * 2});\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimation.restart();\n\t\t});\n\t\tthis.animation = animation;\n\t\tthis.isActive = true;\n\t\tthis.updatePosition();\n\t}\n\n\tprivate deactivate() {\n\t\tthis.animation && this.animation.kill();\n\t\tthis.mesh.material.opacity = 0;\n\t\tthis.isActive = false;\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 64, w = 64;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t\tctx.lineWidth = 5;\n\t\t\tvar center = h / 2;\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(center, center, 22, 0, Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 3, 0, Math.PI * 2);\n\t\t\tctx.stroke();\n\t\t});\n\t}\n\n\tprotected onZoomFrame() {\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.isActive) return;\n\t\tlet trend = this.trend;\n\t\t// set new widget position\n\t\tlet segment = trend.segmentsManager.getStartSegment();\n\t\tlet x: number, y: number;\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tx = segment.currentAnimationState.startXVal;\n\t\t\ty = segment.currentAnimationState.startYVal;\n\t\t} else {\n\t\t\tx = segment.currentAnimationState.xVal - segment.maxLength;\n\t\t\ty = segment.currentAnimationState.yVal\n\t\t}\n\t\tlet pointVector = this.chart.screen.getPointOnChart(x, y);\n\t\tthis.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts\n **/","export * from './TrendsIndicatorWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport {\n\tTrendSegmentsManager,\n\tTrendSegment,\n\tColor,\n\tChart,\n\tUtils,\n\tTrendWidget,\n\tTrendsWidget,\n\tITrendOptions\n} from \"three-charts\";\n\nconst CANVAS_WIDTH = 150;\nconst CANVAS_HEIGHT = 64;\nconst OFFSET_X = 15;\n\nexport class TrendsIndicatorWidget extends TrendsWidget<TrendIndicator> {\n\tstatic widgetName = 'TrendsIndicator';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendIndicator;\n\t}\n}\n\nexport class TrendIndicator extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate segment: TrendSegment;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasIndicator;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.initObject();\n\t\tthis.onTrendChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\t// update canvas value\n\t\tlet trendData = this.trend.getData();\n\t\tvar lastItem = trendData[trendData.length - 1];\n\t\tvar texture = (this.mesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\t// uncomment to preview indicator rect\n\t\t// ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t\t// ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\tctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate initObject() {\n\t\tvar color = new Color(this.trend.getOptions().lineColor);\n\t\tvar texture = Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, (ctx) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.font = \"15px Arial\";\n\t\t\tctx.fillStyle = color.rgbaStr;\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t});\n\n\t\tvar material = new THREE.MeshBasicMaterial({map: texture, side: THREE.FrontSide});\n\t\tmaterial.transparent = true;\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT),\n\t\t\tmaterial\n\t\t);\n\t}\n\n\tprotected onTransformationFrame() {\n\t\t// set new widget position\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t\t// set new widget position\n\t\tthis.segment = segments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tvar chart = this.chart;\n\t\tvar {endXVal: segmentEndXVal, endYVal: segmentEndYVal} = this.segment.currentAnimationState;\n\t\tvar endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t\tvar screenWidth = chart.state.width;\n\t\tvar x = endPointVector.x + OFFSET_X;\n\t\tvar y = endPointVector.y;\n\n\t\tvar screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t\tvar indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t\tif (indicatorIsOutOfScreen) {\n\t\t\tif (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n\t\t\tif (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t\t\ty -= 25;\n\t\t}\n\t\tthis.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\n\t}\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts\n **/"],"sourceRoot":""}