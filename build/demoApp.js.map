{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap d25ec2d15a9c15a0f671?a332","webpack:///./demo/demoApp.ts","webpack:///./src/Easing.ts?492d","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/src/TrendsMarksPlugin/index.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts","webpack:///./plugins/src/TrendsBeaconWidget/index.ts","webpack:///./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts","webpack:///./plugins/src/TrendsLoadingWidget/index.ts","webpack:///./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts","webpack:///./plugins/src/TrendsIndicatorWidget/index.ts","webpack:///./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts","webpack:///./plugins/src/ZonesPlugin/ZonesPlugin.ts","webpack:///./plugins/src/ZonesPlugin/ZonesWidget.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","three_charts_1","TrendsMarksPlugin_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","AxisMarksPlugin_1","ZonesPlugin_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chartView","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","title","color","userData","description","icon","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","document","querySelector","ZonesPlugin","TrendsMarksPlugin","items","AxisMarksPlugin","axisType","AXIS_TYPE","X","value","name","feel","lineColor","axisMarks","chart","getPlugin","NAME","zones","setTimeout","zone","create","position","startXVal","endXVal","mark","createMark","Y","stickToEdges","setInterval","update","mainTrend","getTrend","onDataChange","markOptions","getLastItem","trendsMarks","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","appendData","$checkboxMaintrend","addEventListener","setState","enabled","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","setOptions","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","EASING","Linear","None","k","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","cos","PI","sin","Exponential","pow","Circular","sqrt","Elastic","Back","s","Bounce","__export","hasOwnProperty","TweenLite","TweenMax","Stats","isPlainObject","EE2","es6_promise_1","Promise","ResizeSensor","deepExtend","h","a","appendChild","dom","d","children","style","display","l","createElement","cssText","preventDefault","g","performance","e","r","Panel","f","self","memory","t","REVISION","addPanel","showPanel","begin","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","devicePixelRatio","u","n","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","min","max","drawImage","THREE","SpriteCanvasMaterial","parameters","Material","Color","program","context","setValues","Object","constructor","clone","material","copy","CanvasRenderer","console","log","_this","_renderData","_elements","_lights","_projector","Projector","_canvas","canvas","undefined","_canvasWidth","_canvasHeight","_canvasWidthHalf","floor","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_context","alpha","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_camera","_v1","_v2","_v3","_v4","_v5","RenderableVertex","_v6","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_v4x","_v4y","_v5x","_v5y","_v6x","_v6y","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_clipBox","Box2","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_vector3","Vector3","_centroid","_normal","_normalViewMatrix","Matrix3","setLineDash","autoClear","sortObjects","sortElements","info","render","vertices","faces","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","setPixelRatio","setSize","updateStyle","set","setViewport","x","y","setScissor","setScissorTest","setClearColor","setClearColorHex","hex","warn","getClearColor","getClearAlpha","getMaxAnisotropy","clear","isEmpty","intersect","expandByScalar","clearRect","setBlending","NormalBlending","setOpacity","setFillStyle","makeEmpty","clearColor","clearDepth","clearStencil","scene","camera","Camera","error","setTransform","translate","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","calculateLights","el","element","opacity","RenderableSprite","renderSprite","RenderableLine","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","RenderableFace","v3","z","overdraw","expand","renderFace3","union","setRGB","ll","light","lightColor","AmbientLight","add","DirectionalLight","PointLight","calculateLight","normal","lightPosition","setFromMatrixPosition","matrixWorld","normalize","amount","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","blending","scaleX","scale","scaleY","dist","SpriteMaterial","texture","map","pattern","version","textureToPattern","bitmap","image","ox","offset","oy","sx","repeat","sy","cx","cy","save","rotation","rotate","restore","getStyle","setStrokeStyle","beginPath","moveTo","lineTo","LineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","LineDashedMaterial","dashSize","gapSize","uv1","uv2","uv3","drawTriangle","MeshLambertMaterial","MeshPhongMaterial","emissive","FaceColors","multiply","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","MeshBasicMaterial","mapping","UVMapping","uvs","patternPath","envMap","SphericalReflectionMapping","vertexNormalsModel","applyMatrix3","MeshNormalMaterial","addScalar","x0","y0","x1","y1","x2","y2","closePath","fill","CompressedTexture","DataTexture","complete","repeatX","wrapS","RepeatWrapping","repeatY","wrapT","createPattern","onUpdate","u0","v0","u1","u2","det","idet","offsetX","offsetY","transform","clipImage","clip","pixels","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","MultiplyBlending","lineWidth","lineCap","lineJoin","strokeStyle","RenderableObject","object","renderOrder","vertexNormalsLength","Vector2","Vector4","visible","vertex","_object","_objectCount","_objectPool","_objectPoolLength","_vertex","_vertexCount","_vertexPool","_vertexPoolLength","_face","_faceCount","_facePool","_facePoolLength","_line","_lineCount","_linePool","_linePoolLength","_sprite","_spriteCount","_spritePool","_spritePoolLength","objects","_vector4","Box3","_boundingBox","_points3","Array","_points4","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","project","unprojectVector","unproject","pickingRay","RenderList","normals","normalMatrix","setObject","projectVertex","applyMatrix4","invW","w","pushVertex","getNextVertexInPool","pushNormal","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","getNextLineInPool","pushTriangle","side","DoubleSide","getNextFaceInPool","fromArray","arguments","uv","renderList","autoUpdate","updateMatrixWorld","parent","getInverse","multiplyMatrices","projectionMatrix","setFromMatrix","addObject","getNextObjectInPool","applyProjection","traverseVisible","Light","Mesh","Line","frustumCulled","intersectsObject","Sprite","intersectsSprite","sort","painterSort","o","ol","geometry","BufferGeometry","attributes","groups","positions","array","index","indices","group","count","Geometry","faceVertexUvs","isFaceMaterial","MultiMaterial","objectMaterials","vl","morphTargets","morphInfluences","morphTargetInfluences","tl","influence","target","targetVertex","fl","face","materials","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","clipLine","colors","getNextSpriteInPool","abs","line","sprite","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","isObject","isObjectObject","toString","ctor","prot","isArray","__WEBPACK_AMD_DEFINE_RESULT__","_isArray","obj","defaultMaxListeners","init","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","concat","**","growListenerTree","listener","split","slice","shift","warned","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","apply","_origin","on","emit","_all","args","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","callback","EventQueue","ev","j","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","innerHTML","fixed","absolute","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","detach","removeChild","Buffer","isSpecificValue","RegExp","cloneSpecificValue","getTime","deepCloneArray","arr","forEach","src","keys","key","global","base64","ieee754","SlowBuffer","INSPECT_MAX_BYTES","TYPED_ARRAY_SUPPORT","typedArraySupport","kMaxLength","Uint8Array","__proto__","foo","subarray","byteLength","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","poolSize","_augment","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","Symbol","species","defineProperty","configurable","assertSize","size","alloc","encoding","allocUnsafeSlow","string","isEncoding","actual","write","fromArrayLike","byteOffset","isBuffer","buffer","isnan","_isBuffer","compare","String","toLowerCase","list","pos","buf","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","equals","inspect","str","match","join","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","includes","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","toByteArray","dst","lookup","revLookup","Arr","placeHoldersCount","b64","tmp","placeHolders","L","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","__extends","__","Plugin_1","OrthographicCamera","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","ChartBlankView","$container","pluginsAndWidgets","widgets","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","_a","autoRender","Scene","isStopped","renderer","renderers","antialias","backgroundColor","$el","stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","customWidgets","ChartWidget","pluginWidgetClasses","providedWidgets","WidgetClass","widget","setupChart","onReadyHandler","getObject3D","isDestroyed","fpsLimit","fps","delay_1","requestAnimationFrame","stop","run","destroy","unbindEvents","forceContextLoss","wtf","getState","controls","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","interpolatedViewport","onInterpolation","options","onScreenTransformHandler","onResize","onChartResize","remove","unsubscribe","camSettings","viewport","getCameraSettings","left","right","top","bottom","near","far","updateProjectionMatrix","cameraInitialPosition","params","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","cursor","dragMode","clientX","clientY","stopPropagation","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","WebGLRenderer","_super","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","ee","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChangedHandler","getOptions","pluginsState","changedState","_i","unsubscriber","obj1","obj2","mergeArrays","JSON","parse","stringify","patch","objectToPatch","idKey","_loop_1","patchItem","subObject","find","this_1","travers","allowTraverseDeeper","canTraverseDeeper","setIdsToArrayItems","sourceObject","arr_1","getUid","toFixed","digitsCount","maxDigits","result","intVal","intStr","lengthDiff","afterPointDigitsCount","afterPointStr","createTexture","ctx","Texture","needsUpdate","createNearestTexture","minFilter","NearestFilter","createPixelPerfectTexture","magFilter","msg","currentId","getDistance","num1","num2","binarySearchClosestInd","mid","binarySearchClosest","ind","binarySearchInd","binarySearch","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","copyProps","srcObject","dstObject","props","excludeProps","eventName","subscribe","listenersCount","Trend_1","TrendsManager_1","Viewport_1","InterpolatedViewport_1","AnimationManager_1","Easing_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","VIEWPORT_CHANGE","DRAG_STATE_CHAGED","PLUGINS_STATE_CHANGED","LIGHT_BLUE","prevState","ALL","scroll","NUMBER","grid","minSizePx","RELATIVE_END","animations","trendChangeSpeed","trendChangeEase","zoomSpeed","scrollSpeed","scrollEase","zoomEase","autoScrollSpeed","autoScrollEase","maxSegmentLength","minSegmentLengthInPx","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","inertialScroll","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","animationManager","AnimationManager","setAimationsEnabled","Viewport","computedData","getComputedData","savePrevState","InterpolatedViewport","onChange","onTrendChange","onTrendsChange","onDragStateChanged","onZoom","onViewportChange","tick","newState","eventData","silent","trendsData","trendOptions","newStateContainsData","currentStateData","newStateObj","changedProps","recalculateResult","recalculateState","emitChangedStateEvents","actualData","cursorOptions","isMouseDrag","oldX","currentX","currentScroll","deltaXVal","pxToValByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","maxXVal","getEndXVal","minXVal","getStartXVal","dragEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","viewportChangeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","changedTrends","newData","handleTrendsChange","dragState","onDragStateChangedHandler","animationOptions","isAnimationsEnabled","oldTrendsMaxX","trendsMaxXDelta","maxVisibleXVal","getRightVal","paddingRightVal","getValByViewportX","marginRightVal","scrollDelta","isDragMode","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getViewportYByVal","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","unbindList","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","unbind","tryToRebuildSegments","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","valToPxByXAxis","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","currentAnimationState","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","onSegmentsRebuilded","updateParams","scrollXVal","scrollYVal","valToPxByYAxis","zoomX","zoomY","getWorldXByVal","getWorldYByVal","getWorldXByViewportX","viewportX","getWorldYByViewportY","viewportY","getValByViewportY","getValByWorldX","worldX","getValByWorldY","worldY","pxToValByYAxis","getViewportXByVal","getViewportXByWorldX","pixelsCount","getTop","getRight","getBottom","getLeft","getTopVal","getBottomVal","getLeftVal","INTERPOLATION_EVENT","SCREEN_EVENTS","ZOOM_FRAME","SCROLL_FRAME","TRANSFORMATION_FRAME","TRANSFORMATION_EVENT","interpolationInProgress","setParams","onZoomInterpolation","onScrollInterpolation","onInterpolationEvent","cameraIsMoving","scrollXAnimation","isFinished","zoomXAnimation","hasActiveAnimations","scrollYAnimation","zoomYAnimation","interpolationStarted","interpolationFinished","STARTED","scrollEventNeeded","zoomEventNeeded","FINISHED","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","zoomXChanged","isAutoscroll","targetX","onTick","targetY","targetZoom","lastTickTime","timingFunction","Animation","animateObj","source","isEnabled","i_1","completeAndStop","createdTime","easing","progress","delay","setProgress","sourceObj","initialObj","sourceIteralable","targetObj","targetObject","initialIteralable","targetIteralable","onTickCb","onFinishCb","withDelay","initialVal","targetVal","unbindEvent","widgetName","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","onZoomFrame","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","rgbaStr","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","edgeOffset","segmentsCount","startVal","endVal","displayedValue","pxVal","textAlign","getDateStr","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","xLinesCount","yLinesCount","lineSegments","setZ","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","exec","numberToHexStr","colorStr","rgba","hexStr","getTransparent","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","onTransformationFrame","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","stateData","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","UniqCollectionItem","getId","_id","ID_KEY","CREATE","UPDATE","REMOVE","UniqCollection","models","models_1","model","getItemInd","justCreated","createInstance","prevProps","getItem","getLast","onCreate","onRemove","TrendsMarksWidget_1","TEXTURE_FILTER","AXIS_MARK_DEFAULT_OPTIONS","easeSpeed","textureFilter","onRender","DEFAULT_RENDERER","trendsMarksPluginOptions","rects","onMarksChangeHandler","getItems","markName","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","marks","TrendMark","createMarkRect","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","points","markInd","trendMarks","TrendsMarksWidget","LinearFilter","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","onViewportInterpolationEvent","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onScreenTransformationEventHandler","onZoomFrameHandler","trendMark","show","LINEAR","NEAREST","markMesh","updatePosition","posX","posY","trendMarkWidget","isTopSide","rgbaColor","centerX","centerY","textOffset","textPosX","textPosY","arc","lineEndY","PlaneBufferGeometry","ANIMATION_TIME","ANIMATION_DELAY","TrendBeacon","mesh","setInitialState","animationObject","trendsSegments","screenWidth","screenX","TrendLoading","deactivate","activate","restart","center","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen","AxisMarksWidget_1","textColor","AxisMark","axisMarkPlugin","newOptions","axisMarksPluginOptions","marksCollection","axisMarksOptions","AxisMarksWidget","axisMarksWidgets","axisMarksPlugin","createAxisMarkWidget","axisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","onResizeHandler","onStateChangeHandler","onMarkUpdateHandler","onMarkRemoveHandler","findIndex","resize","DEFAULT_AXIS_MARK_RENDERER","isStickOnBottom","isStickOnTop","frameValue","frameOpacity","needRender","screen","hasStickMode","opactity","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","ZonesWidget_1","ZONE_TYPE","ZONE_DEFAULT_OPTIONS","X_RANGE","bgColor","Zone","zonePlugin","pluginOptions","zoneOptions","ZonesWidget","zonesPlugin","createZoneWidget","ZoneWidget","updateZonesPositions","onZoneUpdateHandler","onZoneRemoveHandler","animatedProps","verts"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(42);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(45);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(47);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(49);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(51);\r\n\tvar ZonesPlugin_1 = __webpack_require__(53);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chartView;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_charts_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            xVal: val,\r\n\t            title: three_charts_1.Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\r\n\t            color: three_charts_1.Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\r\n\t            orientation: orientation,\r\n\t            // textureFilter: TEXTURE_FILTER.NEAREST,\r\n\t            userData: {\r\n\t                description: three_charts_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t                icon: three_charts_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t                descriptionColor: descriptionColor\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chartView = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 0, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000,\r\n\t                margin: { end: 200 },\r\n\t            },\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {}\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new ZonesPlugin_1.ZonesPlugin([]),\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] }),\r\n\t        new AxisMarksPlugin_1.AxisMarksPlugin([\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.startTime, name: 'test', title: 'DEADLINE', userData: { feel: 'aa' } },\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600' },\r\n\t            { axisType: three_charts_1.AXIS_TYPE.X, value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187' },\r\n\t        ])\r\n\t    ]);\r\n\t    var axisMarks = chartView.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t    var zones = chartView.chart.getPlugin(ZonesPlugin_1.ZonesPlugin.NAME);\r\n\t    setTimeout(function () {\r\n\t        var zone = zones.create({ position: { startXVal: dsMain.startTime, endXVal: dsMain.startTime + 5000 } });\r\n\t        var mark = axisMarks.createMark({ axisType: three_charts_1.AXIS_TYPE.Y, value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true });\r\n\t        setInterval(function () {\r\n\t            mark.update({ value: mark.value + 1 });\r\n\t            //zone.update({position: {startXVal: zone.position.startXVal + 1000}})\r\n\t        }, 1000);\r\n\t    }, 1000);\r\n\t    window['chartView'] = chartView;\r\n\t    var mainTrend = chartView.getTrend('main');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        if (markOptions)\r\n\t            setTimeout(function () {\r\n\t                var trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t                trendsMarks.createMark(markOptions);\r\n\t            }, 500);\r\n\t    });\r\n\t    var i = 0;\r\n\t    chartView.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chartView.getTrend('main').appendData([val]);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chartView.chart.setState({ autoScroll: false });\r\n\t            chartView.chart.zoomToRange(range);\r\n\t            chartView.chart.scrollToEnd().then(function () {\r\n\t                chartView.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Easing from tween.js lib https://github.com/tweenjs/tween.js\r\n\t **/\r\n\texports.EASING = {\r\n\t    Linear: {\r\n\t        None: function (k) {\r\n\t            return k;\r\n\t        }\r\n\t    },\r\n\t    Quadratic: {\r\n\t        In: function (k) {\r\n\t            return k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k * (2 - k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k;\r\n\t            }\r\n\t            return -0.5 * (--k * (k - 2) - 1);\r\n\t        }\r\n\t    },\r\n\t    Cubic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Quartic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return 1 - (--k * k * k * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k;\r\n\t            }\r\n\t            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n\t        }\r\n\t    },\r\n\t    Quintic: {\r\n\t        In: function (k) {\r\n\t            return k * k * k * k * k;\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return --k * k * k * k * k + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * k * k * k * k * k;\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n\t        }\r\n\t    },\r\n\t    Sinusoidal: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.cos(k * Math.PI / 2);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sin(k * Math.PI / 2);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n\t        }\r\n\t    },\r\n\t    Exponential: {\r\n\t        In: function (k) {\r\n\t            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * Math.pow(1024, k - 1);\r\n\t            }\r\n\t            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n\t        }\r\n\t    },\r\n\t    Circular: {\r\n\t        In: function (k) {\r\n\t            return 1 - Math.sqrt(1 - k * k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            return Math.sqrt(1 - (--k * k));\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if ((k *= 2) < 1) {\r\n\t                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\t            }\r\n\t            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n\t        }\r\n\t    },\r\n\t    Elastic: {\r\n\t        In: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k === 0) {\r\n\t                return 0;\r\n\t            }\r\n\t            if (k === 1) {\r\n\t                return 1;\r\n\t            }\r\n\t            k *= 2;\r\n\t            if (k < 1) {\r\n\t                return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\t            }\r\n\t            return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\t        }\r\n\t    },\r\n\t    Back: {\r\n\t        In: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return k * k * ((s + 1) * k - s);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            var s = 1.70158;\r\n\t            return --k * k * ((s + 1) * k + s) + 1;\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            var s = 1.70158 * 1.525;\r\n\t            if ((k *= 2) < 1) {\r\n\t                return 0.5 * (k * k * ((s + 1) * k - s));\r\n\t            }\r\n\t            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n\t        }\r\n\t    },\r\n\t    Bounce: {\r\n\t        In: function (k) {\r\n\t            return 1 - exports.EASING.Bounce.Out(1 - k);\r\n\t        },\r\n\t        Out: function (k) {\r\n\t            if (k < (1 / 2.75)) {\r\n\t                return 7.5625 * k * k;\r\n\t            }\r\n\t            else if (k < (2 / 2.75)) {\r\n\t                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n\t            }\r\n\t            else if (k < (2.5 / 2.75)) {\r\n\t                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\t            }\r\n\t            else {\r\n\t                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n\t            }\r\n\t        },\r\n\t        InOut: function (k) {\r\n\t            if (k < 0.5) {\r\n\t                return exports.EASING.Bounce.In(k * 2) * 0.5;\r\n\t            }\r\n\t            return exports.EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\r\n\t        }\r\n\t    }\r\n\t};\r\n\n\n/***/ },\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(41)\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __webpack_require__(2);\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(29));\n\t        __export(__webpack_require__(26));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(24));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(38));\n\t        __export(__webpack_require__(30));\n\t        __export(__webpack_require__(39));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(33));\n\t        __export(__webpack_require__(27));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(28));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(3);\n\t        __webpack_require__(4);\n\t        __webpack_require__(5);\n\t        exports.isPlainObject = __webpack_require__(6);\n\t        exports.EE2 = __webpack_require__(8);\n\t        var es6_promise_1 = __webpack_require__(9);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(10);\n\t        exports.deepExtend = __webpack_require__(11);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports) {\n\t        THREE.SpriteCanvasMaterial = function(parameters) {\n\t            THREE.Material.call(this);\n\t            this.type = \"SpriteCanvasMaterial\";\n\t            this.color = new THREE.Color(16777215);\n\t            this.program = function(context, color) {};\n\t            this.setValues(parameters);\n\t        };\n\t        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n\t        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n\t            var material = new THREE.SpriteCanvasMaterial();\n\t            material.copy(this);\n\t            material.color.copy(this.color);\n\t            material.program = this.program;\n\t            return material;\n\t        };\n\t        THREE.CanvasRenderer = function(parameters) {\n\t            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n\t            parameters = parameters || {};\n\t            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n\t                alpha: parameters.alpha === true\n\t            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n\t            if (_context.setLineDash === undefined) {\n\t                _context.setLineDash = function() {};\n\t            }\n\t            this.domElement = _canvas;\n\t            this.autoClear = true;\n\t            this.sortObjects = true;\n\t            this.sortElements = true;\n\t            this.info = {\n\t                render: {\n\t                    vertices: 0,\n\t                    faces: 0\n\t                }\n\t            };\n\t            this.supportsVertexTextures = function() {};\n\t            this.setFaceCulling = function() {};\n\t            this.getContext = function() {\n\t                return _context;\n\t            };\n\t            this.getContextAttributes = function() {\n\t                return _context.getContextAttributes();\n\t            };\n\t            this.getPixelRatio = function() {\n\t                return _pixelRatio;\n\t            };\n\t            this.setPixelRatio = function(value) {\n\t                if (value !== undefined) _pixelRatio = value;\n\t            };\n\t            this.setSize = function(width, height, updateStyle) {\n\t                _canvasWidth = width * _pixelRatio;\n\t                _canvasHeight = height * _pixelRatio;\n\t                _canvas.width = _canvasWidth;\n\t                _canvas.height = _canvasHeight;\n\t                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n\t                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n\t                if (updateStyle !== false) {\n\t                    _canvas.style.width = width + \"px\";\n\t                    _canvas.style.height = height + \"px\";\n\t                }\n\t                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _contextGlobalAlpha = 1;\n\t                _contextGlobalCompositeOperation = 0;\n\t                _contextStrokeStyle = null;\n\t                _contextFillStyle = null;\n\t                _contextLineWidth = null;\n\t                _contextLineCap = null;\n\t                _contextLineJoin = null;\n\t                this.setViewport(0, 0, width, height);\n\t            };\n\t            this.setViewport = function(x, y, width, height) {\n\t                _viewportX = x * _pixelRatio;\n\t                _viewportY = y * _pixelRatio;\n\t                _viewportWidth = width * _pixelRatio;\n\t                _viewportHeight = height * _pixelRatio;\n\t            };\n\t            this.setScissor = function() {};\n\t            this.setScissorTest = function() {};\n\t            this.setClearColor = function(color, alpha) {\n\t                _clearColor.set(color);\n\t                _clearAlpha = alpha !== undefined ? alpha : 1;\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t            };\n\t            this.setClearColorHex = function(hex, alpha) {\n\t                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n\t                this.setClearColor(hex, alpha);\n\t            };\n\t            this.getClearColor = function() {\n\t                return _clearColor;\n\t            };\n\t            this.getClearAlpha = function() {\n\t                return _clearAlpha;\n\t            };\n\t            this.getMaxAnisotropy = function() {\n\t                return 0;\n\t            };\n\t            this.clear = function() {\n\t                if (_clearBox.isEmpty() === false) {\n\t                    _clearBox.intersect(_clipBox);\n\t                    _clearBox.expandByScalar(2);\n\t                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n\t                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n\t                    if (_clearAlpha < 1) {\n\t                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    if (_clearAlpha > 0) {\n\t                        setBlending(THREE.NormalBlending);\n\t                        setOpacity(1);\n\t                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n\t                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    _clearBox.makeEmpty();\n\t                }\n\t            };\n\t            this.clearColor = function() {};\n\t            this.clearDepth = function() {};\n\t            this.clearStencil = function() {};\n\t            this.render = function(scene, camera) {\n\t                if (camera instanceof THREE.Camera === false) {\n\t                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n\t                    return;\n\t                }\n\t                if (this.autoClear === true) this.clear();\n\t                _this.info.render.vertices = 0;\n\t                _this.info.render.faces = 0;\n\t                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n\t                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n\t                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n\t                _elements = _renderData.elements;\n\t                _lights = _renderData.lights;\n\t                _camera = camera;\n\t                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\t                calculateLights();\n\t                for (var e = 0, el = _elements.length; e < el; e++) {\n\t                    var element = _elements[e];\n\t                    var material = element.material;\n\t                    if (material === undefined || material.opacity === 0) continue;\n\t                    _elemBox.makeEmpty();\n\t                    if (element instanceof THREE.RenderableSprite) {\n\t                        _v1 = element;\n\t                        _v1.x *= _canvasWidthHalf;\n\t                        _v1.y *= _canvasHeightHalf;\n\t                        renderSprite(_v1, element, material);\n\t                    } else if (element instanceof THREE.RenderableLine) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderLine(_v1, _v2, element, material);\n\t                        }\n\t                    } else if (element instanceof THREE.RenderableFace) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v3 = element.v3;\n\t                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n\t                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n\t                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _v3.positionScreen.x *= _canvasWidthHalf;\n\t                        _v3.positionScreen.y *= _canvasHeightHalf;\n\t                        if (material.overdraw > 0) {\n\t                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n\t                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n\t                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n\t                        }\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n\t                        }\n\t                    }\n\t                    _clearBox.union(_elemBox);\n\t                }\n\t                _context.setTransform(1, 0, 0, 1, 0, 0);\n\t            };\n\t            function calculateLights() {\n\t                _ambientLight.setRGB(0, 0, 0);\n\t                _directionalLights.setRGB(0, 0, 0);\n\t                _pointLights.setRGB(0, 0, 0);\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    var lightColor = light.color;\n\t                    if (light instanceof THREE.AmbientLight) {\n\t                        _ambientLight.add(lightColor);\n\t                    } else if (light instanceof THREE.DirectionalLight) {\n\t                        _directionalLights.add(lightColor);\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        _pointLights.add(lightColor);\n\t                    }\n\t                }\n\t            }\n\t            function calculateLight(position, normal, color) {\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    _lightColor.copy(light.color);\n\t                    if (light instanceof THREE.DirectionalLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\t                        var amount = normal.dot(lightPosition);\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\t                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n\t                        if (amount == 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    }\n\t                }\n\t            }\n\t            function renderSprite(v1, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                var scaleX = element.scale.x * _canvasWidthHalf;\n\t                var scaleY = element.scale.y * _canvasHeightHalf;\n\t                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n\t                _elemBox.min.set(v1.x - dist, v1.y - dist);\n\t                _elemBox.max.set(v1.x + dist, v1.y + dist);\n\t                if (material instanceof THREE.SpriteMaterial) {\n\t                    var texture = material.map;\n\t                    if (texture !== null) {\n\t                        var pattern = _patterns[texture.id];\n\t                        if (pattern === undefined || pattern.version !== texture.version) {\n\t                            pattern = textureToPattern(texture);\n\t                            _patterns[texture.id] = pattern;\n\t                        }\n\t                        if (pattern.canvas !== undefined) {\n\t                            setFillStyle(pattern.canvas);\n\t                            var bitmap = texture.image;\n\t                            var ox = bitmap.width * texture.offset.x;\n\t                            var oy = bitmap.height * texture.offset.y;\n\t                            var sx = bitmap.width * texture.repeat.x;\n\t                            var sy = bitmap.height * texture.repeat.y;\n\t                            var cx = scaleX / sx;\n\t                            var cy = scaleY / sy;\n\t                            _context.save();\n\t                            _context.translate(v1.x, v1.y);\n\t                            if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                            _context.translate(-scaleX / 2, -scaleY / 2);\n\t                            _context.scale(cx, cy);\n\t                            _context.translate(-ox, -oy);\n\t                            _context.fillRect(ox, oy, sx, sy);\n\t                            _context.restore();\n\t                        }\n\t                    } else {\n\t                        setFillStyle(material.color.getStyle());\n\t                        _context.save();\n\t                        _context.translate(v1.x, v1.y);\n\t                        if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                        _context.scale(scaleX, -scaleY);\n\t                        _context.fillRect(-.5, -.5, 1, 1);\n\t                        _context.restore();\n\t                    }\n\t                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setFillStyle(material.color.getStyle());\n\t                    _context.save();\n\t                    _context.translate(v1.x, v1.y);\n\t                    if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                    _context.scale(scaleX, scaleY);\n\t                    material.program(_context);\n\t                    _context.restore();\n\t                }\n\t            }\n\t            function renderLine(v1, v2, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _context.beginPath();\n\t                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n\t                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n\t                if (material instanceof THREE.LineBasicMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    if (material.vertexColors !== THREE.VertexColors) {\n\t                        setStrokeStyle(material.color.getStyle());\n\t                    } else {\n\t                        var colorStyle1 = element.vertexColors[0].getStyle();\n\t                        var colorStyle2 = element.vertexColors[1].getStyle();\n\t                        if (colorStyle1 === colorStyle2) {\n\t                            setStrokeStyle(colorStyle1);\n\t                        } else {\n\t                            try {\n\t                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n\t                                grad.addColorStop(0, colorStyle1);\n\t                                grad.addColorStop(1, colorStyle2);\n\t                            } catch (exception) {\n\t                                grad = colorStyle1;\n\t                            }\n\t                            setStrokeStyle(grad);\n\t                        }\n\t                    }\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                } else if (material instanceof THREE.LineDashedMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setLineDash([ material.dashSize, material.gapSize ]);\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                    setLineDash([]);\n\t                }\n\t            }\n\t            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n\t                _this.info.render.vertices += 3;\n\t                _this.info.render.faces++;\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _v1x = v1.positionScreen.x;\n\t                _v1y = v1.positionScreen.y;\n\t                _v2x = v2.positionScreen.x;\n\t                _v2y = v2.positionScreen.y;\n\t                _v3x = v3.positionScreen.x;\n\t                _v3y = v3.positionScreen.y;\n\t                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n\t                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n\t                    _diffuseColor.copy(material.color);\n\t                    _emissiveColor.copy(material.emissive);\n\t                    if (material.vertexColors === THREE.FaceColors) {\n\t                        _diffuseColor.multiply(element.color);\n\t                    }\n\t                    _color.copy(_ambientLight);\n\t                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\t                    calculateLight(_centroid, element.normalModel, _color);\n\t                    _color.multiply(_diffuseColor).add(_emissiveColor);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n\t                    if (material.map !== null) {\n\t                        var mapping = material.map.mapping;\n\t                        if (mapping === THREE.UVMapping) {\n\t                            _uvs = element.uvs;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n\t                        }\n\t                    } else if (material.envMap !== null) {\n\t                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n\t                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n\t                            _uv1x = .5 * _normal.x + .5;\n\t                            _uv1y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n\t                            _uv2x = .5 * _normal.x + .5;\n\t                            _uv2y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n\t                            _uv3x = .5 * _normal.x + .5;\n\t                            _uv3y = .5 * _normal.y + .5;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n\t                        }\n\t                    } else {\n\t                        _color.copy(material.color);\n\t                        if (material.vertexColors === THREE.FaceColors) {\n\t                            _color.multiply(element.color);\n\t                        }\n\t                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                    }\n\t                } else if (material instanceof THREE.MeshNormalMaterial) {\n\t                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n\t                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else {\n\t                    _color.setRGB(1, 1, 1);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                }\n\t            }\n\t            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n\t                _context.beginPath();\n\t                _context.moveTo(x0, y0);\n\t                _context.lineTo(x1, y1);\n\t                _context.lineTo(x2, y2);\n\t                _context.closePath();\n\t            }\n\t            function strokePath(color, linewidth, linecap, linejoin) {\n\t                setLineWidth(linewidth);\n\t                setLineCap(linecap);\n\t                setLineJoin(linejoin);\n\t                setStrokeStyle(color.getStyle());\n\t                _context.stroke();\n\t                _elemBox.expandByScalar(linewidth * 2);\n\t            }\n\t            function fillPath(color) {\n\t                setFillStyle(color.getStyle());\n\t                _context.fill();\n\t            }\n\t            function textureToPattern(texture) {\n\t                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: texture.version\n\t                    };\n\t                }\n\t                var image = texture.image;\n\t                if (image.complete === false) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: 0\n\t                    };\n\t                }\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = image.width;\n\t                canvas.height = image.height;\n\t                var context = canvas.getContext(\"2d\");\n\t                context.setTransform(1, 0, 0, -1, 0, image.height);\n\t                context.drawImage(image, 0, 0);\n\t                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t                var repeat = \"no-repeat\";\n\t                if (repeatX === true && repeatY === true) {\n\t                    repeat = \"repeat\";\n\t                } else if (repeatX === true) {\n\t                    repeat = \"repeat-x\";\n\t                } else if (repeatY === true) {\n\t                    repeat = \"repeat-y\";\n\t                }\n\t                var pattern = _context.createPattern(canvas, repeat);\n\t                if (texture.onUpdate) texture.onUpdate(texture);\n\t                return {\n\t                    canvas: pattern,\n\t                    version: texture.version\n\t                };\n\t            }\n\t            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n\t                var pattern = _patterns[texture.id];\n\t                if (pattern === undefined || pattern.version !== texture.version) {\n\t                    pattern = textureToPattern(texture);\n\t                    _patterns[texture.id] = pattern;\n\t                }\n\t                if (pattern.canvas !== undefined) {\n\t                    setFillStyle(pattern.canvas);\n\t                } else {\n\t                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n\t                    _context.fill();\n\t                    return;\n\t                }\n\t                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n\t                u0 = (u0 + offsetX) * width;\n\t                v0 = (v0 + offsetY) * height;\n\t                u1 = (u1 + offsetX) * width;\n\t                v1 = (v1 + offsetY) * height;\n\t                u2 = (u2 + offsetX) * width;\n\t                v2 = (v2 + offsetY) * height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                if (det === 0) return;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.fill();\n\t                _context.restore();\n\t            }\n\t            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n\t                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n\t                u0 *= width;\n\t                v0 *= height;\n\t                u1 *= width;\n\t                v1 *= height;\n\t                u2 *= width;\n\t                v2 *= height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.clip();\n\t                _context.drawImage(image, 0, 0);\n\t                _context.restore();\n\t            }\n\t            function expand(v1, v2, pixels) {\n\t                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n\t                if (det === 0) return;\n\t                idet = pixels / Math.sqrt(det);\n\t                x *= idet;\n\t                y *= idet;\n\t                v2.x += x;\n\t                v2.y += y;\n\t                v1.x -= x;\n\t                v1.y -= y;\n\t            }\n\t            function setOpacity(value) {\n\t                if (_contextGlobalAlpha !== value) {\n\t                    _context.globalAlpha = value;\n\t                    _contextGlobalAlpha = value;\n\t                }\n\t            }\n\t            function setBlending(value) {\n\t                if (_contextGlobalCompositeOperation !== value) {\n\t                    if (value === THREE.NormalBlending) {\n\t                        _context.globalCompositeOperation = \"source-over\";\n\t                    } else if (value === THREE.AdditiveBlending) {\n\t                        _context.globalCompositeOperation = \"lighter\";\n\t                    } else if (value === THREE.SubtractiveBlending) {\n\t                        _context.globalCompositeOperation = \"darker\";\n\t                    } else if (value === THREE.MultiplyBlending) {\n\t                        _context.globalCompositeOperation = \"multiply\";\n\t                    }\n\t                    _contextGlobalCompositeOperation = value;\n\t                }\n\t            }\n\t            function setLineWidth(value) {\n\t                if (_contextLineWidth !== value) {\n\t                    _context.lineWidth = value;\n\t                    _contextLineWidth = value;\n\t                }\n\t            }\n\t            function setLineCap(value) {\n\t                if (_contextLineCap !== value) {\n\t                    _context.lineCap = value;\n\t                    _contextLineCap = value;\n\t                }\n\t            }\n\t            function setLineJoin(value) {\n\t                if (_contextLineJoin !== value) {\n\t                    _context.lineJoin = value;\n\t                    _contextLineJoin = value;\n\t                }\n\t            }\n\t            function setStrokeStyle(value) {\n\t                if (_contextStrokeStyle !== value) {\n\t                    _context.strokeStyle = value;\n\t                    _contextStrokeStyle = value;\n\t                }\n\t            }\n\t            function setFillStyle(value) {\n\t                if (_contextFillStyle !== value) {\n\t                    _context.fillStyle = value;\n\t                    _contextFillStyle = value;\n\t                }\n\t            }\n\t            function setLineDash(value) {\n\t                if (_contextLineDash.length !== value.length) {\n\t                    _context.setLineDash(value);\n\t                    _contextLineDash = value;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        THREE.RenderableObject = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableFace = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.v3 = new THREE.RenderableVertex();\n\t            this.normalModel = new THREE.Vector3();\n\t            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t            this.vertexNormalsLength = 0;\n\t            this.color = new THREE.Color();\n\t            this.material = null;\n\t            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableVertex = function() {\n\t            this.position = new THREE.Vector3();\n\t            this.positionWorld = new THREE.Vector3();\n\t            this.positionScreen = new THREE.Vector4();\n\t            this.visible = true;\n\t        };\n\t        THREE.RenderableVertex.prototype.copy = function(vertex) {\n\t            this.positionWorld.copy(vertex.positionWorld);\n\t            this.positionScreen.copy(vertex.positionScreen);\n\t        };\n\t        THREE.RenderableLine = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t            this.material = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableSprite = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.x = 0;\n\t            this.y = 0;\n\t            this.z = 0;\n\t            this.rotation = 0;\n\t            this.scale = new THREE.Vector2();\n\t            this.material = null;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.Projector = function() {\n\t            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n\t                objects: [],\n\t                lights: [],\n\t                elements: []\n\t            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3((-1), (-1), (-1)), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n\t            this.projectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n\t                vector.project(camera);\n\t            };\n\t            this.unprojectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n\t                vector.unproject(camera);\n\t            };\n\t            this.pickingRay = function(vector, camera) {\n\t                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n\t            };\n\t            var RenderList = function() {\n\t                var normals = [];\n\t                var uvs = [];\n\t                var object = null;\n\t                var material = null;\n\t                var normalMatrix = new THREE.Matrix3();\n\t                function setObject(value) {\n\t                    object = value;\n\t                    material = object.material;\n\t                    normalMatrix.getNormalMatrix(object.matrixWorld);\n\t                    normals.length = 0;\n\t                    uvs.length = 0;\n\t                }\n\t                function projectVertex(vertex) {\n\t                    var position = vertex.position;\n\t                    var positionWorld = vertex.positionWorld;\n\t                    var positionScreen = vertex.positionScreen;\n\t                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n\t                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n\t                    var invW = 1 / positionScreen.w;\n\t                    positionScreen.x *= invW;\n\t                    positionScreen.y *= invW;\n\t                    positionScreen.z *= invW;\n\t                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n\t                }\n\t                function pushVertex(x, y, z) {\n\t                    _vertex = getNextVertexInPool();\n\t                    _vertex.position.set(x, y, z);\n\t                    projectVertex(_vertex);\n\t                }\n\t                function pushNormal(x, y, z) {\n\t                    normals.push(x, y, z);\n\t                }\n\t                function pushUv(x, y) {\n\t                    uvs.push(x, y);\n\t                }\n\t                function checkTriangleVisibility(v1, v2, v3) {\n\t                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n\t                    _points3[0] = v1.positionScreen;\n\t                    _points3[1] = v2.positionScreen;\n\t                    _points3[2] = v3.positionScreen;\n\t                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n\t                }\n\t                function checkBackfaceCulling(v1, v2, v3) {\n\t                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n\t                }\n\t                function pushLine(a, b) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    _line = getNextLineInPool();\n\t                    _line.id = object.id;\n\t                    _line.v1.copy(v1);\n\t                    _line.v2.copy(v2);\n\t                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n\t                    _line.renderOrder = object.renderOrder;\n\t                    _line.material = object.material;\n\t                    _renderData.elements.push(_line);\n\t                }\n\t                function pushTriangle(a, b, c) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    var v3 = _vertexPool[c];\n\t                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n\t                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n\t                        _face = getNextFaceInPool();\n\t                        _face.id = object.id;\n\t                        _face.v1.copy(v1);\n\t                        _face.v2.copy(v2);\n\t                        _face.v3.copy(v3);\n\t                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                        _face.renderOrder = object.renderOrder;\n\t                        _face.normalModel.fromArray(normals, a * 3);\n\t                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n\t                        for (var i = 0; i < 3; i++) {\n\t                            var normal = _face.vertexNormalsModel[i];\n\t                            normal.fromArray(normals, arguments[i] * 3);\n\t                            normal.applyMatrix3(normalMatrix).normalize();\n\t                            var uv = _face.uvs[i];\n\t                            uv.fromArray(uvs, arguments[i] * 2);\n\t                        }\n\t                        _face.vertexNormalsLength = 3;\n\t                        _face.material = object.material;\n\t                        _renderData.elements.push(_face);\n\t                    }\n\t                }\n\t                return {\n\t                    setObject: setObject,\n\t                    projectVertex: projectVertex,\n\t                    checkTriangleVisibility: checkTriangleVisibility,\n\t                    checkBackfaceCulling: checkBackfaceCulling,\n\t                    pushVertex: pushVertex,\n\t                    pushNormal: pushNormal,\n\t                    pushUv: pushUv,\n\t                    pushLine: pushLine,\n\t                    pushTriangle: pushTriangle\n\t                };\n\t            };\n\t            var renderList = new RenderList();\n\t            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n\t                _faceCount = 0;\n\t                _lineCount = 0;\n\t                _spriteCount = 0;\n\t                _renderData.elements.length = 0;\n\t                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n\t                if (camera.parent === null) camera.updateMatrixWorld();\n\t                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n\t                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\t                _frustum.setFromMatrix(_viewProjectionMatrix);\n\t                _objectCount = 0;\n\t                _renderData.objects.length = 0;\n\t                _renderData.lights.length = 0;\n\t                function addObject(object) {\n\t                    _object = getNextObjectInPool();\n\t                    _object.id = object.id;\n\t                    _object.object = object;\n\t                    _vector3.setFromMatrixPosition(object.matrixWorld);\n\t                    _vector3.applyProjection(_viewProjectionMatrix);\n\t                    _object.z = _vector3.z;\n\t                    _object.renderOrder = object.renderOrder;\n\t                    _renderData.objects.push(_object);\n\t                }\n\t                scene.traverseVisible(function(object) {\n\t                    if (object instanceof THREE.Light) {\n\t                        _renderData.lights.push(object);\n\t                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line) {\n\t                        if (object.material.visible === false) return;\n\t                        if (object.frustumCulled === true && _frustum.intersectsObject(object) === false) return;\n\t                        addObject(object);\n\t                    } else if (object instanceof THREE.Sprite) {\n\t                        if (object.material.visible === false) return;\n\t                        if (object.frustumCulled === true && _frustum.intersectsSprite(object) === false) return;\n\t                        addObject(object);\n\t                    }\n\t                });\n\t                if (sortObjects === true) {\n\t                    _renderData.objects.sort(painterSort);\n\t                }\n\t                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n\t                    var object = _renderData.objects[o].object;\n\t                    var geometry = object.geometry;\n\t                    renderList.setObject(object);\n\t                    _modelMatrix = object.matrixWorld;\n\t                    _vertexCount = 0;\n\t                    if (object instanceof THREE.Mesh) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            var groups = geometry.groups;\n\t                            if (attributes.position === undefined) continue;\n\t                            var positions = attributes.position.array;\n\t                            for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                            }\n\t                            if (attributes.normal !== undefined) {\n\t                                var normals = attributes.normal.array;\n\t                                for (var i = 0, l = normals.length; i < l; i += 3) {\n\t                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n\t                                }\n\t                            }\n\t                            if (attributes.uv !== undefined) {\n\t                                var uvs = attributes.uv.array;\n\t                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n\t                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n\t                                }\n\t                            }\n\t                            if (geometry.index !== null) {\n\t                                var indices = geometry.index.array;\n\t                                if (groups.length > 0) {\n\t                                    for (var o = 0; o < groups.length; o++) {\n\t                                        var group = groups[o];\n\t                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n\t                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n\t                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n\t                                    renderList.pushTriangle(i, i + 1, i + 2);\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            var vertices = geometry.vertices;\n\t                            var faces = geometry.faces;\n\t                            var faceVertexUvs = geometry.faceVertexUvs[0];\n\t                            _normalMatrix.getNormalMatrix(_modelMatrix);\n\t                            var material = object.material;\n\t                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n\t                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n\t                                var vertex = vertices[v];\n\t                                _vector3.copy(vertex);\n\t                                if (material.morphTargets === true) {\n\t                                    var morphTargets = geometry.morphTargets;\n\t                                    var morphInfluences = object.morphTargetInfluences;\n\t                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n\t                                        var influence = morphInfluences[t];\n\t                                        if (influence === 0) continue;\n\t                                        var target = morphTargets[t];\n\t                                        var targetVertex = target.vertices[v];\n\t                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n\t                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n\t                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n\t                                    }\n\t                                }\n\t                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n\t                            }\n\t                            for (var f = 0, fl = faces.length; f < fl; f++) {\n\t                                var face = faces[f];\n\t                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n\t                                if (material === undefined) continue;\n\t                                var side = material.side;\n\t                                var v1 = _vertexPool[face.a];\n\t                                var v2 = _vertexPool[face.b];\n\t                                var v3 = _vertexPool[face.c];\n\t                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n\t                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n\t                                if (side !== THREE.DoubleSide) {\n\t                                    if (side === THREE.FrontSide && visible === false) continue;\n\t                                    if (side === THREE.BackSide && visible === true) continue;\n\t                                }\n\t                                _face = getNextFaceInPool();\n\t                                _face.id = object.id;\n\t                                _face.v1.copy(v1);\n\t                                _face.v2.copy(v2);\n\t                                _face.v3.copy(v3);\n\t                                _face.normalModel.copy(face.normal);\n\t                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                    _face.normalModel.negate();\n\t                                }\n\t                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                var faceVertexNormals = face.vertexNormals;\n\t                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n\t                                    var normalModel = _face.vertexNormalsModel[n];\n\t                                    normalModel.copy(faceVertexNormals[n]);\n\t                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                        normalModel.negate();\n\t                                    }\n\t                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                }\n\t                                _face.vertexNormalsLength = faceVertexNormals.length;\n\t                                var vertexUvs = faceVertexUvs[f];\n\t                                if (vertexUvs !== undefined) {\n\t                                    for (var u = 0; u < 3; u++) {\n\t                                        _face.uvs[u].copy(vertexUvs[u]);\n\t                                    }\n\t                                }\n\t                                _face.color = face.color;\n\t                                _face.material = material;\n\t                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                                _face.renderOrder = object.renderOrder;\n\t                                _renderData.elements.push(_face);\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Line) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            if (attributes.position !== undefined) {\n\t                                var positions = attributes.position.array;\n\t                                for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                                }\n\t                                if (geometry.index !== null) {\n\t                                    var indices = geometry.index.array;\n\t                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n\t                                        renderList.pushLine(indices[i], indices[i + 1]);\n\t                                    }\n\t                                } else {\n\t                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n\t                                        renderList.pushLine(i, i + 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n\t                            var vertices = object.geometry.vertices;\n\t                            if (vertices.length === 0) continue;\n\t                            v1 = getNextVertexInPool();\n\t                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n\t                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n\t                                v1 = getNextVertexInPool();\n\t                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n\t                                if ((v + 1) % step > 0) continue;\n\t                                v2 = _vertexPool[_vertexCount - 2];\n\t                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n\t                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n\t                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n\t                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n\t                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n\t                                    _line = getNextLineInPool();\n\t                                    _line.id = object.id;\n\t                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n\t                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n\t                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n\t                                    _line.renderOrder = object.renderOrder;\n\t                                    _line.material = object.material;\n\t                                    if (object.material.vertexColors === THREE.VertexColors) {\n\t                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n\t                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n\t                                    }\n\t                                    _renderData.elements.push(_line);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Sprite) {\n\t                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n\t                        _vector4.applyMatrix4(_viewProjectionMatrix);\n\t                        var invW = 1 / _vector4.w;\n\t                        _vector4.z *= invW;\n\t                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n\t                            _sprite = getNextSpriteInPool();\n\t                            _sprite.id = object.id;\n\t                            _sprite.x = _vector4.x * invW;\n\t                            _sprite.y = _vector4.y * invW;\n\t                            _sprite.z = _vector4.z;\n\t                            _sprite.renderOrder = object.renderOrder;\n\t                            _sprite.object = object;\n\t                            _sprite.rotation = object.rotation;\n\t                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n\t                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n\t                            _sprite.material = object.material;\n\t                            _renderData.elements.push(_sprite);\n\t                        }\n\t                    }\n\t                }\n\t                if (sortElements === true) {\n\t                    _renderData.elements.sort(painterSort);\n\t                }\n\t                return _renderData;\n\t            };\n\t            function getNextObjectInPool() {\n\t                if (_objectCount === _objectPoolLength) {\n\t                    var object = new THREE.RenderableObject();\n\t                    _objectPool.push(object);\n\t                    _objectPoolLength++;\n\t                    _objectCount++;\n\t                    return object;\n\t                }\n\t                return _objectPool[_objectCount++];\n\t            }\n\t            function getNextVertexInPool() {\n\t                if (_vertexCount === _vertexPoolLength) {\n\t                    var vertex = new THREE.RenderableVertex();\n\t                    _vertexPool.push(vertex);\n\t                    _vertexPoolLength++;\n\t                    _vertexCount++;\n\t                    return vertex;\n\t                }\n\t                return _vertexPool[_vertexCount++];\n\t            }\n\t            function getNextFaceInPool() {\n\t                if (_faceCount === _facePoolLength) {\n\t                    var face = new THREE.RenderableFace();\n\t                    _facePool.push(face);\n\t                    _facePoolLength++;\n\t                    _faceCount++;\n\t                    return face;\n\t                }\n\t                return _facePool[_faceCount++];\n\t            }\n\t            function getNextLineInPool() {\n\t                if (_lineCount === _linePoolLength) {\n\t                    var line = new THREE.RenderableLine();\n\t                    _linePool.push(line);\n\t                    _linePoolLength++;\n\t                    _lineCount++;\n\t                    return line;\n\t                }\n\t                return _linePool[_lineCount++];\n\t            }\n\t            function getNextSpriteInPool() {\n\t                if (_spriteCount === _spritePoolLength) {\n\t                    var sprite = new THREE.RenderableSprite();\n\t                    _spritePool.push(sprite);\n\t                    _spritePoolLength++;\n\t                    _spriteCount++;\n\t                    return sprite;\n\t                }\n\t                return _spritePool[_spriteCount++];\n\t            }\n\t            function painterSort(a, b) {\n\t                if (a.renderOrder !== b.renderOrder) {\n\t                    return a.renderOrder - b.renderOrder;\n\t                } else if (a.z !== b.z) {\n\t                    return b.z - a.z;\n\t                } else if (a.id !== b.id) {\n\t                    return a.id - b.id;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            }\n\t            function clipLine(s1, s2) {\n\t                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n\t                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n\t                    return true;\n\t                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n\t                    return false;\n\t                } else {\n\t                    if (bc1near < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n\t                    } else if (bc2near < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n\t                    }\n\t                    if (bc1far < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n\t                    } else if (bc2far < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n\t                    }\n\t                    if (alpha2 < alpha1) {\n\t                        return false;\n\t                    } else {\n\t                        s1.lerp(s2, alpha1);\n\t                        s2.lerp(s1, 1 - alpha2);\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(7);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        (function(Buffer) {\n\t            /*!\n\t\t * @description Recursive object extending\n\t\t * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n\t\t * @license MIT\n\t\t *\n\t\t * The MIT License (MIT)\n\t\t *\n\t\t * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n\t\t *\n\t\t * Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t\t * this software and associated documentation files (the \"Software\"), to deal in\n\t\t * the Software without restriction, including without limitation the rights to\n\t\t * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n\t\t * the Software, and to permit persons to whom the Software is furnished to do so,\n\t\t * subject to the following conditions:\n\t\t *\n\t\t * The above copyright notice and this permission notice shall be included in all\n\t\t * copies or substantial portions of the Software.\n\t\t *\n\t\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\t\t * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\t\t * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n\t\t * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t\t * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\t */\n\t            \"use strict\";\n\t            function isSpecificValue(val) {\n\t                return val instanceof Buffer || val instanceof Date || val instanceof RegExp ? true : false;\n\t            }\n\t            function cloneSpecificValue(val) {\n\t                if (val instanceof Buffer) {\n\t                    var x = new Buffer(val.length);\n\t                    val.copy(x);\n\t                    return x;\n\t                } else if (val instanceof Date) {\n\t                    return new Date(val.getTime());\n\t                } else if (val instanceof RegExp) {\n\t                    return new RegExp(val);\n\t                } else {\n\t                    throw new Error(\"Unexpected situation\");\n\t                }\n\t            }\n\t            function deepCloneArray(arr) {\n\t                var clone = [];\n\t                arr.forEach(function(item, index) {\n\t                    if (typeof item === \"object\" && item !== null) {\n\t                        if (Array.isArray(item)) {\n\t                            clone[index] = deepCloneArray(item);\n\t                        } else if (isSpecificValue(item)) {\n\t                            clone[index] = cloneSpecificValue(item);\n\t                        } else {\n\t                            clone[index] = deepExtend({}, item);\n\t                        }\n\t                    } else {\n\t                        clone[index] = item;\n\t                    }\n\t                });\n\t                return clone;\n\t            }\n\t            var deepExtend = module.exports = function() {\n\t                if (arguments.length < 1 || typeof arguments[0] !== \"object\") {\n\t                    return false;\n\t                }\n\t                if (arguments.length < 2) {\n\t                    return arguments[0];\n\t                }\n\t                var target = arguments[0];\n\t                var args = Array.prototype.slice.call(arguments, 1);\n\t                var val, src, clone;\n\t                args.forEach(function(obj) {\n\t                    if (typeof obj !== \"object\" || Array.isArray(obj)) {\n\t                        return;\n\t                    }\n\t                    Object.keys(obj).forEach(function(key) {\n\t                        src = target[key];\n\t                        val = obj[key];\n\t                        if (val === target) {\n\t                            return;\n\t                        } else if (typeof val !== \"object\" || val === null) {\n\t                            target[key] = val;\n\t                            return;\n\t                        } else if (Array.isArray(val)) {\n\t                            target[key] = deepCloneArray(val);\n\t                            return;\n\t                        } else if (isSpecificValue(val)) {\n\t                            target[key] = cloneSpecificValue(val);\n\t                            return;\n\t                        } else if (typeof src !== \"object\" || src === null || Array.isArray(src)) {\n\t                            target[key] = deepExtend({}, val);\n\t                            return;\n\t                        } else {\n\t                            target[key] = deepExtend(src, val);\n\t                            return;\n\t                        }\n\t                    });\n\t                });\n\t                return target;\n\t            };\n\t        }).call(exports, __webpack_require__(12).Buffer);\n\t    }, function(module, exports, __webpack_require__) {\n\t        (function(Buffer, global) {\n\t            /*!\n\t\t * The buffer module from node.js, for the browser.\n\t\t *\n\t\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t\t * @license  MIT\n\t\t */\n\t            \"use strict\";\n\t            var base64 = __webpack_require__(13);\n\t            var ieee754 = __webpack_require__(14);\n\t            var isArray = __webpack_require__(15);\n\t            exports.Buffer = Buffer;\n\t            exports.SlowBuffer = SlowBuffer;\n\t            exports.INSPECT_MAX_BYTES = 50;\n\t            Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n\t            exports.kMaxLength = kMaxLength();\n\t            function typedArraySupport() {\n\t                try {\n\t                    var arr = new Uint8Array(1);\n\t                    arr.__proto__ = {\n\t                        __proto__: Uint8Array.prototype,\n\t                        foo: function() {\n\t                            return 42;\n\t                        }\n\t                    };\n\t                    return arr.foo() === 42 && typeof arr.subarray === \"function\" && arr.subarray(1, 1).byteLength === 0;\n\t                } catch (e) {\n\t                    return false;\n\t                }\n\t            }\n\t            function kMaxLength() {\n\t                return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;\n\t            }\n\t            function createBuffer(that, length) {\n\t                if (kMaxLength() < length) {\n\t                    throw new RangeError(\"Invalid typed array length\");\n\t                }\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    that = new Uint8Array(length);\n\t                    that.__proto__ = Buffer.prototype;\n\t                } else {\n\t                    if (that === null) {\n\t                        that = new Buffer(length);\n\t                    }\n\t                    that.length = length;\n\t                }\n\t                return that;\n\t            }\n\t            function Buffer(arg, encodingOrOffset, length) {\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t                    return new Buffer(arg, encodingOrOffset, length);\n\t                }\n\t                if (typeof arg === \"number\") {\n\t                    if (typeof encodingOrOffset === \"string\") {\n\t                        throw new Error(\"If encoding is specified then the first argument must be a string\");\n\t                    }\n\t                    return allocUnsafe(this, arg);\n\t                }\n\t                return from(this, arg, encodingOrOffset, length);\n\t            }\n\t            Buffer.poolSize = 8192;\n\t            Buffer._augment = function(arr) {\n\t                arr.__proto__ = Buffer.prototype;\n\t                return arr;\n\t            };\n\t            function from(that, value, encodingOrOffset, length) {\n\t                if (typeof value === \"number\") {\n\t                    throw new TypeError('\"value\" argument must not be a number');\n\t                }\n\t                if (typeof ArrayBuffer !== \"undefined\" && value instanceof ArrayBuffer) {\n\t                    return fromArrayBuffer(that, value, encodingOrOffset, length);\n\t                }\n\t                if (typeof value === \"string\") {\n\t                    return fromString(that, value, encodingOrOffset);\n\t                }\n\t                return fromObject(that, value);\n\t            }\n\t            Buffer.from = function(value, encodingOrOffset, length) {\n\t                return from(null, value, encodingOrOffset, length);\n\t            };\n\t            if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                Buffer.prototype.__proto__ = Uint8Array.prototype;\n\t                Buffer.__proto__ = Uint8Array;\n\t                if (typeof Symbol !== \"undefined\" && Symbol.species && Buffer[Symbol.species] === Buffer) {\n\t                    Object.defineProperty(Buffer, Symbol.species, {\n\t                        value: null,\n\t                        configurable: true\n\t                    });\n\t                }\n\t            }\n\t            function assertSize(size) {\n\t                if (typeof size !== \"number\") {\n\t                    throw new TypeError('\"size\" argument must be a number');\n\t                } else if (size < 0) {\n\t                    throw new RangeError('\"size\" argument must not be negative');\n\t                }\n\t            }\n\t            function alloc(that, size, fill, encoding) {\n\t                assertSize(size);\n\t                if (size <= 0) {\n\t                    return createBuffer(that, size);\n\t                }\n\t                if (fill !== undefined) {\n\t                    return typeof encoding === \"string\" ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n\t                }\n\t                return createBuffer(that, size);\n\t            }\n\t            Buffer.alloc = function(size, fill, encoding) {\n\t                return alloc(null, size, fill, encoding);\n\t            };\n\t            function allocUnsafe(that, size) {\n\t                assertSize(size);\n\t                that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    for (var i = 0; i < size; ++i) {\n\t                        that[i] = 0;\n\t                    }\n\t                }\n\t                return that;\n\t            }\n\t            Buffer.allocUnsafe = function(size) {\n\t                return allocUnsafe(null, size);\n\t            };\n\t            Buffer.allocUnsafeSlow = function(size) {\n\t                return allocUnsafe(null, size);\n\t            };\n\t            function fromString(that, string, encoding) {\n\t                if (typeof encoding !== \"string\" || encoding === \"\") {\n\t                    encoding = \"utf8\";\n\t                }\n\t                if (!Buffer.isEncoding(encoding)) {\n\t                    throw new TypeError('\"encoding\" must be a valid string encoding');\n\t                }\n\t                var length = byteLength(string, encoding) | 0;\n\t                that = createBuffer(that, length);\n\t                var actual = that.write(string, encoding);\n\t                if (actual !== length) {\n\t                    that = that.slice(0, actual);\n\t                }\n\t                return that;\n\t            }\n\t            function fromArrayLike(that, array) {\n\t                var length = array.length < 0 ? 0 : checked(array.length) | 0;\n\t                that = createBuffer(that, length);\n\t                for (var i = 0; i < length; i += 1) {\n\t                    that[i] = array[i] & 255;\n\t                }\n\t                return that;\n\t            }\n\t            function fromArrayBuffer(that, array, byteOffset, length) {\n\t                array.byteLength;\n\t                if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t                    throw new RangeError(\"'offset' is out of bounds\");\n\t                }\n\t                if (array.byteLength < byteOffset + (length || 0)) {\n\t                    throw new RangeError(\"'length' is out of bounds\");\n\t                }\n\t                if (byteOffset === undefined && length === undefined) {\n\t                    array = new Uint8Array(array);\n\t                } else if (length === undefined) {\n\t                    array = new Uint8Array(array, byteOffset);\n\t                } else {\n\t                    array = new Uint8Array(array, byteOffset, length);\n\t                }\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    that = array;\n\t                    that.__proto__ = Buffer.prototype;\n\t                } else {\n\t                    that = fromArrayLike(that, array);\n\t                }\n\t                return that;\n\t            }\n\t            function fromObject(that, obj) {\n\t                if (Buffer.isBuffer(obj)) {\n\t                    var len = checked(obj.length) | 0;\n\t                    that = createBuffer(that, len);\n\t                    if (that.length === 0) {\n\t                        return that;\n\t                    }\n\t                    obj.copy(that, 0, 0, len);\n\t                    return that;\n\t                }\n\t                if (obj) {\n\t                    if (typeof ArrayBuffer !== \"undefined\" && obj.buffer instanceof ArrayBuffer || \"length\" in obj) {\n\t                        if (typeof obj.length !== \"number\" || isnan(obj.length)) {\n\t                            return createBuffer(that, 0);\n\t                        }\n\t                        return fromArrayLike(that, obj);\n\t                    }\n\t                    if (obj.type === \"Buffer\" && isArray(obj.data)) {\n\t                        return fromArrayLike(that, obj.data);\n\t                    }\n\t                }\n\t                throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n\t            }\n\t            function checked(length) {\n\t                if (length >= kMaxLength()) {\n\t                    throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + kMaxLength().toString(16) + \" bytes\");\n\t                }\n\t                return length | 0;\n\t            }\n\t            function SlowBuffer(length) {\n\t                if (+length != length) {\n\t                    length = 0;\n\t                }\n\t                return Buffer.alloc(+length);\n\t            }\n\t            Buffer.isBuffer = function isBuffer(b) {\n\t                return !!(b != null && b._isBuffer);\n\t            };\n\t            Buffer.compare = function compare(a, b) {\n\t                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t                    throw new TypeError(\"Arguments must be Buffers\");\n\t                }\n\t                if (a === b) return 0;\n\t                var x = a.length;\n\t                var y = b.length;\n\t                for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t                    if (a[i] !== b[i]) {\n\t                        x = a[i];\n\t                        y = b[i];\n\t                        break;\n\t                    }\n\t                }\n\t                if (x < y) return -1;\n\t                if (y < x) return 1;\n\t                return 0;\n\t            };\n\t            Buffer.isEncoding = function isEncoding(encoding) {\n\t                switch (String(encoding).toLowerCase()) {\n\t                  case \"hex\":\n\t                  case \"utf8\":\n\t                  case \"utf-8\":\n\t                  case \"ascii\":\n\t                  case \"latin1\":\n\t                  case \"binary\":\n\t                  case \"base64\":\n\t                  case \"ucs2\":\n\t                  case \"ucs-2\":\n\t                  case \"utf16le\":\n\t                  case \"utf-16le\":\n\t                    return true;\n\t\n\t                  default:\n\t                    return false;\n\t                }\n\t            };\n\t            Buffer.concat = function concat(list, length) {\n\t                if (!isArray(list)) {\n\t                    throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t                }\n\t                if (list.length === 0) {\n\t                    return Buffer.alloc(0);\n\t                }\n\t                var i;\n\t                if (length === undefined) {\n\t                    length = 0;\n\t                    for (i = 0; i < list.length; ++i) {\n\t                        length += list[i].length;\n\t                    }\n\t                }\n\t                var buffer = Buffer.allocUnsafe(length);\n\t                var pos = 0;\n\t                for (i = 0; i < list.length; ++i) {\n\t                    var buf = list[i];\n\t                    if (!Buffer.isBuffer(buf)) {\n\t                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n\t                    }\n\t                    buf.copy(buffer, pos);\n\t                    pos += buf.length;\n\t                }\n\t                return buffer;\n\t            };\n\t            function byteLength(string, encoding) {\n\t                if (Buffer.isBuffer(string)) {\n\t                    return string.length;\n\t                }\n\t                if (typeof ArrayBuffer !== \"undefined\" && typeof ArrayBuffer.isView === \"function\" && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t                    return string.byteLength;\n\t                }\n\t                if (typeof string !== \"string\") {\n\t                    string = \"\" + string;\n\t                }\n\t                var len = string.length;\n\t                if (len === 0) return 0;\n\t                var loweredCase = false;\n\t                for (;;) {\n\t                    switch (encoding) {\n\t                      case \"ascii\":\n\t                      case \"latin1\":\n\t                      case \"binary\":\n\t                        return len;\n\t\n\t                      case \"utf8\":\n\t                      case \"utf-8\":\n\t                      case undefined:\n\t                        return utf8ToBytes(string).length;\n\t\n\t                      case \"ucs2\":\n\t                      case \"ucs-2\":\n\t                      case \"utf16le\":\n\t                      case \"utf-16le\":\n\t                        return len * 2;\n\t\n\t                      case \"hex\":\n\t                        return len >>> 1;\n\t\n\t                      case \"base64\":\n\t                        return base64ToBytes(string).length;\n\t\n\t                      default:\n\t                        if (loweredCase) return utf8ToBytes(string).length;\n\t                        encoding = (\"\" + encoding).toLowerCase();\n\t                        loweredCase = true;\n\t                    }\n\t                }\n\t            }\n\t            Buffer.byteLength = byteLength;\n\t            function slowToString(encoding, start, end) {\n\t                var loweredCase = false;\n\t                if (start === undefined || start < 0) {\n\t                    start = 0;\n\t                }\n\t                if (start > this.length) {\n\t                    return \"\";\n\t                }\n\t                if (end === undefined || end > this.length) {\n\t                    end = this.length;\n\t                }\n\t                if (end <= 0) {\n\t                    return \"\";\n\t                }\n\t                end >>>= 0;\n\t                start >>>= 0;\n\t                if (end <= start) {\n\t                    return \"\";\n\t                }\n\t                if (!encoding) encoding = \"utf8\";\n\t                while (true) {\n\t                    switch (encoding) {\n\t                      case \"hex\":\n\t                        return hexSlice(this, start, end);\n\t\n\t                      case \"utf8\":\n\t                      case \"utf-8\":\n\t                        return utf8Slice(this, start, end);\n\t\n\t                      case \"ascii\":\n\t                        return asciiSlice(this, start, end);\n\t\n\t                      case \"latin1\":\n\t                      case \"binary\":\n\t                        return latin1Slice(this, start, end);\n\t\n\t                      case \"base64\":\n\t                        return base64Slice(this, start, end);\n\t\n\t                      case \"ucs2\":\n\t                      case \"ucs-2\":\n\t                      case \"utf16le\":\n\t                      case \"utf-16le\":\n\t                        return utf16leSlice(this, start, end);\n\t\n\t                      default:\n\t                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n\t                        encoding = (encoding + \"\").toLowerCase();\n\t                        loweredCase = true;\n\t                    }\n\t                }\n\t            }\n\t            Buffer.prototype._isBuffer = true;\n\t            function swap(b, n, m) {\n\t                var i = b[n];\n\t                b[n] = b[m];\n\t                b[m] = i;\n\t            }\n\t            Buffer.prototype.swap16 = function swap16() {\n\t                var len = this.length;\n\t                if (len % 2 !== 0) {\n\t                    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n\t                }\n\t                for (var i = 0; i < len; i += 2) {\n\t                    swap(this, i, i + 1);\n\t                }\n\t                return this;\n\t            };\n\t            Buffer.prototype.swap32 = function swap32() {\n\t                var len = this.length;\n\t                if (len % 4 !== 0) {\n\t                    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n\t                }\n\t                for (var i = 0; i < len; i += 4) {\n\t                    swap(this, i, i + 3);\n\t                    swap(this, i + 1, i + 2);\n\t                }\n\t                return this;\n\t            };\n\t            Buffer.prototype.swap64 = function swap64() {\n\t                var len = this.length;\n\t                if (len % 8 !== 0) {\n\t                    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n\t                }\n\t                for (var i = 0; i < len; i += 8) {\n\t                    swap(this, i, i + 7);\n\t                    swap(this, i + 1, i + 6);\n\t                    swap(this, i + 2, i + 5);\n\t                    swap(this, i + 3, i + 4);\n\t                }\n\t                return this;\n\t            };\n\t            Buffer.prototype.toString = function toString() {\n\t                var length = this.length | 0;\n\t                if (length === 0) return \"\";\n\t                if (arguments.length === 0) return utf8Slice(this, 0, length);\n\t                return slowToString.apply(this, arguments);\n\t            };\n\t            Buffer.prototype.equals = function equals(b) {\n\t                if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n\t                if (this === b) return true;\n\t                return Buffer.compare(this, b) === 0;\n\t            };\n\t            Buffer.prototype.inspect = function inspect() {\n\t                var str = \"\";\n\t                var max = exports.INSPECT_MAX_BYTES;\n\t                if (this.length > 0) {\n\t                    str = this.toString(\"hex\", 0, max).match(/.{2}/g).join(\" \");\n\t                    if (this.length > max) str += \" ... \";\n\t                }\n\t                return \"<Buffer \" + str + \">\";\n\t            };\n\t            Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n\t                if (!Buffer.isBuffer(target)) {\n\t                    throw new TypeError(\"Argument must be a Buffer\");\n\t                }\n\t                if (start === undefined) {\n\t                    start = 0;\n\t                }\n\t                if (end === undefined) {\n\t                    end = target ? target.length : 0;\n\t                }\n\t                if (thisStart === undefined) {\n\t                    thisStart = 0;\n\t                }\n\t                if (thisEnd === undefined) {\n\t                    thisEnd = this.length;\n\t                }\n\t                if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t                    throw new RangeError(\"out of range index\");\n\t                }\n\t                if (thisStart >= thisEnd && start >= end) {\n\t                    return 0;\n\t                }\n\t                if (thisStart >= thisEnd) {\n\t                    return -1;\n\t                }\n\t                if (start >= end) {\n\t                    return 1;\n\t                }\n\t                start >>>= 0;\n\t                end >>>= 0;\n\t                thisStart >>>= 0;\n\t                thisEnd >>>= 0;\n\t                if (this === target) return 0;\n\t                var x = thisEnd - thisStart;\n\t                var y = end - start;\n\t                var len = Math.min(x, y);\n\t                var thisCopy = this.slice(thisStart, thisEnd);\n\t                var targetCopy = target.slice(start, end);\n\t                for (var i = 0; i < len; ++i) {\n\t                    if (thisCopy[i] !== targetCopy[i]) {\n\t                        x = thisCopy[i];\n\t                        y = targetCopy[i];\n\t                        break;\n\t                    }\n\t                }\n\t                if (x < y) return -1;\n\t                if (y < x) return 1;\n\t                return 0;\n\t            };\n\t            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n\t                if (buffer.length === 0) return -1;\n\t                if (typeof byteOffset === \"string\") {\n\t                    encoding = byteOffset;\n\t                    byteOffset = 0;\n\t                } else if (byteOffset > 2147483647) {\n\t                    byteOffset = 2147483647;\n\t                } else if (byteOffset < -2147483648) {\n\t                    byteOffset = -2147483648;\n\t                }\n\t                byteOffset = +byteOffset;\n\t                if (isNaN(byteOffset)) {\n\t                    byteOffset = dir ? 0 : buffer.length - 1;\n\t                }\n\t                if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\t                if (byteOffset >= buffer.length) {\n\t                    if (dir) return -1; else byteOffset = buffer.length - 1;\n\t                } else if (byteOffset < 0) {\n\t                    if (dir) byteOffset = 0; else return -1;\n\t                }\n\t                if (typeof val === \"string\") {\n\t                    val = Buffer.from(val, encoding);\n\t                }\n\t                if (Buffer.isBuffer(val)) {\n\t                    if (val.length === 0) {\n\t                        return -1;\n\t                    }\n\t                    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n\t                } else if (typeof val === \"number\") {\n\t                    val = val & 255;\n\t                    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === \"function\") {\n\t                        if (dir) {\n\t                            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n\t                        } else {\n\t                            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n\t                        }\n\t                    }\n\t                    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);\n\t                }\n\t                throw new TypeError(\"val must be string, number or Buffer\");\n\t            }\n\t            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n\t                var indexSize = 1;\n\t                var arrLength = arr.length;\n\t                var valLength = val.length;\n\t                if (encoding !== undefined) {\n\t                    encoding = String(encoding).toLowerCase();\n\t                    if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n\t                        if (arr.length < 2 || val.length < 2) {\n\t                            return -1;\n\t                        }\n\t                        indexSize = 2;\n\t                        arrLength /= 2;\n\t                        valLength /= 2;\n\t                        byteOffset /= 2;\n\t                    }\n\t                }\n\t                function read(buf, i) {\n\t                    if (indexSize === 1) {\n\t                        return buf[i];\n\t                    } else {\n\t                        return buf.readUInt16BE(i * indexSize);\n\t                    }\n\t                }\n\t                var i;\n\t                if (dir) {\n\t                    var foundIndex = -1;\n\t                    for (i = byteOffset; i < arrLength; i++) {\n\t                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t                            if (foundIndex === -1) foundIndex = i;\n\t                            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n\t                        } else {\n\t                            if (foundIndex !== -1) i -= i - foundIndex;\n\t                            foundIndex = -1;\n\t                        }\n\t                    }\n\t                } else {\n\t                    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\t                    for (i = byteOffset; i >= 0; i--) {\n\t                        var found = true;\n\t                        for (var j = 0; j < valLength; j++) {\n\t                            if (read(arr, i + j) !== read(val, j)) {\n\t                                found = false;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (found) return i;\n\t                    }\n\t                }\n\t                return -1;\n\t            }\n\t            Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n\t                return this.indexOf(val, byteOffset, encoding) !== -1;\n\t            };\n\t            Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n\t                return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n\t            };\n\t            Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n\t                return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n\t            };\n\t            function hexWrite(buf, string, offset, length) {\n\t                offset = Number(offset) || 0;\n\t                var remaining = buf.length - offset;\n\t                if (!length) {\n\t                    length = remaining;\n\t                } else {\n\t                    length = Number(length);\n\t                    if (length > remaining) {\n\t                        length = remaining;\n\t                    }\n\t                }\n\t                var strLen = string.length;\n\t                if (strLen % 2 !== 0) throw new TypeError(\"Invalid hex string\");\n\t                if (length > strLen / 2) {\n\t                    length = strLen / 2;\n\t                }\n\t                for (var i = 0; i < length; ++i) {\n\t                    var parsed = parseInt(string.substr(i * 2, 2), 16);\n\t                    if (isNaN(parsed)) return i;\n\t                    buf[offset + i] = parsed;\n\t                }\n\t                return i;\n\t            }\n\t            function utf8Write(buf, string, offset, length) {\n\t                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n\t            }\n\t            function asciiWrite(buf, string, offset, length) {\n\t                return blitBuffer(asciiToBytes(string), buf, offset, length);\n\t            }\n\t            function latin1Write(buf, string, offset, length) {\n\t                return asciiWrite(buf, string, offset, length);\n\t            }\n\t            function base64Write(buf, string, offset, length) {\n\t                return blitBuffer(base64ToBytes(string), buf, offset, length);\n\t            }\n\t            function ucs2Write(buf, string, offset, length) {\n\t                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n\t            }\n\t            Buffer.prototype.write = function write(string, offset, length, encoding) {\n\t                if (offset === undefined) {\n\t                    encoding = \"utf8\";\n\t                    length = this.length;\n\t                    offset = 0;\n\t                } else if (length === undefined && typeof offset === \"string\") {\n\t                    encoding = offset;\n\t                    length = this.length;\n\t                    offset = 0;\n\t                } else if (isFinite(offset)) {\n\t                    offset = offset | 0;\n\t                    if (isFinite(length)) {\n\t                        length = length | 0;\n\t                        if (encoding === undefined) encoding = \"utf8\";\n\t                    } else {\n\t                        encoding = length;\n\t                        length = undefined;\n\t                    }\n\t                } else {\n\t                    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n\t                }\n\t                var remaining = this.length - offset;\n\t                if (length === undefined || length > remaining) length = remaining;\n\t                if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n\t                    throw new RangeError(\"Attempt to write outside buffer bounds\");\n\t                }\n\t                if (!encoding) encoding = \"utf8\";\n\t                var loweredCase = false;\n\t                for (;;) {\n\t                    switch (encoding) {\n\t                      case \"hex\":\n\t                        return hexWrite(this, string, offset, length);\n\t\n\t                      case \"utf8\":\n\t                      case \"utf-8\":\n\t                        return utf8Write(this, string, offset, length);\n\t\n\t                      case \"ascii\":\n\t                        return asciiWrite(this, string, offset, length);\n\t\n\t                      case \"latin1\":\n\t                      case \"binary\":\n\t                        return latin1Write(this, string, offset, length);\n\t\n\t                      case \"base64\":\n\t                        return base64Write(this, string, offset, length);\n\t\n\t                      case \"ucs2\":\n\t                      case \"ucs-2\":\n\t                      case \"utf16le\":\n\t                      case \"utf-16le\":\n\t                        return ucs2Write(this, string, offset, length);\n\t\n\t                      default:\n\t                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n\t                        encoding = (\"\" + encoding).toLowerCase();\n\t                        loweredCase = true;\n\t                    }\n\t                }\n\t            };\n\t            Buffer.prototype.toJSON = function toJSON() {\n\t                return {\n\t                    type: \"Buffer\",\n\t                    data: Array.prototype.slice.call(this._arr || this, 0)\n\t                };\n\t            };\n\t            function base64Slice(buf, start, end) {\n\t                if (start === 0 && end === buf.length) {\n\t                    return base64.fromByteArray(buf);\n\t                } else {\n\t                    return base64.fromByteArray(buf.slice(start, end));\n\t                }\n\t            }\n\t            function utf8Slice(buf, start, end) {\n\t                end = Math.min(buf.length, end);\n\t                var res = [];\n\t                var i = start;\n\t                while (i < end) {\n\t                    var firstByte = buf[i];\n\t                    var codePoint = null;\n\t                    var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n\t                    if (i + bytesPerSequence <= end) {\n\t                        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\t                        switch (bytesPerSequence) {\n\t                          case 1:\n\t                            if (firstByte < 128) {\n\t                                codePoint = firstByte;\n\t                            }\n\t                            break;\n\t\n\t                          case 2:\n\t                            secondByte = buf[i + 1];\n\t                            if ((secondByte & 192) === 128) {\n\t                                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n\t                                if (tempCodePoint > 127) {\n\t                                    codePoint = tempCodePoint;\n\t                                }\n\t                            }\n\t                            break;\n\t\n\t                          case 3:\n\t                            secondByte = buf[i + 1];\n\t                            thirdByte = buf[i + 2];\n\t                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n\t                                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n\t                                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n\t                                    codePoint = tempCodePoint;\n\t                                }\n\t                            }\n\t                            break;\n\t\n\t                          case 4:\n\t                            secondByte = buf[i + 1];\n\t                            thirdByte = buf[i + 2];\n\t                            fourthByte = buf[i + 3];\n\t                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n\t                                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n\t                                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n\t                                    codePoint = tempCodePoint;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    if (codePoint === null) {\n\t                        codePoint = 65533;\n\t                        bytesPerSequence = 1;\n\t                    } else if (codePoint > 65535) {\n\t                        codePoint -= 65536;\n\t                        res.push(codePoint >>> 10 & 1023 | 55296);\n\t                        codePoint = 56320 | codePoint & 1023;\n\t                    }\n\t                    res.push(codePoint);\n\t                    i += bytesPerSequence;\n\t                }\n\t                return decodeCodePointsArray(res);\n\t            }\n\t            var MAX_ARGUMENTS_LENGTH = 4096;\n\t            function decodeCodePointsArray(codePoints) {\n\t                var len = codePoints.length;\n\t                if (len <= MAX_ARGUMENTS_LENGTH) {\n\t                    return String.fromCharCode.apply(String, codePoints);\n\t                }\n\t                var res = \"\";\n\t                var i = 0;\n\t                while (i < len) {\n\t                    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n\t                }\n\t                return res;\n\t            }\n\t            function asciiSlice(buf, start, end) {\n\t                var ret = \"\";\n\t                end = Math.min(buf.length, end);\n\t                for (var i = start; i < end; ++i) {\n\t                    ret += String.fromCharCode(buf[i] & 127);\n\t                }\n\t                return ret;\n\t            }\n\t            function latin1Slice(buf, start, end) {\n\t                var ret = \"\";\n\t                end = Math.min(buf.length, end);\n\t                for (var i = start; i < end; ++i) {\n\t                    ret += String.fromCharCode(buf[i]);\n\t                }\n\t                return ret;\n\t            }\n\t            function hexSlice(buf, start, end) {\n\t                var len = buf.length;\n\t                if (!start || start < 0) start = 0;\n\t                if (!end || end < 0 || end > len) end = len;\n\t                var out = \"\";\n\t                for (var i = start; i < end; ++i) {\n\t                    out += toHex(buf[i]);\n\t                }\n\t                return out;\n\t            }\n\t            function utf16leSlice(buf, start, end) {\n\t                var bytes = buf.slice(start, end);\n\t                var res = \"\";\n\t                for (var i = 0; i < bytes.length; i += 2) {\n\t                    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n\t                }\n\t                return res;\n\t            }\n\t            Buffer.prototype.slice = function slice(start, end) {\n\t                var len = this.length;\n\t                start = ~~start;\n\t                end = end === undefined ? len : ~~end;\n\t                if (start < 0) {\n\t                    start += len;\n\t                    if (start < 0) start = 0;\n\t                } else if (start > len) {\n\t                    start = len;\n\t                }\n\t                if (end < 0) {\n\t                    end += len;\n\t                    if (end < 0) end = 0;\n\t                } else if (end > len) {\n\t                    end = len;\n\t                }\n\t                if (end < start) end = start;\n\t                var newBuf;\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    newBuf = this.subarray(start, end);\n\t                    newBuf.__proto__ = Buffer.prototype;\n\t                } else {\n\t                    var sliceLen = end - start;\n\t                    newBuf = new Buffer(sliceLen, undefined);\n\t                    for (var i = 0; i < sliceLen; ++i) {\n\t                        newBuf[i] = this[i + start];\n\t                    }\n\t                }\n\t                return newBuf;\n\t            };\n\t            function checkOffset(offset, ext, length) {\n\t                if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n\t                if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n\t            }\n\t            Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t                var val = this[offset];\n\t                var mul = 1;\n\t                var i = 0;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    val += this[offset + i] * mul;\n\t                }\n\t                return val;\n\t            };\n\t            Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) {\n\t                    checkOffset(offset, byteLength, this.length);\n\t                }\n\t                var val = this[offset + --byteLength];\n\t                var mul = 1;\n\t                while (byteLength > 0 && (mul *= 256)) {\n\t                    val += this[offset + --byteLength] * mul;\n\t                }\n\t                return val;\n\t            };\n\t            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 1, this.length);\n\t                return this[offset];\n\t            };\n\t            Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                return this[offset] | this[offset + 1] << 8;\n\t            };\n\t            Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                return this[offset] << 8 | this[offset + 1];\n\t            };\n\t            Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n\t            };\n\t            Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n\t            };\n\t            Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t                var val = this[offset];\n\t                var mul = 1;\n\t                var i = 0;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    val += this[offset + i] * mul;\n\t                }\n\t                mul *= 128;\n\t                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t                return val;\n\t            };\n\t            Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) checkOffset(offset, byteLength, this.length);\n\t                var i = byteLength;\n\t                var mul = 1;\n\t                var val = this[offset + --i];\n\t                while (i > 0 && (mul *= 256)) {\n\t                    val += this[offset + --i] * mul;\n\t                }\n\t                mul *= 128;\n\t                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\t                return val;\n\t            };\n\t            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 1, this.length);\n\t                if (!(this[offset] & 128)) return this[offset];\n\t                return (255 - this[offset] + 1) * -1;\n\t            };\n\t            Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                var val = this[offset] | this[offset + 1] << 8;\n\t                return val & 32768 ? val | 4294901760 : val;\n\t            };\n\t            Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 2, this.length);\n\t                var val = this[offset + 1] | this[offset] << 8;\n\t                return val & 32768 ? val | 4294901760 : val;\n\t            };\n\t            Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n\t            };\n\t            Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n\t            };\n\t            Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return ieee754.read(this, offset, true, 23, 4);\n\t            };\n\t            Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 4, this.length);\n\t                return ieee754.read(this, offset, false, 23, 4);\n\t            };\n\t            Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 8, this.length);\n\t                return ieee754.read(this, offset, true, 52, 8);\n\t            };\n\t            Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n\t                if (!noAssert) checkOffset(offset, 8, this.length);\n\t                return ieee754.read(this, offset, false, 52, 8);\n\t            };\n\t            function checkInt(buf, value, offset, ext, max, min) {\n\t                if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n\t                if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n\t                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n\t            }\n\t            Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) {\n\t                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t                }\n\t                var mul = 1;\n\t                var i = 0;\n\t                this[offset] = value & 255;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    this[offset + i] = value / mul & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                byteLength = byteLength | 0;\n\t                if (!noAssert) {\n\t                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n\t                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n\t                }\n\t                var i = byteLength - 1;\n\t                var mul = 1;\n\t                this[offset + i] = value & 255;\n\t                while (--i >= 0 && (mul *= 256)) {\n\t                    this[offset + i] = value / mul & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t                this[offset] = value & 255;\n\t                return offset + 1;\n\t            };\n\t            function objectWriteUInt16(buf, value, offset, littleEndian) {\n\t                if (value < 0) value = 65535 + value + 1;\n\t                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t                    buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n\t                }\n\t            }\n\t            Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value & 255;\n\t                    this[offset + 1] = value >>> 8;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, true);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 8;\n\t                    this[offset + 1] = value & 255;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, false);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            function objectWriteUInt32(buf, value, offset, littleEndian) {\n\t                if (value < 0) value = 4294967295 + value + 1;\n\t                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t                    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 255;\n\t                }\n\t            }\n\t            Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset + 3] = value >>> 24;\n\t                    this[offset + 2] = value >>> 16;\n\t                    this[offset + 1] = value >>> 8;\n\t                    this[offset] = value & 255;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, true);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 24;\n\t                    this[offset + 1] = value >>> 16;\n\t                    this[offset + 2] = value >>> 8;\n\t                    this[offset + 3] = value & 255;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, false);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) {\n\t                    var limit = Math.pow(2, 8 * byteLength - 1);\n\t                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t                }\n\t                var i = 0;\n\t                var mul = 1;\n\t                var sub = 0;\n\t                this[offset] = value & 255;\n\t                while (++i < byteLength && (mul *= 256)) {\n\t                    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t                        sub = 1;\n\t                    }\n\t                    this[offset + i] = (value / mul >> 0) - sub & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) {\n\t                    var limit = Math.pow(2, 8 * byteLength - 1);\n\t                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n\t                }\n\t                var i = byteLength - 1;\n\t                var mul = 1;\n\t                var sub = 0;\n\t                this[offset + i] = value & 255;\n\t                while (--i >= 0 && (mul *= 256)) {\n\t                    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t                        sub = 1;\n\t                    }\n\t                    this[offset + i] = (value / mul >> 0) - sub & 255;\n\t                }\n\t                return offset + byteLength;\n\t            };\n\t            Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n\t                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n\t                if (value < 0) value = 255 + value + 1;\n\t                this[offset] = value & 255;\n\t                return offset + 1;\n\t            };\n\t            Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value & 255;\n\t                    this[offset + 1] = value >>> 8;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, true);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 8;\n\t                    this[offset + 1] = value & 255;\n\t                } else {\n\t                    objectWriteUInt16(this, value, offset, false);\n\t                }\n\t                return offset + 2;\n\t            };\n\t            Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value & 255;\n\t                    this[offset + 1] = value >>> 8;\n\t                    this[offset + 2] = value >>> 16;\n\t                    this[offset + 3] = value >>> 24;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, true);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n\t                value = +value;\n\t                offset = offset | 0;\n\t                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n\t                if (value < 0) value = 4294967295 + value + 1;\n\t                if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    this[offset] = value >>> 24;\n\t                    this[offset + 1] = value >>> 16;\n\t                    this[offset + 2] = value >>> 8;\n\t                    this[offset + 3] = value & 255;\n\t                } else {\n\t                    objectWriteUInt32(this, value, offset, false);\n\t                }\n\t                return offset + 4;\n\t            };\n\t            function checkIEEE754(buf, value, offset, ext, max, min) {\n\t                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n\t                if (offset < 0) throw new RangeError(\"Index out of range\");\n\t            }\n\t            function writeFloat(buf, value, offset, littleEndian, noAssert) {\n\t                if (!noAssert) {\n\t                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);\n\t                }\n\t                ieee754.write(buf, value, offset, littleEndian, 23, 4);\n\t                return offset + 4;\n\t            }\n\t            Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n\t                return writeFloat(this, value, offset, true, noAssert);\n\t            };\n\t            Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n\t                return writeFloat(this, value, offset, false, noAssert);\n\t            };\n\t            function writeDouble(buf, value, offset, littleEndian, noAssert) {\n\t                if (!noAssert) {\n\t                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);\n\t                }\n\t                ieee754.write(buf, value, offset, littleEndian, 52, 8);\n\t                return offset + 8;\n\t            }\n\t            Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n\t                return writeDouble(this, value, offset, true, noAssert);\n\t            };\n\t            Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n\t                return writeDouble(this, value, offset, false, noAssert);\n\t            };\n\t            Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n\t                if (!start) start = 0;\n\t                if (!end && end !== 0) end = this.length;\n\t                if (targetStart >= target.length) targetStart = target.length;\n\t                if (!targetStart) targetStart = 0;\n\t                if (end > 0 && end < start) end = start;\n\t                if (end === start) return 0;\n\t                if (target.length === 0 || this.length === 0) return 0;\n\t                if (targetStart < 0) {\n\t                    throw new RangeError(\"targetStart out of bounds\");\n\t                }\n\t                if (start < 0 || start >= this.length) throw new RangeError(\"sourceStart out of bounds\");\n\t                if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n\t                if (end > this.length) end = this.length;\n\t                if (target.length - targetStart < end - start) {\n\t                    end = target.length - targetStart + start;\n\t                }\n\t                var len = end - start;\n\t                var i;\n\t                if (this === target && start < targetStart && targetStart < end) {\n\t                    for (i = len - 1; i >= 0; --i) {\n\t                        target[i + targetStart] = this[i + start];\n\t                    }\n\t                } else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t                    for (i = 0; i < len; ++i) {\n\t                        target[i + targetStart] = this[i + start];\n\t                    }\n\t                } else {\n\t                    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n\t                }\n\t                return len;\n\t            };\n\t            Buffer.prototype.fill = function fill(val, start, end, encoding) {\n\t                if (typeof val === \"string\") {\n\t                    if (typeof start === \"string\") {\n\t                        encoding = start;\n\t                        start = 0;\n\t                        end = this.length;\n\t                    } else if (typeof end === \"string\") {\n\t                        encoding = end;\n\t                        end = this.length;\n\t                    }\n\t                    if (val.length === 1) {\n\t                        var code = val.charCodeAt(0);\n\t                        if (code < 256) {\n\t                            val = code;\n\t                        }\n\t                    }\n\t                    if (encoding !== undefined && typeof encoding !== \"string\") {\n\t                        throw new TypeError(\"encoding must be a string\");\n\t                    }\n\t                    if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n\t                        throw new TypeError(\"Unknown encoding: \" + encoding);\n\t                    }\n\t                } else if (typeof val === \"number\") {\n\t                    val = val & 255;\n\t                }\n\t                if (start < 0 || this.length < start || this.length < end) {\n\t                    throw new RangeError(\"Out of range index\");\n\t                }\n\t                if (end <= start) {\n\t                    return this;\n\t                }\n\t                start = start >>> 0;\n\t                end = end === undefined ? this.length : end >>> 0;\n\t                if (!val) val = 0;\n\t                var i;\n\t                if (typeof val === \"number\") {\n\t                    for (i = start; i < end; ++i) {\n\t                        this[i] = val;\n\t                    }\n\t                } else {\n\t                    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n\t                    var len = bytes.length;\n\t                    for (i = 0; i < end - start; ++i) {\n\t                        this[i + start] = bytes[i % len];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\t            function base64clean(str) {\n\t                str = stringtrim(str).replace(INVALID_BASE64_RE, \"\");\n\t                if (str.length < 2) return \"\";\n\t                while (str.length % 4 !== 0) {\n\t                    str = str + \"=\";\n\t                }\n\t                return str;\n\t            }\n\t            function stringtrim(str) {\n\t                if (str.trim) return str.trim();\n\t                return str.replace(/^\\s+|\\s+$/g, \"\");\n\t            }\n\t            function toHex(n) {\n\t                if (n < 16) return \"0\" + n.toString(16);\n\t                return n.toString(16);\n\t            }\n\t            function utf8ToBytes(string, units) {\n\t                units = units || Infinity;\n\t                var codePoint;\n\t                var length = string.length;\n\t                var leadSurrogate = null;\n\t                var bytes = [];\n\t                for (var i = 0; i < length; ++i) {\n\t                    codePoint = string.charCodeAt(i);\n\t                    if (codePoint > 55295 && codePoint < 57344) {\n\t                        if (!leadSurrogate) {\n\t                            if (codePoint > 56319) {\n\t                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                                continue;\n\t                            } else if (i + 1 === length) {\n\t                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                                continue;\n\t                            }\n\t                            leadSurrogate = codePoint;\n\t                            continue;\n\t                        }\n\t                        if (codePoint < 56320) {\n\t                            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                            leadSurrogate = codePoint;\n\t                            continue;\n\t                        }\n\t                        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n\t                    } else if (leadSurrogate) {\n\t                        if ((units -= 3) > -1) bytes.push(239, 191, 189);\n\t                    }\n\t                    leadSurrogate = null;\n\t                    if (codePoint < 128) {\n\t                        if ((units -= 1) < 0) break;\n\t                        bytes.push(codePoint);\n\t                    } else if (codePoint < 2048) {\n\t                        if ((units -= 2) < 0) break;\n\t                        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n\t                    } else if (codePoint < 65536) {\n\t                        if ((units -= 3) < 0) break;\n\t                        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n\t                    } else if (codePoint < 1114112) {\n\t                        if ((units -= 4) < 0) break;\n\t                        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n\t                    } else {\n\t                        throw new Error(\"Invalid code point\");\n\t                    }\n\t                }\n\t                return bytes;\n\t            }\n\t            function asciiToBytes(str) {\n\t                var byteArray = [];\n\t                for (var i = 0; i < str.length; ++i) {\n\t                    byteArray.push(str.charCodeAt(i) & 255);\n\t                }\n\t                return byteArray;\n\t            }\n\t            function utf16leToBytes(str, units) {\n\t                var c, hi, lo;\n\t                var byteArray = [];\n\t                for (var i = 0; i < str.length; ++i) {\n\t                    if ((units -= 2) < 0) break;\n\t                    c = str.charCodeAt(i);\n\t                    hi = c >> 8;\n\t                    lo = c % 256;\n\t                    byteArray.push(lo);\n\t                    byteArray.push(hi);\n\t                }\n\t                return byteArray;\n\t            }\n\t            function base64ToBytes(str) {\n\t                return base64.toByteArray(base64clean(str));\n\t            }\n\t            function blitBuffer(src, dst, offset, length) {\n\t                for (var i = 0; i < length; ++i) {\n\t                    if (i + offset >= dst.length || i >= src.length) break;\n\t                    dst[i + offset] = src[i];\n\t                }\n\t                return i;\n\t            }\n\t            function isnan(val) {\n\t                return val !== val;\n\t            }\n\t        }).call(exports, __webpack_require__(12).Buffer, function() {\n\t            return this;\n\t        }());\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.byteLength = byteLength;\n\t        exports.toByteArray = toByteArray;\n\t        exports.fromByteArray = fromByteArray;\n\t        var lookup = [];\n\t        var revLookup = [];\n\t        var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n\t        var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t        for (var i = 0, len = code.length; i < len; ++i) {\n\t            lookup[i] = code[i];\n\t            revLookup[code.charCodeAt(i)] = i;\n\t        }\n\t        revLookup[\"-\".charCodeAt(0)] = 62;\n\t        revLookup[\"_\".charCodeAt(0)] = 63;\n\t        function placeHoldersCount(b64) {\n\t            var len = b64.length;\n\t            if (len % 4 > 0) {\n\t                throw new Error(\"Invalid string. Length must be a multiple of 4\");\n\t            }\n\t            return b64[len - 2] === \"=\" ? 2 : b64[len - 1] === \"=\" ? 1 : 0;\n\t        }\n\t        function byteLength(b64) {\n\t            return b64.length * 3 / 4 - placeHoldersCount(b64);\n\t        }\n\t        function toByteArray(b64) {\n\t            var i, j, l, tmp, placeHolders, arr;\n\t            var len = b64.length;\n\t            placeHolders = placeHoldersCount(b64);\n\t            arr = new Arr(len * 3 / 4 - placeHolders);\n\t            l = placeHolders > 0 ? len - 4 : len;\n\t            var L = 0;\n\t            for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n\t                arr[L++] = tmp >> 16 & 255;\n\t                arr[L++] = tmp >> 8 & 255;\n\t                arr[L++] = tmp & 255;\n\t            }\n\t            if (placeHolders === 2) {\n\t                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n\t                arr[L++] = tmp & 255;\n\t            } else if (placeHolders === 1) {\n\t                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n\t                arr[L++] = tmp >> 8 & 255;\n\t                arr[L++] = tmp & 255;\n\t            }\n\t            return arr;\n\t        }\n\t        function tripletToBase64(num) {\n\t            return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n\t        }\n\t        function encodeChunk(uint8, start, end) {\n\t            var tmp;\n\t            var output = [];\n\t            for (var i = start; i < end; i += 3) {\n\t                tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n\t                output.push(tripletToBase64(tmp));\n\t            }\n\t            return output.join(\"\");\n\t        }\n\t        function fromByteArray(uint8) {\n\t            var tmp;\n\t            var len = uint8.length;\n\t            var extraBytes = len % 3;\n\t            var output = \"\";\n\t            var parts = [];\n\t            var maxChunkLength = 16383;\n\t            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t                parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n\t            }\n\t            if (extraBytes === 1) {\n\t                tmp = uint8[len - 1];\n\t                output += lookup[tmp >> 2];\n\t                output += lookup[tmp << 4 & 63];\n\t                output += \"==\";\n\t            } else if (extraBytes === 2) {\n\t                tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n\t                output += lookup[tmp >> 10];\n\t                output += lookup[tmp >> 4 & 63];\n\t                output += lookup[tmp << 2 & 63];\n\t                output += \"=\";\n\t            }\n\t            parts.push(output);\n\t            return parts.join(\"\");\n\t        }\n\t    }, function(module, exports) {\n\t        exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n\t            var e, m;\n\t            var eLen = nBytes * 8 - mLen - 1;\n\t            var eMax = (1 << eLen) - 1;\n\t            var eBias = eMax >> 1;\n\t            var nBits = -7;\n\t            var i = isLE ? nBytes - 1 : 0;\n\t            var d = isLE ? -1 : 1;\n\t            var s = buffer[offset + i];\n\t            i += d;\n\t            e = s & (1 << -nBits) - 1;\n\t            s >>= -nBits;\n\t            nBits += eLen;\n\t            for (;nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t            m = e & (1 << -nBits) - 1;\n\t            e >>= -nBits;\n\t            nBits += mLen;\n\t            for (;nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t            if (e === 0) {\n\t                e = 1 - eBias;\n\t            } else if (e === eMax) {\n\t                return m ? NaN : (s ? -1 : 1) * Infinity;\n\t            } else {\n\t                m = m + Math.pow(2, mLen);\n\t                e = e - eBias;\n\t            }\n\t            return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n\t        };\n\t        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n\t            var e, m, c;\n\t            var eLen = nBytes * 8 - mLen - 1;\n\t            var eMax = (1 << eLen) - 1;\n\t            var eBias = eMax >> 1;\n\t            var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n\t            var i = isLE ? 0 : nBytes - 1;\n\t            var d = isLE ? 1 : -1;\n\t            var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t            value = Math.abs(value);\n\t            if (isNaN(value) || value === Infinity) {\n\t                m = isNaN(value) ? 1 : 0;\n\t                e = eMax;\n\t            } else {\n\t                e = Math.floor(Math.log(value) / Math.LN2);\n\t                if (value * (c = Math.pow(2, -e)) < 1) {\n\t                    e--;\n\t                    c *= 2;\n\t                }\n\t                if (e + eBias >= 1) {\n\t                    value += rt / c;\n\t                } else {\n\t                    value += rt * Math.pow(2, 1 - eBias);\n\t                }\n\t                if (value * c >= 2) {\n\t                    e++;\n\t                    c /= 2;\n\t                }\n\t                if (e + eBias >= eMax) {\n\t                    m = 0;\n\t                    e = eMax;\n\t                } else if (e + eBias >= 1) {\n\t                    m = (value * c - 1) * Math.pow(2, mLen);\n\t                    e = e + eBias;\n\t                } else {\n\t                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n\t                    e = 0;\n\t                }\n\t            }\n\t            for (;mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}\n\t            e = e << mLen | m;\n\t            eLen += mLen;\n\t            for (;eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}\n\t            buffer[offset + i - d] |= s * 128;\n\t        };\n\t    }, function(module, exports) {\n\t        var toString = {}.toString;\n\t        module.exports = Array.isArray || function(arr) {\n\t            return toString.call(arr) == \"[object Array]\";\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Plugin_1 = __webpack_require__(17);\n\t        var OrthographicCamera = THREE.OrthographicCamera;\n\t        var Chart_1 = __webpack_require__(21);\n\t        var Widget_1 = __webpack_require__(30);\n\t        var Utils_1 = __webpack_require__(18);\n\t        var AxisWidget_1 = __webpack_require__(31);\n\t        var GridWidget_1 = __webpack_require__(32);\n\t        var TrendsGradientWidget_1 = __webpack_require__(34);\n\t        var TrendsLineWidget_1 = __webpack_require__(36);\n\t        var TrendsCandleWidget_1 = __webpack_require__(37);\n\t        var deps_1 = __webpack_require__(19);\n\t        var Color_1 = __webpack_require__(33);\n\t        var ChartBlankView = function() {\n\t            function ChartBlankView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartBlankView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartBlankView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartBlankView.prototype.render = function() {\n\t                this.chart.render();\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartBlankView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartBlankView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartBlankView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartBlankView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartBlankView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartBlankView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartBlankView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.interpolatedViewport.onInterpolation(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartBlankView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartBlankView.prototype.setupCamera = function() {\n\t                var camSettings = this.chart.viewport.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new OrthographicCamera(camSettings.left, camSettings.right, camSettings.top, camSettings.bottom, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.left = camSettings.left;\n\t                    this.camera.right = camSettings.right;\n\t                    this.camera.top = camSettings.top;\n\t                    this.camera.bottom = camSettings.bottom;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.left, camSettings.bottom, 0);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.interpolatedViewport.params);\n\t            };\n\t            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartBlankView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartBlankView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                this.chart.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartBlankView.preinstalledWidgets = [];\n\t            ChartBlankView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartBlankView;\n\t        }();\n\t        exports.ChartBlankView = ChartBlankView;\n\t        var ChartView = function(_super) {\n\t            __extends(ChartView, _super);\n\t            function ChartView() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n\t            return ChartView;\n\t        }(ChartBlankView);\n\t        exports.ChartView = ChartView;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(18);\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChangedHandler = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(19);\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deps_1.deepExtend({}, obj1, obj2);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.patch = function(objectToPatch, patch) {\n\t                var idKey = \"_id\";\n\t                for (var key in patch) {\n\t                    if (!patch.hasOwnProperty(key)) continue;\n\t                    if (objectToPatch[key]) {\n\t                        if (Array.isArray(patch[key])) {\n\t                            var _loop_1 = function(patchItem) {\n\t                                var subObject = objectToPatch[key].find(function(item) {\n\t                                    return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n\t                                });\n\t                                if (subObject) {\n\t                                    this_1.patch(subObject, patchItem);\n\t                                } else {\n\t                                    objectToPatch[key].push(patchItem);\n\t                                }\n\t                            };\n\t                            var this_1 = this;\n\t                            for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\n\t                                var patchItem = _a[_i];\n\t                                _loop_1(patchItem);\n\t                            }\n\t                            continue;\n\t                        } else if (typeof patch[key] === \"object\" && objectToPatch[key] != void 0) {\n\t                            if (patch[idKey] && Object.keys(patch).length == 1) {\n\t                                delete objectToPatch[key];\n\t                            } else {\n\t                                this.patch(objectToPatch[key], patch[key]);\n\t                            }\n\t                            continue;\n\t                        }\n\t                    }\n\t                    objectToPatch[key] = patch[key];\n\t                }\n\t                if (objectToPatch[\"_onUpdate\"]) objectToPatch[\"_onUpdate\"].call(objectToPatch, patch);\n\t                return objectToPatch;\n\t            };\n\t            Utils.travers = function(object, fn) {\n\t                for (var key in object) {\n\t                    if (!object.hasOwnProperty(key)) continue;\n\t                    var allowTraverseDeeper = fn(object[key]);\n\t                    var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == \"object\";\n\t                    if (canTraverseDeeper) this.travers(object[key], fn);\n\t                }\n\t            };\n\t            Utils.setIdsToArrayItems = function(sourceObject) {\n\t                var idKey = \"_id\";\n\t                Utils.travers(sourceObject, function(item) {\n\t                    if (!Array.isArray(item)) return true;\n\t                    var arr = item;\n\t                    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n\t                        var obj = arr_1[_i];\n\t                        if (typeof obj !== \"object\" || Array.isArray(obj)) continue;\n\t                        if (!obj[idKey]) obj[idKey] = Utils.getUid();\n\t                    }\n\t                });\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn && fn(ctx, width, height);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createNearestTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.magFilter = THREE.NearestFilter;\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.binarySearchInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((hi - lo) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                    if (arr[lo][key] == num) {\n\t                        return lo;\n\t                    } else if (arr[hi][key] == num) {\n\t                        return hi;\n\t                    }\n\t                }\n\t                return arr[lo] && arr[lo][key] == num ? lo : -1;\n\t            };\n\t            Utils.binarySearch = function(arr, num, key) {\n\t                var ind = this.binarySearchInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else if (typeof srcObject[key] == \"function\") {\n\t                        dstObject[key] = srcObject[key];\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(19);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(22);\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        var Utils_1 = __webpack_require__(18);\n\t        var TrendsManager_1 = __webpack_require__(24);\n\t        var Viewport_1 = __webpack_require__(25);\n\t        var InterpolatedViewport_1 = __webpack_require__(26);\n\t        var deps_1 = __webpack_require__(2);\n\t        var AnimationManager_1 = __webpack_require__(27);\n\t        var Easing_1 = __webpack_require__(28);\n\t        var interfaces_1 = __webpack_require__(29);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            VIEWPORT_CHANGE: \"viewportChange\",\n\t            DRAG_STATE_CHAGED: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: 250,\n\t                        scrollSpeed: 1e3,\n\t                        scrollEase: Easing_1.EASING.Quadratic.Out,\n\t                        zoomEase: Easing_1.EASING.Quadratic.Out,\n\t                        autoScrollSpeed: 1100,\n\t                        autoScrollEase: Easing_1.EASING.Linear.None\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280,\n\t                    inertialScroll: false\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.isDestroyed = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.patch(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.animationManager = new AnimationManager_1.AnimationManager();\n\t                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n\t                this.viewport = new Viewport_1.Viewport(this);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.interpolatedViewport = new InterpolatedViewport_1.InterpolatedViewport(this);\n\t                this.bindEvents();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t                this.isDestroyed = true;\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onDragStateChanged = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onViewportChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.animationManager.tick();\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                if (this.isDestroyed) {\n\t                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n\t                }\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                newState = Utils_1.Utils.deepMerge({}, newState);\n\t                Utils_1.Utils.setIdsToArrayItems(newState);\n\t                var currentStateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (currentStateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                this.state = Utils_1.Utils.patch(this.state, newState);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.patch({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.patch(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        Utils_1.Utils.patch(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        Utils_1.Utils.patch(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        Utils_1.Utils.patch(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        Utils_1.Utils.patch(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                Utils_1.Utils.patch(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n\t                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\n\t                if (viewportChangeEventNeeded) this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = plugin.initialState;\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t                this.onDragStateChanged(function(dragState) {\n\t                    return _this.onDragStateChangedHandler(dragState);\n\t                });\n\t                this.ee.on(\"animationsChange\", function(animationOptions) {\n\t                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n\t                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t                var state = this.state;\n\t                if (!state.autoScroll || state.cursor.dragMode) return;\n\t                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleXVal = this.viewport.getRightVal();\n\t                    var paddingRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n\t                    var marginRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.margin.end);\n\t                    var currentScroll = state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n\t                var state = this.state;\n\t                if (!state.inertialScroll || isDragMode) return;\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\n\t                    var minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.viewport.pxToValByXAxis(state.width) + this.viewport.pxToValByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime);\n\t                });\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(18);\n\t        var TrendSegmentsManager_1 = __webpack_require__(23);\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        var deps_1 = __webpack_require__(2);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chart = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chart;\n\t                chartState.onDragStateChanged(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chart.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chart.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chart.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chart;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.viewport.getViewportYByVal(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(22);\n\t        var Utils_1 = __webpack_require__(18);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chart, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.unbindList = [];\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                }), this.chart.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                }), this.chart.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }) ];\n\t            };\n\t            TrendSegmentsManager.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbind) {\n\t                    return unbind();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.unbindEvents();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) {\n\t                            initialAnimationState = initialSegment.createAnimationState();\n\t                        }\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chart.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(22);\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var _this = this;\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                trend.segmentsManager.onRebuild(function() {\n\t                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                });\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var Viewport = function() {\n\t            function Viewport(chart) {\n\t                this.params = {};\n\t                this.chart = chart;\n\t                this.updateParams();\n\t                this.bindEvents();\n\t            }\n\t            Viewport.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chart.onChange(function() {\n\t                    return _this.updateParams();\n\t                });\n\t            };\n\t            Viewport.prototype.updateParams = function() {\n\t                var state = this.chart.state;\n\t                this.params.scrollXVal = state.xAxis.range.scroll;\n\t                this.params.scrollYVal = state.yAxis.range.scroll;\n\t                this.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\n\t                this.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\n\t                this.params.zoomX = state.xAxis.range.zoom;\n\t                this.params.zoomY = state.yAxis.range.zoom;\n\t            };\n\t            Viewport.prototype.getCameraSettings = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                return {\n\t                    left: 0,\n\t                    right: width,\n\t                    top: height,\n\t                    bottom: 0,\n\t                    near: -500,\n\t                    far: 1e3\n\t                };\n\t            };\n\t            Viewport.prototype.getWorldXByVal = function(xVal) {\n\t                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.params.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Viewport.prototype.getWorldYByVal = function(yVal) {\n\t                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.params.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Viewport.prototype.getWorldXByViewportX = function(viewportX) {\n\t                return this.getWorldXByVal(this.getValByViewportX(viewportX));\n\t            };\n\t            Viewport.prototype.getWorldYByViewportY = function(viewportY) {\n\t                return this.getWorldYByVal(this.getValByViewportY(viewportY));\n\t            };\n\t            Viewport.prototype.getValByWorldX = function(worldX) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\n\t            };\n\t            Viewport.prototype.getValByWorldY = function(worldY) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\n\t            };\n\t            Viewport.prototype.getValByViewportX = function(x) {\n\t                return this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\n\t            };\n\t            Viewport.prototype.getValByViewportY = function(y) {\n\t                return this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\n\t            };\n\t            Viewport.prototype.getViewportXByVal = function(xVal) {\n\t                return this.getWorldXByVal(xVal) - this.params.scrollX;\n\t            };\n\t            Viewport.prototype.getViewportYByVal = function(yVal) {\n\t                return this.getWorldYByVal(yVal) - this.params.scrollY;\n\t            };\n\t            Viewport.prototype.getViewportXByWorldX = function(worldX) {\n\t                return worldX - this.params.scrollX;\n\t            };\n\t            Viewport.prototype.valToPxByXAxis = function(val) {\n\t                return val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\n\t            };\n\t            Viewport.prototype.valToPxByYAxis = function(val) {\n\t                return val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\n\t            };\n\t            Viewport.prototype.pxToValByXAxis = function(pixelsCount) {\n\t                return pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\n\t            };\n\t            Viewport.prototype.pxToValByYAxis = function(pixelsCount) {\n\t                return pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\n\t            };\n\t            Viewport.prototype.getTop = function() {\n\t                return this.params.scrollY + this.chart.state.height;\n\t            };\n\t            Viewport.prototype.getRight = function() {\n\t                return this.params.scrollX + this.chart.state.width;\n\t            };\n\t            Viewport.prototype.getBottom = function() {\n\t                return this.params.scrollY;\n\t            };\n\t            Viewport.prototype.getLeft = function() {\n\t                return this.params.scrollX;\n\t            };\n\t            Viewport.prototype.getTopVal = function() {\n\t                return this.getValByWorldY(this.getTop());\n\t            };\n\t            Viewport.prototype.getRightVal = function() {\n\t                return this.getValByWorldX(this.getRight());\n\t            };\n\t            Viewport.prototype.getBottomVal = function() {\n\t                return this.getValByWorldY(this.getBottom());\n\t            };\n\t            Viewport.prototype.getLeftVal = function() {\n\t                return this.getValByWorldX(this.getLeft());\n\t            };\n\t            return Viewport;\n\t        }();\n\t        exports.Viewport = Viewport;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        var Viewport_1 = __webpack_require__(25);\n\t        (function(INTERPOLATION_EVENT) {\n\t            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n\t            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n\t        })(exports.INTERPOLATION_EVENT || (exports.INTERPOLATION_EVENT = {}));\n\t        var INTERPOLATION_EVENT = exports.INTERPOLATION_EVENT;\n\t        var SCREEN_EVENTS = {\n\t            ZOOM_FRAME: \"zoomFrame\",\n\t            SCROLL_FRAME: \"scrollFrame\",\n\t            TRANSFORMATION_FRAME: \"transformationFrame\",\n\t            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n\t        };\n\t        var InterpolatedViewport = function(_super) {\n\t            __extends(InterpolatedViewport, _super);\n\t            function InterpolatedViewport(chart) {\n\t                _super.call(this, chart);\n\t                this.interpolationInProgress = false;\n\t                var _a = chart.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.setParams(chart.viewport.params);\n\t            }\n\t            InterpolatedViewport.prototype.onZoomInterpolation = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n\t            };\n\t            InterpolatedViewport.prototype.onScrollInterpolation = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n\t            };\n\t            InterpolatedViewport.prototype.onInterpolation = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n\t            };\n\t            InterpolatedViewport.prototype.onInterpolationEvent = function(cb) {\n\t                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n\t            };\n\t            InterpolatedViewport.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n\t            };\n\t            InterpolatedViewport.prototype.setParams = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.params.scrollX = scrollX;\n\t                if (scrollY != void 0) this.params.scrollY = scrollY;\n\t                if (zoomX != void 0) this.params.zoomX = zoomX;\n\t                if (zoomY != void 0) this.params.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\n\t                    this.params.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\n\t                    this.params.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n\t                var interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\n\t                var interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\n\t                if (interpolationStarted) {\n\t                    this.interpolationInProgress = true;\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\n\t                }\n\t                if (interpolationFinished) {\n\t                    this.interpolationInProgress = false;\n\t                }\n\t                if (!this.interpolationInProgress) {\n\t                    this.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\n\t                    this.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\n\t                }\n\t                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n\t                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n\t                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n\t                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n\t                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n\t                if (interpolationFinished) {\n\t                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\n\t                }\n\t            };\n\t            InterpolatedViewport.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            InterpolatedViewport.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var isDragMode = chart.state.cursor.dragMode;\n\t                var animations = chart.state.animations;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                var range = chart.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                if (isDragMode && !chart.state.inertialScroll) time = 0;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n\t                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.params.scrollX).to(targetX).onTick(function(value) {\n\t                    _this.setParams({\n\t                        scrollX: value\n\t                    });\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var range = chart.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n\t                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.scrollY).to(targetY).onTick(function(value) {\n\t                    _this.setParams({\n\t                        scrollY: value\n\t                    });\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var animations = chart.state.animations;\n\t                var targetZoom = chart.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n\t                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomX).to(targetZoom).onTick(function(value) {\n\t                    _this.setParams({\n\t                        zoomX: value\n\t                    });\n\t                });\n\t            };\n\t            InterpolatedViewport.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var chart = this.chart;\n\t                var targetZoom = chart.state.yAxis.range.zoom;\n\t                var animations = chart.state.animations;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n\t                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomY).to(targetZoom).onTick(function(value) {\n\t                    _this.setParams({\n\t                        zoomY: value\n\t                    });\n\t                });\n\t            };\n\t            return InterpolatedViewport;\n\t        }(Viewport_1.Viewport);\n\t        exports.InterpolatedViewport = InterpolatedViewport;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Easing_1 = __webpack_require__(28);\n\t        var AnimationManager = function() {\n\t            function AnimationManager() {\n\t                this.isAnimationsEnabled = true;\n\t                this.animations = [];\n\t                this.lastTickTime = Date.now();\n\t            }\n\t            AnimationManager.prototype.animate = function(time, timingFunction) {\n\t                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n\t                this.animations.push(animation);\n\t                return animation;\n\t            };\n\t            AnimationManager.prototype.animateObj = function(source, target) {};\n\t            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n\t                this.isAnimationsEnabled = isEnabled;\n\t            };\n\t            AnimationManager.prototype.tick = function() {\n\t                var now = Date.now();\n\t                var animations = this.animations;\n\t                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n\t                    var animation = animations[i_1];\n\t                    if (this.isAnimationsEnabled) {\n\t                        animation.tick(now);\n\t                    } else {\n\t                        animation.completeAndStop();\n\t                    }\n\t                }\n\t                var i = animations.length;\n\t                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n\t                this.lastTickTime = now;\n\t            };\n\t            AnimationManager.prototype.hasActiveAnimations = function() {\n\t                return this.animations.length > 0;\n\t            };\n\t            return AnimationManager;\n\t        }();\n\t        exports.AnimationManager = AnimationManager;\n\t        var Animation = function() {\n\t            function Animation(animationManager, time, createdTime, easing) {\n\t                if (easing === void 0) {\n\t                    easing = Easing_1.EASING.Quadratic.Out;\n\t                }\n\t                this.animationManager = animationManager;\n\t                this.time = time;\n\t                this.createdTime = createdTime;\n\t                this.easing = easing;\n\t                this.progress = 0;\n\t                this.delay = 0;\n\t                this.isFinished = false;\n\t                this.isStopped = false;\n\t                this.startTime = createdTime;\n\t            }\n\t            Animation.prototype.tick = function(now) {\n\t                if (!this.isStopped) {\n\t                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n\t                    this.setProgress(progress);\n\t                }\n\t            };\n\t            Animation.prototype.from = function(sourceObj) {\n\t                if (typeof sourceObj == \"object\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = {};\n\t                    var sourceIteralable = sourceObj;\n\t                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n\t                        this.initialObj[key] = sourceIteralable[key];\n\t                    }\n\t                } else if (typeof sourceObj == \"number\") {\n\t                    this.sourceObj = sourceObj;\n\t                    this.initialObj = sourceObj;\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.to = function(targetObj) {\n\t                this.targetObject = targetObj;\n\t                if (typeof this.initialObj == \"object\") {\n\t                    var initialIteralable = this.initialObj;\n\t                    for (var key in this.targetObject) {\n\t                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                    var targetIteralable = this.targetObject;\n\t                    for (var key in initialIteralable) {\n\t                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Animation.prototype.onTick = function(onTickCb) {\n\t                this.onTickCb = onTickCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.then = function(onFinishCb) {\n\t                this.onFinishCb = onFinishCb;\n\t                return this;\n\t            };\n\t            Animation.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Animation.prototype.completeAndStop = function() {\n\t                this.setProgress(1);\n\t            };\n\t            Animation.prototype.withDelay = function(delay) {\n\t                this.delay = delay;\n\t                this.startTime = this.createdTime + delay;\n\t                return this;\n\t            };\n\t            Animation.prototype.setProgress = function(progress) {\n\t                if (progress < 0) return;\n\t                progress = Math.min(progress, 1);\n\t                this.progress = progress;\n\t                var k = this.easing(progress);\n\t                if (typeof this.sourceObj == \"number\") {\n\t                    var initialVal = this.initialObj;\n\t                    var targetVal = this.targetObject;\n\t                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n\t                } else if (this.sourceObj && this.targetObject) {\n\t                    for (var key in this.initialObj) {\n\t                        var initialVal = this.initialObj[key];\n\t                        var targetVal = this.targetObject[key];\n\t                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n\t                    }\n\t                }\n\t                if (progress == 1) {\n\t                    this.isStopped = true;\n\t                    this.isFinished = true;\n\t                }\n\t                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n\t                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n\t            };\n\t            return Animation;\n\t        }();\n\t        exports.Animation = Animation;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        exports.EASING = {\n\t            Linear: {\n\t                None: function(k) {\n\t                    return k;\n\t                }\n\t            },\n\t            Quadratic: {\n\t                In: function(k) {\n\t                    return k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return k * (2 - k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k;\n\t                    }\n\t                    return -.5 * (--k * (k - 2) - 1);\n\t                }\n\t            },\n\t            Cubic: {\n\t                In: function(k) {\n\t                    return k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k + 2);\n\t                }\n\t            },\n\t            Quartic: {\n\t                In: function(k) {\n\t                    return k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return 1 - --k * k * k * k;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k;\n\t                    }\n\t                    return -.5 * ((k -= 2) * k * k * k - 2);\n\t                }\n\t            },\n\t            Quintic: {\n\t                In: function(k) {\n\t                    return k * k * k * k * k;\n\t                },\n\t                Out: function(k) {\n\t                    return --k * k * k * k * k + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * k * k * k * k * k;\n\t                    }\n\t                    return .5 * ((k -= 2) * k * k * k * k + 2);\n\t                }\n\t            },\n\t            Sinusoidal: {\n\t                In: function(k) {\n\t                    return 1 - Math.cos(k * Math.PI / 2);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sin(k * Math.PI / 2);\n\t                },\n\t                InOut: function(k) {\n\t                    return .5 * (1 - Math.cos(Math.PI * k));\n\t                }\n\t            },\n\t            Exponential: {\n\t                In: function(k) {\n\t                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n\t                },\n\t                Out: function(k) {\n\t                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * Math.pow(1024, k - 1);\n\t                    }\n\t                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n\t                }\n\t            },\n\t            Circular: {\n\t                In: function(k) {\n\t                    return 1 - Math.sqrt(1 - k * k);\n\t                },\n\t                Out: function(k) {\n\t                    return Math.sqrt(1 - --k * k);\n\t                },\n\t                InOut: function(k) {\n\t                    if ((k *= 2) < 1) {\n\t                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n\t                    }\n\t                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\t                }\n\t            },\n\t            Elastic: {\n\t                In: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                },\n\t                Out: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    if (k === 0) {\n\t                        return 0;\n\t                    }\n\t                    if (k === 1) {\n\t                        return 1;\n\t                    }\n\t                    k *= 2;\n\t                    if (k < 1) {\n\t                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t                    }\n\t                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\t                }\n\t            },\n\t            Back: {\n\t                In: function(k) {\n\t                    var s = 1.70158;\n\t                    return k * k * ((s + 1) * k - s);\n\t                },\n\t                Out: function(k) {\n\t                    var s = 1.70158;\n\t                    return --k * k * ((s + 1) * k + s) + 1;\n\t                },\n\t                InOut: function(k) {\n\t                    var s = 1.70158 * 1.525;\n\t                    if ((k *= 2) < 1) {\n\t                        return .5 * (k * k * ((s + 1) * k - s));\n\t                    }\n\t                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\t                }\n\t            },\n\t            Bounce: {\n\t                In: function(k) {\n\t                    return 1 - exports.EASING.Bounce.Out(1 - k);\n\t                },\n\t                Out: function(k) {\n\t                    if (k < 1 / 2.75) {\n\t                        return 7.5625 * k * k;\n\t                    } else if (k < 2 / 2.75) {\n\t                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n\t                    } else if (k < 2.5 / 2.75) {\n\t                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n\t                    } else {\n\t                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n\t                    }\n\t                },\n\t                InOut: function(k) {\n\t                    if (k < .5) {\n\t                        return exports.EASING.Bounce.In(k * 2) * .5;\n\t                    }\n\t                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(30);\n\t        var GridWidget_1 = __webpack_require__(32);\n\t        var Utils_1 = __webpack_require__(18);\n\t        var interfaces_1 = __webpack_require__(29);\n\t        var Color_1 = __webpack_require__(33);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.interpolatedViewport.params.scrollX, this.chart.interpolatedViewport.params.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.interpolatedViewport.onInterpolation(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.interpolatedViewport.onZoomInterpolation(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.Color(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.DoubleSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.interpolatedViewport.params, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(30);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(18);\n\t        var Color_1 = __webpack_require__(33);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chart = this.chart;\n\t                var localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var Color = function() {\n\t            function Color(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            Color.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            Color.numberToHexStr = function(value) {\n\t                var result = value.toString(16);\n\t                return \"#\" + \"0\".repeat(6 - result.length) + result;\n\t            };\n\t            Color.prototype.set = function(color) {\n\t                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n\t                var colorStr = color;\n\t                var rgba = Color.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = Color.numberToHexStr(this.value);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            Color.prototype.getTransparent = function(opacity) {\n\t                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n\t            };\n\t            return Color;\n\t        }();\n\t        exports.Color = Color;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(18);\n\t        var TrendsWidget_1 = __webpack_require__(35);\n\t        var Color_1 = __webpack_require__(33);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i < segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.viewport.pxToValByYAxis(this.chart.state.height), this.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(30);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(35);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(22);\n\t        var Utils_1 = __webpack_require__(18);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(35);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(22);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({\n\t                    side: THREE.DoubleSide\n\t                }));\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(18);\n\t        var EventEmmiter_1 = __webpack_require__(20);\n\t        var UniqCollectionItem = function() {\n\t            function UniqCollectionItem() {}\n\t            UniqCollectionItem.prototype.getId = function() {\n\t                return this._id;\n\t            };\n\t            return UniqCollectionItem;\n\t        }();\n\t        exports.UniqCollectionItem = UniqCollectionItem;\n\t        var ID_KEY = \"_id\";\n\t        var EVENTS = {\n\t            CREATE: \"create\",\n\t            UPDATE: \"update\",\n\t            REMOVE: \"remove\"\n\t        };\n\t        var UniqCollection = function() {\n\t            function UniqCollection(options) {\n\t                this.items = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t            }\n\t            UniqCollection.prototype.patch = function(models) {\n\t                var options = this.options;\n\t                for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n\t                    var model = models_1[_i];\n\t                    var id = model[ID_KEY];\n\t                    if (!id) Utils_1.Utils.error(\"Collection item without id detected\");\n\t                    var ind = this.getItemInd(id);\n\t                    var item = this.items[ind];\n\t                    var justCreated = false;\n\t                    if (!item) {\n\t                        justCreated = true;\n\t                        item = options.createInstance(model);\n\t                        this.items.push(item);\n\t                    }\n\t                    if (Object.keys(model).length > 1) {\n\t                        var prevProps = {};\n\t                        Utils_1.Utils.copyProps(item, prevProps, model);\n\t                        Utils_1.Utils.patch(item, model);\n\t                        justCreated && this.ee.emit(EVENTS.CREATE, item);\n\t                        this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\n\t                    } else {\n\t                        this.items.splice(ind, 1);\n\t                        this.ee.emit(EVENTS.REMOVE, item);\n\t                    }\n\t                }\n\t            };\n\t            UniqCollection.prototype.getItem = function(id) {\n\t                return this.items[this.getItemInd(id)];\n\t            };\n\t            UniqCollection.prototype.getLast = function() {\n\t                return this.items[this.items.length - 1];\n\t            };\n\t            UniqCollection.prototype.forEach = function(cb) {\n\t                for (var key in this.items) cb(this.items[key]);\n\t            };\n\t            UniqCollection.prototype.filter = function(cb) {\n\t                var result = [];\n\t                this.forEach(function(item) {\n\t                    return cb(item) && result.push(item);\n\t                });\n\t                return result;\n\t            };\n\t            UniqCollection.prototype.onCreate = function(cb) {\n\t                return this.ee.subscribe(EVENTS.CREATE, cb);\n\t            };\n\t            UniqCollection.prototype.onUpdate = function(cb) {\n\t                return this.ee.subscribe(EVENTS.UPDATE, cb);\n\t            };\n\t            UniqCollection.prototype.onRemove = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REMOVE, cb);\n\t            };\n\t            UniqCollection.prototype.getItemInd = function(id) {\n\t                return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\n\t            };\n\t            return UniqCollection;\n\t        }();\n\t        exports.UniqCollection = UniqCollection;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(31));\n\t        __export(__webpack_require__(32));\n\t        __export(__webpack_require__(35));\n\t        __export(__webpack_require__(36));\n\t        __export(__webpack_require__(34));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(43));\r\n\t__export(__webpack_require__(44));\r\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar TrendsMarksWidget_1 = __webpack_require__(44);\r\n\tvar Easing_1 = __webpack_require__(28);\r\n\t(function (TREND_MARK_SIDE) {\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n\t})(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\r\n\tvar TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\r\n\t(function (EVENTS) {\r\n\t    EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\r\n\t})(exports.EVENTS || (exports.EVENTS = {}));\r\n\tvar EVENTS = exports.EVENTS;\r\n\t(function (TEXTURE_FILTER) {\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"AUTO\"] = 0] = \"AUTO\";\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"LINEAR\"] = 1] = \"LINEAR\";\r\n\t    TEXTURE_FILTER[TEXTURE_FILTER[\"NEAREST\"] = 2] = \"NEAREST\";\r\n\t})(exports.TEXTURE_FILTER || (exports.TEXTURE_FILTER = {}));\r\n\tvar TEXTURE_FILTER = exports.TEXTURE_FILTER;\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    trendName: '',\r\n\t    title: '',\r\n\t    color: 'rgba(#0099d9, 0.5)',\r\n\t    xVal: 0,\r\n\t    orientation: TREND_MARK_SIDE.TOP,\r\n\t    width: 105,\r\n\t    height: 100,\r\n\t    margin: 10,\r\n\t    ease: Easing_1.EASING.Elastic.Out,\r\n\t    easeSpeed: 1000,\r\n\t    textureFilter: TEXTURE_FILTER.AUTO,\r\n\t    onRender: TrendsMarksWidget_1.DEFAULT_RENDERER\r\n\t};\r\n\tvar TrendsMarksPlugin = (function (_super) {\r\n\t    __extends(TrendsMarksPlugin, _super);\r\n\t    function TrendsMarksPlugin(trendsMarksPluginOptions) {\r\n\t        _super.call(this, trendsMarksPluginOptions);\r\n\t        this.items = {};\r\n\t        this.rects = {};\r\n\t    }\r\n\t    TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onStateChangedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMark = function (options) {\r\n\t        var marksOptions = this.getOptions().items;\r\n\t        var newMarkOptions = marksOptions.concat([options]);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = { items: newMarkOptions }, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chart.trendsManager.onSegmentsRebuilded(function () {\r\n\t            _this.updateMarksSegments();\r\n\t        });\r\n\t        this.chart.interpolatedViewport.onZoomInterpolation(function () { return _this.calclulateMarksPositions(); });\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onMarksChangeHandler = function () {\r\n\t        var trendsMarksOptions = this.getOptions().items;\r\n\t        var actualMarksNames = [];\r\n\t        for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\r\n\t            var options = trendsMarksOptions_1[_i];\r\n\t            var marks = this.items;\r\n\t            // set mark name\r\n\t            if (!options.name) {\r\n\t                options.name = three_charts_1.Utils.getUid().toString();\r\n\t                actualMarksNames.push(options.name);\r\n\t                if (marks[options.name])\r\n\t                    three_charts_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            }\r\n\t            else if (marks[options.name]) {\r\n\t                actualMarksNames.push(options.name);\r\n\t                continue;\r\n\t            }\r\n\t            options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            var mark = new TrendMark(this.chart, options);\r\n\t            marks[options.name] = mark;\r\n\t        }\r\n\t        // delete not relevant marks\r\n\t        for (var markName in this.items) {\r\n\t            if (actualMarksNames.indexOf(markName) != -1)\r\n\t                continue;\r\n\t            delete this.items[markName];\r\n\t        }\r\n\t        this.updateMarksSegments();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.calclulateMarksPositions = function () {\r\n\t        this.rects = {};\r\n\t        for (var markName in this.items) {\r\n\t            this.createMarkRect(this.items[markName]);\r\n\t        }\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMarkRect = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var chart = this.chart;\r\n\t        var options = mark.options;\r\n\t        var width = options.width, height = options.height, name = options.name;\r\n\t        var left = chart.viewport.getWorldXByVal(mark.xVal) - width / 2;\r\n\t        var top = chart.viewport.getWorldYByVal(mark.yVal);\r\n\t        var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t        var newOffset;\r\n\t        var row = 0;\r\n\t        if (isTopSideMark) {\r\n\t            top += height;\r\n\t        }\r\n\t        var markRect = [left, top, width, height];\r\n\t        var hasIntersection = false;\r\n\t        do {\r\n\t            for (var markName in this.rects) {\r\n\t                var rect = this.rects[markName];\r\n\t                hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\r\n\t                if (!hasIntersection)\r\n\t                    continue;\r\n\t                if (isTopSideMark) {\r\n\t                    markRect[1] = rect[1] + markRect[3] + options.margin;\r\n\t                }\r\n\t                else {\r\n\t                    markRect[1] = rect[1] - rect[3] - options.margin;\r\n\t                }\r\n\t                row++;\r\n\t                break;\r\n\t            }\r\n\t        } while (hasIntersection);\r\n\t        if (isTopSideMark) {\r\n\t            newOffset = markRect[1] - markRect[3] - chart.viewport.getWorldYByVal(mark.yVal);\r\n\t        }\r\n\t        else {\r\n\t            newOffset = chart.viewport.getWorldYByVal(mark.yVal) - markRect[1];\r\n\t        }\r\n\t        mark._setOffset(newOffset);\r\n\t        mark._setRow(row);\r\n\t        this.rects[name] = markRect;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.updateMarksSegments = function () {\r\n\t        var chart = this.chart;\r\n\t        var trends = chart.trendsManager.trends;\r\n\t        for (var trendName in trends) {\r\n\t            var marks = this.getTrendMarks(trendName);\r\n\t            var marksArr = [];\r\n\t            var xVals = [];\r\n\t            for (var markName in marks) {\r\n\t                var mark = marks[markName];\r\n\t                xVals.push(mark.options.xVal);\r\n\t                marksArr.push(mark);\r\n\t                mark._setSegment(null);\r\n\t            }\r\n\t            marksArr.sort(function (a, b) { return a.options.xVal - b.options.xVal; });\r\n\t            var trend = chart.getTrend(trendName);\r\n\t            var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function (a, b) { return a - b; }));\r\n\t            for (var markInd = 0; markInd < marksArr.length; markInd++) {\r\n\t                marksArr[markInd]._setSegment(points[markInd]);\r\n\t            }\r\n\t        }\r\n\t        this.calclulateMarksPositions();\r\n\t        this.ee.emit(EVENTS[EVENTS.CHANGE]);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getTrendMarks = function (trendName) {\r\n\t        var trendMarks = [];\r\n\t        for (var markName in this.items) {\r\n\t            if (this.items[markName].options.trendName != trendName)\r\n\t                continue;\r\n\t            trendMarks.push(this.items[markName]);\r\n\t        }\r\n\t        return trendMarks;\r\n\t    };\r\n\t    TrendsMarksPlugin.NAME = 'TrendsMarks';\r\n\t    TrendsMarksPlugin.providedWidgets = [TrendsMarksWidget_1.TrendsMarksWidget];\r\n\t    return TrendsMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.TrendsMarksPlugin = TrendsMarksPlugin;\r\n\tvar TrendMark = (function () {\r\n\t    function TrendMark(chart, options) {\r\n\t        this.row = 0;\r\n\t        this.options = options;\r\n\t        this.chart = chart;\r\n\t    }\r\n\t    /**\r\n\t     * only for internal usage\r\n\t     */\r\n\t    TrendMark.prototype._setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        if (!segment)\r\n\t            return;\r\n\t        var trend = this.chart.getTrend(this.options.trendName);\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            this.xVal = segment.endXVal;\r\n\t            this.yVal = segment.endYVal;\r\n\t        }\r\n\t        else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.maxYVal;\r\n\t        }\r\n\t        else {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.minYVal;\r\n\t        }\r\n\t    };\r\n\t    TrendMark.prototype._setOffset = function (offset) {\r\n\t        this.offset = offset;\r\n\t    };\r\n\t    TrendMark.prototype._setRow = function (row) {\r\n\t        this.row = row;\r\n\t    };\r\n\t    return TrendMark;\r\n\t}());\r\n\texports.TrendMark = TrendMark;\r\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(43);\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar LinearFilter = THREE.LinearFilter;\r\n\tvar NearestFilter = THREE.NearestFilter;\r\n\t/**\r\n\t * widget for drawing trends marks for all trends\r\n\t */\r\n\tvar TrendsMarksWidget = (function (_super) {\r\n\t    __extends(TrendsMarksWidget, _super);\r\n\t    function TrendsMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsMarksWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendMarksWidget;\r\n\t    };\r\n\t    TrendsMarksWidget.widgetName = \"TrendsMarks\";\r\n\t    return TrendsMarksWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsMarksWidget = TrendsMarksWidget;\r\n\t/**\r\n\t * widget for drawing trend marks for one trend\r\n\t */\r\n\tvar TrendMarksWidget = (function (_super) {\r\n\t    __extends(TrendMarksWidget, _super);\r\n\t    function TrendMarksWidget(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.marksWidgets = {};\r\n\t        this.object3D = new Object3D();\r\n\t        this.onMarksChange();\r\n\t    }\r\n\t    TrendMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.getTrendsMarksPlugin().onChange(function () { return _this.onMarksChange(); }));\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolationEvent(function (event) { return _this.onViewportInterpolationEvent(event); }));\r\n\t    };\r\n\t    TrendMarksWidget.prototype.getTrendsMarksPlugin = function () {\r\n\t        return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onMarksChange = function () {\r\n\t        var marksItems = this.getTrendsMarksPlugin().getItems();\r\n\t        var widgets = this.marksWidgets;\r\n\t        var actualMarksNames = [];\r\n\t        for (var markName in marksItems) {\r\n\t            actualMarksNames.push(markName);\r\n\t            if (!widgets[markName])\r\n\t                this.createMarkWidget(marksItems[markName]);\r\n\t        }\r\n\t        for (var markName in this.marksWidgets) {\r\n\t            if (actualMarksNames.indexOf(markName) !== -1)\r\n\t                continue;\r\n\t            this.destroyMarkWidget(markName);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.createMarkWidget = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var markWidget = new TrendMarkWidget(this.chart, mark);\r\n\t        this.marksWidgets[mark.options.name] = markWidget;\r\n\t        this.object3D.add(markWidget.getObject3D());\r\n\t    };\r\n\t    TrendMarksWidget.prototype.destroyMarkWidget = function (markName) {\r\n\t        this.object3D.remove(this.marksWidgets[markName].getObject3D());\r\n\t        delete this.marksWidgets[markName];\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onViewportInterpolationEvent = function (event) {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onScreenTransformationEventHandler(event);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onZoomFrame = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onZoomFrameHandler();\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onSegmentsAnimate = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onSegmentsAnimate();\r\n\t        }\r\n\t    };\r\n\t    return TrendMarksWidget;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendMarksWidget = TrendMarksWidget;\r\n\t/**\r\n\t * widget for drawing one trend mark\r\n\t */\r\n\tvar TrendMarkWidget = (function () {\r\n\t    function TrendMarkWidget(chart, trendMark) {\r\n\t        this.chart = chart;\r\n\t        this.mark = trendMark;\r\n\t        this.initObject();\r\n\t        this.show();\r\n\t    }\r\n\t    TrendMarkWidget.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var options = this.mark.options;\r\n\t        var width = options.width, height = options.height;\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(width, height, function (ctx) {\r\n\t            options.onRender(_this, ctx, _this.chart);\r\n\t        });\r\n\t        // make text sharp when interpolatedViewport is not transforming\r\n\t        switch (options.textureFilter) {\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.AUTO:\r\n\t                texture.magFilter = this.chart.interpolatedViewport.interpolationInProgress ? LinearFilter : NearestFilter;\r\n\t                break;\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.LINEAR:\r\n\t                texture.magFilter = LinearFilter;\r\n\t                break;\r\n\t            case TrendsMarksPlugin_1.TEXTURE_FILTER.NEAREST:\r\n\t                texture.magFilter = NearestFilter;\r\n\t                break;\r\n\t        }\r\n\t        texture.needsUpdate = true;\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.markMesh = new Mesh(new THREE.PlaneGeometry(width, height), material);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.markMesh;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onSegmentsAnimate = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onZoomFrameHandler = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onScreenTransformationEventHandler = function (event) {\r\n\t        var texture = this.markMesh.material.map;\r\n\t        // make text sharp when interpolatedViewport is not transforming\r\n\t        if (this.mark.options.textureFilter !== TrendsMarksPlugin_1.TEXTURE_FILTER.AUTO)\r\n\t            return;\r\n\t        texture.magFilter = (event == three_charts_1.INTERPOLATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.updatePosition = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        var mark = this.mark;\r\n\t        var viewport = this.chart.interpolatedViewport;\r\n\t        var posX = viewport.getWorldXByVal(mark.xVal);\r\n\t        var posY = viewport.getWorldYByVal(mark.yVal);\r\n\t        this.markMesh.position.set(posX, posY, 0);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.show = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        this.updatePosition();\r\n\t        this.markMesh.scale.set(0.01, 0.01, 1);\r\n\t        this.chart.animationManager\r\n\t            .animate(1000, this.mark.options.ease)\r\n\t            .from(this.markMesh.scale)\r\n\t            .to({ x: 1, y: 1 });\r\n\t    };\r\n\t    return TrendMarkWidget;\r\n\t}());\r\n\texports.TrendMarkWidget = TrendMarkWidget;\r\n\texports.DEFAULT_RENDERER = function (trendMarkWidget, ctx, chart) {\r\n\t    var mark = trendMarkWidget.mark;\r\n\t    var options = mark.options;\r\n\t    var isTopSide = options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\r\n\t    var color = options.color !== void 0 ?\r\n\t        new three_charts_1.Color(options.color) :\r\n\t        new three_charts_1.Color(chart.getTrend(options.trendName).getOptions().lineColor);\r\n\t    var rgbaColor = color.getTransparent(0.5).rgbaStr;\r\n\t    var width = options.width, height = options.height;\r\n\t    var centerX = Math.round(width / 2);\r\n\t    var centerY = Math.round(height / 2);\r\n\t    var font = chart.state.font.m;\r\n\t    var textOffset = parseInt(font);\r\n\t    var textPosX = centerX;\r\n\t    var textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\r\n\t    // draw rect\r\n\t    ctx.fillStyle = rgbaColor;\r\n\t    ctx.strokeStyle = rgbaColor;\r\n\t    ctx.fillRect(0, isTopSide ? 0 : height, width, isTopSide ? textOffset * 2 : -textOffset * 2);\r\n\t    // draw dot\r\n\t    ctx.beginPath();\r\n\t    ctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\r\n\t    ctx.fill();\r\n\t    // draw line\r\n\t    var lineEndY = textPosY;\r\n\t    ctx.beginPath();\r\n\t    ctx.moveTo(centerX, centerY);\r\n\t    ctx.lineTo(centerX, lineEndY);\r\n\t    ctx.stroke();\r\n\t    // draw text\r\n\t    ctx.beginPath();\r\n\t    ctx.textAlign = 'center';\r\n\t    ctx.font = font;\r\n\t    ctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\r\n\t    ctx.fillText(options.title, Math.round(textPosX), Math.round(textPosY));\r\n\t    // uncomment to preview mark rect\r\n\t    // ctx.rect(0, 0, width, height);\r\n\t    // ctx.stroke();\r\n\t};\r\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(46));\r\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar ANIMATION_TIME = 1000;\r\n\tvar ANIMATION_DELAY = 300;\r\n\t/**\r\n\t * widget adds blinking beacon on trends end\r\n\t * activated when trend.hasBeacon = true\r\n\t */\r\n\tvar TrendsBeaconWidget = (function (_super) {\r\n\t    __extends(TrendsBeaconWidget, _super);\r\n\t    function TrendsBeaconWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsBeaconWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendBeacon;\r\n\t    };\r\n\t    TrendsBeaconWidget.widgetName = 'TrendsBeacon';\r\n\t    return TrendsBeaconWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsBeaconWidget = TrendsBeaconWidget;\r\n\tvar TrendBeacon = (function (_super) {\r\n\t    __extends(TrendBeacon, _super);\r\n\t    function TrendBeacon(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    TrendBeacon.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\r\n\t    };\r\n\t    TrendBeacon.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendBeacon.prototype.onTrendChange = function () {\r\n\t        this.updatePosition();\r\n\t        this.animate();\r\n\t    };\r\n\t    TrendBeacon.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.chart.onScroll(function () { return _this.updatePosition(); }));\r\n\t    };\r\n\t    TrendBeacon.prototype.initObject = function () {\r\n\t        // add beacon\r\n\t        var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendBeacon.createTexture(), transparent: true }));\r\n\t        this.setInitialState();\r\n\t        // add dot\r\n\t        light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({ map: TrendBeacon.createTexture() })));\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t    };\r\n\t    TrendBeacon.prototype.animate = function () {\r\n\t        var _this = this;\r\n\t        if (!this.chart.state.animations.enabled)\r\n\t            return;\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t        this.setInitialState();\r\n\t        var mesh = this.mesh;\r\n\t        var animationObject = {\r\n\t            scale: mesh.scale.x,\r\n\t            opacity: mesh.material.opacity\r\n\t        };\r\n\t        this.animation = this.chart.animationManager\r\n\t            .animate(ANIMATION_TIME)\r\n\t            .withDelay(ANIMATION_DELAY)\r\n\t            .from(animationObject)\r\n\t            .to({ scale: 1, opacity: 0 })\r\n\t            .onTick(function (animationObject) {\r\n\t            mesh.scale.set(animationObject.scale, animationObject.scale, 1);\r\n\t            mesh.material.opacity = animationObject.opacity;\r\n\t        }).then(function () {\r\n\t            _this.setInitialState();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.setInitialState = function () {\r\n\t        this.mesh.scale.set(0.2, 0.2, 1);\r\n\t        this.mesh.material.opacity = 1;\r\n\t    };\r\n\t    TrendBeacon.prototype.onDestroy = function () {\r\n\t        _super.prototype.onDestroy.call(this);\r\n\t        if (this.animation)\r\n\t            this.animation.stop();\r\n\t    };\r\n\t    TrendBeacon.createTexture = function () {\r\n\t        var h = 32, w = 32;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\r\n\t            ctx.fillStyle = 'white';\r\n\t            ctx.fill();\r\n\t        });\r\n\t    };\r\n\t    TrendBeacon.prototype.onTransformationFrame = function () {\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.onSegmentsAnimate = function (trendsSegments) {\r\n\t        this.segment = trendsSegments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendBeacon.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var xVal, yVal;\r\n\t        var currentAnimationState = this.segment.currentAnimationState;\r\n\t        if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            xVal = currentAnimationState.endXVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        else {\r\n\t            xVal = currentAnimationState.xVal;\r\n\t            yVal = currentAnimationState.endYVal;\r\n\t        }\r\n\t        var viewport = chart.interpolatedViewport;\r\n\t        var x = viewport.getWorldXByVal(xVal);\r\n\t        var y = viewport.getWorldYByVal(yVal);\r\n\t        var screenWidth = chart.state.width;\r\n\t        var screenX = viewport.getViewportXByWorldX(x);\r\n\t        if (screenX < 0) {\r\n\t            x = viewport.getLeft();\r\n\t        }\r\n\t        if (screenX > screenWidth)\r\n\t            x = viewport.getRight();\r\n\t        this.mesh.position.set(x, y, 0.1);\r\n\t    };\r\n\t    return TrendBeacon;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendBeacon = TrendBeacon;\r\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(48));\r\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar PlaneBufferGeometry = THREE.PlaneBufferGeometry;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\t/**\r\n\t * widget adds loading indicator\r\n\t * activated when animations enabled\r\n\t */\r\n\tvar TrendsLoadingWidget = (function (_super) {\r\n\t    __extends(TrendsLoadingWidget, _super);\r\n\t    function TrendsLoadingWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsLoadingWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendLoading;\r\n\t    };\r\n\t    TrendsLoadingWidget.widgetName = 'TrendsLoading';\r\n\t    return TrendsLoadingWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsLoadingWidget = TrendsLoadingWidget;\r\n\tvar TrendLoading = (function (_super) {\r\n\t    __extends(TrendLoading, _super);\r\n\t    function TrendLoading(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.isActive = false;\r\n\t        // add beacon\r\n\t        this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({ map: TrendLoading.createTexture(), transparent: true }));\r\n\t        this.deactivate();\r\n\t    }\r\n\t    TrendLoading.widgetIsEnabled = function (trendOptions, chart) {\r\n\t        return trendOptions.enabled && chart.state.animations.enabled;\r\n\t    };\r\n\t    TrendLoading.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendLoading.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.bindEvent(this.trend.onPrependRequest(function () { return _this.activate(); }));\r\n\t    };\r\n\t    TrendLoading.prototype.prependData = function () {\r\n\t        this.deactivate();\r\n\t    };\r\n\t    TrendLoading.prototype.activate = function () {\r\n\t        var mesh = this.mesh;\r\n\t        mesh.material.opacity = 1;\r\n\t        mesh.rotation.z = 0;\r\n\t        var animation = TweenLite.to(this.mesh.rotation, 0.5, { z: Math.PI * 2 });\r\n\t        animation.eventCallback('onComplete', function () {\r\n\t            animation.restart();\r\n\t        });\r\n\t        this.animation = animation;\r\n\t        this.isActive = true;\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.deactivate = function () {\r\n\t        this.animation && this.animation.kill();\r\n\t        this.mesh.material.opacity = 0;\r\n\t        this.isActive = false;\r\n\t    };\r\n\t    TrendLoading.createTexture = function () {\r\n\t        var h = 64, w = 64;\r\n\t        return three_charts_1.Utils.createTexture(h, w, function (ctx) {\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t            ctx.lineWidth = 5;\r\n\t            var center = h / 2;\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, 0, Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\r\n\t            ctx.stroke();\r\n\t            ctx.beginPath();\r\n\t            ctx.arc(center, center, 3, 0, Math.PI * 2);\r\n\t            ctx.stroke();\r\n\t        });\r\n\t    };\r\n\t    TrendLoading.prototype.onZoomFrame = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendLoading.prototype.updatePosition = function () {\r\n\t        if (!this.isActive)\r\n\t            return;\r\n\t        var trend = this.trend;\r\n\t        // set new widget position\r\n\t        var segment = trend.segmentsManager.getStartSegment();\r\n\t        var x, y;\r\n\t        if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\r\n\t            x = segment.currentAnimationState.startXVal;\r\n\t            y = segment.currentAnimationState.startYVal;\r\n\t        }\r\n\t        else {\r\n\t            x = segment.currentAnimationState.xVal - segment.maxLength;\r\n\t            y = segment.currentAnimationState.yVal;\r\n\t        }\r\n\t        var viewport = this.chart.interpolatedViewport;\r\n\t        this.mesh.position.set(viewport.getWorldXByVal(x), viewport.getWorldYByVal(y), 0);\r\n\t    };\r\n\t    return TrendLoading;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendLoading = TrendLoading;\r\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(50));\r\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar CANVAS_WIDTH = 150;\r\n\tvar CANVAS_HEIGHT = 64;\r\n\tvar OFFSET_X = 15;\r\n\tvar TrendsIndicatorWidget = (function (_super) {\r\n\t    __extends(TrendsIndicatorWidget, _super);\r\n\t    function TrendsIndicatorWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsIndicatorWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendIndicator;\r\n\t    };\r\n\t    TrendsIndicatorWidget.widgetName = 'TrendsIndicator';\r\n\t    return TrendsIndicatorWidget;\r\n\t}(three_charts_1.TrendsWidget));\r\n\texports.TrendsIndicatorWidget = TrendsIndicatorWidget;\r\n\tvar TrendIndicator = (function (_super) {\r\n\t    __extends(TrendIndicator, _super);\r\n\t    function TrendIndicator(chart, trendName) {\r\n\t        _super.call(this, chart, trendName);\r\n\t        this.initObject();\r\n\t        this.onTrendChange();\r\n\t    }\r\n\t    TrendIndicator.widgetIsEnabled = function (trendOptions) {\r\n\t        return trendOptions.enabled && trendOptions.hasIndicator;\r\n\t    };\r\n\t    TrendIndicator.prototype.getObject3D = function () {\r\n\t        return this.mesh;\r\n\t    };\r\n\t    TrendIndicator.prototype.onTrendChange = function () {\r\n\t        // update canvas value\r\n\t        var trendData = this.trend.getData();\r\n\t        var lastItem = trendData[trendData.length - 1];\r\n\t        var texture = this.mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        // uncomment to preview indicator rect\r\n\t        // ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n\t        // ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n\t        ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    TrendIndicator.prototype.initObject = function () {\r\n\t        var _this = this;\r\n\t        var color = new three_charts_1.Color(this.trend.getOptions().lineColor);\r\n\t        var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function (ctx) {\r\n\t            ctx.beginPath();\r\n\t            ctx.font = _this.chart.state.font.l;\r\n\t            ctx.fillStyle = color.rgbaStr;\r\n\t            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\r\n\t    };\r\n\t    TrendIndicator.prototype.onTransformationFrame = function () {\r\n\t        // set new widget position\r\n\t        this.segment = this.trend.segmentsManager.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.onSegmentsAnimate = function (segments) {\r\n\t        // set new widget position\r\n\t        this.segment = segments.getEndSegment();\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendIndicator.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\r\n\t        var viewport = chart.interpolatedViewport;\r\n\t        var screenWidth = chart.state.width;\r\n\t        var x = viewport.getWorldXByVal(segmentEndXVal) + OFFSET_X;\r\n\t        var y = viewport.getWorldYByVal(segmentEndYVal);\r\n\t        var screenX = viewport.getViewportXByWorldX(x);\r\n\t        var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\r\n\t        if (indicatorIsOutOfScreen) {\r\n\t            if (screenX < 0)\r\n\t                x = viewport.getLeft() + 20;\r\n\t            if (screenX > screenWidth)\r\n\t                x = viewport.getRight() - CANVAS_WIDTH / 2 - 10;\r\n\t            y -= 25;\r\n\t        }\r\n\t        this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\r\n\t    };\r\n\t    return TrendIndicator;\r\n\t}(three_charts_1.TrendWidget));\r\n\texports.TrendIndicator = TrendIndicator;\r\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar AxisMarksWidget_1 = __webpack_require__(52);\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    lineWidth: 3,\r\n\t    width: 200,\r\n\t    value: 0,\r\n\t    stickToEdges: false,\r\n\t    textColor: 'rgba(#45a9e1, 0.8)',\r\n\t    lineColor: 'rgba(#45a9e1, 0.6)',\r\n\t    title: '',\r\n\t    ease: three_charts_1.EASING.Quadratic.Out,\r\n\t    easeSpeed: 500,\r\n\t    opacity: 1\r\n\t};\r\n\tvar AxisMark = (function (_super) {\r\n\t    __extends(AxisMark, _super);\r\n\t    function AxisMark(axisMarkPlugin, chart) {\r\n\t        _super.call(this);\r\n\t        this.axisMarkPlugin = axisMarkPlugin;\r\n\t        this.chart = chart;\r\n\t        three_charts_1.Utils.patch(this, AXIS_MARK_DEFAULT_OPTIONS);\r\n\t    }\r\n\t    AxisMark.prototype.remove = function () {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [{ _id: this.getId() }], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMark.prototype.update = function (newOptions) {\r\n\t        var options = three_charts_1.Utils.deepMerge({ _id: this.getId() }, newOptions);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [options], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    return AxisMark;\r\n\t}(three_charts_1.UniqCollectionItem));\r\n\texports.AxisMark = AxisMark;\r\n\tvar AxisMarksPlugin = (function (_super) {\r\n\t    __extends(AxisMarksPlugin, _super);\r\n\t    function AxisMarksPlugin(axisMarksPluginOptions) {\r\n\t        var _this = this;\r\n\t        _super.call(this, axisMarksPluginOptions);\r\n\t        this.marksCollection = new three_charts_1.UniqCollection({\r\n\t            createInstance: function () { return new AxisMark(_this, _this.chart); }\r\n\t        });\r\n\t    }\r\n\t    AxisMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onStateChangedHandler(this.getOptions());\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.onStateChangedHandler = function (axisMarksOptions) {\r\n\t        this.marksCollection.patch(axisMarksOptions);\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.createMark = function (markOptions) {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = [markOptions], _a) });\r\n\t        return this.marksCollection.getLast();\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMarksPlugin.NAME = 'AxisMarks';\r\n\t    AxisMarksPlugin.providedWidgets = [AxisMarksWidget_1.AxisMarksWidget];\r\n\t    return AxisMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.AxisMarksPlugin = AxisMarksPlugin;\r\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(51);\r\n\t/**\r\n\t * widget for shows marks on axis\r\n\t */\r\n\tvar AxisMarksWidget = (function (_super) {\r\n\t    __extends(AxisMarksWidget, _super);\r\n\t    function AxisMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.axisMarksWidgets = [];\r\n\t    }\r\n\t    AxisMarksWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t        this.axisMarksPlugin.marksCollection.forEach(function (mark) { return _this.createAxisMarkWidget(mark); });\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisMarksWidget.prototype.createAxisMarkWidget = function (axisMark) {\r\n\t        var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\r\n\t        this.axisMarksWidgets.push(axisMarkWidget);\r\n\t        this.object3D.add(axisMarkWidget.getObject3D());\r\n\t    };\r\n\t    AxisMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var marksCollection = this.axisMarksPlugin.marksCollection;\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function () { return _this.updateMarksPositions(); }), this.chart.onResize(function () { return _this.onResizeHandler(); }), this.chart.onChange(function (changedProps) { return _this.onStateChangeHandler(changedProps); }), marksCollection.onCreate(function (mark) { return _this.createAxisMarkWidget(mark); }), marksCollection.onUpdate(function (mark, changedOptions) { return _this.onMarkUpdateHandler(mark, changedOptions); }), marksCollection.onRemove(function (mark) { return _this.onMarkRemoveHandler(mark); }));\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkUpdateHandler = function (mark, changedOptions) {\r\n\t        var widget = this.axisMarksWidgets.find(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        widget.update(changedOptions);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkRemoveHandler = function (mark) {\r\n\t        var ind = this.axisMarksWidgets.findIndex(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        var widget = this.axisMarksWidgets[ind];\r\n\t        this.object3D.remove(widget.getObject3D());\r\n\t        this.axisMarksWidgets.splice(ind, 1);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.updateMarksPositions = function () {\r\n\t        this.forEach(function (widget) { return widget.updatePosition(); });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        this.forEach(function (widget) { return widget.onStateChangeHandler(changedProps); });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onResizeHandler = function () {\r\n\t        this.forEach(function (widget) {\r\n\t            widget.resize();\r\n\t            widget.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.forEach = function (fn) {\r\n\t        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            fn(widget);\r\n\t        }\r\n\t    };\r\n\t    AxisMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarksWidget.widgetName = 'AxisMarks';\r\n\t    return AxisMarksWidget;\r\n\t}(three_charts_1.ChartWidget));\r\n\texports.AxisMarksWidget = AxisMarksWidget;\r\n\texports.DEFAULT_AXIS_MARK_RENDERER = function (axisMarkWidget, ctx, width, height, chart) {\r\n\t    var markOptions = axisMarkWidget.axisMark;\r\n\t    var lineColor = new three_charts_1.Color(markOptions.lineColor);\r\n\t    var textColor = new three_charts_1.Color(markOptions.textColor);\r\n\t    var font = chart.state.font.l;\r\n\t    var offset = parseInt(font);\r\n\t    ctx.clearRect(0, 0, width, height);\r\n\t    ctx.beginPath();\r\n\t    ctx.strokeStyle = lineColor.rgbaStr;\r\n\t    ctx.fillStyle = lineColor.rgbaStr;\r\n\t    ctx.lineWidth = markOptions.lineWidth;\r\n\t    ctx.font = font;\r\n\t    if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t        ctx.moveTo(width / 2, 0);\r\n\t        ctx.lineTo(width / 2, height);\r\n\t        ctx.stroke();\r\n\t        ctx.fillStyle = textColor.rgbaStr;\r\n\t        ctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\r\n\t    }\r\n\t    else {\r\n\t        ctx.moveTo(0, height / 2);\r\n\t        ctx.lineTo(width, height / 2);\r\n\t        ctx.stroke();\r\n\t        ctx.fillStyle = textColor.rgbaStr;\r\n\t        ctx.fillText(markOptions.title, offset, height / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2));\r\n\t    }\r\n\t};\r\n\tvar AxisMarkWidget = (function () {\r\n\t    function AxisMarkWidget(chart, axisMark) {\r\n\t        this.isStickOnTop = false;\r\n\t        this.isStickOnBottom = false;\r\n\t        this.displayedValue = '';\r\n\t        this.height = 0;\r\n\t        this.width = 0;\r\n\t        this.frameValue = 0;\r\n\t        this.frameOpacity = 0;\r\n\t        this.chart = chart;\r\n\t        this.axisMark = axisMark;\r\n\t        this.frameOpacity = axisMark.opacity;\r\n\t        this.frameValue = axisMark.value;\r\n\t        this.object3D = new Object3D();\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    AxisMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.initObject = function () {\r\n\t        this.width = this.chart.state.width;\r\n\t        this.height = this.chart.state.height;\r\n\t        var markOptions = this.axisMark;\r\n\t        if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t            this.width = markOptions.width;\r\n\t        }\r\n\t        else {\r\n\t            this.height = markOptions.width;\r\n\t        }\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(this.width, this.height);\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(this.width, this.height), new MeshBasicMaterial({ map: texture, transparent: true }));\r\n\t        this.object3D.add(this.mesh);\r\n\t        this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        var needRender = this.axisMark.needRender && this.axisMark.needRender(this, this.chart, changedProps);\r\n\t        needRender && this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.render = function () {\r\n\t        var markOptions = this.axisMark;\r\n\t        var mesh = this.mesh;\r\n\t        var texture = mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        var renderer = markOptions.renderer ? markOptions.renderer : exports.DEFAULT_AXIS_MARK_RENDERER;\r\n\t        if (markOptions.displayedValue)\r\n\t            this.displayedValue = markOptions.displayedValue(this, this.chart);\r\n\t        renderer(this, ctx, this.width, this.height, this.chart);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.resize = function () {\r\n\t        this.object3D.remove(this.mesh);\r\n\t        this.initObject();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.update = function (options) {\r\n\t        var _this = this;\r\n\t        var mark = this.axisMark;\r\n\t        this.animation && this.animation.stop();\r\n\t        this.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\r\n\t            .from([this.frameValue, this.frameOpacity])\r\n\t            .to([mark.value, mark.opacity])\r\n\t            .onTick(function (arr) {\r\n\t            _this.frameValue = arr[0];\r\n\t            _this.frameOpacity = arr[1];\r\n\t            _this.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarkWidget.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var screen = chart.interpolatedViewport;\r\n\t        var mark = this.axisMark;\r\n\t        var isXAxis = mark.axisType == three_charts_1.AXIS_TYPE.X;\r\n\t        var hasStickMode = mark.stickToEdges;\r\n\t        var _a = chart.state, width = _a.width, height = _a.height;\r\n\t        var val = this.frameValue;\r\n\t        var opactity = this.frameOpacity;\r\n\t        var material = this.mesh.material;\r\n\t        material.opacity = opactity;\r\n\t        if (isXAxis) {\r\n\t            // TODO: make stickToEdges mode for AXIS_TYPE.X\r\n\t            this.mesh.position.x = screen.getWorldXByVal(val);\r\n\t            this.mesh.position.y = screen.params.scrollY + height / 2;\r\n\t        }\r\n\t        else {\r\n\t            var bottomVal = screen.getBottomVal();\r\n\t            var topVal = screen.getTopVal();\r\n\t            var needToStickOnTop = hasStickMode && val > topVal;\r\n\t            var needToStickOnBottom = hasStickMode && val < bottomVal;\r\n\t            this.mesh.position.x = screen.params.scrollX + width / 2;\r\n\t            if (needToStickOnTop) {\r\n\t                this.isStickOnTop = true;\r\n\t                this.mesh.position.y = screen.getTop();\r\n\t            }\r\n\t            else if (needToStickOnBottom) {\r\n\t                this.isStickOnBottom = true;\r\n\t                this.mesh.position.y = screen.getBottom();\r\n\t            }\r\n\t            else {\r\n\t                this.isStickOnBottom = this.isStickOnTop = false;\r\n\t                this.mesh.position.y = screen.getWorldYByVal(val);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return AxisMarkWidget;\r\n\t}());\r\n\texports.AxisMarkWidget = AxisMarkWidget;\r\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar ZonesWidget_1 = __webpack_require__(54);\r\n\t(function (ZONE_TYPE) {\r\n\t    ZONE_TYPE[ZONE_TYPE[\"X_RANGE\"] = 0] = \"X_RANGE\";\r\n\t})(exports.ZONE_TYPE || (exports.ZONE_TYPE = {}));\r\n\tvar ZONE_TYPE = exports.ZONE_TYPE;\r\n\tvar ZONE_DEFAULT_OPTIONS = {\r\n\t    name: '',\r\n\t    title: '',\r\n\t    type: ZONE_TYPE.X_RANGE,\r\n\t    bgColor: '#b81820',\r\n\t    easeSpeed: 500,\r\n\t    opacity: 0.4,\r\n\t    position: {\r\n\t        startXVal: 0,\r\n\t        startYVal: 0,\r\n\t        endXVal: 0,\r\n\t        endYVal: 0\r\n\t    }\r\n\t};\r\n\tvar Zone = (function (_super) {\r\n\t    __extends(Zone, _super);\r\n\t    function Zone(zonePlugin, chart) {\r\n\t        _super.call(this);\r\n\t        this.zonePlugin = zonePlugin;\r\n\t        this.chart = chart;\r\n\t        three_charts_1.Utils.patch(this, ZONE_DEFAULT_OPTIONS);\r\n\t        if (this.type == ZONE_TYPE.X_RANGE) {\r\n\t            this.position.startYVal = -Infinity;\r\n\t            this.position.endYVal = Infinity;\r\n\t        }\r\n\t    }\r\n\t    Zone.prototype.remove = function () {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[ZonesPlugin.NAME] = [{ _id: this.getId() }], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    Zone.prototype.update = function (newOptions) {\r\n\t        var options = three_charts_1.Utils.deepMerge({ _id: this.getId() }, newOptions);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[ZonesPlugin.NAME] = [options], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    return Zone;\r\n\t}(three_charts_1.UniqCollectionItem));\r\n\texports.Zone = Zone;\r\n\tvar ZonesPlugin = (function (_super) {\r\n\t    __extends(ZonesPlugin, _super);\r\n\t    function ZonesPlugin(pluginOptions) {\r\n\t        var _this = this;\r\n\t        _super.call(this, pluginOptions);\r\n\t        this.items = new three_charts_1.UniqCollection({\r\n\t            createInstance: function () { return new Zone(_this, _this.chart); }\r\n\t        });\r\n\t    }\r\n\t    ZonesPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onStateChangedHandler(this.getOptions());\r\n\t    };\r\n\t    ZonesPlugin.prototype.onStateChangedHandler = function (options) {\r\n\t        this.items.patch(options);\r\n\t    };\r\n\t    ZonesPlugin.prototype.create = function (zoneOptions) {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = [zoneOptions], _a) });\r\n\t        return this.items.getLast();\r\n\t        var _a;\r\n\t    };\r\n\t    ZonesPlugin.NAME = 'Zone';\r\n\t    ZonesPlugin.providedWidgets = [ZonesWidget_1.ZonesWidget];\r\n\t    return ZonesPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.ZonesPlugin = ZonesPlugin;\r\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(40);\r\n\tvar ZonesPlugin_1 = __webpack_require__(53);\r\n\t/**\r\n\t * widget for shows marks on axis\r\n\t */\r\n\tvar ZonesWidget = (function (_super) {\r\n\t    __extends(ZonesWidget, _super);\r\n\t    function ZonesWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.items = [];\r\n\t    }\r\n\t    ZonesWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.zonesPlugin = this.chart.getPlugin(ZonesPlugin_1.ZonesPlugin.NAME);\r\n\t        this.zonesPlugin.items.forEach(function (zone) { return _this.createZoneWidget(zone); });\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    ZonesWidget.prototype.createZoneWidget = function (zone) {\r\n\t        var widget = new ZoneWidget(this.chart, zone);\r\n\t        this.items.push(widget);\r\n\t        this.object3D.add(widget.getObject3D());\r\n\t    };\r\n\t    ZonesWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var zones = this.zonesPlugin.items;\r\n\t        this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function () { return _this.updateZonesPositions(); }), zones.onCreate(function (item) { return _this.createZoneWidget(item); }), zones.onUpdate(function (item, changedOptions) { return _this.onZoneUpdateHandler(item, changedOptions); }), zones.onRemove(function (item) { return _this.onZoneRemoveHandler(item); }));\r\n\t    };\r\n\t    ZonesWidget.prototype.onZoneUpdateHandler = function (mark, changedOptions) {\r\n\t        var widget = this.items.find(function (widget) { return widget.zone.getId() == mark.getId(); });\r\n\t        widget.update(changedOptions);\r\n\t    };\r\n\t    ZonesWidget.prototype.onZoneRemoveHandler = function (mark) {\r\n\t        var ind = this.items.findIndex(function (widget) { return widget.zone.getId() == mark.getId(); });\r\n\t        var widget = this.items[ind];\r\n\t        this.object3D.remove(widget.getObject3D());\r\n\t        this.items.splice(ind, 1);\r\n\t    };\r\n\t    ZonesWidget.prototype.updateZonesPositions = function () {\r\n\t        this.forEach(function (widget) { return widget.updatePosition(); });\r\n\t    };\r\n\t    ZonesWidget.prototype.forEach = function (fn) {\r\n\t        for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            fn(widget);\r\n\t        }\r\n\t    };\r\n\t    ZonesWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    ZonesWidget.widgetName = 'Zones';\r\n\t    return ZonesWidget;\r\n\t}(three_charts_1.ChartWidget));\r\n\texports.ZonesWidget = ZonesWidget;\r\n\tvar ZoneWidget = (function () {\r\n\t    function ZoneWidget(chart, zone) {\r\n\t        this.chart = chart;\r\n\t        this.zone = zone;\r\n\t        this.object3D = new Object3D();\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    ZoneWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    ZoneWidget.prototype.initObject = function () {\r\n\t        var height = this.chart.state.height;\r\n\t        var bgColor = new three_charts_1.Color(this.zone.bgColor);\r\n\t        this.animatedProps = three_charts_1.Utils.deepMerge({}, this.zone.position);\r\n\t        this.animatedProps.opacity = this.zone.opacity;\r\n\t        // mesh scheme\r\n\t        //\r\n\t        // vert0 +---+ vert3\r\n\t        //       |\\  |\r\n\t        // face1 | \\ | face2\r\n\t        // \t     |  \\|\r\n\t        // vert1 +---+ vert2\r\n\t        var geometry = new Geometry();\r\n\t        geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\r\n\t        geometry.faces.push(new THREE.Face3(0, 1, 2), new THREE.Face3(3, 0, 2));\r\n\t        this.mesh = new Mesh(geometry, new MeshBasicMaterial({ transparent: true, color: bgColor.value, opacity: bgColor.a }));\r\n\t        this.mesh.frustumCulled = false;\r\n\t        this.object3D.add(this.mesh);\r\n\t    };\r\n\t    ZoneWidget.prototype.update = function (options) {\r\n\t        var _this = this;\r\n\t        var zone = this.zone;\r\n\t        this.animation && this.animation.stop();\r\n\t        this.animation = this.chart.animationManager.animate(zone.easeSpeed, zone.ease)\r\n\t            .from(this.animatedProps)\r\n\t            .to({\r\n\t            startXVal: zone.position.startXVal,\r\n\t            startYVal: zone.position.startYVal,\r\n\t            endXVal: zone.position.endXVal,\r\n\t            endYVal: zone.position.endYVal,\r\n\t            opacity: zone.opacity\r\n\t        })\r\n\t            .onTick(function () { return _this.updatePosition(); });\r\n\t    };\r\n\t    ZoneWidget.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var viewport = chart.interpolatedViewport;\r\n\t        var zone = this.zone;\r\n\t        var _a = this.animatedProps, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, opacity = _a.opacity;\r\n\t        var startY = isFinite(startYVal) ? viewport.getWorldYByVal(startYVal) : viewport.getBottom();\r\n\t        var endY = isFinite(endYVal) ? viewport.getWorldYByVal(endYVal) : viewport.getTop();\r\n\t        var startX = viewport.getWorldXByVal(startXVal);\r\n\t        var endX = viewport.getWorldXByVal(endXVal);\r\n\t        var geometry = this.mesh.geometry;\r\n\t        var material = this.mesh.material;\r\n\t        var verts = geometry.vertices;\r\n\t        material.opacity = this.animatedProps.opacity;\r\n\t        verts[0].set(startX, endY, 0);\r\n\t        verts[1].set(startX, startY, 0);\r\n\t        verts[2].set(endX, startY, 0);\r\n\t        verts[3].set(endX, endY, 0);\r\n\t        geometry.verticesNeedUpdate = true;\r\n\t    };\r\n\t    return ZoneWidget;\r\n\t}());\r\n\texports.ZoneWidget = ZoneWidget;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d25ec2d15a9c15a0f671\n **/","\n// import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE, AXIS_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/src/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/src/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/src/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/src/TrendsIndicatorWidget';\nimport { AxisMarksPlugin } from \"../plugins/src/AxisMarksPlugin/AxisMarksPlugin\";\nimport { ZonesPlugin } from \"../plugins/src/ZonesPlugin/ZonesPlugin\";\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chartView: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\txVal: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon 224', 'Serg Morrs 453', 'Harry Potter 554']),\n\t\t\tcolor: Utils.getRandomItem(['rgba(#ad57b2, 0.5)', 'rgba(#0099d9, 0.5)']),\n\t\t\torientation: orientation,\n\t\t\t// textureFilter: TEXTURE_FILTER.NEAREST,\n\t\t\tuserData: {\n\t\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\t\tdescriptionColor: descriptionColor\n\t\t\t}\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchartView = new ChartView({\n\t\tyAxis: {\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 0, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000,\n\t\t\t\tmargin: {end: 200},\n\t\t\t},\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\t// minSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew ZonesPlugin([]),\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]}),\n\t\tnew AxisMarksPlugin([\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.startTime, name: 'test', title: 'DEADLINE', userData: {feel: 'aa'}},\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600'},\n\t\t\t{axisType: AXIS_TYPE.X, value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187'},\n\n\t\t])\n\t]\n\t);\n\n\n\tlet axisMarks = chartView.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\tlet zones = chartView.chart.getPlugin(ZonesPlugin.NAME) as ZonesPlugin;\n\n\tsetTimeout(() => {\n\t\tlet zone = zones.create({position: {startXVal: dsMain.startTime, endXVal: dsMain.startTime + 5000}});\n\t\tlet mark = axisMarks.createMark({axisType: AXIS_TYPE.Y, value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true});\n\t\tsetInterval(() => {\n\t\t\tmark.update({value: mark.value + 1});\n\t\t\t//zone.update({position: {startXVal: zone.position.startXVal + 1000}})\n\t\t}, 1000);\n\t}, 1000);\n\t\n\t(<any>window)['chartView'] = chartView;\n\n\tvar mainTrend = chartView.getTrend('main');\n\n\tmainTrend.onDataChange(() => {\n\n\t\tvar markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\tif (markOptions) setTimeout(() => {\n\t\t\tlet trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t\ttrendsMarks.createMark(markOptions);\n\t\t}, 500);\n\t});\n\n\n\n\tvar i = 0;\n\n\tchartView.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chartView.getTrend('main').appendData([val]);\n\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchartView.chart.setState({autoScroll: false});\n\t\t\tchartView.chart.zoomToRange(range);\n\t\t\tchartView.chart.scrollToEnd().then(() => {\n\t\t\t\tchartView.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","export declare type TEase = (k: number) => number;\n\n/**\n * Easing from tween.js lib https://github.com/tweenjs/tween.js\n **/\nexport const EASING = {\n\n\tLinear: {\n\n\t\tNone: function (k: number) {\n\n\t\t\treturn k;\n\n\t\t}\n\n\t},\n\n\tQuadratic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k * (2 - k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * (--k * (k - 2) - 1);\n\n\t\t}\n\n\t},\n\n\tCubic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tQuartic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn 1 - (--k * k * k * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn - 0.5 * ((k -= 2) * k * k * k - 2);\n\n\t\t}\n\n\t},\n\n\tQuintic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k * k * k * k * k;\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn --k * k * k * k * k + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * k * k * k * k * k;\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * k * k * k + 2);\n\n\t\t}\n\n\t},\n\n\tSinusoidal: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.cos(k * Math.PI / 2);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sin(k * Math.PI / 2);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\treturn 0.5 * (1 - Math.cos(Math.PI * k));\n\n\t\t}\n\n\t},\n\n\tExponential: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn k === 0 ? 0 : Math.pow(1024, k - 1);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn k === 1 ? 1 : 1 - Math.pow(2, - 10 * k);\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * Math.pow(1024, k - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (- Math.pow(2, - 10 * (k - 1)) + 2);\n\n\t\t}\n\n\t},\n\n\tCircular: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - Math.sqrt(1 - k * k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\treturn Math.sqrt(1 - (--k * k));\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn - 0.5 * (Math.sqrt(1 - k * k) - 1);\n\t\t\t}\n\n\t\t\treturn 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n\n\t\t}\n\n\t},\n\n\tElastic: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (k === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tk *= 2;\n\n\t\t\tif (k < 1) {\n\t\t\t\treturn -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\t\t\t}\n\n\t\t\treturn 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n\t\t}\n\n\t},\n\n\tBack: {\n\n\t\tIn: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn k * k * ((s + 1) * k - s);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tvar s = 1.70158;\n\n\t\t\treturn --k * k * ((s + 1) * k + s) + 1;\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tvar s = 1.70158 * 1.525;\n\n\t\t\tif ((k *= 2) < 1) {\n\t\t\t\treturn 0.5 * (k * k * ((s + 1) * k - s));\n\t\t\t}\n\n\t\t\treturn 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n\n\t\t}\n\n\t},\n\n\tBounce: {\n\n\t\tIn: function (k: number) {\n\n\t\t\treturn 1 - EASING.Bounce.Out(1 - k);\n\n\t\t},\n\n\t\tOut: function (k: number) {\n\n\t\t\tif (k < (1 / 2.75)) {\n\t\t\t\treturn 7.5625 * k * k;\n\t\t\t} else if (k < (2 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n\t\t\t} else if (k < (2.5 / 2.75)) {\n\t\t\t\treturn 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\t\t\t} else {\n\t\t\t\treturn 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n\t\t\t}\n\n\t\t},\n\n\t\tInOut: function (k: number) {\n\n\t\t\tif (k < 0.5) {\n\t\t\t\treturn EASING.Bounce.In(k * 2) * 0.5;\n\t\t\t}\n\n\t\t\treturn EASING.Bounce.Out(k * 2 - 1) * 0.5 + 0.5;\n\n\t\t}\n\n\t}\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Easing.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 40\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __webpack_require__(2);\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(29));\n        __export(__webpack_require__(26));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(24));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(38));\n        __export(__webpack_require__(30));\n        __export(__webpack_require__(39));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(33));\n        __export(__webpack_require__(27));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(28));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(3);\n        __webpack_require__(4);\n        __webpack_require__(5);\n        exports.isPlainObject = __webpack_require__(6);\n        exports.EE2 = __webpack_require__(8);\n        var es6_promise_1 = __webpack_require__(9);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(10);\n        exports.deepExtend = __webpack_require__(11);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports) {\n        THREE.SpriteCanvasMaterial = function(parameters) {\n            THREE.Material.call(this);\n            this.type = \"SpriteCanvasMaterial\";\n            this.color = new THREE.Color(16777215);\n            this.program = function(context, color) {};\n            this.setValues(parameters);\n        };\n        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n            var material = new THREE.SpriteCanvasMaterial();\n            material.copy(this);\n            material.color.copy(this.color);\n            material.program = this.program;\n            return material;\n        };\n        THREE.CanvasRenderer = function(parameters) {\n            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n            parameters = parameters || {};\n            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n                alpha: parameters.alpha === true\n            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n            if (_context.setLineDash === undefined) {\n                _context.setLineDash = function() {};\n            }\n            this.domElement = _canvas;\n            this.autoClear = true;\n            this.sortObjects = true;\n            this.sortElements = true;\n            this.info = {\n                render: {\n                    vertices: 0,\n                    faces: 0\n                }\n            };\n            this.supportsVertexTextures = function() {};\n            this.setFaceCulling = function() {};\n            this.getContext = function() {\n                return _context;\n            };\n            this.getContextAttributes = function() {\n                return _context.getContextAttributes();\n            };\n            this.getPixelRatio = function() {\n                return _pixelRatio;\n            };\n            this.setPixelRatio = function(value) {\n                if (value !== undefined) _pixelRatio = value;\n            };\n            this.setSize = function(width, height, updateStyle) {\n                _canvasWidth = width * _pixelRatio;\n                _canvasHeight = height * _pixelRatio;\n                _canvas.width = _canvasWidth;\n                _canvas.height = _canvasHeight;\n                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n                if (updateStyle !== false) {\n                    _canvas.style.width = width + \"px\";\n                    _canvas.style.height = height + \"px\";\n                }\n                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _contextGlobalAlpha = 1;\n                _contextGlobalCompositeOperation = 0;\n                _contextStrokeStyle = null;\n                _contextFillStyle = null;\n                _contextLineWidth = null;\n                _contextLineCap = null;\n                _contextLineJoin = null;\n                this.setViewport(0, 0, width, height);\n            };\n            this.setViewport = function(x, y, width, height) {\n                _viewportX = x * _pixelRatio;\n                _viewportY = y * _pixelRatio;\n                _viewportWidth = width * _pixelRatio;\n                _viewportHeight = height * _pixelRatio;\n            };\n            this.setScissor = function() {};\n            this.setScissorTest = function() {};\n            this.setClearColor = function(color, alpha) {\n                _clearColor.set(color);\n                _clearAlpha = alpha !== undefined ? alpha : 1;\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n            };\n            this.setClearColorHex = function(hex, alpha) {\n                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n                this.setClearColor(hex, alpha);\n            };\n            this.getClearColor = function() {\n                return _clearColor;\n            };\n            this.getClearAlpha = function() {\n                return _clearAlpha;\n            };\n            this.getMaxAnisotropy = function() {\n                return 0;\n            };\n            this.clear = function() {\n                if (_clearBox.isEmpty() === false) {\n                    _clearBox.intersect(_clipBox);\n                    _clearBox.expandByScalar(2);\n                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n                    if (_clearAlpha < 1) {\n                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    if (_clearAlpha > 0) {\n                        setBlending(THREE.NormalBlending);\n                        setOpacity(1);\n                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    _clearBox.makeEmpty();\n                }\n            };\n            this.clearColor = function() {};\n            this.clearDepth = function() {};\n            this.clearStencil = function() {};\n            this.render = function(scene, camera) {\n                if (camera instanceof THREE.Camera === false) {\n                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n                    return;\n                }\n                if (this.autoClear === true) this.clear();\n                _this.info.render.vertices = 0;\n                _this.info.render.faces = 0;\n                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n                _elements = _renderData.elements;\n                _lights = _renderData.lights;\n                _camera = camera;\n                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n                calculateLights();\n                for (var e = 0, el = _elements.length; e < el; e++) {\n                    var element = _elements[e];\n                    var material = element.material;\n                    if (material === undefined || material.opacity === 0) continue;\n                    _elemBox.makeEmpty();\n                    if (element instanceof THREE.RenderableSprite) {\n                        _v1 = element;\n                        _v1.x *= _canvasWidthHalf;\n                        _v1.y *= _canvasHeightHalf;\n                        renderSprite(_v1, element, material);\n                    } else if (element instanceof THREE.RenderableLine) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderLine(_v1, _v2, element, material);\n                        }\n                    } else if (element instanceof THREE.RenderableFace) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v3 = element.v3;\n                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _v3.positionScreen.x *= _canvasWidthHalf;\n                        _v3.positionScreen.y *= _canvasHeightHalf;\n                        if (material.overdraw > 0) {\n                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n                        }\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n                        }\n                    }\n                    _clearBox.union(_elemBox);\n                }\n                _context.setTransform(1, 0, 0, 1, 0, 0);\n            };\n            function calculateLights() {\n                _ambientLight.setRGB(0, 0, 0);\n                _directionalLights.setRGB(0, 0, 0);\n                _pointLights.setRGB(0, 0, 0);\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    var lightColor = light.color;\n                    if (light instanceof THREE.AmbientLight) {\n                        _ambientLight.add(lightColor);\n                    } else if (light instanceof THREE.DirectionalLight) {\n                        _directionalLights.add(lightColor);\n                    } else if (light instanceof THREE.PointLight) {\n                        _pointLights.add(lightColor);\n                    }\n                }\n            }\n            function calculateLight(position, normal, color) {\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    _lightColor.copy(light.color);\n                    if (light instanceof THREE.DirectionalLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n                        var amount = normal.dot(lightPosition);\n                        if (amount <= 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    } else if (light instanceof THREE.PointLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n                        if (amount <= 0) continue;\n                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n                        if (amount == 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    }\n                }\n            }\n            function renderSprite(v1, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                var scaleX = element.scale.x * _canvasWidthHalf;\n                var scaleY = element.scale.y * _canvasHeightHalf;\n                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n                _elemBox.min.set(v1.x - dist, v1.y - dist);\n                _elemBox.max.set(v1.x + dist, v1.y + dist);\n                if (material instanceof THREE.SpriteMaterial) {\n                    var texture = material.map;\n                    if (texture !== null) {\n                        var pattern = _patterns[texture.id];\n                        if (pattern === undefined || pattern.version !== texture.version) {\n                            pattern = textureToPattern(texture);\n                            _patterns[texture.id] = pattern;\n                        }\n                        if (pattern.canvas !== undefined) {\n                            setFillStyle(pattern.canvas);\n                            var bitmap = texture.image;\n                            var ox = bitmap.width * texture.offset.x;\n                            var oy = bitmap.height * texture.offset.y;\n                            var sx = bitmap.width * texture.repeat.x;\n                            var sy = bitmap.height * texture.repeat.y;\n                            var cx = scaleX / sx;\n                            var cy = scaleY / sy;\n                            _context.save();\n                            _context.translate(v1.x, v1.y);\n                            if (material.rotation !== 0) _context.rotate(material.rotation);\n                            _context.translate(-scaleX / 2, -scaleY / 2);\n                            _context.scale(cx, cy);\n                            _context.translate(-ox, -oy);\n                            _context.fillRect(ox, oy, sx, sy);\n                            _context.restore();\n                        }\n                    } else {\n                        setFillStyle(material.color.getStyle());\n                        _context.save();\n                        _context.translate(v1.x, v1.y);\n                        if (material.rotation !== 0) _context.rotate(material.rotation);\n                        _context.scale(scaleX, -scaleY);\n                        _context.fillRect(-.5, -.5, 1, 1);\n                        _context.restore();\n                    }\n                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n                    setStrokeStyle(material.color.getStyle());\n                    setFillStyle(material.color.getStyle());\n                    _context.save();\n                    _context.translate(v1.x, v1.y);\n                    if (material.rotation !== 0) _context.rotate(material.rotation);\n                    _context.scale(scaleX, scaleY);\n                    material.program(_context);\n                    _context.restore();\n                }\n            }\n            function renderLine(v1, v2, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _context.beginPath();\n                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n                if (material instanceof THREE.LineBasicMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    if (material.vertexColors !== THREE.VertexColors) {\n                        setStrokeStyle(material.color.getStyle());\n                    } else {\n                        var colorStyle1 = element.vertexColors[0].getStyle();\n                        var colorStyle2 = element.vertexColors[1].getStyle();\n                        if (colorStyle1 === colorStyle2) {\n                            setStrokeStyle(colorStyle1);\n                        } else {\n                            try {\n                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n                                grad.addColorStop(0, colorStyle1);\n                                grad.addColorStop(1, colorStyle2);\n                            } catch (exception) {\n                                grad = colorStyle1;\n                            }\n                            setStrokeStyle(grad);\n                        }\n                    }\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                } else if (material instanceof THREE.LineDashedMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    setStrokeStyle(material.color.getStyle());\n                    setLineDash([ material.dashSize, material.gapSize ]);\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                    setLineDash([]);\n                }\n            }\n            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n                _this.info.render.vertices += 3;\n                _this.info.render.faces++;\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _v1x = v1.positionScreen.x;\n                _v1y = v1.positionScreen.y;\n                _v2x = v2.positionScreen.x;\n                _v2y = v2.positionScreen.y;\n                _v3x = v3.positionScreen.x;\n                _v3y = v3.positionScreen.y;\n                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n                    _diffuseColor.copy(material.color);\n                    _emissiveColor.copy(material.emissive);\n                    if (material.vertexColors === THREE.FaceColors) {\n                        _diffuseColor.multiply(element.color);\n                    }\n                    _color.copy(_ambientLight);\n                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n                    calculateLight(_centroid, element.normalModel, _color);\n                    _color.multiply(_diffuseColor).add(_emissiveColor);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n                    if (material.map !== null) {\n                        var mapping = material.map.mapping;\n                        if (mapping === THREE.UVMapping) {\n                            _uvs = element.uvs;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n                        }\n                    } else if (material.envMap !== null) {\n                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n                            _uv1x = .5 * _normal.x + .5;\n                            _uv1y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n                            _uv2x = .5 * _normal.x + .5;\n                            _uv2y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n                            _uv3x = .5 * _normal.x + .5;\n                            _uv3y = .5 * _normal.y + .5;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n                        }\n                    } else {\n                        _color.copy(material.color);\n                        if (material.vertexColors === THREE.FaceColors) {\n                            _color.multiply(element.color);\n                        }\n                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                    }\n                } else if (material instanceof THREE.MeshNormalMaterial) {\n                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else {\n                    _color.setRGB(1, 1, 1);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                }\n            }\n            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n                _context.beginPath();\n                _context.moveTo(x0, y0);\n                _context.lineTo(x1, y1);\n                _context.lineTo(x2, y2);\n                _context.closePath();\n            }\n            function strokePath(color, linewidth, linecap, linejoin) {\n                setLineWidth(linewidth);\n                setLineCap(linecap);\n                setLineJoin(linejoin);\n                setStrokeStyle(color.getStyle());\n                _context.stroke();\n                _elemBox.expandByScalar(linewidth * 2);\n            }\n            function fillPath(color) {\n                setFillStyle(color.getStyle());\n                _context.fill();\n            }\n            function textureToPattern(texture) {\n                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n                    return {\n                        canvas: undefined,\n                        version: texture.version\n                    };\n                }\n                var image = texture.image;\n                if (image.complete === false) {\n                    return {\n                        canvas: undefined,\n                        version: 0\n                    };\n                }\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                var context = canvas.getContext(\"2d\");\n                context.setTransform(1, 0, 0, -1, 0, image.height);\n                context.drawImage(image, 0, 0);\n                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n                var repeat = \"no-repeat\";\n                if (repeatX === true && repeatY === true) {\n                    repeat = \"repeat\";\n                } else if (repeatX === true) {\n                    repeat = \"repeat-x\";\n                } else if (repeatY === true) {\n                    repeat = \"repeat-y\";\n                }\n                var pattern = _context.createPattern(canvas, repeat);\n                if (texture.onUpdate) texture.onUpdate(texture);\n                return {\n                    canvas: pattern,\n                    version: texture.version\n                };\n            }\n            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n                var pattern = _patterns[texture.id];\n                if (pattern === undefined || pattern.version !== texture.version) {\n                    pattern = textureToPattern(texture);\n                    _patterns[texture.id] = pattern;\n                }\n                if (pattern.canvas !== undefined) {\n                    setFillStyle(pattern.canvas);\n                } else {\n                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n                    _context.fill();\n                    return;\n                }\n                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n                u0 = (u0 + offsetX) * width;\n                v0 = (v0 + offsetY) * height;\n                u1 = (u1 + offsetX) * width;\n                v1 = (v1 + offsetY) * height;\n                u2 = (u2 + offsetX) * width;\n                v2 = (v2 + offsetY) * height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                if (det === 0) return;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.fill();\n                _context.restore();\n            }\n            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n                u0 *= width;\n                v0 *= height;\n                u1 *= width;\n                v1 *= height;\n                u2 *= width;\n                v2 *= height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.clip();\n                _context.drawImage(image, 0, 0);\n                _context.restore();\n            }\n            function expand(v1, v2, pixels) {\n                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n                if (det === 0) return;\n                idet = pixels / Math.sqrt(det);\n                x *= idet;\n                y *= idet;\n                v2.x += x;\n                v2.y += y;\n                v1.x -= x;\n                v1.y -= y;\n            }\n            function setOpacity(value) {\n                if (_contextGlobalAlpha !== value) {\n                    _context.globalAlpha = value;\n                    _contextGlobalAlpha = value;\n                }\n            }\n            function setBlending(value) {\n                if (_contextGlobalCompositeOperation !== value) {\n                    if (value === THREE.NormalBlending) {\n                        _context.globalCompositeOperation = \"source-over\";\n                    } else if (value === THREE.AdditiveBlending) {\n                        _context.globalCompositeOperation = \"lighter\";\n                    } else if (value === THREE.SubtractiveBlending) {\n                        _context.globalCompositeOperation = \"darker\";\n                    } else if (value === THREE.MultiplyBlending) {\n                        _context.globalCompositeOperation = \"multiply\";\n                    }\n                    _contextGlobalCompositeOperation = value;\n                }\n            }\n            function setLineWidth(value) {\n                if (_contextLineWidth !== value) {\n                    _context.lineWidth = value;\n                    _contextLineWidth = value;\n                }\n            }\n            function setLineCap(value) {\n                if (_contextLineCap !== value) {\n                    _context.lineCap = value;\n                    _contextLineCap = value;\n                }\n            }\n            function setLineJoin(value) {\n                if (_contextLineJoin !== value) {\n                    _context.lineJoin = value;\n                    _contextLineJoin = value;\n                }\n            }\n            function setStrokeStyle(value) {\n                if (_contextStrokeStyle !== value) {\n                    _context.strokeStyle = value;\n                    _contextStrokeStyle = value;\n                }\n            }\n            function setFillStyle(value) {\n                if (_contextFillStyle !== value) {\n                    _context.fillStyle = value;\n                    _contextFillStyle = value;\n                }\n            }\n            function setLineDash(value) {\n                if (_contextLineDash.length !== value.length) {\n                    _context.setLineDash(value);\n                    _contextLineDash = value;\n                }\n            }\n        };\n    }, function(module, exports) {\n        THREE.RenderableObject = function() {\n            this.id = 0;\n            this.object = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableFace = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.v3 = new THREE.RenderableVertex();\n            this.normalModel = new THREE.Vector3();\n            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n            this.vertexNormalsLength = 0;\n            this.color = new THREE.Color();\n            this.material = null;\n            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableVertex = function() {\n            this.position = new THREE.Vector3();\n            this.positionWorld = new THREE.Vector3();\n            this.positionScreen = new THREE.Vector4();\n            this.visible = true;\n        };\n        THREE.RenderableVertex.prototype.copy = function(vertex) {\n            this.positionWorld.copy(vertex.positionWorld);\n            this.positionScreen.copy(vertex.positionScreen);\n        };\n        THREE.RenderableLine = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n            this.material = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableSprite = function() {\n            this.id = 0;\n            this.object = null;\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.rotation = 0;\n            this.scale = new THREE.Vector2();\n            this.material = null;\n            this.renderOrder = 0;\n        };\n        THREE.Projector = function() {\n            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n                objects: [],\n                lights: [],\n                elements: []\n            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3((-1), (-1), (-1)), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n            this.projectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n                vector.project(camera);\n            };\n            this.unprojectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n                vector.unproject(camera);\n            };\n            this.pickingRay = function(vector, camera) {\n                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n            };\n            var RenderList = function() {\n                var normals = [];\n                var uvs = [];\n                var object = null;\n                var material = null;\n                var normalMatrix = new THREE.Matrix3();\n                function setObject(value) {\n                    object = value;\n                    material = object.material;\n                    normalMatrix.getNormalMatrix(object.matrixWorld);\n                    normals.length = 0;\n                    uvs.length = 0;\n                }\n                function projectVertex(vertex) {\n                    var position = vertex.position;\n                    var positionWorld = vertex.positionWorld;\n                    var positionScreen = vertex.positionScreen;\n                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n                    var invW = 1 / positionScreen.w;\n                    positionScreen.x *= invW;\n                    positionScreen.y *= invW;\n                    positionScreen.z *= invW;\n                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n                }\n                function pushVertex(x, y, z) {\n                    _vertex = getNextVertexInPool();\n                    _vertex.position.set(x, y, z);\n                    projectVertex(_vertex);\n                }\n                function pushNormal(x, y, z) {\n                    normals.push(x, y, z);\n                }\n                function pushUv(x, y) {\n                    uvs.push(x, y);\n                }\n                function checkTriangleVisibility(v1, v2, v3) {\n                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n                    _points3[0] = v1.positionScreen;\n                    _points3[1] = v2.positionScreen;\n                    _points3[2] = v3.positionScreen;\n                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n                }\n                function checkBackfaceCulling(v1, v2, v3) {\n                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n                }\n                function pushLine(a, b) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    _line = getNextLineInPool();\n                    _line.id = object.id;\n                    _line.v1.copy(v1);\n                    _line.v2.copy(v2);\n                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n                    _line.renderOrder = object.renderOrder;\n                    _line.material = object.material;\n                    _renderData.elements.push(_line);\n                }\n                function pushTriangle(a, b, c) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    var v3 = _vertexPool[c];\n                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n                        _face = getNextFaceInPool();\n                        _face.id = object.id;\n                        _face.v1.copy(v1);\n                        _face.v2.copy(v2);\n                        _face.v3.copy(v3);\n                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                        _face.renderOrder = object.renderOrder;\n                        _face.normalModel.fromArray(normals, a * 3);\n                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n                        for (var i = 0; i < 3; i++) {\n                            var normal = _face.vertexNormalsModel[i];\n                            normal.fromArray(normals, arguments[i] * 3);\n                            normal.applyMatrix3(normalMatrix).normalize();\n                            var uv = _face.uvs[i];\n                            uv.fromArray(uvs, arguments[i] * 2);\n                        }\n                        _face.vertexNormalsLength = 3;\n                        _face.material = object.material;\n                        _renderData.elements.push(_face);\n                    }\n                }\n                return {\n                    setObject: setObject,\n                    projectVertex: projectVertex,\n                    checkTriangleVisibility: checkTriangleVisibility,\n                    checkBackfaceCulling: checkBackfaceCulling,\n                    pushVertex: pushVertex,\n                    pushNormal: pushNormal,\n                    pushUv: pushUv,\n                    pushLine: pushLine,\n                    pushTriangle: pushTriangle\n                };\n            };\n            var renderList = new RenderList();\n            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n                _faceCount = 0;\n                _lineCount = 0;\n                _spriteCount = 0;\n                _renderData.elements.length = 0;\n                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n                if (camera.parent === null) camera.updateMatrixWorld();\n                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n                _frustum.setFromMatrix(_viewProjectionMatrix);\n                _objectCount = 0;\n                _renderData.objects.length = 0;\n                _renderData.lights.length = 0;\n                function addObject(object) {\n                    _object = getNextObjectInPool();\n                    _object.id = object.id;\n                    _object.object = object;\n                    _vector3.setFromMatrixPosition(object.matrixWorld);\n                    _vector3.applyProjection(_viewProjectionMatrix);\n                    _object.z = _vector3.z;\n                    _object.renderOrder = object.renderOrder;\n                    _renderData.objects.push(_object);\n                }\n                scene.traverseVisible(function(object) {\n                    if (object instanceof THREE.Light) {\n                        _renderData.lights.push(object);\n                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line) {\n                        if (object.material.visible === false) return;\n                        if (object.frustumCulled === true && _frustum.intersectsObject(object) === false) return;\n                        addObject(object);\n                    } else if (object instanceof THREE.Sprite) {\n                        if (object.material.visible === false) return;\n                        if (object.frustumCulled === true && _frustum.intersectsSprite(object) === false) return;\n                        addObject(object);\n                    }\n                });\n                if (sortObjects === true) {\n                    _renderData.objects.sort(painterSort);\n                }\n                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n                    var object = _renderData.objects[o].object;\n                    var geometry = object.geometry;\n                    renderList.setObject(object);\n                    _modelMatrix = object.matrixWorld;\n                    _vertexCount = 0;\n                    if (object instanceof THREE.Mesh) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            var groups = geometry.groups;\n                            if (attributes.position === undefined) continue;\n                            var positions = attributes.position.array;\n                            for (var i = 0, l = positions.length; i < l; i += 3) {\n                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                            }\n                            if (attributes.normal !== undefined) {\n                                var normals = attributes.normal.array;\n                                for (var i = 0, l = normals.length; i < l; i += 3) {\n                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n                                }\n                            }\n                            if (attributes.uv !== undefined) {\n                                var uvs = attributes.uv.array;\n                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n                                }\n                            }\n                            if (geometry.index !== null) {\n                                var indices = geometry.index.array;\n                                if (groups.length > 0) {\n                                    for (var o = 0; o < groups.length; o++) {\n                                        var group = groups[o];\n                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                        }\n                                    }\n                                } else {\n                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                    }\n                                }\n                            } else {\n                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n                                    renderList.pushTriangle(i, i + 1, i + 2);\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            var vertices = geometry.vertices;\n                            var faces = geometry.faces;\n                            var faceVertexUvs = geometry.faceVertexUvs[0];\n                            _normalMatrix.getNormalMatrix(_modelMatrix);\n                            var material = object.material;\n                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n                                var vertex = vertices[v];\n                                _vector3.copy(vertex);\n                                if (material.morphTargets === true) {\n                                    var morphTargets = geometry.morphTargets;\n                                    var morphInfluences = object.morphTargetInfluences;\n                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                                        var influence = morphInfluences[t];\n                                        if (influence === 0) continue;\n                                        var target = morphTargets[t];\n                                        var targetVertex = target.vertices[v];\n                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n                                    }\n                                }\n                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n                            }\n                            for (var f = 0, fl = faces.length; f < fl; f++) {\n                                var face = faces[f];\n                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n                                if (material === undefined) continue;\n                                var side = material.side;\n                                var v1 = _vertexPool[face.a];\n                                var v2 = _vertexPool[face.b];\n                                var v3 = _vertexPool[face.c];\n                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n                                if (side !== THREE.DoubleSide) {\n                                    if (side === THREE.FrontSide && visible === false) continue;\n                                    if (side === THREE.BackSide && visible === true) continue;\n                                }\n                                _face = getNextFaceInPool();\n                                _face.id = object.id;\n                                _face.v1.copy(v1);\n                                _face.v2.copy(v2);\n                                _face.v3.copy(v3);\n                                _face.normalModel.copy(face.normal);\n                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                    _face.normalModel.negate();\n                                }\n                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n                                var faceVertexNormals = face.vertexNormals;\n                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n                                    var normalModel = _face.vertexNormalsModel[n];\n                                    normalModel.copy(faceVertexNormals[n]);\n                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                        normalModel.negate();\n                                    }\n                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n                                }\n                                _face.vertexNormalsLength = faceVertexNormals.length;\n                                var vertexUvs = faceVertexUvs[f];\n                                if (vertexUvs !== undefined) {\n                                    for (var u = 0; u < 3; u++) {\n                                        _face.uvs[u].copy(vertexUvs[u]);\n                                    }\n                                }\n                                _face.color = face.color;\n                                _face.material = material;\n                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                                _face.renderOrder = object.renderOrder;\n                                _renderData.elements.push(_face);\n                            }\n                        }\n                    } else if (object instanceof THREE.Line) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            if (attributes.position !== undefined) {\n                                var positions = attributes.position.array;\n                                for (var i = 0, l = positions.length; i < l; i += 3) {\n                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                                }\n                                if (geometry.index !== null) {\n                                    var indices = geometry.index.array;\n                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n                                        renderList.pushLine(indices[i], indices[i + 1]);\n                                    }\n                                } else {\n                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n                                        renderList.pushLine(i, i + 1);\n                                    }\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n                            var vertices = object.geometry.vertices;\n                            if (vertices.length === 0) continue;\n                            v1 = getNextVertexInPool();\n                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n                                v1 = getNextVertexInPool();\n                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n                                if ((v + 1) % step > 0) continue;\n                                v2 = _vertexPool[_vertexCount - 2];\n                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n                                    _line = getNextLineInPool();\n                                    _line.id = object.id;\n                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n                                    _line.renderOrder = object.renderOrder;\n                                    _line.material = object.material;\n                                    if (object.material.vertexColors === THREE.VertexColors) {\n                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n                                    }\n                                    _renderData.elements.push(_line);\n                                }\n                            }\n                        }\n                    } else if (object instanceof THREE.Sprite) {\n                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n                        _vector4.applyMatrix4(_viewProjectionMatrix);\n                        var invW = 1 / _vector4.w;\n                        _vector4.z *= invW;\n                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n                            _sprite = getNextSpriteInPool();\n                            _sprite.id = object.id;\n                            _sprite.x = _vector4.x * invW;\n                            _sprite.y = _vector4.y * invW;\n                            _sprite.z = _vector4.z;\n                            _sprite.renderOrder = object.renderOrder;\n                            _sprite.object = object;\n                            _sprite.rotation = object.rotation;\n                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n                            _sprite.material = object.material;\n                            _renderData.elements.push(_sprite);\n                        }\n                    }\n                }\n                if (sortElements === true) {\n                    _renderData.elements.sort(painterSort);\n                }\n                return _renderData;\n            };\n            function getNextObjectInPool() {\n                if (_objectCount === _objectPoolLength) {\n                    var object = new THREE.RenderableObject();\n                    _objectPool.push(object);\n                    _objectPoolLength++;\n                    _objectCount++;\n                    return object;\n                }\n                return _objectPool[_objectCount++];\n            }\n            function getNextVertexInPool() {\n                if (_vertexCount === _vertexPoolLength) {\n                    var vertex = new THREE.RenderableVertex();\n                    _vertexPool.push(vertex);\n                    _vertexPoolLength++;\n                    _vertexCount++;\n                    return vertex;\n                }\n                return _vertexPool[_vertexCount++];\n            }\n            function getNextFaceInPool() {\n                if (_faceCount === _facePoolLength) {\n                    var face = new THREE.RenderableFace();\n                    _facePool.push(face);\n                    _facePoolLength++;\n                    _faceCount++;\n                    return face;\n                }\n                return _facePool[_faceCount++];\n            }\n            function getNextLineInPool() {\n                if (_lineCount === _linePoolLength) {\n                    var line = new THREE.RenderableLine();\n                    _linePool.push(line);\n                    _linePoolLength++;\n                    _lineCount++;\n                    return line;\n                }\n                return _linePool[_lineCount++];\n            }\n            function getNextSpriteInPool() {\n                if (_spriteCount === _spritePoolLength) {\n                    var sprite = new THREE.RenderableSprite();\n                    _spritePool.push(sprite);\n                    _spritePoolLength++;\n                    _spriteCount++;\n                    return sprite;\n                }\n                return _spritePool[_spriteCount++];\n            }\n            function painterSort(a, b) {\n                if (a.renderOrder !== b.renderOrder) {\n                    return a.renderOrder - b.renderOrder;\n                } else if (a.z !== b.z) {\n                    return b.z - a.z;\n                } else if (a.id !== b.id) {\n                    return a.id - b.id;\n                } else {\n                    return 0;\n                }\n            }\n            function clipLine(s1, s2) {\n                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n                    return true;\n                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n                    return false;\n                } else {\n                    if (bc1near < 0) {\n                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n                    } else if (bc2near < 0) {\n                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n                    }\n                    if (bc1far < 0) {\n                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n                    } else if (bc2far < 0) {\n                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n                    }\n                    if (alpha2 < alpha1) {\n                        return false;\n                    } else {\n                        s1.lerp(s2, alpha1);\n                        s2.lerp(s1, 1 - alpha2);\n                        return true;\n                    }\n                }\n            }\n        };\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(7);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        (function(Buffer) {\n            /*!\n\t * @description Recursive object extending\n\t * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n\t * @license MIT\n\t *\n\t * The MIT License (MIT)\n\t *\n\t * Copyright (c) 2013-2015 Viacheslav Lotsmanov\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t * this software and associated documentation files (the \"Software\"), to deal in\n\t * the Software without restriction, including without limitation the rights to\n\t * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n\t * the Software, and to permit persons to whom the Software is furnished to do so,\n\t * subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in all\n\t * copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n\t * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n\t * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n\t * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n\t * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t */\n            \"use strict\";\n            function isSpecificValue(val) {\n                return val instanceof Buffer || val instanceof Date || val instanceof RegExp ? true : false;\n            }\n            function cloneSpecificValue(val) {\n                if (val instanceof Buffer) {\n                    var x = new Buffer(val.length);\n                    val.copy(x);\n                    return x;\n                } else if (val instanceof Date) {\n                    return new Date(val.getTime());\n                } else if (val instanceof RegExp) {\n                    return new RegExp(val);\n                } else {\n                    throw new Error(\"Unexpected situation\");\n                }\n            }\n            function deepCloneArray(arr) {\n                var clone = [];\n                arr.forEach(function(item, index) {\n                    if (typeof item === \"object\" && item !== null) {\n                        if (Array.isArray(item)) {\n                            clone[index] = deepCloneArray(item);\n                        } else if (isSpecificValue(item)) {\n                            clone[index] = cloneSpecificValue(item);\n                        } else {\n                            clone[index] = deepExtend({}, item);\n                        }\n                    } else {\n                        clone[index] = item;\n                    }\n                });\n                return clone;\n            }\n            var deepExtend = module.exports = function() {\n                if (arguments.length < 1 || typeof arguments[0] !== \"object\") {\n                    return false;\n                }\n                if (arguments.length < 2) {\n                    return arguments[0];\n                }\n                var target = arguments[0];\n                var args = Array.prototype.slice.call(arguments, 1);\n                var val, src, clone;\n                args.forEach(function(obj) {\n                    if (typeof obj !== \"object\" || Array.isArray(obj)) {\n                        return;\n                    }\n                    Object.keys(obj).forEach(function(key) {\n                        src = target[key];\n                        val = obj[key];\n                        if (val === target) {\n                            return;\n                        } else if (typeof val !== \"object\" || val === null) {\n                            target[key] = val;\n                            return;\n                        } else if (Array.isArray(val)) {\n                            target[key] = deepCloneArray(val);\n                            return;\n                        } else if (isSpecificValue(val)) {\n                            target[key] = cloneSpecificValue(val);\n                            return;\n                        } else if (typeof src !== \"object\" || src === null || Array.isArray(src)) {\n                            target[key] = deepExtend({}, val);\n                            return;\n                        } else {\n                            target[key] = deepExtend(src, val);\n                            return;\n                        }\n                    });\n                });\n                return target;\n            };\n        }).call(exports, __webpack_require__(12).Buffer);\n    }, function(module, exports, __webpack_require__) {\n        (function(Buffer, global) {\n            /*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n            \"use strict\";\n            var base64 = __webpack_require__(13);\n            var ieee754 = __webpack_require__(14);\n            var isArray = __webpack_require__(15);\n            exports.Buffer = Buffer;\n            exports.SlowBuffer = SlowBuffer;\n            exports.INSPECT_MAX_BYTES = 50;\n            Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n            exports.kMaxLength = kMaxLength();\n            function typedArraySupport() {\n                try {\n                    var arr = new Uint8Array(1);\n                    arr.__proto__ = {\n                        __proto__: Uint8Array.prototype,\n                        foo: function() {\n                            return 42;\n                        }\n                    };\n                    return arr.foo() === 42 && typeof arr.subarray === \"function\" && arr.subarray(1, 1).byteLength === 0;\n                } catch (e) {\n                    return false;\n                }\n            }\n            function kMaxLength() {\n                return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;\n            }\n            function createBuffer(that, length) {\n                if (kMaxLength() < length) {\n                    throw new RangeError(\"Invalid typed array length\");\n                }\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    that = new Uint8Array(length);\n                    that.__proto__ = Buffer.prototype;\n                } else {\n                    if (that === null) {\n                        that = new Buffer(length);\n                    }\n                    that.length = length;\n                }\n                return that;\n            }\n            function Buffer(arg, encodingOrOffset, length) {\n                if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n                    return new Buffer(arg, encodingOrOffset, length);\n                }\n                if (typeof arg === \"number\") {\n                    if (typeof encodingOrOffset === \"string\") {\n                        throw new Error(\"If encoding is specified then the first argument must be a string\");\n                    }\n                    return allocUnsafe(this, arg);\n                }\n                return from(this, arg, encodingOrOffset, length);\n            }\n            Buffer.poolSize = 8192;\n            Buffer._augment = function(arr) {\n                arr.__proto__ = Buffer.prototype;\n                return arr;\n            };\n            function from(that, value, encodingOrOffset, length) {\n                if (typeof value === \"number\") {\n                    throw new TypeError('\"value\" argument must not be a number');\n                }\n                if (typeof ArrayBuffer !== \"undefined\" && value instanceof ArrayBuffer) {\n                    return fromArrayBuffer(that, value, encodingOrOffset, length);\n                }\n                if (typeof value === \"string\") {\n                    return fromString(that, value, encodingOrOffset);\n                }\n                return fromObject(that, value);\n            }\n            Buffer.from = function(value, encodingOrOffset, length) {\n                return from(null, value, encodingOrOffset, length);\n            };\n            if (Buffer.TYPED_ARRAY_SUPPORT) {\n                Buffer.prototype.__proto__ = Uint8Array.prototype;\n                Buffer.__proto__ = Uint8Array;\n                if (typeof Symbol !== \"undefined\" && Symbol.species && Buffer[Symbol.species] === Buffer) {\n                    Object.defineProperty(Buffer, Symbol.species, {\n                        value: null,\n                        configurable: true\n                    });\n                }\n            }\n            function assertSize(size) {\n                if (typeof size !== \"number\") {\n                    throw new TypeError('\"size\" argument must be a number');\n                } else if (size < 0) {\n                    throw new RangeError('\"size\" argument must not be negative');\n                }\n            }\n            function alloc(that, size, fill, encoding) {\n                assertSize(size);\n                if (size <= 0) {\n                    return createBuffer(that, size);\n                }\n                if (fill !== undefined) {\n                    return typeof encoding === \"string\" ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n                }\n                return createBuffer(that, size);\n            }\n            Buffer.alloc = function(size, fill, encoding) {\n                return alloc(null, size, fill, encoding);\n            };\n            function allocUnsafe(that, size) {\n                assertSize(size);\n                that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n                if (!Buffer.TYPED_ARRAY_SUPPORT) {\n                    for (var i = 0; i < size; ++i) {\n                        that[i] = 0;\n                    }\n                }\n                return that;\n            }\n            Buffer.allocUnsafe = function(size) {\n                return allocUnsafe(null, size);\n            };\n            Buffer.allocUnsafeSlow = function(size) {\n                return allocUnsafe(null, size);\n            };\n            function fromString(that, string, encoding) {\n                if (typeof encoding !== \"string\" || encoding === \"\") {\n                    encoding = \"utf8\";\n                }\n                if (!Buffer.isEncoding(encoding)) {\n                    throw new TypeError('\"encoding\" must be a valid string encoding');\n                }\n                var length = byteLength(string, encoding) | 0;\n                that = createBuffer(that, length);\n                var actual = that.write(string, encoding);\n                if (actual !== length) {\n                    that = that.slice(0, actual);\n                }\n                return that;\n            }\n            function fromArrayLike(that, array) {\n                var length = array.length < 0 ? 0 : checked(array.length) | 0;\n                that = createBuffer(that, length);\n                for (var i = 0; i < length; i += 1) {\n                    that[i] = array[i] & 255;\n                }\n                return that;\n            }\n            function fromArrayBuffer(that, array, byteOffset, length) {\n                array.byteLength;\n                if (byteOffset < 0 || array.byteLength < byteOffset) {\n                    throw new RangeError(\"'offset' is out of bounds\");\n                }\n                if (array.byteLength < byteOffset + (length || 0)) {\n                    throw new RangeError(\"'length' is out of bounds\");\n                }\n                if (byteOffset === undefined && length === undefined) {\n                    array = new Uint8Array(array);\n                } else if (length === undefined) {\n                    array = new Uint8Array(array, byteOffset);\n                } else {\n                    array = new Uint8Array(array, byteOffset, length);\n                }\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    that = array;\n                    that.__proto__ = Buffer.prototype;\n                } else {\n                    that = fromArrayLike(that, array);\n                }\n                return that;\n            }\n            function fromObject(that, obj) {\n                if (Buffer.isBuffer(obj)) {\n                    var len = checked(obj.length) | 0;\n                    that = createBuffer(that, len);\n                    if (that.length === 0) {\n                        return that;\n                    }\n                    obj.copy(that, 0, 0, len);\n                    return that;\n                }\n                if (obj) {\n                    if (typeof ArrayBuffer !== \"undefined\" && obj.buffer instanceof ArrayBuffer || \"length\" in obj) {\n                        if (typeof obj.length !== \"number\" || isnan(obj.length)) {\n                            return createBuffer(that, 0);\n                        }\n                        return fromArrayLike(that, obj);\n                    }\n                    if (obj.type === \"Buffer\" && isArray(obj.data)) {\n                        return fromArrayLike(that, obj.data);\n                    }\n                }\n                throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n            }\n            function checked(length) {\n                if (length >= kMaxLength()) {\n                    throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + kMaxLength().toString(16) + \" bytes\");\n                }\n                return length | 0;\n            }\n            function SlowBuffer(length) {\n                if (+length != length) {\n                    length = 0;\n                }\n                return Buffer.alloc(+length);\n            }\n            Buffer.isBuffer = function isBuffer(b) {\n                return !!(b != null && b._isBuffer);\n            };\n            Buffer.compare = function compare(a, b) {\n                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n                    throw new TypeError(\"Arguments must be Buffers\");\n                }\n                if (a === b) return 0;\n                var x = a.length;\n                var y = b.length;\n                for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n                    if (a[i] !== b[i]) {\n                        x = a[i];\n                        y = b[i];\n                        break;\n                    }\n                }\n                if (x < y) return -1;\n                if (y < x) return 1;\n                return 0;\n            };\n            Buffer.isEncoding = function isEncoding(encoding) {\n                switch (String(encoding).toLowerCase()) {\n                  case \"hex\":\n                  case \"utf8\":\n                  case \"utf-8\":\n                  case \"ascii\":\n                  case \"latin1\":\n                  case \"binary\":\n                  case \"base64\":\n                  case \"ucs2\":\n                  case \"ucs-2\":\n                  case \"utf16le\":\n                  case \"utf-16le\":\n                    return true;\n\n                  default:\n                    return false;\n                }\n            };\n            Buffer.concat = function concat(list, length) {\n                if (!isArray(list)) {\n                    throw new TypeError('\"list\" argument must be an Array of Buffers');\n                }\n                if (list.length === 0) {\n                    return Buffer.alloc(0);\n                }\n                var i;\n                if (length === undefined) {\n                    length = 0;\n                    for (i = 0; i < list.length; ++i) {\n                        length += list[i].length;\n                    }\n                }\n                var buffer = Buffer.allocUnsafe(length);\n                var pos = 0;\n                for (i = 0; i < list.length; ++i) {\n                    var buf = list[i];\n                    if (!Buffer.isBuffer(buf)) {\n                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n                    }\n                    buf.copy(buffer, pos);\n                    pos += buf.length;\n                }\n                return buffer;\n            };\n            function byteLength(string, encoding) {\n                if (Buffer.isBuffer(string)) {\n                    return string.length;\n                }\n                if (typeof ArrayBuffer !== \"undefined\" && typeof ArrayBuffer.isView === \"function\" && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n                    return string.byteLength;\n                }\n                if (typeof string !== \"string\") {\n                    string = \"\" + string;\n                }\n                var len = string.length;\n                if (len === 0) return 0;\n                var loweredCase = false;\n                for (;;) {\n                    switch (encoding) {\n                      case \"ascii\":\n                      case \"latin1\":\n                      case \"binary\":\n                        return len;\n\n                      case \"utf8\":\n                      case \"utf-8\":\n                      case undefined:\n                        return utf8ToBytes(string).length;\n\n                      case \"ucs2\":\n                      case \"ucs-2\":\n                      case \"utf16le\":\n                      case \"utf-16le\":\n                        return len * 2;\n\n                      case \"hex\":\n                        return len >>> 1;\n\n                      case \"base64\":\n                        return base64ToBytes(string).length;\n\n                      default:\n                        if (loweredCase) return utf8ToBytes(string).length;\n                        encoding = (\"\" + encoding).toLowerCase();\n                        loweredCase = true;\n                    }\n                }\n            }\n            Buffer.byteLength = byteLength;\n            function slowToString(encoding, start, end) {\n                var loweredCase = false;\n                if (start === undefined || start < 0) {\n                    start = 0;\n                }\n                if (start > this.length) {\n                    return \"\";\n                }\n                if (end === undefined || end > this.length) {\n                    end = this.length;\n                }\n                if (end <= 0) {\n                    return \"\";\n                }\n                end >>>= 0;\n                start >>>= 0;\n                if (end <= start) {\n                    return \"\";\n                }\n                if (!encoding) encoding = \"utf8\";\n                while (true) {\n                    switch (encoding) {\n                      case \"hex\":\n                        return hexSlice(this, start, end);\n\n                      case \"utf8\":\n                      case \"utf-8\":\n                        return utf8Slice(this, start, end);\n\n                      case \"ascii\":\n                        return asciiSlice(this, start, end);\n\n                      case \"latin1\":\n                      case \"binary\":\n                        return latin1Slice(this, start, end);\n\n                      case \"base64\":\n                        return base64Slice(this, start, end);\n\n                      case \"ucs2\":\n                      case \"ucs-2\":\n                      case \"utf16le\":\n                      case \"utf-16le\":\n                        return utf16leSlice(this, start, end);\n\n                      default:\n                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n                        encoding = (encoding + \"\").toLowerCase();\n                        loweredCase = true;\n                    }\n                }\n            }\n            Buffer.prototype._isBuffer = true;\n            function swap(b, n, m) {\n                var i = b[n];\n                b[n] = b[m];\n                b[m] = i;\n            }\n            Buffer.prototype.swap16 = function swap16() {\n                var len = this.length;\n                if (len % 2 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n                }\n                for (var i = 0; i < len; i += 2) {\n                    swap(this, i, i + 1);\n                }\n                return this;\n            };\n            Buffer.prototype.swap32 = function swap32() {\n                var len = this.length;\n                if (len % 4 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n                }\n                for (var i = 0; i < len; i += 4) {\n                    swap(this, i, i + 3);\n                    swap(this, i + 1, i + 2);\n                }\n                return this;\n            };\n            Buffer.prototype.swap64 = function swap64() {\n                var len = this.length;\n                if (len % 8 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n                }\n                for (var i = 0; i < len; i += 8) {\n                    swap(this, i, i + 7);\n                    swap(this, i + 1, i + 6);\n                    swap(this, i + 2, i + 5);\n                    swap(this, i + 3, i + 4);\n                }\n                return this;\n            };\n            Buffer.prototype.toString = function toString() {\n                var length = this.length | 0;\n                if (length === 0) return \"\";\n                if (arguments.length === 0) return utf8Slice(this, 0, length);\n                return slowToString.apply(this, arguments);\n            };\n            Buffer.prototype.equals = function equals(b) {\n                if (!Buffer.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n                if (this === b) return true;\n                return Buffer.compare(this, b) === 0;\n            };\n            Buffer.prototype.inspect = function inspect() {\n                var str = \"\";\n                var max = exports.INSPECT_MAX_BYTES;\n                if (this.length > 0) {\n                    str = this.toString(\"hex\", 0, max).match(/.{2}/g).join(\" \");\n                    if (this.length > max) str += \" ... \";\n                }\n                return \"<Buffer \" + str + \">\";\n            };\n            Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n                if (!Buffer.isBuffer(target)) {\n                    throw new TypeError(\"Argument must be a Buffer\");\n                }\n                if (start === undefined) {\n                    start = 0;\n                }\n                if (end === undefined) {\n                    end = target ? target.length : 0;\n                }\n                if (thisStart === undefined) {\n                    thisStart = 0;\n                }\n                if (thisEnd === undefined) {\n                    thisEnd = this.length;\n                }\n                if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n                    throw new RangeError(\"out of range index\");\n                }\n                if (thisStart >= thisEnd && start >= end) {\n                    return 0;\n                }\n                if (thisStart >= thisEnd) {\n                    return -1;\n                }\n                if (start >= end) {\n                    return 1;\n                }\n                start >>>= 0;\n                end >>>= 0;\n                thisStart >>>= 0;\n                thisEnd >>>= 0;\n                if (this === target) return 0;\n                var x = thisEnd - thisStart;\n                var y = end - start;\n                var len = Math.min(x, y);\n                var thisCopy = this.slice(thisStart, thisEnd);\n                var targetCopy = target.slice(start, end);\n                for (var i = 0; i < len; ++i) {\n                    if (thisCopy[i] !== targetCopy[i]) {\n                        x = thisCopy[i];\n                        y = targetCopy[i];\n                        break;\n                    }\n                }\n                if (x < y) return -1;\n                if (y < x) return 1;\n                return 0;\n            };\n            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n                if (buffer.length === 0) return -1;\n                if (typeof byteOffset === \"string\") {\n                    encoding = byteOffset;\n                    byteOffset = 0;\n                } else if (byteOffset > 2147483647) {\n                    byteOffset = 2147483647;\n                } else if (byteOffset < -2147483648) {\n                    byteOffset = -2147483648;\n                }\n                byteOffset = +byteOffset;\n                if (isNaN(byteOffset)) {\n                    byteOffset = dir ? 0 : buffer.length - 1;\n                }\n                if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n                if (byteOffset >= buffer.length) {\n                    if (dir) return -1; else byteOffset = buffer.length - 1;\n                } else if (byteOffset < 0) {\n                    if (dir) byteOffset = 0; else return -1;\n                }\n                if (typeof val === \"string\") {\n                    val = Buffer.from(val, encoding);\n                }\n                if (Buffer.isBuffer(val)) {\n                    if (val.length === 0) {\n                        return -1;\n                    }\n                    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n                } else if (typeof val === \"number\") {\n                    val = val & 255;\n                    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === \"function\") {\n                        if (dir) {\n                            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n                        } else {\n                            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n                        }\n                    }\n                    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);\n                }\n                throw new TypeError(\"val must be string, number or Buffer\");\n            }\n            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n                var indexSize = 1;\n                var arrLength = arr.length;\n                var valLength = val.length;\n                if (encoding !== undefined) {\n                    encoding = String(encoding).toLowerCase();\n                    if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n                        if (arr.length < 2 || val.length < 2) {\n                            return -1;\n                        }\n                        indexSize = 2;\n                        arrLength /= 2;\n                        valLength /= 2;\n                        byteOffset /= 2;\n                    }\n                }\n                function read(buf, i) {\n                    if (indexSize === 1) {\n                        return buf[i];\n                    } else {\n                        return buf.readUInt16BE(i * indexSize);\n                    }\n                }\n                var i;\n                if (dir) {\n                    var foundIndex = -1;\n                    for (i = byteOffset; i < arrLength; i++) {\n                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n                            if (foundIndex === -1) foundIndex = i;\n                            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n                        } else {\n                            if (foundIndex !== -1) i -= i - foundIndex;\n                            foundIndex = -1;\n                        }\n                    }\n                } else {\n                    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n                    for (i = byteOffset; i >= 0; i--) {\n                        var found = true;\n                        for (var j = 0; j < valLength; j++) {\n                            if (read(arr, i + j) !== read(val, j)) {\n                                found = false;\n                                break;\n                            }\n                        }\n                        if (found) return i;\n                    }\n                }\n                return -1;\n            }\n            Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n                return this.indexOf(val, byteOffset, encoding) !== -1;\n            };\n            Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n                return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n            };\n            Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n                return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n            };\n            function hexWrite(buf, string, offset, length) {\n                offset = Number(offset) || 0;\n                var remaining = buf.length - offset;\n                if (!length) {\n                    length = remaining;\n                } else {\n                    length = Number(length);\n                    if (length > remaining) {\n                        length = remaining;\n                    }\n                }\n                var strLen = string.length;\n                if (strLen % 2 !== 0) throw new TypeError(\"Invalid hex string\");\n                if (length > strLen / 2) {\n                    length = strLen / 2;\n                }\n                for (var i = 0; i < length; ++i) {\n                    var parsed = parseInt(string.substr(i * 2, 2), 16);\n                    if (isNaN(parsed)) return i;\n                    buf[offset + i] = parsed;\n                }\n                return i;\n            }\n            function utf8Write(buf, string, offset, length) {\n                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n            }\n            function asciiWrite(buf, string, offset, length) {\n                return blitBuffer(asciiToBytes(string), buf, offset, length);\n            }\n            function latin1Write(buf, string, offset, length) {\n                return asciiWrite(buf, string, offset, length);\n            }\n            function base64Write(buf, string, offset, length) {\n                return blitBuffer(base64ToBytes(string), buf, offset, length);\n            }\n            function ucs2Write(buf, string, offset, length) {\n                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n            }\n            Buffer.prototype.write = function write(string, offset, length, encoding) {\n                if (offset === undefined) {\n                    encoding = \"utf8\";\n                    length = this.length;\n                    offset = 0;\n                } else if (length === undefined && typeof offset === \"string\") {\n                    encoding = offset;\n                    length = this.length;\n                    offset = 0;\n                } else if (isFinite(offset)) {\n                    offset = offset | 0;\n                    if (isFinite(length)) {\n                        length = length | 0;\n                        if (encoding === undefined) encoding = \"utf8\";\n                    } else {\n                        encoding = length;\n                        length = undefined;\n                    }\n                } else {\n                    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n                }\n                var remaining = this.length - offset;\n                if (length === undefined || length > remaining) length = remaining;\n                if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n                    throw new RangeError(\"Attempt to write outside buffer bounds\");\n                }\n                if (!encoding) encoding = \"utf8\";\n                var loweredCase = false;\n                for (;;) {\n                    switch (encoding) {\n                      case \"hex\":\n                        return hexWrite(this, string, offset, length);\n\n                      case \"utf8\":\n                      case \"utf-8\":\n                        return utf8Write(this, string, offset, length);\n\n                      case \"ascii\":\n                        return asciiWrite(this, string, offset, length);\n\n                      case \"latin1\":\n                      case \"binary\":\n                        return latin1Write(this, string, offset, length);\n\n                      case \"base64\":\n                        return base64Write(this, string, offset, length);\n\n                      case \"ucs2\":\n                      case \"ucs-2\":\n                      case \"utf16le\":\n                      case \"utf-16le\":\n                        return ucs2Write(this, string, offset, length);\n\n                      default:\n                        if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n                        encoding = (\"\" + encoding).toLowerCase();\n                        loweredCase = true;\n                    }\n                }\n            };\n            Buffer.prototype.toJSON = function toJSON() {\n                return {\n                    type: \"Buffer\",\n                    data: Array.prototype.slice.call(this._arr || this, 0)\n                };\n            };\n            function base64Slice(buf, start, end) {\n                if (start === 0 && end === buf.length) {\n                    return base64.fromByteArray(buf);\n                } else {\n                    return base64.fromByteArray(buf.slice(start, end));\n                }\n            }\n            function utf8Slice(buf, start, end) {\n                end = Math.min(buf.length, end);\n                var res = [];\n                var i = start;\n                while (i < end) {\n                    var firstByte = buf[i];\n                    var codePoint = null;\n                    var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n                    if (i + bytesPerSequence <= end) {\n                        var secondByte, thirdByte, fourthByte, tempCodePoint;\n                        switch (bytesPerSequence) {\n                          case 1:\n                            if (firstByte < 128) {\n                                codePoint = firstByte;\n                            }\n                            break;\n\n                          case 2:\n                            secondByte = buf[i + 1];\n                            if ((secondByte & 192) === 128) {\n                                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                                if (tempCodePoint > 127) {\n                                    codePoint = tempCodePoint;\n                                }\n                            }\n                            break;\n\n                          case 3:\n                            secondByte = buf[i + 1];\n                            thirdByte = buf[i + 2];\n                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                                    codePoint = tempCodePoint;\n                                }\n                            }\n                            break;\n\n                          case 4:\n                            secondByte = buf[i + 1];\n                            thirdByte = buf[i + 2];\n                            fourthByte = buf[i + 3];\n                            if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                                    codePoint = tempCodePoint;\n                                }\n                            }\n                        }\n                    }\n                    if (codePoint === null) {\n                        codePoint = 65533;\n                        bytesPerSequence = 1;\n                    } else if (codePoint > 65535) {\n                        codePoint -= 65536;\n                        res.push(codePoint >>> 10 & 1023 | 55296);\n                        codePoint = 56320 | codePoint & 1023;\n                    }\n                    res.push(codePoint);\n                    i += bytesPerSequence;\n                }\n                return decodeCodePointsArray(res);\n            }\n            var MAX_ARGUMENTS_LENGTH = 4096;\n            function decodeCodePointsArray(codePoints) {\n                var len = codePoints.length;\n                if (len <= MAX_ARGUMENTS_LENGTH) {\n                    return String.fromCharCode.apply(String, codePoints);\n                }\n                var res = \"\";\n                var i = 0;\n                while (i < len) {\n                    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n                }\n                return res;\n            }\n            function asciiSlice(buf, start, end) {\n                var ret = \"\";\n                end = Math.min(buf.length, end);\n                for (var i = start; i < end; ++i) {\n                    ret += String.fromCharCode(buf[i] & 127);\n                }\n                return ret;\n            }\n            function latin1Slice(buf, start, end) {\n                var ret = \"\";\n                end = Math.min(buf.length, end);\n                for (var i = start; i < end; ++i) {\n                    ret += String.fromCharCode(buf[i]);\n                }\n                return ret;\n            }\n            function hexSlice(buf, start, end) {\n                var len = buf.length;\n                if (!start || start < 0) start = 0;\n                if (!end || end < 0 || end > len) end = len;\n                var out = \"\";\n                for (var i = start; i < end; ++i) {\n                    out += toHex(buf[i]);\n                }\n                return out;\n            }\n            function utf16leSlice(buf, start, end) {\n                var bytes = buf.slice(start, end);\n                var res = \"\";\n                for (var i = 0; i < bytes.length; i += 2) {\n                    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n                }\n                return res;\n            }\n            Buffer.prototype.slice = function slice(start, end) {\n                var len = this.length;\n                start = ~~start;\n                end = end === undefined ? len : ~~end;\n                if (start < 0) {\n                    start += len;\n                    if (start < 0) start = 0;\n                } else if (start > len) {\n                    start = len;\n                }\n                if (end < 0) {\n                    end += len;\n                    if (end < 0) end = 0;\n                } else if (end > len) {\n                    end = len;\n                }\n                if (end < start) end = start;\n                var newBuf;\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    newBuf = this.subarray(start, end);\n                    newBuf.__proto__ = Buffer.prototype;\n                } else {\n                    var sliceLen = end - start;\n                    newBuf = new Buffer(sliceLen, undefined);\n                    for (var i = 0; i < sliceLen; ++i) {\n                        newBuf[i] = this[i + start];\n                    }\n                }\n                return newBuf;\n            };\n            function checkOffset(offset, ext, length) {\n                if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n                if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n            }\n            Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) checkOffset(offset, byteLength, this.length);\n                var val = this[offset];\n                var mul = 1;\n                var i = 0;\n                while (++i < byteLength && (mul *= 256)) {\n                    val += this[offset + i] * mul;\n                }\n                return val;\n            };\n            Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) {\n                    checkOffset(offset, byteLength, this.length);\n                }\n                var val = this[offset + --byteLength];\n                var mul = 1;\n                while (byteLength > 0 && (mul *= 256)) {\n                    val += this[offset + --byteLength] * mul;\n                }\n                return val;\n            };\n            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 1, this.length);\n                return this[offset];\n            };\n            Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                return this[offset] | this[offset + 1] << 8;\n            };\n            Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                return this[offset] << 8 | this[offset + 1];\n            };\n            Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n            };\n            Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n            };\n            Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) checkOffset(offset, byteLength, this.length);\n                var val = this[offset];\n                var mul = 1;\n                var i = 0;\n                while (++i < byteLength && (mul *= 256)) {\n                    val += this[offset + i] * mul;\n                }\n                mul *= 128;\n                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n                return val;\n            };\n            Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) checkOffset(offset, byteLength, this.length);\n                var i = byteLength;\n                var mul = 1;\n                var val = this[offset + --i];\n                while (i > 0 && (mul *= 256)) {\n                    val += this[offset + --i] * mul;\n                }\n                mul *= 128;\n                if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n                return val;\n            };\n            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 1, this.length);\n                if (!(this[offset] & 128)) return this[offset];\n                return (255 - this[offset] + 1) * -1;\n            };\n            Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                var val = this[offset] | this[offset + 1] << 8;\n                return val & 32768 ? val | 4294901760 : val;\n            };\n            Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 2, this.length);\n                var val = this[offset + 1] | this[offset] << 8;\n                return val & 32768 ? val | 4294901760 : val;\n            };\n            Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n            };\n            Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n            };\n            Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return ieee754.read(this, offset, true, 23, 4);\n            };\n            Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 4, this.length);\n                return ieee754.read(this, offset, false, 23, 4);\n            };\n            Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 8, this.length);\n                return ieee754.read(this, offset, true, 52, 8);\n            };\n            Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n                if (!noAssert) checkOffset(offset, 8, this.length);\n                return ieee754.read(this, offset, false, 52, 8);\n            };\n            function checkInt(buf, value, offset, ext, max, min) {\n                if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n                if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n            }\n            Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) {\n                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n                }\n                var mul = 1;\n                var i = 0;\n                this[offset] = value & 255;\n                while (++i < byteLength && (mul *= 256)) {\n                    this[offset + i] = value / mul & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                byteLength = byteLength | 0;\n                if (!noAssert) {\n                    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n                    checkInt(this, value, offset, byteLength, maxBytes, 0);\n                }\n                var i = byteLength - 1;\n                var mul = 1;\n                this[offset + i] = value & 255;\n                while (--i >= 0 && (mul *= 256)) {\n                    this[offset + i] = value / mul & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n                this[offset] = value & 255;\n                return offset + 1;\n            };\n            function objectWriteUInt16(buf, value, offset, littleEndian) {\n                if (value < 0) value = 65535 + value + 1;\n                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n                    buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n                }\n            }\n            Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value & 255;\n                    this[offset + 1] = value >>> 8;\n                } else {\n                    objectWriteUInt16(this, value, offset, true);\n                }\n                return offset + 2;\n            };\n            Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 8;\n                    this[offset + 1] = value & 255;\n                } else {\n                    objectWriteUInt16(this, value, offset, false);\n                }\n                return offset + 2;\n            };\n            function objectWriteUInt32(buf, value, offset, littleEndian) {\n                if (value < 0) value = 4294967295 + value + 1;\n                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n                    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 255;\n                }\n            }\n            Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset + 3] = value >>> 24;\n                    this[offset + 2] = value >>> 16;\n                    this[offset + 1] = value >>> 8;\n                    this[offset] = value & 255;\n                } else {\n                    objectWriteUInt32(this, value, offset, true);\n                }\n                return offset + 4;\n            };\n            Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 24;\n                    this[offset + 1] = value >>> 16;\n                    this[offset + 2] = value >>> 8;\n                    this[offset + 3] = value & 255;\n                } else {\n                    objectWriteUInt32(this, value, offset, false);\n                }\n                return offset + 4;\n            };\n            Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) {\n                    var limit = Math.pow(2, 8 * byteLength - 1);\n                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n                }\n                var i = 0;\n                var mul = 1;\n                var sub = 0;\n                this[offset] = value & 255;\n                while (++i < byteLength && (mul *= 256)) {\n                    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n                        sub = 1;\n                    }\n                    this[offset + i] = (value / mul >> 0) - sub & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) {\n                    var limit = Math.pow(2, 8 * byteLength - 1);\n                    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n                }\n                var i = byteLength - 1;\n                var mul = 1;\n                var sub = 0;\n                this[offset + i] = value & 255;\n                while (--i >= 0 && (mul *= 256)) {\n                    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n                        sub = 1;\n                    }\n                    this[offset + i] = (value / mul >> 0) - sub & 255;\n                }\n                return offset + byteLength;\n            };\n            Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n                if (value < 0) value = 255 + value + 1;\n                this[offset] = value & 255;\n                return offset + 1;\n            };\n            Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value & 255;\n                    this[offset + 1] = value >>> 8;\n                } else {\n                    objectWriteUInt16(this, value, offset, true);\n                }\n                return offset + 2;\n            };\n            Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 8;\n                    this[offset + 1] = value & 255;\n                } else {\n                    objectWriteUInt16(this, value, offset, false);\n                }\n                return offset + 2;\n            };\n            Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value & 255;\n                    this[offset + 1] = value >>> 8;\n                    this[offset + 2] = value >>> 16;\n                    this[offset + 3] = value >>> 24;\n                } else {\n                    objectWriteUInt32(this, value, offset, true);\n                }\n                return offset + 4;\n            };\n            Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n                value = +value;\n                offset = offset | 0;\n                if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n                if (value < 0) value = 4294967295 + value + 1;\n                if (Buffer.TYPED_ARRAY_SUPPORT) {\n                    this[offset] = value >>> 24;\n                    this[offset + 1] = value >>> 16;\n                    this[offset + 2] = value >>> 8;\n                    this[offset + 3] = value & 255;\n                } else {\n                    objectWriteUInt32(this, value, offset, false);\n                }\n                return offset + 4;\n            };\n            function checkIEEE754(buf, value, offset, ext, max, min) {\n                if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n                if (offset < 0) throw new RangeError(\"Index out of range\");\n            }\n            function writeFloat(buf, value, offset, littleEndian, noAssert) {\n                if (!noAssert) {\n                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);\n                }\n                ieee754.write(buf, value, offset, littleEndian, 23, 4);\n                return offset + 4;\n            }\n            Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n                return writeFloat(this, value, offset, true, noAssert);\n            };\n            Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n                return writeFloat(this, value, offset, false, noAssert);\n            };\n            function writeDouble(buf, value, offset, littleEndian, noAssert) {\n                if (!noAssert) {\n                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);\n                }\n                ieee754.write(buf, value, offset, littleEndian, 52, 8);\n                return offset + 8;\n            }\n            Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n                return writeDouble(this, value, offset, true, noAssert);\n            };\n            Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n                return writeDouble(this, value, offset, false, noAssert);\n            };\n            Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n                if (!start) start = 0;\n                if (!end && end !== 0) end = this.length;\n                if (targetStart >= target.length) targetStart = target.length;\n                if (!targetStart) targetStart = 0;\n                if (end > 0 && end < start) end = start;\n                if (end === start) return 0;\n                if (target.length === 0 || this.length === 0) return 0;\n                if (targetStart < 0) {\n                    throw new RangeError(\"targetStart out of bounds\");\n                }\n                if (start < 0 || start >= this.length) throw new RangeError(\"sourceStart out of bounds\");\n                if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n                if (end > this.length) end = this.length;\n                if (target.length - targetStart < end - start) {\n                    end = target.length - targetStart + start;\n                }\n                var len = end - start;\n                var i;\n                if (this === target && start < targetStart && targetStart < end) {\n                    for (i = len - 1; i >= 0; --i) {\n                        target[i + targetStart] = this[i + start];\n                    }\n                } else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) {\n                    for (i = 0; i < len; ++i) {\n                        target[i + targetStart] = this[i + start];\n                    }\n                } else {\n                    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n                }\n                return len;\n            };\n            Buffer.prototype.fill = function fill(val, start, end, encoding) {\n                if (typeof val === \"string\") {\n                    if (typeof start === \"string\") {\n                        encoding = start;\n                        start = 0;\n                        end = this.length;\n                    } else if (typeof end === \"string\") {\n                        encoding = end;\n                        end = this.length;\n                    }\n                    if (val.length === 1) {\n                        var code = val.charCodeAt(0);\n                        if (code < 256) {\n                            val = code;\n                        }\n                    }\n                    if (encoding !== undefined && typeof encoding !== \"string\") {\n                        throw new TypeError(\"encoding must be a string\");\n                    }\n                    if (typeof encoding === \"string\" && !Buffer.isEncoding(encoding)) {\n                        throw new TypeError(\"Unknown encoding: \" + encoding);\n                    }\n                } else if (typeof val === \"number\") {\n                    val = val & 255;\n                }\n                if (start < 0 || this.length < start || this.length < end) {\n                    throw new RangeError(\"Out of range index\");\n                }\n                if (end <= start) {\n                    return this;\n                }\n                start = start >>> 0;\n                end = end === undefined ? this.length : end >>> 0;\n                if (!val) val = 0;\n                var i;\n                if (typeof val === \"number\") {\n                    for (i = start; i < end; ++i) {\n                        this[i] = val;\n                    }\n                } else {\n                    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n                    var len = bytes.length;\n                    for (i = 0; i < end - start; ++i) {\n                        this[i + start] = bytes[i % len];\n                    }\n                }\n                return this;\n            };\n            var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n            function base64clean(str) {\n                str = stringtrim(str).replace(INVALID_BASE64_RE, \"\");\n                if (str.length < 2) return \"\";\n                while (str.length % 4 !== 0) {\n                    str = str + \"=\";\n                }\n                return str;\n            }\n            function stringtrim(str) {\n                if (str.trim) return str.trim();\n                return str.replace(/^\\s+|\\s+$/g, \"\");\n            }\n            function toHex(n) {\n                if (n < 16) return \"0\" + n.toString(16);\n                return n.toString(16);\n            }\n            function utf8ToBytes(string, units) {\n                units = units || Infinity;\n                var codePoint;\n                var length = string.length;\n                var leadSurrogate = null;\n                var bytes = [];\n                for (var i = 0; i < length; ++i) {\n                    codePoint = string.charCodeAt(i);\n                    if (codePoint > 55295 && codePoint < 57344) {\n                        if (!leadSurrogate) {\n                            if (codePoint > 56319) {\n                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                                continue;\n                            } else if (i + 1 === length) {\n                                if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                                continue;\n                            }\n                            leadSurrogate = codePoint;\n                            continue;\n                        }\n                        if (codePoint < 56320) {\n                            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                            leadSurrogate = codePoint;\n                            continue;\n                        }\n                        codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n                    } else if (leadSurrogate) {\n                        if ((units -= 3) > -1) bytes.push(239, 191, 189);\n                    }\n                    leadSurrogate = null;\n                    if (codePoint < 128) {\n                        if ((units -= 1) < 0) break;\n                        bytes.push(codePoint);\n                    } else if (codePoint < 2048) {\n                        if ((units -= 2) < 0) break;\n                        bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n                    } else if (codePoint < 65536) {\n                        if ((units -= 3) < 0) break;\n                        bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n                    } else if (codePoint < 1114112) {\n                        if ((units -= 4) < 0) break;\n                        bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n                    } else {\n                        throw new Error(\"Invalid code point\");\n                    }\n                }\n                return bytes;\n            }\n            function asciiToBytes(str) {\n                var byteArray = [];\n                for (var i = 0; i < str.length; ++i) {\n                    byteArray.push(str.charCodeAt(i) & 255);\n                }\n                return byteArray;\n            }\n            function utf16leToBytes(str, units) {\n                var c, hi, lo;\n                var byteArray = [];\n                for (var i = 0; i < str.length; ++i) {\n                    if ((units -= 2) < 0) break;\n                    c = str.charCodeAt(i);\n                    hi = c >> 8;\n                    lo = c % 256;\n                    byteArray.push(lo);\n                    byteArray.push(hi);\n                }\n                return byteArray;\n            }\n            function base64ToBytes(str) {\n                return base64.toByteArray(base64clean(str));\n            }\n            function blitBuffer(src, dst, offset, length) {\n                for (var i = 0; i < length; ++i) {\n                    if (i + offset >= dst.length || i >= src.length) break;\n                    dst[i + offset] = src[i];\n                }\n                return i;\n            }\n            function isnan(val) {\n                return val !== val;\n            }\n        }).call(exports, __webpack_require__(12).Buffer, function() {\n            return this;\n        }());\n    }, function(module, exports) {\n        \"use strict\";\n        exports.byteLength = byteLength;\n        exports.toByteArray = toByteArray;\n        exports.fromByteArray = fromByteArray;\n        var lookup = [];\n        var revLookup = [];\n        var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n        var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        for (var i = 0, len = code.length; i < len; ++i) {\n            lookup[i] = code[i];\n            revLookup[code.charCodeAt(i)] = i;\n        }\n        revLookup[\"-\".charCodeAt(0)] = 62;\n        revLookup[\"_\".charCodeAt(0)] = 63;\n        function placeHoldersCount(b64) {\n            var len = b64.length;\n            if (len % 4 > 0) {\n                throw new Error(\"Invalid string. Length must be a multiple of 4\");\n            }\n            return b64[len - 2] === \"=\" ? 2 : b64[len - 1] === \"=\" ? 1 : 0;\n        }\n        function byteLength(b64) {\n            return b64.length * 3 / 4 - placeHoldersCount(b64);\n        }\n        function toByteArray(b64) {\n            var i, j, l, tmp, placeHolders, arr;\n            var len = b64.length;\n            placeHolders = placeHoldersCount(b64);\n            arr = new Arr(len * 3 / 4 - placeHolders);\n            l = placeHolders > 0 ? len - 4 : len;\n            var L = 0;\n            for (i = 0, j = 0; i < l; i += 4, j += 3) {\n                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n                arr[L++] = tmp >> 16 & 255;\n                arr[L++] = tmp >> 8 & 255;\n                arr[L++] = tmp & 255;\n            }\n            if (placeHolders === 2) {\n                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n                arr[L++] = tmp & 255;\n            } else if (placeHolders === 1) {\n                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n                arr[L++] = tmp >> 8 & 255;\n                arr[L++] = tmp & 255;\n            }\n            return arr;\n        }\n        function tripletToBase64(num) {\n            return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n        }\n        function encodeChunk(uint8, start, end) {\n            var tmp;\n            var output = [];\n            for (var i = start; i < end; i += 3) {\n                tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n                output.push(tripletToBase64(tmp));\n            }\n            return output.join(\"\");\n        }\n        function fromByteArray(uint8) {\n            var tmp;\n            var len = uint8.length;\n            var extraBytes = len % 3;\n            var output = \"\";\n            var parts = [];\n            var maxChunkLength = 16383;\n            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n                parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n            }\n            if (extraBytes === 1) {\n                tmp = uint8[len - 1];\n                output += lookup[tmp >> 2];\n                output += lookup[tmp << 4 & 63];\n                output += \"==\";\n            } else if (extraBytes === 2) {\n                tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n                output += lookup[tmp >> 10];\n                output += lookup[tmp >> 4 & 63];\n                output += lookup[tmp << 2 & 63];\n                output += \"=\";\n            }\n            parts.push(output);\n            return parts.join(\"\");\n        }\n    }, function(module, exports) {\n        exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n            var e, m;\n            var eLen = nBytes * 8 - mLen - 1;\n            var eMax = (1 << eLen) - 1;\n            var eBias = eMax >> 1;\n            var nBits = -7;\n            var i = isLE ? nBytes - 1 : 0;\n            var d = isLE ? -1 : 1;\n            var s = buffer[offset + i];\n            i += d;\n            e = s & (1 << -nBits) - 1;\n            s >>= -nBits;\n            nBits += eLen;\n            for (;nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n            m = e & (1 << -nBits) - 1;\n            e >>= -nBits;\n            nBits += mLen;\n            for (;nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n            if (e === 0) {\n                e = 1 - eBias;\n            } else if (e === eMax) {\n                return m ? NaN : (s ? -1 : 1) * Infinity;\n            } else {\n                m = m + Math.pow(2, mLen);\n                e = e - eBias;\n            }\n            return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n        };\n        exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n            var e, m, c;\n            var eLen = nBytes * 8 - mLen - 1;\n            var eMax = (1 << eLen) - 1;\n            var eBias = eMax >> 1;\n            var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n            var i = isLE ? 0 : nBytes - 1;\n            var d = isLE ? 1 : -1;\n            var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n            value = Math.abs(value);\n            if (isNaN(value) || value === Infinity) {\n                m = isNaN(value) ? 1 : 0;\n                e = eMax;\n            } else {\n                e = Math.floor(Math.log(value) / Math.LN2);\n                if (value * (c = Math.pow(2, -e)) < 1) {\n                    e--;\n                    c *= 2;\n                }\n                if (e + eBias >= 1) {\n                    value += rt / c;\n                } else {\n                    value += rt * Math.pow(2, 1 - eBias);\n                }\n                if (value * c >= 2) {\n                    e++;\n                    c /= 2;\n                }\n                if (e + eBias >= eMax) {\n                    m = 0;\n                    e = eMax;\n                } else if (e + eBias >= 1) {\n                    m = (value * c - 1) * Math.pow(2, mLen);\n                    e = e + eBias;\n                } else {\n                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n                    e = 0;\n                }\n            }\n            for (;mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {}\n            e = e << mLen | m;\n            eLen += mLen;\n            for (;eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {}\n            buffer[offset + i - d] |= s * 128;\n        };\n    }, function(module, exports) {\n        var toString = {}.toString;\n        module.exports = Array.isArray || function(arr) {\n            return toString.call(arr) == \"[object Array]\";\n        };\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Plugin_1 = __webpack_require__(17);\n        var OrthographicCamera = THREE.OrthographicCamera;\n        var Chart_1 = __webpack_require__(21);\n        var Widget_1 = __webpack_require__(30);\n        var Utils_1 = __webpack_require__(18);\n        var AxisWidget_1 = __webpack_require__(31);\n        var GridWidget_1 = __webpack_require__(32);\n        var TrendsGradientWidget_1 = __webpack_require__(34);\n        var TrendsLineWidget_1 = __webpack_require__(36);\n        var TrendsCandleWidget_1 = __webpack_require__(37);\n        var deps_1 = __webpack_require__(19);\n        var Color_1 = __webpack_require__(33);\n        var ChartBlankView = function() {\n            function ChartBlankView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartBlankView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.Color(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets.slice();\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartBlankView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartBlankView.prototype.render = function() {\n                this.chart.render();\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartBlankView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartBlankView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartBlankView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartBlankView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartBlankView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartBlankView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartBlankView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.interpolatedViewport.onInterpolation(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartBlankView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartBlankView.prototype.setupCamera = function() {\n                var camSettings = this.chart.viewport.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new OrthographicCamera(camSettings.left, camSettings.right, camSettings.top, camSettings.bottom, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.left = camSettings.left;\n                    this.camera.right = camSettings.right;\n                    this.camera.top = camSettings.top;\n                    this.camera.bottom = camSettings.bottom;\n                    this.camera.near = camSettings.near;\n                    this.camera.far = camSettings.far;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.left, camSettings.bottom, 0);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.interpolatedViewport.params);\n            };\n            ChartBlankView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartBlankView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartBlankView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartBlankView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartBlankView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartBlankView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartBlankView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                this.chart.zoom(zoomValue, zoomOrigin);\n            };\n            ChartBlankView.devicePixelRatio = window.devicePixelRatio;\n            ChartBlankView.preinstalledWidgets = [];\n            ChartBlankView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartBlankView;\n        }();\n        exports.ChartBlankView = ChartBlankView;\n        var ChartView = function(_super) {\n            __extends(ChartView, _super);\n            function ChartView() {\n                _super.apply(this, arguments);\n            }\n            ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n            return ChartView;\n        }(ChartBlankView);\n        exports.ChartView = ChartView;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(18);\n        var EventEmmiter_1 = __webpack_require__(20);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChangedHandler(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChangedHandler = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(19);\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deps_1.deepExtend({}, obj1, obj2);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.patch = function(objectToPatch, patch) {\n                var idKey = \"_id\";\n                for (var key in patch) {\n                    if (!patch.hasOwnProperty(key)) continue;\n                    if (objectToPatch[key]) {\n                        if (Array.isArray(patch[key])) {\n                            var _loop_1 = function(patchItem) {\n                                var subObject = objectToPatch[key].find(function(item) {\n                                    return item[idKey] != void 0 && item[idKey] === patchItem[idKey];\n                                });\n                                if (subObject) {\n                                    this_1.patch(subObject, patchItem);\n                                } else {\n                                    objectToPatch[key].push(patchItem);\n                                }\n                            };\n                            var this_1 = this;\n                            for (var _i = 0, _a = patch[key]; _i < _a.length; _i++) {\n                                var patchItem = _a[_i];\n                                _loop_1(patchItem);\n                            }\n                            continue;\n                        } else if (typeof patch[key] === \"object\" && objectToPatch[key] != void 0) {\n                            if (patch[idKey] && Object.keys(patch).length == 1) {\n                                delete objectToPatch[key];\n                            } else {\n                                this.patch(objectToPatch[key], patch[key]);\n                            }\n                            continue;\n                        }\n                    }\n                    objectToPatch[key] = patch[key];\n                }\n                if (objectToPatch[\"_onUpdate\"]) objectToPatch[\"_onUpdate\"].call(objectToPatch, patch);\n                return objectToPatch;\n            };\n            Utils.travers = function(object, fn) {\n                for (var key in object) {\n                    if (!object.hasOwnProperty(key)) continue;\n                    var allowTraverseDeeper = fn(object[key]);\n                    var canTraverseDeeper = allowTraverseDeeper && typeof object[key] == \"object\";\n                    if (canTraverseDeeper) this.travers(object[key], fn);\n                }\n            };\n            Utils.setIdsToArrayItems = function(sourceObject) {\n                var idKey = \"_id\";\n                Utils.travers(sourceObject, function(item) {\n                    if (!Array.isArray(item)) return true;\n                    var arr = item;\n                    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                        var obj = arr_1[_i];\n                        if (typeof obj !== \"object\" || Array.isArray(obj)) continue;\n                        if (!obj[idKey]) obj[idKey] = Utils.getUid();\n                    }\n                });\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn && fn(ctx, width, height);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createNearestTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.magFilter = THREE.NearestFilter;\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.binarySearchInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((hi - lo) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                    if (arr[lo][key] == num) {\n                        return lo;\n                    } else if (arr[hi][key] == num) {\n                        return hi;\n                    }\n                }\n                return arr[lo] && arr[lo][key] == num ? lo : -1;\n            };\n            Utils.binarySearch = function(arr, num, key) {\n                var ind = this.binarySearchInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else if (typeof srcObject[key] == \"function\") {\n                        dstObject[key] = srcObject[key];\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(19);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(22);\n        var EventEmmiter_1 = __webpack_require__(20);\n        var Utils_1 = __webpack_require__(18);\n        var TrendsManager_1 = __webpack_require__(24);\n        var Viewport_1 = __webpack_require__(25);\n        var InterpolatedViewport_1 = __webpack_require__(26);\n        var deps_1 = __webpack_require__(2);\n        var AnimationManager_1 = __webpack_require__(27);\n        var Easing_1 = __webpack_require__(28);\n        var interfaces_1 = __webpack_require__(29);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            VIEWPORT_CHANGE: \"viewportChange\",\n            DRAG_STATE_CHAGED: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: 250,\n                        scrollSpeed: 1e3,\n                        scrollEase: Easing_1.EASING.Quadratic.Out,\n                        zoomEase: Easing_1.EASING.Quadratic.Out,\n                        autoScrollSpeed: 1100,\n                        autoScrollEase: Easing_1.EASING.Linear.None\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280,\n                    inertialScroll: false\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.isDestroyed = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.patch(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.animationManager = new AnimationManager_1.AnimationManager();\n                this.animationManager.setAimationsEnabled(this.state.animations.enabled);\n                this.viewport = new Viewport_1.Viewport(this);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.interpolatedViewport = new InterpolatedViewport_1.InterpolatedViewport(this);\n                this.bindEvents();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n                this.isDestroyed = true;\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onDragStateChanged = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onViewportChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.VIEWPORT_CHANGE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.render = function() {\n                this.animationManager.tick();\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                if (this.isDestroyed) {\n                    Utils_1.Utils.error(\"You have tried to change state of destroyed Chart instance\");\n                }\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                newState = Utils_1.Utils.deepMerge({}, newState);\n                Utils_1.Utils.setIdsToArrayItems(newState);\n                var currentStateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (currentStateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                this.state = Utils_1.Utils.patch(this.state, newState);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.patch({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.viewport.pxToValByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.patch(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        Utils_1.Utils.patch(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        Utils_1.Utils.patch(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        Utils_1.Utils.patch(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        Utils_1.Utils.patch(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                Utils_1.Utils.patch(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var dragEventNeeded = changedProps.cursor && changedProps.cursor.dragMode != prevState.cursor.dragMode;\n                dragEventNeeded && this.ee.emit(CHART_STATE_EVENTS.DRAG_STATE_CHAGED, changedProps.cursor.dragMode, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll != void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var viewportChangeEventNeeded = scrollChangeEventsNeeded || zoomEventsNeeded || resizeEventNeeded;\n                if (viewportChangeEventNeeded) this.ee.emit(CHART_STATE_EVENTS.VIEWPORT_CHANGE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = plugin.initialState;\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n                this.onDragStateChanged(function(dragState) {\n                    return _this.onDragStateChangedHandler(dragState);\n                });\n                this.ee.on(\"animationsChange\", function(animationOptions) {\n                    if (animationOptions.enabled !== _this.animationManager.isAnimationsEnabled) {\n                        _this.animationManager.setAimationsEnabled(animationOptions.enabled);\n                    }\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n                var state = this.state;\n                if (!state.autoScroll || state.cursor.dragMode) return;\n                var oldTrendsMaxX = state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleXVal = this.viewport.getRightVal();\n                    var paddingRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.padding.end - state.xAxis.range.margin.end);\n                    var marginRightVal = this.viewport.getValByViewportX(this.state.width - state.xAxis.range.margin.end);\n                    var currentScroll = state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < marginRightVal || oldTrendsMaxX > maxVisibleXVal) {\n                        return;\n                    }\n                    var scrollDelta = state.computedData.trends.maxXVal - paddingRightVal;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onDragStateChangedHandler = function(isDragMode) {\n                var state = this.state;\n                if (!state.inertialScroll || isDragMode) return;\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.viewport.getViewportYByVal(maxY));\n                    var minScreenY = Math.round(this.viewport.getViewportYByVal(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.viewport.pxToValByXAxis(state.width) + this.viewport.pxToValByXAxis(range.padding.end + range.margin.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = state.animations.enabled ? state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime);\n                });\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(18);\n        var TrendSegmentsManager_1 = __webpack_require__(23);\n        var EventEmmiter_1 = __webpack_require__(20);\n        var deps_1 = __webpack_require__(2);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chart = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chart.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chart, this);\n                this.bindEvents();\n            }\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chart;\n                chartState.onDragStateChanged(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chart.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chart.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chart.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chart;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.viewport.getViewportYByVal(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(20);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(22);\n        var Utils_1 = __webpack_require__(18);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chart, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.unbindList = [];\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.unbindList = [ this.chart.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                }), this.chart.onZoom(function() {\n                    return _this.onZoomHandler();\n                }), this.chart.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }) ];\n            };\n            TrendSegmentsManager.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbind) {\n                    return unbind();\n                });\n            };\n            TrendSegmentsManager.prototype.onInitialStateAppliedHandler = function() {\n                this.maxSegmentLength = this.trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.unbindEvents();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chart.viewport.valToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chart.viewport.pxToValByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chart.viewport.pxToValByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chart.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) {\n                            initialAnimationState = initialSegment.createAnimationState();\n                        }\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.currentAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chart.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chart.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(22);\n        var EventEmmiter_1 = __webpack_require__(20);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var _this = this;\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                trend.segmentsManager.onRebuild(function() {\n                    return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                });\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports) {\n        \"use strict\";\n        var Viewport = function() {\n            function Viewport(chart) {\n                this.params = {};\n                this.chart = chart;\n                this.updateParams();\n                this.bindEvents();\n            }\n            Viewport.prototype.bindEvents = function() {\n                var _this = this;\n                this.chart.onChange(function() {\n                    return _this.updateParams();\n                });\n            };\n            Viewport.prototype.updateParams = function() {\n                var state = this.chart.state;\n                this.params.scrollXVal = state.xAxis.range.scroll;\n                this.params.scrollYVal = state.yAxis.range.scroll;\n                this.params.scrollX = this.valToPxByXAxis(this.params.scrollXVal);\n                this.params.scrollY = this.valToPxByYAxis(this.params.scrollYVal);\n                this.params.zoomX = state.xAxis.range.zoom;\n                this.params.zoomY = state.yAxis.range.zoom;\n            };\n            Viewport.prototype.getCameraSettings = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                return {\n                    left: 0,\n                    right: width,\n                    top: height,\n                    bottom: 0,\n                    near: -500,\n                    far: 1e3\n                };\n            };\n            Viewport.prototype.getWorldXByVal = function(xVal) {\n                var _a = this.chart.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.params.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Viewport.prototype.getWorldYByVal = function(yVal) {\n                var _a = this.chart.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.params.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Viewport.prototype.getWorldXByViewportX = function(viewportX) {\n                return this.getWorldXByVal(this.getValByViewportX(viewportX));\n            };\n            Viewport.prototype.getWorldYByViewportY = function(viewportY) {\n                return this.getWorldYByVal(this.getValByViewportY(viewportY));\n            };\n            Viewport.prototype.getValByWorldX = function(worldX) {\n                return this.chart.state.xAxis.range.zeroVal + this.pxToValByXAxis(worldX);\n            };\n            Viewport.prototype.getValByWorldY = function(worldY) {\n                return this.chart.state.yAxis.range.zeroVal + this.pxToValByYAxis(worldY);\n            };\n            Viewport.prototype.getValByViewportX = function(x) {\n                return this.chart.state.xAxis.range.zeroVal + this.params.scrollXVal + this.pxToValByXAxis(x);\n            };\n            Viewport.prototype.getValByViewportY = function(y) {\n                return this.chart.state.yAxis.range.zeroVal + this.params.scrollYVal + this.pxToValByYAxis(y);\n            };\n            Viewport.prototype.getViewportXByVal = function(xVal) {\n                return this.getWorldXByVal(xVal) - this.params.scrollX;\n            };\n            Viewport.prototype.getViewportYByVal = function(yVal) {\n                return this.getWorldYByVal(yVal) - this.params.scrollY;\n            };\n            Viewport.prototype.getViewportXByWorldX = function(worldX) {\n                return worldX - this.params.scrollX;\n            };\n            Viewport.prototype.valToPxByXAxis = function(val) {\n                return val * this.chart.state.xAxis.range.scaleFactor * this.params.zoomX;\n            };\n            Viewport.prototype.valToPxByYAxis = function(val) {\n                return val * this.chart.state.yAxis.range.scaleFactor * this.params.zoomY;\n            };\n            Viewport.prototype.pxToValByXAxis = function(pixelsCount) {\n                return pixelsCount / this.chart.state.xAxis.range.scaleFactor / this.params.zoomX;\n            };\n            Viewport.prototype.pxToValByYAxis = function(pixelsCount) {\n                return pixelsCount / this.chart.state.yAxis.range.scaleFactor / this.params.zoomY;\n            };\n            Viewport.prototype.getTop = function() {\n                return this.params.scrollY + this.chart.state.height;\n            };\n            Viewport.prototype.getRight = function() {\n                return this.params.scrollX + this.chart.state.width;\n            };\n            Viewport.prototype.getBottom = function() {\n                return this.params.scrollY;\n            };\n            Viewport.prototype.getLeft = function() {\n                return this.params.scrollX;\n            };\n            Viewport.prototype.getTopVal = function() {\n                return this.getValByWorldY(this.getTop());\n            };\n            Viewport.prototype.getRightVal = function() {\n                return this.getValByWorldX(this.getRight());\n            };\n            Viewport.prototype.getBottomVal = function() {\n                return this.getValByWorldY(this.getBottom());\n            };\n            Viewport.prototype.getLeftVal = function() {\n                return this.getValByWorldX(this.getLeft());\n            };\n            return Viewport;\n        }();\n        exports.Viewport = Viewport;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var EventEmmiter_1 = __webpack_require__(20);\n        var Viewport_1 = __webpack_require__(25);\n        (function(INTERPOLATION_EVENT) {\n            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"STARTED\"] = 0] = \"STARTED\";\n            INTERPOLATION_EVENT[INTERPOLATION_EVENT[\"FINISHED\"] = 1] = \"FINISHED\";\n        })(exports.INTERPOLATION_EVENT || (exports.INTERPOLATION_EVENT = {}));\n        var INTERPOLATION_EVENT = exports.INTERPOLATION_EVENT;\n        var SCREEN_EVENTS = {\n            ZOOM_FRAME: \"zoomFrame\",\n            SCROLL_FRAME: \"scrollFrame\",\n            TRANSFORMATION_FRAME: \"transformationFrame\",\n            TRANSFORMATION_EVENT: \"transformationStateChanged\"\n        };\n        var InterpolatedViewport = function(_super) {\n            __extends(InterpolatedViewport, _super);\n            function InterpolatedViewport(chart) {\n                _super.call(this, chart);\n                this.interpolationInProgress = false;\n                var _a = chart.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.setParams(chart.viewport.params);\n            }\n            InterpolatedViewport.prototype.onZoomInterpolation = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.ZOOM_FRAME, cb);\n            };\n            InterpolatedViewport.prototype.onScrollInterpolation = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.SCROLL_FRAME, cb);\n            };\n            InterpolatedViewport.prototype.onInterpolation = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_FRAME, cb);\n            };\n            InterpolatedViewport.prototype.onInterpolationEvent = function(cb) {\n                return this.ee.subscribe(SCREEN_EVENTS.TRANSFORMATION_EVENT, cb);\n            };\n            InterpolatedViewport.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && !this.scrollXAnimation.isFinished || this.zoomXAnimation && !this.zoomXAnimation.isFinished);\n            };\n            InterpolatedViewport.prototype.setParams = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.params.scrollX = scrollX;\n                if (scrollY != void 0) this.params.scrollY = scrollY;\n                if (zoomX != void 0) this.params.zoomX = zoomX;\n                if (zoomY != void 0) this.params.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValByXAxis(scrollX != void 0 ? scrollX : this.params.scrollX);\n                    this.params.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValByYAxis(scrollY != void 0 ? scrollY : this.params.scrollY);\n                    this.params.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                var hasActiveAnimations = this.scrollXAnimation && !this.scrollXAnimation.isStopped || this.scrollYAnimation && !this.scrollYAnimation.isStopped || this.zoomXAnimation && !this.zoomXAnimation.isStopped || this.zoomYAnimation && !this.zoomYAnimation.isStopped;\n                var interpolationStarted = hasActiveAnimations && !this.interpolationInProgress;\n                var interpolationFinished = !hasActiveAnimations && this.interpolationInProgress;\n                if (interpolationStarted) {\n                    this.interpolationInProgress = true;\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.STARTED);\n                }\n                if (interpolationFinished) {\n                    this.interpolationInProgress = false;\n                }\n                if (!this.interpolationInProgress) {\n                    this.params.scrollX = options.scrollX = Math.round(this.params.scrollX);\n                    this.params.scrollY = options.scrollY = Math.round(this.params.scrollY);\n                }\n                this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_FRAME, options);\n                var scrollEventNeeded = options.scrollXVal != void 0 || options.scrollYVal != void 0;\n                if (scrollEventNeeded) this.ee.emit(SCREEN_EVENTS.SCROLL_FRAME, options);\n                var zoomEventNeeded = options.zoomX != void 0 || options.zoomY != void 0;\n                if (zoomEventNeeded) this.ee.emit(SCREEN_EVENTS.ZOOM_FRAME, options);\n                if (interpolationFinished) {\n                    this.ee.emit(SCREEN_EVENTS.TRANSFORMATION_EVENT, INTERPOLATION_EVENT.FINISHED);\n                }\n            };\n            InterpolatedViewport.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            InterpolatedViewport.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            InterpolatedViewport.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var chart = this.chart;\n                var isDragMode = chart.state.cursor.dragMode;\n                var animations = chart.state.animations;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = chart.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                var range = chart.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                if (isDragMode && !chart.state.inertialScroll) time = 0;\n                if (this.scrollXAnimation) this.scrollXAnimation.stop();\n                this.scrollXAnimation = chart.animationManager.animate(time, ease).from(this.params.scrollX).to(targetX).onTick(function(value) {\n                    _this.setParams({\n                        scrollX: value\n                    });\n                });\n            };\n            InterpolatedViewport.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var range = chart.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                if (this.scrollYAnimation) this.scrollYAnimation.stop();\n                this.scrollYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.scrollY).to(targetY).onTick(function(value) {\n                    _this.setParams({\n                        scrollY: value\n                    });\n                });\n            };\n            InterpolatedViewport.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var animations = chart.state.animations;\n                var targetZoom = chart.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.stop();\n                this.zoomXAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomX).to(targetZoom).onTick(function(value) {\n                    _this.setParams({\n                        zoomX: value\n                    });\n                });\n            };\n            InterpolatedViewport.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var chart = this.chart;\n                var targetZoom = chart.state.yAxis.range.zoom;\n                var animations = chart.state.animations;\n                if (this.zoomYAnimation) this.zoomYAnimation.stop();\n                this.zoomYAnimation = chart.animationManager.animate(animations.zoomSpeed, animations.zoomEase).from(this.params.zoomY).to(targetZoom).onTick(function(value) {\n                    _this.setParams({\n                        zoomY: value\n                    });\n                });\n            };\n            return InterpolatedViewport;\n        }(Viewport_1.Viewport);\n        exports.InterpolatedViewport = InterpolatedViewport;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Easing_1 = __webpack_require__(28);\n        var AnimationManager = function() {\n            function AnimationManager() {\n                this.isAnimationsEnabled = true;\n                this.animations = [];\n                this.lastTickTime = Date.now();\n            }\n            AnimationManager.prototype.animate = function(time, timingFunction) {\n                var animation = new Animation(this, time, this.lastTickTime, timingFunction);\n                this.animations.push(animation);\n                return animation;\n            };\n            AnimationManager.prototype.animateObj = function(source, target) {};\n            AnimationManager.prototype.setAimationsEnabled = function(isEnabled) {\n                this.isAnimationsEnabled = isEnabled;\n            };\n            AnimationManager.prototype.tick = function() {\n                var now = Date.now();\n                var animations = this.animations;\n                for (var i_1 = 0; i_1 < animations.length; i_1++) {\n                    var animation = animations[i_1];\n                    if (this.isAnimationsEnabled) {\n                        animation.tick(now);\n                    } else {\n                        animation.completeAndStop();\n                    }\n                }\n                var i = animations.length;\n                while (i--) if (animations[i].isStopped) animations.splice(i, 1);\n                this.lastTickTime = now;\n            };\n            AnimationManager.prototype.hasActiveAnimations = function() {\n                return this.animations.length > 0;\n            };\n            return AnimationManager;\n        }();\n        exports.AnimationManager = AnimationManager;\n        var Animation = function() {\n            function Animation(animationManager, time, createdTime, easing) {\n                if (easing === void 0) {\n                    easing = Easing_1.EASING.Quadratic.Out;\n                }\n                this.animationManager = animationManager;\n                this.time = time;\n                this.createdTime = createdTime;\n                this.easing = easing;\n                this.progress = 0;\n                this.delay = 0;\n                this.isFinished = false;\n                this.isStopped = false;\n                this.startTime = createdTime;\n            }\n            Animation.prototype.tick = function(now) {\n                if (!this.isStopped) {\n                    var progress = this.time > 0 ? (now - this.startTime) / this.time : 1;\n                    this.setProgress(progress);\n                }\n            };\n            Animation.prototype.from = function(sourceObj) {\n                if (typeof sourceObj == \"object\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = {};\n                    var sourceIteralable = sourceObj;\n                    for (var key in sourceIteralable) if (typeof sourceIteralable[key] == \"number\") {\n                        this.initialObj[key] = sourceIteralable[key];\n                    }\n                } else if (typeof sourceObj == \"number\") {\n                    this.sourceObj = sourceObj;\n                    this.initialObj = sourceObj;\n                }\n                return this;\n            };\n            Animation.prototype.to = function(targetObj) {\n                this.targetObject = targetObj;\n                if (typeof this.initialObj == \"object\") {\n                    var initialIteralable = this.initialObj;\n                    for (var key in this.targetObject) {\n                        if (initialIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                    var targetIteralable = this.targetObject;\n                    for (var key in initialIteralable) {\n                        if (targetIteralable[key] == void 0) delete initialIteralable[key];\n                    }\n                }\n                return this;\n            };\n            Animation.prototype.onTick = function(onTickCb) {\n                this.onTickCb = onTickCb;\n                return this;\n            };\n            Animation.prototype.then = function(onFinishCb) {\n                this.onFinishCb = onFinishCb;\n                return this;\n            };\n            Animation.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Animation.prototype.completeAndStop = function() {\n                this.setProgress(1);\n            };\n            Animation.prototype.withDelay = function(delay) {\n                this.delay = delay;\n                this.startTime = this.createdTime + delay;\n                return this;\n            };\n            Animation.prototype.setProgress = function(progress) {\n                if (progress < 0) return;\n                progress = Math.min(progress, 1);\n                this.progress = progress;\n                var k = this.easing(progress);\n                if (typeof this.sourceObj == \"number\") {\n                    var initialVal = this.initialObj;\n                    var targetVal = this.targetObject;\n                    this.sourceObj = initialVal + (targetVal - initialVal) * k;\n                } else if (this.sourceObj && this.targetObject) {\n                    for (var key in this.initialObj) {\n                        var initialVal = this.initialObj[key];\n                        var targetVal = this.targetObject[key];\n                        this.sourceObj[key] = initialVal + (targetVal - initialVal) * k;\n                    }\n                }\n                if (progress == 1) {\n                    this.isStopped = true;\n                    this.isFinished = true;\n                }\n                if (this.onTickCb) this.onTickCb(this.sourceObj, progress, k, this);\n                if (progress == 1 && this.onFinishCb) this.onFinishCb(this.sourceObj, this);\n            };\n            return Animation;\n        }();\n        exports.Animation = Animation;\n    }, function(module, exports) {\n        \"use strict\";\n        exports.EASING = {\n            Linear: {\n                None: function(k) {\n                    return k;\n                }\n            },\n            Quadratic: {\n                In: function(k) {\n                    return k * k;\n                },\n                Out: function(k) {\n                    return k * (2 - k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k;\n                    }\n                    return -.5 * (--k * (k - 2) - 1);\n                }\n            },\n            Cubic: {\n                In: function(k) {\n                    return k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k + 2);\n                }\n            },\n            Quartic: {\n                In: function(k) {\n                    return k * k * k * k;\n                },\n                Out: function(k) {\n                    return 1 - --k * k * k * k;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k;\n                    }\n                    return -.5 * ((k -= 2) * k * k * k - 2);\n                }\n            },\n            Quintic: {\n                In: function(k) {\n                    return k * k * k * k * k;\n                },\n                Out: function(k) {\n                    return --k * k * k * k * k + 1;\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return .5 * k * k * k * k * k;\n                    }\n                    return .5 * ((k -= 2) * k * k * k * k + 2);\n                }\n            },\n            Sinusoidal: {\n                In: function(k) {\n                    return 1 - Math.cos(k * Math.PI / 2);\n                },\n                Out: function(k) {\n                    return Math.sin(k * Math.PI / 2);\n                },\n                InOut: function(k) {\n                    return .5 * (1 - Math.cos(Math.PI * k));\n                }\n            },\n            Exponential: {\n                In: function(k) {\n                    return k === 0 ? 0 : Math.pow(1024, k - 1);\n                },\n                Out: function(k) {\n                    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    if ((k *= 2) < 1) {\n                        return .5 * Math.pow(1024, k - 1);\n                    }\n                    return .5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n                }\n            },\n            Circular: {\n                In: function(k) {\n                    return 1 - Math.sqrt(1 - k * k);\n                },\n                Out: function(k) {\n                    return Math.sqrt(1 - --k * k);\n                },\n                InOut: function(k) {\n                    if ((k *= 2) < 1) {\n                        return -.5 * (Math.sqrt(1 - k * k) - 1);\n                    }\n                    return .5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n                }\n            },\n            Elastic: {\n                In: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                },\n                Out: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    return Math.pow(2, -10 * k) * Math.sin((k - .1) * 5 * Math.PI) + 1;\n                },\n                InOut: function(k) {\n                    if (k === 0) {\n                        return 0;\n                    }\n                    if (k === 1) {\n                        return 1;\n                    }\n                    k *= 2;\n                    if (k < 1) {\n                        return -.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n                    }\n                    return .5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n                }\n            },\n            Back: {\n                In: function(k) {\n                    var s = 1.70158;\n                    return k * k * ((s + 1) * k - s);\n                },\n                Out: function(k) {\n                    var s = 1.70158;\n                    return --k * k * ((s + 1) * k + s) + 1;\n                },\n                InOut: function(k) {\n                    var s = 1.70158 * 1.525;\n                    if ((k *= 2) < 1) {\n                        return .5 * (k * k * ((s + 1) * k - s));\n                    }\n                    return .5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n                }\n            },\n            Bounce: {\n                In: function(k) {\n                    return 1 - exports.EASING.Bounce.Out(1 - k);\n                },\n                Out: function(k) {\n                    if (k < 1 / 2.75) {\n                        return 7.5625 * k * k;\n                    } else if (k < 2 / 2.75) {\n                        return 7.5625 * (k -= 1.5 / 2.75) * k + .75;\n                    } else if (k < 2.5 / 2.75) {\n                        return 7.5625 * (k -= 2.25 / 2.75) * k + .9375;\n                    } else {\n                        return 7.5625 * (k -= 2.625 / 2.75) * k + .984375;\n                    }\n                },\n                InOut: function(k) {\n                    if (k < .5) {\n                        return exports.EASING.Bounce.In(k * 2) * .5;\n                    }\n                    return exports.EASING.Bounce.Out(k * 2 - 1) * .5 + .5;\n                }\n            }\n        };\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(30);\n        var GridWidget_1 = __webpack_require__(32);\n        var Utils_1 = __webpack_require__(18);\n        var interfaces_1 = __webpack_require__(29);\n        var Color_1 = __webpack_require__(33);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.interpolatedViewport.params.scrollX, this.chart.interpolatedViewport.params.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.interpolatedViewport.onInterpolation(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.interpolatedViewport.onZoomInterpolation(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createNearestTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.Color(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.DoubleSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.interpolatedViewport.params, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.interpolatedViewport.getWorldXByVal(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.interpolatedViewport.getWorldYByVal(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(30);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(18);\n        var Color_1 = __webpack_require__(33);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.Color(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.viewport.pxToValByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chart = this.chart;\n                var localXVal = xVal - chart.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chart.viewport.pxToValByYAxis(chart.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var Color = function() {\n            function Color(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            Color.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            Color.numberToHexStr = function(value) {\n                var result = value.toString(16);\n                return \"#\" + \"0\".repeat(6 - result.length) + result;\n            };\n            Color.prototype.set = function(color) {\n                if (typeof color == \"number\") color = Color.numberToHexStr(color);\n                var colorStr = color;\n                var rgba = Color.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = Color.numberToHexStr(this.value);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            Color.prototype.getTransparent = function(opacity) {\n                return new Color(\"rgba(\" + this.hexStr + \", \" + opacity + \")\");\n            };\n            return Color;\n        }();\n        exports.Color = Color;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(18);\n        var TrendsWidget_1 = __webpack_require__(35);\n        var Color_1 = __webpack_require__(33);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.Color(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i < segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.viewport.pxToValByYAxis(this.chart.state.height), this.chart.interpolatedViewport.pxToValByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(30);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.interpolatedViewport.onInterpolation(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.interpolatedViewport.onZoomInterpolation(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(35);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(22);\n        var Utils_1 = __webpack_require__(18);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(35);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(22);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({\n                    side: THREE.DoubleSide\n                }));\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(18);\n        var EventEmmiter_1 = __webpack_require__(20);\n        var UniqCollectionItem = function() {\n            function UniqCollectionItem() {}\n            UniqCollectionItem.prototype.getId = function() {\n                return this._id;\n            };\n            return UniqCollectionItem;\n        }();\n        exports.UniqCollectionItem = UniqCollectionItem;\n        var ID_KEY = \"_id\";\n        var EVENTS = {\n            CREATE: \"create\",\n            UPDATE: \"update\",\n            REMOVE: \"remove\"\n        };\n        var UniqCollection = function() {\n            function UniqCollection(options) {\n                this.items = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n            }\n            UniqCollection.prototype.patch = function(models) {\n                var options = this.options;\n                for (var _i = 0, models_1 = models; _i < models_1.length; _i++) {\n                    var model = models_1[_i];\n                    var id = model[ID_KEY];\n                    if (!id) Utils_1.Utils.error(\"Collection item without id detected\");\n                    var ind = this.getItemInd(id);\n                    var item = this.items[ind];\n                    var justCreated = false;\n                    if (!item) {\n                        justCreated = true;\n                        item = options.createInstance(model);\n                        this.items.push(item);\n                    }\n                    if (Object.keys(model).length > 1) {\n                        var prevProps = {};\n                        Utils_1.Utils.copyProps(item, prevProps, model);\n                        Utils_1.Utils.patch(item, model);\n                        justCreated && this.ee.emit(EVENTS.CREATE, item);\n                        this.ee.emit(EVENTS.UPDATE, item, model, prevProps);\n                    } else {\n                        this.items.splice(ind, 1);\n                        this.ee.emit(EVENTS.REMOVE, item);\n                    }\n                }\n            };\n            UniqCollection.prototype.getItem = function(id) {\n                return this.items[this.getItemInd(id)];\n            };\n            UniqCollection.prototype.getLast = function() {\n                return this.items[this.items.length - 1];\n            };\n            UniqCollection.prototype.forEach = function(cb) {\n                for (var key in this.items) cb(this.items[key]);\n            };\n            UniqCollection.prototype.filter = function(cb) {\n                var result = [];\n                this.forEach(function(item) {\n                    return cb(item) && result.push(item);\n                });\n                return result;\n            };\n            UniqCollection.prototype.onCreate = function(cb) {\n                return this.ee.subscribe(EVENTS.CREATE, cb);\n            };\n            UniqCollection.prototype.onUpdate = function(cb) {\n                return this.ee.subscribe(EVENTS.UPDATE, cb);\n            };\n            UniqCollection.prototype.onRemove = function(cb) {\n                return this.ee.subscribe(EVENTS.REMOVE, cb);\n            };\n            UniqCollection.prototype.getItemInd = function(id) {\n                return Utils_1.Utils.binarySearchInd(this.items, id, ID_KEY);\n            };\n            return UniqCollection;\n        }();\n        exports.UniqCollection = UniqCollection;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(31));\n        __export(__webpack_require__(32));\n        __export(__webpack_require__(35));\n        __export(__webpack_require__(36));\n        __export(__webpack_require__(34));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 41\n ** module chunks = 1\n **/","export * from './TrendsMarksPlugin';\nexport * from './TrendsMarksWidget';\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/index.ts\n **/","\nimport Vector3 = THREE.Vector3;\nimport { ChartPlugin, ChartWidget, TrendSegment, TREND_TYPE, Utils, Chart, TColor, TEase } from 'three-charts';\nimport { TrendsMarksWidget, DEFAULT_RENDERER, TrendMarkWidget } from './TrendsMarksWidget';\nimport { EASING } from \"../../../src/Easing\";\n\nexport enum TREND_MARK_SIDE {TOP, BOTTOM}\nexport enum EVENTS {CHANGE}\nexport enum TEXTURE_FILTER {AUTO, LINEAR, NEAREST}\nexport type TTrendsMarksPluginOptions = {items: ITrendMarkOptions[]};\n\nexport interface ITrendMarkOptions {\n\ttrendName: string,\n\txVal: number,\n\ttitle?: string,\n\tname?: string,\n\tcolor?: TColor,\n\torientation?: TREND_MARK_SIDE,\n\twidth?: number,\n\theight?: number,\n\ttextureFilter?: TEXTURE_FILTER\n\t/**\n\t * space between marks\n\t */\n\tmargin?: number,\n\t/**\n\t * custom render function\n\t */\n\tonRender?: (\n\t\ttrendMarkWidget: TrendMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\tchart: Chart\n\t) => any,\n\tease?: TEase,\n\teaseSpeed?: number,\n\tuserData?: any\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: ITrendMarkOptions = {\n\ttrendName: '',\n\ttitle: '',\n\tcolor: 'rgba(#0099d9, 0.5)',\n\txVal: 0,\n\torientation: TREND_MARK_SIDE.TOP,\n\twidth: 105,\n\theight: 100,\n\tmargin: 10,\n\tease: EASING.Elastic.Out,\n\teaseSpeed: 1000,\n\ttextureFilter: TEXTURE_FILTER.AUTO,\n\tonRender: DEFAULT_RENDERER\n};\n\n\nexport class TrendsMarksPlugin extends ChartPlugin<TTrendsMarksPluginOptions> {\n\tstatic NAME = 'TrendsMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [TrendsMarksWidget];\n\n\tprivate items: {[name: string]: TrendMark} = {};\n\tprivate rects: {[name: string]: number[]} = {};\n\n\tconstructor(trendsMarksPluginOptions: TTrendsMarksPluginOptions) {\n\t\tsuper(trendsMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t\tthis.bindEvents();\n\t}\n\n\n\tprotected onStateChangedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n\tcreateMark(options: ITrendMarkOptions) {\n\t\tvar marksOptions = this.getOptions().items;\n\t\tvar newMarkOptions = marksOptions.concat([options]);\n\t\tthis.chart.setState({pluginsState: {[this.name]: {items: newMarkOptions}}});\n\t}\n\n\tonChange(cb: () => any) {\n\t\treturn this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chart.trendsManager.onSegmentsRebuilded(() => {\n\t\t\tthis.updateMarksSegments()\n\t\t});\n\t\tthis.chart.interpolatedViewport.onZoomInterpolation(() => this.calclulateMarksPositions());\n\t}\n\n\tprivate onMarksChangeHandler() {\n\t\tvar trendsMarksOptions = this.getOptions().items;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let options of trendsMarksOptions) {\n\t\t\tvar marks = this.items;\n\n\t\t\t// set mark name\n\t\t\tif (!options.name) {\n\t\t\t\toptions.name = Utils.getUid().toString();\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t} else if (marks[options.name]) {\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\n\t\t\tlet mark = new TrendMark(this.chart, options);\n\t\t\tmarks[options.name] = mark;\n\t\t}\n\n\t\t// delete not relevant marks\n\t\tfor (let markName in this.items) {\n\t\t\tif (actualMarksNames.indexOf(markName) != -1) continue;\n\t\t\tdelete this.items[markName];\n\t\t}\n\t\tthis.updateMarksSegments();\n\t}\n\n\n\tprivate calclulateMarksPositions() {\n\t\tthis.rects = {};\n\t\tfor (let markName in this.items) {\n\t\t\tthis.createMarkRect(this.items[markName]);\n\t\t}\n\t}\n\n\tprivate createMarkRect(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\n\t\tlet chart = this.chart;\n\t\tlet options = mark.options;\n\t\tlet {width, height, name} = options;\n\t\tlet left = chart.viewport.getWorldXByVal(mark.xVal) - width / 2;\n\t\tlet top = chart.viewport.getWorldYByVal(mark.yVal);\n\t\tlet isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t\tlet newOffset: number;\n\t\tlet row = 0;\n\n\t\tif (isTopSideMark) {\n\t\t\ttop += height;\n\t\t}\n\n\t\tlet markRect = [left, top, width, height];\n\t\tlet hasIntersection = false;\n\t\tdo {\n\t\t\tfor (let markName in this.rects) {\n\t\t\t\tlet rect = this.rects[markName];\n\t\t\t\thasIntersection = Utils.rectsIntersect(rect, markRect);\n\t\t\t\tif (!hasIntersection) continue;\n\t\t\t\tif (isTopSideMark) {\n\t\t\t\t\tmarkRect[1] = rect[1] + markRect[3] + options.margin;\n\t\t\t\t} else {\n\t\t\t\t\tmarkRect[1] = rect[1] - rect[3] - options.margin;\n\t\t\t\t}\n\t\t\t\trow++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (hasIntersection);\n\n\t\tif (isTopSideMark) {\n\t\t\tnewOffset = markRect[1] - markRect[3] - chart.viewport.getWorldYByVal(mark.yVal);\n\t\t} else {\n\t\t\tnewOffset = chart.viewport.getWorldYByVal(mark.yVal) - markRect[1];\n\t\t}\n\n\t\tmark._setOffset(newOffset);\n\t\tmark._setRow(row);\n\t\tthis.rects[name] = markRect;\n\t}\n\n\tprivate updateMarksSegments() {\n\t\tlet chart = this.chart;\n\t\tlet trends = chart.trendsManager.trends;\n\t\tfor (let trendName in trends) {\n\t\t\tvar marks = this.getTrendMarks(trendName);\n\t\t\tvar marksArr: TrendMark[] = [];\n\t\t\tvar xVals: number[] = [];\n\t\t\tfor (let markName in marks) {\n\t\t\t\tlet mark = marks[markName];\n\t\t\t\txVals.push(mark.options.xVal);\n\t\t\t\tmarksArr.push(mark);\n\t\t\t\tmark._setSegment(null);\n\t\t\t}\n\t\t\tmarksArr.sort((a, b) => a.options.xVal - b.options.xVal);\n\t\t\tlet trend = chart.getTrend(trendName);\n\t\t\tlet points = trend.segmentsManager.getSegmentsForXValues(xVals.sort((a, b) => a - b));\n\t\t\tfor (let markInd = 0; markInd < marksArr.length; markInd++) {\n\t\t\t\tmarksArr[markInd]._setSegment(points[markInd]);\n\t\t\t}\n\t\t}\n\t\tthis.calclulateMarksPositions();\n\t\tthis.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t}\n\n\tprivate getTrendMarks(trendName: string): TrendMark[] {\n\t\tlet trendMarks: TrendMark[] = [];\n\t\tfor (let markName in this.items) {\n\t\t\tif (this.items[markName].options.trendName != trendName) continue;\n\t\t\ttrendMarks.push(this.items[markName]);\n\t\t}\n\t\treturn trendMarks;\n\t}\n\n}\n\nexport class TrendMark {\n\toptions: ITrendMarkOptions;\n\tsegment: TrendSegment;\n\txVal: number;\n\tyVal: number;\n\toffset: number;\n\trow = 0;\n\tprotected chart: Chart;\n\n\tconstructor(chart: Chart, options: ITrendMarkOptions) {\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t}\n\n\n\t/**\n\t * only for internal usage\n\t */\n\t_setSegment(segment: TrendSegment) {\n\t\tthis.segment = segment;\n\t\tif (!segment) return;\n\n\t\tlet trend = this.chart.getTrend(this.options.trendName);\n\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tthis.xVal = segment.endXVal;\n\t\t\tthis.yVal = segment.endYVal;\n\t\t} else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.maxYVal;\n\t\t} else {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.minYVal;\n\t\t}\n\t}\n\n\t_setOffset(offset: number) {\n\t\tthis.offset = offset;\n\t}\n\n\t_setRow(row: number) {\n\t\tthis.row = row;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts\n **/","import {Chart, Utils, TrendsWidget, TrendWidget, INTERPOLATION_EVENT, Color } from 'three-charts';\nimport { TrendMark, TREND_MARK_SIDE, TrendsMarksPlugin, TEXTURE_FILTER } from \"./TrendsMarksPlugin\";\nimport Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport LineSegments = THREE.LineSegments;\nimport LineDashedMaterial = THREE.LineDashedMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport LinearFilter = THREE.LinearFilter;\nimport NearestFilter = THREE.NearestFilter;\n\n\n/**\n * widget for drawing trends marks for all trends\n */\nexport class TrendsMarksWidget extends TrendsWidget<TrendMarksWidget> {\n\tstatic widgetName = \"TrendsMarks\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendMarksWidget;\n\t}\n}\n\n/**\n * widget for drawing trend marks for one trend\n */\nexport class TrendMarksWidget extends TrendWidget {\n\n\tprivate object3D: Object3D;\n\tprivate marksWidgets: {[name: string]: TrendMarkWidget} = {};\n\n\tconstructor (chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.object3D = new Object3D();\n\t\tthis.onMarksChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\t\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.getTrendsMarksPlugin().onChange(() => this.onMarksChange()));\n\t\tthis.bindEvent(\n\t\t\tthis.chart.interpolatedViewport.onInterpolationEvent((event) => this.onViewportInterpolationEvent(event))\n\t\t);\n\t}\n\n\tprivate getTrendsMarksPlugin(): TrendsMarksPlugin {\n\t\treturn this.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t}\n\n\tprivate onMarksChange() {\n\t\tlet marksItems = this.getTrendsMarksPlugin().getItems();\n\t\tlet widgets = this.marksWidgets;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let markName in marksItems) {\n\t\t\tactualMarksNames.push(markName);\n\t\t\tif (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t\t}\n\t\tfor (let markName in this.marksWidgets) {\n\t\t\tif (actualMarksNames.indexOf(markName) !== -1) continue;\n\t\t\tthis.destroyMarkWidget(markName);\n\t\t}\n\n\t}\n\t\n\tprivate createMarkWidget(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\t\tlet markWidget = new TrendMarkWidget(this.chart, mark);\n\t\tthis.marksWidgets[mark.options.name] = markWidget;\n\t\tthis.object3D.add(markWidget.getObject3D());\n\t}\n\n\tprivate destroyMarkWidget(markName: string) {\n\t\tthis.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t\tdelete this.marksWidgets[markName];\n\t}\n\n\tprivate onViewportInterpolationEvent(event: INTERPOLATION_EVENT) {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onScreenTransformationEventHandler(event);\n\t\t}\n\t}\n\n\tprotected onZoomFrame() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onZoomFrameHandler();\n\t\t}\n\t}\n\n\tprotected onSegmentsAnimate() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onSegmentsAnimate();\n\t\t}\n\t}\n\n}\n\n/**\n * widget for drawing one trend mark\n */\nexport class TrendMarkWidget {\n\tmark: TrendMark;\n\tprivate chart: Chart;\n\tprivate markMesh: Mesh;\n\n\tconstructor(chart: Chart, trendMark: TrendMark) {\n\t\tthis.chart = chart;\n\t\tthis.mark = trendMark;\n\t\tthis.initObject();\n\t\tthis.show();\n\t}\n\t\n\tprotected initObject() {\n\t\tlet options = this.mark.options;\n\t\tlet {width, height} = options;\n\n\t\tlet texture = Utils.createNearestTexture(width, height, (ctx) => {\n\t\t\toptions.onRender(this, ctx, this.chart);\n\t\t});\n\n\t\t// make text sharp when interpolatedViewport is not transforming\n\t\tswitch (options.textureFilter) {\n\t\t\tcase TEXTURE_FILTER.AUTO:\n\t\t\t\ttexture.magFilter = this.chart.interpolatedViewport.interpolationInProgress ? LinearFilter : NearestFilter;\n\t\t\t\tbreak;\n\t\t\tcase TEXTURE_FILTER.LINEAR:\n\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\tbreak;\n\t\t\tcase TEXTURE_FILTER.NEAREST:\n\t\t\t\ttexture.magFilter = NearestFilter;\n\t\t\t\tbreak;\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tthis.markMesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(width, height),\n\t\t\tmaterial\n\t\t);\n\n\n\t}\n\n\tgetObject3D() {\n\t\treturn this.markMesh;\n\t}\n\n\tonSegmentsAnimate() {\n\t\tthis.updatePosition();\n\t}\n\n\tonZoomFrameHandler() {\n\t\tthis.updatePosition();\n\t}\n\n\tonScreenTransformationEventHandler(event: INTERPOLATION_EVENT) {\n\t\tlet texture = (this.markMesh.material as MeshBasicMaterial).map;\n\n\t\t// make text sharp when interpolatedViewport is not transforming\n\t\tif (this.mark.options.textureFilter !== TEXTURE_FILTER.AUTO) return;\n\t\ttexture.magFilter = (event == INTERPOLATION_EVENT.STARTED) ? LinearFilter : NearestFilter;\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.mark.segment) return;\n\t\tlet mark = this.mark;\n\t\tlet viewport = this.chart.interpolatedViewport;\n\n\t\tlet posX = viewport.getWorldXByVal(mark.xVal);\n\t\tlet posY = viewport.getWorldYByVal(mark.yVal);\n\n\t\tthis.markMesh.position.set(posX, posY, 0);\n\t}\n\n\tprivate show() {\n\t\tif (!this.mark.segment) return;\n\t\tthis.updatePosition();\n\t\tthis.markMesh.scale.set(0.01, 0.01, 1);\n\n\t\tthis.chart.animationManager\n\t\t\t.animate(1000, this.mark.options.ease)\n\t\t\t.from(this.markMesh.scale as Object)\n\t\t\t.to({x: 1, y: 1});\n\t}\n}\n\nexport const DEFAULT_RENDERER = (\n\ttrendMarkWidget: TrendMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\tchart: Chart\n) =>  {\n\n\tlet mark = trendMarkWidget.mark;\n\tlet options = mark.options;\n\tlet isTopSide = options.orientation == TREND_MARK_SIDE.TOP;\n\tlet color = options.color !== void 0 ?\n\t\tnew Color(options.color) :\n\t\tnew Color(chart.getTrend(options.trendName).getOptions().lineColor);\n\tlet rgbaColor = color.getTransparent(0.5).rgbaStr;\n\tlet {width, height} = options;\n\tlet centerX = Math.round(width / 2);\n\tlet centerY =  Math.round(height / 2);\n\tlet font = chart.state.font.m;\n\tlet textOffset = parseInt(font);\n\tlet textPosX = centerX;\n\tlet textPosY = isTopSide ? textOffset * 1.3 : height - textOffset * 0.7;\n\n\t// draw rect\n\tctx.fillStyle = rgbaColor;\n\tctx.strokeStyle = rgbaColor;\n\tctx.fillRect(\n\t\t0,\n\t\tisTopSide ? 0 : height,\n\t\twidth,\n\t\tisTopSide ? textOffset * 2 : -textOffset * 2\n\t);\n\n\t// draw dot\n\tctx.beginPath();\n\tctx.arc(centerX, centerY, 4, 0, 2 * Math.PI, false);\n\tctx.fill();\n\n\t// draw line\n\tlet lineEndY = textPosY ;\n\tctx.beginPath();\n\tctx.moveTo(centerX, centerY);\n\tctx.lineTo(centerX, lineEndY);\n\tctx.stroke();\n\n\t// draw text\n\tctx.beginPath();\n\tctx.textAlign = 'center';\n\tctx.font = font;\n\tctx.fillStyle = 'rgba(250, 250, 250, 0.8)';\n\tctx.fillText(\n\t\toptions.title,\n\t\tMath.round(textPosX),\n\t\tMath.round(textPosY)\n\t);\n\n\n\n\t// uncomment to preview mark rect\n\t// ctx.rect(0, 0, width, height);\n\t// ctx.stroke();\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts\n **/","export * from './TrendsBeaconWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\n\nimport {\n\tUtils,\n\tChart,\n\tTrendsWidget,\n\tTrendWidget,\n\tTrendSegment,\n\tTrendSegmentsManager,\n\tITrendOptions,\n\tAnimation,\n\tTREND_TYPE\n} from 'three-charts';\n\nconst ANIMATION_TIME = 1000;\nconst ANIMATION_DELAY = 300;\n\n/**\n * widget adds blinking beacon on trends end\n * activated when trend.hasBeacon = true\n */\nexport class TrendsBeaconWidget extends TrendsWidget<TrendBeacon> {\n\tstatic widgetName = 'TrendsBeacon';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendBeacon;\n\t}\n}\n\nexport class TrendBeacon extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animated: boolean;\n\tprivate segment: TrendSegment;\n\tprivate animation: Animation<any>;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == TREND_TYPE.LINE;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\tthis.updatePosition();\n\t\tthis.animate();\n\t}\n\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.chart.onScroll(() => this.updatePosition()));\n\t}\n\n\tprivate initObject() {\n\n\t\t// add beacon\n\t\tlet light = this.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture(), transparent: true})\n\t\t);\n\n\t\tthis.setInitialState();\n\n\t\t// add dot\n\t\tlight.add(new Mesh(\n\t\t\tnew PlaneBufferGeometry(5, 5),\n\t\t\tnew MeshBasicMaterial({map: TrendBeacon.createTexture()})\n\t\t));\n\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t}\n\n\tprivate animate() {\n\t\tif (!this.chart.state.animations.enabled) return;\n\n\t\tif (this.animation) this.animation.stop();\n\t\tthis.setInitialState();\n\n\t\tlet mesh = this.mesh;\n\t\tlet animationObject = {\n\t\t\tscale: mesh.scale.x,\n\t\t\topacity: mesh.material.opacity\n\t\t};\n\n\t\tthis.animation = this.chart.animationManager\n\t\t\t.animate(ANIMATION_TIME)\n\t\t\t.withDelay(ANIMATION_DELAY)\n\t\t\t.from(animationObject)\n\t\t\t.to({scale: 1, opacity: 0})\n\t\t\t.onTick(animationObject => {\n\t\t\t\tmesh.scale.set(animationObject.scale, animationObject.scale, 1);\n\t\t\t\tmesh.material.opacity = animationObject.opacity\n\t\t\t}).then(() => {\n\t\t\t\tthis.setInitialState();\n\t\t\t});\n\t}\n\n\tprivate setInitialState() {\n\t\tthis.mesh.scale.set(0.2, 0.2, 1);\n\t\tthis.mesh.material.opacity = 1;\n\t}\n\n\tonDestroy() {\n\t\tsuper.onDestroy();\n\t\tif (this.animation) this.animation.stop();\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 32, w = 32;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t\t\tctx.fillStyle = 'white';\n\t\t\tctx.fill();\n\t\t});\n\t}\n\n\tprotected onTransformationFrame() {\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(trendsSegments: TrendSegmentsManager) {\n\t\tthis.segment = trendsSegments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tvar chart = this.chart;\n\t\tvar xVal: number, yVal: number;\n\t\tvar currentAnimationState = this.segment.currentAnimationState;\n\t\tif (this.trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\txVal = currentAnimationState.endXVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t} else {\n\t\t\txVal = currentAnimationState.xVal;\n\t\t\tyVal = currentAnimationState.endYVal;\n\t\t}\n\t\tlet viewport = chart.interpolatedViewport;\n\t\tlet x = viewport.getWorldXByVal(xVal);\n\t\tlet y = viewport.getWorldYByVal(yVal);\n\t\tlet screenWidth = chart.state.width;\n\t\tlet screenX = viewport.getViewportXByWorldX(x);\n\t\tif (screenX < 0) {\n\t\t\tx = viewport.getLeft();\n\t\t}\n\t\tif (screenX > screenWidth) x = viewport.getRight();\n\t\tthis.mesh.position.set(x, y, 0.1);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsBeaconWidget/TrendsBeaconWidget.ts\n **/","export * from './TrendsLoadingWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport { TrendWidget, TrendsWidget, ITrendOptions, TREND_TYPE, Chart, Utils } from 'three-charts';\n\n/**\n * widget adds loading indicator\n * activated when animations enabled\n */\nexport class TrendsLoadingWidget extends TrendsWidget<TrendLoading> {\n\tstatic widgetName = 'TrendsLoading';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendLoading;\n\t}\n}\n\nexport class TrendLoading extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate animation: TweenLite;\n\tprivate isActive = false;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions, chart: Chart) {\n\t\treturn trendOptions.enabled && chart.state.animations.enabled;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\t// add beacon\n\t\tthis.mesh = new Mesh(\n\t\t\tnew PlaneBufferGeometry(32, 32),\n\t\t\tnew MeshBasicMaterial({map: TrendLoading.createTexture(), transparent: true})\n\t\t);\n\t\tthis.deactivate();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tbindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.bindEvent(this.trend.onPrependRequest(() => this.activate()));\n\t}\n\n\tprependData() {\n\t\tthis.deactivate();\n\t}\n\n\tprivate activate() {\n\t\tvar mesh = this.mesh;\n\t\tmesh.material.opacity = 1;\n\t\tmesh.rotation.z = 0;\n\t\tvar animation = TweenLite.to(this.mesh.rotation, 0.5, {z: Math.PI * 2});\n\t\tanimation.eventCallback('onComplete', () => {\n\t\t\tanimation.restart();\n\t\t});\n\t\tthis.animation = animation;\n\t\tthis.isActive = true;\n\t\tthis.updatePosition();\n\t}\n\n\tprivate deactivate() {\n\t\tthis.animation && this.animation.kill();\n\t\tthis.mesh.material.opacity = 0;\n\t\tthis.isActive = false;\n\t}\n\n\n\tprivate static createTexture() {\n\t\tvar h = 64, w = 64;\n\t\treturn Utils.createTexture(h, w, (ctx: CanvasRenderingContext2D) => {\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t\tctx.lineWidth = 5;\n\t\t\tvar center = h / 2;\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(center, center, 22, 0, Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(center, center, 3, 0, Math.PI * 2);\n\t\t\tctx.stroke();\n\t\t});\n\t}\n\n\tprotected onZoomFrame() {\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.isActive) return;\n\t\tlet trend = this.trend;\n\t\t// set new widget position\n\t\tlet segment = trend.segmentsManager.getStartSegment();\n\t\tlet x: number, y: number;\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tx = segment.currentAnimationState.startXVal;\n\t\t\ty = segment.currentAnimationState.startYVal;\n\t\t} else {\n\t\t\tx = segment.currentAnimationState.xVal - segment.maxLength;\n\t\t\ty = segment.currentAnimationState.yVal\n\t\t}\n\t\tlet viewport = this.chart.interpolatedViewport;\n\t\tthis.mesh.position.set(viewport.getWorldXByVal(x), viewport.getWorldYByVal(y), 0);\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsLoadingWidget/TrendsLoadingWidget.ts\n **/","export * from './TrendsIndicatorWidget';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/index.ts\n **/","import Object3D = THREE.Object3D;\nimport Mesh = THREE.Mesh;\nimport PlaneBufferGeometry = THREE.PlaneBufferGeometry;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport {\n\tTrendSegmentsManager,\n\tTrendSegment,\n\tColor,\n\tChart,\n\tUtils,\n\tTrendWidget,\n\tTrendsWidget,\n\tITrendOptions\n} from \"three-charts\";\n\nconst CANVAS_WIDTH = 150;\nconst CANVAS_HEIGHT = 64;\nconst OFFSET_X = 15;\n\nexport class TrendsIndicatorWidget extends TrendsWidget<TrendIndicator> {\n\tstatic widgetName = 'TrendsIndicator';\n\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendIndicator;\n\t}\n}\n\nexport class TrendIndicator extends TrendWidget {\n\tprivate mesh: Mesh;\n\tprivate segment: TrendSegment;\n\n\tstatic widgetIsEnabled(trendOptions: ITrendOptions) {\n\t\treturn trendOptions.enabled && trendOptions.hasIndicator;\n\t}\n\n\tconstructor(chart: Chart, trendName: string) {\n\t\tsuper(chart, trendName);\n\t\tthis.initObject();\n\t\tthis.onTrendChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.mesh;\n\t}\n\n\tonTrendChange() {\n\t\t// update canvas value\n\t\tlet trendData = this.trend.getData();\n\t\tvar lastItem = trendData[trendData.length - 1];\n\t\tvar texture = (this.mesh.material as MeshBasicMaterial).map;\n\t\tvar ctx = texture.image.getContext('2d');\n\t\tctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\t// uncomment to preview indicator rect\n\t\t// ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t\t// ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t\tctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tprivate initObject() {\n\t\tvar color = new Color(this.trend.getOptions().lineColor);\n\t\tvar texture = Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, (ctx) => {\n\t\t\tctx.beginPath();\n\t\t\tctx.font = this.chart.state.font.l;\n\t\t\tctx.fillStyle = color.rgbaStr;\n\t\t\tctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t\t});\n\n\t\tvar material = new THREE.MeshBasicMaterial({map: texture, side: THREE.FrontSide});\n\t\tmaterial.transparent = true;\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT),\n\t\t\tmaterial\n\t\t);\n\t}\n\n\tprotected onTransformationFrame() {\n\t\t// set new widget position\n\t\tthis.segment = this.trend.segmentsManager.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprotected onSegmentsAnimate(segments: TrendSegmentsManager) {\n\t\t// set new widget position\n\t\tthis.segment = segments.getEndSegment();\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tlet\tchart = this.chart;\n\t\tlet {endXVal: segmentEndXVal, endYVal: segmentEndYVal} = this.segment.currentAnimationState;\n\t\tlet viewport = chart.interpolatedViewport;\n\t\tlet screenWidth = chart.state.width;\n\n\t\tlet x = viewport.getWorldXByVal(segmentEndXVal) + OFFSET_X;\n\t\tlet y = viewport.getWorldYByVal(segmentEndYVal);\n\n\t\tlet screenX = viewport.getViewportXByWorldX(x);\n\t\tlet indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t\tif (indicatorIsOutOfScreen) {\n\t\t\tif (screenX < 0) x = viewport.getLeft() + 20;\n\t\t\tif (screenX > screenWidth) x = viewport.getRight() - CANVAS_WIDTH / 2 - 10;\n\t\t\ty -= 25;\n\t\t}\n\t\tthis.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, 0.1);\n\t}\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsIndicatorWidget/TrendsIndicatorWidget.ts\n **/","\nimport {\n\tChartPlugin, ChartWidget, AXIS_TYPE, Utils, Chart, TColor, IChartState, UniqCollection,\n\tUniqCollectionItem, IIteralable, TEase, EASING\n} from 'three-charts';\nimport { AxisMarksWidget, AxisMarkWidget } from './AxisMarksWidget';\n\nexport declare type TAxisMarksPluginOptions = IAxisMarkOptions[];\n\nexport interface IAxisMarkOptions {\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\taxisType?: AXIS_TYPE;\n\tlineColor?: TColor;\n\ttextColor?: TColor;\n\tlineWidth?: number;\n\twidth?: number;\n\tstickToEdges?: boolean;\n\tvalue?: number;\n\tdisplayedValue?: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData?: any;\n\tneedRender?: (axisMarkWidget: AxisMarkWidget, chart: Chart, changedProps?: IChartState) => boolean,\n\tease?: TEase;\n\teaseSpeed?: number;\n\topacity?: number;\n\trenderer?: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: IAxisMarkOptions = {\n\tlineWidth: 3,\n\twidth: 200,\n\tvalue: 0,\n\tstickToEdges: false,\n\ttextColor: 'rgba(#45a9e1, 0.8)',\n\tlineColor: 'rgba(#45a9e1, 0.6)',\n\ttitle: '',\n\tease: EASING.Quadratic.Out,\n\teaseSpeed: 500,\n\topacity: 1\n};\n\nexport class AxisMark extends UniqCollectionItem implements IAxisMarkOptions {\n\tname: string;\n\ttitle: string;\n\tdescription: string;\n\taxisType: AXIS_TYPE;\n\ttextColor?: TColor;\n\tlineColor?: TColor;\n\tlineWidth: number;\n\twidth: number;\n\tstickToEdges: boolean;\n\tvalue: number;\n\topacity: number;\n\tdisplayedValue: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData: any;\n\tneedRender: (axisMarkWidget: AxisMarkWidget, chart: Chart, changedProps?: IChartState) => boolean;\n\tease?: TEase;\n\teaseSpeed?: number;\n\trenderer: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n\n\tconstructor (private axisMarkPlugin: AxisMarksPlugin, private chart: Chart) {\n\t\tsuper();\n\t\tUtils.patch(this as IIteralable, AXIS_MARK_DEFAULT_OPTIONS);\n\t}\n\n\tremove() {\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [{_id: this.getId()}]}});\n\t}\n\n\tupdate(newOptions: IAxisMarkOptions) {\n\t\tlet options = Utils.deepMerge({_id: this.getId()} as IAxisMarkOptions, newOptions);\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [options]}});\n\t}\n}\n\n\n\nexport class AxisMarksPlugin extends ChartPlugin<TAxisMarksPluginOptions> {\n\tstatic NAME = 'AxisMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [AxisMarksWidget];\n\n\tmarksCollection = new UniqCollection<AxisMark, IAxisMarkOptions>({\n\t\tcreateInstance: () => new AxisMark(this, this.chart)\n\t});\n\n\tconstructor(axisMarksPluginOptions: TAxisMarksPluginOptions) {\n\t\tsuper(axisMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onStateChangedHandler(this.getOptions());\n\t}\n\n\tprotected onStateChangedHandler(axisMarksOptions: IAxisMarkOptions[]) {\n\t\tthis.marksCollection.patch(axisMarksOptions);\n\t}\n\n\tcreateMark(markOptions: IAxisMarkOptions): AxisMark {\n\t\tthis.chart.setState({pluginsState: {[this.name]: [markOptions]}});\n\t\treturn this.marksCollection.getLast();\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts\n **/","import Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Mesh = THREE.Mesh;\nimport Texture = THREE.Texture;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\n\nimport { ChartWidget, Chart, Color, AXIS_TYPE, Utils, IChartState, Animation } from 'three-charts';\nimport { AxisMark, AxisMarksPlugin, IAxisMarkOptions } from \"./AxisMarksPlugin\";\nimport BufferGeometry = THREE.BufferGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\n\n/**\n * widget for shows marks on axis\n */\nexport class AxisMarksWidget extends ChartWidget {\n\tstatic widgetName = 'AxisMarks';\n\n\tprotected object3D: Object3D;\n\tprotected axisMarksWidgets: AxisMarkWidget[] = [];\n\tprotected axisMarksPlugin: AxisMarksPlugin;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\t\tthis.axisMarksPlugin.marksCollection.forEach(mark => this.createAxisMarkWidget(mark));\n\t\tthis.bindEvents();\n\t}\n\n\tprotected createAxisMarkWidget(axisMark: AxisMark) {\n\t\tvar axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n\t\tthis.axisMarksWidgets.push(axisMarkWidget);\n\t\tthis.object3D.add(axisMarkWidget.getObject3D());\n\t}\n\n\tprotected bindEvents() {\n\t\tlet marksCollection = this.axisMarksPlugin.marksCollection;\n\t\tthis.bindEvent(\n\t\t\tthis.chart.interpolatedViewport.onInterpolation(() => this.updateMarksPositions()),\n\t\t\tthis.chart.onResize(() => this.onResizeHandler()),\n\t\t\tthis.chart.onChange((changedProps) => this.onStateChangeHandler(changedProps)),\n\t\t\tmarksCollection.onCreate((mark) => this.createAxisMarkWidget(mark)),\n\t\t\tmarksCollection.onUpdate((mark, changedOptions) => this.onMarkUpdateHandler(mark, changedOptions)),\n\t\t\tmarksCollection.onRemove((mark) => this.onMarkRemoveHandler(mark))\n\t\t);\n\t}\n\n\tprotected onMarkUpdateHandler(mark: AxisMark, changedOptions: IAxisMarkOptions) {\n\t\tlet widget = this.axisMarksWidgets.find(widget => widget.axisMark.getId() == mark.getId());\n\t\twidget.update(changedOptions);\n\t}\n\n\tprotected onMarkRemoveHandler(mark: AxisMark) {\n\t\tlet ind = this.axisMarksWidgets.findIndex(widget => widget.axisMark.getId() == mark.getId());\n\t\tlet widget = this.axisMarksWidgets[ind];\n\t\tthis.object3D.remove(widget.getObject3D());\n\t\tthis.axisMarksWidgets.splice(ind, 1);\n\t}\n\n\tprotected updateMarksPositions() {\n\t\tthis.forEach(widget => widget.updatePosition());\n\t}\n\n\tprotected onStateChangeHandler(changedProps: IChartState) {\n\t\tthis.forEach(widget => widget.onStateChangeHandler(changedProps));\n\t}\n\n\tprotected onResizeHandler() {\n\t\tthis.forEach(widget => {\n\t\t\twidget.resize();\n\t\t\twidget.updatePosition();\n\t\t});\n\t}\n\n\tforEach(fn: (widget: AxisMarkWidget) => any) {\n\t\tfor (let widget of this.axisMarksWidgets) fn(widget);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n}\n\n\n\nexport const DEFAULT_AXIS_MARK_RENDERER = (\n\taxisMarkWidget: AxisMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\twidth: number,\n\theight: number,\n\tchart: Chart\n) => {\n\tlet markOptions = axisMarkWidget.axisMark;\n\tlet lineColor = new Color(markOptions.lineColor);\n\tlet textColor = new Color(markOptions.textColor);\n\tlet font = chart.state.font.l;\n\tlet offset = parseInt(font);\n\tctx.clearRect(0,0, width, height);\n\tctx.beginPath();\n\tctx.strokeStyle = lineColor.rgbaStr;\n\tctx.fillStyle = lineColor.rgbaStr;\n\tctx.lineWidth = markOptions.lineWidth;\n\tctx.font = font;\n\n\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\tctx.moveTo(width / 2, 0);\n\t\tctx.lineTo(width / 2, height);\n\t\tctx.stroke();\n\t\tctx.fillStyle = textColor.rgbaStr;\n\t\tctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\n\t} else {\n\t\tctx.moveTo(0, height / 2);\n\t\tctx.lineTo(width, height / 2);\n\t\tctx.stroke();\n\t\tctx.fillStyle = textColor.rgbaStr;\n\t\tctx.fillText(markOptions.title, offset,\n\t\t\theight / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2)\n\t\t);\n\t}\n};\n\n\nexport class AxisMarkWidget {\n\taxisMark: AxisMark;\n\tisStickOnTop = false;\n\tisStickOnBottom = false;\n\tdisplayedValue = '';\n\theight = 0;\n\twidth = 0;\n\tframeValue = 0;\n\tframeOpacity = 0;\n\tanimation: Animation<number[]>;\n\tprotected object3D: Object3D;\n\tprotected mesh: Mesh;\n\tprotected chart: Chart;\n\n\n\tconstructor(chart: Chart, axisMark: AxisMark) {\n\t\tthis.chart = chart;\n\t\tthis.axisMark = axisMark;\n\t\tthis.frameOpacity = axisMark.opacity;\n\t\tthis.frameValue = axisMark.value;\n\t\tthis.object3D = new Object3D();\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tinitObject() {\n\t\tthis.width = this.chart.state.width;\n\t\tthis.height = this.chart.state.height;\n\t\tlet markOptions = this.axisMark;\n\t\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\t\tthis.width = markOptions.width;\n\t\t} else {\n\t\t\tthis.height = markOptions.width;\n\t\t}\n\t\tlet texture = Utils.createNearestTexture(this.width, this.height);\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(this.width, this.height),\n\t\t\tnew MeshBasicMaterial({map: texture, transparent: true})\n\t\t);\n\t\tthis.object3D.add(this.mesh);\n\t\tthis.render();\n\t}\n\n\tonStateChangeHandler(changedProps: IChartState) {\n\t\tlet needRender = this.axisMark.needRender && this.axisMark.needRender(this, this.chart, changedProps);\n\t\tneedRender && this.render();\n\t}\n\n\trender() {\n\t\tlet markOptions = this.axisMark;\n\t\tlet mesh = this.mesh\n\t\tlet texture = (mesh.material as MeshBasicMaterial).map;\n\t\tlet ctx = (texture.image as HTMLCanvasElement).getContext('2d');\n\t\tlet renderer = markOptions.renderer ? markOptions.renderer : DEFAULT_AXIS_MARK_RENDERER;\n\t\tif (markOptions.displayedValue) this.displayedValue = markOptions.displayedValue(this, this.chart);\n\t\trenderer(this, ctx, this.width, this.height, this.chart);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tresize() {\n\t\tthis.object3D.remove(this.mesh);\n\t\tthis.initObject();\n\t}\n\n\tupdate(options: IAxisMarkOptions) {\n\t\tlet mark = this.axisMark;\n\t\tthis.animation && this.animation.stop();\n\t\tthis.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\n\t\t\t.from([this.frameValue, this.frameOpacity])\n\t\t\t.to([mark.value, mark.opacity])\n\t\t\t.onTick((arr) => {\n\t\t\t\tthis.frameValue = arr[0];\n\t\t\t\tthis.frameOpacity = arr[1];\n\t\t\t\tthis.updatePosition();\n\t\t\t});\n\t}\n\n\tupdatePosition()  {\n\t\tlet chart = this.chart;\n\t\tlet screen = chart.interpolatedViewport;\n\t\tlet mark = this.axisMark;\n\t\tlet isXAxis = mark.axisType == AXIS_TYPE.X;\n\t\tlet hasStickMode = mark.stickToEdges;\n\t\tlet {width, height} = chart.state;\n\t\tlet val = this.frameValue;\n\t\tlet opactity = this.frameOpacity;\n\t\tlet material = (this.mesh as Mesh).material;\n\n\t\tmaterial.opacity = opactity;\n\n\t\tif (isXAxis) {\n\t\t\t// TODO: make stickToEdges mode for AXIS_TYPE.X\n\t\t\tthis.mesh.position.x = screen.getWorldXByVal(val);\n\t\t\tthis.mesh.position.y = screen.params.scrollY + height / 2;\n\t\t} else {\n\t\t\tlet bottomVal = screen.getBottomVal();\n\t\t\tlet topVal = screen.getTopVal();\n\t\t\tlet needToStickOnTop = hasStickMode && val > topVal;\n\t\t\tlet needToStickOnBottom = hasStickMode && val < bottomVal;\n\t\t\tthis.mesh.position.x = screen.params.scrollX + width / 2;\n\t\t\tif (needToStickOnTop) {\n\t\t\t\tthis.isStickOnTop = true;\n\t\t\t\tthis.mesh.position.y = screen.getTop();\n\t\t\t} else if (needToStickOnBottom) {\n\t\t\t\tthis.isStickOnBottom = true;\n\t\t\t\tthis.mesh.position.y = screen.getBottom();\n\t\t\t} else {\n\t\t\t\tthis.isStickOnBottom = this.isStickOnTop = false;\n\t\t\t\tthis.mesh.position.y = screen.getWorldYByVal(val);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts\n **/","\nimport {\n\tChartPlugin, ChartWidget, Utils, Chart, TColor, UniqCollection,\n\tUniqCollectionItem, IIteralable, TEase\n} from 'three-charts';\nimport { ZonesWidget } from \"./ZonesWidget\";\n\nexport enum ZONE_TYPE {\n\tX_RANGE\n}\n\nexport interface IZoneOptions {\n\tname?: string;\n\ttitle?: string;\n\tposition?: IZonePosition;\n\ttype?: ZONE_TYPE;\n\tbgColor?: TColor;\n\tuserData?: any;\n\tease?: TEase;\n\teaseSpeed?: number;\n\topacity?: number;\n}\n\nconst ZONE_DEFAULT_OPTIONS: IZoneOptions = {\n\tname: '',\n\ttitle: '',\n\ttype: ZONE_TYPE.X_RANGE,\n\tbgColor: '#b81820',\n\teaseSpeed: 500,\n\topacity: 0.4,\n\tposition: {\n\t\tstartXVal: 0,\n\t\tstartYVal: 0,\n\t\tendXVal: 0,\n\t\tendYVal: 0\n\t}\n};\n\nexport interface IZonePosition {\n\tstartXVal?: number;\n\tstartYVal?: number;\n\tendXVal?: number;\n\tendYVal?: number;\n}\n\nexport class Zone extends UniqCollectionItem implements IZoneOptions {\n\tname: string;\n\ttitle: string;\n\tposition: IZonePosition;\n\ttype: ZONE_TYPE;\n\tbgColor: TColor;\n\tuserData: any;\n\tease: TEase;\n\teaseSpeed: number;\n\topacity: number;\n\n\tconstructor (private zonePlugin: ZonesPlugin, private chart: Chart) {\n\t\tsuper();\n\t\tUtils.patch(this as IIteralable, ZONE_DEFAULT_OPTIONS);\n\t\tif (this.type == ZONE_TYPE.X_RANGE) {\n\t\t\tthis.position.startYVal = -Infinity;\n\t\t\tthis.position.endYVal = Infinity;\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.chart.setState({pluginsState: {[ZonesPlugin.NAME]: [{_id: this.getId()}]}});\n\t}\n\n\tupdate(newOptions: IZoneOptions) {\n\t\tlet options = Utils.deepMerge({_id: this.getId()} as IZoneOptions, newOptions);\n\t\tthis.chart.setState({pluginsState: {[ZonesPlugin.NAME]: [options]}});\n\t}\n}\n\n\n\nexport class ZonesPlugin extends ChartPlugin<IZoneOptions[]> {\n\tstatic NAME = 'Zone';\n\tstatic providedWidgets: typeof ChartWidget[] = [ZonesWidget];\n\n\titems = new UniqCollection<Zone, IZoneOptions>({\n\t\tcreateInstance: () => new Zone(this, this.chart)\n\t});\n\n\tconstructor(pluginOptions: IZoneOptions[]) {\n\t\tsuper(pluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onStateChangedHandler(this.getOptions());\n\t}\n\n\tprotected onStateChangedHandler(options: IZoneOptions[]) {\n\t\tthis.items.patch(options);\n\t}\n\n\tcreate(zoneOptions: IZoneOptions): Zone {\n\t\tthis.chart.setState({pluginsState: {[this.name]: [zoneOptions]}});\n\t\treturn this.items.getLast();\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/ZonesPlugin/ZonesPlugin.ts\n **/","import Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Mesh = THREE.Mesh;\nimport Texture = THREE.Texture;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\n\nimport { ChartWidget, Chart, Color, Utils, Animation } from 'three-charts';\nimport { Zone, ZonesPlugin, IZoneOptions } from \"./ZonesPlugin\";\n/**\n * widget for shows marks on axis\n */\nexport class ZonesWidget extends ChartWidget {\n\tstatic widgetName = 'Zones';\n\n\tprotected object3D: Object3D;\n\tprotected items: ZoneWidget[] = [];\n\tprotected zonesPlugin: ZonesPlugin;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.zonesPlugin = this.chart.getPlugin(ZonesPlugin.NAME) as ZonesPlugin;\n\t\tthis.zonesPlugin.items.forEach(zone => this.createZoneWidget(zone));\n\t\tthis.bindEvents();\n\t}\n\n\tprotected createZoneWidget(zone: Zone) {\n\t\tlet widget = new ZoneWidget(this.chart, zone);\n\t\tthis.items.push(widget);\n\t\tthis.object3D.add(widget.getObject3D());\n\t}\n\n\tprotected bindEvents() {\n\t\tlet zones = this.zonesPlugin.items;\n\t\tthis.bindEvent(\n\t\t\tthis.chart.interpolatedViewport.onInterpolation(() => this.updateZonesPositions()),\n\t\t\tzones.onCreate(item => this.createZoneWidget(item)),\n\t\t\tzones.onUpdate((item, changedOptions) => this.onZoneUpdateHandler(item, changedOptions)),\n\t\t\tzones.onRemove(item => this.onZoneRemoveHandler(item))\n\t\t);\n\t}\n\n\tprotected onZoneUpdateHandler(mark: Zone, changedOptions: IZoneOptions) {\n\t\tlet widget = this.items.find(widget => widget.zone.getId() == mark.getId());\n\t\twidget.update(changedOptions);\n\t}\n\n\tprotected onZoneRemoveHandler(mark: Zone) {\n\t\tlet ind = this.items.findIndex(widget => widget.zone.getId() == mark.getId());\n\t\tlet widget = this.items[ind];\n\t\tthis.object3D.remove(widget.getObject3D());\n\t\tthis.items.splice(ind, 1);\n\t}\n\n\tprotected updateZonesPositions() {\n\t\tthis.forEach(widget => widget.updatePosition());\n\t}\n\n\tforEach(fn: (widget: ZoneWidget) => any) {\n\t\tfor (let widget of this.items) fn(widget);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n}\n\nexport interface IZoneAnimatedProps {\n\tstartXVal: number;\n\tendXVal: number;\n\tstartYVal: number;\n\tendYVal: number;\n\topacity: number;\n}\n\nexport class ZoneWidget {\n\tzone: Zone;\n\tprotected animation: Animation<IZoneAnimatedProps>;\n\tprotected animatedProps: IZoneAnimatedProps;\n\tprotected object3D: Object3D;\n\tprotected mesh: Mesh;\n\tprotected chart: Chart;\n\n\n\tconstructor(chart: Chart, zone: Zone) {\n\t\tthis.chart = chart;\n\t\tthis.zone = zone;\n\t\tthis.object3D = new Object3D();\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tinitObject() {\n\t\tlet height = this.chart.state.height;\n\t\tlet bgColor = new Color(this.zone.bgColor);\n\t\tthis.animatedProps = Utils.deepMerge({} as IZoneAnimatedProps, this.zone.position as IZoneAnimatedProps);\n\t\tthis.animatedProps.opacity = this.zone.opacity;\n\t\t// mesh scheme\n\t\t//\n\t\t// vert0 +---+ vert3\n\t\t//       |\\  |\n\t\t// face1 | \\ | face2\n\t\t// \t     |  \\|\n\t\t// vert1 +---+ vert2\n\n\t\tlet geometry = new Geometry();\n\t\tgeometry.vertices.push(\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3(),\n\t\t\tnew THREE.Vector3()\n\t\t);\n\t\tgeometry.faces.push(\n\t\t\tnew THREE.Face3( 0, 1, 2 ),\n\t\t\tnew THREE.Face3( 3, 0, 2 )\n\t\t);\n\n\n\t\tthis.mesh = new Mesh(\n\t\t\tgeometry,\n\t\t\tnew MeshBasicMaterial({transparent: true, color: bgColor.value, opacity: bgColor.a})\n\t\t);\n\t\tthis.mesh.frustumCulled = false;\n\t\tthis.object3D.add(this.mesh);\n\t}\n\n\tupdate(options: IZoneOptions) {\n\t\tlet zone = this.zone;\n\t\tthis.animation && this.animation.stop();\n\t\tthis.animation = this.chart.animationManager.animate(zone.easeSpeed, zone.ease)\n\t\t\t.from(this.animatedProps)\n\t\t\t.to({\n\t\t\t\tstartXVal: zone.position.startXVal,\n\t\t\t\tstartYVal: zone.position.startYVal,\n\t\t\t\tendXVal: zone.position.endXVal,\n\t\t\t\tendYVal: zone.position.endYVal,\n\t\t\t\topacity: zone.opacity\n\t\t\t})\n\t\t\t.onTick(() => this.updatePosition());\n\t}\n\tupdatePosition()  {\n\t\tlet chart = this.chart;\n\t\tlet viewport = chart.interpolatedViewport;\n\t\tlet zone = this.zone;\n\t\tlet {startXVal, startYVal, endXVal, endYVal, opacity} = this.animatedProps;\n\t\tlet startY = isFinite(startYVal) ? viewport.getWorldYByVal(startYVal) : viewport.getBottom();\n\t\tlet endY = isFinite(endYVal) ? viewport.getWorldYByVal(endYVal) : viewport.getTop();\n\t\tlet startX = viewport.getWorldXByVal(startXVal);\n\t\tlet endX = viewport.getWorldXByVal(endXVal);\n\t\tlet geometry = this.mesh.geometry as Geometry;\n\t\tlet material = this.mesh.material as MeshBasicMaterial;\n\t\tlet verts = geometry.vertices;\n\n\t\tmaterial.opacity = this.animatedProps.opacity;\n\n\t\tverts[0].set(startX, endY, 0);\n\t\tverts[1].set(startX, startY, 0);\n\t\tverts[2].set(endX, startY, 0);\n\t\tverts[3].set(endX, endY, 0);\n\n\t\tgeometry.verticesNeedUpdate = true;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/ZonesPlugin/ZonesWidget.ts\n **/"],"sourceRoot":""}