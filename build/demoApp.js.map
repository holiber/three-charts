{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 1b961503305d2600f90b?6fcc","webpack:///./demo/demoApp.ts","webpack:///./~/three-chart/build/index.js","webpack:///./~/three-chart/build/ThreeChart.js","webpack:///./plugins/build/plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","0","three_chart_1","TrendsMarksPlugin_1","chart","DataSourse","data","sec","val","startTime","Date","now","push","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","value","title","description","icon","iconColor","window","onload","initListeners","dsMain","dsRed","dsBlue","Chart","yAxis","marks","name","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasGradient","showStats","widgets","TrendsGradient","enabled","document","querySelector","TrendsMarksPlugin","items","setState","animations","mainTrend","getTrend","deadlineMark","state","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setTimeout","setInterval","appendData","$checkboxMaintrend","addEventListener","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","34","35","__export","hasOwnProperty","PerspectiveCamera","THREE","State_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsLoadingWidget_1","AxisMarksWidget_1","BorderWidget_1","TrendsIndicatorWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","TrendsBeaconWidget_1","deps_1","MAX_DATA_LENGTH","$container","plugins","_this","REVISION","error","style","getComputedStyle","width","parseInt","height","ChartState","installedWidgets","zoomThrottled","throttle","zoomValue","origin","zoom","init","installWidget","Widget","widgetName","_a","w","h","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","setPixelRatio","devicePixelRatio","setClearColor","backgroundColor","backgroundOpacity","setSize","appendChild","domElement","$el","display","stats","Stats","setupCamera","widgetsClasses","widgetOptions","WidgetConstructor","widget","add","getObject3D","bindEvents","renderLoop","isDestroyed","begin","render","fpsLimit","fps","delay","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","ev","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","resizeSensor","ResizeSensor","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","onTrendsChange","autoscroll","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","detach","e","remove","forEach","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","position","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","preventDefault","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","min","max","autoScrollIsEnabled","createPreviewChart","userOptions","previewChartOptions","Grid","Axis","deepMerge","CanvasRenderer","WebGLRenderer","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsBeaconWidget","TrendsIndicatorWidget","TrendsLoadingWidget","AxisMarksWidget","BorderWidget","TweenLite","isPlainObject","EE2","es6_promise_1","Promise","a","dom","k","d","children","l","createElement","cssText","g","performance","r","Panel","f","self","memory","t","addPanel","showPanel","update","usedJSHeapSize","jsHeapSizeLimit","setMode","Infinity","u","n","q","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","drawImage","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","_gsScope","_gsQueue","_gsDefine","Animation","SimpleTimeline","_slice","_applyCycle","vars","targets","alt","cycle","TweenMax","target","duration","_cycle","_yoyo","yoyo","_repeat","repeat","_repeatDelay","repeatDelay","_dirty","_tinyNum","TweenLiteInternals","_internals","_isSelector","isSelector","_isArray","isArray","_blankArray","version","constructor","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_uncache","updateTo","resetDuration","curRatio","ratio","immediate","immediateRender","_startTime","_timeline","_time","_enabled","insert","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","prevTime","_totalTime","_init","inv","pt","endValue","s","_next","time","suppressEvents","force","totalDur","_totalDuration","totalDuration","prevTotalTime","prevCycle","prevRawPrevTime","_rawPrevTime","isComplete","callback","cycleDuration","pow","rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","_active","_easeType","_easePower","_onUpdate","_callback","lazyTweens","_lazy","_paused","_startAt","onStart","onRepeat","runBackwards","fromTo","fromVars","toVars","startAt","staggerTo","allTo","stagger","onCompleteAll","onCompleteAllParams","onCompleteAllScope","finalComplete","onComplete","apply","onCompleteScope","arguments","callbackScope","fromCycle","copy","selector","reverse","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","params","scope","useFrames","onCompleteParams","onReverseComplete","onReverseCompleteParams","overwrite","isTweening","_getChildrenOf","timeline","includeTimelines","cnt","tween","_first","concat","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","complete","tweens","delayedCalls","timelines","allTrue","isDC","totalTime","killChildTweensOf","parent","tl","tweenLookup","curParent","parentNode","_changePause","pause","paused","pauseAll","resumeAll","globalTimeScale","_timeScale","frame","progress","totalProgress","TimelineLite","_labels","smoothChildTiming","_sortChildren","onUpdate","join","indexOf","_swapSelfInParams","align","_lazyTweens","_lazyRender","lazyRender","_globals","globals","_copy","_pauseCallback","pauseCallback","_forcingPlayhead","_hasPause","Engine","_parseTimeOrLabel","exportRoot","ignoreDelayedCalls","next","_remove","curTime","child","beforeRawTime","Array","addLabel","rawTime","_pauseTime","removeLabel","skipDisable","last","_last","append","offsetOrLabel","insertMultiple","appendMultiple","label","addPause","getLabelTime","timeOrLabel","appendIfAbsent","ignore","isNaN","charAt","substr","seek","gotoAndPlay","play","gotoAndStop","prevStart","prevTimeScale","prevPaused","internalForce","pauseTween","_hasPausedChild","_prev","getChildren","nested","ignoreBeforeTime","disabled","_contains","recent","_recent","shiftChildren","amount","adjustLabels","labels","_kill","changed","clear","ignoreTimeline","uncapped","timeScale","prev","usesFrames","Ease","TimelineMax","_easeNone","addCallback","removeCallback","removePause","tweenTo","ease","abs","tweenFromTo","fromPosition","toPosition","dur","_locked","backwards","wrap","recTotalTime","recCycle","recRawPrevTime","recTime","getActive","all","isActive","getLabelAfter","getLabelsArray","getLabelBefore","sort","currentLabel","_RAD2DEG","PI","_r1","_r2","_r3","_corProps","Segment","da","ca","ba","_correlate","cubicToQuadratic","q1","q2","q3","q4","mab","mbc","mcd","mabc","mbcd","m8","_calculateControlPoints","curviness","quad","basic","correlate","ii","cp1","p1","p2","p3","seg","m1","m2","mm","cp2","qb","r1","r2","splice","_parseAnchors","values","prepend","tmp","bezierThrough","quadratic","obj","props","first","j","seamless","sqrt","_parseBezierData","inc","soft","cur","_addCubicLengths","steps","resolution","d1","bez","index","_parseLengthData","lengths","total","threshold","segments","curLS","BezierPlugin","plugin","propName","priority","API","_target","_func","_round","_props","_timeRes","timeResolution","second","autoRotate","orientToBezier","isFunc","_autoRotate","_overwriteProps","parseFloat","_beziers","_segCount","ld","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","func","notStart","curIndex","curSeg","ar","b2","x1","y1","x2","y2","conv","atan2","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","prop","cssp","pluginValues","setRatio","left","_transform","_enableTransforms","_gsTransform","proxy","rotation","_onInitTween","_tween","_roundProps","lookup","op","bezier","_super","TweenPlugin","_hasPriority","_suffixMap","_cs","_specialProps","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","top","right","bottom","fontSize","perspective","lineHeight","_numExp","_relNumExp","_valuesExp","_NaNExp","_suffixExp","_opacityExp","_opacityValExp","_alphaFilterExp","_rgbhslExp","_capsExp","_camelExp","_urlExp","_camelFunc","toUpperCase","_horizExp","_ieGetMatrixExp","_ieSetMatrixExp","_commasOutsideParenExp","_complexExp","_DEG2RAD","_forcePT","_doc","_createElement","createElementNS","_tempDiv","_tempImg","_agent","navigator","userAgent","_autoRound","_reqSafariFix","_isSafari","_isFirefox","_isSafariLT6","_ieVers","_supportsOpacity","exec","RegExp","$1","test","opacity","_getIEOpacity","currentStyle","filter","_log","console","log","_prefixCSS","_prefix","_checkPropPrefix","undefined","toLowerCase","_getComputedStyle","defaultView","_getStyle","getStyle","cs","calc","dflt","rv","getPropertyValue","replace","_convertToPixels","convertToPixels","sfx","recurse","horiz","node","neg","precise","pix","cache","body","_gsCache","removeChild","cacheWidths","_calculateOffset","calculateOffset","dim","_getAllStyles","tr","_transformPropCSS","_transformProp","_getTransform","skewX","scaleX","scaleY","_supports3D","rotationX","rotationY","scaleZ","filters","_cssDif","s1","s2","forceLookup","difs","mpt","MiniPropTween","firstMPT","_dimensions","_margins","_getDimension","nodeName","getBBox","_isSVG","offsetWidth","offsetHeight","_parsePosition","recObj","split","oxp","oyp","oxr","oyr","ox","oy","_parseChange","_parseVal","_parseAngle","directionalEnd","cap","dif","result","isRelative","_colorLookup","aqua","lime","silver","black","maroon","teal","navy","white","fuchsia","olive","yellow","orange","gray","purple","green","pink","cyan","transparent","_hue","_parseColor","parseColor","toHSL","wasHSL","match","_formatColors","colors","_colorExp","charIndex","parsed","color","temp","colorStringFilter","combined","lastIndex","defaultStringFilter","_getFormatter","clr","collapsible","multi","dColor","dVals","pfx","delim","numVals","dSfx","formatter","vals","_getEdgeParser","parse","str","xs0","xs1","shallow","bpt","transform","oldForce","xp","firstPT","rxp","pr","_addNonTweeningNumericPT","overwriteProp","_parseComplex","parseComplex","clrs","ea","autoRound","xi","ni","bv","bnums","enums","bn","hasAlpha","cv","useHSL","appendXtra","xfirst","pad","SpecialProp","prefix","format","defaultValue","keyword","defaults","_registerPluginProp","pluginName","pluginClass","com","greensock","kwd","bi","ei","registerSpecialProp","onInitTween","useSVGTransformAttr","_transformProps","_transformOriginProp","Transform","force3D","defaultForce3D","_SVGElement","SVGElement","_useSVGTransformAttr","_createSVG","container","attributes","element","reg","setAttributeNS","_docElement","documentElement","_forceSVGTransformAttr","chrome","svg","rect","getBoundingClientRect","_parseSVGOrigin","local","decoratee","absolute","smoothOrigin","skipRecord","tm","_getMatrix","xOrigin","yOrigin","tx","ty","determinant","xOriginOld","yOriginOld","_identity2DMatrix","xOffset","yOffset","setAttribute","_canGetBBox","getCTM","force2D","rnd","isDefault","dec","none","_removeProp","getTransform","rec","invX","zOrigin","a11","a21","a31","a41","a12","a22","a32","a42","a13","a23","a33","a14","a24","a34","a43","angle","t1","t2","t3","t4","cos","sin","removeAttribute","_setIETransformRatio","ang","skew","clip","xPercent","yPercent","dx","dy","mult","marg","ieOffsetX","ieOffsetY","_setTransformRatio","set3DTransformRatio","setTransformRatio","sx","sy","sz","isSVG","comma","zero","skewType","tan","skewY","_lastParsedTransform","originalGSTransform","endRotations","transformOriginString","parseTransform","orig","has3D","hasChange","dr","matrix","transformOrigin","svgOrigin","scale","transformPerspective","directionalRotation","shortRotation","rotationZ","shortRotationX","shortRotationY","_transformType","ea1","es2","bs2","bs","es","en","esfx","bsfx","rel","hn","vn","em","bp","backgroundPositionX","backgroundPositionY","pct","overlap","src","clipTop","clipRight","clipBottom","clipLeft","bw","_setIEOpacityRatio","skip","xn1","isAutoAlpha","removeProperty","_setClassNameRatio","_gsClassPT","difData","cnpt","cnptLookup","_classNamePT","_setClearPropsRatio","transformParse","clearTransform","nodeType","_vars","pt2","zIndex","tpt","threeD","_addLazySet","className","WebkitBackfaceVisibility","_linkCSSP","pop","sp","isStr","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","lazySet","autoAlpha","visibility","_getChildStyles","slice","childNodes","cascadeTo","results","_reservedProps","reservedProps","_targets","activate","RoundPropsPlugin","_roundLinkedList","blob","_onInitAllProps","rp","roundProps","rpt","_propLookup","pg","_add","_addTween","finals","useRadians","GreenSockGlobals","gs","_2PI","_HALF_PI","_class","_create","C","_easeReg","register","_wrap","EaseOut","EaseIn","EaseInOut","aliases","easeOut","easeIn","easeInOut","EasePoint","gap","_createBack","overshoot","_p1","_p2","config","Back","SlowMo","linearRatio","power","yoyoMode","_p","_p3","SteppedEase","RoughEase","_createElastic","taper","points","randomize","clamp","template","strength","bump","pnt","invert","def","amplitude","period","asin","find","map","moduleName","_exports","_namespace","ns","_emptyFunc","toString","Object","array","_ticker","_tickerActive","_defLookup","Definition","dependencies","sc","gsClass","_classes","check","missing","cl","hasModule","_baseParams","extraParams","_type","_power","_params","_easeMap","names","types","create","na","ta","easing","pw","linear","Linear","swing","Quad","EventDispatcher","_listeners","_eventTarget","useParam","list","listener","wake","up","removeEventListener","dispatchEvent","_reqAnimFrame","_cancelAnimFrame","cancelAnimationFrame","_getTime","getTime","_lastUpdate","useRAF","_self","_useRAF","_lagThreshold","_adjustedLag","_tickWord","_fps","_req","_id","_gap","_nextTime","_tick","manual","elapsed","dispatch","tick","adjustedLag","sleep","clearTimeout","visibilityState","Ticker","events","reversed","_checkTimeout","atTime","resume","restart","includeDelay","includeSelf","eventCallback","includeRepeats","pauseTime","raw","prevTween","st","jquery","targ","_overwrite","_overwriteLookup","defaultOverwrite","_siblings","_register","_applyOverwrite","css","_plugins","_overwrittenProps","defaultEase","autoSleep","$","jQuery","getElementById","_lazyLookup","_numbersExp","_setRatio","fp","_blobDif","startNums","endNums","num","nonNumbers","currentNum","_addPropTween","funcParam","stringFilter","getterName","blobDif","_tweenLookup","_tweenLookupNum","onUpdateParams","onUpdateScope","onStartParams","onStartScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","easeParams","autoCSS","onOverwrite","auto","concurrent","allOnStart","preexisting","true","false","_nextGCFrame","_updateRoot","scrub","_gsTweenID","_onOverwrite","overwrittenTween","overwritingTween","killedProps","mode","siblings","curTween","overlaps","oCount","zeroDur","globalStart","_checkOverlap","reference","ts","initPlugins","startVars","_initProps","propLookup","overwrittenProps","_priority","_onDisable","_onEnable","simultaneousOverwrite","killProps","record","killed","_tempKill","onlyActive","_propName","overwriteProps","initAll","Plugin","__webpack_amd_options__","SpriteCanvasMaterial","parameters","Material","Color","program","setValues","material","_renderData","_elements","_lights","_projector","Projector","_canvas","canvas","_canvasWidth","_canvasHeight","_canvasWidthHalf","floor","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_context","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_camera","_v1","_v2","_v3","_v4","_v5","RenderableVertex","_v6","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_v4x","_v4y","_v5x","_v5y","_v6x","_v6y","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_clipBox","Box2","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_vector3","Vector3","_centroid","_normal","_normalViewMatrix","Matrix3","setLineDash","autoClear","sortObjects","sortElements","info","vertices","faces","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","updateStyle","setViewport","setScissor","setScissorTest","setClearColorHex","hex","warn","getClearColor","getClearAlpha","getMaxAnisotropy","isEmpty","intersect","expandByScalar","clearRect","setBlending","NormalBlending","setOpacity","setFillStyle","makeEmpty","clearColor","clearDepth","clearStencil","Camera","setTransform","translate","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","calculateLights","el","RenderableSprite","renderSprite","RenderableLine","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","RenderableFace","v3","overdraw","expand","renderFace3","union","setRGB","ll","light","lightColor","AmbientLight","DirectionalLight","PointLight","calculateLight","normal","lightPosition","setFromMatrixPosition","matrixWorld","normalize","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","blending","dist","SpriteMaterial","texture","pattern","textureToPattern","bitmap","image","offset","cx","cy","save","rotate","restore","setStrokeStyle","beginPath","moveTo","lineTo","LineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","LineDashedMaterial","dashSize","gapSize","uv1","uv2","uv3","drawTriangle","MeshLambertMaterial","MeshPhongMaterial","emissive","FaceColors","multiply","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","MeshBasicMaterial","mapping","UVMapping","uvs","patternPath","envMap","SphericalReflectionMapping","vertexNormalsModel","applyMatrix3","MeshNormalMaterial","addScalar","x0","y0","closePath","fill","CompressedTexture","DataTexture","repeatX","wrapS","RepeatWrapping","repeatY","wrapT","createPattern","u0","v0","u1","u2","det","idet","offsetX","offsetY","clipImage","pixels","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","lineWidth","lineCap","lineJoin","strokeStyle","RenderableObject","object","renderOrder","vertexNormalsLength","Vector2","Vector4","visible","vertex","_object","_objectCount","_objectPool","_objectPoolLength","_vertex","_vertexCount","_vertexPool","_vertexPoolLength","_face","_faceCount","_facePool","_facePoolLength","_line","_lineCount","_linePool","_linePoolLength","_sprite","_spriteCount","_spritePool","_spritePoolLength","objects","_vector4","Box3","_boundingBox","_points3","_points4","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","project","unprojectVector","unproject","pickingRay","RenderList","normals","normalMatrix","setObject","projectVertex","applyMatrix4","invW","pushVertex","getNextVertexInPool","pushNormal","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","getNextLineInPool","pushTriangle","side","DoubleSide","getNextFaceInPool","fromArray","uv","renderList","autoUpdate","updateMatrixWorld","getInverse","multiplyMatrices","projectionMatrix","setFromMatrix","traverseVisible","Light","Mesh","Line","Sprite","frustumCulled","intersectsObject","getNextObjectInPool","applyProjection","painterSort","o","ol","geometry","BufferGeometry","groups","positions","indices","group","count","Geometry","faceVertexUvs","isFaceMaterial","MultiMaterial","objectMaterials","vl","morphTargets","morphInfluences","morphTargetInfluences","influence","targetVertex","fl","face","materials","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","clipLine","getNextSpriteInPool","line","sprite","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","isObject","isObjectObject","ctor","prot","defaultMaxListeners","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","**","growListenerTree","shift","warned","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","_origin","on","emit","_all","args","handler","onAny","addListener","leafs","iLeaf","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","EventQueue","attachResizeEvent","resized","resizedAttached","styleChild","innerHTML","fixed","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","scrollLeft","scrollWidth","scrollTop","scrollHeight","addEvent","cb","attachEvent","onScroll","elementType","isCollectionTyped","Elements","EventEmmiter_1","Widget_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","initialState","ALL","NUMBER","gridMinSize","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","zoomEase","easeNone","scrollSpeed","scrollEase","autoScrollSpeed","autoScrollEase","pluginsState","eventEmitterMaxListeners","isReady","ee","trendsManager","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onDestroy","subscribe","onInitialStateApplied","onReady","onChange","onTrendChange","onZoom","onPluginsStateChange","newState","eventData","silent","stateData","changedProps","key","trendsData","trendOptions","newStateContainsData","keys","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","widgetsOptions","WidgetClass","defaultOptions","getDefaultOptions","ChartWidget","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","copyProps","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","PluginClass","NAME","pluginWidgets","PluginWidget","setupChartState","getPlugin","changedTrends","newData","handleTrendsChange","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","eventName","_i","listenersCount","deepmerge","mergeArrays","dst","obj1","obj2","JSON","stringify","toFixed","digitsCount","maxDigits","intVal","intStr","lengthDiff","afterPointDigitsCount","afterPointStr","bindEvent","createTexture","ctx","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","getHexColor","rgb","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","srcObject","dstObject","excludeProps","chartState","unsubscriber","Trend_1","EVENTS","SEGMENTS_REBUILDED","trendsCalculatedOptions","trend","createTrend","getCalculatedOptions","getEnabledTrends","enabledTrends","allTrends","getOptions","firstTrendData","getExtremumYVal","extremumIsMax","fromX","toX","compareFn","trends_1","trendData","trendYValues","dataItem","NaN","onSegmentsRebuilded","onInitialStateAppliedHandler","_loop_1","this_1","onRebuild","Trend","TrendSegments_1","PREPEND_REQUEST","DEFAULT_OPTIONS","maxSegmentLength","settingsForTypes","minSegmentLengthInPx","maxSegmentLengthInPx","minYVal","maxYVal","prepareData","TrendSegments","checkForPrependRequest","changedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","segmentsById","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","onDestroyHandler","appendAnimation","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getEndSegment","getStartSegment","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","displayedRangeChanged","getSegmentsForXValues","valueInd","lastValueInd","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","targetAnimationState","prevItem","animationsOptions","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","onAnimationFrameHandler","objectToAnimate","animationValue","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","scrollXVal","scrollYVal","zoomX","zoomY","currentScrollX","currentScrollY","currentZoomX","currentZoomY","vFOV","onZoomFrame","onScrollFrame","cameraIsMoving","scrollXAnimation","zoomXAnimation","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","scrollYAnimation","zoomYAnimation","isDragMode","canAnimate","zoomXChanged","isAutoscroll","targetX","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","__extends","__","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","traverse","axisMesh","PlaneGeometry","axisOptions","axisGridParams","getGridParamsForAxis","edgeOffset","segmentsCount","pxVal","textAlign","getDateStr","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","xLinesCount","yLinesCount","lineSegments","setZ","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","PlaneBufferGeometry","TrendsWidget_1","getTrendWidgetClass","TrendLoading","TrendsWidget","mesh","deactivate","widgetIsEnabled","updatePosition","center","arc","pointVector","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","widgetObject","getObjectByName","onSegmentsAnimate","axisMarksWidgets","createAxisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","DEFAULT_INDICATOR_RENDER_FUNCTION","indicatorWidth","indicatorHeight","xCoord","INDICATOR_POS_Z","indicatorRenderFunction","frameValue","createLine","indicator","createIndicator","renderIndicator","lineGeometry","onValueChangeHandler","moveAnimation","hasStickMode","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","centerYVal","indicatorPosY","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","initObject","lastItem","segmentEndXVal","segmentEndYVal","endPointVector","screenWidth","indicatorIsOutOfScreen","MAX_DISPLAYED_SEGMENTS","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","scaleXFactor","scaleYFactor","segmentIsNotDisplayed","destroySegment","setupSegment","segmentState","segmentInd","lineStartVertex","lineEndVertex","toLocalX","toLocalY","currentScale","toLocalVec","vec","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","TrendBeacon","onStateChange","stopAnimation","animated","animationObject","trendsSegments","DEFAULT_CONFIG","installPluginWidgets","ChartPlugin","onChartReadyHandler","changedPluginsStates","onStateChanged","changedState","36","TrendsMarksWidget_1","trendsMarksPluginOptions","rects","onMarksChangeHandler","createMark","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","TrendMark","createMarkRect","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","markInd","trendMarks","TrendsMarksWidget","MAX_MARKS_IN_ROW","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onZoomFrameHandler","trendMark","markHeight","markWidth","show","markMesh","createMarkMesh","createMarkLine","isTopSide","circleOffset","circleR","circleX","circleY","textOffset","computeLineDistances","lineMaterial","meshMaterial","posX","posY","lineDistancesNeedUpdate","Elastic"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"demoApp\"] = factory();\n\telse\n\t\troot[\"demoApp\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"demoApp\"] = factory();\n\telse\n\t\troot[\"demoApp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar three_chart_1 = __webpack_require__(34);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(36);\r\n\tvar chart;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_chart_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_chart_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            value: val,\r\n\t            title: three_chart_1.Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\r\n\t            description: three_chart_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t            icon: three_chart_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t            iconColor: three_chart_1.Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\r\n\t            orientation: orientation,\r\n\t            descriptionColor: descriptionColor\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chart = new three_chart_1.Chart({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_chart_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_chart_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 200, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_chart_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasGradient: false,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        widgets: {\r\n\t            //Grid: {enabled: false},\r\n\t            //Axis: {enabled: false},\r\n\t            TrendsGradient: { enabled: false },\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] })\r\n\t    ]);\r\n\t    chart.setState({ animations: { enabled: false } });\r\n\t    chart.setState({ animations: { enabled: true } });\r\n\t    window['chart'] = chart;\r\n\t    var mainTrend = chart.getTrend('main');\r\n\t    var deadlineMark = chart.state.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chart.state.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        // var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        // if (markOptions) setTimeout(() => {\r\n\t        // \tlet trendsMarks = chart.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\r\n\t        // \ttrendsMarks.createMark(markOptions);\r\n\t        // }, 500);\r\n\t    });\r\n\t    // var previewChart1 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[0],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true}\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart2 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[1],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true}\r\n\t    // \t},\r\n\t    //\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart3 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[2],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true},\r\n\t    // \t\t'red': {dataset: dsRed.data, lineColor: 0xFF2222},\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    var i = 0;\r\n\t    chart.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chart.getTrend('main').appendData([val]);\r\n\t        // chart.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\r\n\t        // chart.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // chart.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // chart.getTrend('red').appendData([val + 10 + Math.random() * 20]);\r\n\t        // chart.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.getTrend('main').appendData([val]);\r\n\t        // previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\r\n\t        // previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.appendData(dataToAppend1);\r\n\t        //\r\n\t        // var chartData2 = previewChart2.state.data.trends[0].data;\r\n\t        // var lastItem2 = chartData2[chartData.length - 1];\r\n\t        // var dataToAppend2 = [\r\n\t        // \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\r\n\t        // ];\r\n\t        // previewChart2.appendData(dataToAppend2);\r\n\t        // previewChart3.appendData(dataToAppend2);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: three_chart_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: three_chart_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.state.data.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.state.data.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chart.state.setState({ autoScroll: false });\r\n\t            chart.state.zoomToRange(range);\r\n\t            chart.state.scrollToEnd().then(function () {\r\n\t                chart.state.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(35)\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"ThreeChart\"] = factory(); else root[\"ThreeChart\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(35));\n\t        __export(__webpack_require__(27));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        __webpack_require__(3);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var State_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var AxisWidget_1 = __webpack_require__(24);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var TrendsLoadingWidget_1 = __webpack_require__(26);\n\t        var AxisMarksWidget_1 = __webpack_require__(28);\n\t        var BorderWidget_1 = __webpack_require__(29);\n\t        var TrendsIndicatorWidget_1 = __webpack_require__(30);\n\t        var TrendsLineWidget_1 = __webpack_require__(31);\n\t        var TrendsCandleWidget_1 = __webpack_require__(32);\n\t        var TrendsBeaconWidget_1 = __webpack_require__(33);\n\t        var deps_1 = __webpack_require__(34);\n\t        exports.MAX_DATA_LENGTH = 2692e3;\n\t        var Chart = function() {\n\t            function Chart(state, $container, plugins) {\n\t                var _this = this;\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                this.state = new State_1.ChartState(state, Chart.installedWidgets, plugins);\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            Chart.installWidget = function(Widget) {\n\t                if (!Widget.widgetName) {\n\t                    Utils_1.Utils.error(\"unnamed widget\");\n\t                }\n\t                this.installedWidgets[Widget.widgetName] = Widget;\n\t            };\n\t            Chart.prototype.init = function($container) {\n\t                var state = this.state;\n\t                var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                renderer.setPixelRatio(Chart.devicePixelRatio);\n\t                renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n\t                renderer.setSize(w, h);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                var widgetsClasses = this.state.widgetsClasses;\n\t                for (var widgetName in widgetsClasses) {\n\t                    var widgetOptions = this.state.data.widgets[widgetName];\n\t                    if (!widgetOptions.enabled) continue;\n\t                    var WidgetConstructor = widgetsClasses[widgetName];\n\t                    var widget = new WidgetConstructor(this.state);\n\t                    this.scene.add(widget.getObject3D());\n\t                    this.widgets.push(widget);\n\t                }\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            Chart.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.state.data.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            Chart.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Chart.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            Chart.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.state.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            Chart.prototype.getState = function() {\n\t                return this.state.data;\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.state.getTrend(trendName);\n\t            };\n\t            Chart.prototype.setState = function(state) {\n\t                return this.state.setState(state);\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.state.data.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.state.data.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.state.onTrendsChange(function() {\n\t                    return _this.autoscroll();\n\t                }), this.state.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.state.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            Chart.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            Chart.prototype.setupCamera = function() {\n\t                var camSettings = this.state.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.state.screen.options);\n\t            };\n\t            Chart.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            Chart.prototype.autoscroll = function() {\n\t                var state = this.state;\n\t                if (!state.data.autoScroll) return;\n\t                var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleX = this.state.screen.getScreenRightVal();\n\t                    var paddingRightX = this.state.getPaddingRight();\n\t                    var currentScroll = state.data.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = trendsMaxXDelta;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onScrollStop = function() {};\n\t            Chart.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onMouseMove = function(ev) {\n\t                if (this.state.data.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.state.data.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            Chart.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            Chart.prototype.onChartResize = function() {\n\t                var _a = this.state.data, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var _this = this;\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                var autoScrollIsEnabled = this.state.data.autoScroll;\n\t                if (autoScrollIsEnabled) this.state.setState({\n\t                    autoScroll: false\n\t                });\n\t                this.state.zoom(zoomValue, zoomOrigin).then(function() {\n\t                    if (autoScrollIsEnabled) _this.setState({\n\t                        autoScroll: true\n\t                    });\n\t                });\n\t            };\n\t            Chart.createPreviewChart = function(userOptions, $el) {\n\t                var previewChartOptions = {\n\t                    animations: {\n\t                        enabled: false\n\t                    },\n\t                    widgets: {\n\t                        Grid: {\n\t                            enabled: false\n\t                        },\n\t                        Axis: {\n\t                            enabled: false\n\t                        },\n\t                        TrendsGradient: {\n\t                            enabled: false\n\t                        }\n\t                    }\n\t                };\n\t                var options = Utils_1.Utils.deepMerge(userOptions, previewChartOptions);\n\t                return new Chart(options, $el);\n\t            };\n\t            Chart.devicePixelRatio = window.devicePixelRatio;\n\t            Chart.installedWidgets = {};\n\t            Chart.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t        Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n\t        Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n\t        Chart.installWidget(AxisWidget_1.AxisWidget);\n\t        Chart.installWidget(GridWidget_1.GridWidget);\n\t        Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\n\t        Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\n\t        Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\n\t        Chart.installWidget(AxisMarksWidget_1.AxisMarksWidget);\n\t        Chart.installWidget(BorderWidget_1.BorderWidget);\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.Stats = __webpack_require__(4);\n\t        window.TweenLite = __webpack_require__(5);\n\t        __webpack_require__(7);\n\t        __webpack_require__(8);\n\t        exports.isPlainObject = __webpack_require__(9);\n\t        exports.EE2 = __webpack_require__(11);\n\t        var es6_promise_1 = __webpack_require__(12);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(13);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\t        (function(global) {\n\t            /*!\n\t\t * VERSION: 1.18.5\n\t\t * DATE: 2016-05-24\n\t\t * UPDATES AND DOCS AT: http://greensock.com\n\t\t * \n\t\t * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n\t\t *\n\t\t * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n\t\t * This work is subject to the terms at http://greensock.com/standard-license or for\n\t\t * Club GreenSock members, the software agreement that was issued with your membership.\n\t\t * \n\t\t * @author: Jack Doyle, jack@greensock.com\n\t\t **/\n\t            var _gsScope = typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window;\n\t            (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {\n\t                \"use strict\";\n\t                _gsScope._gsDefine(\"TweenMax\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n\t                    var _slice = function(a) {\n\t                        var b = [], l = a.length, i;\n\t                        for (i = 0; i !== l; b.push(a[i++])) ;\n\t                        return b;\n\t                    }, _applyCycle = function(vars, targets, i) {\n\t                        var alt = vars.cycle, p, val;\n\t                        for (p in alt) {\n\t                            val = alt[p];\n\t                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n\t                        }\n\t                        delete vars.cycle;\n\t                    }, TweenMax = function(target, duration, vars) {\n\t                        TweenLite.call(this, target, duration, vars);\n\t                        this._cycle = 0;\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._dirty = true;\n\t                        this.render = TweenMax.prototype.render;\n\t                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, p = TweenMax.prototype = TweenLite.to({}, .1, {}), _blankArray = [];\n\t                    TweenMax.version = \"1.18.5\";\n\t                    p.constructor = TweenMax;\n\t                    p.kill()._gc = false;\n\t                    TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n\t                    TweenMax.getTweensOf = TweenLite.getTweensOf;\n\t                    TweenMax.lagSmoothing = TweenLite.lagSmoothing;\n\t                    TweenMax.ticker = TweenLite.ticker;\n\t                    TweenMax.render = TweenLite.render;\n\t                    p.invalidate = function() {\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._uncache(true);\n\t                        return TweenLite.prototype.invalidate.call(this);\n\t                    };\n\t                    p.updateTo = function(vars, resetDuration) {\n\t                        var curRatio = this.ratio, immediate = this.vars.immediateRender || vars.immediateRender, p;\n\t                        if (resetDuration && this._startTime < this._timeline._time) {\n\t                            this._startTime = this._timeline._time;\n\t                            this._uncache(false);\n\t                            if (this._gc) {\n\t                                this._enabled(true, false);\n\t                            } else {\n\t                                this._timeline.insert(this, this._startTime - this._delay);\n\t                            }\n\t                        }\n\t                        for (p in vars) {\n\t                            this.vars[p] = vars[p];\n\t                        }\n\t                        if (this._initted || immediate) {\n\t                            if (resetDuration) {\n\t                                this._initted = false;\n\t                                if (immediate) {\n\t                                    this.render(0, true, true);\n\t                                }\n\t                            } else {\n\t                                if (this._gc) {\n\t                                    this._enabled(true, false);\n\t                                }\n\t                                if (this._notifyPluginsOfEnabled && this._firstPT) {\n\t                                    TweenLite._onPluginEvent(\"_onDisable\", this);\n\t                                }\n\t                                if (this._time / this._duration > .998) {\n\t                                    var prevTime = this._totalTime;\n\t                                    this.render(0, true, false);\n\t                                    this._initted = false;\n\t                                    this.render(prevTime, true, false);\n\t                                } else {\n\t                                    this._initted = false;\n\t                                    this._init();\n\t                                    if (this._time > 0 || immediate) {\n\t                                        var inv = 1 / (1 - curRatio), pt = this._firstPT, endValue;\n\t                                        while (pt) {\n\t                                            endValue = pt.s + pt.c;\n\t                                            pt.c *= inv;\n\t                                            pt.s = endValue - pt.c;\n\t                                            pt = pt._next;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.render = function(time, suppressEvents, force) {\n\t                        if (!this._initted) if (this._duration === 0 && this.vars.repeat) {\n\t                            this.invalidate();\n\t                        }\n\t                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevTotalTime = this._totalTime, prevCycle = this._cycle, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n\t                        if (time >= totalDur - 1e-7) {\n\t                            this._totalTime = totalDur;\n\t                            this._cycle = this._repeat;\n\t                            if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                this._time = 0;\n\t                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                            } else {\n\t                                this._time = duration;\n\t                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t                            }\n\t                            if (!this._reversed) {\n\t                                isComplete = true;\n\t                                callback = \"onComplete\";\n\t                                force = force || this._timeline.autoRemoveChildren;\n\t                            }\n\t                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                if (this._startTime === this._timeline._duration) {\n\t                                    time = 0;\n\t                                }\n\t                                if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n\t                                    force = true;\n\t                                    if (prevRawPrevTime > _tinyNum) {\n\t                                        callback = \"onReverseComplete\";\n\t                                    }\n\t                                }\n\t                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                            }\n\t                        } else if (time < 1e-7) {\n\t                            this._totalTime = this._time = this._cycle = 0;\n\t                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                            if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n\t                                callback = \"onReverseComplete\";\n\t                                isComplete = this._reversed;\n\t                            }\n\t                            if (time < 0) {\n\t                                this._active = false;\n\t                                if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                    if (prevRawPrevTime >= 0) {\n\t                                        force = true;\n\t                                    }\n\t                                    this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                                }\n\t                            }\n\t                            if (!this._initted) {\n\t                                force = true;\n\t                            }\n\t                        } else {\n\t                            this._totalTime = this._time = time;\n\t                            if (this._repeat !== 0) {\n\t                                cycleDuration = duration + this._repeatDelay;\n\t                                this._cycle = this._totalTime / cycleDuration >> 0;\n\t                                if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t                                    this._cycle--;\n\t                                }\n\t                                this._time = this._totalTime - this._cycle * cycleDuration;\n\t                                if (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t                                    this._time = duration - this._time;\n\t                                }\n\t                                if (this._time > duration) {\n\t                                    this._time = duration;\n\t                                } else if (this._time < 0) {\n\t                                    this._time = 0;\n\t                                }\n\t                            }\n\t                            if (this._easeType) {\n\t                                r = this._time / duration;\n\t                                type = this._easeType;\n\t                                pow = this._easePower;\n\t                                if (type === 1 || type === 3 && r >= .5) {\n\t                                    r = 1 - r;\n\t                                }\n\t                                if (type === 3) {\n\t                                    r *= 2;\n\t                                }\n\t                                if (pow === 1) {\n\t                                    r *= r;\n\t                                } else if (pow === 2) {\n\t                                    r *= r * r;\n\t                                } else if (pow === 3) {\n\t                                    r *= r * r * r;\n\t                                } else if (pow === 4) {\n\t                                    r *= r * r * r * r;\n\t                                }\n\t                                if (type === 1) {\n\t                                    this.ratio = 1 - r;\n\t                                } else if (type === 2) {\n\t                                    this.ratio = r;\n\t                                } else if (this._time / duration < .5) {\n\t                                    this.ratio = r / 2;\n\t                                } else {\n\t                                    this.ratio = 1 - r / 2;\n\t                                }\n\t                            } else {\n\t                                this.ratio = this._ease.getRatio(this._time / duration);\n\t                            }\n\t                        }\n\t                        if (prevTime === this._time && !force && prevCycle === this._cycle) {\n\t                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n\t                                this._callback(\"onUpdate\");\n\t                            }\n\t                            return;\n\t                        } else if (!this._initted) {\n\t                            this._init();\n\t                            if (!this._initted || this._gc) {\n\t                                return;\n\t                            } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n\t                                this._time = prevTime;\n\t                                this._totalTime = prevTotalTime;\n\t                                this._rawPrevTime = prevRawPrevTime;\n\t                                this._cycle = prevCycle;\n\t                                TweenLiteInternals.lazyTweens.push(this);\n\t                                this._lazy = [ time, suppressEvents ];\n\t                                return;\n\t                            }\n\t                            if (this._time && !isComplete) {\n\t                                this.ratio = this._ease.getRatio(this._time / duration);\n\t                            } else if (isComplete && this._ease._calcEnd) {\n\t                                this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n\t                            }\n\t                        }\n\t                        if (this._lazy !== false) {\n\t                            this._lazy = false;\n\t                        }\n\t                        if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t                            this._active = true;\n\t                        }\n\t                        if (prevTotalTime === 0) {\n\t                            if (this._initted === 2 && time > 0) {\n\t                                this._init();\n\t                            }\n\t                            if (this._startAt) {\n\t                                if (time >= 0) {\n\t                                    this._startAt.render(time, suppressEvents, force);\n\t                                } else if (!callback) {\n\t                                    callback = \"_dummyGS\";\n\t                                }\n\t                            }\n\t                            if (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n\t                                this._callback(\"onStart\");\n\t                            }\n\t                        }\n\t                        pt = this._firstPT;\n\t                        while (pt) {\n\t                            if (pt.f) {\n\t                                pt.t[pt.p](pt.c * this.ratio + pt.s);\n\t                            } else {\n\t                                pt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t                            }\n\t                            pt = pt._next;\n\t                        }\n\t                        if (this._onUpdate) {\n\t                            if (time < 0) if (this._startAt && this._startTime) {\n\t                                this._startAt.render(time, suppressEvents, force);\n\t                            }\n\t                            if (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n\t                                this._callback(\"onUpdate\");\n\t                            }\n\t                        }\n\t                        if (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n\t                            this._callback(\"onRepeat\");\n\t                        }\n\t                        if (callback) if (!this._gc || force) {\n\t                            if (time < 0 && this._startAt && !this._onUpdate && this._startTime) {\n\t                                this._startAt.render(time, suppressEvents, force);\n\t                            }\n\t                            if (isComplete) {\n\t                                if (this._timeline.autoRemoveChildren) {\n\t                                    this._enabled(false, false);\n\t                                }\n\t                                this._active = false;\n\t                            }\n\t                            if (!suppressEvents && this.vars[callback]) {\n\t                                this._callback(callback);\n\t                            }\n\t                            if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n\t                                this._rawPrevTime = 0;\n\t                            }\n\t                        }\n\t                    };\n\t                    TweenMax.to = function(target, duration, vars) {\n\t                        return new TweenMax(target, duration, vars);\n\t                    };\n\t                    TweenMax.from = function(target, duration, vars) {\n\t                        vars.runBackwards = true;\n\t                        vars.immediateRender = vars.immediateRender != false;\n\t                        return new TweenMax(target, duration, vars);\n\t                    };\n\t                    TweenMax.fromTo = function(target, duration, fromVars, toVars) {\n\t                        toVars.startAt = fromVars;\n\t                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                        return new TweenMax(target, duration, toVars);\n\t                    };\n\t                    TweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        stagger = stagger || 0;\n\t                        var delay = 0, a = [], finalComplete = function() {\n\t                            if (vars.onComplete) {\n\t                                vars.onComplete.apply(vars.onCompleteScope || this, arguments);\n\t                            }\n\t                            onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n\t                        }, cycle = vars.cycle, fromCycle = vars.startAt && vars.startAt.cycle, l, copy, i, p;\n\t                        if (!_isArray(targets)) {\n\t                            if (typeof targets === \"string\") {\n\t                                targets = TweenLite.selector(targets) || targets;\n\t                            }\n\t                            if (_isSelector(targets)) {\n\t                                targets = _slice(targets);\n\t                            }\n\t                        }\n\t                        targets = targets || [];\n\t                        if (stagger < 0) {\n\t                            targets = _slice(targets);\n\t                            targets.reverse();\n\t                            stagger *= -1;\n\t                        }\n\t                        l = targets.length - 1;\n\t                        for (i = 0; i <= l; i++) {\n\t                            copy = {};\n\t                            for (p in vars) {\n\t                                copy[p] = vars[p];\n\t                            }\n\t                            if (cycle) {\n\t                                _applyCycle(copy, targets, i);\n\t                                if (copy.duration != null) {\n\t                                    duration = copy.duration;\n\t                                    delete copy.duration;\n\t                                }\n\t                            }\n\t                            if (fromCycle) {\n\t                                fromCycle = copy.startAt = {};\n\t                                for (p in vars.startAt) {\n\t                                    fromCycle[p] = vars.startAt[p];\n\t                                }\n\t                                _applyCycle(copy.startAt, targets, i);\n\t                            }\n\t                            copy.delay = delay + (copy.delay || 0);\n\t                            if (i === l && onCompleteAll) {\n\t                                copy.onComplete = finalComplete;\n\t                            }\n\t                            a[i] = new TweenMax(targets[i], duration, copy);\n\t                            delay += stagger;\n\t                        }\n\t                        return a;\n\t                    };\n\t                    TweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        vars.runBackwards = true;\n\t                        vars.immediateRender = vars.immediateRender != false;\n\t                        return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    TweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        toVars.startAt = fromVars;\n\t                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                        return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    TweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t                        return new TweenMax(callback, 0, {\n\t                            delay: delay,\n\t                            onComplete: callback,\n\t                            onCompleteParams: params,\n\t                            callbackScope: scope,\n\t                            onReverseComplete: callback,\n\t                            onReverseCompleteParams: params,\n\t                            immediateRender: false,\n\t                            useFrames: useFrames,\n\t                            overwrite: 0\n\t                        });\n\t                    };\n\t                    TweenMax.set = function(target, vars) {\n\t                        return new TweenMax(target, 0, vars);\n\t                    };\n\t                    TweenMax.isTweening = function(target) {\n\t                        return TweenLite.getTweensOf(target, true).length > 0;\n\t                    };\n\t                    var _getChildrenOf = function(timeline, includeTimelines) {\n\t                        var a = [], cnt = 0, tween = timeline._first;\n\t                        while (tween) {\n\t                            if (tween instanceof TweenLite) {\n\t                                a[cnt++] = tween;\n\t                            } else {\n\t                                if (includeTimelines) {\n\t                                    a[cnt++] = tween;\n\t                                }\n\t                                a = a.concat(_getChildrenOf(tween, includeTimelines));\n\t                                cnt = a.length;\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        return a;\n\t                    }, getAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n\t                        return _getChildrenOf(Animation._rootTimeline, includeTimelines).concat(_getChildrenOf(Animation._rootFramesTimeline, includeTimelines));\n\t                    };\n\t                    TweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n\t                        if (tweens == null) {\n\t                            tweens = true;\n\t                        }\n\t                        if (delayedCalls == null) {\n\t                            delayedCalls = true;\n\t                        }\n\t                        var a = getAllTweens(timelines != false), l = a.length, allTrue = tweens && delayedCalls && timelines, isDC, tween, i;\n\t                        for (i = 0; i < l; i++) {\n\t                            tween = a[i];\n\t                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n\t                                if (complete) {\n\t                                    tween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n\t                                } else {\n\t                                    tween._enabled(false, false);\n\t                                }\n\t                            }\n\t                        }\n\t                    };\n\t                    TweenMax.killChildTweensOf = function(parent, complete) {\n\t                        if (parent == null) {\n\t                            return;\n\t                        }\n\t                        var tl = TweenLiteInternals.tweenLookup, a, curParent, p, i, l;\n\t                        if (typeof parent === \"string\") {\n\t                            parent = TweenLite.selector(parent) || parent;\n\t                        }\n\t                        if (_isSelector(parent)) {\n\t                            parent = _slice(parent);\n\t                        }\n\t                        if (_isArray(parent)) {\n\t                            i = parent.length;\n\t                            while (--i > -1) {\n\t                                TweenMax.killChildTweensOf(parent[i], complete);\n\t                            }\n\t                            return;\n\t                        }\n\t                        a = [];\n\t                        for (p in tl) {\n\t                            curParent = tl[p].target.parentNode;\n\t                            while (curParent) {\n\t                                if (curParent === parent) {\n\t                                    a = a.concat(tl[p].tweens);\n\t                                }\n\t                                curParent = curParent.parentNode;\n\t                            }\n\t                        }\n\t                        l = a.length;\n\t                        for (i = 0; i < l; i++) {\n\t                            if (complete) {\n\t                                a[i].totalTime(a[i].totalDuration());\n\t                            }\n\t                            a[i]._enabled(false, false);\n\t                        }\n\t                    };\n\t                    var _changePause = function(pause, tweens, delayedCalls, timelines) {\n\t                        tweens = tweens !== false;\n\t                        delayedCalls = delayedCalls !== false;\n\t                        timelines = timelines !== false;\n\t                        var a = getAllTweens(timelines), allTrue = tweens && delayedCalls && timelines, i = a.length, isDC, tween;\n\t                        while (--i > -1) {\n\t                            tween = a[i];\n\t                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n\t                                tween.paused(pause);\n\t                            }\n\t                        }\n\t                    };\n\t                    TweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n\t                        _changePause(true, tweens, delayedCalls, timelines);\n\t                    };\n\t                    TweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n\t                        _changePause(false, tweens, delayedCalls, timelines);\n\t                    };\n\t                    TweenMax.globalTimeScale = function(value) {\n\t                        var tl = Animation._rootTimeline, t = TweenLite.ticker.time;\n\t                        if (!arguments.length) {\n\t                            return tl._timeScale;\n\t                        }\n\t                        value = value || _tinyNum;\n\t                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n\t                        tl = Animation._rootFramesTimeline;\n\t                        t = TweenLite.ticker.frame;\n\t                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n\t                        tl._timeScale = Animation._rootTimeline._timeScale = value;\n\t                        return value;\n\t                    };\n\t                    p.progress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n\t                    };\n\t                    p.totalProgress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n\t                    };\n\t                    p.time = function(value, suppressEvents) {\n\t                        if (!arguments.length) {\n\t                            return this._time;\n\t                        }\n\t                        if (this._dirty) {\n\t                            this.totalDuration();\n\t                        }\n\t                        if (value > this._duration) {\n\t                            value = this._duration;\n\t                        }\n\t                        if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n\t                        } else if (this._repeat !== 0) {\n\t                            value += this._cycle * (this._duration + this._repeatDelay);\n\t                        }\n\t                        return this.totalTime(value, suppressEvents);\n\t                    };\n\t                    p.duration = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._duration;\n\t                        }\n\t                        return Animation.prototype.duration.call(this, value);\n\t                    };\n\t                    p.totalDuration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n\t                                this._dirty = false;\n\t                            }\n\t                            return this._totalDuration;\n\t                        }\n\t                        return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));\n\t                    };\n\t                    p.repeat = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeat;\n\t                        }\n\t                        this._repeat = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.repeatDelay = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeatDelay;\n\t                        }\n\t                        this._repeatDelay = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.yoyo = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._yoyo;\n\t                        }\n\t                        this._yoyo = value;\n\t                        return this;\n\t                    };\n\t                    return TweenMax;\n\t                }, true);\n\t                _gsScope._gsDefine(\"TimelineLite\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n\t                    var TimelineLite = function(vars) {\n\t                        SimpleTimeline.call(this, vars);\n\t                        this._labels = {};\n\t                        this.autoRemoveChildren = this.vars.autoRemoveChildren === true;\n\t                        this.smoothChildTiming = this.vars.smoothChildTiming === true;\n\t                        this._sortChildren = true;\n\t                        this._onUpdate = this.vars.onUpdate;\n\t                        var v = this.vars, val, p;\n\t                        for (p in v) {\n\t                            val = v[p];\n\t                            if (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t                                v[p] = this._swapSelfInParams(val);\n\t                            }\n\t                        }\n\t                        if (_isArray(v.tweens)) {\n\t                            this.add(v.tweens, 0, v.align, v.stagger);\n\t                        }\n\t                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _internals = TimelineLite._internals = {}, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _globals = _gsScope._gsDefine.globals, _copy = function(vars) {\n\t                        var copy = {}, p;\n\t                        for (p in vars) {\n\t                            copy[p] = vars[p];\n\t                        }\n\t                        return copy;\n\t                    }, _applyCycle = function(vars, targets, i) {\n\t                        var alt = vars.cycle, p, val;\n\t                        for (p in alt) {\n\t                            val = alt[p];\n\t                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n\t                        }\n\t                        delete vars.cycle;\n\t                    }, _pauseCallback = _internals.pauseCallback = function() {}, _slice = function(a) {\n\t                        var b = [], l = a.length, i;\n\t                        for (i = 0; i !== l; b.push(a[i++])) ;\n\t                        return b;\n\t                    }, p = TimelineLite.prototype = new SimpleTimeline();\n\t                    TimelineLite.version = \"1.18.5\";\n\t                    p.constructor = TimelineLite;\n\t                    p.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n\t                    p.to = function(target, duration, vars, position) {\n\t                        var Engine = vars.repeat && _globals.TweenMax || TweenLite;\n\t                        return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t                    };\n\t                    p.from = function(target, duration, vars, position) {\n\t                        return this.add((vars.repeat && _globals.TweenMax || TweenLite).from(target, duration, vars), position);\n\t                    };\n\t                    p.fromTo = function(target, duration, fromVars, toVars, position) {\n\t                        var Engine = toVars.repeat && _globals.TweenMax || TweenLite;\n\t                        return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t                    };\n\t                    p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        var tl = new TimelineLite({\n\t                            onComplete: onCompleteAll,\n\t                            onCompleteParams: onCompleteAllParams,\n\t                            callbackScope: onCompleteAllScope,\n\t                            smoothChildTiming: this.smoothChildTiming\n\t                        }), cycle = vars.cycle, copy, i;\n\t                        if (typeof targets === \"string\") {\n\t                            targets = TweenLite.selector(targets) || targets;\n\t                        }\n\t                        targets = targets || [];\n\t                        if (_isSelector(targets)) {\n\t                            targets = _slice(targets);\n\t                        }\n\t                        stagger = stagger || 0;\n\t                        if (stagger < 0) {\n\t                            targets = _slice(targets);\n\t                            targets.reverse();\n\t                            stagger *= -1;\n\t                        }\n\t                        for (i = 0; i < targets.length; i++) {\n\t                            copy = _copy(vars);\n\t                            if (copy.startAt) {\n\t                                copy.startAt = _copy(copy.startAt);\n\t                                if (copy.startAt.cycle) {\n\t                                    _applyCycle(copy.startAt, targets, i);\n\t                                }\n\t                            }\n\t                            if (cycle) {\n\t                                _applyCycle(copy, targets, i);\n\t                                if (copy.duration != null) {\n\t                                    duration = copy.duration;\n\t                                    delete copy.duration;\n\t                                }\n\t                            }\n\t                            tl.to(targets[i], duration, copy, i * stagger);\n\t                        }\n\t                        return this.add(tl, position);\n\t                    };\n\t                    p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        vars.immediateRender = vars.immediateRender != false;\n\t                        vars.runBackwards = true;\n\t                        return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        toVars.startAt = fromVars;\n\t                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                        return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    p.call = function(callback, params, scope, position) {\n\t                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n\t                    };\n\t                    p.set = function(target, vars, position) {\n\t                        position = this._parseTimeOrLabel(position, 0, true);\n\t                        if (vars.immediateRender == null) {\n\t                            vars.immediateRender = position === this._time && !this._paused;\n\t                        }\n\t                        return this.add(new TweenLite(target, 0, vars), position);\n\t                    };\n\t                    TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t                        vars = vars || {};\n\t                        if (vars.smoothChildTiming == null) {\n\t                            vars.smoothChildTiming = true;\n\t                        }\n\t                        var tl = new TimelineLite(vars), root = tl._timeline, tween, next;\n\t                        if (ignoreDelayedCalls == null) {\n\t                            ignoreDelayedCalls = true;\n\t                        }\n\t                        root._remove(tl, true);\n\t                        tl._startTime = 0;\n\t                        tl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t                        tween = root._first;\n\t                        while (tween) {\n\t                            next = tween._next;\n\t                            if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t                                tl.add(tween, tween._startTime - tween._delay);\n\t                            }\n\t                            tween = next;\n\t                        }\n\t                        root.add(tl, 0);\n\t                        return tl;\n\t                    };\n\t                    p.add = function(value, position, align, stagger) {\n\t                        var curTime, l, i, child, tl, beforeRawTime;\n\t                        if (typeof position !== \"number\") {\n\t                            position = this._parseTimeOrLabel(position, 0, true, value);\n\t                        }\n\t                        if (!(value instanceof Animation)) {\n\t                            if (value instanceof Array || value && value.push && _isArray(value)) {\n\t                                align = align || \"normal\";\n\t                                stagger = stagger || 0;\n\t                                curTime = position;\n\t                                l = value.length;\n\t                                for (i = 0; i < l; i++) {\n\t                                    if (_isArray(child = value[i])) {\n\t                                        child = new TimelineLite({\n\t                                            tweens: child\n\t                                        });\n\t                                    }\n\t                                    this.add(child, curTime);\n\t                                    if (typeof child !== \"string\" && typeof child !== \"function\") {\n\t                                        if (align === \"sequence\") {\n\t                                            curTime = child._startTime + child.totalDuration() / child._timeScale;\n\t                                        } else if (align === \"start\") {\n\t                                            child._startTime -= child.delay();\n\t                                        }\n\t                                    }\n\t                                    curTime += stagger;\n\t                                }\n\t                                return this._uncache(true);\n\t                            } else if (typeof value === \"string\") {\n\t                                return this.addLabel(value, position);\n\t                            } else if (typeof value === \"function\") {\n\t                                value = TweenLite.delayedCall(0, value);\n\t                            } else {\n\t                                throw \"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\";\n\t                            }\n\t                        }\n\t                        SimpleTimeline.prototype.add.call(this, value, position);\n\t                        if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n\t                            tl = this;\n\t                            beforeRawTime = tl.rawTime() > value._startTime;\n\t                            while (tl._timeline) {\n\t                                if (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t                                    tl.totalTime(tl._totalTime, true);\n\t                                } else if (tl._gc) {\n\t                                    tl._enabled(true, false);\n\t                                }\n\t                                tl = tl._timeline;\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.remove = function(value) {\n\t                        if (value instanceof Animation) {\n\t                            this._remove(value, false);\n\t                            var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline;\n\t                            value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale;\n\t                            return this;\n\t                        } else if (value instanceof Array || value && value.push && _isArray(value)) {\n\t                            var i = value.length;\n\t                            while (--i > -1) {\n\t                                this.remove(value[i]);\n\t                            }\n\t                            return this;\n\t                        } else if (typeof value === \"string\") {\n\t                            return this.removeLabel(value);\n\t                        }\n\t                        return this.kill(null, value);\n\t                    };\n\t                    p._remove = function(tween, skipDisable) {\n\t                        SimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t                        var last = this._last;\n\t                        if (!last) {\n\t                            this._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t                        } else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n\t                            this._time = this.duration();\n\t                            this._totalTime = this._totalDuration;\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.append = function(value, offsetOrLabel) {\n\t                        return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t                    };\n\t                    p.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t                        return this.add(value, position || 0, align, stagger);\n\t                    };\n\t                    p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t                        return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t                    };\n\t                    p.addLabel = function(label, position) {\n\t                        this._labels[label] = this._parseTimeOrLabel(position);\n\t                        return this;\n\t                    };\n\t                    p.addPause = function(position, callback, params, scope) {\n\t                        var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n\t                        t.vars.onComplete = t.vars.onReverseComplete = callback;\n\t                        t.data = \"isPause\";\n\t                        this._hasPause = true;\n\t                        return this.add(t, position);\n\t                    };\n\t                    p.removeLabel = function(label) {\n\t                        delete this._labels[label];\n\t                        return this;\n\t                    };\n\t                    p.getLabelTime = function(label) {\n\t                        return this._labels[label] != null ? this._labels[label] : -1;\n\t                    };\n\t                    p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t                        var i;\n\t                        if (ignore instanceof Animation && ignore.timeline === this) {\n\t                            this.remove(ignore);\n\t                        } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {\n\t                            i = ignore.length;\n\t                            while (--i > -1) {\n\t                                if (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t                                    this.remove(ignore[i]);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (typeof offsetOrLabel === \"string\") {\n\t                            return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === \"number\" && this._labels[offsetOrLabel] == null ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n\t                        }\n\t                        offsetOrLabel = offsetOrLabel || 0;\n\t                        if (typeof timeOrLabel === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {\n\t                            i = timeOrLabel.indexOf(\"=\");\n\t                            if (i === -1) {\n\t                                if (this._labels[timeOrLabel] == null) {\n\t                                    return appendIfAbsent ? this._labels[timeOrLabel] = this.duration() + offsetOrLabel : offsetOrLabel;\n\t                                }\n\t                                return this._labels[timeOrLabel] + offsetOrLabel;\n\t                            }\n\t                            offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + \"1\", 10) * Number(timeOrLabel.substr(i + 1));\n\t                            timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : this.duration();\n\t                        } else if (timeOrLabel == null) {\n\t                            timeOrLabel = this.duration();\n\t                        }\n\t                        return Number(timeOrLabel) + offsetOrLabel;\n\t                    };\n\t                    p.seek = function(position, suppressEvents) {\n\t                        return this.totalTime(typeof position === \"number\" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);\n\t                    };\n\t                    p.stop = function() {\n\t                        return this.paused(true);\n\t                    };\n\t                    p.gotoAndPlay = function(position, suppressEvents) {\n\t                        return this.play(position, suppressEvents);\n\t                    };\n\t                    p.gotoAndStop = function(position, suppressEvents) {\n\t                        return this.pause(position, suppressEvents);\n\t                    };\n\t                    p.render = function(time, suppressEvents, force) {\n\t                        if (this._gc) {\n\t                            this._enabled(true, false);\n\t                        }\n\t                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevStart = this._startTime, prevTimeScale = this._timeScale, prevPaused = this._paused, tween, isComplete, next, callback, internalForce, pauseTween, curTime;\n\t                        if (time >= totalDur - 1e-7) {\n\t                            this._totalTime = this._time = totalDur;\n\t                            if (!this._reversed) if (!this._hasPausedChild()) {\n\t                                isComplete = true;\n\t                                callback = \"onComplete\";\n\t                                internalForce = !!this._timeline.autoRemoveChildren;\n\t                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n\t                                    internalForce = true;\n\t                                    if (this._rawPrevTime > _tinyNum) {\n\t                                        callback = \"onReverseComplete\";\n\t                                    }\n\t                                }\n\t                            }\n\t                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                            time = totalDur + 1e-4;\n\t                        } else if (time < 1e-7) {\n\t                            this._totalTime = this._time = 0;\n\t                            if (prevTime !== 0 || this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || time < 0 && this._rawPrevTime >= 0)) {\n\t                                callback = \"onReverseComplete\";\n\t                                isComplete = this._reversed;\n\t                            }\n\t                            if (time < 0) {\n\t                                this._active = false;\n\t                                if (this._timeline.autoRemoveChildren && this._reversed) {\n\t                                    internalForce = isComplete = true;\n\t                                    callback = \"onReverseComplete\";\n\t                                } else if (this._rawPrevTime >= 0 && this._first) {\n\t                                    internalForce = true;\n\t                                }\n\t                                this._rawPrevTime = time;\n\t                            } else {\n\t                                this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                if (time === 0 && isComplete) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime === 0) {\n\t                                        if (!tween._duration) {\n\t                                            isComplete = false;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                }\n\t                                time = 0;\n\t                                if (!this._initted) {\n\t                                    internalForce = true;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t                                if (time >= prevTime) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime <= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                } else {\n\t                                    tween = this._last;\n\t                                    while (tween && tween._startTime >= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._prev;\n\t                                    }\n\t                                }\n\t                                if (pauseTween) {\n\t                                    this._time = time = pauseTween._startTime;\n\t                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n\t                                }\n\t                            }\n\t                            this._totalTime = this._time = this._rawPrevTime = time;\n\t                        }\n\t                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t                            return;\n\t                        } else if (!this._initted) {\n\t                            this._initted = true;\n\t                        }\n\t                        if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n\t                            this._active = true;\n\t                        }\n\t                        if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n\t                            this._callback(\"onStart\");\n\t                        }\n\t                        curTime = this._time;\n\t                        if (curTime >= prevTime) {\n\t                            tween = this._first;\n\t                            while (tween) {\n\t                                next = tween._next;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        } else {\n\t                            tween = this._last;\n\t                            while (tween) {\n\t                                next = tween._prev;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        pauseTween = tween._prev;\n\t                                        while (pauseTween && pauseTween.endTime() > this._time) {\n\t                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n\t                                            pauseTween = pauseTween._prev;\n\t                                        }\n\t                                        pauseTween = null;\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        }\n\t                        if (this._onUpdate) if (!suppressEvents) {\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            this._callback(\"onUpdate\");\n\t                        }\n\t                        if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n\t                            if (isComplete) {\n\t                                if (_lazyTweens.length) {\n\t                                    _lazyRender();\n\t                                }\n\t                                if (this._timeline.autoRemoveChildren) {\n\t                                    this._enabled(false, false);\n\t                                }\n\t                                this._active = false;\n\t                            }\n\t                            if (!suppressEvents && this.vars[callback]) {\n\t                                this._callback(callback);\n\t                            }\n\t                        }\n\t                    };\n\t                    p._hasPausedChild = function() {\n\t                        var tween = this._first;\n\t                        while (tween) {\n\t                            if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {\n\t                                return true;\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        return false;\n\t                    };\n\t                    p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t                        ignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t                        var a = [], tween = this._first, cnt = 0;\n\t                        while (tween) {\n\t                            if (tween._startTime < ignoreBeforeTime) {} else if (tween instanceof TweenLite) {\n\t                                if (tweens !== false) {\n\t                                    a[cnt++] = tween;\n\t                                }\n\t                            } else {\n\t                                if (timelines !== false) {\n\t                                    a[cnt++] = tween;\n\t                                }\n\t                                if (nested !== false) {\n\t                                    a = a.concat(tween.getChildren(true, tweens, timelines));\n\t                                    cnt = a.length;\n\t                                }\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        return a;\n\t                    };\n\t                    p.getTweensOf = function(target, nested) {\n\t                        var disabled = this._gc, a = [], cnt = 0, tweens, i;\n\t                        if (disabled) {\n\t                            this._enabled(true, true);\n\t                        }\n\t                        tweens = TweenLite.getTweensOf(target);\n\t                        i = tweens.length;\n\t                        while (--i > -1) {\n\t                            if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {\n\t                                a[cnt++] = tweens[i];\n\t                            }\n\t                        }\n\t                        if (disabled) {\n\t                            this._enabled(false, true);\n\t                        }\n\t                        return a;\n\t                    };\n\t                    p.recent = function() {\n\t                        return this._recent;\n\t                    };\n\t                    p._contains = function(tween) {\n\t                        var tl = tween.timeline;\n\t                        while (tl) {\n\t                            if (tl === this) {\n\t                                return true;\n\t                            }\n\t                            tl = tl.timeline;\n\t                        }\n\t                        return false;\n\t                    };\n\t                    p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t                        ignoreBeforeTime = ignoreBeforeTime || 0;\n\t                        var tween = this._first, labels = this._labels, p;\n\t                        while (tween) {\n\t                            if (tween._startTime >= ignoreBeforeTime) {\n\t                                tween._startTime += amount;\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        if (adjustLabels) {\n\t                            for (p in labels) {\n\t                                if (labels[p] >= ignoreBeforeTime) {\n\t                                    labels[p] += amount;\n\t                                }\n\t                            }\n\t                        }\n\t                        return this._uncache(true);\n\t                    };\n\t                    p._kill = function(vars, target) {\n\t                        if (!vars && !target) {\n\t                            return this._enabled(false, false);\n\t                        }\n\t                        var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target), i = tweens.length, changed = false;\n\t                        while (--i > -1) {\n\t                            if (tweens[i]._kill(vars, target)) {\n\t                                changed = true;\n\t                            }\n\t                        }\n\t                        return changed;\n\t                    };\n\t                    p.clear = function(labels) {\n\t                        var tweens = this.getChildren(false, true, true), i = tweens.length;\n\t                        this._time = this._totalTime = 0;\n\t                        while (--i > -1) {\n\t                            tweens[i]._enabled(false, false);\n\t                        }\n\t                        if (labels !== false) {\n\t                            this._labels = {};\n\t                        }\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.invalidate = function() {\n\t                        var tween = this._first;\n\t                        while (tween) {\n\t                            tween.invalidate();\n\t                            tween = tween._next;\n\t                        }\n\t                        return Animation.prototype.invalidate.call(this);\n\t                    };\n\t                    p._enabled = function(enabled, ignoreTimeline) {\n\t                        if (enabled === this._gc) {\n\t                            var tween = this._first;\n\t                            while (tween) {\n\t                                tween._enabled(enabled, true);\n\t                                tween = tween._next;\n\t                            }\n\t                        }\n\t                        return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t                    };\n\t                    p.totalTime = function(time, suppressEvents, uncapped) {\n\t                        this._forcingPlayhead = true;\n\t                        var val = Animation.prototype.totalTime.apply(this, arguments);\n\t                        this._forcingPlayhead = false;\n\t                        return val;\n\t                    };\n\t                    p.duration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                this.totalDuration();\n\t                            }\n\t                            return this._duration;\n\t                        }\n\t                        if (this.duration() !== 0 && value !== 0) {\n\t                            this.timeScale(this._duration / value);\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.totalDuration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                var max = 0, tween = this._last, prevStart = 999999999999, prev, end;\n\t                                while (tween) {\n\t                                    prev = tween._prev;\n\t                                    if (tween._dirty) {\n\t                                        tween.totalDuration();\n\t                                    }\n\t                                    if (tween._startTime > prevStart && this._sortChildren && !tween._paused) {\n\t                                        this.add(tween, tween._startTime - tween._delay);\n\t                                    } else {\n\t                                        prevStart = tween._startTime;\n\t                                    }\n\t                                    if (tween._startTime < 0 && !tween._paused) {\n\t                                        max -= tween._startTime;\n\t                                        if (this._timeline.smoothChildTiming) {\n\t                                            this._startTime += tween._startTime / this._timeScale;\n\t                                        }\n\t                                        this.shiftChildren(-tween._startTime, false, -9999999999);\n\t                                        prevStart = 0;\n\t                                    }\n\t                                    end = tween._startTime + tween._totalDuration / tween._timeScale;\n\t                                    if (end > max) {\n\t                                        max = end;\n\t                                    }\n\t                                    tween = prev;\n\t                                }\n\t                                this._duration = this._totalDuration = max;\n\t                                this._dirty = false;\n\t                            }\n\t                            return this._totalDuration;\n\t                        }\n\t                        return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;\n\t                    };\n\t                    p.paused = function(value) {\n\t                        if (!value) {\n\t                            var tween = this._first, time = this._time;\n\t                            while (tween) {\n\t                                if (tween._startTime === time && tween.data === \"isPause\") {\n\t                                    tween._rawPrevTime = 0;\n\t                                }\n\t                                tween = tween._next;\n\t                            }\n\t                        }\n\t                        return Animation.prototype.paused.apply(this, arguments);\n\t                    };\n\t                    p.usesFrames = function() {\n\t                        var tl = this._timeline;\n\t                        while (tl._timeline) {\n\t                            tl = tl._timeline;\n\t                        }\n\t                        return tl === Animation._rootFramesTimeline;\n\t                    };\n\t                    p.rawTime = function() {\n\t                        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n\t                    };\n\t                    return TimelineLite;\n\t                }, true);\n\t                _gsScope._gsDefine(\"TimelineMax\", [ \"TimelineLite\", \"TweenLite\", \"easing.Ease\" ], function(TimelineLite, TweenLite, Ease) {\n\t                    var TimelineMax = function(vars) {\n\t                        TimelineLite.call(this, vars);\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._cycle = 0;\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._dirty = true;\n\t                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _easeNone = new Ease(null, null, 1, 0), p = TimelineMax.prototype = new TimelineLite();\n\t                    p.constructor = TimelineMax;\n\t                    p.kill()._gc = false;\n\t                    TimelineMax.version = \"1.18.5\";\n\t                    p.invalidate = function() {\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._uncache(true);\n\t                        return TimelineLite.prototype.invalidate.call(this);\n\t                    };\n\t                    p.addCallback = function(callback, position, params, scope) {\n\t                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n\t                    };\n\t                    p.removeCallback = function(callback, position) {\n\t                        if (callback) {\n\t                            if (position == null) {\n\t                                this._kill(null, callback);\n\t                            } else {\n\t                                var a = this.getTweensOf(callback, false), i = a.length, time = this._parseTimeOrLabel(position);\n\t                                while (--i > -1) {\n\t                                    if (a[i]._startTime === time) {\n\t                                        a[i]._enabled(false, false);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.removePause = function(position) {\n\t                        return this.removeCallback(TimelineLite._internals.pauseCallback, position);\n\t                    };\n\t                    p.tweenTo = function(position, vars) {\n\t                        vars = vars || {};\n\t                        var copy = {\n\t                            ease: _easeNone,\n\t                            useFrames: this.usesFrames(),\n\t                            immediateRender: false\n\t                        }, duration, p, t;\n\t                        for (p in vars) {\n\t                            copy[p] = vars[p];\n\t                        }\n\t                        copy.time = this._parseTimeOrLabel(position);\n\t                        duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || .001;\n\t                        t = new TweenLite(this, duration, copy);\n\t                        copy.onStart = function() {\n\t                            t.target.paused(true);\n\t                            if (t.vars.time !== t.target.time() && duration === t.duration()) {\n\t                                t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale);\n\t                            }\n\t                            if (vars.onStart) {\n\t                                t._callback(\"onStart\");\n\t                            }\n\t                        };\n\t                        return t;\n\t                    };\n\t                    p.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t                        vars = vars || {};\n\t                        fromPosition = this._parseTimeOrLabel(fromPosition);\n\t                        vars.startAt = {\n\t                            onComplete: this.seek,\n\t                            onCompleteParams: [ fromPosition ],\n\t                            callbackScope: this\n\t                        };\n\t                        vars.immediateRender = vars.immediateRender !== false;\n\t                        var t = this.tweenTo(toPosition, vars);\n\t                        return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || .001);\n\t                    };\n\t                    p.render = function(time, suppressEvents, force) {\n\t                        if (this._gc) {\n\t                            this._enabled(true, false);\n\t                        }\n\t                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), dur = this._duration, prevTime = this._time, prevTotalTime = this._totalTime, prevStart = this._startTime, prevTimeScale = this._timeScale, prevRawPrevTime = this._rawPrevTime, prevPaused = this._paused, prevCycle = this._cycle, tween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n\t                        if (time >= totalDur - 1e-7) {\n\t                            if (!this._locked) {\n\t                                this._totalTime = totalDur;\n\t                                this._cycle = this._repeat;\n\t                            }\n\t                            if (!this._reversed) if (!this._hasPausedChild()) {\n\t                                isComplete = true;\n\t                                callback = \"onComplete\";\n\t                                internalForce = !!this._timeline.autoRemoveChildren;\n\t                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n\t                                    internalForce = true;\n\t                                    if (prevRawPrevTime > _tinyNum) {\n\t                                        callback = \"onReverseComplete\";\n\t                                    }\n\t                                }\n\t                            }\n\t                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                            if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                this._time = time = 0;\n\t                            } else {\n\t                                this._time = dur;\n\t                                time = dur + 1e-4;\n\t                            }\n\t                        } else if (time < 1e-7) {\n\t                            if (!this._locked) {\n\t                                this._totalTime = this._cycle = 0;\n\t                            }\n\t                            this._time = 0;\n\t                            if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !this._locked) {\n\t                                callback = \"onReverseComplete\";\n\t                                isComplete = this._reversed;\n\t                            }\n\t                            if (time < 0) {\n\t                                this._active = false;\n\t                                if (this._timeline.autoRemoveChildren && this._reversed) {\n\t                                    internalForce = isComplete = true;\n\t                                    callback = \"onReverseComplete\";\n\t                                } else if (prevRawPrevTime >= 0 && this._first) {\n\t                                    internalForce = true;\n\t                                }\n\t                                this._rawPrevTime = time;\n\t                            } else {\n\t                                this._rawPrevTime = dur || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                if (time === 0 && isComplete) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime === 0) {\n\t                                        if (!tween._duration) {\n\t                                            isComplete = false;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                }\n\t                                time = 0;\n\t                                if (!this._initted) {\n\t                                    internalForce = true;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            if (dur === 0 && prevRawPrevTime < 0) {\n\t                                internalForce = true;\n\t                            }\n\t                            this._time = this._rawPrevTime = time;\n\t                            if (!this._locked) {\n\t                                this._totalTime = time;\n\t                                if (this._repeat !== 0) {\n\t                                    cycleDuration = dur + this._repeatDelay;\n\t                                    this._cycle = this._totalTime / cycleDuration >> 0;\n\t                                    if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t                                        this._cycle--;\n\t                                    }\n\t                                    this._time = this._totalTime - this._cycle * cycleDuration;\n\t                                    if (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t                                        this._time = dur - this._time;\n\t                                    }\n\t                                    if (this._time > dur) {\n\t                                        this._time = dur;\n\t                                        time = dur + 1e-4;\n\t                                    } else if (this._time < 0) {\n\t                                        this._time = time = 0;\n\t                                    } else {\n\t                                        time = this._time;\n\t                                    }\n\t                                }\n\t                            }\n\t                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t                                time = this._time;\n\t                                if (time >= prevTime) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime <= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                } else {\n\t                                    tween = this._last;\n\t                                    while (tween && tween._startTime >= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._prev;\n\t                                    }\n\t                                }\n\t                                if (pauseTween) {\n\t                                    this._time = time = pauseTween._startTime;\n\t                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (this._cycle !== prevCycle) if (!this._locked) {\n\t                            var backwards = this._yoyo && (prevCycle & 1) !== 0, wrap = backwards === (this._yoyo && (this._cycle & 1) !== 0), recTotalTime = this._totalTime, recCycle = this._cycle, recRawPrevTime = this._rawPrevTime, recTime = this._time;\n\t                            this._totalTime = prevCycle * dur;\n\t                            if (this._cycle < prevCycle) {\n\t                                backwards = !backwards;\n\t                            } else {\n\t                                this._totalTime += dur;\n\t                            }\n\t                            this._time = prevTime;\n\t                            this._rawPrevTime = dur === 0 ? prevRawPrevTime - 1e-4 : prevRawPrevTime;\n\t                            this._cycle = prevCycle;\n\t                            this._locked = true;\n\t                            prevTime = backwards ? 0 : dur;\n\t                            this.render(prevTime, suppressEvents, dur === 0);\n\t                            if (!suppressEvents) if (!this._gc) {\n\t                                if (this.vars.onRepeat) {\n\t                                    this._callback(\"onRepeat\");\n\t                                }\n\t                            }\n\t                            if (prevTime !== this._time) {\n\t                                return;\n\t                            }\n\t                            if (wrap) {\n\t                                prevTime = backwards ? dur + 1e-4 : -1e-4;\n\t                                this.render(prevTime, true, false);\n\t                            }\n\t                            this._locked = false;\n\t                            if (this._paused && !prevPaused) {\n\t                                return;\n\t                            }\n\t                            this._time = recTime;\n\t                            this._totalTime = recTotalTime;\n\t                            this._cycle = recCycle;\n\t                            this._rawPrevTime = recRawPrevTime;\n\t                        }\n\t                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n\t                                this._callback(\"onUpdate\");\n\t                            }\n\t                            return;\n\t                        } else if (!this._initted) {\n\t                            this._initted = true;\n\t                        }\n\t                        if (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n\t                            this._active = true;\n\t                        }\n\t                        if (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n\t                            this._callback(\"onStart\");\n\t                        }\n\t                        curTime = this._time;\n\t                        if (curTime >= prevTime) {\n\t                            tween = this._first;\n\t                            while (tween) {\n\t                                next = tween._next;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= this._time && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        } else {\n\t                            tween = this._last;\n\t                            while (tween) {\n\t                                next = tween._prev;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        pauseTween = tween._prev;\n\t                                        while (pauseTween && pauseTween.endTime() > this._time) {\n\t                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n\t                                            pauseTween = pauseTween._prev;\n\t                                        }\n\t                                        pauseTween = null;\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        }\n\t                        if (this._onUpdate) if (!suppressEvents) {\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            this._callback(\"onUpdate\");\n\t                        }\n\t                        if (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n\t                            if (isComplete) {\n\t                                if (_lazyTweens.length) {\n\t                                    _lazyRender();\n\t                                }\n\t                                if (this._timeline.autoRemoveChildren) {\n\t                                    this._enabled(false, false);\n\t                                }\n\t                                this._active = false;\n\t                            }\n\t                            if (!suppressEvents && this.vars[callback]) {\n\t                                this._callback(callback);\n\t                            }\n\t                        }\n\t                    };\n\t                    p.getActive = function(nested, tweens, timelines) {\n\t                        if (nested == null) {\n\t                            nested = true;\n\t                        }\n\t                        if (tweens == null) {\n\t                            tweens = true;\n\t                        }\n\t                        if (timelines == null) {\n\t                            timelines = false;\n\t                        }\n\t                        var a = [], all = this.getChildren(nested, tweens, timelines), cnt = 0, l = all.length, i, tween;\n\t                        for (i = 0; i < l; i++) {\n\t                            tween = all[i];\n\t                            if (tween.isActive()) {\n\t                                a[cnt++] = tween;\n\t                            }\n\t                        }\n\t                        return a;\n\t                    };\n\t                    p.getLabelAfter = function(time) {\n\t                        if (!time) if (time !== 0) {\n\t                            time = this._time;\n\t                        }\n\t                        var labels = this.getLabelsArray(), l = labels.length, i;\n\t                        for (i = 0; i < l; i++) {\n\t                            if (labels[i].time > time) {\n\t                                return labels[i].name;\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    p.getLabelBefore = function(time) {\n\t                        if (time == null) {\n\t                            time = this._time;\n\t                        }\n\t                        var labels = this.getLabelsArray(), i = labels.length;\n\t                        while (--i > -1) {\n\t                            if (labels[i].time < time) {\n\t                                return labels[i].name;\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    p.getLabelsArray = function() {\n\t                        var a = [], cnt = 0, p;\n\t                        for (p in this._labels) {\n\t                            a[cnt++] = {\n\t                                time: this._labels[p],\n\t                                name: p\n\t                            };\n\t                        }\n\t                        a.sort(function(a, b) {\n\t                            return a.time - b.time;\n\t                        });\n\t                        return a;\n\t                    };\n\t                    p.progress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n\t                    };\n\t                    p.totalProgress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n\t                    };\n\t                    p.totalDuration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                TimelineLite.prototype.totalDuration.call(this);\n\t                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n\t                            }\n\t                            return this._totalDuration;\n\t                        }\n\t                        return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);\n\t                    };\n\t                    p.time = function(value, suppressEvents) {\n\t                        if (!arguments.length) {\n\t                            return this._time;\n\t                        }\n\t                        if (this._dirty) {\n\t                            this.totalDuration();\n\t                        }\n\t                        if (value > this._duration) {\n\t                            value = this._duration;\n\t                        }\n\t                        if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n\t                        } else if (this._repeat !== 0) {\n\t                            value += this._cycle * (this._duration + this._repeatDelay);\n\t                        }\n\t                        return this.totalTime(value, suppressEvents);\n\t                    };\n\t                    p.repeat = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeat;\n\t                        }\n\t                        this._repeat = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.repeatDelay = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeatDelay;\n\t                        }\n\t                        this._repeatDelay = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.yoyo = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._yoyo;\n\t                        }\n\t                        this._yoyo = value;\n\t                        return this;\n\t                    };\n\t                    p.currentLabel = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this.getLabelBefore(this._time + 1e-8);\n\t                        }\n\t                        return this.seek(value, true);\n\t                    };\n\t                    return TimelineMax;\n\t                }, true);\n\t                (function() {\n\t                    var _RAD2DEG = 180 / Math.PI, _r1 = [], _r2 = [], _r3 = [], _corProps = {}, _globals = _gsScope._gsDefine.globals, Segment = function(a, b, c, d) {\n\t                        if (c === d) {\n\t                            c = d - (d - b) / 1e6;\n\t                        }\n\t                        if (a === b) {\n\t                            b = a + (c - a) / 1e6;\n\t                        }\n\t                        this.a = a;\n\t                        this.b = b;\n\t                        this.c = c;\n\t                        this.d = d;\n\t                        this.da = d - a;\n\t                        this.ca = c - a;\n\t                        this.ba = b - a;\n\t                    }, _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\", cubicToQuadratic = function(a, b, c, d) {\n\t                        var q1 = {\n\t                            a: a\n\t                        }, q2 = {}, q3 = {}, q4 = {\n\t                            c: d\n\t                        }, mab = (a + b) / 2, mbc = (b + c) / 2, mcd = (c + d) / 2, mabc = (mab + mbc) / 2, mbcd = (mbc + mcd) / 2, m8 = (mbcd - mabc) / 8;\n\t                        q1.b = mab + (a - mab) / 4;\n\t                        q2.b = mabc + m8;\n\t                        q1.c = q2.a = (q1.b + q2.b) / 2;\n\t                        q2.c = q3.a = (mabc + mbcd) / 2;\n\t                        q3.b = mbcd - m8;\n\t                        q4.b = mcd + (d - mcd) / 4;\n\t                        q3.c = q4.a = (q3.b + q4.b) / 2;\n\t                        return [ q1, q2, q3, q4 ];\n\t                    }, _calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t                        var l = a.length - 1, ii = 0, cp1 = a[0].a, i, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t                        for (i = 0; i < l; i++) {\n\t                            seg = a[ii];\n\t                            p1 = seg.a;\n\t                            p2 = seg.d;\n\t                            p3 = a[ii + 1].d;\n\t                            if (correlate) {\n\t                                r1 = _r1[i];\n\t                                r2 = _r2[i];\n\t                                tl = (r2 + r1) * curviness * .25 / (basic ? .5 : _r3[i] || .5);\n\t                                m1 = p2 - (p2 - p1) * (basic ? curviness * .5 : r1 !== 0 ? tl / r1 : 0);\n\t                                m2 = p2 + (p3 - p2) * (basic ? curviness * .5 : r2 !== 0 ? tl / r2 : 0);\n\t                                mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + .5) / 4 || 0));\n\t                            } else {\n\t                                m1 = p2 - (p2 - p1) * curviness * .5;\n\t                                m2 = p2 + (p3 - p2) * curviness * .5;\n\t                                mm = p2 - (m1 + m2) / 2;\n\t                            }\n\t                            m1 += mm;\n\t                            m2 += mm;\n\t                            seg.c = cp2 = m1;\n\t                            if (i !== 0) {\n\t                                seg.b = cp1;\n\t                            } else {\n\t                                seg.b = cp1 = seg.a + (seg.c - seg.a) * .6;\n\t                            }\n\t                            seg.da = p2 - p1;\n\t                            seg.ca = cp2 - p1;\n\t                            seg.ba = cp1 - p1;\n\t                            if (quad) {\n\t                                qb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t                                a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t                                ii += 4;\n\t                            } else {\n\t                                ii++;\n\t                            }\n\t                            cp1 = m2;\n\t                        }\n\t                        seg = a[ii];\n\t                        seg.b = cp1;\n\t                        seg.c = cp1 + (seg.d - cp1) * .4;\n\t                        seg.da = seg.d - seg.a;\n\t                        seg.ca = seg.c - seg.a;\n\t                        seg.ba = cp1 - seg.a;\n\t                        if (quad) {\n\t                            qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t                            a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t                        }\n\t                    }, _parseAnchors = function(values, p, correlate, prepend) {\n\t                        var a = [], l, i, p1, p2, p3, tmp;\n\t                        if (prepend) {\n\t                            values = [ prepend ].concat(values);\n\t                            i = values.length;\n\t                            while (--i > -1) {\n\t                                if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t                                    values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n\t                                }\n\t                            }\n\t                        }\n\t                        l = values.length - 2;\n\t                        if (l < 0) {\n\t                            a[0] = new Segment(values[0][p], 0, 0, values[l < -1 ? 0 : 1][p]);\n\t                            return a;\n\t                        }\n\t                        for (i = 0; i < l; i++) {\n\t                            p1 = values[i][p];\n\t                            p2 = values[i + 1][p];\n\t                            a[i] = new Segment(p1, 0, 0, p2);\n\t                            if (correlate) {\n\t                                p3 = values[i + 2][p];\n\t                                _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t                                _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t                            }\n\t                        }\n\t                        a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n\t                        return a;\n\t                    }, bezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t                        var obj = {}, props = [], first = prepend || values[0], i, p, a, j, r, l, seamless, last;\n\t                        correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n\t                        if (curviness == null) {\n\t                            curviness = 1;\n\t                        }\n\t                        for (p in values[0]) {\n\t                            props.push(p);\n\t                        }\n\t                        if (values.length > 1) {\n\t                            last = values[values.length - 1];\n\t                            seamless = true;\n\t                            i = props.length;\n\t                            while (--i > -1) {\n\t                                p = props[i];\n\t                                if (Math.abs(first[p] - last[p]) > .05) {\n\t                                    seamless = false;\n\t                                    break;\n\t                                }\n\t                            }\n\t                            if (seamless) {\n\t                                values = values.concat();\n\t                                if (prepend) {\n\t                                    values.unshift(prepend);\n\t                                }\n\t                                values.push(values[1]);\n\t                                prepend = values[values.length - 3];\n\t                            }\n\t                        }\n\t                        _r1.length = _r2.length = _r3.length = 0;\n\t                        i = props.length;\n\t                        while (--i > -1) {\n\t                            p = props[i];\n\t                            _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n\t                            obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t                        }\n\t                        i = _r1.length;\n\t                        while (--i > -1) {\n\t                            _r1[i] = Math.sqrt(_r1[i]);\n\t                            _r2[i] = Math.sqrt(_r2[i]);\n\t                        }\n\t                        if (!basic) {\n\t                            i = props.length;\n\t                            while (--i > -1) {\n\t                                if (_corProps[p]) {\n\t                                    a = obj[props[i]];\n\t                                    l = a.length - 1;\n\t                                    for (j = 0; j < l; j++) {\n\t                                        r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n\t                                        _r3[j] = (_r3[j] || 0) + r * r;\n\t                                    }\n\t                                }\n\t                            }\n\t                            i = _r3.length;\n\t                            while (--i > -1) {\n\t                                _r3[i] = Math.sqrt(_r3[i]);\n\t                            }\n\t                        }\n\t                        i = props.length;\n\t                        j = quadratic ? 4 : 1;\n\t                        while (--i > -1) {\n\t                            p = props[i];\n\t                            a = obj[p];\n\t                            _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n\t                            if (seamless) {\n\t                                a.splice(0, j);\n\t                                a.splice(a.length - j, j);\n\t                            }\n\t                        }\n\t                        return obj;\n\t                    }, _parseBezierData = function(values, type, prepend) {\n\t                        type = type || \"soft\";\n\t                        var obj = {}, inc = type === \"cubic\" ? 3 : 2, soft = type === \"soft\", props = [], a, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t                        if (soft && prepend) {\n\t                            values = [ prepend ].concat(values);\n\t                        }\n\t                        if (values == null || values.length < inc + 1) {\n\t                            throw \"invalid Bezier data\";\n\t                        }\n\t                        for (p in values[0]) {\n\t                            props.push(p);\n\t                        }\n\t                        i = props.length;\n\t                        while (--i > -1) {\n\t                            p = props[i];\n\t                            obj[p] = cur = [];\n\t                            cnt = 0;\n\t                            l = values.length;\n\t                            for (j = 0; j < l; j++) {\n\t                                a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t                                if (soft) if (j > 1) if (j < l - 1) {\n\t                                    cur[cnt++] = (a + cur[cnt - 2]) / 2;\n\t                                }\n\t                                cur[cnt++] = a;\n\t                            }\n\t                            l = cnt - inc + 1;\n\t                            cnt = 0;\n\t                            for (j = 0; j < l; j += inc) {\n\t                                a = cur[j];\n\t                                b = cur[j + 1];\n\t                                c = cur[j + 2];\n\t                                d = inc === 2 ? 0 : cur[j + 3];\n\t                                cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t                            }\n\t                            cur.length = cnt;\n\t                        }\n\t                        return obj;\n\t                    }, _addCubicLengths = function(a, steps, resolution) {\n\t                        var inc = 1 / resolution, j = a.length, d, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t                        while (--j > -1) {\n\t                            bez = a[j];\n\t                            s = bez.a;\n\t                            da = bez.d - s;\n\t                            ca = bez.c - s;\n\t                            ba = bez.b - s;\n\t                            d = d1 = 0;\n\t                            for (i = 1; i <= resolution; i++) {\n\t                                p = inc * i;\n\t                                inv = 1 - p;\n\t                                d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t                                index = j * resolution + i - 1;\n\t                                steps[index] = (steps[index] || 0) + d * d;\n\t                            }\n\t                        }\n\t                    }, _parseLengthData = function(obj, resolution) {\n\t                        resolution = resolution >> 0 || 6;\n\t                        var a = [], lengths = [], d = 0, total = 0, threshold = resolution - 1, segments = [], curLS = [], p, i, l, index;\n\t                        for (p in obj) {\n\t                            _addCubicLengths(obj[p], a, resolution);\n\t                        }\n\t                        l = a.length;\n\t                        for (i = 0; i < l; i++) {\n\t                            d += Math.sqrt(a[i]);\n\t                            index = i % resolution;\n\t                            curLS[index] = d;\n\t                            if (index === threshold) {\n\t                                total += d;\n\t                                index = i / resolution >> 0;\n\t                                segments[index] = curLS;\n\t                                lengths[index] = total;\n\t                                d = 0;\n\t                                curLS = [];\n\t                            }\n\t                        }\n\t                        return {\n\t                            length: total,\n\t                            lengths: lengths,\n\t                            segments: segments\n\t                        };\n\t                    }, BezierPlugin = _gsScope._gsDefine.plugin({\n\t                        propName: \"bezier\",\n\t                        priority: -1,\n\t                        version: \"1.3.6\",\n\t                        API: 2,\n\t                        global: true,\n\t                        init: function(target, vars, tween) {\n\t                            this._target = target;\n\t                            if (vars instanceof Array) {\n\t                                vars = {\n\t                                    values: vars\n\t                                };\n\t                            }\n\t                            this._func = {};\n\t                            this._round = {};\n\t                            this._props = [];\n\t                            this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n\t                            var values = vars.values || [], first = {}, second = values[0], autoRotate = vars.autoRotate || tween.vars.orientToBezier, p, isFunc, i, j, prepend;\n\t                            this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [ [ \"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0 ] ] : null;\n\t                            for (p in second) {\n\t                                this._props.push(p);\n\t                            }\n\t                            i = this._props.length;\n\t                            while (--i > -1) {\n\t                                p = this._props[i];\n\t                                this._overwriteProps.push(p);\n\t                                isFunc = this._func[p] = typeof target[p] === \"function\";\n\t                                first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n\t                                if (!prepend) if (first[p] !== values[0][p]) {\n\t                                    prepend = first;\n\t                                }\n\t                            }\n\t                            this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t                            this._segCount = this._beziers[p].length;\n\t                            if (this._timeRes) {\n\t                                var ld = _parseLengthData(this._beziers, this._timeRes);\n\t                                this._length = ld.length;\n\t                                this._lengths = ld.lengths;\n\t                                this._segments = ld.segments;\n\t                                this._l1 = this._li = this._s1 = this._si = 0;\n\t                                this._l2 = this._lengths[0];\n\t                                this._curSeg = this._segments[0];\n\t                                this._s2 = this._curSeg[0];\n\t                                this._prec = 1 / this._curSeg.length;\n\t                            }\n\t                            if (autoRotate = this._autoRotate) {\n\t                                this._initialRotations = [];\n\t                                if (!(autoRotate[0] instanceof Array)) {\n\t                                    this._autoRotate = autoRotate = [ autoRotate ];\n\t                                }\n\t                                i = autoRotate.length;\n\t                                while (--i > -1) {\n\t                                    for (j = 0; j < 3; j++) {\n\t                                        p = autoRotate[i][j];\n\t                                        this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n\t                                    }\n\t                                    p = autoRotate[i][2];\n\t                                    this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t                                }\n\t                            }\n\t                            this._startRatio = tween.vars.runBackwards ? 1 : 0;\n\t                            return true;\n\t                        },\n\t                        set: function(v) {\n\t                            var segments = this._segCount, func = this._func, target = this._target, notStart = v !== this._startRatio, curIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n\t                            if (!this._timeRes) {\n\t                                curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n\t                                t = (v - curIndex * (1 / segments)) * segments;\n\t                            } else {\n\t                                lengths = this._lengths;\n\t                                curSeg = this._curSeg;\n\t                                v *= this._length;\n\t                                i = this._li;\n\t                                if (v > this._l2 && i < segments - 1) {\n\t                                    l = segments - 1;\n\t                                    while (i < l && (this._l2 = lengths[++i]) <= v) {}\n\t                                    this._l1 = lengths[i - 1];\n\t                                    this._li = i;\n\t                                    this._curSeg = curSeg = this._segments[i];\n\t                                    this._s2 = curSeg[this._s1 = this._si = 0];\n\t                                } else if (v < this._l1 && i > 0) {\n\t                                    while (i > 0 && (this._l1 = lengths[--i]) >= v) {}\n\t                                    if (i === 0 && v < this._l1) {\n\t                                        this._l1 = 0;\n\t                                    } else {\n\t                                        i++;\n\t                                    }\n\t                                    this._l2 = lengths[i];\n\t                                    this._li = i;\n\t                                    this._curSeg = curSeg = this._segments[i];\n\t                                    this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t                                    this._s2 = curSeg[this._si];\n\t                                }\n\t                                curIndex = i;\n\t                                v -= this._l1;\n\t                                i = this._si;\n\t                                if (v > this._s2 && i < curSeg.length - 1) {\n\t                                    l = curSeg.length - 1;\n\t                                    while (i < l && (this._s2 = curSeg[++i]) <= v) {}\n\t                                    this._s1 = curSeg[i - 1];\n\t                                    this._si = i;\n\t                                } else if (v < this._s1 && i > 0) {\n\t                                    while (i > 0 && (this._s1 = curSeg[--i]) >= v) {}\n\t                                    if (i === 0 && v < this._s1) {\n\t                                        this._s1 = 0;\n\t                                    } else {\n\t                                        i++;\n\t                                    }\n\t                                    this._s2 = curSeg[i];\n\t                                    this._si = i;\n\t                                }\n\t                                t = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n\t                            }\n\t                            inv = 1 - t;\n\t                            i = this._props.length;\n\t                            while (--i > -1) {\n\t                                p = this._props[i];\n\t                                b = this._beziers[p][curIndex];\n\t                                val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t                                if (this._round[p]) {\n\t                                    val = Math.round(val);\n\t                                }\n\t                                if (func[p]) {\n\t                                    target[p](val);\n\t                                } else {\n\t                                    target[p] = val;\n\t                                }\n\t                            }\n\t                            if (this._autoRotate) {\n\t                                var ar = this._autoRotate, b2, x1, y1, x2, y2, add, conv;\n\t                                i = ar.length;\n\t                                while (--i > -1) {\n\t                                    p = ar[i][2];\n\t                                    add = ar[i][3] || 0;\n\t                                    conv = ar[i][4] === true ? 1 : _RAD2DEG;\n\t                                    b = this._beziers[ar[i][0]];\n\t                                    b2 = this._beziers[ar[i][1]];\n\t                                    if (b && b2) {\n\t                                        b = b[curIndex];\n\t                                        b2 = b2[curIndex];\n\t                                        x1 = b.a + (b.b - b.a) * t;\n\t                                        x2 = b.b + (b.c - b.b) * t;\n\t                                        x1 += (x2 - x1) * t;\n\t                                        x2 += (b.c + (b.d - b.c) * t - x2) * t;\n\t                                        y1 = b2.a + (b2.b - b2.a) * t;\n\t                                        y2 = b2.b + (b2.c - b2.b) * t;\n\t                                        y1 += (y2 - y1) * t;\n\t                                        y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n\t                                        val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\t                                        if (func[p]) {\n\t                                            target[p](val);\n\t                                        } else {\n\t                                            target[p] = val;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }), p = BezierPlugin.prototype;\n\t                    BezierPlugin.bezierThrough = bezierThrough;\n\t                    BezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t                    BezierPlugin._autoCSS = true;\n\t                    BezierPlugin.quadraticToCubic = function(a, b, c) {\n\t                        return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t                    };\n\t                    BezierPlugin._cssRegister = function() {\n\t                        var CSSPlugin = _globals.CSSPlugin;\n\t                        if (!CSSPlugin) {\n\t                            return;\n\t                        }\n\t                        var _internals = CSSPlugin._internals, _parseToProxy = _internals._parseToProxy, _setPluginRatio = _internals._setPluginRatio, CSSPropTween = _internals.CSSPropTween;\n\t                        _internals._registerComplexSpecialProp(\"bezier\", {\n\t                            parser: function(t, e, prop, cssp, pt, plugin) {\n\t                                if (e instanceof Array) {\n\t                                    e = {\n\t                                        values: e\n\t                                    };\n\t                                }\n\t                                plugin = new BezierPlugin();\n\t                                var values = e.values, l = values.length - 1, pluginValues = [], v = {}, i, p, data;\n\t                                if (l < 0) {\n\t                                    return pt;\n\t                                }\n\t                                for (i = 0; i <= l; i++) {\n\t                                    data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n\t                                    pluginValues[i] = data.end;\n\t                                }\n\t                                for (p in e) {\n\t                                    v[p] = e[p];\n\t                                }\n\t                                v.values = pluginValues;\n\t                                pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t                                pt.data = data;\n\t                                pt.plugin = plugin;\n\t                                pt.setRatio = _setPluginRatio;\n\t                                if (v.autoRotate === 0) {\n\t                                    v.autoRotate = true;\n\t                                }\n\t                                if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t                                    i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n\t                                    v.autoRotate = data.end.left != null ? [ [ \"left\", \"top\", \"rotation\", i, false ] ] : data.end.x != null ? [ [ \"x\", \"y\", \"rotation\", i, false ] ] : false;\n\t                                }\n\t                                if (v.autoRotate) {\n\t                                    if (!cssp._transform) {\n\t                                        cssp._enableTransforms(false);\n\t                                    }\n\t                                    data.autoRotate = cssp._target._gsTransform;\n\t                                    data.proxy.rotation = data.autoRotate.rotation || 0;\n\t                                }\n\t                                plugin._onInitTween(data.proxy, v, cssp._tween);\n\t                                return pt;\n\t                            }\n\t                        });\n\t                    };\n\t                    p._roundProps = function(lookup, value) {\n\t                        var op = this._overwriteProps, i = op.length;\n\t                        while (--i > -1) {\n\t                            if (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n\t                                this._round[op[i]] = value;\n\t                            }\n\t                        }\n\t                    };\n\t                    p._kill = function(lookup) {\n\t                        var a = this._props, p, i;\n\t                        for (p in this._beziers) {\n\t                            if (p in lookup) {\n\t                                delete this._beziers[p];\n\t                                delete this._func[p];\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    if (a[i] === p) {\n\t                                        a.splice(i, 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return this._super._kill.call(this, lookup);\n\t                    };\n\t                })();\n\t                _gsScope._gsDefine(\"plugins.CSSPlugin\", [ \"plugins.TweenPlugin\", \"TweenLite\" ], function(TweenPlugin, TweenLite) {\n\t                    var CSSPlugin = function() {\n\t                        TweenPlugin.call(this, \"css\");\n\t                        this._overwriteProps.length = 0;\n\t                        this.setRatio = CSSPlugin.prototype.setRatio;\n\t                    }, _globals = _gsScope._gsDefine.globals, _hasPriority, _suffixMap, _cs, _overwriteProps, _specialProps = {}, p = CSSPlugin.prototype = new TweenPlugin(\"css\");\n\t                    p.constructor = CSSPlugin;\n\t                    CSSPlugin.version = \"1.18.5\";\n\t                    CSSPlugin.API = 2;\n\t                    CSSPlugin.defaultTransformPerspective = 0;\n\t                    CSSPlugin.defaultSkewType = \"compensated\";\n\t                    CSSPlugin.defaultSmoothOrigin = true;\n\t                    p = \"px\";\n\t                    CSSPlugin.suffixMap = {\n\t                        top: p,\n\t                        right: p,\n\t                        bottom: p,\n\t                        left: p,\n\t                        width: p,\n\t                        height: p,\n\t                        fontSize: p,\n\t                        padding: p,\n\t                        margin: p,\n\t                        perspective: p,\n\t                        lineHeight: \"\"\n\t                    };\n\t                    var _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g, _relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g, _valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, _NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, _suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g, _opacityExp = /opacity *= *([^)]*)/i, _opacityValExp = /opacity:([^;]*)/i, _alphaFilterExp = /alpha\\(opacity *=.+?\\)/i, _rgbhslExp = /^(rgb|hsl)/, _capsExp = /([A-Z])/g, _camelExp = /-([a-z])/gi, _urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, _camelFunc = function(s, g) {\n\t                        return g.toUpperCase();\n\t                    }, _horizExp = /(?:Left|Right|Width)/i, _ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi, _ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i, _commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, _complexExp = /[\\s,\\(]/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _forcePT = {}, _doc = document, _createElement = function(type) {\n\t                        return _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n\t                    }, _tempDiv = _createElement(\"div\"), _tempImg = _createElement(\"img\"), _internals = CSSPlugin._internals = {\n\t                        _specialProps: _specialProps\n\t                    }, _agent = navigator.userAgent, _autoRound, _reqSafariFix, _isSafari, _isFirefox, _isSafariLT6, _ieVers, _supportsOpacity = function() {\n\t                        var i = _agent.indexOf(\"Android\"), a = _createElement(\"a\");\n\t                        _isSafari = _agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i + 8, 1)) > 3);\n\t                        _isSafariLT6 = _isSafari && Number(_agent.substr(_agent.indexOf(\"Version/\") + 8, 1)) < 6;\n\t                        _isFirefox = _agent.indexOf(\"Firefox\") !== -1;\n\t                        if (/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(_agent) || /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(_agent)) {\n\t                            _ieVers = parseFloat(RegExp.$1);\n\t                        }\n\t                        if (!a) {\n\t                            return false;\n\t                        }\n\t                        a.style.cssText = \"top:1px;opacity:.55;\";\n\t                        return /^0.55/.test(a.style.opacity);\n\t                    }(), _getIEOpacity = function(v) {\n\t                        return _opacityExp.test(typeof v === \"string\" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ? parseFloat(RegExp.$1) / 100 : 1;\n\t                    }, _log = function(s) {\n\t                        if (window.console) {\n\t                            console.log(s);\n\t                        }\n\t                    }, _prefixCSS = \"\", _prefix = \"\", _checkPropPrefix = function(p, e) {\n\t                        e = e || _tempDiv;\n\t                        var s = e.style, a, i;\n\t                        if (s[p] !== undefined) {\n\t                            return p;\n\t                        }\n\t                        p = p.charAt(0).toUpperCase() + p.substr(1);\n\t                        a = [ \"O\", \"Moz\", \"ms\", \"Ms\", \"Webkit\" ];\n\t                        i = 5;\n\t                        while (--i > -1 && s[a[i] + p] === undefined) {}\n\t                        if (i >= 0) {\n\t                            _prefix = i === 3 ? \"ms\" : a[i];\n\t                            _prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n\t                            return _prefix + p;\n\t                        }\n\t                        return null;\n\t                    }, _getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {}, _getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n\t                        var rv;\n\t                        if (!_supportsOpacity) if (p === \"opacity\") {\n\t                            return _getIEOpacity(t);\n\t                        }\n\t                        if (!calc && t.style[p]) {\n\t                            rv = t.style[p];\n\t                        } else if (cs = cs || _getComputedStyle(t)) {\n\t                            rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t                        } else if (t.currentStyle) {\n\t                            rv = t.currentStyle[p];\n\t                        }\n\t                        return dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\") ? dflt : rv;\n\t                    }, _convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n\t                        if (sfx === \"px\" || !sfx) {\n\t                            return v;\n\t                        }\n\t                        if (sfx === \"auto\" || !v) {\n\t                            return 0;\n\t                        }\n\t                        var horiz = _horizExp.test(p), node = t, style = _tempDiv.style, neg = v < 0, precise = v === 1, pix, cache, time;\n\t                        if (neg) {\n\t                            v = -v;\n\t                        }\n\t                        if (precise) {\n\t                            v *= 100;\n\t                        }\n\t                        if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n\t                            pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);\n\t                        } else {\n\t                            style.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n\t                            if (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n\t                                node = t.parentNode || _doc.body;\n\t                                cache = node._gsCache;\n\t                                time = TweenLite.ticker.frame;\n\t                                if (cache && horiz && cache.time === time) {\n\t                                    return cache.width * v / 100;\n\t                                }\n\t                                style[horiz ? \"width\" : \"height\"] = v + sfx;\n\t                            } else {\n\t                                style[horiz ? \"borderLeftWidth\" : \"borderTopWidth\"] = v + sfx;\n\t                            }\n\t                            node.appendChild(_tempDiv);\n\t                            pix = parseFloat(_tempDiv[horiz ? \"offsetWidth\" : \"offsetHeight\"]);\n\t                            node.removeChild(_tempDiv);\n\t                            if (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n\t                                cache = node._gsCache = node._gsCache || {};\n\t                                cache.time = time;\n\t                                cache.width = pix / v * 100;\n\t                            }\n\t                            if (pix === 0 && !recurse) {\n\t                                pix = _convertToPixels(t, p, v, sfx, true);\n\t                            }\n\t                        }\n\t                        if (precise) {\n\t                            pix /= 100;\n\t                        }\n\t                        return neg ? -pix : pix;\n\t                    }, _calculateOffset = _internals.calculateOffset = function(t, p, cs) {\n\t                        if (_getStyle(t, \"position\", cs) !== \"absolute\") {\n\t                            return 0;\n\t                        }\n\t                        var dim = p === \"left\" ? \"Left\" : \"Top\", v = _getStyle(t, \"margin\" + dim, cs);\n\t                        return t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n\t                    }, _getAllStyles = function(t, cs) {\n\t                        var s = {}, i, tr, p;\n\t                        if (cs = cs || _getComputedStyle(t, null)) {\n\t                            if (i = cs.length) {\n\t                                while (--i > -1) {\n\t                                    p = cs[i];\n\t                                    if (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) {\n\t                                        s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (i in cs) {\n\t                                    if (i.indexOf(\"Transform\") === -1 || _transformProp === i) {\n\t                                        s[i] = cs[i];\n\t                                    }\n\t                                }\n\t                            }\n\t                        } else if (cs = t.currentStyle || t.style) {\n\t                            for (i in cs) {\n\t                                if (typeof i === \"string\" && s[i] === undefined) {\n\t                                    s[i.replace(_camelExp, _camelFunc)] = cs[i];\n\t                                }\n\t                            }\n\t                        }\n\t                        if (!_supportsOpacity) {\n\t                            s.opacity = _getIEOpacity(t);\n\t                        }\n\t                        tr = _getTransform(t, cs, false);\n\t                        s.rotation = tr.rotation;\n\t                        s.skewX = tr.skewX;\n\t                        s.scaleX = tr.scaleX;\n\t                        s.scaleY = tr.scaleY;\n\t                        s.x = tr.x;\n\t                        s.y = tr.y;\n\t                        if (_supports3D) {\n\t                            s.z = tr.z;\n\t                            s.rotationX = tr.rotationX;\n\t                            s.rotationY = tr.rotationY;\n\t                            s.scaleZ = tr.scaleZ;\n\t                        }\n\t                        if (s.filters) {\n\t                            delete s.filters;\n\t                        }\n\t                        return s;\n\t                    }, _cssDif = function(t, s1, s2, vars, forceLookup) {\n\t                        var difs = {}, style = t.style, val, p, mpt;\n\t                        for (p in s2) {\n\t                            if (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf(\"Origin\") === -1) if (typeof val === \"number\" || typeof val === \"string\") {\n\t                                difs[p] = val === \"auto\" && (p === \"left\" || p === \"top\") ? _calculateOffset(t, p) : (val === \"\" || val === \"auto\" || val === \"none\") && typeof s1[p] === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\" ? 0 : val;\n\t                                if (style[p] !== undefined) {\n\t                                    mpt = new MiniPropTween(style, p, style[p], mpt);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (vars) {\n\t                            for (p in vars) {\n\t                                if (p !== \"className\") {\n\t                                    difs[p] = vars[p];\n\t                                }\n\t                            }\n\t                        }\n\t                        return {\n\t                            difs: difs,\n\t                            firstMPT: mpt\n\t                        };\n\t                    }, _dimensions = {\n\t                        width: [ \"Left\", \"Right\" ],\n\t                        height: [ \"Top\", \"Bottom\" ]\n\t                    }, _margins = [ \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\" ], _getDimension = function(t, p, cs) {\n\t                        if ((t.nodeName + \"\").toLowerCase() === \"svg\") {\n\t                            return (cs || _getComputedStyle(t))[p] || 0;\n\t                        } else if (t.getBBox && _isSVG(t)) {\n\t                            return t.getBBox()[p] || 0;\n\t                        }\n\t                        var v = parseFloat(p === \"width\" ? t.offsetWidth : t.offsetHeight), a = _dimensions[p], i = a.length;\n\t                        cs = cs || _getComputedStyle(t, null);\n\t                        while (--i > -1) {\n\t                            v -= parseFloat(_getStyle(t, \"padding\" + a[i], cs, true)) || 0;\n\t                            v -= parseFloat(_getStyle(t, \"border\" + a[i] + \"Width\", cs, true)) || 0;\n\t                        }\n\t                        return v;\n\t                    }, _parsePosition = function(v, recObj) {\n\t                        if (v === \"contain\" || v === \"auto\" || v === \"auto auto\") {\n\t                            return v + \" \";\n\t                        }\n\t                        if (v == null || v === \"\") {\n\t                            v = \"0 0\";\n\t                        }\n\t                        var a = v.split(\" \"), x = v.indexOf(\"left\") !== -1 ? \"0%\" : v.indexOf(\"right\") !== -1 ? \"100%\" : a[0], y = v.indexOf(\"top\") !== -1 ? \"0%\" : v.indexOf(\"bottom\") !== -1 ? \"100%\" : a[1], i;\n\t                        if (a.length > 3 && !recObj) {\n\t                            a = v.split(\", \").join(\",\").split(\",\");\n\t                            v = [];\n\t                            for (i = 0; i < a.length; i++) {\n\t                                v.push(_parsePosition(a[i]));\n\t                            }\n\t                            return v.join(\",\");\n\t                        }\n\t                        if (y == null) {\n\t                            y = x === \"center\" ? \"50%\" : \"0\";\n\t                        } else if (y === \"center\") {\n\t                            y = \"50%\";\n\t                        }\n\t                        if (x === \"center\" || isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1) {\n\t                            x = \"50%\";\n\t                        }\n\t                        v = x + \" \" + y + (a.length > 2 ? \" \" + a[2] : \"\");\n\t                        if (recObj) {\n\t                            recObj.oxp = x.indexOf(\"%\") !== -1;\n\t                            recObj.oyp = y.indexOf(\"%\") !== -1;\n\t                            recObj.oxr = x.charAt(1) === \"=\";\n\t                            recObj.oyr = y.charAt(1) === \"=\";\n\t                            recObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n\t                            recObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n\t                            recObj.v = v;\n\t                        }\n\t                        return recObj || v;\n\t                    }, _parseChange = function(e, b) {\n\t                        return typeof e === \"string\" && e.charAt(1) === \"=\" ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;\n\t                    }, _parseVal = function(v, d) {\n\t                        return v == null ? d : typeof v === \"string\" && v.charAt(1) === \"=\" ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n\t                    }, _parseAngle = function(v, d, p, directionalEnd) {\n\t                        var min = 1e-6, cap, split, dif, result, isRelative;\n\t                        if (v == null) {\n\t                            result = d;\n\t                        } else if (typeof v === \"number\") {\n\t                            result = v;\n\t                        } else {\n\t                            cap = 360;\n\t                            split = v.split(\"_\");\n\t                            isRelative = v.charAt(1) === \"=\";\n\t                            dif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf(\"rad\") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n\t                            if (split.length) {\n\t                                if (directionalEnd) {\n\t                                    directionalEnd[p] = d + dif;\n\t                                }\n\t                                if (v.indexOf(\"short\") !== -1) {\n\t                                    dif = dif % cap;\n\t                                    if (dif !== dif % (cap / 2)) {\n\t                                        dif = dif < 0 ? dif + cap : dif - cap;\n\t                                    }\n\t                                }\n\t                                if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t                                    dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t                                    dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                }\n\t                            }\n\t                            result = d + dif;\n\t                        }\n\t                        if (result < min && result > -min) {\n\t                            result = 0;\n\t                        }\n\t                        return result;\n\t                    }, _colorLookup = {\n\t                        aqua: [ 0, 255, 255 ],\n\t                        lime: [ 0, 255, 0 ],\n\t                        silver: [ 192, 192, 192 ],\n\t                        black: [ 0, 0, 0 ],\n\t                        maroon: [ 128, 0, 0 ],\n\t                        teal: [ 0, 128, 128 ],\n\t                        blue: [ 0, 0, 255 ],\n\t                        navy: [ 0, 0, 128 ],\n\t                        white: [ 255, 255, 255 ],\n\t                        fuchsia: [ 255, 0, 255 ],\n\t                        olive: [ 128, 128, 0 ],\n\t                        yellow: [ 255, 255, 0 ],\n\t                        orange: [ 255, 165, 0 ],\n\t                        gray: [ 128, 128, 128 ],\n\t                        purple: [ 128, 0, 128 ],\n\t                        green: [ 0, 128, 0 ],\n\t                        red: [ 255, 0, 0 ],\n\t                        pink: [ 255, 192, 203 ],\n\t                        cyan: [ 0, 255, 255 ],\n\t                        transparent: [ 255, 255, 255, 0 ]\n\t                    }, _hue = function(h, m1, m2) {\n\t                        h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n\t                        return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + .5 | 0;\n\t                    }, _parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n\t                        var a, r, g, b, h, s, l, max, min, d, wasHSL;\n\t                        if (!v) {\n\t                            a = _colorLookup.black;\n\t                        } else if (typeof v === \"number\") {\n\t                            a = [ v >> 16, v >> 8 & 255, v & 255 ];\n\t                        } else {\n\t                            if (v.charAt(v.length - 1) === \",\") {\n\t                                v = v.substr(0, v.length - 1);\n\t                            }\n\t                            if (_colorLookup[v]) {\n\t                                a = _colorLookup[v];\n\t                            } else if (v.charAt(0) === \"#\") {\n\t                                if (v.length === 4) {\n\t                                    r = v.charAt(1);\n\t                                    g = v.charAt(2);\n\t                                    b = v.charAt(3);\n\t                                    v = \"#\" + r + r + g + g + b + b;\n\t                                }\n\t                                v = parseInt(v.substr(1), 16);\n\t                                a = [ v >> 16, v >> 8 & 255, v & 255 ];\n\t                            } else if (v.substr(0, 3) === \"hsl\") {\n\t                                a = wasHSL = v.match(_numExp);\n\t                                if (!toHSL) {\n\t                                    h = Number(a[0]) % 360 / 360;\n\t                                    s = Number(a[1]) / 100;\n\t                                    l = Number(a[2]) / 100;\n\t                                    g = l <= .5 ? l * (s + 1) : l + s - l * s;\n\t                                    r = l * 2 - g;\n\t                                    if (a.length > 3) {\n\t                                        a[3] = Number(v[3]);\n\t                                    }\n\t                                    a[0] = _hue(h + 1 / 3, r, g);\n\t                                    a[1] = _hue(h, r, g);\n\t                                    a[2] = _hue(h - 1 / 3, r, g);\n\t                                } else if (v.indexOf(\"=\") !== -1) {\n\t                                    return v.match(_relNumExp);\n\t                                }\n\t                            } else {\n\t                                a = v.match(_numExp) || _colorLookup.transparent;\n\t                            }\n\t                            a[0] = Number(a[0]);\n\t                            a[1] = Number(a[1]);\n\t                            a[2] = Number(a[2]);\n\t                            if (a.length > 3) {\n\t                                a[3] = Number(a[3]);\n\t                            }\n\t                        }\n\t                        if (toHSL && !wasHSL) {\n\t                            r = a[0] / 255;\n\t                            g = a[1] / 255;\n\t                            b = a[2] / 255;\n\t                            max = Math.max(r, g, b);\n\t                            min = Math.min(r, g, b);\n\t                            l = (max + min) / 2;\n\t                            if (max === min) {\n\t                                h = s = 0;\n\t                            } else {\n\t                                d = max - min;\n\t                                s = l > .5 ? d / (2 - max - min) : d / (max + min);\n\t                                h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n\t                                h *= 60;\n\t                            }\n\t                            a[0] = h + .5 | 0;\n\t                            a[1] = s * 100 + .5 | 0;\n\t                            a[2] = l * 100 + .5 | 0;\n\t                        }\n\t                        return a;\n\t                    }, _formatColors = function(s, toHSL) {\n\t                        var colors = s.match(_colorExp) || [], charIndex = 0, parsed = colors.length ? \"\" : s, i, color, temp;\n\t                        for (i = 0; i < colors.length; i++) {\n\t                            color = colors[i];\n\t                            temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);\n\t                            charIndex += temp.length + color.length;\n\t                            color = _parseColor(color, toHSL);\n\t                            if (color.length === 3) {\n\t                                color.push(1);\n\t                            }\n\t                            parsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n\t                        }\n\t                        return parsed + s.substr(charIndex);\n\t                    }, _colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";\n\t                    for (p in _colorLookup) {\n\t                        _colorExp += \"|\" + p + \"\\\\b\";\n\t                    }\n\t                    _colorExp = new RegExp(_colorExp + \")\", \"gi\");\n\t                    CSSPlugin.colorStringFilter = function(a) {\n\t                        var combined = a[0] + a[1], toHSL;\n\t                        if (_colorExp.test(combined)) {\n\t                            toHSL = combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1;\n\t                            a[0] = _formatColors(a[0], toHSL);\n\t                            a[1] = _formatColors(a[1], toHSL);\n\t                        }\n\t                        _colorExp.lastIndex = 0;\n\t                    };\n\t                    if (!TweenLite.defaultStringFilter) {\n\t                        TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n\t                    }\n\t                    var _getFormatter = function(dflt, clr, collapsible, multi) {\n\t                        if (dflt == null) {\n\t                            return function(v) {\n\t                                return v;\n\t                            };\n\t                        }\n\t                        var dColor = clr ? (dflt.match(_colorExp) || [ \"\" ])[0] : \"\", dVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [], pfx = dflt.substr(0, dflt.indexOf(dVals[0])), sfx = dflt.charAt(dflt.length - 1) === \")\" ? \")\" : \"\", delim = dflt.indexOf(\" \") !== -1 ? \" \" : \",\", numVals = dVals.length, dSfx = numVals > 0 ? dVals[0].replace(_numExp, \"\") : \"\", formatter;\n\t                        if (!numVals) {\n\t                            return function(v) {\n\t                                return v;\n\t                            };\n\t                        }\n\t                        if (clr) {\n\t                            formatter = function(v) {\n\t                                var color, vals, i, a;\n\t                                if (typeof v === \"number\") {\n\t                                    v += dSfx;\n\t                                } else if (multi && _commasOutsideParenExp.test(v)) {\n\t                                    a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                    for (i = 0; i < a.length; i++) {\n\t                                        a[i] = formatter(a[i]);\n\t                                    }\n\t                                    return a.join(\",\");\n\t                                }\n\t                                color = (v.match(_colorExp) || [ dColor ])[0];\n\t                                vals = v.split(color).join(\"\").match(_valuesExp) || [];\n\t                                i = vals.length;\n\t                                if (numVals > i--) {\n\t                                    while (++i < numVals) {\n\t                                        vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n\t                                    }\n\t                                }\n\t                                return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n\t                            };\n\t                            return formatter;\n\t                        }\n\t                        formatter = function(v) {\n\t                            var vals, a, i;\n\t                            if (typeof v === \"number\") {\n\t                                v += dSfx;\n\t                            } else if (multi && _commasOutsideParenExp.test(v)) {\n\t                                a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                for (i = 0; i < a.length; i++) {\n\t                                    a[i] = formatter(a[i]);\n\t                                }\n\t                                return a.join(\",\");\n\t                            }\n\t                            vals = v.match(_valuesExp) || [];\n\t                            i = vals.length;\n\t                            if (numVals > i--) {\n\t                                while (++i < numVals) {\n\t                                    vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n\t                                }\n\t                            }\n\t                            return pfx + vals.join(delim) + sfx;\n\t                        };\n\t                        return formatter;\n\t                    }, _getEdgeParser = function(props) {\n\t                        props = props.split(\",\");\n\t                        return function(t, e, p, cssp, pt, plugin, vars) {\n\t                            var a = (e + \"\").split(\" \"), i;\n\t                            vars = {};\n\t                            for (i = 0; i < 4; i++) {\n\t                                vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];\n\t                            }\n\t                            return cssp.parse(t, vars, pt, plugin);\n\t                        };\n\t                    }, _setPluginRatio = _internals._setPluginRatio = function(v) {\n\t                        this.plugin.setRatio(v);\n\t                        var d = this.data, proxy = d.proxy, mpt = d.firstMPT, min = 1e-6, val, pt, i, str, p;\n\t                        while (mpt) {\n\t                            val = proxy[mpt.v];\n\t                            if (mpt.r) {\n\t                                val = Math.round(val);\n\t                            } else if (val < min && val > -min) {\n\t                                val = 0;\n\t                            }\n\t                            mpt.t[mpt.p] = val;\n\t                            mpt = mpt._next;\n\t                        }\n\t                        if (d.autoRotate) {\n\t                            d.autoRotate.rotation = proxy.rotation;\n\t                        }\n\t                        if (v === 1 || v === 0) {\n\t                            mpt = d.firstMPT;\n\t                            p = v === 1 ? \"e\" : \"b\";\n\t                            while (mpt) {\n\t                                pt = mpt.t;\n\t                                if (!pt.type) {\n\t                                    pt[p] = pt.s + pt.xs0;\n\t                                } else if (pt.type === 1) {\n\t                                    str = pt.xs0 + pt.s + pt.xs1;\n\t                                    for (i = 1; i < pt.l; i++) {\n\t                                        str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                    }\n\t                                    pt[p] = str;\n\t                                }\n\t                                mpt = mpt._next;\n\t                            }\n\t                        }\n\t                    }, MiniPropTween = function(t, p, v, next, r) {\n\t                        this.t = t;\n\t                        this.p = p;\n\t                        this.v = v;\n\t                        this.r = r;\n\t                        if (next) {\n\t                            next._prev = this;\n\t                            this._next = next;\n\t                        }\n\t                    }, _parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n\t                        var bpt = pt, start = {}, end = {}, transform = cssp._transform, oldForce = _forcePT, i, p, xp, mpt, firstPT;\n\t                        cssp._transform = null;\n\t                        _forcePT = vars;\n\t                        pt = firstPT = cssp.parse(t, vars, pt, plugin);\n\t                        _forcePT = oldForce;\n\t                        if (shallow) {\n\t                            cssp._transform = transform;\n\t                            if (bpt) {\n\t                                bpt._prev = null;\n\t                                if (bpt._prev) {\n\t                                    bpt._prev._next = null;\n\t                                }\n\t                            }\n\t                        }\n\t                        while (pt && pt !== bpt) {\n\t                            if (pt.type <= 1) {\n\t                                p = pt.p;\n\t                                end[p] = pt.s + pt.c;\n\t                                start[p] = pt.s;\n\t                                if (!shallow) {\n\t                                    mpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n\t                                    pt.c = 0;\n\t                                }\n\t                                if (pt.type === 1) {\n\t                                    i = pt.l;\n\t                                    while (--i > 0) {\n\t                                        xp = \"xn\" + i;\n\t                                        p = pt.p + \"_\" + xp;\n\t                                        end[p] = pt.data[xp];\n\t                                        start[p] = pt[xp];\n\t                                        if (!shallow) {\n\t                                            mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                            pt = pt._next;\n\t                        }\n\t                        return {\n\t                            proxy: start,\n\t                            end: end,\n\t                            firstMPT: mpt,\n\t                            pt: firstPT\n\t                        };\n\t                    }, CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n\t                        this.t = t;\n\t                        this.p = p;\n\t                        this.s = s;\n\t                        this.c = c;\n\t                        this.n = n || p;\n\t                        if (!(t instanceof CSSPropTween)) {\n\t                            _overwriteProps.push(this.n);\n\t                        }\n\t                        this.r = r;\n\t                        this.type = type || 0;\n\t                        if (pr) {\n\t                            this.pr = pr;\n\t                            _hasPriority = true;\n\t                        }\n\t                        this.b = b === undefined ? s : b;\n\t                        this.e = e === undefined ? s + c : e;\n\t                        if (next) {\n\t                            this._next = next;\n\t                            next._prev = this;\n\t                        }\n\t                    }, _addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) {\n\t                        var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n\t                        pt.b = start;\n\t                        pt.e = pt.xs0 = end;\n\t                        return pt;\n\t                    }, _parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n\t                        b = b || dflt || \"\";\n\t                        pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);\n\t                        e += \"\";\n\t                        if (clrs && _colorExp.test(e + b)) {\n\t                            e = [ b, e ];\n\t                            CSSPlugin.colorStringFilter(e);\n\t                            b = e[0];\n\t                            e = e[1];\n\t                        }\n\t                        var ba = b.split(\", \").join(\",\").split(\" \"), ea = e.split(\", \").join(\",\").split(\" \"), l = ba.length, autoRound = _autoRound !== false, i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n\t                        if (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n\t                            ba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t                            ea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t                            l = ba.length;\n\t                        }\n\t                        if (l !== ea.length) {\n\t                            ba = (dflt || \"\").split(\" \");\n\t                            l = ba.length;\n\t                        }\n\t                        pt.plugin = plugin;\n\t                        pt.setRatio = setRatio;\n\t                        _colorExp.lastIndex = 0;\n\t                        for (i = 0; i < l; i++) {\n\t                            bv = ba[i];\n\t                            ev = ea[i];\n\t                            bn = parseFloat(bv);\n\t                            if (bn || bn === 0) {\n\t                                pt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), autoRound && ev.indexOf(\"px\") !== -1, true);\n\t                            } else if (clrs && _colorExp.test(bv)) {\n\t                                str = ev.indexOf(\")\") + 1;\n\t                                str = \")\" + (str ? ev.substr(str) : \"\");\n\t                                useHSL = ev.indexOf(\"hsl\") !== -1 && _supportsOpacity;\n\t                                bv = _parseColor(bv, useHSL);\n\t                                ev = _parseColor(ev, useHSL);\n\t                                hasAlpha = bv.length + ev.length > 6;\n\t                                if (hasAlpha && !_supportsOpacity && ev[3] === 0) {\n\t                                    pt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n\t                                    pt.e = pt.e.split(ea[i]).join(\"transparent\");\n\t                                } else {\n\t                                    if (!_supportsOpacity) {\n\t                                        hasAlpha = false;\n\t                                    }\n\t                                    if (useHSL) {\n\t                                        pt.appendXtra(hasAlpha ? \"hsla(\" : \"hsl(\", bv[0], _parseChange(ev[0], bv[0]), \",\", false, true).appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false).appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? \"%,\" : \"%\" + str, false);\n\t                                    } else {\n\t                                        pt.appendXtra(hasAlpha ? \"rgba(\" : \"rgb(\", bv[0], ev[0] - bv[0], \",\", true, true).appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true).appendXtra(\"\", bv[2], ev[2] - bv[2], hasAlpha ? \",\" : str, true);\n\t                                    }\n\t                                    if (hasAlpha) {\n\t                                        bv = bv.length < 4 ? 1 : bv[3];\n\t                                        pt.appendXtra(\"\", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);\n\t                                    }\n\t                                }\n\t                                _colorExp.lastIndex = 0;\n\t                            } else {\n\t                                bnums = bv.match(_numExp);\n\t                                if (!bnums) {\n\t                                    pt[\"xs\" + pt.l] += pt.l || pt[\"xs\" + pt.l] ? \" \" + ev : ev;\n\t                                } else {\n\t                                    enums = ev.match(_relNumExp);\n\t                                    if (!enums || enums.length !== bnums.length) {\n\t                                        return pt;\n\t                                    }\n\t                                    ni = 0;\n\t                                    for (xi = 0; xi < bnums.length; xi++) {\n\t                                        cv = bnums[xi];\n\t                                        temp = bv.indexOf(cv, ni);\n\t                                        pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", autoRound && bv.substr(temp + cv.length, 2) === \"px\", xi === 0);\n\t                                        ni = temp + cv.length;\n\t                                    }\n\t                                    pt[\"xs\" + pt.l] += bv.substr(ni);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (e.indexOf(\"=\") !== -1) if (pt.data) {\n\t                            str = pt.xs0 + pt.data.s;\n\t                            for (i = 1; i < pt.l; i++) {\n\t                                str += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n\t                            }\n\t                            pt.e = str + pt[\"xs\" + i];\n\t                        }\n\t                        if (!pt.l) {\n\t                            pt.type = -1;\n\t                            pt.xs0 = pt.e;\n\t                        }\n\t                        return pt.xfirst || pt;\n\t                    }, i = 9;\n\t                    p = CSSPropTween.prototype;\n\t                    p.l = p.pr = 0;\n\t                    while (--i > 0) {\n\t                        p[\"xn\" + i] = 0;\n\t                        p[\"xs\" + i] = \"\";\n\t                    }\n\t                    p.xs0 = \"\";\n\t                    p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n\t                    p.appendXtra = function(pfx, s, c, sfx, r, pad) {\n\t                        var pt = this, l = pt.l;\n\t                        pt[\"xs\" + l] += pad && (l || pt[\"xs\" + l]) ? \" \" + pfx : pfx || \"\";\n\t                        if (!c) if (l !== 0 && !pt.plugin) {\n\t                            pt[\"xs\" + l] += s + (sfx || \"\");\n\t                            return pt;\n\t                        }\n\t                        pt.l++;\n\t                        pt.type = pt.setRatio ? 2 : 1;\n\t                        pt[\"xs\" + pt.l] = sfx || \"\";\n\t                        if (l > 0) {\n\t                            pt.data[\"xn\" + l] = s + c;\n\t                            pt.rxp[\"xn\" + l] = r;\n\t                            pt[\"xn\" + l] = s;\n\t                            if (!pt.plugin) {\n\t                                pt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n\t                                pt.xfirst.xs0 = 0;\n\t                            }\n\t                            return pt;\n\t                        }\n\t                        pt.data = {\n\t                            s: s + c\n\t                        };\n\t                        pt.rxp = {};\n\t                        pt.s = s;\n\t                        pt.c = c;\n\t                        pt.r = r;\n\t                        return pt;\n\t                    };\n\t                    var SpecialProp = function(p, options) {\n\t                        options = options || {};\n\t                        this.p = options.prefix ? _checkPropPrefix(p) || p : p;\n\t                        _specialProps[p] = _specialProps[this.p] = this;\n\t                        this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n\t                        if (options.parser) {\n\t                            this.parse = options.parser;\n\t                        }\n\t                        this.clrs = options.color;\n\t                        this.multi = options.multi;\n\t                        this.keyword = options.keyword;\n\t                        this.dflt = options.defaultValue;\n\t                        this.pr = options.priority || 0;\n\t                    }, _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n\t                        if (typeof options !== \"object\") {\n\t                            options = {\n\t                                parser: defaults\n\t                            };\n\t                        }\n\t                        var a = p.split(\",\"), d = options.defaultValue, i, temp;\n\t                        defaults = defaults || [ d ];\n\t                        for (i = 0; i < a.length; i++) {\n\t                            options.prefix = i === 0 && options.prefix;\n\t                            options.defaultValue = defaults[i] || d;\n\t                            temp = new SpecialProp(a[i], options);\n\t                        }\n\t                    }, _registerPluginProp = function(p) {\n\t                        if (!_specialProps[p]) {\n\t                            var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n\t                            _registerComplexSpecialProp(p, {\n\t                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                    var pluginClass = _globals.com.greensock.plugins[pluginName];\n\t                                    if (!pluginClass) {\n\t                                        _log(\"Error: \" + pluginName + \" js file not loaded.\");\n\t                                        return pt;\n\t                                    }\n\t                                    pluginClass._cssRegister();\n\t                                    return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n\t                                }\n\t                            });\n\t                        }\n\t                    };\n\t                    p = SpecialProp.prototype;\n\t                    p.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n\t                        var kwd = this.keyword, i, ba, ea, l, bi, ei;\n\t                        if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n\t                            ba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                            ea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                        } else if (kwd) {\n\t                            ba = [ b ];\n\t                            ea = [ e ];\n\t                        }\n\t                        if (ea) {\n\t                            l = ea.length > ba.length ? ea.length : ba.length;\n\t                            for (i = 0; i < l; i++) {\n\t                                b = ba[i] = ba[i] || this.dflt;\n\t                                e = ea[i] = ea[i] || this.dflt;\n\t                                if (kwd) {\n\t                                    bi = b.indexOf(kwd);\n\t                                    ei = e.indexOf(kwd);\n\t                                    if (bi !== ei) {\n\t                                        if (ei === -1) {\n\t                                            ba[i] = ba[i].split(kwd).join(\"\");\n\t                                        } else if (bi === -1) {\n\t                                            ba[i] += \" \" + kwd;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                            b = ba.join(\", \");\n\t                            e = ea.join(\", \");\n\t                        }\n\t                        return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n\t                    };\n\t                    p.parse = function(t, e, p, cssp, pt, plugin, vars) {\n\t                        return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n\t                    };\n\t                    CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n\t                        _registerComplexSpecialProp(name, {\n\t                            parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n\t                                rv.plugin = plugin;\n\t                                rv.setRatio = onInitTween(t, e, cssp._tween, p);\n\t                                return rv;\n\t                            },\n\t                            priority: priority\n\t                        });\n\t                    };\n\t                    CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox;\n\t                    var _transformProps = \"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"), _transformProp = _checkPropPrefix(\"transform\"), _transformPropCSS = _prefixCSS + \"transform\", _transformOriginProp = _checkPropPrefix(\"transformOrigin\"), _supports3D = _checkPropPrefix(\"perspective\") !== null, Transform = _internals.Transform = function() {\n\t                        this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n\t                        this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || \"auto\";\n\t                    }, _SVGElement = window.SVGElement, _useSVGTransformAttr, _createSVG = function(type, container, attributes) {\n\t                        var element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type), reg = /([a-z])([A-Z])/g, p;\n\t                        for (p in attributes) {\n\t                            element.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t                        }\n\t                        container.appendChild(element);\n\t                        return element;\n\t                    }, _docElement = _doc.documentElement, _forceSVGTransformAttr = function() {\n\t                        var force = _ieVers || /Android/i.test(_agent) && !window.chrome, svg, rect, width;\n\t                        if (_doc.createElementNS && !force) {\n\t                            svg = _createSVG(\"svg\", _docElement);\n\t                            rect = _createSVG(\"rect\", svg, {\n\t                                width: 100,\n\t                                height: 50,\n\t                                x: 100\n\t                            });\n\t                            width = rect.getBoundingClientRect().width;\n\t                            rect.style[_transformOriginProp] = \"50% 50%\";\n\t                            rect.style[_transformProp] = \"scaleX(0.5)\";\n\t                            force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D);\n\t                            _docElement.removeChild(svg);\n\t                        }\n\t                        return force;\n\t                    }(), _parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n\t                        var tm = e._gsTransform, m = _getMatrix(e, true), v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n\t                        if (tm) {\n\t                            xOriginOld = tm.xOrigin;\n\t                            yOriginOld = tm.yOrigin;\n\t                        }\n\t                        if (!absolute || (v = absolute.split(\" \")).length < 2) {\n\t                            b = e.getBBox();\n\t                            local = _parsePosition(local).split(\" \");\n\t                            v = [ (local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y ];\n\t                        }\n\t                        decoratee.xOrigin = xOrigin = parseFloat(v[0]);\n\t                        decoratee.yOrigin = yOrigin = parseFloat(v[1]);\n\t                        if (absolute && m !== _identity2DMatrix) {\n\t                            a = m[0];\n\t                            b = m[1];\n\t                            c = m[2];\n\t                            d = m[3];\n\t                            tx = m[4];\n\t                            ty = m[5];\n\t                            determinant = a * d - b * c;\n\t                            x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n\t                            y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n\t                            xOrigin = decoratee.xOrigin = v[0] = x;\n\t                            yOrigin = decoratee.yOrigin = v[1] = y;\n\t                        }\n\t                        if (tm) {\n\t                            if (skipRecord) {\n\t                                decoratee.xOffset = tm.xOffset;\n\t                                decoratee.yOffset = tm.yOffset;\n\t                                tm = decoratee;\n\t                            }\n\t                            if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {\n\t                                x = xOrigin - xOriginOld;\n\t                                y = yOrigin - yOriginOld;\n\t                                tm.xOffset += x * m[0] + y * m[2] - x;\n\t                                tm.yOffset += x * m[1] + y * m[3] - y;\n\t                            } else {\n\t                                tm.xOffset = tm.yOffset = 0;\n\t                            }\n\t                        }\n\t                        if (!skipRecord) {\n\t                            e.setAttribute(\"data-svg-origin\", v.join(\" \"));\n\t                        }\n\t                    }, _canGetBBox = function(e) {\n\t                        try {\n\t                            return e.getBBox();\n\t                        } catch (e) {}\n\t                    }, _isSVG = function(e) {\n\t                        return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));\n\t                    }, _identity2DMatrix = [ 1, 0, 0, 1, 0, 0 ], _getMatrix = function(e, force2D) {\n\t                        var tm = e._gsTransform || new Transform(), rnd = 1e5, style = e.style, isDefault, s, m, n, dec, none;\n\t                        if (_transformProp) {\n\t                            s = _getStyle(e, _transformPropCSS, null, true);\n\t                        } else if (e.currentStyle) {\n\t                            s = e.currentStyle.filter.match(_ieGetMatrixExp);\n\t                            s = s && s.length === 4 ? [ s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0 ].join(\",\") : \"\";\n\t                        }\n\t                        isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n\t                        if (isDefault && _transformProp && ((none = _getComputedStyle(e).display === \"none\") || !e.parentNode)) {\n\t                            if (none) {\n\t                                n = style.display;\n\t                                style.display = \"block\";\n\t                            }\n\t                            if (!e.parentNode) {\n\t                                dec = 1;\n\t                                _docElement.appendChild(e);\n\t                            }\n\t                            s = _getStyle(e, _transformPropCSS, null, true);\n\t                            isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n\t                            if (n) {\n\t                                style.display = n;\n\t                            } else if (none) {\n\t                                _removeProp(style, \"display\");\n\t                            }\n\t                            if (dec) {\n\t                                _docElement.removeChild(e);\n\t                            }\n\t                        }\n\t                        if (tm.svg || e.getBBox && _isSVG(e)) {\n\t                            if (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) {\n\t                                s = style[_transformProp];\n\t                                isDefault = 0;\n\t                            }\n\t                            m = e.getAttribute(\"transform\");\n\t                            if (isDefault && m) {\n\t                                if (m.indexOf(\"matrix\") !== -1) {\n\t                                    s = m;\n\t                                    isDefault = 0;\n\t                                } else if (m.indexOf(\"translate\") !== -1) {\n\t                                    s = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n\t                                    isDefault = 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (isDefault) {\n\t                            return _identity2DMatrix;\n\t                        }\n\t                        m = (s || \"\").match(_numExp) || [];\n\t                        i = m.length;\n\t                        while (--i > -1) {\n\t                            n = Number(m[i]);\n\t                            m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -.5 : .5) | 0) / rnd + n : n;\n\t                        }\n\t                        return force2D && m.length > 6 ? [ m[0], m[1], m[4], m[5], m[12], m[13] ] : m;\n\t                    }, _getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n\t                        if (t._gsTransform && rec && !parse) {\n\t                            return t._gsTransform;\n\t                        }\n\t                        var tm = rec ? t._gsTransform || new Transform() : new Transform(), invX = tm.scaleX < 0, min = 2e-5, rnd = 1e5, zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin || 0 : 0, defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0, m, i, scaleX, scaleY, rotation, skewX;\n\t                        tm.svg = !!(t.getBBox && _isSVG(t));\n\t                        if (tm.svg) {\n\t                            _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n\t                            _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n\t                        }\n\t                        m = _getMatrix(t);\n\t                        if (m !== _identity2DMatrix) {\n\t                            if (m.length === 16) {\n\t                                var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3], a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7], a13 = m[8], a23 = m[9], a33 = m[10], a14 = m[12], a24 = m[13], a34 = m[14], a43 = m[11], angle = Math.atan2(a32, a33), t1, t2, t3, t4, cos, sin;\n\t                                if (tm.zOrigin) {\n\t                                    a34 = -tm.zOrigin;\n\t                                    a14 = a13 * a34 - m[12];\n\t                                    a24 = a23 * a34 - m[13];\n\t                                    a34 = a33 * a34 + tm.zOrigin - m[14];\n\t                                }\n\t                                tm.rotationX = angle * _RAD2DEG;\n\t                                if (angle) {\n\t                                    cos = Math.cos(-angle);\n\t                                    sin = Math.sin(-angle);\n\t                                    t1 = a12 * cos + a13 * sin;\n\t                                    t2 = a22 * cos + a23 * sin;\n\t                                    t3 = a32 * cos + a33 * sin;\n\t                                    a13 = a12 * -sin + a13 * cos;\n\t                                    a23 = a22 * -sin + a23 * cos;\n\t                                    a33 = a32 * -sin + a33 * cos;\n\t                                    a43 = a42 * -sin + a43 * cos;\n\t                                    a12 = t1;\n\t                                    a22 = t2;\n\t                                    a32 = t3;\n\t                                }\n\t                                angle = Math.atan2(-a31, a33);\n\t                                tm.rotationY = angle * _RAD2DEG;\n\t                                if (angle) {\n\t                                    cos = Math.cos(-angle);\n\t                                    sin = Math.sin(-angle);\n\t                                    t1 = a11 * cos - a13 * sin;\n\t                                    t2 = a21 * cos - a23 * sin;\n\t                                    t3 = a31 * cos - a33 * sin;\n\t                                    a23 = a21 * sin + a23 * cos;\n\t                                    a33 = a31 * sin + a33 * cos;\n\t                                    a43 = a41 * sin + a43 * cos;\n\t                                    a11 = t1;\n\t                                    a21 = t2;\n\t                                    a31 = t3;\n\t                                }\n\t                                angle = Math.atan2(a21, a11);\n\t                                tm.rotation = angle * _RAD2DEG;\n\t                                if (angle) {\n\t                                    cos = Math.cos(-angle);\n\t                                    sin = Math.sin(-angle);\n\t                                    a11 = a11 * cos + a12 * sin;\n\t                                    t2 = a21 * cos + a22 * sin;\n\t                                    a22 = a21 * -sin + a22 * cos;\n\t                                    a32 = a31 * -sin + a32 * cos;\n\t                                    a21 = t2;\n\t                                }\n\t                                if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {\n\t                                    tm.rotationX = tm.rotation = 0;\n\t                                    tm.rotationY = 180 - tm.rotationY;\n\t                                }\n\t                                tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21) * rnd + .5 | 0) / rnd;\n\t                                tm.scaleY = (Math.sqrt(a22 * a22 + a23 * a23) * rnd + .5 | 0) / rnd;\n\t                                tm.scaleZ = (Math.sqrt(a32 * a32 + a33 * a33) * rnd + .5 | 0) / rnd;\n\t                                if (tm.rotationX || tm.rotationY) {\n\t                                    tm.skewX = 0;\n\t                                } else {\n\t                                    tm.skewX = a12 || a22 ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n\t                                    if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n\t                                        if (invX) {\n\t                                            tm.scaleX *= -1;\n\t                                            tm.skewX += tm.rotation <= 0 ? 180 : -180;\n\t                                            tm.rotation += tm.rotation <= 0 ? 180 : -180;\n\t                                        } else {\n\t                                            tm.scaleY *= -1;\n\t                                            tm.skewX += tm.skewX <= 0 ? 180 : -180;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n\t                                tm.x = a14;\n\t                                tm.y = a24;\n\t                                tm.z = a34;\n\t                                if (tm.svg) {\n\t                                    tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n\t                                    tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n\t                                }\n\t                            } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {\n\t                                var k = m.length >= 6, a = k ? m[0] : 1, b = m[1] || 0, c = m[2] || 0, d = k ? m[3] : 1;\n\t                                tm.x = m[4] || 0;\n\t                                tm.y = m[5] || 0;\n\t                                scaleX = Math.sqrt(a * a + b * b);\n\t                                scaleY = Math.sqrt(d * d + c * c);\n\t                                rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0;\n\t                                skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n\t                                if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n\t                                    if (invX) {\n\t                                        scaleX *= -1;\n\t                                        skewX += rotation <= 0 ? 180 : -180;\n\t                                        rotation += rotation <= 0 ? 180 : -180;\n\t                                    } else {\n\t                                        scaleY *= -1;\n\t                                        skewX += skewX <= 0 ? 180 : -180;\n\t                                    }\n\t                                }\n\t                                tm.scaleX = scaleX;\n\t                                tm.scaleY = scaleY;\n\t                                tm.rotation = rotation;\n\t                                tm.skewX = skewX;\n\t                                if (_supports3D) {\n\t                                    tm.rotationX = tm.rotationY = tm.z = 0;\n\t                                    tm.perspective = defaultTransformPerspective;\n\t                                    tm.scaleZ = 1;\n\t                                }\n\t                                if (tm.svg) {\n\t                                    tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n\t                                    tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n\t                                }\n\t                            }\n\t                            tm.zOrigin = zOrigin;\n\t                            for (i in tm) {\n\t                                if (tm[i] < min) if (tm[i] > -min) {\n\t                                    tm[i] = 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (rec) {\n\t                            t._gsTransform = tm;\n\t                            if (tm.svg) {\n\t                                if (_useSVGTransformAttr && t.style[_transformProp]) {\n\t                                    TweenLite.delayedCall(.001, function() {\n\t                                        _removeProp(t.style, _transformProp);\n\t                                    });\n\t                                } else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n\t                                    TweenLite.delayedCall(.001, function() {\n\t                                        t.removeAttribute(\"transform\");\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        return tm;\n\t                    }, _setIETransformRatio = function(v) {\n\t                        var t = this.data, ang = -t.rotation * _DEG2RAD, skew = ang + t.skewX * _DEG2RAD, rnd = 1e5, a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd, b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd, c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd, d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd, style = this.t.style, cs = this.t.currentStyle, filters, val;\n\t                        if (!cs) {\n\t                            return;\n\t                        }\n\t                        val = b;\n\t                        b = -c;\n\t                        c = -val;\n\t                        filters = cs.filter;\n\t                        style.filter = \"\";\n\t                        var w = this.t.offsetWidth, h = this.t.offsetHeight, clip = cs.position !== \"absolute\", m = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d, ox = t.x + w * t.xPercent / 100, oy = t.y + h * t.yPercent / 100, dx, dy;\n\t                        if (t.ox != null) {\n\t                            dx = (t.oxp ? w * t.ox * .01 : t.ox) - w / 2;\n\t                            dy = (t.oyp ? h * t.oy * .01 : t.oy) - h / 2;\n\t                            ox += dx - (dx * a + dy * b);\n\t                            oy += dy - (dx * c + dy * d);\n\t                        }\n\t                        if (!clip) {\n\t                            m += \", sizingMethod='auto expand')\";\n\t                        } else {\n\t                            dx = w / 2;\n\t                            dy = h / 2;\n\t                            m += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n\t                        }\n\t                        if (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n\t                            style.filter = filters.replace(_ieSetMatrixExp, m);\n\t                        } else {\n\t                            style.filter = m + \" \" + filters;\n\t                        }\n\t                        if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n\t                            style.removeAttribute(\"filter\");\n\t                        }\n\t                        if (!clip) {\n\t                            var mult = _ieVers < 8 ? 1 : -1, marg, prop, dif;\n\t                            dx = t.ieOffsetX || 0;\n\t                            dy = t.ieOffsetY || 0;\n\t                            t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n\t                            t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n\t                            for (i = 0; i < 4; i++) {\n\t                                prop = _margins[i];\n\t                                marg = cs[prop];\n\t                                val = marg.indexOf(\"px\") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n\t                                if (val !== t[prop]) {\n\t                                    dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY;\n\t                                } else {\n\t                                    dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n\t                                }\n\t                                style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + \"px\";\n\t                            }\n\t                        }\n\t                    }, _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n\t                        var t = this.data, style = this.t.style, angle = t.rotation, rotationX = t.rotationX, rotationY = t.rotationY, sx = t.scaleX, sy = t.scaleY, sz = t.scaleZ, x = t.x, y = t.y, z = t.z, isSVG = t.svg, perspective = t.perspective, force3D = t.force3D, a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43, zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;\n\t                        if (((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {\n\t                            if (angle || t.skewX || isSVG) {\n\t                                angle *= _DEG2RAD;\n\t                                skew = t.skewX * _DEG2RAD;\n\t                                rnd = 1e5;\n\t                                a11 = Math.cos(angle) * sx;\n\t                                a21 = Math.sin(angle) * sx;\n\t                                a12 = Math.sin(angle - skew) * -sy;\n\t                                a22 = Math.cos(angle - skew) * sy;\n\t                                if (skew && t.skewType === \"simple\") {\n\t                                    t1 = Math.tan(skew);\n\t                                    t1 = Math.sqrt(1 + t1 * t1);\n\t                                    a12 *= t1;\n\t                                    a22 *= t1;\n\t                                    if (t.skewY) {\n\t                                        a11 *= t1;\n\t                                        a21 *= t1;\n\t                                    }\n\t                                }\n\t                                if (isSVG) {\n\t                                    x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t                                    y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t                                    if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {\n\t                                        min = this.t.getBBox();\n\t                                        x += t.xPercent * .01 * min.width;\n\t                                        y += t.yPercent * .01 * min.height;\n\t                                    }\n\t                                    min = 1e-6;\n\t                                    if (x < min) if (x > -min) {\n\t                                        x = 0;\n\t                                    }\n\t                                    if (y < min) if (y > -min) {\n\t                                        y = 0;\n\t                                    }\n\t                                }\n\t                                transform = (a11 * rnd | 0) / rnd + \",\" + (a21 * rnd | 0) / rnd + \",\" + (a12 * rnd | 0) / rnd + \",\" + (a22 * rnd | 0) / rnd + \",\" + x + \",\" + y + \")\";\n\t                                if (isSVG && _useSVGTransformAttr) {\n\t                                    this.t.setAttribute(\"transform\", \"matrix(\" + transform);\n\t                                } else {\n\t                                    style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n\t                                }\n\t                            } else {\n\t                                style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n\t                            }\n\t                            return;\n\t                        }\n\t                        if (_isFirefox) {\n\t                            min = 1e-4;\n\t                            if (sx < min && sx > -min) {\n\t                                sx = sz = 2e-5;\n\t                            }\n\t                            if (sy < min && sy > -min) {\n\t                                sy = sz = 2e-5;\n\t                            }\n\t                            if (perspective && !t.z && !t.rotationX && !t.rotationY) {\n\t                                perspective = 0;\n\t                            }\n\t                        }\n\t                        if (angle || t.skewX) {\n\t                            angle *= _DEG2RAD;\n\t                            cos = a11 = Math.cos(angle);\n\t                            sin = a21 = Math.sin(angle);\n\t                            if (t.skewX) {\n\t                                angle -= t.skewX * _DEG2RAD;\n\t                                cos = Math.cos(angle);\n\t                                sin = Math.sin(angle);\n\t                                if (t.skewType === \"simple\") {\n\t                                    t1 = Math.tan(t.skewX * _DEG2RAD);\n\t                                    t1 = Math.sqrt(1 + t1 * t1);\n\t                                    cos *= t1;\n\t                                    sin *= t1;\n\t                                    if (t.skewY) {\n\t                                        a11 *= t1;\n\t                                        a21 *= t1;\n\t                                    }\n\t                                }\n\t                            }\n\t                            a12 = -sin;\n\t                            a22 = cos;\n\t                        } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {\n\t                            style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z + \"px)\" + (sx !== 1 || sy !== 1 ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n\t                            return;\n\t                        } else {\n\t                            a11 = a22 = 1;\n\t                            a12 = a21 = 0;\n\t                        }\n\t                        a33 = 1;\n\t                        a13 = a23 = a31 = a32 = a41 = a42 = 0;\n\t                        a43 = perspective ? -1 / perspective : 0;\n\t                        zOrigin = t.zOrigin;\n\t                        min = 1e-6;\n\t                        comma = \",\";\n\t                        zero = \"0\";\n\t                        angle = rotationY * _DEG2RAD;\n\t                        if (angle) {\n\t                            cos = Math.cos(angle);\n\t                            sin = Math.sin(angle);\n\t                            a31 = -sin;\n\t                            a41 = a43 * -sin;\n\t                            a13 = a11 * sin;\n\t                            a23 = a21 * sin;\n\t                            a33 = cos;\n\t                            a43 *= cos;\n\t                            a11 *= cos;\n\t                            a21 *= cos;\n\t                        }\n\t                        angle = rotationX * _DEG2RAD;\n\t                        if (angle) {\n\t                            cos = Math.cos(angle);\n\t                            sin = Math.sin(angle);\n\t                            t1 = a12 * cos + a13 * sin;\n\t                            t2 = a22 * cos + a23 * sin;\n\t                            a32 = a33 * sin;\n\t                            a42 = a43 * sin;\n\t                            a13 = a12 * -sin + a13 * cos;\n\t                            a23 = a22 * -sin + a23 * cos;\n\t                            a33 = a33 * cos;\n\t                            a43 = a43 * cos;\n\t                            a12 = t1;\n\t                            a22 = t2;\n\t                        }\n\t                        if (sz !== 1) {\n\t                            a13 *= sz;\n\t                            a23 *= sz;\n\t                            a33 *= sz;\n\t                            a43 *= sz;\n\t                        }\n\t                        if (sy !== 1) {\n\t                            a12 *= sy;\n\t                            a22 *= sy;\n\t                            a32 *= sy;\n\t                            a42 *= sy;\n\t                        }\n\t                        if (sx !== 1) {\n\t                            a11 *= sx;\n\t                            a21 *= sx;\n\t                            a31 *= sx;\n\t                            a41 *= sx;\n\t                        }\n\t                        if (zOrigin || isSVG) {\n\t                            if (zOrigin) {\n\t                                x += a13 * -zOrigin;\n\t                                y += a23 * -zOrigin;\n\t                                z += a33 * -zOrigin + zOrigin;\n\t                            }\n\t                            if (isSVG) {\n\t                                x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t                                y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t                            }\n\t                            if (x < min && x > -min) {\n\t                                x = zero;\n\t                            }\n\t                            if (y < min && y > -min) {\n\t                                y = zero;\n\t                            }\n\t                            if (z < min && z > -min) {\n\t                                z = 0;\n\t                            }\n\t                        }\n\t                        transform = t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\";\n\t                        transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);\n\t                        transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);\n\t                        if (rotationX || rotationY || sz !== 1) {\n\t                            transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);\n\t                            transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;\n\t                        } else {\n\t                            transform += \",0,0,0,0,1,0,\";\n\t                        }\n\t                        transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + \")\";\n\t                        style[_transformProp] = transform;\n\t                    };\n\t                    p = Transform.prototype;\n\t                    p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n\t                    p.scaleX = p.scaleY = p.scaleZ = 1;\n\t                    _registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {\n\t                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                            if (cssp._lastParsedTransform === vars) {\n\t                                return pt;\n\t                            }\n\t                            cssp._lastParsedTransform = vars;\n\t                            var originalGSTransform = t._gsTransform, style = t.style, min = 1e-6, i = _transformProps.length, v = vars, endRotations = {}, transformOriginString = \"transformOrigin\", m1 = _getTransform(t, _cs, true, vars.parseTransform), m2, copy, orig, has3D, hasChange, dr, x, y, matrix;\n\t                            cssp._transform = m1;\n\t                            if (typeof v.transform === \"string\" && _transformProp) {\n\t                                copy = _tempDiv.style;\n\t                                copy[_transformProp] = v.transform;\n\t                                copy.display = \"block\";\n\t                                copy.position = \"absolute\";\n\t                                _doc.body.appendChild(_tempDiv);\n\t                                m2 = _getTransform(_tempDiv, null, false);\n\t                                if (m1.svg) {\n\t                                    x = m1.xOrigin;\n\t                                    y = m1.yOrigin;\n\t                                    m2.x -= m1.xOffset;\n\t                                    m2.y -= m1.yOffset;\n\t                                    if (v.transformOrigin || v.svgOrigin) {\n\t                                        orig = {};\n\t                                        _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n\t                                        x = orig.xOrigin;\n\t                                        y = orig.yOrigin;\n\t                                        m2.x -= orig.xOffset - m1.xOffset;\n\t                                        m2.y -= orig.yOffset - m1.yOffset;\n\t                                    }\n\t                                    if (x || y) {\n\t                                        matrix = _getMatrix(_tempDiv, true);\n\t                                        m2.x -= x - (x * matrix[0] + y * matrix[2]);\n\t                                        m2.y -= y - (x * matrix[1] + y * matrix[3]);\n\t                                    }\n\t                                }\n\t                                _doc.body.removeChild(_tempDiv);\n\t                                if (!m2.perspective) {\n\t                                    m2.perspective = m1.perspective;\n\t                                }\n\t                                if (v.xPercent != null) {\n\t                                    m2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n\t                                }\n\t                                if (v.yPercent != null) {\n\t                                    m2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n\t                                }\n\t                            } else if (typeof v === \"object\") {\n\t                                m2 = {\n\t                                    scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),\n\t                                    scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),\n\t                                    scaleZ: _parseVal(v.scaleZ, m1.scaleZ),\n\t                                    x: _parseVal(v.x, m1.x),\n\t                                    y: _parseVal(v.y, m1.y),\n\t                                    z: _parseVal(v.z, m1.z),\n\t                                    xPercent: _parseVal(v.xPercent, m1.xPercent),\n\t                                    yPercent: _parseVal(v.yPercent, m1.yPercent),\n\t                                    perspective: _parseVal(v.transformPerspective, m1.perspective)\n\t                                };\n\t                                dr = v.directionalRotation;\n\t                                if (dr != null) {\n\t                                    if (typeof dr === \"object\") {\n\t                                        for (copy in dr) {\n\t                                            v[copy] = dr[copy];\n\t                                        }\n\t                                    } else {\n\t                                        v.rotation = dr;\n\t                                    }\n\t                                }\n\t                                if (typeof v.x === \"string\" && v.x.indexOf(\"%\") !== -1) {\n\t                                    m2.x = 0;\n\t                                    m2.xPercent = _parseVal(v.x, m1.xPercent);\n\t                                }\n\t                                if (typeof v.y === \"string\" && v.y.indexOf(\"%\") !== -1) {\n\t                                    m2.y = 0;\n\t                                    m2.yPercent = _parseVal(v.y, m1.yPercent);\n\t                                }\n\t                                m2.rotation = _parseAngle(\"rotation\" in v ? v.rotation : \"shortRotation\" in v ? v.shortRotation + \"_short\" : \"rotationZ\" in v ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, \"rotation\", endRotations);\n\t                                if (_supports3D) {\n\t                                    m2.rotationX = _parseAngle(\"rotationX\" in v ? v.rotationX : \"shortRotationX\" in v ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n\t                                    m2.rotationY = _parseAngle(\"rotationY\" in v ? v.rotationY : \"shortRotationY\" in v ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n\t                                }\n\t                                m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY);\n\t                                if (m2.skewY = _parseAngle(v.skewY, m1.skewY)) {\n\t                                    m2.skewX += m2.skewY;\n\t                                    m2.rotation += m2.skewY;\n\t                                }\n\t                            }\n\t                            if (_supports3D && v.force3D != null) {\n\t                                m1.force3D = v.force3D;\n\t                                hasChange = true;\n\t                            }\n\t                            m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n\t                            has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;\n\t                            if (!has3D && v.scale != null) {\n\t                                m2.scaleZ = 1;\n\t                            }\n\t                            while (--i > -1) {\n\t                                p = _transformProps[i];\n\t                                orig = m2[p] - m1[p];\n\t                                if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n\t                                    hasChange = true;\n\t                                    pt = new CSSPropTween(m1, p, m1[p], orig, pt);\n\t                                    if (p in endRotations) {\n\t                                        pt.e = endRotations[p];\n\t                                    }\n\t                                    pt.xs0 = 0;\n\t                                    pt.plugin = plugin;\n\t                                    cssp._overwriteProps.push(pt.n);\n\t                                }\n\t                            }\n\t                            orig = v.transformOrigin;\n\t                            if (m1.svg && (orig || v.svgOrigin)) {\n\t                                x = m1.xOffset;\n\t                                y = m1.yOffset;\n\t                                _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n\t                                pt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString);\n\t                                pt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n\t                                if (x !== m1.xOffset || y !== m1.yOffset) {\n\t                                    pt = _addNonTweeningNumericPT(m1, \"xOffset\", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);\n\t                                    pt = _addNonTweeningNumericPT(m1, \"yOffset\", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);\n\t                                }\n\t                                orig = _useSVGTransformAttr ? null : \"0px 0px\";\n\t                            }\n\t                            if (orig || _supports3D && has3D && m1.zOrigin) {\n\t                                if (_transformProp) {\n\t                                    hasChange = true;\n\t                                    p = _transformOriginProp;\n\t                                    orig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\";\n\t                                    pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n\t                                    pt.b = style[p];\n\t                                    pt.plugin = plugin;\n\t                                    if (_supports3D) {\n\t                                        copy = m1.zOrigin;\n\t                                        orig = orig.split(\" \");\n\t                                        m1.zOrigin = (orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\") ? parseFloat(orig[2]) : copy) || 0;\n\t                                        pt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\";\n\t                                        pt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n);\n\t                                        pt.b = copy;\n\t                                        pt.xs0 = pt.e = m1.zOrigin;\n\t                                    } else {\n\t                                        pt.xs0 = pt.e = orig;\n\t                                    }\n\t                                } else {\n\t                                    _parsePosition(orig + \"\", m1);\n\t                                }\n\t                            }\n\t                            if (hasChange) {\n\t                                cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2;\n\t                            }\n\t                            return pt;\n\t                        },\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"boxShadow\", {\n\t                        defaultValue: \"0px 0px 0px 0px #999\",\n\t                        prefix: true,\n\t                        color: true,\n\t                        multi: true,\n\t                        keyword: \"inset\"\n\t                    });\n\t                    _registerComplexSpecialProp(\"borderRadius\", {\n\t                        defaultValue: \"0px\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            e = this.format(e);\n\t                            var props = [ \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\" ], style = t.style, ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n\t                            w = parseFloat(t.offsetWidth);\n\t                            h = parseFloat(t.offsetHeight);\n\t                            ea1 = e.split(\" \");\n\t                            for (i = 0; i < props.length; i++) {\n\t                                if (this.p.indexOf(\"border\")) {\n\t                                    props[i] = _checkPropPrefix(props[i]);\n\t                                }\n\t                                bs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n\t                                if (bs.indexOf(\" \") !== -1) {\n\t                                    bs2 = bs.split(\" \");\n\t                                    bs = bs2[0];\n\t                                    bs2 = bs2[1];\n\t                                }\n\t                                es = es2 = ea1[i];\n\t                                bn = parseFloat(bs);\n\t                                bsfx = bs.substr((bn + \"\").length);\n\t                                rel = es.charAt(1) === \"=\";\n\t                                if (rel) {\n\t                                    en = parseInt(es.charAt(0) + \"1\", 10);\n\t                                    es = es.substr(2);\n\t                                    en *= parseFloat(es);\n\t                                    esfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n\t                                } else {\n\t                                    en = parseFloat(es);\n\t                                    esfx = es.substr((en + \"\").length);\n\t                                }\n\t                                if (esfx === \"\") {\n\t                                    esfx = _suffixMap[p] || bsfx;\n\t                                }\n\t                                if (esfx !== bsfx) {\n\t                                    hn = _convertToPixels(t, \"borderLeft\", bn, bsfx);\n\t                                    vn = _convertToPixels(t, \"borderTop\", bn, bsfx);\n\t                                    if (esfx === \"%\") {\n\t                                        bs = hn / w * 100 + \"%\";\n\t                                        bs2 = vn / h * 100 + \"%\";\n\t                                    } else if (esfx === \"em\") {\n\t                                        em = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n\t                                        bs = hn / em + \"em\";\n\t                                        bs2 = vn / em + \"em\";\n\t                                    } else {\n\t                                        bs = hn + \"px\";\n\t                                        bs2 = vn + \"px\";\n\t                                    }\n\t                                    if (rel) {\n\t                                        es = parseFloat(bs) + en + esfx;\n\t                                        es2 = parseFloat(bs2) + en + esfx;\n\t                                    }\n\t                                }\n\t                                pt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n\t                            }\n\t                            return pt;\n\t                        },\n\t                        prefix: true,\n\t                        formatter: _getFormatter(\"0px 0px 0px 0px\", false, true)\n\t                    });\n\t                    _registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {\n\t                        defaultValue: \"0px\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n\t                        },\n\t                        prefix: true,\n\t                        formatter: _getFormatter(\"0px 0px\", false, true)\n\t                    });\n\t                    _registerComplexSpecialProp(\"backgroundPosition\", {\n\t                        defaultValue: \"0 0\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var bp = \"background-position\", cs = _cs || _getComputedStyle(t, null), bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), es = this.format(e), ba, ea, i, pct, overlap, src;\n\t                            if (bs.indexOf(\"%\") !== -1 !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n\t                                src = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n\t                                if (src && src !== \"none\") {\n\t                                    ba = bs.split(\" \");\n\t                                    ea = es.split(\" \");\n\t                                    _tempImg.setAttribute(\"src\", src);\n\t                                    i = 2;\n\t                                    while (--i > -1) {\n\t                                        bs = ba[i];\n\t                                        pct = bs.indexOf(\"%\") !== -1;\n\t                                        if (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n\t                                            overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n\t                                            ba[i] = pct ? parseFloat(bs) / 100 * overlap + \"px\" : parseFloat(bs) / overlap * 100 + \"%\";\n\t                                        }\n\t                                    }\n\t                                    bs = ba.join(\" \");\n\t                                }\n\t                            }\n\t                            return this.parseComplex(t.style, bs, es, pt, plugin);\n\t                        },\n\t                        formatter: _parsePosition\n\t                    });\n\t                    _registerComplexSpecialProp(\"backgroundSize\", {\n\t                        defaultValue: \"0 0\",\n\t                        formatter: _parsePosition\n\t                    });\n\t                    _registerComplexSpecialProp(\"perspective\", {\n\t                        defaultValue: \"0px\",\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"perspectiveOrigin\", {\n\t                        defaultValue: \"50% 50%\",\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"transformStyle\", {\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"backfaceVisibility\", {\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"userSelect\", {\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"margin\", {\n\t                        parser: _getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")\n\t                    });\n\t                    _registerComplexSpecialProp(\"padding\", {\n\t                        parser: _getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")\n\t                    });\n\t                    _registerComplexSpecialProp(\"clip\", {\n\t                        defaultValue: \"rect(0px,0px,0px,0px)\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var b, cs, delim;\n\t                            if (_ieVers < 9) {\n\t                                cs = t.currentStyle;\n\t                                delim = _ieVers < 8 ? \" \" : \",\";\n\t                                b = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n\t                                e = this.format(e).split(\",\").join(delim);\n\t                            } else {\n\t                                b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n\t                                e = this.format(e);\n\t                            }\n\t                            return this.parseComplex(t.style, b, e, pt, plugin);\n\t                        }\n\t                    });\n\t                    _registerComplexSpecialProp(\"textShadow\", {\n\t                        defaultValue: \"0px 0px 0px #999\",\n\t                        color: true,\n\t                        multi: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"autoRound,strictUnits\", {\n\t                        parser: function(t, e, p, cssp, pt) {\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    _registerComplexSpecialProp(\"border\", {\n\t                        defaultValue: \"0px solid #000\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"), end = this.format(e).split(\" \"), esfx = end[0].replace(_suffixExp, \"\");\n\t                            if (esfx !== \"px\") {\n\t                                bw = parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx) + esfx;\n\t                            }\n\t                            return this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n\t                        },\n\t                        color: true,\n\t                        formatter: function(v) {\n\t                            var a = v.split(\" \");\n\t                            return a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [ \"#000\" ])[0];\n\t                        }\n\t                    });\n\t                    _registerComplexSpecialProp(\"borderWidth\", {\n\t                        parser: _getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")\n\t                    });\n\t                    _registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var s = t.style, prop = \"cssFloat\" in s ? \"cssFloat\" : \"styleFloat\";\n\t                            return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n\t                        }\n\t                    });\n\t                    var _setIEOpacityRatio = function(v) {\n\t                        var t = this.t, filters = t.filter || _getStyle(this.data, \"filter\") || \"\", val = this.s + this.c * v | 0, skip;\n\t                        if (val === 100) {\n\t                            if (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n\t                                t.removeAttribute(\"filter\");\n\t                                skip = !_getStyle(this.data, \"filter\");\n\t                            } else {\n\t                                t.filter = filters.replace(_alphaFilterExp, \"\");\n\t                                skip = true;\n\t                            }\n\t                        }\n\t                        if (!skip) {\n\t                            if (this.xn1) {\n\t                                t.filter = filters = filters || \"alpha(opacity=\" + val + \")\";\n\t                            }\n\t                            if (filters.indexOf(\"pacity\") === -1) {\n\t                                if (val !== 0 || !this.xn1) {\n\t                                    t.filter = filters + \" alpha(opacity=\" + val + \")\";\n\t                                }\n\t                            } else {\n\t                                t.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n\t                            }\n\t                        }\n\t                    };\n\t                    _registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {\n\t                        defaultValue: \"1\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")), style = t.style, isAutoAlpha = p === \"autoAlpha\";\n\t                            if (typeof e === \"string\" && e.charAt(1) === \"=\") {\n\t                                e = (e.charAt(0) === \"-\" ? -1 : 1) * parseFloat(e.substr(2)) + b;\n\t                            }\n\t                            if (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) {\n\t                                b = 0;\n\t                            }\n\t                            if (_supportsOpacity) {\n\t                                pt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n\t                            } else {\n\t                                pt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n\t                                pt.xn1 = isAutoAlpha ? 1 : 0;\n\t                                style.zoom = 1;\n\t                                pt.type = 2;\n\t                                pt.b = \"alpha(opacity=\" + pt.s + \")\";\n\t                                pt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n\t                                pt.data = t;\n\t                                pt.plugin = plugin;\n\t                                pt.setRatio = _setIEOpacityRatio;\n\t                            }\n\t                            if (isAutoAlpha) {\n\t                                pt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, b !== 0 ? \"inherit\" : \"hidden\", e === 0 ? \"hidden\" : \"inherit\");\n\t                                pt.xs0 = \"inherit\";\n\t                                cssp._overwriteProps.push(pt.n);\n\t                                cssp._overwriteProps.push(p);\n\t                            }\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    var _removeProp = function(s, p) {\n\t                        if (p) {\n\t                            if (s.removeProperty) {\n\t                                if (p.substr(0, 2) === \"ms\" || p.substr(0, 6) === \"webkit\") {\n\t                                    p = \"-\" + p;\n\t                                }\n\t                                s.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t                            } else {\n\t                                s.removeAttribute(p);\n\t                            }\n\t                        }\n\t                    }, _setClassNameRatio = function(v) {\n\t                        this.t._gsClassPT = this;\n\t                        if (v === 1 || v === 0) {\n\t                            this.t.setAttribute(\"class\", v === 0 ? this.b : this.e);\n\t                            var mpt = this.data, s = this.t.style;\n\t                            while (mpt) {\n\t                                if (!mpt.v) {\n\t                                    _removeProp(s, mpt.p);\n\t                                } else {\n\t                                    s[mpt.p] = mpt.v;\n\t                                }\n\t                                mpt = mpt._next;\n\t                            }\n\t                            if (v === 1 && this.t._gsClassPT === this) {\n\t                                this.t._gsClassPT = null;\n\t                            }\n\t                        } else if (this.t.getAttribute(\"class\") !== this.e) {\n\t                            this.t.setAttribute(\"class\", this.e);\n\t                        }\n\t                    };\n\t                    _registerComplexSpecialProp(\"className\", {\n\t                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                            var b = t.getAttribute(\"class\") || \"\", cssText = t.style.cssText, difData, bs, cnpt, cnptLookup, mpt;\n\t                            pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t                            pt.setRatio = _setClassNameRatio;\n\t                            pt.pr = -11;\n\t                            _hasPriority = true;\n\t                            pt.b = b;\n\t                            bs = _getAllStyles(t, _cs);\n\t                            cnpt = t._gsClassPT;\n\t                            if (cnpt) {\n\t                                cnptLookup = {};\n\t                                mpt = cnpt.data;\n\t                                while (mpt) {\n\t                                    cnptLookup[mpt.p] = 1;\n\t                                    mpt = mpt._next;\n\t                                }\n\t                                cnpt.setRatio(1);\n\t                            }\n\t                            t._gsClassPT = pt;\n\t                            pt.e = e.charAt(1) !== \"=\" ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + (e.charAt(0) === \"+\" ? \" \" + e.substr(2) : \"\");\n\t                            t.setAttribute(\"class\", pt.e);\n\t                            difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n\t                            t.setAttribute(\"class\", b);\n\t                            pt.data = difData.firstMPT;\n\t                            t.style.cssText = cssText;\n\t                            pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin);\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    var _setClearPropsRatio = function(v) {\n\t                        if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") {\n\t                            var s = this.t.style, transformParse = _specialProps.transform.parse, a, p, i, clearTransform, transform;\n\t                            if (this.e === \"all\") {\n\t                                s.cssText = \"\";\n\t                                clearTransform = true;\n\t                            } else {\n\t                                a = this.e.split(\" \").join(\"\").split(\",\");\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    p = a[i];\n\t                                    if (_specialProps[p]) {\n\t                                        if (_specialProps[p].parse === transformParse) {\n\t                                            clearTransform = true;\n\t                                        } else {\n\t                                            p = p === \"transformOrigin\" ? _transformOriginProp : _specialProps[p].p;\n\t                                        }\n\t                                    }\n\t                                    _removeProp(s, p);\n\t                                }\n\t                            }\n\t                            if (clearTransform) {\n\t                                _removeProp(s, _transformProp);\n\t                                transform = this.t._gsTransform;\n\t                                if (transform) {\n\t                                    if (transform.svg) {\n\t                                        this.t.removeAttribute(\"data-svg-origin\");\n\t                                        this.t.removeAttribute(\"transform\");\n\t                                    }\n\t                                    delete this.t._gsTransform;\n\t                                }\n\t                            }\n\t                        }\n\t                    };\n\t                    _registerComplexSpecialProp(\"clearProps\", {\n\t                        parser: function(t, e, p, cssp, pt) {\n\t                            pt = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t                            pt.setRatio = _setClearPropsRatio;\n\t                            pt.e = e;\n\t                            pt.pr = -10;\n\t                            pt.data = cssp._tween;\n\t                            _hasPriority = true;\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    p = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n\t                    i = p.length;\n\t                    while (i--) {\n\t                        _registerPluginProp(p[i]);\n\t                    }\n\t                    p = CSSPlugin.prototype;\n\t                    p._firstPT = p._lastParsedTransform = p._transform = null;\n\t                    p._onInitTween = function(target, vars, tween) {\n\t                        if (!target.nodeType) {\n\t                            return false;\n\t                        }\n\t                        this._target = target;\n\t                        this._tween = tween;\n\t                        this._vars = vars;\n\t                        _autoRound = vars.autoRound;\n\t                        _hasPriority = false;\n\t                        _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n\t                        _cs = _getComputedStyle(target, \"\");\n\t                        _overwriteProps = this._overwriteProps;\n\t                        var style = target.style, v, pt, pt2, first, last, next, zIndex, tpt, threeD;\n\t                        if (_reqSafariFix) if (style.zIndex === \"\") {\n\t                            v = _getStyle(target, \"zIndex\", _cs);\n\t                            if (v === \"auto\" || v === \"\") {\n\t                                this._addLazySet(style, \"zIndex\", 0);\n\t                            }\n\t                        }\n\t                        if (typeof vars === \"string\") {\n\t                            first = style.cssText;\n\t                            v = _getAllStyles(target, _cs);\n\t                            style.cssText = first + \";\" + vars;\n\t                            v = _cssDif(target, v, _getAllStyles(target)).difs;\n\t                            if (!_supportsOpacity && _opacityValExp.test(vars)) {\n\t                                v.opacity = parseFloat(RegExp.$1);\n\t                            }\n\t                            vars = v;\n\t                            style.cssText = first;\n\t                        }\n\t                        if (vars.className) {\n\t                            this._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n\t                        } else {\n\t                            this._firstPT = pt = this.parse(target, vars, null);\n\t                        }\n\t                        if (this._transformType) {\n\t                            threeD = this._transformType === 3;\n\t                            if (!_transformProp) {\n\t                                style.zoom = 1;\n\t                            } else if (_isSafari) {\n\t                                _reqSafariFix = true;\n\t                                if (style.zIndex === \"\") {\n\t                                    zIndex = _getStyle(target, \"zIndex\", _cs);\n\t                                    if (zIndex === \"auto\" || zIndex === \"\") {\n\t                                        this._addLazySet(style, \"zIndex\", 0);\n\t                                    }\n\t                                }\n\t                                if (_isSafariLT6) {\n\t                                    this._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n\t                                }\n\t                            }\n\t                            pt2 = pt;\n\t                            while (pt2 && pt2._next) {\n\t                                pt2 = pt2._next;\n\t                            }\n\t                            tpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n\t                            this._linkCSSP(tpt, null, pt2);\n\t                            tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n\t                            tpt.data = this._transform || _getTransform(target, _cs, true);\n\t                            tpt.tween = tween;\n\t                            tpt.pr = -1;\n\t                            _overwriteProps.pop();\n\t                        }\n\t                        if (_hasPriority) {\n\t                            while (pt) {\n\t                                next = pt._next;\n\t                                pt2 = first;\n\t                                while (pt2 && pt2.pr > pt.pr) {\n\t                                    pt2 = pt2._next;\n\t                                }\n\t                                if (pt._prev = pt2 ? pt2._prev : last) {\n\t                                    pt._prev._next = pt;\n\t                                } else {\n\t                                    first = pt;\n\t                                }\n\t                                if (pt._next = pt2) {\n\t                                    pt2._prev = pt;\n\t                                } else {\n\t                                    last = pt;\n\t                                }\n\t                                pt = next;\n\t                            }\n\t                            this._firstPT = first;\n\t                        }\n\t                        return true;\n\t                    };\n\t                    p.parse = function(target, vars, pt, plugin) {\n\t                        var style = target.style, p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n\t                        for (p in vars) {\n\t                            es = vars[p];\n\t                            sp = _specialProps[p];\n\t                            if (sp) {\n\t                                pt = sp.parse(target, es, p, this, pt, plugin, vars);\n\t                            } else {\n\t                                bs = _getStyle(target, p, _cs) + \"\";\n\t                                isStr = typeof es === \"string\";\n\t                                if (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || isStr && _rgbhslExp.test(es)) {\n\t                                    if (!isStr) {\n\t                                        es = _parseColor(es);\n\t                                        es = (es.length > 3 ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n\t                                    }\n\t                                    pt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n\t                                } else if (isStr && _complexExp.test(es)) {\n\t                                    pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n\t                                } else {\n\t                                    bn = parseFloat(bs);\n\t                                    bsfx = bn || bn === 0 ? bs.substr((bn + \"\").length) : \"\";\n\t                                    if (bs === \"\" || bs === \"auto\") {\n\t                                        if (p === \"width\" || p === \"height\") {\n\t                                            bn = _getDimension(target, p, _cs);\n\t                                            bsfx = \"px\";\n\t                                        } else if (p === \"left\" || p === \"top\") {\n\t                                            bn = _calculateOffset(target, p, _cs);\n\t                                            bsfx = \"px\";\n\t                                        } else {\n\t                                            bn = p !== \"opacity\" ? 0 : 1;\n\t                                            bsfx = \"\";\n\t                                        }\n\t                                    }\n\t                                    rel = isStr && es.charAt(1) === \"=\";\n\t                                    if (rel) {\n\t                                        en = parseInt(es.charAt(0) + \"1\", 10);\n\t                                        es = es.substr(2);\n\t                                        en *= parseFloat(es);\n\t                                        esfx = es.replace(_suffixExp, \"\");\n\t                                    } else {\n\t                                        en = parseFloat(es);\n\t                                        esfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n\t                                    }\n\t                                    if (esfx === \"\") {\n\t                                        esfx = p in _suffixMap ? _suffixMap[p] : bsfx;\n\t                                    }\n\t                                    es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p];\n\t                                    if (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) {\n\t                                        bn = _convertToPixels(target, p, bn, bsfx);\n\t                                        if (esfx === \"%\") {\n\t                                            bn /= _convertToPixels(target, p, 100, \"%\") / 100;\n\t                                            if (vars.strictUnits !== true) {\n\t                                                bs = bn + \"%\";\n\t                                            }\n\t                                        } else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n\t                                            bn /= _convertToPixels(target, p, 1, esfx);\n\t                                        } else if (esfx !== \"px\") {\n\t                                            en = _convertToPixels(target, p, en, esfx);\n\t                                            esfx = \"px\";\n\t                                        }\n\t                                        if (rel) if (en || en === 0) {\n\t                                            es = en + bn + esfx;\n\t                                        }\n\t                                    }\n\t                                    if (rel) {\n\t                                        en += bn;\n\t                                    }\n\t                                    if ((bn || bn === 0) && (en || en === 0)) {\n\t                                        pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === \"px\" || p === \"zIndex\"), 0, bs, es);\n\t                                        pt.xs0 = esfx;\n\t                                    } else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n\t                                        _log(\"invalid \" + p + \" tween value: \" + vars[p]);\n\t                                    } else {\n\t                                        pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n\t                                        pt.xs0 = es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1) ? bs : es;\n\t                                    }\n\t                                }\n\t                            }\n\t                            if (plugin) if (pt && !pt.plugin) {\n\t                                pt.plugin = plugin;\n\t                            }\n\t                        }\n\t                        return pt;\n\t                    };\n\t                    p.setRatio = function(v) {\n\t                        var pt = this._firstPT, min = 1e-6, val, str, i;\n\t                        if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n\t                            while (pt) {\n\t                                if (pt.type !== 2) {\n\t                                    if (pt.r && pt.type !== -1) {\n\t                                        val = Math.round(pt.s + pt.c);\n\t                                        if (!pt.type) {\n\t                                            pt.t[pt.p] = val + pt.xs0;\n\t                                        } else if (pt.type === 1) {\n\t                                            i = pt.l;\n\t                                            str = pt.xs0 + val + pt.xs1;\n\t                                            for (i = 1; i < pt.l; i++) {\n\t                                                str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                            }\n\t                                            pt.t[pt.p] = str;\n\t                                        }\n\t                                    } else {\n\t                                        pt.t[pt.p] = pt.e;\n\t                                    }\n\t                                } else {\n\t                                    pt.setRatio(v);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -1e-6) {\n\t                            while (pt) {\n\t                                val = pt.c * v + pt.s;\n\t                                if (pt.r) {\n\t                                    val = Math.round(val);\n\t                                } else if (val < min) if (val > -min) {\n\t                                    val = 0;\n\t                                }\n\t                                if (!pt.type) {\n\t                                    pt.t[pt.p] = val + pt.xs0;\n\t                                } else if (pt.type === 1) {\n\t                                    i = pt.l;\n\t                                    if (i === 2) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n\t                                    } else if (i === 3) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n\t                                    } else if (i === 4) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n\t                                    } else if (i === 5) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n\t                                    } else {\n\t                                        str = pt.xs0 + val + pt.xs1;\n\t                                        for (i = 1; i < pt.l; i++) {\n\t                                            str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                        }\n\t                                        pt.t[pt.p] = str;\n\t                                    }\n\t                                } else if (pt.type === -1) {\n\t                                    pt.t[pt.p] = pt.xs0;\n\t                                } else if (pt.setRatio) {\n\t                                    pt.setRatio(v);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        } else {\n\t                            while (pt) {\n\t                                if (pt.type !== 2) {\n\t                                    pt.t[pt.p] = pt.b;\n\t                                } else {\n\t                                    pt.setRatio(v);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        }\n\t                    };\n\t                    p._enableTransforms = function(threeD) {\n\t                        this._transform = this._transform || _getTransform(this._target, _cs, true);\n\t                        this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;\n\t                    };\n\t                    var lazySet = function(v) {\n\t                        this.t[this.p] = this.e;\n\t                        this.data._linkCSSP(this, this._next, null, true);\n\t                    };\n\t                    p._addLazySet = function(t, p, v) {\n\t                        var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n\t                        pt.e = v;\n\t                        pt.setRatio = lazySet;\n\t                        pt.data = this;\n\t                    };\n\t                    p._linkCSSP = function(pt, next, prev, remove) {\n\t                        if (pt) {\n\t                            if (next) {\n\t                                next._prev = pt;\n\t                            }\n\t                            if (pt._next) {\n\t                                pt._next._prev = pt._prev;\n\t                            }\n\t                            if (pt._prev) {\n\t                                pt._prev._next = pt._next;\n\t                            } else if (this._firstPT === pt) {\n\t                                this._firstPT = pt._next;\n\t                                remove = true;\n\t                            }\n\t                            if (prev) {\n\t                                prev._next = pt;\n\t                            } else if (!remove && this._firstPT === null) {\n\t                                this._firstPT = pt;\n\t                            }\n\t                            pt._next = next;\n\t                            pt._prev = prev;\n\t                        }\n\t                        return pt;\n\t                    };\n\t                    p._kill = function(lookup) {\n\t                        var copy = lookup, pt, p, xfirst;\n\t                        if (lookup.autoAlpha || lookup.alpha) {\n\t                            copy = {};\n\t                            for (p in lookup) {\n\t                                copy[p] = lookup[p];\n\t                            }\n\t                            copy.opacity = 1;\n\t                            if (copy.autoAlpha) {\n\t                                copy.visibility = 1;\n\t                            }\n\t                        }\n\t                        if (lookup.className && (pt = this._classNamePT)) {\n\t                            xfirst = pt.xfirst;\n\t                            if (xfirst && xfirst._prev) {\n\t                                this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev);\n\t                            } else if (xfirst === this._firstPT) {\n\t                                this._firstPT = pt._next;\n\t                            }\n\t                            if (pt._next) {\n\t                                this._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n\t                            }\n\t                            this._classNamePT = null;\n\t                        }\n\t                        return TweenPlugin.prototype._kill.call(this, copy);\n\t                    };\n\t                    var _getChildStyles = function(e, props, targets) {\n\t                        var children, i, child, type;\n\t                        if (e.slice) {\n\t                            i = e.length;\n\t                            while (--i > -1) {\n\t                                _getChildStyles(e[i], props, targets);\n\t                            }\n\t                            return;\n\t                        }\n\t                        children = e.childNodes;\n\t                        i = children.length;\n\t                        while (--i > -1) {\n\t                            child = children[i];\n\t                            type = child.type;\n\t                            if (child.style) {\n\t                                props.push(_getAllStyles(child));\n\t                                if (targets) {\n\t                                    targets.push(child);\n\t                                }\n\t                            }\n\t                            if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n\t                                _getChildStyles(child, props, targets);\n\t                            }\n\t                        }\n\t                    };\n\t                    CSSPlugin.cascadeTo = function(target, duration, vars) {\n\t                        var tween = TweenLite.to(target, duration, vars), results = [ tween ], b = [], e = [], targets = [], _reservedProps = TweenLite._internals.reservedProps, i, difs, p, from;\n\t                        target = tween._targets || tween.target;\n\t                        _getChildStyles(target, b, targets);\n\t                        tween.render(duration, true, true);\n\t                        _getChildStyles(target, e);\n\t                        tween.render(0, true, true);\n\t                        tween._enabled(true);\n\t                        i = targets.length;\n\t                        while (--i > -1) {\n\t                            difs = _cssDif(targets[i], b[i], e[i]);\n\t                            if (difs.firstMPT) {\n\t                                difs = difs.difs;\n\t                                for (p in vars) {\n\t                                    if (_reservedProps[p]) {\n\t                                        difs[p] = vars[p];\n\t                                    }\n\t                                }\n\t                                from = {};\n\t                                for (p in difs) {\n\t                                    from[p] = b[i][p];\n\t                                }\n\t                                results.push(TweenLite.fromTo(targets[i], duration, from, difs));\n\t                            }\n\t                        }\n\t                        return results;\n\t                    };\n\t                    TweenPlugin.activate([ CSSPlugin ]);\n\t                    return CSSPlugin;\n\t                }, true);\n\t                (function() {\n\t                    var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n\t                        propName: \"roundProps\",\n\t                        version: \"1.5\",\n\t                        priority: -1,\n\t                        API: 2,\n\t                        init: function(target, value, tween) {\n\t                            this._tween = tween;\n\t                            return true;\n\t                        }\n\t                    }), _roundLinkedList = function(node) {\n\t                        while (node) {\n\t                            if (!node.f && !node.blob) {\n\t                                node.r = 1;\n\t                            }\n\t                            node = node._next;\n\t                        }\n\t                    }, p = RoundPropsPlugin.prototype;\n\t                    p._onInitAllProps = function() {\n\t                        var tween = this._tween, rp = tween.vars.roundProps.join ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"), i = rp.length, lookup = {}, rpt = tween._propLookup.roundProps, prop, pt, next;\n\t                        while (--i > -1) {\n\t                            lookup[rp[i]] = 1;\n\t                        }\n\t                        i = rp.length;\n\t                        while (--i > -1) {\n\t                            prop = rp[i];\n\t                            pt = tween._firstPT;\n\t                            while (pt) {\n\t                                next = pt._next;\n\t                                if (pt.pg) {\n\t                                    pt.t._roundProps(lookup, true);\n\t                                } else if (pt.n === prop) {\n\t                                    if (pt.f === 2 && pt.t) {\n\t                                        _roundLinkedList(pt.t._firstPT);\n\t                                    } else {\n\t                                        this._add(pt.t, prop, pt.s, pt.c);\n\t                                        if (next) {\n\t                                            next._prev = pt._prev;\n\t                                        }\n\t                                        if (pt._prev) {\n\t                                            pt._prev._next = next;\n\t                                        } else if (tween._firstPT === pt) {\n\t                                            tween._firstPT = next;\n\t                                        }\n\t                                        pt._next = pt._prev = null;\n\t                                        tween._propLookup[prop] = rpt;\n\t                                    }\n\t                                }\n\t                                pt = next;\n\t                            }\n\t                        }\n\t                        return false;\n\t                    };\n\t                    p._add = function(target, p, s, c) {\n\t                        this._addTween(target, p, s, s + c, p, true);\n\t                        this._overwriteProps.push(p);\n\t                    };\n\t                })();\n\t                (function() {\n\t                    _gsScope._gsDefine.plugin({\n\t                        propName: \"attr\",\n\t                        API: 2,\n\t                        version: \"0.5.0\",\n\t                        init: function(target, value, tween) {\n\t                            var p;\n\t                            if (typeof target.setAttribute !== \"function\") {\n\t                                return false;\n\t                            }\n\t                            for (p in value) {\n\t                                this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", value[p] + \"\", p, false, p);\n\t                                this._overwriteProps.push(p);\n\t                            }\n\t                            return true;\n\t                        }\n\t                    });\n\t                })();\n\t                _gsScope._gsDefine.plugin({\n\t                    propName: \"directionalRotation\",\n\t                    version: \"0.2.1\",\n\t                    API: 2,\n\t                    init: function(target, value, tween) {\n\t                        if (typeof value !== \"object\") {\n\t                            value = {\n\t                                rotation: value\n\t                            };\n\t                        }\n\t                        this.finals = {};\n\t                        var cap = value.useRadians === true ? Math.PI * 2 : 360, min = 1e-6, p, v, start, end, dif, split;\n\t                        for (p in value) {\n\t                            if (p !== \"useRadians\") {\n\t                                split = (value[p] + \"\").split(\"_\");\n\t                                v = split[0];\n\t                                start = parseFloat(typeof target[p] !== \"function\" ? target[p] : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]());\n\t                                end = this.finals[p] = typeof v === \"string\" && v.charAt(1) === \"=\" ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n\t                                dif = end - start;\n\t                                if (split.length) {\n\t                                    v = split.join(\"_\");\n\t                                    if (v.indexOf(\"short\") !== -1) {\n\t                                        dif = dif % cap;\n\t                                        if (dif !== dif % (cap / 2)) {\n\t                                            dif = dif < 0 ? dif + cap : dif - cap;\n\t                                        }\n\t                                    }\n\t                                    if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t                                        dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                    } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t                                        dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                    }\n\t                                }\n\t                                if (dif > min || dif < -min) {\n\t                                    this._addTween(target, p, start, start + dif, p);\n\t                                    this._overwriteProps.push(p);\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    },\n\t                    set: function(ratio) {\n\t                        var pt;\n\t                        if (ratio !== 1) {\n\t                            this._super.setRatio.call(this, ratio);\n\t                        } else {\n\t                            pt = this._firstPT;\n\t                            while (pt) {\n\t                                if (pt.f) {\n\t                                    pt.t[pt.p](this.finals[pt.p]);\n\t                                } else {\n\t                                    pt.t[pt.p] = this.finals[pt.p];\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        }\n\t                    }\n\t                })._autoCSS = true;\n\t                _gsScope._gsDefine(\"easing.Back\", [ \"easing.Ease\" ], function(Ease) {\n\t                    var w = _gsScope.GreenSockGlobals || _gsScope, gs = w.com.greensock, _2PI = Math.PI * 2, _HALF_PI = Math.PI / 2, _class = gs._class, _create = function(n, f) {\n\t                        var C = _class(\"easing.\" + n, function() {}, true), p = C.prototype = new Ease();\n\t                        p.constructor = C;\n\t                        p.getRatio = f;\n\t                        return C;\n\t                    }, _easeReg = Ease.register || function() {}, _wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t                        var C = _class(\"easing.\" + name, {\n\t                            easeOut: new EaseOut(),\n\t                            easeIn: new EaseIn(),\n\t                            easeInOut: new EaseInOut()\n\t                        }, true);\n\t                        _easeReg(C, name);\n\t                        return C;\n\t                    }, EasePoint = function(time, value, next) {\n\t                        this.t = time;\n\t                        this.v = value;\n\t                        if (next) {\n\t                            this.next = next;\n\t                            next.prev = this;\n\t                            this.c = next.v - value;\n\t                            this.gap = next.t - time;\n\t                        }\n\t                    }, _createBack = function(n, f) {\n\t                        var C = _class(\"easing.\" + n, function(overshoot) {\n\t                            this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;\n\t                            this._p2 = this._p1 * 1.525;\n\t                        }, true), p = C.prototype = new Ease();\n\t                        p.constructor = C;\n\t                        p.getRatio = f;\n\t                        p.config = function(overshoot) {\n\t                            return new C(overshoot);\n\t                        };\n\t                        return C;\n\t                    }, Back = _wrap(\"Back\", _createBack(\"BackOut\", function(p) {\n\t                        return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;\n\t                    }), _createBack(\"BackIn\", function(p) {\n\t                        return p * p * ((this._p1 + 1) * p - this._p1);\n\t                    }), _createBack(\"BackInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? .5 * p * p * ((this._p2 + 1) * p - this._p2) : .5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t                    })), SlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t                        power = power || power === 0 ? power : .7;\n\t                        if (linearRatio == null) {\n\t                            linearRatio = .7;\n\t                        } else if (linearRatio > 1) {\n\t                            linearRatio = 1;\n\t                        }\n\t                        this._p = linearRatio !== 1 ? power : 0;\n\t                        this._p1 = (1 - linearRatio) / 2;\n\t                        this._p2 = linearRatio;\n\t                        this._p3 = this._p1 + this._p2;\n\t                        this._calcEnd = yoyoMode === true;\n\t                    }, true), p = SlowMo.prototype = new Ease(), SteppedEase, RoughEase, _createElastic;\n\t                    p.constructor = SlowMo;\n\t                    p.getRatio = function(p) {\n\t                        var r = p + (.5 - p) * this._p;\n\t                        if (p < this._p1) {\n\t                            return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;\n\t                        } else if (p > this._p3) {\n\t                            return this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p;\n\t                        }\n\t                        return this._calcEnd ? 1 : r;\n\t                    };\n\t                    SlowMo.ease = new SlowMo(.7, .7);\n\t                    p.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t                        return new SlowMo(linearRatio, power, yoyoMode);\n\t                    };\n\t                    SteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n\t                        steps = steps || 1;\n\t                        this._p1 = 1 / steps;\n\t                        this._p2 = steps + 1;\n\t                    }, true);\n\t                    p = SteppedEase.prototype = new Ease();\n\t                    p.constructor = SteppedEase;\n\t                    p.getRatio = function(p) {\n\t                        if (p < 0) {\n\t                            p = 0;\n\t                        } else if (p >= 1) {\n\t                            p = .999999999;\n\t                        }\n\t                        return (this._p2 * p >> 0) * this._p1;\n\t                    };\n\t                    p.config = SteppedEase.config = function(steps) {\n\t                        return new SteppedEase(steps);\n\t                    };\n\t                    RoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t                        vars = vars || {};\n\t                        var taper = vars.taper || \"none\", a = [], cnt = 0, points = (vars.points || 20) | 0, i = points, randomize = vars.randomize !== false, clamp = vars.clamp === true, template = vars.template instanceof Ease ? vars.template : null, strength = typeof vars.strength === \"number\" ? vars.strength * .4 : .4, x, y, bump, invX, obj, pnt;\n\t                        while (--i > -1) {\n\t                            x = randomize ? Math.random() : 1 / points * i;\n\t                            y = template ? template.getRatio(x) : x;\n\t                            if (taper === \"none\") {\n\t                                bump = strength;\n\t                            } else if (taper === \"out\") {\n\t                                invX = 1 - x;\n\t                                bump = invX * invX * strength;\n\t                            } else if (taper === \"in\") {\n\t                                bump = x * x * strength;\n\t                            } else if (x < .5) {\n\t                                invX = x * 2;\n\t                                bump = invX * invX * .5 * strength;\n\t                            } else {\n\t                                invX = (1 - x) * 2;\n\t                                bump = invX * invX * .5 * strength;\n\t                            }\n\t                            if (randomize) {\n\t                                y += Math.random() * bump - bump * .5;\n\t                            } else if (i % 2) {\n\t                                y += bump * .5;\n\t                            } else {\n\t                                y -= bump * .5;\n\t                            }\n\t                            if (clamp) {\n\t                                if (y > 1) {\n\t                                    y = 1;\n\t                                } else if (y < 0) {\n\t                                    y = 0;\n\t                                }\n\t                            }\n\t                            a[cnt++] = {\n\t                                x: x,\n\t                                y: y\n\t                            };\n\t                        }\n\t                        a.sort(function(a, b) {\n\t                            return a.x - b.x;\n\t                        });\n\t                        pnt = new EasePoint(1, 1, null);\n\t                        i = points;\n\t                        while (--i > -1) {\n\t                            obj = a[i];\n\t                            pnt = new EasePoint(obj.x, obj.y, pnt);\n\t                        }\n\t                        this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);\n\t                    }, true);\n\t                    p = RoughEase.prototype = new Ease();\n\t                    p.constructor = RoughEase;\n\t                    p.getRatio = function(p) {\n\t                        var pnt = this._prev;\n\t                        if (p > pnt.t) {\n\t                            while (pnt.next && p >= pnt.t) {\n\t                                pnt = pnt.next;\n\t                            }\n\t                            pnt = pnt.prev;\n\t                        } else {\n\t                            while (pnt.prev && p <= pnt.t) {\n\t                                pnt = pnt.prev;\n\t                            }\n\t                        }\n\t                        this._prev = pnt;\n\t                        return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;\n\t                    };\n\t                    p.config = function(vars) {\n\t                        return new RoughEase(vars);\n\t                    };\n\t                    RoughEase.ease = new RoughEase();\n\t                    _wrap(\"Bounce\", _create(\"BounceOut\", function(p) {\n\t                        if (p < 1 / 2.75) {\n\t                            return 7.5625 * p * p;\n\t                        } else if (p < 2 / 2.75) {\n\t                            return 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n\t                        } else if (p < 2.5 / 2.75) {\n\t                            return 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n\t                        }\n\t                        return 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n\t                    }), _create(\"BounceIn\", function(p) {\n\t                        if ((p = 1 - p) < 1 / 2.75) {\n\t                            return 1 - 7.5625 * p * p;\n\t                        } else if (p < 2 / 2.75) {\n\t                            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + .75);\n\t                        } else if (p < 2.5 / 2.75) {\n\t                            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + .9375);\n\t                        }\n\t                        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + .984375);\n\t                    }), _create(\"BounceInOut\", function(p) {\n\t                        var invert = p < .5;\n\t                        if (invert) {\n\t                            p = 1 - p * 2;\n\t                        } else {\n\t                            p = p * 2 - 1;\n\t                        }\n\t                        if (p < 1 / 2.75) {\n\t                            p = 7.5625 * p * p;\n\t                        } else if (p < 2 / 2.75) {\n\t                            p = 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n\t                        } else if (p < 2.5 / 2.75) {\n\t                            p = 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n\t                        } else {\n\t                            p = 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n\t                        }\n\t                        return invert ? (1 - p) * .5 : p * .5 + .5;\n\t                    }));\n\t                    _wrap(\"Circ\", _create(\"CircOut\", function(p) {\n\t                        return Math.sqrt(1 - (p = p - 1) * p);\n\t                    }), _create(\"CircIn\", function(p) {\n\t                        return -(Math.sqrt(1 - p * p) - 1);\n\t                    }), _create(\"CircInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? -.5 * (Math.sqrt(1 - p * p) - 1) : .5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t                    }));\n\t                    _createElastic = function(n, f, def) {\n\t                        var C = _class(\"easing.\" + n, function(amplitude, period) {\n\t                            this._p1 = amplitude >= 1 ? amplitude : 1;\n\t                            this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n\t                            this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t                            this._p2 = _2PI / this._p2;\n\t                        }, true), p = C.prototype = new Ease();\n\t                        p.constructor = C;\n\t                        p.getRatio = f;\n\t                        p.config = function(amplitude, period) {\n\t                            return new C(amplitude, period);\n\t                        };\n\t                        return C;\n\t                    };\n\t                    _wrap(\"Elastic\", _createElastic(\"ElasticOut\", function(p) {\n\t                        return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;\n\t                    }, .3), _createElastic(\"ElasticIn\", function(p) {\n\t                        return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));\n\t                    }, .3), _createElastic(\"ElasticInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * .5 + 1;\n\t                    }, .45));\n\t                    _wrap(\"Expo\", _create(\"ExpoOut\", function(p) {\n\t                        return 1 - Math.pow(2, -10 * p);\n\t                    }), _create(\"ExpoIn\", function(p) {\n\t                        return Math.pow(2, 10 * (p - 1)) - .001;\n\t                    }), _create(\"ExpoInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? .5 * Math.pow(2, 10 * (p - 1)) : .5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t                    }));\n\t                    _wrap(\"Sine\", _create(\"SineOut\", function(p) {\n\t                        return Math.sin(p * _HALF_PI);\n\t                    }), _create(\"SineIn\", function(p) {\n\t                        return -Math.cos(p * _HALF_PI) + 1;\n\t                    }), _create(\"SineInOut\", function(p) {\n\t                        return -.5 * (Math.cos(Math.PI * p) - 1);\n\t                    }));\n\t                    _class(\"easing.EaseLookup\", {\n\t                        find: function(s) {\n\t                            return Ease.map[s];\n\t                        }\n\t                    }, true);\n\t                    _easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t                    _easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t                    _easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\t                    return Back;\n\t                }, true);\n\t            });\n\t            if (_gsScope._gsDefine) {\n\t                _gsScope._gsQueue.pop()();\n\t            }\n\t            (function(window, moduleName) {\n\t                \"use strict\";\n\t                var _exports = {}, _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n\t                if (_globals.TweenLite) {\n\t                    return;\n\t                }\n\t                var _namespace = function(ns) {\n\t                    var a = ns.split(\".\"), p = _globals, i;\n\t                    for (i = 0; i < a.length; i++) {\n\t                        p[a[i]] = p = p[a[i]] || {};\n\t                    }\n\t                    return p;\n\t                }, gs = _namespace(\"com.greensock\"), _tinyNum = 1e-10, _slice = function(a) {\n\t                    var b = [], l = a.length, i;\n\t                    for (i = 0; i !== l; b.push(a[i++])) {}\n\t                    return b;\n\t                }, _emptyFunc = function() {}, _isArray = function() {\n\t                    var toString = Object.prototype.toString, array = toString.call([]);\n\t                    return function(obj) {\n\t                        return obj != null && (obj instanceof Array || typeof obj === \"object\" && !!obj.push && toString.call(obj) === array);\n\t                    };\n\t                }(), a, i, p, _ticker, _tickerActive, _defLookup = {}, Definition = function(ns, dependencies, func, global) {\n\t                    this.sc = _defLookup[ns] ? _defLookup[ns].sc : [];\n\t                    _defLookup[ns] = this;\n\t                    this.gsClass = null;\n\t                    this.func = func;\n\t                    var _classes = [];\n\t                    this.check = function(init) {\n\t                        var i = dependencies.length, missing = i, cur, a, n, cl, hasModule;\n\t                        while (--i > -1) {\n\t                            if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t                                _classes[i] = cur.gsClass;\n\t                                missing--;\n\t                            } else if (init) {\n\t                                cur.sc.push(this);\n\t                            }\n\t                        }\n\t                        if (missing === 0 && func) {\n\t                            a = (\"com.greensock.\" + ns).split(\".\");\n\t                            n = a.pop();\n\t                            cl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\t                            if (global) {\n\t                                _globals[n] = cl;\n\t                                hasModule = typeof module !== \"undefined\" && module.exports;\n\t                                if (!hasModule && \"function\" === \"function\" && __webpack_require__(6)) {\n\t                                    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                                        return cl;\n\t                                    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t                                } else if (hasModule) {\n\t                                    if (ns === moduleName) {\n\t                                        module.exports = _exports[moduleName] = cl;\n\t                                        for (i in _exports) {\n\t                                            cl[i] = _exports[i];\n\t                                        }\n\t                                    } else if (_exports[moduleName]) {\n\t                                        _exports[moduleName][n] = cl;\n\t                                    }\n\t                                }\n\t                            }\n\t                            for (i = 0; i < this.sc.length; i++) {\n\t                                this.sc[i].check();\n\t                            }\n\t                        }\n\t                    };\n\t                    this.check(true);\n\t                }, _gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t                    return new Definition(ns, dependencies, func, global);\n\t                }, _class = gs._class = function(ns, func, global) {\n\t                    func = func || function() {};\n\t                    _gsDefine(ns, [], function() {\n\t                        return func;\n\t                    }, global);\n\t                    return func;\n\t                };\n\t                _gsDefine.globals = _globals;\n\t                var _baseParams = [ 0, 0, 1, 1 ], _blankArray = [], Ease = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t                    this._func = func;\n\t                    this._type = type || 0;\n\t                    this._power = power || 0;\n\t                    this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t                }, true), _easeMap = Ease.map = {}, _easeReg = Ease.register = function(ease, names, types, create) {\n\t                    var na = names.split(\",\"), i = na.length, ta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"), e, name, j, type;\n\t                    while (--i > -1) {\n\t                        name = na[i];\n\t                        e = create ? _class(\"easing.\" + name, null, true) : gs.easing[name] || {};\n\t                        j = ta.length;\n\t                        while (--j > -1) {\n\t                            type = ta[j];\n\t                            _easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t                        }\n\t                    }\n\t                };\n\t                p = Ease.prototype;\n\t                p._calcEnd = false;\n\t                p.getRatio = function(p) {\n\t                    if (this._func) {\n\t                        this._params[0] = p;\n\t                        return this._func.apply(null, this._params);\n\t                    }\n\t                    var t = this._type, pw = this._power, r = t === 1 ? 1 - p : t === 2 ? p : p < .5 ? p * 2 : (1 - p) * 2;\n\t                    if (pw === 1) {\n\t                        r *= r;\n\t                    } else if (pw === 2) {\n\t                        r *= r * r;\n\t                    } else if (pw === 3) {\n\t                        r *= r * r * r;\n\t                    } else if (pw === 4) {\n\t                        r *= r * r * r * r;\n\t                    }\n\t                    return t === 1 ? 1 - r : t === 2 ? r : p < .5 ? r / 2 : 1 - r / 2;\n\t                };\n\t                a = [ \"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\" ];\n\t                i = a.length;\n\t                while (--i > -1) {\n\t                    p = a[i] + \",Power\" + i;\n\t                    _easeReg(new Ease(null, null, 1, i), p, \"easeOut\", true);\n\t                    _easeReg(new Ease(null, null, 2, i), p, \"easeIn\" + (i === 0 ? \",easeNone\" : \"\"));\n\t                    _easeReg(new Ease(null, null, 3, i), p, \"easeInOut\");\n\t                }\n\t                _easeMap.linear = gs.easing.Linear.easeIn;\n\t                _easeMap.swing = gs.easing.Quad.easeInOut;\n\t                var EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t                    this._listeners = {};\n\t                    this._eventTarget = target || this;\n\t                });\n\t                p = EventDispatcher.prototype;\n\t                p.addEventListener = function(type, callback, scope, useParam, priority) {\n\t                    priority = priority || 0;\n\t                    var list = this._listeners[type], index = 0, listener, i;\n\t                    if (this === _ticker && !_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    if (list == null) {\n\t                        this._listeners[type] = list = [];\n\t                    }\n\t                    i = list.length;\n\t                    while (--i > -1) {\n\t                        listener = list[i];\n\t                        if (listener.c === callback && listener.s === scope) {\n\t                            list.splice(i, 1);\n\t                        } else if (index === 0 && listener.pr < priority) {\n\t                            index = i + 1;\n\t                        }\n\t                    }\n\t                    list.splice(index, 0, {\n\t                        c: callback,\n\t                        s: scope,\n\t                        up: useParam,\n\t                        pr: priority\n\t                    });\n\t                };\n\t                p.removeEventListener = function(type, callback) {\n\t                    var list = this._listeners[type], i;\n\t                    if (list) {\n\t                        i = list.length;\n\t                        while (--i > -1) {\n\t                            if (list[i].c === callback) {\n\t                                list.splice(i, 1);\n\t                                return;\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                p.dispatchEvent = function(type) {\n\t                    var list = this._listeners[type], i, t, listener;\n\t                    if (list) {\n\t                        i = list.length;\n\t                        t = this._eventTarget;\n\t                        while (--i > -1) {\n\t                            listener = list[i];\n\t                            if (listener) {\n\t                                if (listener.up) {\n\t                                    listener.c.call(listener.s || t, {\n\t                                        type: type,\n\t                                        target: t\n\t                                    });\n\t                                } else {\n\t                                    listener.c.call(listener.s || t);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                var _reqAnimFrame = window.requestAnimationFrame, _cancelAnimFrame = window.cancelAnimationFrame, _getTime = Date.now || function() {\n\t                    return new Date().getTime();\n\t                }, _lastUpdate = _getTime();\n\t                a = [ \"ms\", \"moz\", \"webkit\", \"o\" ];\n\t                i = a.length;\n\t                while (--i > -1 && !_reqAnimFrame) {\n\t                    _reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t                    _cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t                }\n\t                _class(\"Ticker\", function(fps, useRAF) {\n\t                    var _self = this, _startTime = _getTime(), _useRAF = useRAF !== false && _reqAnimFrame ? \"auto\" : false, _lagThreshold = 500, _adjustedLag = 33, _tickWord = \"tick\", _fps, _req, _id, _gap, _nextTime, _tick = function(manual) {\n\t                        var elapsed = _getTime() - _lastUpdate, overlap, dispatch;\n\t                        if (elapsed > _lagThreshold) {\n\t                            _startTime += elapsed - _adjustedLag;\n\t                        }\n\t                        _lastUpdate += elapsed;\n\t                        _self.time = (_lastUpdate - _startTime) / 1e3;\n\t                        overlap = _self.time - _nextTime;\n\t                        if (!_fps || overlap > 0 || manual === true) {\n\t                            _self.frame++;\n\t                            _nextTime += overlap + (overlap >= _gap ? .004 : _gap - overlap);\n\t                            dispatch = true;\n\t                        }\n\t                        if (manual !== true) {\n\t                            _id = _req(_tick);\n\t                        }\n\t                        if (dispatch) {\n\t                            _self.dispatchEvent(_tickWord);\n\t                        }\n\t                    };\n\t                    EventDispatcher.call(_self);\n\t                    _self.time = _self.frame = 0;\n\t                    _self.tick = function() {\n\t                        _tick(true);\n\t                    };\n\t                    _self.lagSmoothing = function(threshold, adjustedLag) {\n\t                        _lagThreshold = threshold || 1 / _tinyNum;\n\t                        _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t                    };\n\t                    _self.sleep = function() {\n\t                        if (_id == null) {\n\t                            return;\n\t                        }\n\t                        if (!_useRAF || !_cancelAnimFrame) {\n\t                            clearTimeout(_id);\n\t                        } else {\n\t                            _cancelAnimFrame(_id);\n\t                        }\n\t                        _req = _emptyFunc;\n\t                        _id = null;\n\t                        if (_self === _ticker) {\n\t                            _tickerActive = false;\n\t                        }\n\t                    };\n\t                    _self.wake = function(seamless) {\n\t                        if (_id !== null) {\n\t                            _self.sleep();\n\t                        } else if (seamless) {\n\t                            _startTime += -_lastUpdate + (_lastUpdate = _getTime());\n\t                        } else if (_self.frame > 10) {\n\t                            _lastUpdate = _getTime() - _lagThreshold + 5;\n\t                        }\n\t                        _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function(f) {\n\t                            return setTimeout(f, (_nextTime - _self.time) * 1e3 + 1 | 0);\n\t                        } : _reqAnimFrame;\n\t                        if (_self === _ticker) {\n\t                            _tickerActive = true;\n\t                        }\n\t                        _tick(2);\n\t                    };\n\t                    _self.fps = function(value) {\n\t                        if (!arguments.length) {\n\t                            return _fps;\n\t                        }\n\t                        _fps = value;\n\t                        _gap = 1 / (_fps || 60);\n\t                        _nextTime = this.time + _gap;\n\t                        _self.wake();\n\t                    };\n\t                    _self.useRAF = function(value) {\n\t                        if (!arguments.length) {\n\t                            return _useRAF;\n\t                        }\n\t                        _self.sleep();\n\t                        _useRAF = value;\n\t                        _self.fps(_fps);\n\t                    };\n\t                    _self.fps(fps);\n\t                    setTimeout(function() {\n\t                        if (_useRAF === \"auto\" && _self.frame < 5 && document.visibilityState !== \"hidden\") {\n\t                            _self.useRAF(false);\n\t                        }\n\t                    }, 1500);\n\t                });\n\t                p = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t                p.constructor = gs.Ticker;\n\t                var Animation = _class(\"core.Animation\", function(duration, vars) {\n\t                    this.vars = vars = vars || {};\n\t                    this._duration = this._totalDuration = duration || 0;\n\t                    this._delay = Number(vars.delay) || 0;\n\t                    this._timeScale = 1;\n\t                    this._active = vars.immediateRender === true;\n\t                    this.data = vars.data;\n\t                    this._reversed = vars.reversed === true;\n\t                    if (!_rootTimeline) {\n\t                        return;\n\t                    }\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t                    tl.add(this, tl._time);\n\t                    if (this.vars.paused) {\n\t                        this.paused(true);\n\t                    }\n\t                });\n\t                _ticker = Animation.ticker = new gs.Ticker();\n\t                p = Animation.prototype;\n\t                p._dirty = p._gc = p._initted = p._paused = false;\n\t                p._totalTime = p._time = 0;\n\t                p._rawPrevTime = -1;\n\t                p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t                p._paused = false;\n\t                var _checkTimeout = function() {\n\t                    if (_tickerActive && _getTime() - _lastUpdate > 2e3) {\n\t                        _ticker.wake();\n\t                    }\n\t                    setTimeout(_checkTimeout, 2e3);\n\t                };\n\t                _checkTimeout();\n\t                p.play = function(from, suppressEvents) {\n\t                    if (from != null) {\n\t                        this.seek(from, suppressEvents);\n\t                    }\n\t                    return this.reversed(false).paused(false);\n\t                };\n\t                p.pause = function(atTime, suppressEvents) {\n\t                    if (atTime != null) {\n\t                        this.seek(atTime, suppressEvents);\n\t                    }\n\t                    return this.paused(true);\n\t                };\n\t                p.resume = function(from, suppressEvents) {\n\t                    if (from != null) {\n\t                        this.seek(from, suppressEvents);\n\t                    }\n\t                    return this.paused(false);\n\t                };\n\t                p.seek = function(time, suppressEvents) {\n\t                    return this.totalTime(Number(time), suppressEvents !== false);\n\t                };\n\t                p.restart = function(includeDelay, suppressEvents) {\n\t                    return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);\n\t                };\n\t                p.reverse = function(from, suppressEvents) {\n\t                    if (from != null) {\n\t                        this.seek(from || this.totalDuration(), suppressEvents);\n\t                    }\n\t                    return this.reversed(true).paused(false);\n\t                };\n\t                p.render = function(time, suppressEvents, force) {};\n\t                p.invalidate = function() {\n\t                    this._time = this._totalTime = 0;\n\t                    this._initted = this._gc = false;\n\t                    this._rawPrevTime = -1;\n\t                    if (this._gc || !this.timeline) {\n\t                        this._enabled(true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p.isActive = function() {\n\t                    var tl = this._timeline, startTime = this._startTime, rawTime;\n\t                    return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale;\n\t                };\n\t                p._enabled = function(enabled, ignoreTimeline) {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    this._gc = !enabled;\n\t                    this._active = this.isActive();\n\t                    if (ignoreTimeline !== true) {\n\t                        if (enabled && !this.timeline) {\n\t                            this._timeline.add(this, this._startTime - this._delay);\n\t                        } else if (!enabled && this.timeline) {\n\t                            this._timeline._remove(this, true);\n\t                        }\n\t                    }\n\t                    return false;\n\t                };\n\t                p._kill = function(vars, target) {\n\t                    return this._enabled(false, false);\n\t                };\n\t                p.kill = function(vars, target) {\n\t                    this._kill(vars, target);\n\t                    return this;\n\t                };\n\t                p._uncache = function(includeSelf) {\n\t                    var tween = includeSelf ? this : this.timeline;\n\t                    while (tween) {\n\t                        tween._dirty = true;\n\t                        tween = tween.timeline;\n\t                    }\n\t                    return this;\n\t                };\n\t                p._swapSelfInParams = function(params) {\n\t                    var i = params.length, copy = params.concat();\n\t                    while (--i > -1) {\n\t                        if (params[i] === \"{self}\") {\n\t                            copy[i] = this;\n\t                        }\n\t                    }\n\t                    return copy;\n\t                };\n\t                p._callback = function(type) {\n\t                    var v = this.vars;\n\t                    v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n\t                };\n\t                p.eventCallback = function(type, callback, params, scope) {\n\t                    if ((type || \"\").substr(0, 2) === \"on\") {\n\t                        var v = this.vars;\n\t                        if (arguments.length === 1) {\n\t                            return v[type];\n\t                        }\n\t                        if (callback == null) {\n\t                            delete v[type];\n\t                        } else {\n\t                            v[type] = callback;\n\t                            v[type + \"Params\"] = _isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1 ? this._swapSelfInParams(params) : params;\n\t                            v[type + \"Scope\"] = scope;\n\t                        }\n\t                        if (type === \"onUpdate\") {\n\t                            this._onUpdate = callback;\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.delay = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._delay;\n\t                    }\n\t                    if (this._timeline.smoothChildTiming) {\n\t                        this.startTime(this._startTime + value - this._delay);\n\t                    }\n\t                    this._delay = value;\n\t                    return this;\n\t                };\n\t                p.duration = function(value) {\n\t                    if (!arguments.length) {\n\t                        this._dirty = false;\n\t                        return this._duration;\n\t                    }\n\t                    this._duration = this._totalDuration = value;\n\t                    this._uncache(true);\n\t                    if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t                        this.totalTime(this._totalTime * (value / this._duration), true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p.totalDuration = function(value) {\n\t                    this._dirty = false;\n\t                    return !arguments.length ? this._totalDuration : this.duration(value);\n\t                };\n\t                p.time = function(value, suppressEvents) {\n\t                    if (!arguments.length) {\n\t                        return this._time;\n\t                    }\n\t                    if (this._dirty) {\n\t                        this.totalDuration();\n\t                    }\n\t                    return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);\n\t                };\n\t                p.totalTime = function(time, suppressEvents, uncapped) {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    if (!arguments.length) {\n\t                        return this._totalTime;\n\t                    }\n\t                    if (this._timeline) {\n\t                        if (time < 0 && !uncapped) {\n\t                            time += this.totalDuration();\n\t                        }\n\t                        if (this._timeline.smoothChildTiming) {\n\t                            if (this._dirty) {\n\t                                this.totalDuration();\n\t                            }\n\t                            var totalDuration = this._totalDuration, tl = this._timeline;\n\t                            if (time > totalDuration && !uncapped) {\n\t                                time = totalDuration;\n\t                            }\n\t                            this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;\n\t                            if (!tl._dirty) {\n\t                                this._uncache(false);\n\t                            }\n\t                            if (tl._timeline) {\n\t                                while (tl._timeline) {\n\t                                    if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t                                        tl.totalTime(tl._totalTime, true);\n\t                                    }\n\t                                    tl = tl._timeline;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (this._gc) {\n\t                            this._enabled(true, false);\n\t                        }\n\t                        if (this._totalTime !== time || this._duration === 0) {\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            this.render(time, suppressEvents, false);\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.progress = p.totalProgress = function(value, suppressEvents) {\n\t                    var duration = this.duration();\n\t                    return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);\n\t                };\n\t                p.startTime = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._startTime;\n\t                    }\n\t                    if (value !== this._startTime) {\n\t                        this._startTime = value;\n\t                        if (this.timeline) if (this.timeline._sortChildren) {\n\t                            this.timeline.add(this, value - this._delay);\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.endTime = function(includeRepeats) {\n\t                    return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;\n\t                };\n\t                p.timeScale = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._timeScale;\n\t                    }\n\t                    value = value || _tinyNum;\n\t                    if (this._timeline && this._timeline.smoothChildTiming) {\n\t                        var pauseTime = this._pauseTime, t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();\n\t                        this._startTime = t - (t - this._startTime) * this._timeScale / value;\n\t                    }\n\t                    this._timeScale = value;\n\t                    return this._uncache(false);\n\t                };\n\t                p.reversed = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._reversed;\n\t                    }\n\t                    if (value != this._reversed) {\n\t                        this._reversed = value;\n\t                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p.paused = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._paused;\n\t                    }\n\t                    var tl = this._timeline, raw, elapsed;\n\t                    if (value != this._paused) if (tl) {\n\t                        if (!_tickerActive && !value) {\n\t                            _ticker.wake();\n\t                        }\n\t                        raw = tl.rawTime();\n\t                        elapsed = raw - this._pauseTime;\n\t                        if (!value && tl.smoothChildTiming) {\n\t                            this._startTime += elapsed;\n\t                            this._uncache(false);\n\t                        }\n\t                        this._pauseTime = value ? raw : null;\n\t                        this._paused = value;\n\t                        this._active = this.isActive();\n\t                        if (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t                            raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n\t                            this.render(raw, raw === this._totalTime, true);\n\t                        }\n\t                    }\n\t                    if (this._gc && !value) {\n\t                        this._enabled(true, false);\n\t                    }\n\t                    return this;\n\t                };\n\t                var SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t                    Animation.call(this, 0, vars);\n\t                    this.autoRemoveChildren = this.smoothChildTiming = true;\n\t                });\n\t                p = SimpleTimeline.prototype = new Animation();\n\t                p.constructor = SimpleTimeline;\n\t                p.kill()._gc = false;\n\t                p._first = p._last = p._recent = null;\n\t                p._sortChildren = false;\n\t                p.add = p.insert = function(child, position, align, stagger) {\n\t                    var prevTween, st;\n\t                    child._startTime = Number(position || 0) + child._delay;\n\t                    if (child._paused) if (this !== child._timeline) {\n\t                        child._pauseTime = child._startTime + (this.rawTime() - child._startTime) / child._timeScale;\n\t                    }\n\t                    if (child.timeline) {\n\t                        child.timeline._remove(child, true);\n\t                    }\n\t                    child.timeline = child._timeline = this;\n\t                    if (child._gc) {\n\t                        child._enabled(true, true);\n\t                    }\n\t                    prevTween = this._last;\n\t                    if (this._sortChildren) {\n\t                        st = child._startTime;\n\t                        while (prevTween && prevTween._startTime > st) {\n\t                            prevTween = prevTween._prev;\n\t                        }\n\t                    }\n\t                    if (prevTween) {\n\t                        child._next = prevTween._next;\n\t                        prevTween._next = child;\n\t                    } else {\n\t                        child._next = this._first;\n\t                        this._first = child;\n\t                    }\n\t                    if (child._next) {\n\t                        child._next._prev = child;\n\t                    } else {\n\t                        this._last = child;\n\t                    }\n\t                    child._prev = prevTween;\n\t                    this._recent = child;\n\t                    if (this._timeline) {\n\t                        this._uncache(true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p._remove = function(tween, skipDisable) {\n\t                    if (tween.timeline === this) {\n\t                        if (!skipDisable) {\n\t                            tween._enabled(false, true);\n\t                        }\n\t                        if (tween._prev) {\n\t                            tween._prev._next = tween._next;\n\t                        } else if (this._first === tween) {\n\t                            this._first = tween._next;\n\t                        }\n\t                        if (tween._next) {\n\t                            tween._next._prev = tween._prev;\n\t                        } else if (this._last === tween) {\n\t                            this._last = tween._prev;\n\t                        }\n\t                        tween._next = tween._prev = tween.timeline = null;\n\t                        if (tween === this._recent) {\n\t                            this._recent = this._last;\n\t                        }\n\t                        if (this._timeline) {\n\t                            this._uncache(true);\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.render = function(time, suppressEvents, force) {\n\t                    var tween = this._first, next;\n\t                    this._totalTime = this._time = this._rawPrevTime = time;\n\t                    while (tween) {\n\t                        next = tween._next;\n\t                        if (tween._active || time >= tween._startTime && !tween._paused) {\n\t                            if (!tween._reversed) {\n\t                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                            } else {\n\t                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                            }\n\t                        }\n\t                        tween = next;\n\t                    }\n\t                };\n\t                p.rawTime = function() {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    return this._totalTime;\n\t                };\n\t                var TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t                    Animation.call(this, duration, vars);\n\t                    this.render = TweenLite.prototype.render;\n\t                    if (target == null) {\n\t                        throw \"Cannot tween a null target.\";\n\t                    }\n\t                    this.target = target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n\t                    var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType), overwrite = this.vars.overwrite, i, targ, targets;\n\t                    this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === \"number\" ? overwrite >> 0 : _overwriteLookup[overwrite];\n\t                    if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== \"number\") {\n\t                        this._targets = targets = _slice(target);\n\t                        this._propLookup = [];\n\t                        this._siblings = [];\n\t                        for (i = 0; i < targets.length; i++) {\n\t                            targ = targets[i];\n\t                            if (!targ) {\n\t                                targets.splice(i--, 1);\n\t                                continue;\n\t                            } else if (typeof targ === \"string\") {\n\t                                targ = targets[i--] = TweenLite.selector(targ);\n\t                                if (typeof targ === \"string\") {\n\t                                    targets.splice(i + 1, 1);\n\t                                }\n\t                                continue;\n\t                            } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {\n\t                                targets.splice(i--, 1);\n\t                                this._targets = targets = targets.concat(_slice(targ));\n\t                                continue;\n\t                            }\n\t                            this._siblings[i] = _register(targ, this, false);\n\t                            if (overwrite === 1) if (this._siblings[i].length > 1) {\n\t                                _applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t                            }\n\t                        }\n\t                    } else {\n\t                        this._propLookup = {};\n\t                        this._siblings = _register(target, this, false);\n\t                        if (overwrite === 1) if (this._siblings.length > 1) {\n\t                            _applyOverwrite(target, this, null, 1, this._siblings);\n\t                        }\n\t                    }\n\t                    if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {\n\t                        this._time = -_tinyNum;\n\t                        this.render(Math.min(0, -this._delay));\n\t                    }\n\t                }, true), _isSelector = function(v) {\n\t                    return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType);\n\t                }, _autoCSS = function(vars, target) {\n\t                    var css = {}, p;\n\t                    for (p in vars) {\n\t                        if (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {\n\t                            css[p] = vars[p];\n\t                            delete vars[p];\n\t                        }\n\t                    }\n\t                    vars.css = css;\n\t                };\n\t                p = TweenLite.prototype = new Animation();\n\t                p.constructor = TweenLite;\n\t                p.kill()._gc = false;\n\t                p.ratio = 0;\n\t                p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t                p._notifyPluginsOfEnabled = p._lazy = false;\n\t                TweenLite.version = \"1.18.5\";\n\t                TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t                TweenLite.defaultOverwrite = \"auto\";\n\t                TweenLite.ticker = _ticker;\n\t                TweenLite.autoSleep = 120;\n\t                TweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t                    _ticker.lagSmoothing(threshold, adjustedLag);\n\t                };\n\t                TweenLite.selector = window.$ || window.jQuery || function(e) {\n\t                    var selector = window.$ || window.jQuery;\n\t                    if (selector) {\n\t                        TweenLite.selector = selector;\n\t                        return selector(e);\n\t                    }\n\t                    return typeof document === \"undefined\" ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(e.charAt(0) === \"#\" ? e.substr(1) : e);\n\t                };\n\t                var _lazyTweens = [], _lazyLookup = {}, _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi, _setRatio = function(v) {\n\t                    var pt = this._firstPT, min = 1e-6, val;\n\t                    while (pt) {\n\t                        val = !pt.blob ? pt.c * v + pt.s : v ? this.join(\"\") : this.start;\n\t                        if (pt.r) {\n\t                            val = Math.round(val);\n\t                        } else if (val < min) if (val > -min) {\n\t                            val = 0;\n\t                        }\n\t                        if (!pt.f) {\n\t                            pt.t[pt.p] = val;\n\t                        } else if (pt.fp) {\n\t                            pt.t[pt.p](pt.fp, val);\n\t                        } else {\n\t                            pt.t[pt.p](val);\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                }, _blobDif = function(start, end, filter, pt) {\n\t                    var a = [ start, end ], charIndex = 0, s = \"\", color = 0, startNums, endNums, num, i, l, nonNumbers, currentNum;\n\t                    a.start = start;\n\t                    if (filter) {\n\t                        filter(a);\n\t                        start = a[0];\n\t                        end = a[1];\n\t                    }\n\t                    a.length = 0;\n\t                    startNums = start.match(_numbersExp) || [];\n\t                    endNums = end.match(_numbersExp) || [];\n\t                    if (pt) {\n\t                        pt._next = null;\n\t                        pt.blob = 1;\n\t                        a._firstPT = pt;\n\t                    }\n\t                    l = endNums.length;\n\t                    for (i = 0; i < l; i++) {\n\t                        currentNum = endNums[i];\n\t                        nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);\n\t                        s += nonNumbers || !i ? nonNumbers : \",\";\n\t                        charIndex += nonNumbers.length;\n\t                        if (color) {\n\t                            color = (color + 1) % 5;\n\t                        } else if (nonNumbers.substr(-5) === \"rgba(\") {\n\t                            color = 1;\n\t                        }\n\t                        if (currentNum === startNums[i] || startNums.length <= i) {\n\t                            s += currentNum;\n\t                        } else {\n\t                            if (s) {\n\t                                a.push(s);\n\t                                s = \"\";\n\t                            }\n\t                            num = parseFloat(startNums[i]);\n\t                            a.push(num);\n\t                            a._firstPT = {\n\t                                _next: a._firstPT,\n\t                                t: a,\n\t                                p: a.length - 1,\n\t                                s: num,\n\t                                c: (currentNum.charAt(1) === \"=\" ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,\n\t                                f: 0,\n\t                                r: color && color < 4\n\t                            };\n\t                        }\n\t                        charIndex += currentNum.length;\n\t                    }\n\t                    s += end.substr(charIndex);\n\t                    if (s) {\n\t                        a.push(s);\n\t                    }\n\t                    a.setRatio = _setRatio;\n\t                    return a;\n\t                }, _addPropTween = function(target, prop, start, end, overwriteProp, round, funcParam, stringFilter) {\n\t                    var s = start === \"get\" ? target[prop] : start, type = typeof target[prop], isRelative = typeof end === \"string\" && end.charAt(1) === \"=\", pt = {\n\t                        t: target,\n\t                        p: prop,\n\t                        s: s,\n\t                        f: type === \"function\",\n\t                        pg: 0,\n\t                        n: overwriteProp || prop,\n\t                        r: round,\n\t                        pr: 0,\n\t                        c: isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0\n\t                    }, blob, getterName;\n\t                    if (type !== \"number\") {\n\t                        if (type === \"function\" && start === \"get\") {\n\t                            getterName = prop.indexOf(\"set\") || typeof target[\"get\" + prop.substr(3)] !== \"function\" ? prop : \"get\" + prop.substr(3);\n\t                            pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();\n\t                        }\n\t                        if (typeof s === \"string\" && (funcParam || isNaN(s))) {\n\t                            pt.fp = funcParam;\n\t                            blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);\n\t                            pt = {\n\t                                t: blob,\n\t                                p: \"setRatio\",\n\t                                s: 0,\n\t                                c: 1,\n\t                                f: 2,\n\t                                pg: 0,\n\t                                n: overwriteProp || prop,\n\t                                pr: 0\n\t                            };\n\t                        } else if (!isRelative) {\n\t                            pt.s = parseFloat(s);\n\t                            pt.c = parseFloat(end) - pt.s || 0;\n\t                        }\n\t                    }\n\t                    if (pt.c) {\n\t                        if (pt._next = this._firstPT) {\n\t                            pt._next._prev = pt;\n\t                        }\n\t                        this._firstPT = pt;\n\t                        return pt;\n\t                    }\n\t                }, _internals = TweenLite._internals = {\n\t                    isArray: _isArray,\n\t                    isSelector: _isSelector,\n\t                    lazyTweens: _lazyTweens,\n\t                    blobDif: _blobDif\n\t                }, _plugins = TweenLite._plugins = {}, _tweenLookup = _internals.tweenLookup = {}, _tweenLookupNum = 0, _reservedProps = _internals.reservedProps = {\n\t                    ease: 1,\n\t                    delay: 1,\n\t                    overwrite: 1,\n\t                    onComplete: 1,\n\t                    onCompleteParams: 1,\n\t                    onCompleteScope: 1,\n\t                    useFrames: 1,\n\t                    runBackwards: 1,\n\t                    startAt: 1,\n\t                    onUpdate: 1,\n\t                    onUpdateParams: 1,\n\t                    onUpdateScope: 1,\n\t                    onStart: 1,\n\t                    onStartParams: 1,\n\t                    onStartScope: 1,\n\t                    onReverseComplete: 1,\n\t                    onReverseCompleteParams: 1,\n\t                    onReverseCompleteScope: 1,\n\t                    onRepeat: 1,\n\t                    onRepeatParams: 1,\n\t                    onRepeatScope: 1,\n\t                    easeParams: 1,\n\t                    yoyo: 1,\n\t                    immediateRender: 1,\n\t                    repeat: 1,\n\t                    repeatDelay: 1,\n\t                    data: 1,\n\t                    paused: 1,\n\t                    reversed: 1,\n\t                    autoCSS: 1,\n\t                    lazy: 1,\n\t                    onOverwrite: 1,\n\t                    callbackScope: 1,\n\t                    stringFilter: 1,\n\t                    id: 1\n\t                }, _overwriteLookup = {\n\t                    none: 0,\n\t                    all: 1,\n\t                    auto: 2,\n\t                    concurrent: 3,\n\t                    allOnStart: 4,\n\t                    preexisting: 5,\n\t                    \"true\": 1,\n\t                    \"false\": 0\n\t                }, _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(), _rootTimeline = Animation._rootTimeline = new SimpleTimeline(), _nextGCFrame = 30, _lazyRender = _internals.lazyRender = function() {\n\t                    var i = _lazyTweens.length, tween;\n\t                    _lazyLookup = {};\n\t                    while (--i > -1) {\n\t                        tween = _lazyTweens[i];\n\t                        if (tween && tween._lazy !== false) {\n\t                            tween.render(tween._lazy[0], tween._lazy[1], true);\n\t                            tween._lazy = false;\n\t                        }\n\t                    }\n\t                    _lazyTweens.length = 0;\n\t                };\n\t                _rootTimeline._startTime = _ticker.time;\n\t                _rootFramesTimeline._startTime = _ticker.frame;\n\t                _rootTimeline._active = _rootFramesTimeline._active = true;\n\t                setTimeout(_lazyRender, 1);\n\t                Animation._updateRoot = TweenLite.render = function() {\n\t                    var i, a, p;\n\t                    if (_lazyTweens.length) {\n\t                        _lazyRender();\n\t                    }\n\t                    _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t                    _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t                    if (_lazyTweens.length) {\n\t                        _lazyRender();\n\t                    }\n\t                    if (_ticker.frame >= _nextGCFrame) {\n\t                        _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n\t                        for (p in _tweenLookup) {\n\t                            a = _tweenLookup[p].tweens;\n\t                            i = a.length;\n\t                            while (--i > -1) {\n\t                                if (a[i]._gc) {\n\t                                    a.splice(i, 1);\n\t                                }\n\t                            }\n\t                            if (a.length === 0) {\n\t                                delete _tweenLookup[p];\n\t                            }\n\t                        }\n\t                        p = _rootTimeline._first;\n\t                        if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t                            while (p && p._paused) {\n\t                                p = p._next;\n\t                            }\n\t                            if (!p) {\n\t                                _ticker.sleep();\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                _ticker.addEventListener(\"tick\", Animation._updateRoot);\n\t                var _register = function(target, tween, scrub) {\n\t                    var id = target._gsTweenID, a, i;\n\t                    if (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + _tweenLookupNum++)]) {\n\t                        _tweenLookup[id] = {\n\t                            target: target,\n\t                            tweens: []\n\t                        };\n\t                    }\n\t                    if (tween) {\n\t                        a = _tweenLookup[id].tweens;\n\t                        a[i = a.length] = tween;\n\t                        if (scrub) {\n\t                            while (--i > -1) {\n\t                                if (a[i] === tween) {\n\t                                    a.splice(i, 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    return _tweenLookup[id].tweens;\n\t                }, _onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n\t                    var func = overwrittenTween.vars.onOverwrite, r1, r2;\n\t                    if (func) {\n\t                        r1 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t                    }\n\t                    func = TweenLite.onOverwrite;\n\t                    if (func) {\n\t                        r2 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t                    }\n\t                    return r1 !== false && r2 !== false;\n\t                }, _applyOverwrite = function(target, tween, props, mode, siblings) {\n\t                    var i, changed, curTween, l;\n\t                    if (mode === 1 || mode >= 4) {\n\t                        l = siblings.length;\n\t                        for (i = 0; i < l; i++) {\n\t                            if ((curTween = siblings[i]) !== tween) {\n\t                                if (!curTween._gc) {\n\t                                    if (curTween._kill(null, target, tween)) {\n\t                                        changed = true;\n\t                                    }\n\t                                }\n\t                            } else if (mode === 5) {\n\t                                break;\n\t                            }\n\t                        }\n\t                        return changed;\n\t                    }\n\t                    var startTime = tween._startTime + _tinyNum, overlaps = [], oCount = 0, zeroDur = tween._duration === 0, globalStart;\n\t                    i = siblings.length;\n\t                    while (--i > -1) {\n\t                        if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {} else if (curTween._timeline !== tween._timeline) {\n\t                            globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t                            if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t                                overlaps[oCount++] = curTween;\n\t                            }\n\t                        } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 2e-10)) {\n\t                            overlaps[oCount++] = curTween;\n\t                        }\n\t                    }\n\t                    i = oCount;\n\t                    while (--i > -1) {\n\t                        curTween = overlaps[i];\n\t                        if (mode === 2) if (curTween._kill(props, target, tween)) {\n\t                            changed = true;\n\t                        }\n\t                        if (mode !== 2 || !curTween._firstPT && curTween._initted) {\n\t                            if (mode !== 2 && !_onOverwrite(curTween, tween)) {\n\t                                continue;\n\t                            }\n\t                            if (curTween._enabled(false, false)) {\n\t                                changed = true;\n\t                            }\n\t                        }\n\t                    }\n\t                    return changed;\n\t                }, _checkOverlap = function(tween, reference, zeroDur) {\n\t                    var tl = tween._timeline, ts = tl._timeScale, t = tween._startTime;\n\t                    while (tl._timeline) {\n\t                        t += tl._startTime;\n\t                        ts *= tl._timeScale;\n\t                        if (tl._paused) {\n\t                            return -100;\n\t                        }\n\t                        tl = tl._timeline;\n\t                    }\n\t                    t /= ts;\n\t                    return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;\n\t                };\n\t                p._init = function() {\n\t                    var v = this.vars, op = this._overwrittenProps, dur = this._duration, immediate = !!v.immediateRender, ease = v.ease, i, initPlugins, pt, p, startVars;\n\t                    if (v.startAt) {\n\t                        if (this._startAt) {\n\t                            this._startAt.render(-1, true);\n\t                            this._startAt.kill();\n\t                        }\n\t                        startVars = {};\n\t                        for (p in v.startAt) {\n\t                            startVars[p] = v.startAt[p];\n\t                        }\n\t                        startVars.overwrite = false;\n\t                        startVars.immediateRender = true;\n\t                        startVars.lazy = immediate && v.lazy !== false;\n\t                        startVars.startAt = startVars.delay = null;\n\t                        this._startAt = TweenLite.to(this.target, 0, startVars);\n\t                        if (immediate) {\n\t                            if (this._time > 0) {\n\t                                this._startAt = null;\n\t                            } else if (dur !== 0) {\n\t                                return;\n\t                            }\n\t                        }\n\t                    } else if (v.runBackwards && dur !== 0) {\n\t                        if (this._startAt) {\n\t                            this._startAt.render(-1, true);\n\t                            this._startAt.kill();\n\t                            this._startAt = null;\n\t                        } else {\n\t                            if (this._time !== 0) {\n\t                                immediate = false;\n\t                            }\n\t                            pt = {};\n\t                            for (p in v) {\n\t                                if (!_reservedProps[p] || p === \"autoCSS\") {\n\t                                    pt[p] = v[p];\n\t                                }\n\t                            }\n\t                            pt.overwrite = 0;\n\t                            pt.data = \"isFromStart\";\n\t                            pt.lazy = immediate && v.lazy !== false;\n\t                            pt.immediateRender = immediate;\n\t                            this._startAt = TweenLite.to(this.target, 0, pt);\n\t                            if (!immediate) {\n\t                                this._startAt._init();\n\t                                this._startAt._enabled(false);\n\t                                if (this.vars.immediateRender) {\n\t                                    this._startAt = null;\n\t                                }\n\t                            } else if (this._time === 0) {\n\t                                return;\n\t                            }\n\t                        }\n\t                    }\n\t                    this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === \"function\" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t                    if (v.easeParams instanceof Array && ease.config) {\n\t                        this._ease = ease.config.apply(ease, v.easeParams);\n\t                    }\n\t                    this._easeType = this._ease._type;\n\t                    this._easePower = this._ease._power;\n\t                    this._firstPT = null;\n\t                    if (this._targets) {\n\t                        i = this._targets.length;\n\t                        while (--i > -1) {\n\t                            if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null)) {\n\t                                initPlugins = true;\n\t                            }\n\t                        }\n\t                    } else {\n\t                        initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n\t                    }\n\t                    if (initPlugins) {\n\t                        TweenLite._onPluginEvent(\"_onInitAllProps\", this);\n\t                    }\n\t                    if (op) if (!this._firstPT) if (typeof this.target !== \"function\") {\n\t                        this._enabled(false, false);\n\t                    }\n\t                    if (v.runBackwards) {\n\t                        pt = this._firstPT;\n\t                        while (pt) {\n\t                            pt.s += pt.c;\n\t                            pt.c = -pt.c;\n\t                            pt = pt._next;\n\t                        }\n\t                    }\n\t                    this._onUpdate = v.onUpdate;\n\t                    this._initted = true;\n\t                };\n\t                p._initProps = function(target, propLookup, siblings, overwrittenProps) {\n\t                    var p, i, initPlugins, plugin, pt, v;\n\t                    if (target == null) {\n\t                        return false;\n\t                    }\n\t                    if (_lazyLookup[target._gsTweenID]) {\n\t                        _lazyRender();\n\t                    }\n\t                    if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {\n\t                        _autoCSS(this.vars, target);\n\t                    }\n\t                    for (p in this.vars) {\n\t                        v = this.vars[p];\n\t                        if (_reservedProps[p]) {\n\t                            if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t                                this.vars[p] = v = this._swapSelfInParams(v, this);\n\t                            }\n\t                        } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n\t                            this._firstPT = pt = {\n\t                                _next: this._firstPT,\n\t                                t: plugin,\n\t                                p: \"setRatio\",\n\t                                s: 0,\n\t                                c: 1,\n\t                                f: 1,\n\t                                n: p,\n\t                                pg: 1,\n\t                                pr: plugin._priority\n\t                            };\n\t                            i = plugin._overwriteProps.length;\n\t                            while (--i > -1) {\n\t                                propLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t                            }\n\t                            if (plugin._priority || plugin._onInitAllProps) {\n\t                                initPlugins = true;\n\t                            }\n\t                            if (plugin._onDisable || plugin._onEnable) {\n\t                                this._notifyPluginsOfEnabled = true;\n\t                            }\n\t                            if (pt._next) {\n\t                                pt._next._prev = pt;\n\t                            }\n\t                        } else {\n\t                            propLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter);\n\t                        }\n\t                    }\n\t                    if (overwrittenProps) if (this._kill(overwrittenProps, target)) {\n\t                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n\t                    }\n\t                    if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t                        this._kill(propLookup, target);\n\t                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n\t                    }\n\t                    if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {\n\t                        _lazyLookup[target._gsTweenID] = true;\n\t                    }\n\t                    return initPlugins;\n\t                };\n\t                p.render = function(time, suppressEvents, force) {\n\t                    var prevTime = this._time, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, rawPrevTime;\n\t                    if (time >= duration - 1e-7) {\n\t                        this._totalTime = this._time = duration;\n\t                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t                        if (!this._reversed) {\n\t                            isComplete = true;\n\t                            callback = \"onComplete\";\n\t                            force = force || this._timeline.autoRemoveChildren;\n\t                        }\n\t                        if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                            if (this._startTime === this._timeline._duration) {\n\t                                time = 0;\n\t                            }\n\t                            if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n\t                                force = true;\n\t                                if (prevRawPrevTime > _tinyNum) {\n\t                                    callback = \"onReverseComplete\";\n\t                                }\n\t                            }\n\t                            this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                        }\n\t                    } else if (time < 1e-7) {\n\t                        this._totalTime = this._time = 0;\n\t                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                        if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n\t                            callback = \"onReverseComplete\";\n\t                            isComplete = this._reversed;\n\t                        }\n\t                        if (time < 0) {\n\t                            this._active = false;\n\t                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n\t                                    force = true;\n\t                                }\n\t                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                            }\n\t                        }\n\t                        if (!this._initted) {\n\t                            force = true;\n\t                        }\n\t                    } else {\n\t                        this._totalTime = this._time = time;\n\t                        if (this._easeType) {\n\t                            var r = time / duration, type = this._easeType, pow = this._easePower;\n\t                            if (type === 1 || type === 3 && r >= .5) {\n\t                                r = 1 - r;\n\t                            }\n\t                            if (type === 3) {\n\t                                r *= 2;\n\t                            }\n\t                            if (pow === 1) {\n\t                                r *= r;\n\t                            } else if (pow === 2) {\n\t                                r *= r * r;\n\t                            } else if (pow === 3) {\n\t                                r *= r * r * r;\n\t                            } else if (pow === 4) {\n\t                                r *= r * r * r * r;\n\t                            }\n\t                            if (type === 1) {\n\t                                this.ratio = 1 - r;\n\t                            } else if (type === 2) {\n\t                                this.ratio = r;\n\t                            } else if (time / duration < .5) {\n\t                                this.ratio = r / 2;\n\t                            } else {\n\t                                this.ratio = 1 - r / 2;\n\t                            }\n\t                        } else {\n\t                            this.ratio = this._ease.getRatio(time / duration);\n\t                        }\n\t                    }\n\t                    if (this._time === prevTime && !force) {\n\t                        return;\n\t                    } else if (!this._initted) {\n\t                        this._init();\n\t                        if (!this._initted || this._gc) {\n\t                            return;\n\t                        } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n\t                            this._time = this._totalTime = prevTime;\n\t                            this._rawPrevTime = prevRawPrevTime;\n\t                            _lazyTweens.push(this);\n\t                            this._lazy = [ time, suppressEvents ];\n\t                            return;\n\t                        }\n\t                        if (this._time && !isComplete) {\n\t                            this.ratio = this._ease.getRatio(this._time / duration);\n\t                        } else if (isComplete && this._ease._calcEnd) {\n\t                            this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n\t                        }\n\t                    }\n\t                    if (this._lazy !== false) {\n\t                        this._lazy = false;\n\t                    }\n\t                    if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t                        this._active = true;\n\t                    }\n\t                    if (prevTime === 0) {\n\t                        if (this._startAt) {\n\t                            if (time >= 0) {\n\t                                this._startAt.render(time, suppressEvents, force);\n\t                            } else if (!callback) {\n\t                                callback = \"_dummyGS\";\n\t                            }\n\t                        }\n\t                        if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n\t                            this._callback(\"onStart\");\n\t                        }\n\t                    }\n\t                    pt = this._firstPT;\n\t                    while (pt) {\n\t                        if (pt.f) {\n\t                            pt.t[pt.p](pt.c * this.ratio + pt.s);\n\t                        } else {\n\t                            pt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                    if (this._onUpdate) {\n\t                        if (time < 0) if (this._startAt && time !== -1e-4) {\n\t                            this._startAt.render(time, suppressEvents, force);\n\t                        }\n\t                        if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n\t                            this._callback(\"onUpdate\");\n\t                        }\n\t                    }\n\t                    if (callback) if (!this._gc || force) {\n\t                        if (time < 0 && this._startAt && !this._onUpdate && time !== -1e-4) {\n\t                            this._startAt.render(time, suppressEvents, force);\n\t                        }\n\t                        if (isComplete) {\n\t                            if (this._timeline.autoRemoveChildren) {\n\t                                this._enabled(false, false);\n\t                            }\n\t                            this._active = false;\n\t                        }\n\t                        if (!suppressEvents && this.vars[callback]) {\n\t                            this._callback(callback);\n\t                        }\n\t                        if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n\t                            this._rawPrevTime = 0;\n\t                        }\n\t                    }\n\t                };\n\t                p._kill = function(vars, target, overwritingTween) {\n\t                    if (vars === \"all\") {\n\t                        vars = null;\n\t                    }\n\t                    if (vars == null) if (target == null || target === this.target) {\n\t                        this._lazy = false;\n\t                        return this._enabled(false, false);\n\t                    }\n\t                    target = typeof target !== \"string\" ? target || this._targets || this.target : TweenLite.selector(target) || target;\n\t                    var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline, i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n\t                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n\t                        i = target.length;\n\t                        while (--i > -1) {\n\t                            if (this._kill(vars, target[i], overwritingTween)) {\n\t                                changed = true;\n\t                            }\n\t                        }\n\t                    } else {\n\t                        if (this._targets) {\n\t                            i = this._targets.length;\n\t                            while (--i > -1) {\n\t                                if (target === this._targets[i]) {\n\t                                    propLookup = this._propLookup[i] || {};\n\t                                    this._overwrittenProps = this._overwrittenProps || [];\n\t                                    overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t                                    break;\n\t                                }\n\t                            }\n\t                        } else if (target !== this.target) {\n\t                            return false;\n\t                        } else {\n\t                            propLookup = this._propLookup;\n\t                            overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t                        }\n\t                        if (propLookup) {\n\t                            killProps = vars || propLookup;\n\t                            record = vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof vars !== \"object\" || !vars._tempKill);\n\t                            if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n\t                                for (p in killProps) {\n\t                                    if (propLookup[p]) {\n\t                                        if (!killed) {\n\t                                            killed = [];\n\t                                        }\n\t                                        killed.push(p);\n\t                                    }\n\t                                }\n\t                                if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {\n\t                                    return false;\n\t                                }\n\t                            }\n\t                            for (p in killProps) {\n\t                                if (pt = propLookup[p]) {\n\t                                    if (simultaneousOverwrite) {\n\t                                        if (pt.f) {\n\t                                            pt.t[pt.p](pt.s);\n\t                                        } else {\n\t                                            pt.t[pt.p] = pt.s;\n\t                                        }\n\t                                        changed = true;\n\t                                    }\n\t                                    if (pt.pg && pt.t._kill(killProps)) {\n\t                                        changed = true;\n\t                                    }\n\t                                    if (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t                                        if (pt._prev) {\n\t                                            pt._prev._next = pt._next;\n\t                                        } else if (pt === this._firstPT) {\n\t                                            this._firstPT = pt._next;\n\t                                        }\n\t                                        if (pt._next) {\n\t                                            pt._next._prev = pt._prev;\n\t                                        }\n\t                                        pt._next = pt._prev = null;\n\t                                    }\n\t                                    delete propLookup[p];\n\t                                }\n\t                                if (record) {\n\t                                    overwrittenProps[p] = 1;\n\t                                }\n\t                            }\n\t                            if (!this._firstPT && this._initted) {\n\t                                this._enabled(false, false);\n\t                            }\n\t                        }\n\t                    }\n\t                    return changed;\n\t                };\n\t                p.invalidate = function() {\n\t                    if (this._notifyPluginsOfEnabled) {\n\t                        TweenLite._onPluginEvent(\"_onDisable\", this);\n\t                    }\n\t                    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n\t                    this._notifyPluginsOfEnabled = this._active = this._lazy = false;\n\t                    this._propLookup = this._targets ? {} : [];\n\t                    Animation.prototype.invalidate.call(this);\n\t                    if (this.vars.immediateRender) {\n\t                        this._time = -_tinyNum;\n\t                        this.render(Math.min(0, -this._delay));\n\t                    }\n\t                    return this;\n\t                };\n\t                p._enabled = function(enabled, ignoreTimeline) {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    if (enabled && this._gc) {\n\t                        var targets = this._targets, i;\n\t                        if (targets) {\n\t                            i = targets.length;\n\t                            while (--i > -1) {\n\t                                this._siblings[i] = _register(targets[i], this, true);\n\t                            }\n\t                        } else {\n\t                            this._siblings = _register(this.target, this, true);\n\t                        }\n\t                    }\n\t                    Animation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t                    if (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t                        return TweenLite._onPluginEvent(enabled ? \"_onEnable\" : \"_onDisable\", this);\n\t                    }\n\t                    return false;\n\t                };\n\t                TweenLite.to = function(target, duration, vars) {\n\t                    return new TweenLite(target, duration, vars);\n\t                };\n\t                TweenLite.from = function(target, duration, vars) {\n\t                    vars.runBackwards = true;\n\t                    vars.immediateRender = vars.immediateRender != false;\n\t                    return new TweenLite(target, duration, vars);\n\t                };\n\t                TweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t                    toVars.startAt = fromVars;\n\t                    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                    return new TweenLite(target, duration, toVars);\n\t                };\n\t                TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t                    return new TweenLite(callback, 0, {\n\t                        delay: delay,\n\t                        onComplete: callback,\n\t                        onCompleteParams: params,\n\t                        callbackScope: scope,\n\t                        onReverseComplete: callback,\n\t                        onReverseCompleteParams: params,\n\t                        immediateRender: false,\n\t                        lazy: false,\n\t                        useFrames: useFrames,\n\t                        overwrite: 0\n\t                    });\n\t                };\n\t                TweenLite.set = function(target, vars) {\n\t                    return new TweenLite(target, 0, vars);\n\t                };\n\t                TweenLite.getTweensOf = function(target, onlyActive) {\n\t                    if (target == null) {\n\t                        return [];\n\t                    }\n\t                    target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n\t                    var i, a, j, t;\n\t                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n\t                        i = target.length;\n\t                        a = [];\n\t                        while (--i > -1) {\n\t                            a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t                        }\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            t = a[i];\n\t                            j = i;\n\t                            while (--j > -1) {\n\t                                if (t === a[j]) {\n\t                                    a.splice(i, 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else {\n\t                        a = _register(target).concat();\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            if (a[i]._gc || onlyActive && !a[i].isActive()) {\n\t                                a.splice(i, 1);\n\t                            }\n\t                        }\n\t                    }\n\t                    return a;\n\t                };\n\t                TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t                    if (typeof onlyActive === \"object\") {\n\t                        vars = onlyActive;\n\t                        onlyActive = false;\n\t                    }\n\t                    var a = TweenLite.getTweensOf(target, onlyActive), i = a.length;\n\t                    while (--i > -1) {\n\t                        a[i]._kill(vars, target);\n\t                    }\n\t                };\n\t                var TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t                    this._overwriteProps = (props || \"\").split(\",\");\n\t                    this._propName = this._overwriteProps[0];\n\t                    this._priority = priority || 0;\n\t                    this._super = TweenPlugin.prototype;\n\t                }, true);\n\t                p = TweenPlugin.prototype;\n\t                TweenPlugin.version = \"1.18.0\";\n\t                TweenPlugin.API = 2;\n\t                p._firstPT = null;\n\t                p._addTween = _addPropTween;\n\t                p.setRatio = _setRatio;\n\t                p._kill = function(lookup) {\n\t                    var a = this._overwriteProps, pt = this._firstPT, i;\n\t                    if (lookup[this._propName] != null) {\n\t                        this._overwriteProps = [];\n\t                    } else {\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            if (lookup[a[i]] != null) {\n\t                                a.splice(i, 1);\n\t                            }\n\t                        }\n\t                    }\n\t                    while (pt) {\n\t                        if (lookup[pt.n] != null) {\n\t                            if (pt._next) {\n\t                                pt._next._prev = pt._prev;\n\t                            }\n\t                            if (pt._prev) {\n\t                                pt._prev._next = pt._next;\n\t                                pt._prev = null;\n\t                            } else if (this._firstPT === pt) {\n\t                                this._firstPT = pt._next;\n\t                            }\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                    return false;\n\t                };\n\t                p._roundProps = function(lookup, value) {\n\t                    var pt = this._firstPT;\n\t                    while (pt) {\n\t                        if (lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + \"_\").join(\"\")]) {\n\t                            pt.r = value;\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                };\n\t                TweenLite._onPluginEvent = function(type, tween) {\n\t                    var pt = tween._firstPT, changed, pt2, first, last, next;\n\t                    if (type === \"_onInitAllProps\") {\n\t                        while (pt) {\n\t                            next = pt._next;\n\t                            pt2 = first;\n\t                            while (pt2 && pt2.pr > pt.pr) {\n\t                                pt2 = pt2._next;\n\t                            }\n\t                            if (pt._prev = pt2 ? pt2._prev : last) {\n\t                                pt._prev._next = pt;\n\t                            } else {\n\t                                first = pt;\n\t                            }\n\t                            if (pt._next = pt2) {\n\t                                pt2._prev = pt;\n\t                            } else {\n\t                                last = pt;\n\t                            }\n\t                            pt = next;\n\t                        }\n\t                        pt = tween._firstPT = first;\n\t                    }\n\t                    while (pt) {\n\t                        if (pt.pg) if (typeof pt.t[type] === \"function\") if (pt.t[type]()) {\n\t                            changed = true;\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                    return changed;\n\t                };\n\t                TweenPlugin.activate = function(plugins) {\n\t                    var i = plugins.length;\n\t                    while (--i > -1) {\n\t                        if (plugins[i].API === TweenPlugin.API) {\n\t                            _plugins[new plugins[i]()._propName] = plugins[i];\n\t                        }\n\t                    }\n\t                    return true;\n\t                };\n\t                _gsDefine.plugin = function(config) {\n\t                    if (!config || !config.propName || !config.init || !config.API) {\n\t                        throw \"illegal plugin definition.\";\n\t                    }\n\t                    var propName = config.propName, priority = config.priority || 0, overwriteProps = config.overwriteProps, map = {\n\t                        init: \"_onInitTween\",\n\t                        set: \"setRatio\",\n\t                        kill: \"_kill\",\n\t                        round: \"_roundProps\",\n\t                        initAll: \"_onInitAllProps\"\n\t                    }, Plugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\", function() {\n\t                        TweenPlugin.call(this, propName, priority);\n\t                        this._overwriteProps = overwriteProps || [];\n\t                    }, config.global === true), p = Plugin.prototype = new TweenPlugin(propName), prop;\n\t                    p.constructor = Plugin;\n\t                    Plugin.API = config.API;\n\t                    for (prop in map) {\n\t                        if (typeof config[prop] === \"function\") {\n\t                            p[map[prop]] = config[prop];\n\t                        }\n\t                    }\n\t                    Plugin.version = config.version;\n\t                    TweenPlugin.activate([ Plugin ]);\n\t                    return Plugin;\n\t                };\n\t                a = window._gsQueue;\n\t                if (a) {\n\t                    for (i = 0; i < a.length; i++) {\n\t                        a[i]();\n\t                    }\n\t                    for (p in _defLookup) {\n\t                        if (!_defLookup[p].func) {\n\t                            window.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n\t                        }\n\t                    }\n\t                }\n\t                _tickerActive = false;\n\t            })(typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window, \"TweenMax\");\n\t        }).call(exports, function() {\n\t            return this;\n\t        }());\n\t    }, function(module, exports) {\n\t        (function(__webpack_amd_options__) {\n\t            module.exports = __webpack_amd_options__;\n\t        }).call(exports, {});\n\t    }, function(module, exports) {\n\t        THREE.SpriteCanvasMaterial = function(parameters) {\n\t            THREE.Material.call(this);\n\t            this.type = \"SpriteCanvasMaterial\";\n\t            this.color = new THREE.Color(16777215);\n\t            this.program = function(context, color) {};\n\t            this.setValues(parameters);\n\t        };\n\t        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n\t        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n\t            var material = new THREE.SpriteCanvasMaterial();\n\t            material.copy(this);\n\t            material.color.copy(this.color);\n\t            material.program = this.program;\n\t            return material;\n\t        };\n\t        THREE.CanvasRenderer = function(parameters) {\n\t            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n\t            parameters = parameters || {};\n\t            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n\t                alpha: parameters.alpha === true\n\t            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n\t            if (_context.setLineDash === undefined) {\n\t                _context.setLineDash = function() {};\n\t            }\n\t            this.domElement = _canvas;\n\t            this.autoClear = true;\n\t            this.sortObjects = true;\n\t            this.sortElements = true;\n\t            this.info = {\n\t                render: {\n\t                    vertices: 0,\n\t                    faces: 0\n\t                }\n\t            };\n\t            this.supportsVertexTextures = function() {};\n\t            this.setFaceCulling = function() {};\n\t            this.getContext = function() {\n\t                return _context;\n\t            };\n\t            this.getContextAttributes = function() {\n\t                return _context.getContextAttributes();\n\t            };\n\t            this.getPixelRatio = function() {\n\t                return _pixelRatio;\n\t            };\n\t            this.setPixelRatio = function(value) {\n\t                if (value !== undefined) _pixelRatio = value;\n\t            };\n\t            this.setSize = function(width, height, updateStyle) {\n\t                _canvasWidth = width * _pixelRatio;\n\t                _canvasHeight = height * _pixelRatio;\n\t                _canvas.width = _canvasWidth;\n\t                _canvas.height = _canvasHeight;\n\t                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n\t                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n\t                if (updateStyle !== false) {\n\t                    _canvas.style.width = width + \"px\";\n\t                    _canvas.style.height = height + \"px\";\n\t                }\n\t                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _contextGlobalAlpha = 1;\n\t                _contextGlobalCompositeOperation = 0;\n\t                _contextStrokeStyle = null;\n\t                _contextFillStyle = null;\n\t                _contextLineWidth = null;\n\t                _contextLineCap = null;\n\t                _contextLineJoin = null;\n\t                this.setViewport(0, 0, width, height);\n\t            };\n\t            this.setViewport = function(x, y, width, height) {\n\t                _viewportX = x * _pixelRatio;\n\t                _viewportY = y * _pixelRatio;\n\t                _viewportWidth = width * _pixelRatio;\n\t                _viewportHeight = height * _pixelRatio;\n\t            };\n\t            this.setScissor = function() {};\n\t            this.setScissorTest = function() {};\n\t            this.setClearColor = function(color, alpha) {\n\t                _clearColor.set(color);\n\t                _clearAlpha = alpha !== undefined ? alpha : 1;\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t            };\n\t            this.setClearColorHex = function(hex, alpha) {\n\t                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n\t                this.setClearColor(hex, alpha);\n\t            };\n\t            this.getClearColor = function() {\n\t                return _clearColor;\n\t            };\n\t            this.getClearAlpha = function() {\n\t                return _clearAlpha;\n\t            };\n\t            this.getMaxAnisotropy = function() {\n\t                return 0;\n\t            };\n\t            this.clear = function() {\n\t                if (_clearBox.isEmpty() === false) {\n\t                    _clearBox.intersect(_clipBox);\n\t                    _clearBox.expandByScalar(2);\n\t                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n\t                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n\t                    if (_clearAlpha < 1) {\n\t                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    if (_clearAlpha > 0) {\n\t                        setBlending(THREE.NormalBlending);\n\t                        setOpacity(1);\n\t                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n\t                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    _clearBox.makeEmpty();\n\t                }\n\t            };\n\t            this.clearColor = function() {};\n\t            this.clearDepth = function() {};\n\t            this.clearStencil = function() {};\n\t            this.render = function(scene, camera) {\n\t                if (camera instanceof THREE.Camera === false) {\n\t                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n\t                    return;\n\t                }\n\t                if (this.autoClear === true) this.clear();\n\t                _this.info.render.vertices = 0;\n\t                _this.info.render.faces = 0;\n\t                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n\t                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n\t                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n\t                _elements = _renderData.elements;\n\t                _lights = _renderData.lights;\n\t                _camera = camera;\n\t                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\t                calculateLights();\n\t                for (var e = 0, el = _elements.length; e < el; e++) {\n\t                    var element = _elements[e];\n\t                    var material = element.material;\n\t                    if (material === undefined || material.opacity === 0) continue;\n\t                    _elemBox.makeEmpty();\n\t                    if (element instanceof THREE.RenderableSprite) {\n\t                        _v1 = element;\n\t                        _v1.x *= _canvasWidthHalf;\n\t                        _v1.y *= _canvasHeightHalf;\n\t                        renderSprite(_v1, element, material);\n\t                    } else if (element instanceof THREE.RenderableLine) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderLine(_v1, _v2, element, material);\n\t                        }\n\t                    } else if (element instanceof THREE.RenderableFace) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v3 = element.v3;\n\t                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n\t                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n\t                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _v3.positionScreen.x *= _canvasWidthHalf;\n\t                        _v3.positionScreen.y *= _canvasHeightHalf;\n\t                        if (material.overdraw > 0) {\n\t                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n\t                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n\t                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n\t                        }\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n\t                        }\n\t                    }\n\t                    _clearBox.union(_elemBox);\n\t                }\n\t                _context.setTransform(1, 0, 0, 1, 0, 0);\n\t            };\n\t            function calculateLights() {\n\t                _ambientLight.setRGB(0, 0, 0);\n\t                _directionalLights.setRGB(0, 0, 0);\n\t                _pointLights.setRGB(0, 0, 0);\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    var lightColor = light.color;\n\t                    if (light instanceof THREE.AmbientLight) {\n\t                        _ambientLight.add(lightColor);\n\t                    } else if (light instanceof THREE.DirectionalLight) {\n\t                        _directionalLights.add(lightColor);\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        _pointLights.add(lightColor);\n\t                    }\n\t                }\n\t            }\n\t            function calculateLight(position, normal, color) {\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    _lightColor.copy(light.color);\n\t                    if (light instanceof THREE.DirectionalLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\t                        var amount = normal.dot(lightPosition);\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\t                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n\t                        if (amount == 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    }\n\t                }\n\t            }\n\t            function renderSprite(v1, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                var scaleX = element.scale.x * _canvasWidthHalf;\n\t                var scaleY = element.scale.y * _canvasHeightHalf;\n\t                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n\t                _elemBox.min.set(v1.x - dist, v1.y - dist);\n\t                _elemBox.max.set(v1.x + dist, v1.y + dist);\n\t                if (material instanceof THREE.SpriteMaterial) {\n\t                    var texture = material.map;\n\t                    if (texture !== null) {\n\t                        var pattern = _patterns[texture.id];\n\t                        if (pattern === undefined || pattern.version !== texture.version) {\n\t                            pattern = textureToPattern(texture);\n\t                            _patterns[texture.id] = pattern;\n\t                        }\n\t                        if (pattern.canvas !== undefined) {\n\t                            setFillStyle(pattern.canvas);\n\t                            var bitmap = texture.image;\n\t                            var ox = bitmap.width * texture.offset.x;\n\t                            var oy = bitmap.height * texture.offset.y;\n\t                            var sx = bitmap.width * texture.repeat.x;\n\t                            var sy = bitmap.height * texture.repeat.y;\n\t                            var cx = scaleX / sx;\n\t                            var cy = scaleY / sy;\n\t                            _context.save();\n\t                            _context.translate(v1.x, v1.y);\n\t                            if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                            _context.translate(-scaleX / 2, -scaleY / 2);\n\t                            _context.scale(cx, cy);\n\t                            _context.translate(-ox, -oy);\n\t                            _context.fillRect(ox, oy, sx, sy);\n\t                            _context.restore();\n\t                        }\n\t                    } else {\n\t                        setFillStyle(material.color.getStyle());\n\t                        _context.save();\n\t                        _context.translate(v1.x, v1.y);\n\t                        if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                        _context.scale(scaleX, -scaleY);\n\t                        _context.fillRect(-.5, -.5, 1, 1);\n\t                        _context.restore();\n\t                    }\n\t                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setFillStyle(material.color.getStyle());\n\t                    _context.save();\n\t                    _context.translate(v1.x, v1.y);\n\t                    if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                    _context.scale(scaleX, scaleY);\n\t                    material.program(_context);\n\t                    _context.restore();\n\t                }\n\t            }\n\t            function renderLine(v1, v2, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _context.beginPath();\n\t                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n\t                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n\t                if (material instanceof THREE.LineBasicMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    if (material.vertexColors !== THREE.VertexColors) {\n\t                        setStrokeStyle(material.color.getStyle());\n\t                    } else {\n\t                        var colorStyle1 = element.vertexColors[0].getStyle();\n\t                        var colorStyle2 = element.vertexColors[1].getStyle();\n\t                        if (colorStyle1 === colorStyle2) {\n\t                            setStrokeStyle(colorStyle1);\n\t                        } else {\n\t                            try {\n\t                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n\t                                grad.addColorStop(0, colorStyle1);\n\t                                grad.addColorStop(1, colorStyle2);\n\t                            } catch (exception) {\n\t                                grad = colorStyle1;\n\t                            }\n\t                            setStrokeStyle(grad);\n\t                        }\n\t                    }\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                } else if (material instanceof THREE.LineDashedMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setLineDash([ material.dashSize, material.gapSize ]);\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                    setLineDash([]);\n\t                }\n\t            }\n\t            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n\t                _this.info.render.vertices += 3;\n\t                _this.info.render.faces++;\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _v1x = v1.positionScreen.x;\n\t                _v1y = v1.positionScreen.y;\n\t                _v2x = v2.positionScreen.x;\n\t                _v2y = v2.positionScreen.y;\n\t                _v3x = v3.positionScreen.x;\n\t                _v3y = v3.positionScreen.y;\n\t                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n\t                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n\t                    _diffuseColor.copy(material.color);\n\t                    _emissiveColor.copy(material.emissive);\n\t                    if (material.vertexColors === THREE.FaceColors) {\n\t                        _diffuseColor.multiply(element.color);\n\t                    }\n\t                    _color.copy(_ambientLight);\n\t                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\t                    calculateLight(_centroid, element.normalModel, _color);\n\t                    _color.multiply(_diffuseColor).add(_emissiveColor);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n\t                    if (material.map !== null) {\n\t                        var mapping = material.map.mapping;\n\t                        if (mapping === THREE.UVMapping) {\n\t                            _uvs = element.uvs;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n\t                        }\n\t                    } else if (material.envMap !== null) {\n\t                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n\t                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n\t                            _uv1x = .5 * _normal.x + .5;\n\t                            _uv1y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n\t                            _uv2x = .5 * _normal.x + .5;\n\t                            _uv2y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n\t                            _uv3x = .5 * _normal.x + .5;\n\t                            _uv3y = .5 * _normal.y + .5;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n\t                        }\n\t                    } else {\n\t                        _color.copy(material.color);\n\t                        if (material.vertexColors === THREE.FaceColors) {\n\t                            _color.multiply(element.color);\n\t                        }\n\t                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                    }\n\t                } else if (material instanceof THREE.MeshNormalMaterial) {\n\t                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n\t                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else {\n\t                    _color.setRGB(1, 1, 1);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                }\n\t            }\n\t            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n\t                _context.beginPath();\n\t                _context.moveTo(x0, y0);\n\t                _context.lineTo(x1, y1);\n\t                _context.lineTo(x2, y2);\n\t                _context.closePath();\n\t            }\n\t            function strokePath(color, linewidth, linecap, linejoin) {\n\t                setLineWidth(linewidth);\n\t                setLineCap(linecap);\n\t                setLineJoin(linejoin);\n\t                setStrokeStyle(color.getStyle());\n\t                _context.stroke();\n\t                _elemBox.expandByScalar(linewidth * 2);\n\t            }\n\t            function fillPath(color) {\n\t                setFillStyle(color.getStyle());\n\t                _context.fill();\n\t            }\n\t            function textureToPattern(texture) {\n\t                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: texture.version\n\t                    };\n\t                }\n\t                var image = texture.image;\n\t                if (image.complete === false) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: 0\n\t                    };\n\t                }\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = image.width;\n\t                canvas.height = image.height;\n\t                var context = canvas.getContext(\"2d\");\n\t                context.setTransform(1, 0, 0, -1, 0, image.height);\n\t                context.drawImage(image, 0, 0);\n\t                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t                var repeat = \"no-repeat\";\n\t                if (repeatX === true && repeatY === true) {\n\t                    repeat = \"repeat\";\n\t                } else if (repeatX === true) {\n\t                    repeat = \"repeat-x\";\n\t                } else if (repeatY === true) {\n\t                    repeat = \"repeat-y\";\n\t                }\n\t                var pattern = _context.createPattern(canvas, repeat);\n\t                if (texture.onUpdate) texture.onUpdate(texture);\n\t                return {\n\t                    canvas: pattern,\n\t                    version: texture.version\n\t                };\n\t            }\n\t            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n\t                var pattern = _patterns[texture.id];\n\t                if (pattern === undefined || pattern.version !== texture.version) {\n\t                    pattern = textureToPattern(texture);\n\t                    _patterns[texture.id] = pattern;\n\t                }\n\t                if (pattern.canvas !== undefined) {\n\t                    setFillStyle(pattern.canvas);\n\t                } else {\n\t                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n\t                    _context.fill();\n\t                    return;\n\t                }\n\t                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n\t                u0 = (u0 + offsetX) * width;\n\t                v0 = (v0 + offsetY) * height;\n\t                u1 = (u1 + offsetX) * width;\n\t                v1 = (v1 + offsetY) * height;\n\t                u2 = (u2 + offsetX) * width;\n\t                v2 = (v2 + offsetY) * height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                if (det === 0) return;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.fill();\n\t                _context.restore();\n\t            }\n\t            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n\t                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n\t                u0 *= width;\n\t                v0 *= height;\n\t                u1 *= width;\n\t                v1 *= height;\n\t                u2 *= width;\n\t                v2 *= height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.clip();\n\t                _context.drawImage(image, 0, 0);\n\t                _context.restore();\n\t            }\n\t            function expand(v1, v2, pixels) {\n\t                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n\t                if (det === 0) return;\n\t                idet = pixels / Math.sqrt(det);\n\t                x *= idet;\n\t                y *= idet;\n\t                v2.x += x;\n\t                v2.y += y;\n\t                v1.x -= x;\n\t                v1.y -= y;\n\t            }\n\t            function setOpacity(value) {\n\t                if (_contextGlobalAlpha !== value) {\n\t                    _context.globalAlpha = value;\n\t                    _contextGlobalAlpha = value;\n\t                }\n\t            }\n\t            function setBlending(value) {\n\t                if (_contextGlobalCompositeOperation !== value) {\n\t                    if (value === THREE.NormalBlending) {\n\t                        _context.globalCompositeOperation = \"source-over\";\n\t                    } else if (value === THREE.AdditiveBlending) {\n\t                        _context.globalCompositeOperation = \"lighter\";\n\t                    } else if (value === THREE.SubtractiveBlending) {\n\t                        _context.globalCompositeOperation = \"darker\";\n\t                    }\n\t                    _contextGlobalCompositeOperation = value;\n\t                }\n\t            }\n\t            function setLineWidth(value) {\n\t                if (_contextLineWidth !== value) {\n\t                    _context.lineWidth = value;\n\t                    _contextLineWidth = value;\n\t                }\n\t            }\n\t            function setLineCap(value) {\n\t                if (_contextLineCap !== value) {\n\t                    _context.lineCap = value;\n\t                    _contextLineCap = value;\n\t                }\n\t            }\n\t            function setLineJoin(value) {\n\t                if (_contextLineJoin !== value) {\n\t                    _context.lineJoin = value;\n\t                    _contextLineJoin = value;\n\t                }\n\t            }\n\t            function setStrokeStyle(value) {\n\t                if (_contextStrokeStyle !== value) {\n\t                    _context.strokeStyle = value;\n\t                    _contextStrokeStyle = value;\n\t                }\n\t            }\n\t            function setFillStyle(value) {\n\t                if (_contextFillStyle !== value) {\n\t                    _context.fillStyle = value;\n\t                    _contextFillStyle = value;\n\t                }\n\t            }\n\t            function setLineDash(value) {\n\t                if (_contextLineDash.length !== value.length) {\n\t                    _context.setLineDash(value);\n\t                    _contextLineDash = value;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        THREE.RenderableObject = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableFace = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.v3 = new THREE.RenderableVertex();\n\t            this.normalModel = new THREE.Vector3();\n\t            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t            this.vertexNormalsLength = 0;\n\t            this.color = new THREE.Color();\n\t            this.material = null;\n\t            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableVertex = function() {\n\t            this.position = new THREE.Vector3();\n\t            this.positionWorld = new THREE.Vector3();\n\t            this.positionScreen = new THREE.Vector4();\n\t            this.visible = true;\n\t        };\n\t        THREE.RenderableVertex.prototype.copy = function(vertex) {\n\t            this.positionWorld.copy(vertex.positionWorld);\n\t            this.positionScreen.copy(vertex.positionScreen);\n\t        };\n\t        THREE.RenderableLine = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t            this.material = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableSprite = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.x = 0;\n\t            this.y = 0;\n\t            this.z = 0;\n\t            this.rotation = 0;\n\t            this.scale = new THREE.Vector2();\n\t            this.material = null;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.Projector = function() {\n\t            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n\t                objects: [],\n\t                lights: [],\n\t                elements: []\n\t            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n\t            this.projectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n\t                vector.project(camera);\n\t            };\n\t            this.unprojectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n\t                vector.unproject(camera);\n\t            };\n\t            this.pickingRay = function(vector, camera) {\n\t                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n\t            };\n\t            var RenderList = function() {\n\t                var normals = [];\n\t                var uvs = [];\n\t                var object = null;\n\t                var material = null;\n\t                var normalMatrix = new THREE.Matrix3();\n\t                function setObject(value) {\n\t                    object = value;\n\t                    material = object.material;\n\t                    normalMatrix.getNormalMatrix(object.matrixWorld);\n\t                    normals.length = 0;\n\t                    uvs.length = 0;\n\t                }\n\t                function projectVertex(vertex) {\n\t                    var position = vertex.position;\n\t                    var positionWorld = vertex.positionWorld;\n\t                    var positionScreen = vertex.positionScreen;\n\t                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n\t                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n\t                    var invW = 1 / positionScreen.w;\n\t                    positionScreen.x *= invW;\n\t                    positionScreen.y *= invW;\n\t                    positionScreen.z *= invW;\n\t                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n\t                }\n\t                function pushVertex(x, y, z) {\n\t                    _vertex = getNextVertexInPool();\n\t                    _vertex.position.set(x, y, z);\n\t                    projectVertex(_vertex);\n\t                }\n\t                function pushNormal(x, y, z) {\n\t                    normals.push(x, y, z);\n\t                }\n\t                function pushUv(x, y) {\n\t                    uvs.push(x, y);\n\t                }\n\t                function checkTriangleVisibility(v1, v2, v3) {\n\t                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n\t                    _points3[0] = v1.positionScreen;\n\t                    _points3[1] = v2.positionScreen;\n\t                    _points3[2] = v3.positionScreen;\n\t                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n\t                }\n\t                function checkBackfaceCulling(v1, v2, v3) {\n\t                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n\t                }\n\t                function pushLine(a, b) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    _line = getNextLineInPool();\n\t                    _line.id = object.id;\n\t                    _line.v1.copy(v1);\n\t                    _line.v2.copy(v2);\n\t                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n\t                    _line.renderOrder = object.renderOrder;\n\t                    _line.material = object.material;\n\t                    _renderData.elements.push(_line);\n\t                }\n\t                function pushTriangle(a, b, c) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    var v3 = _vertexPool[c];\n\t                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n\t                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n\t                        _face = getNextFaceInPool();\n\t                        _face.id = object.id;\n\t                        _face.v1.copy(v1);\n\t                        _face.v2.copy(v2);\n\t                        _face.v3.copy(v3);\n\t                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                        _face.renderOrder = object.renderOrder;\n\t                        _face.normalModel.fromArray(normals, a * 3);\n\t                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n\t                        for (var i = 0; i < 3; i++) {\n\t                            var normal = _face.vertexNormalsModel[i];\n\t                            normal.fromArray(normals, arguments[i] * 3);\n\t                            normal.applyMatrix3(normalMatrix).normalize();\n\t                            var uv = _face.uvs[i];\n\t                            uv.fromArray(uvs, arguments[i] * 2);\n\t                        }\n\t                        _face.vertexNormalsLength = 3;\n\t                        _face.material = object.material;\n\t                        _renderData.elements.push(_face);\n\t                    }\n\t                }\n\t                return {\n\t                    setObject: setObject,\n\t                    projectVertex: projectVertex,\n\t                    checkTriangleVisibility: checkTriangleVisibility,\n\t                    checkBackfaceCulling: checkBackfaceCulling,\n\t                    pushVertex: pushVertex,\n\t                    pushNormal: pushNormal,\n\t                    pushUv: pushUv,\n\t                    pushLine: pushLine,\n\t                    pushTriangle: pushTriangle\n\t                };\n\t            };\n\t            var renderList = new RenderList();\n\t            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n\t                _faceCount = 0;\n\t                _lineCount = 0;\n\t                _spriteCount = 0;\n\t                _renderData.elements.length = 0;\n\t                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n\t                if (camera.parent === null) camera.updateMatrixWorld();\n\t                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n\t                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\t                _frustum.setFromMatrix(_viewProjectionMatrix);\n\t                _objectCount = 0;\n\t                _renderData.objects.length = 0;\n\t                _renderData.lights.length = 0;\n\t                scene.traverseVisible(function(object) {\n\t                    if (object instanceof THREE.Light) {\n\t                        _renderData.lights.push(object);\n\t                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n\t                        var material = object.material;\n\t                        if (material.visible === false) return;\n\t                        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n\t                            _object = getNextObjectInPool();\n\t                            _object.id = object.id;\n\t                            _object.object = object;\n\t                            _vector3.setFromMatrixPosition(object.matrixWorld);\n\t                            _vector3.applyProjection(_viewProjectionMatrix);\n\t                            _object.z = _vector3.z;\n\t                            _object.renderOrder = object.renderOrder;\n\t                            _renderData.objects.push(_object);\n\t                        }\n\t                    }\n\t                });\n\t                if (sortObjects === true) {\n\t                    _renderData.objects.sort(painterSort);\n\t                }\n\t                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n\t                    var object = _renderData.objects[o].object;\n\t                    var geometry = object.geometry;\n\t                    renderList.setObject(object);\n\t                    _modelMatrix = object.matrixWorld;\n\t                    _vertexCount = 0;\n\t                    if (object instanceof THREE.Mesh) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            var groups = geometry.groups;\n\t                            if (attributes.position === undefined) continue;\n\t                            var positions = attributes.position.array;\n\t                            for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                            }\n\t                            if (attributes.normal !== undefined) {\n\t                                var normals = attributes.normal.array;\n\t                                for (var i = 0, l = normals.length; i < l; i += 3) {\n\t                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n\t                                }\n\t                            }\n\t                            if (attributes.uv !== undefined) {\n\t                                var uvs = attributes.uv.array;\n\t                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n\t                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n\t                                }\n\t                            }\n\t                            if (geometry.index !== null) {\n\t                                var indices = geometry.index.array;\n\t                                if (groups.length > 0) {\n\t                                    for (var o = 0; o < groups.length; o++) {\n\t                                        var group = groups[o];\n\t                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n\t                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n\t                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n\t                                    renderList.pushTriangle(i, i + 1, i + 2);\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            var vertices = geometry.vertices;\n\t                            var faces = geometry.faces;\n\t                            var faceVertexUvs = geometry.faceVertexUvs[0];\n\t                            _normalMatrix.getNormalMatrix(_modelMatrix);\n\t                            var material = object.material;\n\t                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n\t                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n\t                                var vertex = vertices[v];\n\t                                _vector3.copy(vertex);\n\t                                if (material.morphTargets === true) {\n\t                                    var morphTargets = geometry.morphTargets;\n\t                                    var morphInfluences = object.morphTargetInfluences;\n\t                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n\t                                        var influence = morphInfluences[t];\n\t                                        if (influence === 0) continue;\n\t                                        var target = morphTargets[t];\n\t                                        var targetVertex = target.vertices[v];\n\t                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n\t                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n\t                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n\t                                    }\n\t                                }\n\t                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n\t                            }\n\t                            for (var f = 0, fl = faces.length; f < fl; f++) {\n\t                                var face = faces[f];\n\t                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n\t                                if (material === undefined) continue;\n\t                                var side = material.side;\n\t                                var v1 = _vertexPool[face.a];\n\t                                var v2 = _vertexPool[face.b];\n\t                                var v3 = _vertexPool[face.c];\n\t                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n\t                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n\t                                if (side !== THREE.DoubleSide) {\n\t                                    if (side === THREE.FrontSide && visible === false) continue;\n\t                                    if (side === THREE.BackSide && visible === true) continue;\n\t                                }\n\t                                _face = getNextFaceInPool();\n\t                                _face.id = object.id;\n\t                                _face.v1.copy(v1);\n\t                                _face.v2.copy(v2);\n\t                                _face.v3.copy(v3);\n\t                                _face.normalModel.copy(face.normal);\n\t                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                    _face.normalModel.negate();\n\t                                }\n\t                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                var faceVertexNormals = face.vertexNormals;\n\t                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n\t                                    var normalModel = _face.vertexNormalsModel[n];\n\t                                    normalModel.copy(faceVertexNormals[n]);\n\t                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                        normalModel.negate();\n\t                                    }\n\t                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                }\n\t                                _face.vertexNormalsLength = faceVertexNormals.length;\n\t                                var vertexUvs = faceVertexUvs[f];\n\t                                if (vertexUvs !== undefined) {\n\t                                    for (var u = 0; u < 3; u++) {\n\t                                        _face.uvs[u].copy(vertexUvs[u]);\n\t                                    }\n\t                                }\n\t                                _face.color = face.color;\n\t                                _face.material = material;\n\t                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                                _face.renderOrder = object.renderOrder;\n\t                                _renderData.elements.push(_face);\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Line) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            if (attributes.position !== undefined) {\n\t                                var positions = attributes.position.array;\n\t                                for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                                }\n\t                                if (geometry.index !== null) {\n\t                                    var indices = geometry.index.array;\n\t                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n\t                                        renderList.pushLine(indices[i], indices[i + 1]);\n\t                                    }\n\t                                } else {\n\t                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n\t                                        renderList.pushLine(i, i + 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n\t                            var vertices = object.geometry.vertices;\n\t                            if (vertices.length === 0) continue;\n\t                            v1 = getNextVertexInPool();\n\t                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n\t                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n\t                                v1 = getNextVertexInPool();\n\t                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n\t                                if ((v + 1) % step > 0) continue;\n\t                                v2 = _vertexPool[_vertexCount - 2];\n\t                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n\t                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n\t                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n\t                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n\t                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n\t                                    _line = getNextLineInPool();\n\t                                    _line.id = object.id;\n\t                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n\t                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n\t                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n\t                                    _line.renderOrder = object.renderOrder;\n\t                                    _line.material = object.material;\n\t                                    if (object.material.vertexColors === THREE.VertexColors) {\n\t                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n\t                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n\t                                    }\n\t                                    _renderData.elements.push(_line);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Sprite) {\n\t                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n\t                        _vector4.applyMatrix4(_viewProjectionMatrix);\n\t                        var invW = 1 / _vector4.w;\n\t                        _vector4.z *= invW;\n\t                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n\t                            _sprite = getNextSpriteInPool();\n\t                            _sprite.id = object.id;\n\t                            _sprite.x = _vector4.x * invW;\n\t                            _sprite.y = _vector4.y * invW;\n\t                            _sprite.z = _vector4.z;\n\t                            _sprite.renderOrder = object.renderOrder;\n\t                            _sprite.object = object;\n\t                            _sprite.rotation = object.rotation;\n\t                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n\t                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n\t                            _sprite.material = object.material;\n\t                            _renderData.elements.push(_sprite);\n\t                        }\n\t                    }\n\t                }\n\t                if (sortElements === true) {\n\t                    _renderData.elements.sort(painterSort);\n\t                }\n\t                return _renderData;\n\t            };\n\t            function getNextObjectInPool() {\n\t                if (_objectCount === _objectPoolLength) {\n\t                    var object = new THREE.RenderableObject();\n\t                    _objectPool.push(object);\n\t                    _objectPoolLength++;\n\t                    _objectCount++;\n\t                    return object;\n\t                }\n\t                return _objectPool[_objectCount++];\n\t            }\n\t            function getNextVertexInPool() {\n\t                if (_vertexCount === _vertexPoolLength) {\n\t                    var vertex = new THREE.RenderableVertex();\n\t                    _vertexPool.push(vertex);\n\t                    _vertexPoolLength++;\n\t                    _vertexCount++;\n\t                    return vertex;\n\t                }\n\t                return _vertexPool[_vertexCount++];\n\t            }\n\t            function getNextFaceInPool() {\n\t                if (_faceCount === _facePoolLength) {\n\t                    var face = new THREE.RenderableFace();\n\t                    _facePool.push(face);\n\t                    _facePoolLength++;\n\t                    _faceCount++;\n\t                    return face;\n\t                }\n\t                return _facePool[_faceCount++];\n\t            }\n\t            function getNextLineInPool() {\n\t                if (_lineCount === _linePoolLength) {\n\t                    var line = new THREE.RenderableLine();\n\t                    _linePool.push(line);\n\t                    _linePoolLength++;\n\t                    _lineCount++;\n\t                    return line;\n\t                }\n\t                return _linePool[_lineCount++];\n\t            }\n\t            function getNextSpriteInPool() {\n\t                if (_spriteCount === _spritePoolLength) {\n\t                    var sprite = new THREE.RenderableSprite();\n\t                    _spritePool.push(sprite);\n\t                    _spritePoolLength++;\n\t                    _spriteCount++;\n\t                    return sprite;\n\t                }\n\t                return _spritePool[_spriteCount++];\n\t            }\n\t            function painterSort(a, b) {\n\t                if (a.renderOrder !== b.renderOrder) {\n\t                    return a.renderOrder - b.renderOrder;\n\t                } else if (a.z !== b.z) {\n\t                    return b.z - a.z;\n\t                } else if (a.id !== b.id) {\n\t                    return a.id - b.id;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            }\n\t            function clipLine(s1, s2) {\n\t                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n\t                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n\t                    return true;\n\t                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n\t                    return false;\n\t                } else {\n\t                    if (bc1near < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n\t                    } else if (bc2near < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n\t                    }\n\t                    if (bc1far < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n\t                    } else if (bc2far < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n\t                    }\n\t                    if (alpha2 < alpha1) {\n\t                        return false;\n\t                    } else {\n\t                        s1.lerp(s2, alpha1);\n\t                        s2.lerp(s1, 1 - alpha2);\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(10);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Widget_1 = __webpack_require__(17);\n\t        var TrendsManager_1 = __webpack_require__(18);\n\t        var Screen_1 = __webpack_require__(21);\n\t        var AxisMarks_1 = __webpack_require__(22);\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var deps_1 = __webpack_require__(3);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            SCROLL_STOP: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var ChartState = function() {\n\t            function ChartState(initialState, widgetsClasses, plugins) {\n\t                if (widgetsClasses === void 0) {\n\t                    widgetsClasses = {};\n\t                }\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.data = {\n\t                    prevState: {},\n\t                    $el: null,\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        gridMinSize: 100,\n\t                        autoScroll: true,\n\t                        marks: []\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        gridMinSize: 50,\n\t                        marks: []\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: .25,\n\t                        zoomEase: Linear.easeNone,\n\t                        scrollSpeed: .5,\n\t                        scrollEase: Linear.easeNone,\n\t                        autoScrollSpeed: 1,\n\t                        autoScrollEase: Linear.easeNone\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    backgroundColor: 0,\n\t                    backgroundOpacity: 1,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20\n\t                };\n\t                this.widgetsClasses = {};\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n\t                this.widgetsClasses = widgetsClasses;\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.initListeners();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            ChartState.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.data = {};\n\t            };\n\t            ChartState.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            ChartState.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            ChartState.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            ChartState.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onScrollStop = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t            };\n\t            ChartState.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            ChartState.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            ChartState.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            ChartState.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            ChartState.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            ChartState.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var stateData = this.data;\n\t                var changedProps = {};\n\t                for (var key in newState) {\n\t                    if (stateData[key] !== newState[key]) {\n\t                        changedProps[key] = newState[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.data.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            ChartState.prototype.recalculateState = function(changedProps) {\n\t                var data = this.data;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                if (changedProps.widgets || !data.widgets) {\n\t                    patch.widgets = {};\n\t                    var widgetsOptions = data.widgets || {};\n\t                    for (var widgetName in this.widgetsClasses) {\n\t                        var WidgetClass = this.widgetsClasses[widgetName];\n\t                        var userOptions = widgetsOptions[widgetName] || {};\n\t                        var defaultOptions = WidgetClass.getDefaultOptions() || Widget_1.ChartWidget.getDefaultOptions();\n\t                        patch.widgets[widgetName] = Utils_1.Utils.deepMerge(defaultOptions, userOptions);\n\t                    }\n\t                }\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.data = Utils_1.Utils.deepMerge(this.data, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            ChartState.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            ChartState.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.data;\n\t                var prevState = this.data.prevState;\n\t                Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.data.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            ChartState.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    PluginClass.pluginWidgets.forEach(function(PluginWidget) {\n\t                        return _this.widgetsClasses[PluginWidget.widgetName] = PluginWidget;\n\t                    });\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChartState(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            ChartState.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            ChartState.prototype.initListeners = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t            };\n\t            ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t            };\n\t            ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            ChartState.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.data.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            ChartState.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.data.width / (scaleFactor * zoom);\n\t                var nextRange = this.data.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            ChartState.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.data.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            ChartState.prototype.scrollToEnd = function() {\n\t                var _this = this;\n\t                var state = this.data;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            ChartState.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            ChartState.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            ChartState.prototype.getValueOnXAxis = function(x) {\n\t                return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            ChartState.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            ChartState.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            ChartState.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            ChartState.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            ChartState.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            ChartState.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            ChartState.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            ChartState.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.data.width);\n\t            };\n\t            ChartState.prototype.getPaddingRight = function() {\n\t                return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n\t            };\n\t            return ChartState;\n\t        }();\n\t        exports.ChartState = ChartState;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(3);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(3);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            /**!\r\n\t\t     * @preserve $.parseColor\r\n\t\t     * Copyright 2011 THEtheChad Elliott\r\n\t\t     * Released under the MIT and GPL licenses.\r\n\t\t     */\n\t            Utils.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by $.parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            Utils.getHexColor = function(str) {\n\t                var rgb = this.parseColor(str);\n\t                return (rgb[0] << 8 * 2) + (rgb[1] << 8) + rgb[2];\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget(chartState) {\n\t                this.unsubscribers = [];\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            ChartWidget.prototype.bindEvents = function() {};\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartWidget.getDefaultOptions = function() {\n\t                return {\n\t                    enabled: true\n\t                };\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(19);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t                this.bindEvents();\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                });\n\t            };\n\t            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                var _this = this;\n\t                var _loop_1 = function(trendName) {\n\t                    this_1.trends[trendName].segments.onRebuild(function() {\n\t                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                    });\n\t                };\n\t                var this_1 = this;\n\t                for (var trendName in this.trends) {\n\t                    _loop_1(trendName);\n\t                }\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var TrendSegments_1 = __webpack_require__(20);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var deps_1 = __webpack_require__(3);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var DEFAULT_OPTIONS = {\n\t            enabled: true,\n\t            type: TREND_TYPE.LINE,\n\t            data: [],\n\t            maxSegmentLength: 1e3,\n\t            lineWidth: 2,\n\t            lineColor: 16777215,\n\t            hasGradient: true,\n\t            hasBeacon: false,\n\t            settingsForTypes: {\n\t                CANDLE: {\n\t                    minSegmentLengthInPx: 20,\n\t                    maxSegmentLengthInPx: 40\n\t                },\n\t                LINE: {\n\t                    minSegmentLengthInPx: 2,\n\t                    maxSegmentLengthInPx: 10\n\t                }\n\t            }\n\t        };\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chartState = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(DEFAULT_OPTIONS, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.onInitialStateApplied = function() {\n\t                this.segments = new TrendSegments_1.TrendSegments(this.chartState, this);\n\t            };\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chartState;\n\t                chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateApplied();\n\t                });\n\t                chartState.onScrollStop(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chartState.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chartState.data.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chartState.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chartState;\n\t                var minXVal = chartState.data.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(19);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegments = function() {\n\t            function TrendSegments(chartState, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t                this.bindEvents();\n\t            }\n\t            TrendSegments.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.chartState.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                });\n\t                this.chartState.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            TrendSegments.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegments.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegments.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegments.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegments.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegments.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegments.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegments.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, from - displayedRange, \"startXVal\");\n\t                this.lastDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, to + displayedRange, \"endXVal\");\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegments.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegments.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegments.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegments.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegments.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegments.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegments.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegments.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegments.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegments.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegments;\n\t        }();\n\t        exports.TrendSegments = TrendSegments;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.currentScrollX = {\n\t                    x: 0\n\t                };\n\t                this.currentScrollY = {\n\t                    y: 0\n\t                };\n\t                this.currentZoomX = {\n\t                    val: 1\n\t                };\n\t                this.currentZoomY = {\n\t                    val: 1\n\t                };\n\t                this.chartState = chartState;\n\t                var _a = chartState.data, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chartState.data, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"zoomFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"scrollFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"transformationFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                this.ee.emit(\"transformationFrame\", options);\n\t                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t                    this.ee.emit(\"scrollFrame\", options);\n\t                }\n\t                if (options.zoomX != void 0 || options.zoomY != void 0) {\n\t                    this.ee.emit(\"zoomFrame\", options);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.scrollXAnimation && this.scrollXAnimation.kill();\n\t                this.scrollYAnimation && this.scrollYAnimation.kill();\n\t                this.zoomXAnimation && this.zoomXAnimation.kill();\n\t                this.zoomYAnimation && this.zoomYAnimation.kill();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var isDragMode = state.data.cursor.dragMode;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled && !isDragMode;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n\t                var range = state.data.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollX.x = this.options.scrollX;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollX: _this.currentScrollX.x\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t                        x: targetX,\n\t                        ease: ease\n\t                    });\n\t                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollX.x = targetX;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t                var range = state.data.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollY.y = this.options.scrollY;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollY: _this.currentScrollY.y\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t                        y: targetY,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollY.y = targetY;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.data.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomX: _this.currentZoomX.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomX.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.data.yAxis.range.zoom;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomY: _this.currentZoomY.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomY.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chartState.data.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chartState.data.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chartState.data.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chartState.data.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(17);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget(state) {\n\t                var _this = this;\n\t                _super.call(this, state);\n\t                this.isDestroyed = false;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(state.screen.options.scrollX, state.screen.options.scrollY);\n\t            }\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                }\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                    ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chartState.data.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chartState.data.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(17);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget(chartState) {\n\t                _super.call(this, chartState);\n\t                this.isDestroyed = false;\n\t                var _a = chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.gridMinSize) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.gridMinSize) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t            }\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chartState.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chartState.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chartState.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chartState.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    opacity: .1,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chartState;\n\t                var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chartState;\n\t                var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.gridMinSize;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Trend_1 = __webpack_require__(19);\n\t        var TrendsLoadingWidget = function(_super) {\n\t            __extends(TrendsLoadingWidget, _super);\n\t            function TrendsLoadingWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLoading;\n\t            };\n\t            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t            return TrendsLoadingWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t        var TrendLoading = function(_super) {\n\t            __extends(TrendLoading, _super);\n\t            function TrendLoading(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.isActive = false;\n\t                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendLoading.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                this.deactivate();\n\t            }\n\t            TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n\t                return trendOptions.enabled && chartState.data.animations.enabled;\n\t            };\n\t            TrendLoading.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendLoading.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.onPrependRequest(function() {\n\t                    return _this.activate();\n\t                }));\n\t            };\n\t            TrendLoading.prototype.prependData = function() {\n\t                this.deactivate();\n\t            };\n\t            TrendLoading.prototype.activate = function() {\n\t                var mesh = this.mesh;\n\t                mesh.material.opacity = 1;\n\t                mesh.rotation.z = 0;\n\t                var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                    z: Math.PI * 2\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animation.restart();\n\t                });\n\t                this.animation = animation;\n\t                this.isActive = true;\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.deactivate = function() {\n\t                this.animation && this.animation.kill();\n\t                this.mesh.material.opacity = 0;\n\t                this.isActive = false;\n\t            };\n\t            TrendLoading.createTexture = function() {\n\t                var h = 64, w = 64;\n\t                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                    ctx.lineWidth = 5;\n\t                    var center = h / 2;\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                    ctx.stroke();\n\t                });\n\t            };\n\t            TrendLoading.prototype.onZoomFrame = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.updatePosition = function() {\n\t                if (!this.isActive) return;\n\t                var trend = this.trend;\n\t                var segment = trend.segments.getStartSegment();\n\t                var x, y;\n\t                if (trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n\t                    x = segment.currentAnimationState.startXVal;\n\t                    y = segment.currentAnimationState.startYVal;\n\t                } else {\n\t                    x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                    y = segment.currentAnimationState.yVal;\n\t                }\n\t                var pointVector = this.chartState.screen.getPointOnChart(x, y);\n\t                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t            };\n\t            return TrendLoading;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLoading = TrendLoading;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(17);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget(state) {\n\t                _super.call(this, state);\n\t                this.widgets = {};\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t            }\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chartState.data.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chartState.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chartState, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chartState, trendName) {\n\t                this.chartState = chartState;\n\t                this.trendName = trendName;\n\t                this.unsubscribers = [];\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unsubscribers; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segments.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chartState.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unsubscriber) {\n\t                this.unsubscribers.push(unsubscriber);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(17);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Line = THREE.Line;\n\t        var Mesh = THREE.Mesh;\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var AxisMarksWidget = function(_super) {\n\t            __extends(AxisMarksWidget, _super);\n\t            function AxisMarksWidget(chartState) {\n\t                _super.call(this, chartState);\n\t                this.axisMarksWidgets = [];\n\t                this.object3D = new Object3D();\n\t                var xAxisMarks = chartState.xAxisMarks, yAxisMarks = chartState.yAxisMarks;\n\t                var items = xAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t                items = yAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t            }\n\t            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n\t                var axisMarkWidget = new AxisMarkWidget(this.chartState, axisMark);\n\t                this.axisMarksWidgets.push(axisMarkWidget);\n\t                this.object3D.add(axisMarkWidget.getObject3D());\n\t            };\n\t            AxisMarksWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.chartState.screen.onTransformationFrame(function() {\n\t                    return _this.updateMarksPositions();\n\t                }), this.chartState.onResize(function() {\n\t                    return _this.updateMarksPositions();\n\t                }));\n\t            };\n\t            AxisMarksWidget.prototype.updateMarksPositions = function() {\n\t                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n\t                    var widget = _a[_i];\n\t                    widget.updatePosition();\n\t                }\n\t            };\n\t            AxisMarksWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarksWidget.widgetName = \"AxisMarks\";\n\t            return AxisMarksWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisMarksWidget = AxisMarksWidget;\n\t        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n\t            var axisMark = axisMarkWidget.axisMark;\n\t            ctx.fillStyle = axisMark.options.lineColor;\n\t            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n\t            var xCoord = 15;\n\t            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n\t                ctx.textAlign = \"end\";\n\t                xCoord = axisMarkWidget.indicatorWidth;\n\t            }\n\t            ctx.fillText(axisMark.options.title, xCoord, 20);\n\t            if (!axisMark.options.showValue) return;\n\t            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n\t            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n\t        };\n\t        var INDICATOR_POS_Z = .1;\n\t        var AxisMarkWidget = function() {\n\t            function AxisMarkWidget(chartState, axisMark) {\n\t                this.indicatorWidth = 128;\n\t                this.indicatorHeight = 64;\n\t                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n\t                this.chartState = chartState;\n\t                this.axisMark = axisMark;\n\t                this.axisType = axisMark.axisType;\n\t                this.frameValue = axisMark.options.value;\n\t                this.object3D = new Object3D();\n\t                this.object3D.position.setZ(-.1);\n\t                this.line = this.createLine();\n\t                this.object3D.add(this.line);\n\t                this.indicator = this.createIndicator();\n\t                this.object3D.add(this.indicator);\n\t                this.renderIndicator();\n\t                this.updatePosition();\n\t                this.bindEvents();\n\t            }\n\t            AxisMarkWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarkWidget.prototype.createLine = function() {\n\t                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n\t                var lineGeometry = new Geometry();\n\t                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\t                return new Line(lineGeometry, new LineBasicMaterial({\n\t                    color: Utils_1.Utils.getHexColor(lineColor),\n\t                    linewidth: lineWidth\n\t                }));\n\t            };\n\t            AxisMarkWidget.prototype.createIndicator = function() {\n\t                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n\t            };\n\t            AxisMarkWidget.prototype.renderIndicator = function() {\n\t                var texture = this.indicator.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisMarkWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.axisMark.onDisplayedValueChange(function() {\n\t                    return _this.renderIndicator();\n\t                });\n\t                this.axisMark.onValueChange(function() {\n\t                    return _this.onValueChangeHandler();\n\t                });\n\t            };\n\t            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n\t                var _this = this;\n\t                if (this.moveAnimation) this.moveAnimation.kill();\n\t                var animations = this.chartState.data.animations;\n\t                var targetValue = this.axisMark.options.value;\n\t                var cb = function() {\n\t                    _this.updatePosition();\n\t                };\n\t                if (animations.enabled) {\n\t                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n\t                        frameValue: targetValue,\n\t                        ease: animations.trendChangeEase\n\t                    });\n\t                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.frameValue = targetValue;\n\t                    cb();\n\t                }\n\t            };\n\t            AxisMarkWidget.prototype.updatePosition = function() {\n\t                var chartState = this.chartState;\n\t                var screen = chartState.screen;\n\t                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n\t                var lineGeometry = this.line.geometry;\n\t                var hasStickMode = this.axisMark.options.stickToEdges;\n\t                var _a = this.chartState.data, width = _a.width, height = _a.height;\n\t                if (isXAxis) {\n\t                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n\t                    this.object3D.position.y = screen.getBottom();\n\t                    lineGeometry.vertices[1].setY(height);\n\t                    this.indicator.position.set(this.indicatorWidth / 2, chartState.data.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n\t                } else {\n\t                    var val = this.frameValue;\n\t                    var bottomVal = screen.getBottomVal();\n\t                    var topVal = screen.getTopVal();\n\t                    var needToStickOnTop = hasStickMode && val > topVal;\n\t                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n\t                    var centerYVal = screen.getCenterYVal();\n\t                    this.object3D.position.x = screen.getLeft();\n\t                    if (needToStickOnTop) {\n\t                        this.object3D.position.y = screen.getTop();\n\t                    } else if (needToStickOnBottom) {\n\t                        this.object3D.position.y = screen.getBottom();\n\t                    } else {\n\t                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n\t                    }\n\t                    lineGeometry.vertices[1].setX(width);\n\t                    var indicatorPosY = val > centerYVal ? -35 : 10;\n\t                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n\t                }\n\t                lineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            AxisMarkWidget.typeName = \"simple\";\n\t            return AxisMarkWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(17);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Vector3 = THREE.Vector3;\n\t        var BorderWidget = function(_super) {\n\t            __extends(BorderWidget, _super);\n\t            function BorderWidget(chartState) {\n\t                _super.call(this, chartState);\n\t                var _a = chartState.data, width = _a.width, height = _a.height;\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    opacity: 0,\n\t                    transparent: true\n\t                });\n\t                geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, height, 0), new Vector3(0, height, 0), new Vector3(width, height, 0), new Vector3(width, height, 0), new Vector3(width, 0, 0), new Vector3(width, 0, 0), new Vector3(0, 0, 0), new Vector3(width / 2, height, 0), new Vector3(width / 2, 0, 0));\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t            }\n\t            BorderWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            BorderWidget.widgetName = \"Border\";\n\t            return BorderWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.BorderWidget = BorderWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Mesh = THREE.Mesh;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Color = THREE.Color;\n\t        var CANVAS_WIDTH = 128;\n\t        var CANVAS_HEIGHT = 64;\n\t        var OFFSET_X = 15;\n\t        var TrendsIndicatorWidget = function(_super) {\n\t            __extends(TrendsIndicatorWidget, _super);\n\t            function TrendsIndicatorWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendIndicator;\n\t            };\n\t            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t            return TrendsIndicatorWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t        var TrendIndicator = function(_super) {\n\t            __extends(TrendIndicator, _super);\n\t            function TrendIndicator(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.initObject();\n\t                this.onTrendChange();\n\t            }\n\t            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasIndicator;\n\t            };\n\t            TrendIndicator.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendIndicator.prototype.onTrendChange = function() {\n\t                var trendData = this.trend.getData();\n\t                var lastItem = trendData[trendData.length - 1];\n\t                var texture = this.mesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                texture.needsUpdate = true;\n\t            };\n\t            TrendIndicator.prototype.initObject = function() {\n\t                var color = new Color(this.trend.getOptions().lineColor);\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"15px Arial\";\n\t                    ctx.fillStyle = color.getStyle();\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t            };\n\t            TrendIndicator.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                this.segment = segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.updatePosition = function() {\n\t                var state = this.chartState;\n\t                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                var screenWidth = state.data.width;\n\t                var x = endPointVector.x + OFFSET_X;\n\t                var y = endPointVector.y;\n\t                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                if (indicatorIsOutOfScreen) {\n\t                    if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n\t                    if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                    y -= 25;\n\t                }\n\t                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t            };\n\t            return TrendIndicator;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendIndicator = TrendIndicator;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(19);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var MAX_DISPLAYED_SEGMENTS = 2e3;\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segments.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < MAX_DISPLAYED_SEGMENTS; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segments.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(19);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segments.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chartState.data;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Trend_1 = __webpack_require__(19);\n\t        var TrendsBeaconWidget = function(_super) {\n\t            __extends(TrendsBeaconWidget, _super);\n\t            function TrendsBeaconWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendBeacon;\n\t            };\n\t            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t            return TrendsBeaconWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t        var TrendBeacon = function(_super) {\n\t            __extends(TrendBeacon, _super);\n\t            function TrendBeacon(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.initObject();\n\t                if (state.data.animations.enabled) {\n\t                    this.animate();\n\t                }\n\t                this.updatePosition();\n\t            }\n\t            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendBeacon.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendBeacon.prototype.onTrendChange = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.chartState.onScroll(function() {\n\t                    return _this.updatePosition();\n\t                }));\n\t                this.bindEvent(this.chartState.onChange(function(changedProps) {\n\t                    return _this.onStateChange(changedProps);\n\t                }));\n\t                this.bindEvent(this.chartState.onDestroy(function() {\n\t                    return _this.stopAnimation();\n\t                }));\n\t            };\n\t            TrendBeacon.prototype.initObject = function() {\n\t                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                light.scale.set(.2, .2, 1);\n\t                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture()\n\t                })));\n\t                this.segment = this.trend.segments.getEndSegment();\n\t            };\n\t            TrendBeacon.prototype.animate = function() {\n\t                var _this = this;\n\t                this.animated = true;\n\t                var object = this.mesh;\n\t                var animationObject = {\n\t                    scale: object.scale.x,\n\t                    opacity: object.material.opacity\n\t                };\n\t                this.mesh.scale.set(.1, .1, 1);\n\t                setTimeout(function() {\n\t                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                        scale: 1,\n\t                        opacity: 0\n\t                    });\n\t                    animation.eventCallback(\"onUpdate\", function() {\n\t                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                        object.material.opacity = animationObject.opacity;\n\t                    }).eventCallback(\"onComplete\", function() {\n\t                        _this.animation && animation.restart();\n\t                    });\n\t                }, 500);\n\t            };\n\t            TrendBeacon.prototype.stopAnimation = function() {\n\t                this.animated = false;\n\t                this.animation && this.animation.kill();\n\t                this.animation = null;\n\t            };\n\t            TrendBeacon.createTexture = function() {\n\t                var h = 32, w = 32;\n\t                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                    ctx.fillStyle = \"white\";\n\t                    ctx.fill();\n\t                });\n\t            };\n\t            TrendBeacon.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                this.segment = trendsSegments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                if (!changedProps.animations) return;\n\t                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                if (changedProps.animations.enabled) {\n\t                    this.animate();\n\t                } else {\n\t                    this.stopAnimation();\n\t                }\n\t            };\n\t            TrendBeacon.prototype.updatePosition = function() {\n\t                var state = this.chartState;\n\t                var xVal, yVal;\n\t                var currentAnimationState = this.segment.currentAnimationState;\n\t                if (this.trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n\t                    xVal = currentAnimationState.endXVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                } else {\n\t                    xVal = currentAnimationState.xVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                }\n\t                var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n\t                var screenWidth = state.data.width;\n\t                var x = endPointVector.x;\n\t                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                if (screenX < 0) x = state.screen.getPointByScreenX(0);\n\t                if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n\t                this.mesh.position.set(x, endPointVector.y, .1);\n\t            };\n\t            return TrendBeacon;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendBeacon = TrendBeacon;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(3));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChartState = function(chartState) {\n\t                var _this = this;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chartState.onReady(function() {\n\t                    return _this.onChartReadyHandler();\n\t                }), this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chartState.data.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onChartReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.pluginWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"TrendsMarksPlugin\"] = factory(); else root[\"TrendsMarksPlugin\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var three_chart_1 = __webpack_require__(2);\n\t        var TrendsMarksWidget_1 = __webpack_require__(4);\n\t        (function(TREND_MARK_SIDE) {\n\t            TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\n\t            TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\n\t        })(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\n\t        var TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\n\t        (function(EVENTS) {\n\t            EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\n\t        })(exports.EVENTS || (exports.EVENTS = {}));\n\t        var EVENTS = exports.EVENTS;\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            trendName: \"\",\n\t            title: \"\",\n\t            description: \"\",\n\t            descriptionColor: \"rgb(40,136,75)\",\n\t            value: 0,\n\t            iconColor: \"rgb(255, 102, 217)\",\n\t            orientation: TREND_MARK_SIDE.TOP,\n\t            width: 65,\n\t            height: 80,\n\t            offset: 40,\n\t            margin: 20\n\t        };\n\t        var TrendsMarksPlugin = function(_super) {\n\t            __extends(TrendsMarksPlugin, _super);\n\t            function TrendsMarksPlugin(trendsMarksPluginOptions) {\n\t                _super.call(this, trendsMarksPluginOptions);\n\t                this.items = {};\n\t                this.rects = {};\n\t            }\n\t            TrendsMarksPlugin.prototype.onInitialStateApplied = function() {\n\t                this.bindEvents();\n\t                this.onMarksChangeHandler();\n\t            };\n\t            TrendsMarksPlugin.prototype.onStateChanged = function() {\n\t                this.onMarksChangeHandler();\n\t            };\n\t            TrendsMarksPlugin.prototype.getOptions = function() {\n\t                return _super.prototype.getOptions.call(this);\n\t            };\n\t            TrendsMarksPlugin.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            TrendsMarksPlugin.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            TrendsMarksPlugin.prototype.createMark = function(options) {\n\t                var marksOptions = this.getOptions().items;\n\t                var newMarkOptions = marksOptions.concat([ options ]);\n\t                this.chartState.setState({\n\t                    pluginsState: (_a = {}, _a[this.name] = {\n\t                        items: newMarkOptions\n\t                    }, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            TrendsMarksPlugin.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t            };\n\t            TrendsMarksPlugin.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.trendsManager.onSegmentsRebuilded(function() {\n\t                    return _this.updateMarksSegments();\n\t                });\n\t                this.chartState.screen.onZoomFrame(function() {\n\t                    return _this.calclulateMarksPositions();\n\t                });\n\t            };\n\t            TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function() {\n\t                this.onMarksChangeHandler();\n\t            };\n\t            TrendsMarksPlugin.prototype.onMarksChangeHandler = function() {\n\t                var trendsMarksOptions = this.getOptions().items;\n\t                var actualMarksNames = [];\n\t                for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\n\t                    var options = trendsMarksOptions_1[_i];\n\t                    var marks = this.items;\n\t                    if (!options.name) {\n\t                        options.name = three_chart_1.Utils.getUid().toString();\n\t                        actualMarksNames.push(options.name);\n\t                        if (marks[options.name]) three_chart_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    } else if (marks[options.name]) {\n\t                        actualMarksNames.push(options.name);\n\t                        continue;\n\t                    }\n\t                    options = three_chart_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    var mark = new TrendMark(this.chartState, options);\n\t                    marks[options.name] = mark;\n\t                }\n\t                for (var markName in this.items) {\n\t                    if (actualMarksNames.indexOf(markName) != -1) continue;\n\t                    delete this.items[markName];\n\t                }\n\t                this.updateMarksSegments();\n\t                this.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t            };\n\t            TrendsMarksPlugin.prototype.calclulateMarksPositions = function() {\n\t                this.rects = {};\n\t                for (var markName in this.items) {\n\t                    this.createMarkRect(this.items[markName]);\n\t                }\n\t            };\n\t            TrendsMarksPlugin.prototype.createMarkRect = function(mark) {\n\t                if (!mark.segment) return;\n\t                var state = this.chartState;\n\t                var options = mark.options;\n\t                var width = options.width, height = options.height, offset = options.offset, name = options.name;\n\t                var left = state.getPointOnXAxis(mark.xVal) - width / 2;\n\t                var top = state.getPointOnYAxis(mark.yVal);\n\t                var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t                var newOffset;\n\t                var row = 0;\n\t                if (isTopSideMark) {\n\t                    top += offset + height;\n\t                } else {\n\t                    top -= offset;\n\t                }\n\t                var markRect = [ left, top, width, height ];\n\t                var hasIntersection = false;\n\t                do {\n\t                    for (var markName in this.rects) {\n\t                        var rect = this.rects[markName];\n\t                        hasIntersection = three_chart_1.Utils.rectsIntersect(rect, markRect);\n\t                        if (!hasIntersection) continue;\n\t                        if (isTopSideMark) {\n\t                            markRect[1] = rect[1] + markRect[3] + options.margin;\n\t                        } else {\n\t                            markRect[1] = rect[1] - rect[3] - options.margin;\n\t                        }\n\t                        row++;\n\t                        break;\n\t                    }\n\t                } while (hasIntersection);\n\t                if (isTopSideMark) {\n\t                    newOffset = markRect[1] - markRect[3] - state.getPointOnYAxis(mark.yVal);\n\t                } else {\n\t                    newOffset = state.getPointOnYAxis(mark.yVal) - markRect[1];\n\t                }\n\t                mark._setOffset(newOffset);\n\t                mark._setRow(row);\n\t                this.rects[name] = markRect;\n\t            };\n\t            TrendsMarksPlugin.prototype.updateMarksSegments = function() {\n\t                var chartState = this.chartState;\n\t                var trends = chartState.trendsManager.trends;\n\t                for (var trendName in trends) {\n\t                    var marks = this.getTrendMarks(trendName);\n\t                    var marksArr = [];\n\t                    var xVals = [];\n\t                    for (var markName in marks) {\n\t                        var mark = marks[markName];\n\t                        xVals.push(mark.options.value);\n\t                        marksArr.push(mark);\n\t                        mark._setSegment(null);\n\t                    }\n\t                    marksArr.sort(function(a, b) {\n\t                        return a.options.value - b.options.value;\n\t                    });\n\t                    var trend = chartState.getTrend(trendName);\n\t                    var points = trend.segments.getSegmentsForXValues(xVals.sort(function(a, b) {\n\t                        return a - b;\n\t                    }));\n\t                    for (var markInd = 0; markInd < marksArr.length; markInd++) {\n\t                        marksArr[markInd]._setSegment(points[markInd]);\n\t                    }\n\t                }\n\t                this.calclulateMarksPositions();\n\t            };\n\t            TrendsMarksPlugin.prototype.getTrendMarks = function(trendName) {\n\t                var trendMarks = [];\n\t                for (var markName in this.items) {\n\t                    if (this.items[markName].options.trendName != trendName) continue;\n\t                    trendMarks.push(this.items[markName]);\n\t                }\n\t                return trendMarks;\n\t            };\n\t            TrendsMarksPlugin.NAME = \"TrendsMarks\";\n\t            TrendsMarksPlugin.pluginWidgets = [ TrendsMarksWidget_1.TrendsMarksWidget ];\n\t            return TrendsMarksPlugin;\n\t        }(three_chart_1.ChartPlugin);\n\t        exports.TrendsMarksPlugin = TrendsMarksPlugin;\n\t        var TrendMark = function() {\n\t            function TrendMark(chartState, options) {\n\t                this.row = 0;\n\t                this.options = options;\n\t                this.chartState = chartState;\n\t            }\n\t            TrendMark.prototype._setSegment = function(segment) {\n\t                this.segment = segment;\n\t                if (!segment) return;\n\t                var trend = this.chartState.getTrend(this.options.trendName);\n\t                if (trend.getOptions().type == three_chart_1.TREND_TYPE.LINE) {\n\t                    this.xVal = segment.endXVal;\n\t                    this.yVal = segment.endYVal;\n\t                } else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t                    this.xVal = segment.xVal;\n\t                    this.yVal = segment.maxYVal;\n\t                } else {\n\t                    this.xVal = segment.xVal;\n\t                    this.yVal = segment.minYVal;\n\t                }\n\t            };\n\t            TrendMark.prototype._setOffset = function(offset) {\n\t                this.offset = offset;\n\t            };\n\t            TrendMark.prototype._setRow = function(row) {\n\t                this.row = row;\n\t            };\n\t            return TrendMark;\n\t        }();\n\t        exports.TrendMark = TrendMark;\n\t    }, function(module, exports, __webpack_require__) {\n\t        module.exports = __webpack_require__(3);\n\t    }, function(module, exports, __webpack_require__) {\n\t        (function webpackUniversalModuleDefinition(root, factory) {\n\t            if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"ThreeChart\"] = factory(); else root[\"ThreeChart\"] = factory();\n\t        })(this, function() {\n\t            return function(modules) {\n\t                var installedModules = {};\n\t                function __webpack_require__(moduleId) {\n\t                    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t                    var module = installedModules[moduleId] = {\n\t                        exports: {},\n\t                        id: moduleId,\n\t                        loaded: false\n\t                    };\n\t                    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t                    module.loaded = true;\n\t                    return module.exports;\n\t                }\n\t                __webpack_require__.m = modules;\n\t                __webpack_require__.c = installedModules;\n\t                __webpack_require__.p = \"\";\n\t                return __webpack_require__(0);\n\t            }([ function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                function __export(m) {\n\t                    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t                }\n\t                __export(__webpack_require__(1));\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                function __export(m) {\n\t                    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t                }\n\t                __export(__webpack_require__(2));\n\t                __export(__webpack_require__(23));\n\t                __export(__webpack_require__(22));\n\t                __export(__webpack_require__(21));\n\t                __export(__webpack_require__(14));\n\t                __export(__webpack_require__(19));\n\t                __export(__webpack_require__(20));\n\t                __export(__webpack_require__(18));\n\t                __export(__webpack_require__(16));\n\t                __export(__webpack_require__(17));\n\t                __export(__webpack_require__(35));\n\t                __export(__webpack_require__(27));\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                __webpack_require__(3);\n\t                var PerspectiveCamera = THREE.PerspectiveCamera;\n\t                var State_1 = __webpack_require__(14);\n\t                var Utils_1 = __webpack_require__(16);\n\t                var AxisWidget_1 = __webpack_require__(24);\n\t                var GridWidget_1 = __webpack_require__(25);\n\t                var TrendsLoadingWidget_1 = __webpack_require__(26);\n\t                var AxisMarksWidget_1 = __webpack_require__(28);\n\t                var BorderWidget_1 = __webpack_require__(29);\n\t                var TrendsIndicatorWidget_1 = __webpack_require__(30);\n\t                var TrendsLineWidget_1 = __webpack_require__(31);\n\t                var TrendsCandleWidget_1 = __webpack_require__(32);\n\t                var TrendsBeaconWidget_1 = __webpack_require__(33);\n\t                var deps_1 = __webpack_require__(34);\n\t                exports.MAX_DATA_LENGTH = 2692e3;\n\t                var Chart = function() {\n\t                    function Chart(state, $container, plugins) {\n\t                        var _this = this;\n\t                        if (plugins === void 0) {\n\t                            plugins = [];\n\t                        }\n\t                        this.widgets = [];\n\t                        if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                        if (!$container) {\n\t                            Utils_1.Utils.error(\"$el must be set\");\n\t                        }\n\t                        var style = getComputedStyle($container);\n\t                        state.width = parseInt(style.width);\n\t                        state.height = parseInt(style.height);\n\t                        this.state = new State_1.ChartState(state, Chart.installedWidgets, plugins);\n\t                        this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                            return _this.zoom(zoomValue, origin);\n\t                        }, 200);\n\t                        this.$container = $container;\n\t                        this.init($container);\n\t                    }\n\t                    Chart.installWidget = function(Widget) {\n\t                        if (!Widget.widgetName) {\n\t                            Utils_1.Utils.error(\"unnamed widget\");\n\t                        }\n\t                        this.installedWidgets[Widget.widgetName] = Widget;\n\t                    };\n\t                    Chart.prototype.init = function($container) {\n\t                        var state = this.state;\n\t                        var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                        this.scene = new THREE.Scene();\n\t                        this.isStopped = !autoRender.enabled;\n\t                        var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n\t                            antialias: true,\n\t                            alpha: true\n\t                        });\n\t                        renderer.setPixelRatio(Chart.devicePixelRatio);\n\t                        renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n\t                        renderer.setSize(w, h);\n\t                        $container.appendChild(renderer.domElement);\n\t                        this.$el = renderer.domElement;\n\t                        this.$el.style.display = \"block\";\n\t                        if (showStats) {\n\t                            this.stats = new Stats();\n\t                            $container.appendChild(this.stats.domElement);\n\t                        }\n\t                        this.setupCamera();\n\t                        var widgetsClasses = this.state.widgetsClasses;\n\t                        for (var widgetName in widgetsClasses) {\n\t                            var widgetOptions = this.state.data.widgets[widgetName];\n\t                            if (!widgetOptions.enabled) continue;\n\t                            var WidgetConstructor = widgetsClasses[widgetName];\n\t                            var widget = new WidgetConstructor(this.state);\n\t                            this.scene.add(widget.getObject3D());\n\t                            this.widgets.push(widget);\n\t                        }\n\t                        this.bindEvents();\n\t                        this.renderLoop();\n\t                    };\n\t                    Chart.prototype.renderLoop = function() {\n\t                        var _this = this;\n\t                        if (this.isDestroyed) return;\n\t                        this.stats && this.stats.begin();\n\t                        this.render();\n\t                        if (this.isStopped) return;\n\t                        var fpsLimit = this.state.data.autoRender.fps;\n\t                        if (fpsLimit) {\n\t                            var delay = 1e3 / fpsLimit;\n\t                            setTimeout(function() {\n\t                                return requestAnimationFrame(function() {\n\t                                    return _this.renderLoop();\n\t                                });\n\t                            }, delay);\n\t                        } else {\n\t                            requestAnimationFrame(function() {\n\t                                return _this.renderLoop();\n\t                            });\n\t                        }\n\t                        this.stats && this.stats.end();\n\t                    };\n\t                    Chart.prototype.render = function() {\n\t                        this.renderer.render(this.scene, this.camera);\n\t                    };\n\t                    Chart.prototype.stop = function() {\n\t                        this.isStopped = true;\n\t                    };\n\t                    Chart.prototype.run = function() {\n\t                        this.isStopped = false;\n\t                        this.renderLoop();\n\t                    };\n\t                    Chart.prototype.destroy = function() {\n\t                        this.isDestroyed = true;\n\t                        this.stop();\n\t                        this.state.destroy();\n\t                        this.unbindEvents();\n\t                        try {\n\t                            this.renderer.forceContextLoss();\n\t                        } catch (wtf) {}\n\t                        this.renderer.context = null;\n\t                        this.renderer.domElement = null;\n\t                        this.renderer = null;\n\t                    };\n\t                    Chart.prototype.getState = function() {\n\t                        return this.state.data;\n\t                    };\n\t                    Chart.prototype.getTrend = function(trendName) {\n\t                        return this.state.getTrend(trendName);\n\t                    };\n\t                    Chart.prototype.setState = function(state) {\n\t                        return this.state.setState(state);\n\t                    };\n\t                    Chart.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        var $el = this.$el;\n\t                        if (this.state.data.controls.enabled) {\n\t                            $el.addEventListener(\"mousewheel\", function(ev) {\n\t                                _this.onMouseWheel(ev);\n\t                            });\n\t                            $el.addEventListener(\"mousemove\", function(ev) {\n\t                                _this.onMouseMove(ev);\n\t                            });\n\t                            $el.addEventListener(\"mousedown\", function(ev) {\n\t                                return _this.onMouseDown(ev);\n\t                            });\n\t                            $el.addEventListener(\"mouseup\", function(ev) {\n\t                                return _this.onMouseUp(ev);\n\t                            });\n\t                            $el.addEventListener(\"touchmove\", function(ev) {\n\t                                _this.onTouchMove(ev);\n\t                            });\n\t                            $el.addEventListener(\"touchend\", function(ev) {\n\t                                _this.onTouchEnd(ev);\n\t                            });\n\t                        }\n\t                        if (this.state.data.autoResize) {\n\t                            this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                                _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                            });\n\t                        }\n\t                        this.unsubscribers = [ this.state.onTrendsChange(function() {\n\t                            return _this.autoscroll();\n\t                        }), this.state.screen.onTransformationFrame(function(options) {\n\t                            return _this.onScreenTransformHandler(options);\n\t                        }), this.state.onResize(function(options) {\n\t                            return _this.onChartResize();\n\t                        }) ];\n\t                    };\n\t                    Chart.prototype.unbindEvents = function() {\n\t                        try {\n\t                            this.resizeSensor && this.resizeSensor.detach();\n\t                        } catch (e) {}\n\t                        this.$el.remove();\n\t                        this.unsubscribers.forEach(function(unsubscribe) {\n\t                            return unsubscribe();\n\t                        });\n\t                    };\n\t                    Chart.prototype.setupCamera = function() {\n\t                        var camSettings = this.state.screen.getCameraSettings();\n\t                        if (!this.camera) {\n\t                            this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                            this.scene.add(this.camera);\n\t                        } else {\n\t                            this.camera.fov = camSettings.FOV;\n\t                            this.camera.aspect = camSettings.aspect;\n\t                            this.camera.far = camSettings.far;\n\t                            this.camera.near = camSettings.near;\n\t                            this.camera.updateProjectionMatrix();\n\t                        }\n\t                        this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                        this.cameraInitialPosition = this.camera.position.clone();\n\t                        this.onScreenTransformHandler(this.state.screen.options);\n\t                    };\n\t                    Chart.prototype.onScreenTransformHandler = function(options) {\n\t                        if (options.scrollX != void 0) {\n\t                            var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                            this.camera.position.setX(scrollX_1);\n\t                        }\n\t                        if (options.scrollY != void 0) {\n\t                            var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                            this.camera.position.setY(scrollY_1);\n\t                        }\n\t                    };\n\t                    Chart.prototype.autoscroll = function() {\n\t                        var state = this.state;\n\t                        if (!state.data.autoScroll) return;\n\t                        var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n\t                        var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                        if (trendsMaxXDelta > 0) {\n\t                            var maxVisibleX = this.state.screen.getScreenRightVal();\n\t                            var paddingRightX = this.state.getPaddingRight();\n\t                            var currentScroll = state.data.xAxis.range.scroll;\n\t                            if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                                return;\n\t                            }\n\t                            var scrollDelta = trendsMaxXDelta;\n\t                            this.setState({\n\t                                xAxis: {\n\t                                    range: {\n\t                                        scroll: currentScroll + scrollDelta\n\t                                    }\n\t                                }\n\t                            });\n\t                        }\n\t                    };\n\t                    Chart.prototype.onScrollStop = function() {};\n\t                    Chart.prototype.onMouseDown = function(ev) {\n\t                        this.setState({\n\t                            cursor: {\n\t                                dragMode: true,\n\t                                x: ev.clientX,\n\t                                y: ev.clientY\n\t                            }\n\t                        });\n\t                    };\n\t                    Chart.prototype.onMouseUp = function(ev) {\n\t                        this.setState({\n\t                            cursor: {\n\t                                dragMode: false\n\t                            }\n\t                        });\n\t                    };\n\t                    Chart.prototype.onMouseMove = function(ev) {\n\t                        if (this.state.data.cursor.dragMode) {\n\t                            this.setState({\n\t                                cursor: {\n\t                                    dragMode: true,\n\t                                    x: ev.clientX,\n\t                                    y: ev.clientY\n\t                                }\n\t                            });\n\t                        }\n\t                    };\n\t                    Chart.prototype.onMouseWheel = function(ev) {\n\t                        ev.stopPropagation();\n\t                        ev.preventDefault();\n\t                        var zoomOrigin = ev.layerX / this.state.data.width;\n\t                        var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                        this.zoom(zoomValue, zoomOrigin);\n\t                    };\n\t                    Chart.prototype.onTouchMove = function(ev) {\n\t                        this.setState({\n\t                            cursor: {\n\t                                dragMode: true,\n\t                                x: ev.touches[0].clientX,\n\t                                y: ev.touches[0].clientY\n\t                            }\n\t                        });\n\t                    };\n\t                    Chart.prototype.onTouchEnd = function(ev) {\n\t                        this.setState({\n\t                            cursor: {\n\t                                dragMode: false\n\t                            }\n\t                        });\n\t                    };\n\t                    Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                        this.setState({\n\t                            width: width,\n\t                            height: height\n\t                        });\n\t                    };\n\t                    Chart.prototype.onChartResize = function() {\n\t                        var _a = this.state.data, width = _a.width, height = _a.height;\n\t                        this.renderer.setSize(width, height);\n\t                        this.setupCamera();\n\t                    };\n\t                    Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                        var _this = this;\n\t                        var MAX_ZOOM_VALUE = 1.5;\n\t                        var MIN_ZOOM_VALUE = .7;\n\t                        zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                        zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                        var autoScrollIsEnabled = this.state.data.autoScroll;\n\t                        if (autoScrollIsEnabled) this.state.setState({\n\t                            autoScroll: false\n\t                        });\n\t                        this.state.zoom(zoomValue, zoomOrigin).then(function() {\n\t                            if (autoScrollIsEnabled) _this.setState({\n\t                                autoScroll: true\n\t                            });\n\t                        });\n\t                    };\n\t                    Chart.createPreviewChart = function(userOptions, $el) {\n\t                        var previewChartOptions = {\n\t                            animations: {\n\t                                enabled: false\n\t                            },\n\t                            widgets: {\n\t                                Grid: {\n\t                                    enabled: false\n\t                                },\n\t                                Axis: {\n\t                                    enabled: false\n\t                                },\n\t                                TrendsGradient: {\n\t                                    enabled: false\n\t                                }\n\t                            }\n\t                        };\n\t                        var options = Utils_1.Utils.deepMerge(userOptions, previewChartOptions);\n\t                        return new Chart(options, $el);\n\t                    };\n\t                    Chart.devicePixelRatio = window.devicePixelRatio;\n\t                    Chart.installedWidgets = {};\n\t                    Chart.renderers = {\n\t                        CanvasRenderer: THREE.CanvasRenderer,\n\t                        WebGLRenderer: THREE.WebGLRenderer\n\t                    };\n\t                    return Chart;\n\t                }();\n\t                exports.Chart = Chart;\n\t                Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n\t                Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n\t                Chart.installWidget(AxisWidget_1.AxisWidget);\n\t                Chart.installWidget(GridWidget_1.GridWidget);\n\t                Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\n\t                Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\n\t                Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\n\t                Chart.installWidget(AxisMarksWidget_1.AxisMarksWidget);\n\t                Chart.installWidget(BorderWidget_1.BorderWidget);\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                window.Stats = __webpack_require__(4);\n\t                window.TweenLite = __webpack_require__(5);\n\t                __webpack_require__(7);\n\t                __webpack_require__(8);\n\t                exports.isPlainObject = __webpack_require__(9);\n\t                exports.EE2 = __webpack_require__(11);\n\t                var es6_promise_1 = __webpack_require__(12);\n\t                exports.Promise = es6_promise_1.Promise;\n\t                exports.ResizeSensor = __webpack_require__(13);\n\t            }, function(module, exports) {\n\t                var Stats = function() {\n\t                    function h(a) {\n\t                        c.appendChild(a.dom);\n\t                        return a;\n\t                    }\n\t                    function k(a) {\n\t                        for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                        l = a;\n\t                    }\n\t                    var l = 0, c = document.createElement(\"div\");\n\t                    c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t                    c.addEventListener(\"click\", function(a) {\n\t                        a.preventDefault();\n\t                        k(++l % c.children.length);\n\t                    }, !1);\n\t                    var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t                    if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t                    k(0);\n\t                    return {\n\t                        REVISION: 16,\n\t                        dom: c,\n\t                        addPanel: h,\n\t                        showPanel: k,\n\t                        begin: function() {\n\t                            g = (performance || Date).now();\n\t                        },\n\t                        end: function() {\n\t                            a++;\n\t                            var c = (performance || Date).now();\n\t                            f.update(c - g, 200);\n\t                            if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                                var d = performance.memory;\n\t                                t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                            }\n\t                            return c;\n\t                        },\n\t                        update: function() {\n\t                            g = this.end();\n\t                        },\n\t                        domElement: c,\n\t                        setMode: k\n\t                    };\n\t                };\n\t                Stats.Panel = function(h, k, l) {\n\t                    var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t                    q.width = r;\n\t                    q.height = f;\n\t                    q.style.cssText = \"width:80px;height:48px\";\n\t                    var b = q.getContext(\"2d\");\n\t                    b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t                    b.textBaseline = \"top\";\n\t                    b.fillStyle = l;\n\t                    b.fillRect(0, 0, r, f);\n\t                    b.fillStyle = k;\n\t                    b.fillText(h, t, u);\n\t                    b.fillRect(d, m, n, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d, m, n, p);\n\t                    return {\n\t                        dom: q,\n\t                        update: function(f, v) {\n\t                            c = Math.min(c, f);\n\t                            g = Math.max(g, f);\n\t                            b.fillStyle = l;\n\t                            b.globalAlpha = 1;\n\t                            b.fillRect(0, 0, r, m);\n\t                            b.fillStyle = k;\n\t                            b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                            b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                            b.fillRect(d + n - a, m, a, p);\n\t                            b.fillStyle = l;\n\t                            b.globalAlpha = .9;\n\t                            b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                        }\n\t                    };\n\t                };\n\t                \"object\" === typeof module && (module.exports = Stats);\n\t            }, function(module, exports, __webpack_require__) {\n\t                var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\t                (function(global) {\n\t                    /*!\n\t\t\t * VERSION: 1.18.5\n\t\t\t * DATE: 2016-05-24\n\t\t\t * UPDATES AND DOCS AT: http://greensock.com\n\t\t\t * \n\t\t\t * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n\t\t\t *\n\t\t\t * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n\t\t\t * This work is subject to the terms at http://greensock.com/standard-license or for\n\t\t\t * Club GreenSock members, the software agreement that was issued with your membership.\n\t\t\t * \n\t\t\t * @author: Jack Doyle, jack@greensock.com\n\t\t\t **/\n\t                    var _gsScope = typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window;\n\t                    (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {\n\t                        \"use strict\";\n\t                        _gsScope._gsDefine(\"TweenMax\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n\t                            var _slice = function(a) {\n\t                                var b = [], l = a.length, i;\n\t                                for (i = 0; i !== l; b.push(a[i++])) ;\n\t                                return b;\n\t                            }, _applyCycle = function(vars, targets, i) {\n\t                                var alt = vars.cycle, p, val;\n\t                                for (p in alt) {\n\t                                    val = alt[p];\n\t                                    vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n\t                                }\n\t                                delete vars.cycle;\n\t                            }, TweenMax = function(target, duration, vars) {\n\t                                TweenLite.call(this, target, duration, vars);\n\t                                this._cycle = 0;\n\t                                this._yoyo = this.vars.yoyo === true;\n\t                                this._repeat = this.vars.repeat || 0;\n\t                                this._repeatDelay = this.vars.repeatDelay || 0;\n\t                                this._dirty = true;\n\t                                this.render = TweenMax.prototype.render;\n\t                            }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, p = TweenMax.prototype = TweenLite.to({}, .1, {}), _blankArray = [];\n\t                            TweenMax.version = \"1.18.5\";\n\t                            p.constructor = TweenMax;\n\t                            p.kill()._gc = false;\n\t                            TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n\t                            TweenMax.getTweensOf = TweenLite.getTweensOf;\n\t                            TweenMax.lagSmoothing = TweenLite.lagSmoothing;\n\t                            TweenMax.ticker = TweenLite.ticker;\n\t                            TweenMax.render = TweenLite.render;\n\t                            p.invalidate = function() {\n\t                                this._yoyo = this.vars.yoyo === true;\n\t                                this._repeat = this.vars.repeat || 0;\n\t                                this._repeatDelay = this.vars.repeatDelay || 0;\n\t                                this._uncache(true);\n\t                                return TweenLite.prototype.invalidate.call(this);\n\t                            };\n\t                            p.updateTo = function(vars, resetDuration) {\n\t                                var curRatio = this.ratio, immediate = this.vars.immediateRender || vars.immediateRender, p;\n\t                                if (resetDuration && this._startTime < this._timeline._time) {\n\t                                    this._startTime = this._timeline._time;\n\t                                    this._uncache(false);\n\t                                    if (this._gc) {\n\t                                        this._enabled(true, false);\n\t                                    } else {\n\t                                        this._timeline.insert(this, this._startTime - this._delay);\n\t                                    }\n\t                                }\n\t                                for (p in vars) {\n\t                                    this.vars[p] = vars[p];\n\t                                }\n\t                                if (this._initted || immediate) {\n\t                                    if (resetDuration) {\n\t                                        this._initted = false;\n\t                                        if (immediate) {\n\t                                            this.render(0, true, true);\n\t                                        }\n\t                                    } else {\n\t                                        if (this._gc) {\n\t                                            this._enabled(true, false);\n\t                                        }\n\t                                        if (this._notifyPluginsOfEnabled && this._firstPT) {\n\t                                            TweenLite._onPluginEvent(\"_onDisable\", this);\n\t                                        }\n\t                                        if (this._time / this._duration > .998) {\n\t                                            var prevTime = this._totalTime;\n\t                                            this.render(0, true, false);\n\t                                            this._initted = false;\n\t                                            this.render(prevTime, true, false);\n\t                                        } else {\n\t                                            this._initted = false;\n\t                                            this._init();\n\t                                            if (this._time > 0 || immediate) {\n\t                                                var inv = 1 / (1 - curRatio), pt = this._firstPT, endValue;\n\t                                                while (pt) {\n\t                                                    endValue = pt.s + pt.c;\n\t                                                    pt.c *= inv;\n\t                                                    pt.s = endValue - pt.c;\n\t                                                    pt = pt._next;\n\t                                                }\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return this;\n\t                            };\n\t                            p.render = function(time, suppressEvents, force) {\n\t                                if (!this._initted) if (this._duration === 0 && this.vars.repeat) {\n\t                                    this.invalidate();\n\t                                }\n\t                                var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevTotalTime = this._totalTime, prevCycle = this._cycle, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n\t                                if (time >= totalDur - 1e-7) {\n\t                                    this._totalTime = totalDur;\n\t                                    this._cycle = this._repeat;\n\t                                    if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                        this._time = 0;\n\t                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                                    } else {\n\t                                        this._time = duration;\n\t                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t                                    }\n\t                                    if (!this._reversed) {\n\t                                        isComplete = true;\n\t                                        callback = \"onComplete\";\n\t                                        force = force || this._timeline.autoRemoveChildren;\n\t                                    }\n\t                                    if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                        if (this._startTime === this._timeline._duration) {\n\t                                            time = 0;\n\t                                        }\n\t                                        if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n\t                                            force = true;\n\t                                            if (prevRawPrevTime > _tinyNum) {\n\t                                                callback = \"onReverseComplete\";\n\t                                            }\n\t                                        }\n\t                                        this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                                    }\n\t                                } else if (time < 1e-7) {\n\t                                    this._totalTime = this._time = this._cycle = 0;\n\t                                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                                    if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n\t                                        callback = \"onReverseComplete\";\n\t                                        isComplete = this._reversed;\n\t                                    }\n\t                                    if (time < 0) {\n\t                                        this._active = false;\n\t                                        if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                            if (prevRawPrevTime >= 0) {\n\t                                                force = true;\n\t                                            }\n\t                                            this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                                        }\n\t                                    }\n\t                                    if (!this._initted) {\n\t                                        force = true;\n\t                                    }\n\t                                } else {\n\t                                    this._totalTime = this._time = time;\n\t                                    if (this._repeat !== 0) {\n\t                                        cycleDuration = duration + this._repeatDelay;\n\t                                        this._cycle = this._totalTime / cycleDuration >> 0;\n\t                                        if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t                                            this._cycle--;\n\t                                        }\n\t                                        this._time = this._totalTime - this._cycle * cycleDuration;\n\t                                        if (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t                                            this._time = duration - this._time;\n\t                                        }\n\t                                        if (this._time > duration) {\n\t                                            this._time = duration;\n\t                                        } else if (this._time < 0) {\n\t                                            this._time = 0;\n\t                                        }\n\t                                    }\n\t                                    if (this._easeType) {\n\t                                        r = this._time / duration;\n\t                                        type = this._easeType;\n\t                                        pow = this._easePower;\n\t                                        if (type === 1 || type === 3 && r >= .5) {\n\t                                            r = 1 - r;\n\t                                        }\n\t                                        if (type === 3) {\n\t                                            r *= 2;\n\t                                        }\n\t                                        if (pow === 1) {\n\t                                            r *= r;\n\t                                        } else if (pow === 2) {\n\t                                            r *= r * r;\n\t                                        } else if (pow === 3) {\n\t                                            r *= r * r * r;\n\t                                        } else if (pow === 4) {\n\t                                            r *= r * r * r * r;\n\t                                        }\n\t                                        if (type === 1) {\n\t                                            this.ratio = 1 - r;\n\t                                        } else if (type === 2) {\n\t                                            this.ratio = r;\n\t                                        } else if (this._time / duration < .5) {\n\t                                            this.ratio = r / 2;\n\t                                        } else {\n\t                                            this.ratio = 1 - r / 2;\n\t                                        }\n\t                                    } else {\n\t                                        this.ratio = this._ease.getRatio(this._time / duration);\n\t                                    }\n\t                                }\n\t                                if (prevTime === this._time && !force && prevCycle === this._cycle) {\n\t                                    if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n\t                                        this._callback(\"onUpdate\");\n\t                                    }\n\t                                    return;\n\t                                } else if (!this._initted) {\n\t                                    this._init();\n\t                                    if (!this._initted || this._gc) {\n\t                                        return;\n\t                                    } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n\t                                        this._time = prevTime;\n\t                                        this._totalTime = prevTotalTime;\n\t                                        this._rawPrevTime = prevRawPrevTime;\n\t                                        this._cycle = prevCycle;\n\t                                        TweenLiteInternals.lazyTweens.push(this);\n\t                                        this._lazy = [ time, suppressEvents ];\n\t                                        return;\n\t                                    }\n\t                                    if (this._time && !isComplete) {\n\t                                        this.ratio = this._ease.getRatio(this._time / duration);\n\t                                    } else if (isComplete && this._ease._calcEnd) {\n\t                                        this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n\t                                    }\n\t                                }\n\t                                if (this._lazy !== false) {\n\t                                    this._lazy = false;\n\t                                }\n\t                                if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t                                    this._active = true;\n\t                                }\n\t                                if (prevTotalTime === 0) {\n\t                                    if (this._initted === 2 && time > 0) {\n\t                                        this._init();\n\t                                    }\n\t                                    if (this._startAt) {\n\t                                        if (time >= 0) {\n\t                                            this._startAt.render(time, suppressEvents, force);\n\t                                        } else if (!callback) {\n\t                                            callback = \"_dummyGS\";\n\t                                        }\n\t                                    }\n\t                                    if (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n\t                                        this._callback(\"onStart\");\n\t                                    }\n\t                                }\n\t                                pt = this._firstPT;\n\t                                while (pt) {\n\t                                    if (pt.f) {\n\t                                        pt.t[pt.p](pt.c * this.ratio + pt.s);\n\t                                    } else {\n\t                                        pt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t                                    }\n\t                                    pt = pt._next;\n\t                                }\n\t                                if (this._onUpdate) {\n\t                                    if (time < 0) if (this._startAt && this._startTime) {\n\t                                        this._startAt.render(time, suppressEvents, force);\n\t                                    }\n\t                                    if (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n\t                                        this._callback(\"onUpdate\");\n\t                                    }\n\t                                }\n\t                                if (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n\t                                    this._callback(\"onRepeat\");\n\t                                }\n\t                                if (callback) if (!this._gc || force) {\n\t                                    if (time < 0 && this._startAt && !this._onUpdate && this._startTime) {\n\t                                        this._startAt.render(time, suppressEvents, force);\n\t                                    }\n\t                                    if (isComplete) {\n\t                                        if (this._timeline.autoRemoveChildren) {\n\t                                            this._enabled(false, false);\n\t                                        }\n\t                                        this._active = false;\n\t                                    }\n\t                                    if (!suppressEvents && this.vars[callback]) {\n\t                                        this._callback(callback);\n\t                                    }\n\t                                    if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n\t                                        this._rawPrevTime = 0;\n\t                                    }\n\t                                }\n\t                            };\n\t                            TweenMax.to = function(target, duration, vars) {\n\t                                return new TweenMax(target, duration, vars);\n\t                            };\n\t                            TweenMax.from = function(target, duration, vars) {\n\t                                vars.runBackwards = true;\n\t                                vars.immediateRender = vars.immediateRender != false;\n\t                                return new TweenMax(target, duration, vars);\n\t                            };\n\t                            TweenMax.fromTo = function(target, duration, fromVars, toVars) {\n\t                                toVars.startAt = fromVars;\n\t                                toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                                return new TweenMax(target, duration, toVars);\n\t                            };\n\t                            TweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                                stagger = stagger || 0;\n\t                                var delay = 0, a = [], finalComplete = function() {\n\t                                    if (vars.onComplete) {\n\t                                        vars.onComplete.apply(vars.onCompleteScope || this, arguments);\n\t                                    }\n\t                                    onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n\t                                }, cycle = vars.cycle, fromCycle = vars.startAt && vars.startAt.cycle, l, copy, i, p;\n\t                                if (!_isArray(targets)) {\n\t                                    if (typeof targets === \"string\") {\n\t                                        targets = TweenLite.selector(targets) || targets;\n\t                                    }\n\t                                    if (_isSelector(targets)) {\n\t                                        targets = _slice(targets);\n\t                                    }\n\t                                }\n\t                                targets = targets || [];\n\t                                if (stagger < 0) {\n\t                                    targets = _slice(targets);\n\t                                    targets.reverse();\n\t                                    stagger *= -1;\n\t                                }\n\t                                l = targets.length - 1;\n\t                                for (i = 0; i <= l; i++) {\n\t                                    copy = {};\n\t                                    for (p in vars) {\n\t                                        copy[p] = vars[p];\n\t                                    }\n\t                                    if (cycle) {\n\t                                        _applyCycle(copy, targets, i);\n\t                                        if (copy.duration != null) {\n\t                                            duration = copy.duration;\n\t                                            delete copy.duration;\n\t                                        }\n\t                                    }\n\t                                    if (fromCycle) {\n\t                                        fromCycle = copy.startAt = {};\n\t                                        for (p in vars.startAt) {\n\t                                            fromCycle[p] = vars.startAt[p];\n\t                                        }\n\t                                        _applyCycle(copy.startAt, targets, i);\n\t                                    }\n\t                                    copy.delay = delay + (copy.delay || 0);\n\t                                    if (i === l && onCompleteAll) {\n\t                                        copy.onComplete = finalComplete;\n\t                                    }\n\t                                    a[i] = new TweenMax(targets[i], duration, copy);\n\t                                    delay += stagger;\n\t                                }\n\t                                return a;\n\t                            };\n\t                            TweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                                vars.runBackwards = true;\n\t                                vars.immediateRender = vars.immediateRender != false;\n\t                                return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                            };\n\t                            TweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                                toVars.startAt = fromVars;\n\t                                toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                                return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                            };\n\t                            TweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t                                return new TweenMax(callback, 0, {\n\t                                    delay: delay,\n\t                                    onComplete: callback,\n\t                                    onCompleteParams: params,\n\t                                    callbackScope: scope,\n\t                                    onReverseComplete: callback,\n\t                                    onReverseCompleteParams: params,\n\t                                    immediateRender: false,\n\t                                    useFrames: useFrames,\n\t                                    overwrite: 0\n\t                                });\n\t                            };\n\t                            TweenMax.set = function(target, vars) {\n\t                                return new TweenMax(target, 0, vars);\n\t                            };\n\t                            TweenMax.isTweening = function(target) {\n\t                                return TweenLite.getTweensOf(target, true).length > 0;\n\t                            };\n\t                            var _getChildrenOf = function(timeline, includeTimelines) {\n\t                                var a = [], cnt = 0, tween = timeline._first;\n\t                                while (tween) {\n\t                                    if (tween instanceof TweenLite) {\n\t                                        a[cnt++] = tween;\n\t                                    } else {\n\t                                        if (includeTimelines) {\n\t                                            a[cnt++] = tween;\n\t                                        }\n\t                                        a = a.concat(_getChildrenOf(tween, includeTimelines));\n\t                                        cnt = a.length;\n\t                                    }\n\t                                    tween = tween._next;\n\t                                }\n\t                                return a;\n\t                            }, getAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n\t                                return _getChildrenOf(Animation._rootTimeline, includeTimelines).concat(_getChildrenOf(Animation._rootFramesTimeline, includeTimelines));\n\t                            };\n\t                            TweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n\t                                if (tweens == null) {\n\t                                    tweens = true;\n\t                                }\n\t                                if (delayedCalls == null) {\n\t                                    delayedCalls = true;\n\t                                }\n\t                                var a = getAllTweens(timelines != false), l = a.length, allTrue = tweens && delayedCalls && timelines, isDC, tween, i;\n\t                                for (i = 0; i < l; i++) {\n\t                                    tween = a[i];\n\t                                    if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n\t                                        if (complete) {\n\t                                            tween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n\t                                        } else {\n\t                                            tween._enabled(false, false);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            };\n\t                            TweenMax.killChildTweensOf = function(parent, complete) {\n\t                                if (parent == null) {\n\t                                    return;\n\t                                }\n\t                                var tl = TweenLiteInternals.tweenLookup, a, curParent, p, i, l;\n\t                                if (typeof parent === \"string\") {\n\t                                    parent = TweenLite.selector(parent) || parent;\n\t                                }\n\t                                if (_isSelector(parent)) {\n\t                                    parent = _slice(parent);\n\t                                }\n\t                                if (_isArray(parent)) {\n\t                                    i = parent.length;\n\t                                    while (--i > -1) {\n\t                                        TweenMax.killChildTweensOf(parent[i], complete);\n\t                                    }\n\t                                    return;\n\t                                }\n\t                                a = [];\n\t                                for (p in tl) {\n\t                                    curParent = tl[p].target.parentNode;\n\t                                    while (curParent) {\n\t                                        if (curParent === parent) {\n\t                                            a = a.concat(tl[p].tweens);\n\t                                        }\n\t                                        curParent = curParent.parentNode;\n\t                                    }\n\t                                }\n\t                                l = a.length;\n\t                                for (i = 0; i < l; i++) {\n\t                                    if (complete) {\n\t                                        a[i].totalTime(a[i].totalDuration());\n\t                                    }\n\t                                    a[i]._enabled(false, false);\n\t                                }\n\t                            };\n\t                            var _changePause = function(pause, tweens, delayedCalls, timelines) {\n\t                                tweens = tweens !== false;\n\t                                delayedCalls = delayedCalls !== false;\n\t                                timelines = timelines !== false;\n\t                                var a = getAllTweens(timelines), allTrue = tweens && delayedCalls && timelines, i = a.length, isDC, tween;\n\t                                while (--i > -1) {\n\t                                    tween = a[i];\n\t                                    if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n\t                                        tween.paused(pause);\n\t                                    }\n\t                                }\n\t                            };\n\t                            TweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n\t                                _changePause(true, tweens, delayedCalls, timelines);\n\t                            };\n\t                            TweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n\t                                _changePause(false, tweens, delayedCalls, timelines);\n\t                            };\n\t                            TweenMax.globalTimeScale = function(value) {\n\t                                var tl = Animation._rootTimeline, t = TweenLite.ticker.time;\n\t                                if (!arguments.length) {\n\t                                    return tl._timeScale;\n\t                                }\n\t                                value = value || _tinyNum;\n\t                                tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n\t                                tl = Animation._rootFramesTimeline;\n\t                                t = TweenLite.ticker.frame;\n\t                                tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n\t                                tl._timeScale = Animation._rootTimeline._timeScale = value;\n\t                                return value;\n\t                            };\n\t                            p.progress = function(value, suppressEvents) {\n\t                                return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n\t                            };\n\t                            p.totalProgress = function(value, suppressEvents) {\n\t                                return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n\t                            };\n\t                            p.time = function(value, suppressEvents) {\n\t                                if (!arguments.length) {\n\t                                    return this._time;\n\t                                }\n\t                                if (this._dirty) {\n\t                                    this.totalDuration();\n\t                                }\n\t                                if (value > this._duration) {\n\t                                    value = this._duration;\n\t                                }\n\t                                if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                    value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n\t                                } else if (this._repeat !== 0) {\n\t                                    value += this._cycle * (this._duration + this._repeatDelay);\n\t                                }\n\t                                return this.totalTime(value, suppressEvents);\n\t                            };\n\t                            p.duration = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._duration;\n\t                                }\n\t                                return Animation.prototype.duration.call(this, value);\n\t                            };\n\t                            p.totalDuration = function(value) {\n\t                                if (!arguments.length) {\n\t                                    if (this._dirty) {\n\t                                        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n\t                                        this._dirty = false;\n\t                                    }\n\t                                    return this._totalDuration;\n\t                                }\n\t                                return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));\n\t                            };\n\t                            p.repeat = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._repeat;\n\t                                }\n\t                                this._repeat = value;\n\t                                return this._uncache(true);\n\t                            };\n\t                            p.repeatDelay = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._repeatDelay;\n\t                                }\n\t                                this._repeatDelay = value;\n\t                                return this._uncache(true);\n\t                            };\n\t                            p.yoyo = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._yoyo;\n\t                                }\n\t                                this._yoyo = value;\n\t                                return this;\n\t                            };\n\t                            return TweenMax;\n\t                        }, true);\n\t                        _gsScope._gsDefine(\"TimelineLite\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n\t                            var TimelineLite = function(vars) {\n\t                                SimpleTimeline.call(this, vars);\n\t                                this._labels = {};\n\t                                this.autoRemoveChildren = this.vars.autoRemoveChildren === true;\n\t                                this.smoothChildTiming = this.vars.smoothChildTiming === true;\n\t                                this._sortChildren = true;\n\t                                this._onUpdate = this.vars.onUpdate;\n\t                                var v = this.vars, val, p;\n\t                                for (p in v) {\n\t                                    val = v[p];\n\t                                    if (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t                                        v[p] = this._swapSelfInParams(val);\n\t                                    }\n\t                                }\n\t                                if (_isArray(v.tweens)) {\n\t                                    this.add(v.tweens, 0, v.align, v.stagger);\n\t                                }\n\t                            }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _internals = TimelineLite._internals = {}, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _globals = _gsScope._gsDefine.globals, _copy = function(vars) {\n\t                                var copy = {}, p;\n\t                                for (p in vars) {\n\t                                    copy[p] = vars[p];\n\t                                }\n\t                                return copy;\n\t                            }, _applyCycle = function(vars, targets, i) {\n\t                                var alt = vars.cycle, p, val;\n\t                                for (p in alt) {\n\t                                    val = alt[p];\n\t                                    vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n\t                                }\n\t                                delete vars.cycle;\n\t                            }, _pauseCallback = _internals.pauseCallback = function() {}, _slice = function(a) {\n\t                                var b = [], l = a.length, i;\n\t                                for (i = 0; i !== l; b.push(a[i++])) ;\n\t                                return b;\n\t                            }, p = TimelineLite.prototype = new SimpleTimeline();\n\t                            TimelineLite.version = \"1.18.5\";\n\t                            p.constructor = TimelineLite;\n\t                            p.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n\t                            p.to = function(target, duration, vars, position) {\n\t                                var Engine = vars.repeat && _globals.TweenMax || TweenLite;\n\t                                return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t                            };\n\t                            p.from = function(target, duration, vars, position) {\n\t                                return this.add((vars.repeat && _globals.TweenMax || TweenLite).from(target, duration, vars), position);\n\t                            };\n\t                            p.fromTo = function(target, duration, fromVars, toVars, position) {\n\t                                var Engine = toVars.repeat && _globals.TweenMax || TweenLite;\n\t                                return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t                            };\n\t                            p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                                var tl = new TimelineLite({\n\t                                    onComplete: onCompleteAll,\n\t                                    onCompleteParams: onCompleteAllParams,\n\t                                    callbackScope: onCompleteAllScope,\n\t                                    smoothChildTiming: this.smoothChildTiming\n\t                                }), cycle = vars.cycle, copy, i;\n\t                                if (typeof targets === \"string\") {\n\t                                    targets = TweenLite.selector(targets) || targets;\n\t                                }\n\t                                targets = targets || [];\n\t                                if (_isSelector(targets)) {\n\t                                    targets = _slice(targets);\n\t                                }\n\t                                stagger = stagger || 0;\n\t                                if (stagger < 0) {\n\t                                    targets = _slice(targets);\n\t                                    targets.reverse();\n\t                                    stagger *= -1;\n\t                                }\n\t                                for (i = 0; i < targets.length; i++) {\n\t                                    copy = _copy(vars);\n\t                                    if (copy.startAt) {\n\t                                        copy.startAt = _copy(copy.startAt);\n\t                                        if (copy.startAt.cycle) {\n\t                                            _applyCycle(copy.startAt, targets, i);\n\t                                        }\n\t                                    }\n\t                                    if (cycle) {\n\t                                        _applyCycle(copy, targets, i);\n\t                                        if (copy.duration != null) {\n\t                                            duration = copy.duration;\n\t                                            delete copy.duration;\n\t                                        }\n\t                                    }\n\t                                    tl.to(targets[i], duration, copy, i * stagger);\n\t                                }\n\t                                return this.add(tl, position);\n\t                            };\n\t                            p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                                vars.immediateRender = vars.immediateRender != false;\n\t                                vars.runBackwards = true;\n\t                                return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                            };\n\t                            p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                                toVars.startAt = fromVars;\n\t                                toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                                return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                            };\n\t                            p.call = function(callback, params, scope, position) {\n\t                                return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n\t                            };\n\t                            p.set = function(target, vars, position) {\n\t                                position = this._parseTimeOrLabel(position, 0, true);\n\t                                if (vars.immediateRender == null) {\n\t                                    vars.immediateRender = position === this._time && !this._paused;\n\t                                }\n\t                                return this.add(new TweenLite(target, 0, vars), position);\n\t                            };\n\t                            TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t                                vars = vars || {};\n\t                                if (vars.smoothChildTiming == null) {\n\t                                    vars.smoothChildTiming = true;\n\t                                }\n\t                                var tl = new TimelineLite(vars), root = tl._timeline, tween, next;\n\t                                if (ignoreDelayedCalls == null) {\n\t                                    ignoreDelayedCalls = true;\n\t                                }\n\t                                root._remove(tl, true);\n\t                                tl._startTime = 0;\n\t                                tl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t                                tween = root._first;\n\t                                while (tween) {\n\t                                    next = tween._next;\n\t                                    if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t                                        tl.add(tween, tween._startTime - tween._delay);\n\t                                    }\n\t                                    tween = next;\n\t                                }\n\t                                root.add(tl, 0);\n\t                                return tl;\n\t                            };\n\t                            p.add = function(value, position, align, stagger) {\n\t                                var curTime, l, i, child, tl, beforeRawTime;\n\t                                if (typeof position !== \"number\") {\n\t                                    position = this._parseTimeOrLabel(position, 0, true, value);\n\t                                }\n\t                                if (!(value instanceof Animation)) {\n\t                                    if (value instanceof Array || value && value.push && _isArray(value)) {\n\t                                        align = align || \"normal\";\n\t                                        stagger = stagger || 0;\n\t                                        curTime = position;\n\t                                        l = value.length;\n\t                                        for (i = 0; i < l; i++) {\n\t                                            if (_isArray(child = value[i])) {\n\t                                                child = new TimelineLite({\n\t                                                    tweens: child\n\t                                                });\n\t                                            }\n\t                                            this.add(child, curTime);\n\t                                            if (typeof child !== \"string\" && typeof child !== \"function\") {\n\t                                                if (align === \"sequence\") {\n\t                                                    curTime = child._startTime + child.totalDuration() / child._timeScale;\n\t                                                } else if (align === \"start\") {\n\t                                                    child._startTime -= child.delay();\n\t                                                }\n\t                                            }\n\t                                            curTime += stagger;\n\t                                        }\n\t                                        return this._uncache(true);\n\t                                    } else if (typeof value === \"string\") {\n\t                                        return this.addLabel(value, position);\n\t                                    } else if (typeof value === \"function\") {\n\t                                        value = TweenLite.delayedCall(0, value);\n\t                                    } else {\n\t                                        throw \"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\";\n\t                                    }\n\t                                }\n\t                                SimpleTimeline.prototype.add.call(this, value, position);\n\t                                if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n\t                                    tl = this;\n\t                                    beforeRawTime = tl.rawTime() > value._startTime;\n\t                                    while (tl._timeline) {\n\t                                        if (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t                                            tl.totalTime(tl._totalTime, true);\n\t                                        } else if (tl._gc) {\n\t                                            tl._enabled(true, false);\n\t                                        }\n\t                                        tl = tl._timeline;\n\t                                    }\n\t                                }\n\t                                return this;\n\t                            };\n\t                            p.remove = function(value) {\n\t                                if (value instanceof Animation) {\n\t                                    this._remove(value, false);\n\t                                    var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline;\n\t                                    value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale;\n\t                                    return this;\n\t                                } else if (value instanceof Array || value && value.push && _isArray(value)) {\n\t                                    var i = value.length;\n\t                                    while (--i > -1) {\n\t                                        this.remove(value[i]);\n\t                                    }\n\t                                    return this;\n\t                                } else if (typeof value === \"string\") {\n\t                                    return this.removeLabel(value);\n\t                                }\n\t                                return this.kill(null, value);\n\t                            };\n\t                            p._remove = function(tween, skipDisable) {\n\t                                SimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t                                var last = this._last;\n\t                                if (!last) {\n\t                                    this._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t                                } else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n\t                                    this._time = this.duration();\n\t                                    this._totalTime = this._totalDuration;\n\t                                }\n\t                                return this;\n\t                            };\n\t                            p.append = function(value, offsetOrLabel) {\n\t                                return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t                            };\n\t                            p.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t                                return this.add(value, position || 0, align, stagger);\n\t                            };\n\t                            p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t                                return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t                            };\n\t                            p.addLabel = function(label, position) {\n\t                                this._labels[label] = this._parseTimeOrLabel(position);\n\t                                return this;\n\t                            };\n\t                            p.addPause = function(position, callback, params, scope) {\n\t                                var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n\t                                t.vars.onComplete = t.vars.onReverseComplete = callback;\n\t                                t.data = \"isPause\";\n\t                                this._hasPause = true;\n\t                                return this.add(t, position);\n\t                            };\n\t                            p.removeLabel = function(label) {\n\t                                delete this._labels[label];\n\t                                return this;\n\t                            };\n\t                            p.getLabelTime = function(label) {\n\t                                return this._labels[label] != null ? this._labels[label] : -1;\n\t                            };\n\t                            p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t                                var i;\n\t                                if (ignore instanceof Animation && ignore.timeline === this) {\n\t                                    this.remove(ignore);\n\t                                } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {\n\t                                    i = ignore.length;\n\t                                    while (--i > -1) {\n\t                                        if (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t                                            this.remove(ignore[i]);\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (typeof offsetOrLabel === \"string\") {\n\t                                    return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === \"number\" && this._labels[offsetOrLabel] == null ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n\t                                }\n\t                                offsetOrLabel = offsetOrLabel || 0;\n\t                                if (typeof timeOrLabel === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {\n\t                                    i = timeOrLabel.indexOf(\"=\");\n\t                                    if (i === -1) {\n\t                                        if (this._labels[timeOrLabel] == null) {\n\t                                            return appendIfAbsent ? this._labels[timeOrLabel] = this.duration() + offsetOrLabel : offsetOrLabel;\n\t                                        }\n\t                                        return this._labels[timeOrLabel] + offsetOrLabel;\n\t                                    }\n\t                                    offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + \"1\", 10) * Number(timeOrLabel.substr(i + 1));\n\t                                    timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : this.duration();\n\t                                } else if (timeOrLabel == null) {\n\t                                    timeOrLabel = this.duration();\n\t                                }\n\t                                return Number(timeOrLabel) + offsetOrLabel;\n\t                            };\n\t                            p.seek = function(position, suppressEvents) {\n\t                                return this.totalTime(typeof position === \"number\" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);\n\t                            };\n\t                            p.stop = function() {\n\t                                return this.paused(true);\n\t                            };\n\t                            p.gotoAndPlay = function(position, suppressEvents) {\n\t                                return this.play(position, suppressEvents);\n\t                            };\n\t                            p.gotoAndStop = function(position, suppressEvents) {\n\t                                return this.pause(position, suppressEvents);\n\t                            };\n\t                            p.render = function(time, suppressEvents, force) {\n\t                                if (this._gc) {\n\t                                    this._enabled(true, false);\n\t                                }\n\t                                var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevStart = this._startTime, prevTimeScale = this._timeScale, prevPaused = this._paused, tween, isComplete, next, callback, internalForce, pauseTween, curTime;\n\t                                if (time >= totalDur - 1e-7) {\n\t                                    this._totalTime = this._time = totalDur;\n\t                                    if (!this._reversed) if (!this._hasPausedChild()) {\n\t                                        isComplete = true;\n\t                                        callback = \"onComplete\";\n\t                                        internalForce = !!this._timeline.autoRemoveChildren;\n\t                                        if (this._duration === 0) if (time <= 0 && time >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n\t                                            internalForce = true;\n\t                                            if (this._rawPrevTime > _tinyNum) {\n\t                                                callback = \"onReverseComplete\";\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                    time = totalDur + 1e-4;\n\t                                } else if (time < 1e-7) {\n\t                                    this._totalTime = this._time = 0;\n\t                                    if (prevTime !== 0 || this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || time < 0 && this._rawPrevTime >= 0)) {\n\t                                        callback = \"onReverseComplete\";\n\t                                        isComplete = this._reversed;\n\t                                    }\n\t                                    if (time < 0) {\n\t                                        this._active = false;\n\t                                        if (this._timeline.autoRemoveChildren && this._reversed) {\n\t                                            internalForce = isComplete = true;\n\t                                            callback = \"onReverseComplete\";\n\t                                        } else if (this._rawPrevTime >= 0 && this._first) {\n\t                                            internalForce = true;\n\t                                        }\n\t                                        this._rawPrevTime = time;\n\t                                    } else {\n\t                                        this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                        if (time === 0 && isComplete) {\n\t                                            tween = this._first;\n\t                                            while (tween && tween._startTime === 0) {\n\t                                                if (!tween._duration) {\n\t                                                    isComplete = false;\n\t                                                }\n\t                                                tween = tween._next;\n\t                                            }\n\t                                        }\n\t                                        time = 0;\n\t                                        if (!this._initted) {\n\t                                            internalForce = true;\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t                                        if (time >= prevTime) {\n\t                                            tween = this._first;\n\t                                            while (tween && tween._startTime <= time && !pauseTween) {\n\t                                                if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t                                                    pauseTween = tween;\n\t                                                }\n\t                                                tween = tween._next;\n\t                                            }\n\t                                        } else {\n\t                                            tween = this._last;\n\t                                            while (tween && tween._startTime >= time && !pauseTween) {\n\t                                                if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t                                                    pauseTween = tween;\n\t                                                }\n\t                                                tween = tween._prev;\n\t                                            }\n\t                                        }\n\t                                        if (pauseTween) {\n\t                                            this._time = time = pauseTween._startTime;\n\t                                            this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n\t                                        }\n\t                                    }\n\t                                    this._totalTime = this._time = this._rawPrevTime = time;\n\t                                }\n\t                                if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t                                    return;\n\t                                } else if (!this._initted) {\n\t                                    this._initted = true;\n\t                                }\n\t                                if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n\t                                    this._active = true;\n\t                                }\n\t                                if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n\t                                    this._callback(\"onStart\");\n\t                                }\n\t                                curTime = this._time;\n\t                                if (curTime >= prevTime) {\n\t                                    tween = this._first;\n\t                                    while (tween) {\n\t                                        next = tween._next;\n\t                                        if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                            break;\n\t                                        } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {\n\t                                            if (pauseTween === tween) {\n\t                                                this.pause();\n\t                                            }\n\t                                            if (!tween._reversed) {\n\t                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            } else {\n\t                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            }\n\t                                        }\n\t                                        tween = next;\n\t                                    }\n\t                                } else {\n\t                                    tween = this._last;\n\t                                    while (tween) {\n\t                                        next = tween._prev;\n\t                                        if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                            break;\n\t                                        } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n\t                                            if (pauseTween === tween) {\n\t                                                pauseTween = tween._prev;\n\t                                                while (pauseTween && pauseTween.endTime() > this._time) {\n\t                                                    pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n\t                                                    pauseTween = pauseTween._prev;\n\t                                                }\n\t                                                pauseTween = null;\n\t                                                this.pause();\n\t                                            }\n\t                                            if (!tween._reversed) {\n\t                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            } else {\n\t                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            }\n\t                                        }\n\t                                        tween = next;\n\t                                    }\n\t                                }\n\t                                if (this._onUpdate) if (!suppressEvents) {\n\t                                    if (_lazyTweens.length) {\n\t                                        _lazyRender();\n\t                                    }\n\t                                    this._callback(\"onUpdate\");\n\t                                }\n\t                                if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n\t                                    if (isComplete) {\n\t                                        if (_lazyTweens.length) {\n\t                                            _lazyRender();\n\t                                        }\n\t                                        if (this._timeline.autoRemoveChildren) {\n\t                                            this._enabled(false, false);\n\t                                        }\n\t                                        this._active = false;\n\t                                    }\n\t                                    if (!suppressEvents && this.vars[callback]) {\n\t                                        this._callback(callback);\n\t                                    }\n\t                                }\n\t                            };\n\t                            p._hasPausedChild = function() {\n\t                                var tween = this._first;\n\t                                while (tween) {\n\t                                    if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {\n\t                                        return true;\n\t                                    }\n\t                                    tween = tween._next;\n\t                                }\n\t                                return false;\n\t                            };\n\t                            p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t                                ignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t                                var a = [], tween = this._first, cnt = 0;\n\t                                while (tween) {\n\t                                    if (tween._startTime < ignoreBeforeTime) {} else if (tween instanceof TweenLite) {\n\t                                        if (tweens !== false) {\n\t                                            a[cnt++] = tween;\n\t                                        }\n\t                                    } else {\n\t                                        if (timelines !== false) {\n\t                                            a[cnt++] = tween;\n\t                                        }\n\t                                        if (nested !== false) {\n\t                                            a = a.concat(tween.getChildren(true, tweens, timelines));\n\t                                            cnt = a.length;\n\t                                        }\n\t                                    }\n\t                                    tween = tween._next;\n\t                                }\n\t                                return a;\n\t                            };\n\t                            p.getTweensOf = function(target, nested) {\n\t                                var disabled = this._gc, a = [], cnt = 0, tweens, i;\n\t                                if (disabled) {\n\t                                    this._enabled(true, true);\n\t                                }\n\t                                tweens = TweenLite.getTweensOf(target);\n\t                                i = tweens.length;\n\t                                while (--i > -1) {\n\t                                    if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {\n\t                                        a[cnt++] = tweens[i];\n\t                                    }\n\t                                }\n\t                                if (disabled) {\n\t                                    this._enabled(false, true);\n\t                                }\n\t                                return a;\n\t                            };\n\t                            p.recent = function() {\n\t                                return this._recent;\n\t                            };\n\t                            p._contains = function(tween) {\n\t                                var tl = tween.timeline;\n\t                                while (tl) {\n\t                                    if (tl === this) {\n\t                                        return true;\n\t                                    }\n\t                                    tl = tl.timeline;\n\t                                }\n\t                                return false;\n\t                            };\n\t                            p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t                                ignoreBeforeTime = ignoreBeforeTime || 0;\n\t                                var tween = this._first, labels = this._labels, p;\n\t                                while (tween) {\n\t                                    if (tween._startTime >= ignoreBeforeTime) {\n\t                                        tween._startTime += amount;\n\t                                    }\n\t                                    tween = tween._next;\n\t                                }\n\t                                if (adjustLabels) {\n\t                                    for (p in labels) {\n\t                                        if (labels[p] >= ignoreBeforeTime) {\n\t                                            labels[p] += amount;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return this._uncache(true);\n\t                            };\n\t                            p._kill = function(vars, target) {\n\t                                if (!vars && !target) {\n\t                                    return this._enabled(false, false);\n\t                                }\n\t                                var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target), i = tweens.length, changed = false;\n\t                                while (--i > -1) {\n\t                                    if (tweens[i]._kill(vars, target)) {\n\t                                        changed = true;\n\t                                    }\n\t                                }\n\t                                return changed;\n\t                            };\n\t                            p.clear = function(labels) {\n\t                                var tweens = this.getChildren(false, true, true), i = tweens.length;\n\t                                this._time = this._totalTime = 0;\n\t                                while (--i > -1) {\n\t                                    tweens[i]._enabled(false, false);\n\t                                }\n\t                                if (labels !== false) {\n\t                                    this._labels = {};\n\t                                }\n\t                                return this._uncache(true);\n\t                            };\n\t                            p.invalidate = function() {\n\t                                var tween = this._first;\n\t                                while (tween) {\n\t                                    tween.invalidate();\n\t                                    tween = tween._next;\n\t                                }\n\t                                return Animation.prototype.invalidate.call(this);\n\t                            };\n\t                            p._enabled = function(enabled, ignoreTimeline) {\n\t                                if (enabled === this._gc) {\n\t                                    var tween = this._first;\n\t                                    while (tween) {\n\t                                        tween._enabled(enabled, true);\n\t                                        tween = tween._next;\n\t                                    }\n\t                                }\n\t                                return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t                            };\n\t                            p.totalTime = function(time, suppressEvents, uncapped) {\n\t                                this._forcingPlayhead = true;\n\t                                var val = Animation.prototype.totalTime.apply(this, arguments);\n\t                                this._forcingPlayhead = false;\n\t                                return val;\n\t                            };\n\t                            p.duration = function(value) {\n\t                                if (!arguments.length) {\n\t                                    if (this._dirty) {\n\t                                        this.totalDuration();\n\t                                    }\n\t                                    return this._duration;\n\t                                }\n\t                                if (this.duration() !== 0 && value !== 0) {\n\t                                    this.timeScale(this._duration / value);\n\t                                }\n\t                                return this;\n\t                            };\n\t                            p.totalDuration = function(value) {\n\t                                if (!arguments.length) {\n\t                                    if (this._dirty) {\n\t                                        var max = 0, tween = this._last, prevStart = 999999999999, prev, end;\n\t                                        while (tween) {\n\t                                            prev = tween._prev;\n\t                                            if (tween._dirty) {\n\t                                                tween.totalDuration();\n\t                                            }\n\t                                            if (tween._startTime > prevStart && this._sortChildren && !tween._paused) {\n\t                                                this.add(tween, tween._startTime - tween._delay);\n\t                                            } else {\n\t                                                prevStart = tween._startTime;\n\t                                            }\n\t                                            if (tween._startTime < 0 && !tween._paused) {\n\t                                                max -= tween._startTime;\n\t                                                if (this._timeline.smoothChildTiming) {\n\t                                                    this._startTime += tween._startTime / this._timeScale;\n\t                                                }\n\t                                                this.shiftChildren(-tween._startTime, false, -9999999999);\n\t                                                prevStart = 0;\n\t                                            }\n\t                                            end = tween._startTime + tween._totalDuration / tween._timeScale;\n\t                                            if (end > max) {\n\t                                                max = end;\n\t                                            }\n\t                                            tween = prev;\n\t                                        }\n\t                                        this._duration = this._totalDuration = max;\n\t                                        this._dirty = false;\n\t                                    }\n\t                                    return this._totalDuration;\n\t                                }\n\t                                return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;\n\t                            };\n\t                            p.paused = function(value) {\n\t                                if (!value) {\n\t                                    var tween = this._first, time = this._time;\n\t                                    while (tween) {\n\t                                        if (tween._startTime === time && tween.data === \"isPause\") {\n\t                                            tween._rawPrevTime = 0;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                }\n\t                                return Animation.prototype.paused.apply(this, arguments);\n\t                            };\n\t                            p.usesFrames = function() {\n\t                                var tl = this._timeline;\n\t                                while (tl._timeline) {\n\t                                    tl = tl._timeline;\n\t                                }\n\t                                return tl === Animation._rootFramesTimeline;\n\t                            };\n\t                            p.rawTime = function() {\n\t                                return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n\t                            };\n\t                            return TimelineLite;\n\t                        }, true);\n\t                        _gsScope._gsDefine(\"TimelineMax\", [ \"TimelineLite\", \"TweenLite\", \"easing.Ease\" ], function(TimelineLite, TweenLite, Ease) {\n\t                            var TimelineMax = function(vars) {\n\t                                TimelineLite.call(this, vars);\n\t                                this._repeat = this.vars.repeat || 0;\n\t                                this._repeatDelay = this.vars.repeatDelay || 0;\n\t                                this._cycle = 0;\n\t                                this._yoyo = this.vars.yoyo === true;\n\t                                this._dirty = true;\n\t                            }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _easeNone = new Ease(null, null, 1, 0), p = TimelineMax.prototype = new TimelineLite();\n\t                            p.constructor = TimelineMax;\n\t                            p.kill()._gc = false;\n\t                            TimelineMax.version = \"1.18.5\";\n\t                            p.invalidate = function() {\n\t                                this._yoyo = this.vars.yoyo === true;\n\t                                this._repeat = this.vars.repeat || 0;\n\t                                this._repeatDelay = this.vars.repeatDelay || 0;\n\t                                this._uncache(true);\n\t                                return TimelineLite.prototype.invalidate.call(this);\n\t                            };\n\t                            p.addCallback = function(callback, position, params, scope) {\n\t                                return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n\t                            };\n\t                            p.removeCallback = function(callback, position) {\n\t                                if (callback) {\n\t                                    if (position == null) {\n\t                                        this._kill(null, callback);\n\t                                    } else {\n\t                                        var a = this.getTweensOf(callback, false), i = a.length, time = this._parseTimeOrLabel(position);\n\t                                        while (--i > -1) {\n\t                                            if (a[i]._startTime === time) {\n\t                                                a[i]._enabled(false, false);\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return this;\n\t                            };\n\t                            p.removePause = function(position) {\n\t                                return this.removeCallback(TimelineLite._internals.pauseCallback, position);\n\t                            };\n\t                            p.tweenTo = function(position, vars) {\n\t                                vars = vars || {};\n\t                                var copy = {\n\t                                    ease: _easeNone,\n\t                                    useFrames: this.usesFrames(),\n\t                                    immediateRender: false\n\t                                }, duration, p, t;\n\t                                for (p in vars) {\n\t                                    copy[p] = vars[p];\n\t                                }\n\t                                copy.time = this._parseTimeOrLabel(position);\n\t                                duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || .001;\n\t                                t = new TweenLite(this, duration, copy);\n\t                                copy.onStart = function() {\n\t                                    t.target.paused(true);\n\t                                    if (t.vars.time !== t.target.time() && duration === t.duration()) {\n\t                                        t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale);\n\t                                    }\n\t                                    if (vars.onStart) {\n\t                                        t._callback(\"onStart\");\n\t                                    }\n\t                                };\n\t                                return t;\n\t                            };\n\t                            p.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t                                vars = vars || {};\n\t                                fromPosition = this._parseTimeOrLabel(fromPosition);\n\t                                vars.startAt = {\n\t                                    onComplete: this.seek,\n\t                                    onCompleteParams: [ fromPosition ],\n\t                                    callbackScope: this\n\t                                };\n\t                                vars.immediateRender = vars.immediateRender !== false;\n\t                                var t = this.tweenTo(toPosition, vars);\n\t                                return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || .001);\n\t                            };\n\t                            p.render = function(time, suppressEvents, force) {\n\t                                if (this._gc) {\n\t                                    this._enabled(true, false);\n\t                                }\n\t                                var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), dur = this._duration, prevTime = this._time, prevTotalTime = this._totalTime, prevStart = this._startTime, prevTimeScale = this._timeScale, prevRawPrevTime = this._rawPrevTime, prevPaused = this._paused, prevCycle = this._cycle, tween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n\t                                if (time >= totalDur - 1e-7) {\n\t                                    if (!this._locked) {\n\t                                        this._totalTime = totalDur;\n\t                                        this._cycle = this._repeat;\n\t                                    }\n\t                                    if (!this._reversed) if (!this._hasPausedChild()) {\n\t                                        isComplete = true;\n\t                                        callback = \"onComplete\";\n\t                                        internalForce = !!this._timeline.autoRemoveChildren;\n\t                                        if (this._duration === 0) if (time <= 0 && time >= -1e-7 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n\t                                            internalForce = true;\n\t                                            if (prevRawPrevTime > _tinyNum) {\n\t                                                callback = \"onReverseComplete\";\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                    if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                        this._time = time = 0;\n\t                                    } else {\n\t                                        this._time = dur;\n\t                                        time = dur + 1e-4;\n\t                                    }\n\t                                } else if (time < 1e-7) {\n\t                                    if (!this._locked) {\n\t                                        this._totalTime = this._cycle = 0;\n\t                                    }\n\t                                    this._time = 0;\n\t                                    if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !this._locked) {\n\t                                        callback = \"onReverseComplete\";\n\t                                        isComplete = this._reversed;\n\t                                    }\n\t                                    if (time < 0) {\n\t                                        this._active = false;\n\t                                        if (this._timeline.autoRemoveChildren && this._reversed) {\n\t                                            internalForce = isComplete = true;\n\t                                            callback = \"onReverseComplete\";\n\t                                        } else if (prevRawPrevTime >= 0 && this._first) {\n\t                                            internalForce = true;\n\t                                        }\n\t                                        this._rawPrevTime = time;\n\t                                    } else {\n\t                                        this._rawPrevTime = dur || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                        if (time === 0 && isComplete) {\n\t                                            tween = this._first;\n\t                                            while (tween && tween._startTime === 0) {\n\t                                                if (!tween._duration) {\n\t                                                    isComplete = false;\n\t                                                }\n\t                                                tween = tween._next;\n\t                                            }\n\t                                        }\n\t                                        time = 0;\n\t                                        if (!this._initted) {\n\t                                            internalForce = true;\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    if (dur === 0 && prevRawPrevTime < 0) {\n\t                                        internalForce = true;\n\t                                    }\n\t                                    this._time = this._rawPrevTime = time;\n\t                                    if (!this._locked) {\n\t                                        this._totalTime = time;\n\t                                        if (this._repeat !== 0) {\n\t                                            cycleDuration = dur + this._repeatDelay;\n\t                                            this._cycle = this._totalTime / cycleDuration >> 0;\n\t                                            if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t                                                this._cycle--;\n\t                                            }\n\t                                            this._time = this._totalTime - this._cycle * cycleDuration;\n\t                                            if (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t                                                this._time = dur - this._time;\n\t                                            }\n\t                                            if (this._time > dur) {\n\t                                                this._time = dur;\n\t                                                time = dur + 1e-4;\n\t                                            } else if (this._time < 0) {\n\t                                                this._time = time = 0;\n\t                                            } else {\n\t                                                time = this._time;\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t                                        time = this._time;\n\t                                        if (time >= prevTime) {\n\t                                            tween = this._first;\n\t                                            while (tween && tween._startTime <= time && !pauseTween) {\n\t                                                if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t                                                    pauseTween = tween;\n\t                                                }\n\t                                                tween = tween._next;\n\t                                            }\n\t                                        } else {\n\t                                            tween = this._last;\n\t                                            while (tween && tween._startTime >= time && !pauseTween) {\n\t                                                if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t                                                    pauseTween = tween;\n\t                                                }\n\t                                                tween = tween._prev;\n\t                                            }\n\t                                        }\n\t                                        if (pauseTween) {\n\t                                            this._time = time = pauseTween._startTime;\n\t                                            this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (this._cycle !== prevCycle) if (!this._locked) {\n\t                                    var backwards = this._yoyo && (prevCycle & 1) !== 0, wrap = backwards === (this._yoyo && (this._cycle & 1) !== 0), recTotalTime = this._totalTime, recCycle = this._cycle, recRawPrevTime = this._rawPrevTime, recTime = this._time;\n\t                                    this._totalTime = prevCycle * dur;\n\t                                    if (this._cycle < prevCycle) {\n\t                                        backwards = !backwards;\n\t                                    } else {\n\t                                        this._totalTime += dur;\n\t                                    }\n\t                                    this._time = prevTime;\n\t                                    this._rawPrevTime = dur === 0 ? prevRawPrevTime - 1e-4 : prevRawPrevTime;\n\t                                    this._cycle = prevCycle;\n\t                                    this._locked = true;\n\t                                    prevTime = backwards ? 0 : dur;\n\t                                    this.render(prevTime, suppressEvents, dur === 0);\n\t                                    if (!suppressEvents) if (!this._gc) {\n\t                                        if (this.vars.onRepeat) {\n\t                                            this._callback(\"onRepeat\");\n\t                                        }\n\t                                    }\n\t                                    if (prevTime !== this._time) {\n\t                                        return;\n\t                                    }\n\t                                    if (wrap) {\n\t                                        prevTime = backwards ? dur + 1e-4 : -1e-4;\n\t                                        this.render(prevTime, true, false);\n\t                                    }\n\t                                    this._locked = false;\n\t                                    if (this._paused && !prevPaused) {\n\t                                        return;\n\t                                    }\n\t                                    this._time = recTime;\n\t                                    this._totalTime = recTotalTime;\n\t                                    this._cycle = recCycle;\n\t                                    this._rawPrevTime = recRawPrevTime;\n\t                                }\n\t                                if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t                                    if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n\t                                        this._callback(\"onUpdate\");\n\t                                    }\n\t                                    return;\n\t                                } else if (!this._initted) {\n\t                                    this._initted = true;\n\t                                }\n\t                                if (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n\t                                    this._active = true;\n\t                                }\n\t                                if (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n\t                                    this._callback(\"onStart\");\n\t                                }\n\t                                curTime = this._time;\n\t                                if (curTime >= prevTime) {\n\t                                    tween = this._first;\n\t                                    while (tween) {\n\t                                        next = tween._next;\n\t                                        if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                            break;\n\t                                        } else if (tween._active || tween._startTime <= this._time && !tween._paused && !tween._gc) {\n\t                                            if (pauseTween === tween) {\n\t                                                this.pause();\n\t                                            }\n\t                                            if (!tween._reversed) {\n\t                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            } else {\n\t                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            }\n\t                                        }\n\t                                        tween = next;\n\t                                    }\n\t                                } else {\n\t                                    tween = this._last;\n\t                                    while (tween) {\n\t                                        next = tween._prev;\n\t                                        if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                            break;\n\t                                        } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n\t                                            if (pauseTween === tween) {\n\t                                                pauseTween = tween._prev;\n\t                                                while (pauseTween && pauseTween.endTime() > this._time) {\n\t                                                    pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n\t                                                    pauseTween = pauseTween._prev;\n\t                                                }\n\t                                                pauseTween = null;\n\t                                                this.pause();\n\t                                            }\n\t                                            if (!tween._reversed) {\n\t                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            } else {\n\t                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                            }\n\t                                        }\n\t                                        tween = next;\n\t                                    }\n\t                                }\n\t                                if (this._onUpdate) if (!suppressEvents) {\n\t                                    if (_lazyTweens.length) {\n\t                                        _lazyRender();\n\t                                    }\n\t                                    this._callback(\"onUpdate\");\n\t                                }\n\t                                if (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n\t                                    if (isComplete) {\n\t                                        if (_lazyTweens.length) {\n\t                                            _lazyRender();\n\t                                        }\n\t                                        if (this._timeline.autoRemoveChildren) {\n\t                                            this._enabled(false, false);\n\t                                        }\n\t                                        this._active = false;\n\t                                    }\n\t                                    if (!suppressEvents && this.vars[callback]) {\n\t                                        this._callback(callback);\n\t                                    }\n\t                                }\n\t                            };\n\t                            p.getActive = function(nested, tweens, timelines) {\n\t                                if (nested == null) {\n\t                                    nested = true;\n\t                                }\n\t                                if (tweens == null) {\n\t                                    tweens = true;\n\t                                }\n\t                                if (timelines == null) {\n\t                                    timelines = false;\n\t                                }\n\t                                var a = [], all = this.getChildren(nested, tweens, timelines), cnt = 0, l = all.length, i, tween;\n\t                                for (i = 0; i < l; i++) {\n\t                                    tween = all[i];\n\t                                    if (tween.isActive()) {\n\t                                        a[cnt++] = tween;\n\t                                    }\n\t                                }\n\t                                return a;\n\t                            };\n\t                            p.getLabelAfter = function(time) {\n\t                                if (!time) if (time !== 0) {\n\t                                    time = this._time;\n\t                                }\n\t                                var labels = this.getLabelsArray(), l = labels.length, i;\n\t                                for (i = 0; i < l; i++) {\n\t                                    if (labels[i].time > time) {\n\t                                        return labels[i].name;\n\t                                    }\n\t                                }\n\t                                return null;\n\t                            };\n\t                            p.getLabelBefore = function(time) {\n\t                                if (time == null) {\n\t                                    time = this._time;\n\t                                }\n\t                                var labels = this.getLabelsArray(), i = labels.length;\n\t                                while (--i > -1) {\n\t                                    if (labels[i].time < time) {\n\t                                        return labels[i].name;\n\t                                    }\n\t                                }\n\t                                return null;\n\t                            };\n\t                            p.getLabelsArray = function() {\n\t                                var a = [], cnt = 0, p;\n\t                                for (p in this._labels) {\n\t                                    a[cnt++] = {\n\t                                        time: this._labels[p],\n\t                                        name: p\n\t                                    };\n\t                                }\n\t                                a.sort(function(a, b) {\n\t                                    return a.time - b.time;\n\t                                });\n\t                                return a;\n\t                            };\n\t                            p.progress = function(value, suppressEvents) {\n\t                                return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n\t                            };\n\t                            p.totalProgress = function(value, suppressEvents) {\n\t                                return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n\t                            };\n\t                            p.totalDuration = function(value) {\n\t                                if (!arguments.length) {\n\t                                    if (this._dirty) {\n\t                                        TimelineLite.prototype.totalDuration.call(this);\n\t                                        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n\t                                    }\n\t                                    return this._totalDuration;\n\t                                }\n\t                                return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);\n\t                            };\n\t                            p.time = function(value, suppressEvents) {\n\t                                if (!arguments.length) {\n\t                                    return this._time;\n\t                                }\n\t                                if (this._dirty) {\n\t                                    this.totalDuration();\n\t                                }\n\t                                if (value > this._duration) {\n\t                                    value = this._duration;\n\t                                }\n\t                                if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                    value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n\t                                } else if (this._repeat !== 0) {\n\t                                    value += this._cycle * (this._duration + this._repeatDelay);\n\t                                }\n\t                                return this.totalTime(value, suppressEvents);\n\t                            };\n\t                            p.repeat = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._repeat;\n\t                                }\n\t                                this._repeat = value;\n\t                                return this._uncache(true);\n\t                            };\n\t                            p.repeatDelay = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._repeatDelay;\n\t                                }\n\t                                this._repeatDelay = value;\n\t                                return this._uncache(true);\n\t                            };\n\t                            p.yoyo = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this._yoyo;\n\t                                }\n\t                                this._yoyo = value;\n\t                                return this;\n\t                            };\n\t                            p.currentLabel = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return this.getLabelBefore(this._time + 1e-8);\n\t                                }\n\t                                return this.seek(value, true);\n\t                            };\n\t                            return TimelineMax;\n\t                        }, true);\n\t                        (function() {\n\t                            var _RAD2DEG = 180 / Math.PI, _r1 = [], _r2 = [], _r3 = [], _corProps = {}, _globals = _gsScope._gsDefine.globals, Segment = function(a, b, c, d) {\n\t                                if (c === d) {\n\t                                    c = d - (d - b) / 1e6;\n\t                                }\n\t                                if (a === b) {\n\t                                    b = a + (c - a) / 1e6;\n\t                                }\n\t                                this.a = a;\n\t                                this.b = b;\n\t                                this.c = c;\n\t                                this.d = d;\n\t                                this.da = d - a;\n\t                                this.ca = c - a;\n\t                                this.ba = b - a;\n\t                            }, _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\", cubicToQuadratic = function(a, b, c, d) {\n\t                                var q1 = {\n\t                                    a: a\n\t                                }, q2 = {}, q3 = {}, q4 = {\n\t                                    c: d\n\t                                }, mab = (a + b) / 2, mbc = (b + c) / 2, mcd = (c + d) / 2, mabc = (mab + mbc) / 2, mbcd = (mbc + mcd) / 2, m8 = (mbcd - mabc) / 8;\n\t                                q1.b = mab + (a - mab) / 4;\n\t                                q2.b = mabc + m8;\n\t                                q1.c = q2.a = (q1.b + q2.b) / 2;\n\t                                q2.c = q3.a = (mabc + mbcd) / 2;\n\t                                q3.b = mbcd - m8;\n\t                                q4.b = mcd + (d - mcd) / 4;\n\t                                q3.c = q4.a = (q3.b + q4.b) / 2;\n\t                                return [ q1, q2, q3, q4 ];\n\t                            }, _calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t                                var l = a.length - 1, ii = 0, cp1 = a[0].a, i, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t                                for (i = 0; i < l; i++) {\n\t                                    seg = a[ii];\n\t                                    p1 = seg.a;\n\t                                    p2 = seg.d;\n\t                                    p3 = a[ii + 1].d;\n\t                                    if (correlate) {\n\t                                        r1 = _r1[i];\n\t                                        r2 = _r2[i];\n\t                                        tl = (r2 + r1) * curviness * .25 / (basic ? .5 : _r3[i] || .5);\n\t                                        m1 = p2 - (p2 - p1) * (basic ? curviness * .5 : r1 !== 0 ? tl / r1 : 0);\n\t                                        m2 = p2 + (p3 - p2) * (basic ? curviness * .5 : r2 !== 0 ? tl / r2 : 0);\n\t                                        mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + .5) / 4 || 0));\n\t                                    } else {\n\t                                        m1 = p2 - (p2 - p1) * curviness * .5;\n\t                                        m2 = p2 + (p3 - p2) * curviness * .5;\n\t                                        mm = p2 - (m1 + m2) / 2;\n\t                                    }\n\t                                    m1 += mm;\n\t                                    m2 += mm;\n\t                                    seg.c = cp2 = m1;\n\t                                    if (i !== 0) {\n\t                                        seg.b = cp1;\n\t                                    } else {\n\t                                        seg.b = cp1 = seg.a + (seg.c - seg.a) * .6;\n\t                                    }\n\t                                    seg.da = p2 - p1;\n\t                                    seg.ca = cp2 - p1;\n\t                                    seg.ba = cp1 - p1;\n\t                                    if (quad) {\n\t                                        qb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t                                        a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t                                        ii += 4;\n\t                                    } else {\n\t                                        ii++;\n\t                                    }\n\t                                    cp1 = m2;\n\t                                }\n\t                                seg = a[ii];\n\t                                seg.b = cp1;\n\t                                seg.c = cp1 + (seg.d - cp1) * .4;\n\t                                seg.da = seg.d - seg.a;\n\t                                seg.ca = seg.c - seg.a;\n\t                                seg.ba = cp1 - seg.a;\n\t                                if (quad) {\n\t                                    qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t                                    a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t                                }\n\t                            }, _parseAnchors = function(values, p, correlate, prepend) {\n\t                                var a = [], l, i, p1, p2, p3, tmp;\n\t                                if (prepend) {\n\t                                    values = [ prepend ].concat(values);\n\t                                    i = values.length;\n\t                                    while (--i > -1) {\n\t                                        if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t                                            values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n\t                                        }\n\t                                    }\n\t                                }\n\t                                l = values.length - 2;\n\t                                if (l < 0) {\n\t                                    a[0] = new Segment(values[0][p], 0, 0, values[l < -1 ? 0 : 1][p]);\n\t                                    return a;\n\t                                }\n\t                                for (i = 0; i < l; i++) {\n\t                                    p1 = values[i][p];\n\t                                    p2 = values[i + 1][p];\n\t                                    a[i] = new Segment(p1, 0, 0, p2);\n\t                                    if (correlate) {\n\t                                        p3 = values[i + 2][p];\n\t                                        _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t                                        _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t                                    }\n\t                                }\n\t                                a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n\t                                return a;\n\t                            }, bezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t                                var obj = {}, props = [], first = prepend || values[0], i, p, a, j, r, l, seamless, last;\n\t                                correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n\t                                if (curviness == null) {\n\t                                    curviness = 1;\n\t                                }\n\t                                for (p in values[0]) {\n\t                                    props.push(p);\n\t                                }\n\t                                if (values.length > 1) {\n\t                                    last = values[values.length - 1];\n\t                                    seamless = true;\n\t                                    i = props.length;\n\t                                    while (--i > -1) {\n\t                                        p = props[i];\n\t                                        if (Math.abs(first[p] - last[p]) > .05) {\n\t                                            seamless = false;\n\t                                            break;\n\t                                        }\n\t                                    }\n\t                                    if (seamless) {\n\t                                        values = values.concat();\n\t                                        if (prepend) {\n\t                                            values.unshift(prepend);\n\t                                        }\n\t                                        values.push(values[1]);\n\t                                        prepend = values[values.length - 3];\n\t                                    }\n\t                                }\n\t                                _r1.length = _r2.length = _r3.length = 0;\n\t                                i = props.length;\n\t                                while (--i > -1) {\n\t                                    p = props[i];\n\t                                    _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n\t                                    obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t                                }\n\t                                i = _r1.length;\n\t                                while (--i > -1) {\n\t                                    _r1[i] = Math.sqrt(_r1[i]);\n\t                                    _r2[i] = Math.sqrt(_r2[i]);\n\t                                }\n\t                                if (!basic) {\n\t                                    i = props.length;\n\t                                    while (--i > -1) {\n\t                                        if (_corProps[p]) {\n\t                                            a = obj[props[i]];\n\t                                            l = a.length - 1;\n\t                                            for (j = 0; j < l; j++) {\n\t                                                r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n\t                                                _r3[j] = (_r3[j] || 0) + r * r;\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    i = _r3.length;\n\t                                    while (--i > -1) {\n\t                                        _r3[i] = Math.sqrt(_r3[i]);\n\t                                    }\n\t                                }\n\t                                i = props.length;\n\t                                j = quadratic ? 4 : 1;\n\t                                while (--i > -1) {\n\t                                    p = props[i];\n\t                                    a = obj[p];\n\t                                    _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n\t                                    if (seamless) {\n\t                                        a.splice(0, j);\n\t                                        a.splice(a.length - j, j);\n\t                                    }\n\t                                }\n\t                                return obj;\n\t                            }, _parseBezierData = function(values, type, prepend) {\n\t                                type = type || \"soft\";\n\t                                var obj = {}, inc = type === \"cubic\" ? 3 : 2, soft = type === \"soft\", props = [], a, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t                                if (soft && prepend) {\n\t                                    values = [ prepend ].concat(values);\n\t                                }\n\t                                if (values == null || values.length < inc + 1) {\n\t                                    throw \"invalid Bezier data\";\n\t                                }\n\t                                for (p in values[0]) {\n\t                                    props.push(p);\n\t                                }\n\t                                i = props.length;\n\t                                while (--i > -1) {\n\t                                    p = props[i];\n\t                                    obj[p] = cur = [];\n\t                                    cnt = 0;\n\t                                    l = values.length;\n\t                                    for (j = 0; j < l; j++) {\n\t                                        a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t                                        if (soft) if (j > 1) if (j < l - 1) {\n\t                                            cur[cnt++] = (a + cur[cnt - 2]) / 2;\n\t                                        }\n\t                                        cur[cnt++] = a;\n\t                                    }\n\t                                    l = cnt - inc + 1;\n\t                                    cnt = 0;\n\t                                    for (j = 0; j < l; j += inc) {\n\t                                        a = cur[j];\n\t                                        b = cur[j + 1];\n\t                                        c = cur[j + 2];\n\t                                        d = inc === 2 ? 0 : cur[j + 3];\n\t                                        cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t                                    }\n\t                                    cur.length = cnt;\n\t                                }\n\t                                return obj;\n\t                            }, _addCubicLengths = function(a, steps, resolution) {\n\t                                var inc = 1 / resolution, j = a.length, d, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t                                while (--j > -1) {\n\t                                    bez = a[j];\n\t                                    s = bez.a;\n\t                                    da = bez.d - s;\n\t                                    ca = bez.c - s;\n\t                                    ba = bez.b - s;\n\t                                    d = d1 = 0;\n\t                                    for (i = 1; i <= resolution; i++) {\n\t                                        p = inc * i;\n\t                                        inv = 1 - p;\n\t                                        d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t                                        index = j * resolution + i - 1;\n\t                                        steps[index] = (steps[index] || 0) + d * d;\n\t                                    }\n\t                                }\n\t                            }, _parseLengthData = function(obj, resolution) {\n\t                                resolution = resolution >> 0 || 6;\n\t                                var a = [], lengths = [], d = 0, total = 0, threshold = resolution - 1, segments = [], curLS = [], p, i, l, index;\n\t                                for (p in obj) {\n\t                                    _addCubicLengths(obj[p], a, resolution);\n\t                                }\n\t                                l = a.length;\n\t                                for (i = 0; i < l; i++) {\n\t                                    d += Math.sqrt(a[i]);\n\t                                    index = i % resolution;\n\t                                    curLS[index] = d;\n\t                                    if (index === threshold) {\n\t                                        total += d;\n\t                                        index = i / resolution >> 0;\n\t                                        segments[index] = curLS;\n\t                                        lengths[index] = total;\n\t                                        d = 0;\n\t                                        curLS = [];\n\t                                    }\n\t                                }\n\t                                return {\n\t                                    length: total,\n\t                                    lengths: lengths,\n\t                                    segments: segments\n\t                                };\n\t                            }, BezierPlugin = _gsScope._gsDefine.plugin({\n\t                                propName: \"bezier\",\n\t                                priority: -1,\n\t                                version: \"1.3.6\",\n\t                                API: 2,\n\t                                global: true,\n\t                                init: function(target, vars, tween) {\n\t                                    this._target = target;\n\t                                    if (vars instanceof Array) {\n\t                                        vars = {\n\t                                            values: vars\n\t                                        };\n\t                                    }\n\t                                    this._func = {};\n\t                                    this._round = {};\n\t                                    this._props = [];\n\t                                    this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n\t                                    var values = vars.values || [], first = {}, second = values[0], autoRotate = vars.autoRotate || tween.vars.orientToBezier, p, isFunc, i, j, prepend;\n\t                                    this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [ [ \"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0 ] ] : null;\n\t                                    for (p in second) {\n\t                                        this._props.push(p);\n\t                                    }\n\t                                    i = this._props.length;\n\t                                    while (--i > -1) {\n\t                                        p = this._props[i];\n\t                                        this._overwriteProps.push(p);\n\t                                        isFunc = this._func[p] = typeof target[p] === \"function\";\n\t                                        first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n\t                                        if (!prepend) if (first[p] !== values[0][p]) {\n\t                                            prepend = first;\n\t                                        }\n\t                                    }\n\t                                    this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t                                    this._segCount = this._beziers[p].length;\n\t                                    if (this._timeRes) {\n\t                                        var ld = _parseLengthData(this._beziers, this._timeRes);\n\t                                        this._length = ld.length;\n\t                                        this._lengths = ld.lengths;\n\t                                        this._segments = ld.segments;\n\t                                        this._l1 = this._li = this._s1 = this._si = 0;\n\t                                        this._l2 = this._lengths[0];\n\t                                        this._curSeg = this._segments[0];\n\t                                        this._s2 = this._curSeg[0];\n\t                                        this._prec = 1 / this._curSeg.length;\n\t                                    }\n\t                                    if (autoRotate = this._autoRotate) {\n\t                                        this._initialRotations = [];\n\t                                        if (!(autoRotate[0] instanceof Array)) {\n\t                                            this._autoRotate = autoRotate = [ autoRotate ];\n\t                                        }\n\t                                        i = autoRotate.length;\n\t                                        while (--i > -1) {\n\t                                            for (j = 0; j < 3; j++) {\n\t                                                p = autoRotate[i][j];\n\t                                                this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n\t                                            }\n\t                                            p = autoRotate[i][2];\n\t                                            this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t                                        }\n\t                                    }\n\t                                    this._startRatio = tween.vars.runBackwards ? 1 : 0;\n\t                                    return true;\n\t                                },\n\t                                set: function(v) {\n\t                                    var segments = this._segCount, func = this._func, target = this._target, notStart = v !== this._startRatio, curIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n\t                                    if (!this._timeRes) {\n\t                                        curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n\t                                        t = (v - curIndex * (1 / segments)) * segments;\n\t                                    } else {\n\t                                        lengths = this._lengths;\n\t                                        curSeg = this._curSeg;\n\t                                        v *= this._length;\n\t                                        i = this._li;\n\t                                        if (v > this._l2 && i < segments - 1) {\n\t                                            l = segments - 1;\n\t                                            while (i < l && (this._l2 = lengths[++i]) <= v) {}\n\t                                            this._l1 = lengths[i - 1];\n\t                                            this._li = i;\n\t                                            this._curSeg = curSeg = this._segments[i];\n\t                                            this._s2 = curSeg[this._s1 = this._si = 0];\n\t                                        } else if (v < this._l1 && i > 0) {\n\t                                            while (i > 0 && (this._l1 = lengths[--i]) >= v) {}\n\t                                            if (i === 0 && v < this._l1) {\n\t                                                this._l1 = 0;\n\t                                            } else {\n\t                                                i++;\n\t                                            }\n\t                                            this._l2 = lengths[i];\n\t                                            this._li = i;\n\t                                            this._curSeg = curSeg = this._segments[i];\n\t                                            this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t                                            this._s2 = curSeg[this._si];\n\t                                        }\n\t                                        curIndex = i;\n\t                                        v -= this._l1;\n\t                                        i = this._si;\n\t                                        if (v > this._s2 && i < curSeg.length - 1) {\n\t                                            l = curSeg.length - 1;\n\t                                            while (i < l && (this._s2 = curSeg[++i]) <= v) {}\n\t                                            this._s1 = curSeg[i - 1];\n\t                                            this._si = i;\n\t                                        } else if (v < this._s1 && i > 0) {\n\t                                            while (i > 0 && (this._s1 = curSeg[--i]) >= v) {}\n\t                                            if (i === 0 && v < this._s1) {\n\t                                                this._s1 = 0;\n\t                                            } else {\n\t                                                i++;\n\t                                            }\n\t                                            this._s2 = curSeg[i];\n\t                                            this._si = i;\n\t                                        }\n\t                                        t = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n\t                                    }\n\t                                    inv = 1 - t;\n\t                                    i = this._props.length;\n\t                                    while (--i > -1) {\n\t                                        p = this._props[i];\n\t                                        b = this._beziers[p][curIndex];\n\t                                        val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t                                        if (this._round[p]) {\n\t                                            val = Math.round(val);\n\t                                        }\n\t                                        if (func[p]) {\n\t                                            target[p](val);\n\t                                        } else {\n\t                                            target[p] = val;\n\t                                        }\n\t                                    }\n\t                                    if (this._autoRotate) {\n\t                                        var ar = this._autoRotate, b2, x1, y1, x2, y2, add, conv;\n\t                                        i = ar.length;\n\t                                        while (--i > -1) {\n\t                                            p = ar[i][2];\n\t                                            add = ar[i][3] || 0;\n\t                                            conv = ar[i][4] === true ? 1 : _RAD2DEG;\n\t                                            b = this._beziers[ar[i][0]];\n\t                                            b2 = this._beziers[ar[i][1]];\n\t                                            if (b && b2) {\n\t                                                b = b[curIndex];\n\t                                                b2 = b2[curIndex];\n\t                                                x1 = b.a + (b.b - b.a) * t;\n\t                                                x2 = b.b + (b.c - b.b) * t;\n\t                                                x1 += (x2 - x1) * t;\n\t                                                x2 += (b.c + (b.d - b.c) * t - x2) * t;\n\t                                                y1 = b2.a + (b2.b - b2.a) * t;\n\t                                                y2 = b2.b + (b2.c - b2.b) * t;\n\t                                                y1 += (y2 - y1) * t;\n\t                                                y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n\t                                                val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\t                                                if (func[p]) {\n\t                                                    target[p](val);\n\t                                                } else {\n\t                                                    target[p] = val;\n\t                                                }\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }), p = BezierPlugin.prototype;\n\t                            BezierPlugin.bezierThrough = bezierThrough;\n\t                            BezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t                            BezierPlugin._autoCSS = true;\n\t                            BezierPlugin.quadraticToCubic = function(a, b, c) {\n\t                                return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t                            };\n\t                            BezierPlugin._cssRegister = function() {\n\t                                var CSSPlugin = _globals.CSSPlugin;\n\t                                if (!CSSPlugin) {\n\t                                    return;\n\t                                }\n\t                                var _internals = CSSPlugin._internals, _parseToProxy = _internals._parseToProxy, _setPluginRatio = _internals._setPluginRatio, CSSPropTween = _internals.CSSPropTween;\n\t                                _internals._registerComplexSpecialProp(\"bezier\", {\n\t                                    parser: function(t, e, prop, cssp, pt, plugin) {\n\t                                        if (e instanceof Array) {\n\t                                            e = {\n\t                                                values: e\n\t                                            };\n\t                                        }\n\t                                        plugin = new BezierPlugin();\n\t                                        var values = e.values, l = values.length - 1, pluginValues = [], v = {}, i, p, data;\n\t                                        if (l < 0) {\n\t                                            return pt;\n\t                                        }\n\t                                        for (i = 0; i <= l; i++) {\n\t                                            data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n\t                                            pluginValues[i] = data.end;\n\t                                        }\n\t                                        for (p in e) {\n\t                                            v[p] = e[p];\n\t                                        }\n\t                                        v.values = pluginValues;\n\t                                        pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t                                        pt.data = data;\n\t                                        pt.plugin = plugin;\n\t                                        pt.setRatio = _setPluginRatio;\n\t                                        if (v.autoRotate === 0) {\n\t                                            v.autoRotate = true;\n\t                                        }\n\t                                        if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t                                            i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n\t                                            v.autoRotate = data.end.left != null ? [ [ \"left\", \"top\", \"rotation\", i, false ] ] : data.end.x != null ? [ [ \"x\", \"y\", \"rotation\", i, false ] ] : false;\n\t                                        }\n\t                                        if (v.autoRotate) {\n\t                                            if (!cssp._transform) {\n\t                                                cssp._enableTransforms(false);\n\t                                            }\n\t                                            data.autoRotate = cssp._target._gsTransform;\n\t                                            data.proxy.rotation = data.autoRotate.rotation || 0;\n\t                                        }\n\t                                        plugin._onInitTween(data.proxy, v, cssp._tween);\n\t                                        return pt;\n\t                                    }\n\t                                });\n\t                            };\n\t                            p._roundProps = function(lookup, value) {\n\t                                var op = this._overwriteProps, i = op.length;\n\t                                while (--i > -1) {\n\t                                    if (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n\t                                        this._round[op[i]] = value;\n\t                                    }\n\t                                }\n\t                            };\n\t                            p._kill = function(lookup) {\n\t                                var a = this._props, p, i;\n\t                                for (p in this._beziers) {\n\t                                    if (p in lookup) {\n\t                                        delete this._beziers[p];\n\t                                        delete this._func[p];\n\t                                        i = a.length;\n\t                                        while (--i > -1) {\n\t                                            if (a[i] === p) {\n\t                                                a.splice(i, 1);\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return this._super._kill.call(this, lookup);\n\t                            };\n\t                        })();\n\t                        _gsScope._gsDefine(\"plugins.CSSPlugin\", [ \"plugins.TweenPlugin\", \"TweenLite\" ], function(TweenPlugin, TweenLite) {\n\t                            var CSSPlugin = function() {\n\t                                TweenPlugin.call(this, \"css\");\n\t                                this._overwriteProps.length = 0;\n\t                                this.setRatio = CSSPlugin.prototype.setRatio;\n\t                            }, _globals = _gsScope._gsDefine.globals, _hasPriority, _suffixMap, _cs, _overwriteProps, _specialProps = {}, p = CSSPlugin.prototype = new TweenPlugin(\"css\");\n\t                            p.constructor = CSSPlugin;\n\t                            CSSPlugin.version = \"1.18.5\";\n\t                            CSSPlugin.API = 2;\n\t                            CSSPlugin.defaultTransformPerspective = 0;\n\t                            CSSPlugin.defaultSkewType = \"compensated\";\n\t                            CSSPlugin.defaultSmoothOrigin = true;\n\t                            p = \"px\";\n\t                            CSSPlugin.suffixMap = {\n\t                                top: p,\n\t                                right: p,\n\t                                bottom: p,\n\t                                left: p,\n\t                                width: p,\n\t                                height: p,\n\t                                fontSize: p,\n\t                                padding: p,\n\t                                margin: p,\n\t                                perspective: p,\n\t                                lineHeight: \"\"\n\t                            };\n\t                            var _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g, _relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g, _valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, _NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, _suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g, _opacityExp = /opacity *= *([^)]*)/i, _opacityValExp = /opacity:([^;]*)/i, _alphaFilterExp = /alpha\\(opacity *=.+?\\)/i, _rgbhslExp = /^(rgb|hsl)/, _capsExp = /([A-Z])/g, _camelExp = /-([a-z])/gi, _urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, _camelFunc = function(s, g) {\n\t                                return g.toUpperCase();\n\t                            }, _horizExp = /(?:Left|Right|Width)/i, _ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi, _ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i, _commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, _complexExp = /[\\s,\\(]/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _forcePT = {}, _doc = document, _createElement = function(type) {\n\t                                return _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n\t                            }, _tempDiv = _createElement(\"div\"), _tempImg = _createElement(\"img\"), _internals = CSSPlugin._internals = {\n\t                                _specialProps: _specialProps\n\t                            }, _agent = navigator.userAgent, _autoRound, _reqSafariFix, _isSafari, _isFirefox, _isSafariLT6, _ieVers, _supportsOpacity = function() {\n\t                                var i = _agent.indexOf(\"Android\"), a = _createElement(\"a\");\n\t                                _isSafari = _agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i + 8, 1)) > 3);\n\t                                _isSafariLT6 = _isSafari && Number(_agent.substr(_agent.indexOf(\"Version/\") + 8, 1)) < 6;\n\t                                _isFirefox = _agent.indexOf(\"Firefox\") !== -1;\n\t                                if (/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(_agent) || /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(_agent)) {\n\t                                    _ieVers = parseFloat(RegExp.$1);\n\t                                }\n\t                                if (!a) {\n\t                                    return false;\n\t                                }\n\t                                a.style.cssText = \"top:1px;opacity:.55;\";\n\t                                return /^0.55/.test(a.style.opacity);\n\t                            }(), _getIEOpacity = function(v) {\n\t                                return _opacityExp.test(typeof v === \"string\" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ? parseFloat(RegExp.$1) / 100 : 1;\n\t                            }, _log = function(s) {\n\t                                if (window.console) {\n\t                                    console.log(s);\n\t                                }\n\t                            }, _prefixCSS = \"\", _prefix = \"\", _checkPropPrefix = function(p, e) {\n\t                                e = e || _tempDiv;\n\t                                var s = e.style, a, i;\n\t                                if (s[p] !== undefined) {\n\t                                    return p;\n\t                                }\n\t                                p = p.charAt(0).toUpperCase() + p.substr(1);\n\t                                a = [ \"O\", \"Moz\", \"ms\", \"Ms\", \"Webkit\" ];\n\t                                i = 5;\n\t                                while (--i > -1 && s[a[i] + p] === undefined) {}\n\t                                if (i >= 0) {\n\t                                    _prefix = i === 3 ? \"ms\" : a[i];\n\t                                    _prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n\t                                    return _prefix + p;\n\t                                }\n\t                                return null;\n\t                            }, _getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {}, _getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n\t                                var rv;\n\t                                if (!_supportsOpacity) if (p === \"opacity\") {\n\t                                    return _getIEOpacity(t);\n\t                                }\n\t                                if (!calc && t.style[p]) {\n\t                                    rv = t.style[p];\n\t                                } else if (cs = cs || _getComputedStyle(t)) {\n\t                                    rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t                                } else if (t.currentStyle) {\n\t                                    rv = t.currentStyle[p];\n\t                                }\n\t                                return dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\") ? dflt : rv;\n\t                            }, _convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n\t                                if (sfx === \"px\" || !sfx) {\n\t                                    return v;\n\t                                }\n\t                                if (sfx === \"auto\" || !v) {\n\t                                    return 0;\n\t                                }\n\t                                var horiz = _horizExp.test(p), node = t, style = _tempDiv.style, neg = v < 0, precise = v === 1, pix, cache, time;\n\t                                if (neg) {\n\t                                    v = -v;\n\t                                }\n\t                                if (precise) {\n\t                                    v *= 100;\n\t                                }\n\t                                if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n\t                                    pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);\n\t                                } else {\n\t                                    style.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n\t                                    if (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n\t                                        node = t.parentNode || _doc.body;\n\t                                        cache = node._gsCache;\n\t                                        time = TweenLite.ticker.frame;\n\t                                        if (cache && horiz && cache.time === time) {\n\t                                            return cache.width * v / 100;\n\t                                        }\n\t                                        style[horiz ? \"width\" : \"height\"] = v + sfx;\n\t                                    } else {\n\t                                        style[horiz ? \"borderLeftWidth\" : \"borderTopWidth\"] = v + sfx;\n\t                                    }\n\t                                    node.appendChild(_tempDiv);\n\t                                    pix = parseFloat(_tempDiv[horiz ? \"offsetWidth\" : \"offsetHeight\"]);\n\t                                    node.removeChild(_tempDiv);\n\t                                    if (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n\t                                        cache = node._gsCache = node._gsCache || {};\n\t                                        cache.time = time;\n\t                                        cache.width = pix / v * 100;\n\t                                    }\n\t                                    if (pix === 0 && !recurse) {\n\t                                        pix = _convertToPixels(t, p, v, sfx, true);\n\t                                    }\n\t                                }\n\t                                if (precise) {\n\t                                    pix /= 100;\n\t                                }\n\t                                return neg ? -pix : pix;\n\t                            }, _calculateOffset = _internals.calculateOffset = function(t, p, cs) {\n\t                                if (_getStyle(t, \"position\", cs) !== \"absolute\") {\n\t                                    return 0;\n\t                                }\n\t                                var dim = p === \"left\" ? \"Left\" : \"Top\", v = _getStyle(t, \"margin\" + dim, cs);\n\t                                return t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n\t                            }, _getAllStyles = function(t, cs) {\n\t                                var s = {}, i, tr, p;\n\t                                if (cs = cs || _getComputedStyle(t, null)) {\n\t                                    if (i = cs.length) {\n\t                                        while (--i > -1) {\n\t                                            p = cs[i];\n\t                                            if (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) {\n\t                                                s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n\t                                            }\n\t                                        }\n\t                                    } else {\n\t                                        for (i in cs) {\n\t                                            if (i.indexOf(\"Transform\") === -1 || _transformProp === i) {\n\t                                                s[i] = cs[i];\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                } else if (cs = t.currentStyle || t.style) {\n\t                                    for (i in cs) {\n\t                                        if (typeof i === \"string\" && s[i] === undefined) {\n\t                                            s[i.replace(_camelExp, _camelFunc)] = cs[i];\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (!_supportsOpacity) {\n\t                                    s.opacity = _getIEOpacity(t);\n\t                                }\n\t                                tr = _getTransform(t, cs, false);\n\t                                s.rotation = tr.rotation;\n\t                                s.skewX = tr.skewX;\n\t                                s.scaleX = tr.scaleX;\n\t                                s.scaleY = tr.scaleY;\n\t                                s.x = tr.x;\n\t                                s.y = tr.y;\n\t                                if (_supports3D) {\n\t                                    s.z = tr.z;\n\t                                    s.rotationX = tr.rotationX;\n\t                                    s.rotationY = tr.rotationY;\n\t                                    s.scaleZ = tr.scaleZ;\n\t                                }\n\t                                if (s.filters) {\n\t                                    delete s.filters;\n\t                                }\n\t                                return s;\n\t                            }, _cssDif = function(t, s1, s2, vars, forceLookup) {\n\t                                var difs = {}, style = t.style, val, p, mpt;\n\t                                for (p in s2) {\n\t                                    if (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf(\"Origin\") === -1) if (typeof val === \"number\" || typeof val === \"string\") {\n\t                                        difs[p] = val === \"auto\" && (p === \"left\" || p === \"top\") ? _calculateOffset(t, p) : (val === \"\" || val === \"auto\" || val === \"none\") && typeof s1[p] === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\" ? 0 : val;\n\t                                        if (style[p] !== undefined) {\n\t                                            mpt = new MiniPropTween(style, p, style[p], mpt);\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (vars) {\n\t                                    for (p in vars) {\n\t                                        if (p !== \"className\") {\n\t                                            difs[p] = vars[p];\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return {\n\t                                    difs: difs,\n\t                                    firstMPT: mpt\n\t                                };\n\t                            }, _dimensions = {\n\t                                width: [ \"Left\", \"Right\" ],\n\t                                height: [ \"Top\", \"Bottom\" ]\n\t                            }, _margins = [ \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\" ], _getDimension = function(t, p, cs) {\n\t                                if ((t.nodeName + \"\").toLowerCase() === \"svg\") {\n\t                                    return (cs || _getComputedStyle(t))[p] || 0;\n\t                                } else if (t.getBBox && _isSVG(t)) {\n\t                                    return t.getBBox()[p] || 0;\n\t                                }\n\t                                var v = parseFloat(p === \"width\" ? t.offsetWidth : t.offsetHeight), a = _dimensions[p], i = a.length;\n\t                                cs = cs || _getComputedStyle(t, null);\n\t                                while (--i > -1) {\n\t                                    v -= parseFloat(_getStyle(t, \"padding\" + a[i], cs, true)) || 0;\n\t                                    v -= parseFloat(_getStyle(t, \"border\" + a[i] + \"Width\", cs, true)) || 0;\n\t                                }\n\t                                return v;\n\t                            }, _parsePosition = function(v, recObj) {\n\t                                if (v === \"contain\" || v === \"auto\" || v === \"auto auto\") {\n\t                                    return v + \" \";\n\t                                }\n\t                                if (v == null || v === \"\") {\n\t                                    v = \"0 0\";\n\t                                }\n\t                                var a = v.split(\" \"), x = v.indexOf(\"left\") !== -1 ? \"0%\" : v.indexOf(\"right\") !== -1 ? \"100%\" : a[0], y = v.indexOf(\"top\") !== -1 ? \"0%\" : v.indexOf(\"bottom\") !== -1 ? \"100%\" : a[1], i;\n\t                                if (a.length > 3 && !recObj) {\n\t                                    a = v.split(\", \").join(\",\").split(\",\");\n\t                                    v = [];\n\t                                    for (i = 0; i < a.length; i++) {\n\t                                        v.push(_parsePosition(a[i]));\n\t                                    }\n\t                                    return v.join(\",\");\n\t                                }\n\t                                if (y == null) {\n\t                                    y = x === \"center\" ? \"50%\" : \"0\";\n\t                                } else if (y === \"center\") {\n\t                                    y = \"50%\";\n\t                                }\n\t                                if (x === \"center\" || isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1) {\n\t                                    x = \"50%\";\n\t                                }\n\t                                v = x + \" \" + y + (a.length > 2 ? \" \" + a[2] : \"\");\n\t                                if (recObj) {\n\t                                    recObj.oxp = x.indexOf(\"%\") !== -1;\n\t                                    recObj.oyp = y.indexOf(\"%\") !== -1;\n\t                                    recObj.oxr = x.charAt(1) === \"=\";\n\t                                    recObj.oyr = y.charAt(1) === \"=\";\n\t                                    recObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n\t                                    recObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n\t                                    recObj.v = v;\n\t                                }\n\t                                return recObj || v;\n\t                            }, _parseChange = function(e, b) {\n\t                                return typeof e === \"string\" && e.charAt(1) === \"=\" ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;\n\t                            }, _parseVal = function(v, d) {\n\t                                return v == null ? d : typeof v === \"string\" && v.charAt(1) === \"=\" ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n\t                            }, _parseAngle = function(v, d, p, directionalEnd) {\n\t                                var min = 1e-6, cap, split, dif, result, isRelative;\n\t                                if (v == null) {\n\t                                    result = d;\n\t                                } else if (typeof v === \"number\") {\n\t                                    result = v;\n\t                                } else {\n\t                                    cap = 360;\n\t                                    split = v.split(\"_\");\n\t                                    isRelative = v.charAt(1) === \"=\";\n\t                                    dif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf(\"rad\") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n\t                                    if (split.length) {\n\t                                        if (directionalEnd) {\n\t                                            directionalEnd[p] = d + dif;\n\t                                        }\n\t                                        if (v.indexOf(\"short\") !== -1) {\n\t                                            dif = dif % cap;\n\t                                            if (dif !== dif % (cap / 2)) {\n\t                                                dif = dif < 0 ? dif + cap : dif - cap;\n\t                                            }\n\t                                        }\n\t                                        if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t                                            dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                        } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t                                            dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                        }\n\t                                    }\n\t                                    result = d + dif;\n\t                                }\n\t                                if (result < min && result > -min) {\n\t                                    result = 0;\n\t                                }\n\t                                return result;\n\t                            }, _colorLookup = {\n\t                                aqua: [ 0, 255, 255 ],\n\t                                lime: [ 0, 255, 0 ],\n\t                                silver: [ 192, 192, 192 ],\n\t                                black: [ 0, 0, 0 ],\n\t                                maroon: [ 128, 0, 0 ],\n\t                                teal: [ 0, 128, 128 ],\n\t                                blue: [ 0, 0, 255 ],\n\t                                navy: [ 0, 0, 128 ],\n\t                                white: [ 255, 255, 255 ],\n\t                                fuchsia: [ 255, 0, 255 ],\n\t                                olive: [ 128, 128, 0 ],\n\t                                yellow: [ 255, 255, 0 ],\n\t                                orange: [ 255, 165, 0 ],\n\t                                gray: [ 128, 128, 128 ],\n\t                                purple: [ 128, 0, 128 ],\n\t                                green: [ 0, 128, 0 ],\n\t                                red: [ 255, 0, 0 ],\n\t                                pink: [ 255, 192, 203 ],\n\t                                cyan: [ 0, 255, 255 ],\n\t                                transparent: [ 255, 255, 255, 0 ]\n\t                            }, _hue = function(h, m1, m2) {\n\t                                h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n\t                                return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + .5 | 0;\n\t                            }, _parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n\t                                var a, r, g, b, h, s, l, max, min, d, wasHSL;\n\t                                if (!v) {\n\t                                    a = _colorLookup.black;\n\t                                } else if (typeof v === \"number\") {\n\t                                    a = [ v >> 16, v >> 8 & 255, v & 255 ];\n\t                                } else {\n\t                                    if (v.charAt(v.length - 1) === \",\") {\n\t                                        v = v.substr(0, v.length - 1);\n\t                                    }\n\t                                    if (_colorLookup[v]) {\n\t                                        a = _colorLookup[v];\n\t                                    } else if (v.charAt(0) === \"#\") {\n\t                                        if (v.length === 4) {\n\t                                            r = v.charAt(1);\n\t                                            g = v.charAt(2);\n\t                                            b = v.charAt(3);\n\t                                            v = \"#\" + r + r + g + g + b + b;\n\t                                        }\n\t                                        v = parseInt(v.substr(1), 16);\n\t                                        a = [ v >> 16, v >> 8 & 255, v & 255 ];\n\t                                    } else if (v.substr(0, 3) === \"hsl\") {\n\t                                        a = wasHSL = v.match(_numExp);\n\t                                        if (!toHSL) {\n\t                                            h = Number(a[0]) % 360 / 360;\n\t                                            s = Number(a[1]) / 100;\n\t                                            l = Number(a[2]) / 100;\n\t                                            g = l <= .5 ? l * (s + 1) : l + s - l * s;\n\t                                            r = l * 2 - g;\n\t                                            if (a.length > 3) {\n\t                                                a[3] = Number(v[3]);\n\t                                            }\n\t                                            a[0] = _hue(h + 1 / 3, r, g);\n\t                                            a[1] = _hue(h, r, g);\n\t                                            a[2] = _hue(h - 1 / 3, r, g);\n\t                                        } else if (v.indexOf(\"=\") !== -1) {\n\t                                            return v.match(_relNumExp);\n\t                                        }\n\t                                    } else {\n\t                                        a = v.match(_numExp) || _colorLookup.transparent;\n\t                                    }\n\t                                    a[0] = Number(a[0]);\n\t                                    a[1] = Number(a[1]);\n\t                                    a[2] = Number(a[2]);\n\t                                    if (a.length > 3) {\n\t                                        a[3] = Number(a[3]);\n\t                                    }\n\t                                }\n\t                                if (toHSL && !wasHSL) {\n\t                                    r = a[0] / 255;\n\t                                    g = a[1] / 255;\n\t                                    b = a[2] / 255;\n\t                                    max = Math.max(r, g, b);\n\t                                    min = Math.min(r, g, b);\n\t                                    l = (max + min) / 2;\n\t                                    if (max === min) {\n\t                                        h = s = 0;\n\t                                    } else {\n\t                                        d = max - min;\n\t                                        s = l > .5 ? d / (2 - max - min) : d / (max + min);\n\t                                        h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n\t                                        h *= 60;\n\t                                    }\n\t                                    a[0] = h + .5 | 0;\n\t                                    a[1] = s * 100 + .5 | 0;\n\t                                    a[2] = l * 100 + .5 | 0;\n\t                                }\n\t                                return a;\n\t                            }, _formatColors = function(s, toHSL) {\n\t                                var colors = s.match(_colorExp) || [], charIndex = 0, parsed = colors.length ? \"\" : s, i, color, temp;\n\t                                for (i = 0; i < colors.length; i++) {\n\t                                    color = colors[i];\n\t                                    temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);\n\t                                    charIndex += temp.length + color.length;\n\t                                    color = _parseColor(color, toHSL);\n\t                                    if (color.length === 3) {\n\t                                        color.push(1);\n\t                                    }\n\t                                    parsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n\t                                }\n\t                                return parsed + s.substr(charIndex);\n\t                            }, _colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";\n\t                            for (p in _colorLookup) {\n\t                                _colorExp += \"|\" + p + \"\\\\b\";\n\t                            }\n\t                            _colorExp = new RegExp(_colorExp + \")\", \"gi\");\n\t                            CSSPlugin.colorStringFilter = function(a) {\n\t                                var combined = a[0] + a[1], toHSL;\n\t                                if (_colorExp.test(combined)) {\n\t                                    toHSL = combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1;\n\t                                    a[0] = _formatColors(a[0], toHSL);\n\t                                    a[1] = _formatColors(a[1], toHSL);\n\t                                }\n\t                                _colorExp.lastIndex = 0;\n\t                            };\n\t                            if (!TweenLite.defaultStringFilter) {\n\t                                TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n\t                            }\n\t                            var _getFormatter = function(dflt, clr, collapsible, multi) {\n\t                                if (dflt == null) {\n\t                                    return function(v) {\n\t                                        return v;\n\t                                    };\n\t                                }\n\t                                var dColor = clr ? (dflt.match(_colorExp) || [ \"\" ])[0] : \"\", dVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [], pfx = dflt.substr(0, dflt.indexOf(dVals[0])), sfx = dflt.charAt(dflt.length - 1) === \")\" ? \")\" : \"\", delim = dflt.indexOf(\" \") !== -1 ? \" \" : \",\", numVals = dVals.length, dSfx = numVals > 0 ? dVals[0].replace(_numExp, \"\") : \"\", formatter;\n\t                                if (!numVals) {\n\t                                    return function(v) {\n\t                                        return v;\n\t                                    };\n\t                                }\n\t                                if (clr) {\n\t                                    formatter = function(v) {\n\t                                        var color, vals, i, a;\n\t                                        if (typeof v === \"number\") {\n\t                                            v += dSfx;\n\t                                        } else if (multi && _commasOutsideParenExp.test(v)) {\n\t                                            a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                            for (i = 0; i < a.length; i++) {\n\t                                                a[i] = formatter(a[i]);\n\t                                            }\n\t                                            return a.join(\",\");\n\t                                        }\n\t                                        color = (v.match(_colorExp) || [ dColor ])[0];\n\t                                        vals = v.split(color).join(\"\").match(_valuesExp) || [];\n\t                                        i = vals.length;\n\t                                        if (numVals > i--) {\n\t                                            while (++i < numVals) {\n\t                                                vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n\t                                            }\n\t                                        }\n\t                                        return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n\t                                    };\n\t                                    return formatter;\n\t                                }\n\t                                formatter = function(v) {\n\t                                    var vals, a, i;\n\t                                    if (typeof v === \"number\") {\n\t                                        v += dSfx;\n\t                                    } else if (multi && _commasOutsideParenExp.test(v)) {\n\t                                        a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                        for (i = 0; i < a.length; i++) {\n\t                                            a[i] = formatter(a[i]);\n\t                                        }\n\t                                        return a.join(\",\");\n\t                                    }\n\t                                    vals = v.match(_valuesExp) || [];\n\t                                    i = vals.length;\n\t                                    if (numVals > i--) {\n\t                                        while (++i < numVals) {\n\t                                            vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n\t                                        }\n\t                                    }\n\t                                    return pfx + vals.join(delim) + sfx;\n\t                                };\n\t                                return formatter;\n\t                            }, _getEdgeParser = function(props) {\n\t                                props = props.split(\",\");\n\t                                return function(t, e, p, cssp, pt, plugin, vars) {\n\t                                    var a = (e + \"\").split(\" \"), i;\n\t                                    vars = {};\n\t                                    for (i = 0; i < 4; i++) {\n\t                                        vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];\n\t                                    }\n\t                                    return cssp.parse(t, vars, pt, plugin);\n\t                                };\n\t                            }, _setPluginRatio = _internals._setPluginRatio = function(v) {\n\t                                this.plugin.setRatio(v);\n\t                                var d = this.data, proxy = d.proxy, mpt = d.firstMPT, min = 1e-6, val, pt, i, str, p;\n\t                                while (mpt) {\n\t                                    val = proxy[mpt.v];\n\t                                    if (mpt.r) {\n\t                                        val = Math.round(val);\n\t                                    } else if (val < min && val > -min) {\n\t                                        val = 0;\n\t                                    }\n\t                                    mpt.t[mpt.p] = val;\n\t                                    mpt = mpt._next;\n\t                                }\n\t                                if (d.autoRotate) {\n\t                                    d.autoRotate.rotation = proxy.rotation;\n\t                                }\n\t                                if (v === 1 || v === 0) {\n\t                                    mpt = d.firstMPT;\n\t                                    p = v === 1 ? \"e\" : \"b\";\n\t                                    while (mpt) {\n\t                                        pt = mpt.t;\n\t                                        if (!pt.type) {\n\t                                            pt[p] = pt.s + pt.xs0;\n\t                                        } else if (pt.type === 1) {\n\t                                            str = pt.xs0 + pt.s + pt.xs1;\n\t                                            for (i = 1; i < pt.l; i++) {\n\t                                                str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                            }\n\t                                            pt[p] = str;\n\t                                        }\n\t                                        mpt = mpt._next;\n\t                                    }\n\t                                }\n\t                            }, MiniPropTween = function(t, p, v, next, r) {\n\t                                this.t = t;\n\t                                this.p = p;\n\t                                this.v = v;\n\t                                this.r = r;\n\t                                if (next) {\n\t                                    next._prev = this;\n\t                                    this._next = next;\n\t                                }\n\t                            }, _parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n\t                                var bpt = pt, start = {}, end = {}, transform = cssp._transform, oldForce = _forcePT, i, p, xp, mpt, firstPT;\n\t                                cssp._transform = null;\n\t                                _forcePT = vars;\n\t                                pt = firstPT = cssp.parse(t, vars, pt, plugin);\n\t                                _forcePT = oldForce;\n\t                                if (shallow) {\n\t                                    cssp._transform = transform;\n\t                                    if (bpt) {\n\t                                        bpt._prev = null;\n\t                                        if (bpt._prev) {\n\t                                            bpt._prev._next = null;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                while (pt && pt !== bpt) {\n\t                                    if (pt.type <= 1) {\n\t                                        p = pt.p;\n\t                                        end[p] = pt.s + pt.c;\n\t                                        start[p] = pt.s;\n\t                                        if (!shallow) {\n\t                                            mpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n\t                                            pt.c = 0;\n\t                                        }\n\t                                        if (pt.type === 1) {\n\t                                            i = pt.l;\n\t                                            while (--i > 0) {\n\t                                                xp = \"xn\" + i;\n\t                                                p = pt.p + \"_\" + xp;\n\t                                                end[p] = pt.data[xp];\n\t                                                start[p] = pt[xp];\n\t                                                if (!shallow) {\n\t                                                    mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n\t                                                }\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    pt = pt._next;\n\t                                }\n\t                                return {\n\t                                    proxy: start,\n\t                                    end: end,\n\t                                    firstMPT: mpt,\n\t                                    pt: firstPT\n\t                                };\n\t                            }, CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n\t                                this.t = t;\n\t                                this.p = p;\n\t                                this.s = s;\n\t                                this.c = c;\n\t                                this.n = n || p;\n\t                                if (!(t instanceof CSSPropTween)) {\n\t                                    _overwriteProps.push(this.n);\n\t                                }\n\t                                this.r = r;\n\t                                this.type = type || 0;\n\t                                if (pr) {\n\t                                    this.pr = pr;\n\t                                    _hasPriority = true;\n\t                                }\n\t                                this.b = b === undefined ? s : b;\n\t                                this.e = e === undefined ? s + c : e;\n\t                                if (next) {\n\t                                    this._next = next;\n\t                                    next._prev = this;\n\t                                }\n\t                            }, _addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) {\n\t                                var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n\t                                pt.b = start;\n\t                                pt.e = pt.xs0 = end;\n\t                                return pt;\n\t                            }, _parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n\t                                b = b || dflt || \"\";\n\t                                pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);\n\t                                e += \"\";\n\t                                if (clrs && _colorExp.test(e + b)) {\n\t                                    e = [ b, e ];\n\t                                    CSSPlugin.colorStringFilter(e);\n\t                                    b = e[0];\n\t                                    e = e[1];\n\t                                }\n\t                                var ba = b.split(\", \").join(\",\").split(\" \"), ea = e.split(\", \").join(\",\").split(\" \"), l = ba.length, autoRound = _autoRound !== false, i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n\t                                if (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n\t                                    ba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t                                    ea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t                                    l = ba.length;\n\t                                }\n\t                                if (l !== ea.length) {\n\t                                    ba = (dflt || \"\").split(\" \");\n\t                                    l = ba.length;\n\t                                }\n\t                                pt.plugin = plugin;\n\t                                pt.setRatio = setRatio;\n\t                                _colorExp.lastIndex = 0;\n\t                                for (i = 0; i < l; i++) {\n\t                                    bv = ba[i];\n\t                                    ev = ea[i];\n\t                                    bn = parseFloat(bv);\n\t                                    if (bn || bn === 0) {\n\t                                        pt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), autoRound && ev.indexOf(\"px\") !== -1, true);\n\t                                    } else if (clrs && _colorExp.test(bv)) {\n\t                                        str = ev.indexOf(\")\") + 1;\n\t                                        str = \")\" + (str ? ev.substr(str) : \"\");\n\t                                        useHSL = ev.indexOf(\"hsl\") !== -1 && _supportsOpacity;\n\t                                        bv = _parseColor(bv, useHSL);\n\t                                        ev = _parseColor(ev, useHSL);\n\t                                        hasAlpha = bv.length + ev.length > 6;\n\t                                        if (hasAlpha && !_supportsOpacity && ev[3] === 0) {\n\t                                            pt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n\t                                            pt.e = pt.e.split(ea[i]).join(\"transparent\");\n\t                                        } else {\n\t                                            if (!_supportsOpacity) {\n\t                                                hasAlpha = false;\n\t                                            }\n\t                                            if (useHSL) {\n\t                                                pt.appendXtra(hasAlpha ? \"hsla(\" : \"hsl(\", bv[0], _parseChange(ev[0], bv[0]), \",\", false, true).appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false).appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? \"%,\" : \"%\" + str, false);\n\t                                            } else {\n\t                                                pt.appendXtra(hasAlpha ? \"rgba(\" : \"rgb(\", bv[0], ev[0] - bv[0], \",\", true, true).appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true).appendXtra(\"\", bv[2], ev[2] - bv[2], hasAlpha ? \",\" : str, true);\n\t                                            }\n\t                                            if (hasAlpha) {\n\t                                                bv = bv.length < 4 ? 1 : bv[3];\n\t                                                pt.appendXtra(\"\", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);\n\t                                            }\n\t                                        }\n\t                                        _colorExp.lastIndex = 0;\n\t                                    } else {\n\t                                        bnums = bv.match(_numExp);\n\t                                        if (!bnums) {\n\t                                            pt[\"xs\" + pt.l] += pt.l || pt[\"xs\" + pt.l] ? \" \" + ev : ev;\n\t                                        } else {\n\t                                            enums = ev.match(_relNumExp);\n\t                                            if (!enums || enums.length !== bnums.length) {\n\t                                                return pt;\n\t                                            }\n\t                                            ni = 0;\n\t                                            for (xi = 0; xi < bnums.length; xi++) {\n\t                                                cv = bnums[xi];\n\t                                                temp = bv.indexOf(cv, ni);\n\t                                                pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", autoRound && bv.substr(temp + cv.length, 2) === \"px\", xi === 0);\n\t                                                ni = temp + cv.length;\n\t                                            }\n\t                                            pt[\"xs\" + pt.l] += bv.substr(ni);\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (e.indexOf(\"=\") !== -1) if (pt.data) {\n\t                                    str = pt.xs0 + pt.data.s;\n\t                                    for (i = 1; i < pt.l; i++) {\n\t                                        str += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n\t                                    }\n\t                                    pt.e = str + pt[\"xs\" + i];\n\t                                }\n\t                                if (!pt.l) {\n\t                                    pt.type = -1;\n\t                                    pt.xs0 = pt.e;\n\t                                }\n\t                                return pt.xfirst || pt;\n\t                            }, i = 9;\n\t                            p = CSSPropTween.prototype;\n\t                            p.l = p.pr = 0;\n\t                            while (--i > 0) {\n\t                                p[\"xn\" + i] = 0;\n\t                                p[\"xs\" + i] = \"\";\n\t                            }\n\t                            p.xs0 = \"\";\n\t                            p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n\t                            p.appendXtra = function(pfx, s, c, sfx, r, pad) {\n\t                                var pt = this, l = pt.l;\n\t                                pt[\"xs\" + l] += pad && (l || pt[\"xs\" + l]) ? \" \" + pfx : pfx || \"\";\n\t                                if (!c) if (l !== 0 && !pt.plugin) {\n\t                                    pt[\"xs\" + l] += s + (sfx || \"\");\n\t                                    return pt;\n\t                                }\n\t                                pt.l++;\n\t                                pt.type = pt.setRatio ? 2 : 1;\n\t                                pt[\"xs\" + pt.l] = sfx || \"\";\n\t                                if (l > 0) {\n\t                                    pt.data[\"xn\" + l] = s + c;\n\t                                    pt.rxp[\"xn\" + l] = r;\n\t                                    pt[\"xn\" + l] = s;\n\t                                    if (!pt.plugin) {\n\t                                        pt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n\t                                        pt.xfirst.xs0 = 0;\n\t                                    }\n\t                                    return pt;\n\t                                }\n\t                                pt.data = {\n\t                                    s: s + c\n\t                                };\n\t                                pt.rxp = {};\n\t                                pt.s = s;\n\t                                pt.c = c;\n\t                                pt.r = r;\n\t                                return pt;\n\t                            };\n\t                            var SpecialProp = function(p, options) {\n\t                                options = options || {};\n\t                                this.p = options.prefix ? _checkPropPrefix(p) || p : p;\n\t                                _specialProps[p] = _specialProps[this.p] = this;\n\t                                this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n\t                                if (options.parser) {\n\t                                    this.parse = options.parser;\n\t                                }\n\t                                this.clrs = options.color;\n\t                                this.multi = options.multi;\n\t                                this.keyword = options.keyword;\n\t                                this.dflt = options.defaultValue;\n\t                                this.pr = options.priority || 0;\n\t                            }, _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n\t                                if (typeof options !== \"object\") {\n\t                                    options = {\n\t                                        parser: defaults\n\t                                    };\n\t                                }\n\t                                var a = p.split(\",\"), d = options.defaultValue, i, temp;\n\t                                defaults = defaults || [ d ];\n\t                                for (i = 0; i < a.length; i++) {\n\t                                    options.prefix = i === 0 && options.prefix;\n\t                                    options.defaultValue = defaults[i] || d;\n\t                                    temp = new SpecialProp(a[i], options);\n\t                                }\n\t                            }, _registerPluginProp = function(p) {\n\t                                if (!_specialProps[p]) {\n\t                                    var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n\t                                    _registerComplexSpecialProp(p, {\n\t                                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                            var pluginClass = _globals.com.greensock.plugins[pluginName];\n\t                                            if (!pluginClass) {\n\t                                                _log(\"Error: \" + pluginName + \" js file not loaded.\");\n\t                                                return pt;\n\t                                            }\n\t                                            pluginClass._cssRegister();\n\t                                            return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n\t                                        }\n\t                                    });\n\t                                }\n\t                            };\n\t                            p = SpecialProp.prototype;\n\t                            p.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n\t                                var kwd = this.keyword, i, ba, ea, l, bi, ei;\n\t                                if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n\t                                    ba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                    ea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                } else if (kwd) {\n\t                                    ba = [ b ];\n\t                                    ea = [ e ];\n\t                                }\n\t                                if (ea) {\n\t                                    l = ea.length > ba.length ? ea.length : ba.length;\n\t                                    for (i = 0; i < l; i++) {\n\t                                        b = ba[i] = ba[i] || this.dflt;\n\t                                        e = ea[i] = ea[i] || this.dflt;\n\t                                        if (kwd) {\n\t                                            bi = b.indexOf(kwd);\n\t                                            ei = e.indexOf(kwd);\n\t                                            if (bi !== ei) {\n\t                                                if (ei === -1) {\n\t                                                    ba[i] = ba[i].split(kwd).join(\"\");\n\t                                                } else if (bi === -1) {\n\t                                                    ba[i] += \" \" + kwd;\n\t                                                }\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    b = ba.join(\", \");\n\t                                    e = ea.join(\", \");\n\t                                }\n\t                                return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n\t                            };\n\t                            p.parse = function(t, e, p, cssp, pt, plugin, vars) {\n\t                                return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n\t                            };\n\t                            CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n\t                                _registerComplexSpecialProp(name, {\n\t                                    parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                        var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n\t                                        rv.plugin = plugin;\n\t                                        rv.setRatio = onInitTween(t, e, cssp._tween, p);\n\t                                        return rv;\n\t                                    },\n\t                                    priority: priority\n\t                                });\n\t                            };\n\t                            CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox;\n\t                            var _transformProps = \"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"), _transformProp = _checkPropPrefix(\"transform\"), _transformPropCSS = _prefixCSS + \"transform\", _transformOriginProp = _checkPropPrefix(\"transformOrigin\"), _supports3D = _checkPropPrefix(\"perspective\") !== null, Transform = _internals.Transform = function() {\n\t                                this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n\t                                this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || \"auto\";\n\t                            }, _SVGElement = window.SVGElement, _useSVGTransformAttr, _createSVG = function(type, container, attributes) {\n\t                                var element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type), reg = /([a-z])([A-Z])/g, p;\n\t                                for (p in attributes) {\n\t                                    element.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t                                }\n\t                                container.appendChild(element);\n\t                                return element;\n\t                            }, _docElement = _doc.documentElement, _forceSVGTransformAttr = function() {\n\t                                var force = _ieVers || /Android/i.test(_agent) && !window.chrome, svg, rect, width;\n\t                                if (_doc.createElementNS && !force) {\n\t                                    svg = _createSVG(\"svg\", _docElement);\n\t                                    rect = _createSVG(\"rect\", svg, {\n\t                                        width: 100,\n\t                                        height: 50,\n\t                                        x: 100\n\t                                    });\n\t                                    width = rect.getBoundingClientRect().width;\n\t                                    rect.style[_transformOriginProp] = \"50% 50%\";\n\t                                    rect.style[_transformProp] = \"scaleX(0.5)\";\n\t                                    force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D);\n\t                                    _docElement.removeChild(svg);\n\t                                }\n\t                                return force;\n\t                            }(), _parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n\t                                var tm = e._gsTransform, m = _getMatrix(e, true), v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n\t                                if (tm) {\n\t                                    xOriginOld = tm.xOrigin;\n\t                                    yOriginOld = tm.yOrigin;\n\t                                }\n\t                                if (!absolute || (v = absolute.split(\" \")).length < 2) {\n\t                                    b = e.getBBox();\n\t                                    local = _parsePosition(local).split(\" \");\n\t                                    v = [ (local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y ];\n\t                                }\n\t                                decoratee.xOrigin = xOrigin = parseFloat(v[0]);\n\t                                decoratee.yOrigin = yOrigin = parseFloat(v[1]);\n\t                                if (absolute && m !== _identity2DMatrix) {\n\t                                    a = m[0];\n\t                                    b = m[1];\n\t                                    c = m[2];\n\t                                    d = m[3];\n\t                                    tx = m[4];\n\t                                    ty = m[5];\n\t                                    determinant = a * d - b * c;\n\t                                    x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n\t                                    y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n\t                                    xOrigin = decoratee.xOrigin = v[0] = x;\n\t                                    yOrigin = decoratee.yOrigin = v[1] = y;\n\t                                }\n\t                                if (tm) {\n\t                                    if (skipRecord) {\n\t                                        decoratee.xOffset = tm.xOffset;\n\t                                        decoratee.yOffset = tm.yOffset;\n\t                                        tm = decoratee;\n\t                                    }\n\t                                    if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {\n\t                                        x = xOrigin - xOriginOld;\n\t                                        y = yOrigin - yOriginOld;\n\t                                        tm.xOffset += x * m[0] + y * m[2] - x;\n\t                                        tm.yOffset += x * m[1] + y * m[3] - y;\n\t                                    } else {\n\t                                        tm.xOffset = tm.yOffset = 0;\n\t                                    }\n\t                                }\n\t                                if (!skipRecord) {\n\t                                    e.setAttribute(\"data-svg-origin\", v.join(\" \"));\n\t                                }\n\t                            }, _canGetBBox = function(e) {\n\t                                try {\n\t                                    return e.getBBox();\n\t                                } catch (e) {}\n\t                            }, _isSVG = function(e) {\n\t                                return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));\n\t                            }, _identity2DMatrix = [ 1, 0, 0, 1, 0, 0 ], _getMatrix = function(e, force2D) {\n\t                                var tm = e._gsTransform || new Transform(), rnd = 1e5, style = e.style, isDefault, s, m, n, dec, none;\n\t                                if (_transformProp) {\n\t                                    s = _getStyle(e, _transformPropCSS, null, true);\n\t                                } else if (e.currentStyle) {\n\t                                    s = e.currentStyle.filter.match(_ieGetMatrixExp);\n\t                                    s = s && s.length === 4 ? [ s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0 ].join(\",\") : \"\";\n\t                                }\n\t                                isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n\t                                if (isDefault && _transformProp && ((none = _getComputedStyle(e).display === \"none\") || !e.parentNode)) {\n\t                                    if (none) {\n\t                                        n = style.display;\n\t                                        style.display = \"block\";\n\t                                    }\n\t                                    if (!e.parentNode) {\n\t                                        dec = 1;\n\t                                        _docElement.appendChild(e);\n\t                                    }\n\t                                    s = _getStyle(e, _transformPropCSS, null, true);\n\t                                    isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n\t                                    if (n) {\n\t                                        style.display = n;\n\t                                    } else if (none) {\n\t                                        _removeProp(style, \"display\");\n\t                                    }\n\t                                    if (dec) {\n\t                                        _docElement.removeChild(e);\n\t                                    }\n\t                                }\n\t                                if (tm.svg || e.getBBox && _isSVG(e)) {\n\t                                    if (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) {\n\t                                        s = style[_transformProp];\n\t                                        isDefault = 0;\n\t                                    }\n\t                                    m = e.getAttribute(\"transform\");\n\t                                    if (isDefault && m) {\n\t                                        if (m.indexOf(\"matrix\") !== -1) {\n\t                                            s = m;\n\t                                            isDefault = 0;\n\t                                        } else if (m.indexOf(\"translate\") !== -1) {\n\t                                            s = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n\t                                            isDefault = 0;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (isDefault) {\n\t                                    return _identity2DMatrix;\n\t                                }\n\t                                m = (s || \"\").match(_numExp) || [];\n\t                                i = m.length;\n\t                                while (--i > -1) {\n\t                                    n = Number(m[i]);\n\t                                    m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -.5 : .5) | 0) / rnd + n : n;\n\t                                }\n\t                                return force2D && m.length > 6 ? [ m[0], m[1], m[4], m[5], m[12], m[13] ] : m;\n\t                            }, _getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n\t                                if (t._gsTransform && rec && !parse) {\n\t                                    return t._gsTransform;\n\t                                }\n\t                                var tm = rec ? t._gsTransform || new Transform() : new Transform(), invX = tm.scaleX < 0, min = 2e-5, rnd = 1e5, zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin || 0 : 0, defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0, m, i, scaleX, scaleY, rotation, skewX;\n\t                                tm.svg = !!(t.getBBox && _isSVG(t));\n\t                                if (tm.svg) {\n\t                                    _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n\t                                    _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n\t                                }\n\t                                m = _getMatrix(t);\n\t                                if (m !== _identity2DMatrix) {\n\t                                    if (m.length === 16) {\n\t                                        var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3], a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7], a13 = m[8], a23 = m[9], a33 = m[10], a14 = m[12], a24 = m[13], a34 = m[14], a43 = m[11], angle = Math.atan2(a32, a33), t1, t2, t3, t4, cos, sin;\n\t                                        if (tm.zOrigin) {\n\t                                            a34 = -tm.zOrigin;\n\t                                            a14 = a13 * a34 - m[12];\n\t                                            a24 = a23 * a34 - m[13];\n\t                                            a34 = a33 * a34 + tm.zOrigin - m[14];\n\t                                        }\n\t                                        tm.rotationX = angle * _RAD2DEG;\n\t                                        if (angle) {\n\t                                            cos = Math.cos(-angle);\n\t                                            sin = Math.sin(-angle);\n\t                                            t1 = a12 * cos + a13 * sin;\n\t                                            t2 = a22 * cos + a23 * sin;\n\t                                            t3 = a32 * cos + a33 * sin;\n\t                                            a13 = a12 * -sin + a13 * cos;\n\t                                            a23 = a22 * -sin + a23 * cos;\n\t                                            a33 = a32 * -sin + a33 * cos;\n\t                                            a43 = a42 * -sin + a43 * cos;\n\t                                            a12 = t1;\n\t                                            a22 = t2;\n\t                                            a32 = t3;\n\t                                        }\n\t                                        angle = Math.atan2(-a31, a33);\n\t                                        tm.rotationY = angle * _RAD2DEG;\n\t                                        if (angle) {\n\t                                            cos = Math.cos(-angle);\n\t                                            sin = Math.sin(-angle);\n\t                                            t1 = a11 * cos - a13 * sin;\n\t                                            t2 = a21 * cos - a23 * sin;\n\t                                            t3 = a31 * cos - a33 * sin;\n\t                                            a23 = a21 * sin + a23 * cos;\n\t                                            a33 = a31 * sin + a33 * cos;\n\t                                            a43 = a41 * sin + a43 * cos;\n\t                                            a11 = t1;\n\t                                            a21 = t2;\n\t                                            a31 = t3;\n\t                                        }\n\t                                        angle = Math.atan2(a21, a11);\n\t                                        tm.rotation = angle * _RAD2DEG;\n\t                                        if (angle) {\n\t                                            cos = Math.cos(-angle);\n\t                                            sin = Math.sin(-angle);\n\t                                            a11 = a11 * cos + a12 * sin;\n\t                                            t2 = a21 * cos + a22 * sin;\n\t                                            a22 = a21 * -sin + a22 * cos;\n\t                                            a32 = a31 * -sin + a32 * cos;\n\t                                            a21 = t2;\n\t                                        }\n\t                                        if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {\n\t                                            tm.rotationX = tm.rotation = 0;\n\t                                            tm.rotationY = 180 - tm.rotationY;\n\t                                        }\n\t                                        tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21) * rnd + .5 | 0) / rnd;\n\t                                        tm.scaleY = (Math.sqrt(a22 * a22 + a23 * a23) * rnd + .5 | 0) / rnd;\n\t                                        tm.scaleZ = (Math.sqrt(a32 * a32 + a33 * a33) * rnd + .5 | 0) / rnd;\n\t                                        if (tm.rotationX || tm.rotationY) {\n\t                                            tm.skewX = 0;\n\t                                        } else {\n\t                                            tm.skewX = a12 || a22 ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n\t                                            if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n\t                                                if (invX) {\n\t                                                    tm.scaleX *= -1;\n\t                                                    tm.skewX += tm.rotation <= 0 ? 180 : -180;\n\t                                                    tm.rotation += tm.rotation <= 0 ? 180 : -180;\n\t                                                } else {\n\t                                                    tm.scaleY *= -1;\n\t                                                    tm.skewX += tm.skewX <= 0 ? 180 : -180;\n\t                                                }\n\t                                            }\n\t                                        }\n\t                                        tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n\t                                        tm.x = a14;\n\t                                        tm.y = a24;\n\t                                        tm.z = a34;\n\t                                        if (tm.svg) {\n\t                                            tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n\t                                            tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n\t                                        }\n\t                                    } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {\n\t                                        var k = m.length >= 6, a = k ? m[0] : 1, b = m[1] || 0, c = m[2] || 0, d = k ? m[3] : 1;\n\t                                        tm.x = m[4] || 0;\n\t                                        tm.y = m[5] || 0;\n\t                                        scaleX = Math.sqrt(a * a + b * b);\n\t                                        scaleY = Math.sqrt(d * d + c * c);\n\t                                        rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0;\n\t                                        skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n\t                                        if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n\t                                            if (invX) {\n\t                                                scaleX *= -1;\n\t                                                skewX += rotation <= 0 ? 180 : -180;\n\t                                                rotation += rotation <= 0 ? 180 : -180;\n\t                                            } else {\n\t                                                scaleY *= -1;\n\t                                                skewX += skewX <= 0 ? 180 : -180;\n\t                                            }\n\t                                        }\n\t                                        tm.scaleX = scaleX;\n\t                                        tm.scaleY = scaleY;\n\t                                        tm.rotation = rotation;\n\t                                        tm.skewX = skewX;\n\t                                        if (_supports3D) {\n\t                                            tm.rotationX = tm.rotationY = tm.z = 0;\n\t                                            tm.perspective = defaultTransformPerspective;\n\t                                            tm.scaleZ = 1;\n\t                                        }\n\t                                        if (tm.svg) {\n\t                                            tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n\t                                            tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n\t                                        }\n\t                                    }\n\t                                    tm.zOrigin = zOrigin;\n\t                                    for (i in tm) {\n\t                                        if (tm[i] < min) if (tm[i] > -min) {\n\t                                            tm[i] = 0;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (rec) {\n\t                                    t._gsTransform = tm;\n\t                                    if (tm.svg) {\n\t                                        if (_useSVGTransformAttr && t.style[_transformProp]) {\n\t                                            TweenLite.delayedCall(.001, function() {\n\t                                                _removeProp(t.style, _transformProp);\n\t                                            });\n\t                                        } else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n\t                                            TweenLite.delayedCall(.001, function() {\n\t                                                t.removeAttribute(\"transform\");\n\t                                            });\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return tm;\n\t                            }, _setIETransformRatio = function(v) {\n\t                                var t = this.data, ang = -t.rotation * _DEG2RAD, skew = ang + t.skewX * _DEG2RAD, rnd = 1e5, a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd, b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd, c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd, d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd, style = this.t.style, cs = this.t.currentStyle, filters, val;\n\t                                if (!cs) {\n\t                                    return;\n\t                                }\n\t                                val = b;\n\t                                b = -c;\n\t                                c = -val;\n\t                                filters = cs.filter;\n\t                                style.filter = \"\";\n\t                                var w = this.t.offsetWidth, h = this.t.offsetHeight, clip = cs.position !== \"absolute\", m = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d, ox = t.x + w * t.xPercent / 100, oy = t.y + h * t.yPercent / 100, dx, dy;\n\t                                if (t.ox != null) {\n\t                                    dx = (t.oxp ? w * t.ox * .01 : t.ox) - w / 2;\n\t                                    dy = (t.oyp ? h * t.oy * .01 : t.oy) - h / 2;\n\t                                    ox += dx - (dx * a + dy * b);\n\t                                    oy += dy - (dx * c + dy * d);\n\t                                }\n\t                                if (!clip) {\n\t                                    m += \", sizingMethod='auto expand')\";\n\t                                } else {\n\t                                    dx = w / 2;\n\t                                    dy = h / 2;\n\t                                    m += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n\t                                }\n\t                                if (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n\t                                    style.filter = filters.replace(_ieSetMatrixExp, m);\n\t                                } else {\n\t                                    style.filter = m + \" \" + filters;\n\t                                }\n\t                                if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n\t                                    style.removeAttribute(\"filter\");\n\t                                }\n\t                                if (!clip) {\n\t                                    var mult = _ieVers < 8 ? 1 : -1, marg, prop, dif;\n\t                                    dx = t.ieOffsetX || 0;\n\t                                    dy = t.ieOffsetY || 0;\n\t                                    t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n\t                                    t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n\t                                    for (i = 0; i < 4; i++) {\n\t                                        prop = _margins[i];\n\t                                        marg = cs[prop];\n\t                                        val = marg.indexOf(\"px\") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n\t                                        if (val !== t[prop]) {\n\t                                            dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY;\n\t                                        } else {\n\t                                            dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n\t                                        }\n\t                                        style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + \"px\";\n\t                                    }\n\t                                }\n\t                            }, _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n\t                                var t = this.data, style = this.t.style, angle = t.rotation, rotationX = t.rotationX, rotationY = t.rotationY, sx = t.scaleX, sy = t.scaleY, sz = t.scaleZ, x = t.x, y = t.y, z = t.z, isSVG = t.svg, perspective = t.perspective, force3D = t.force3D, a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43, zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;\n\t                                if (((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {\n\t                                    if (angle || t.skewX || isSVG) {\n\t                                        angle *= _DEG2RAD;\n\t                                        skew = t.skewX * _DEG2RAD;\n\t                                        rnd = 1e5;\n\t                                        a11 = Math.cos(angle) * sx;\n\t                                        a21 = Math.sin(angle) * sx;\n\t                                        a12 = Math.sin(angle - skew) * -sy;\n\t                                        a22 = Math.cos(angle - skew) * sy;\n\t                                        if (skew && t.skewType === \"simple\") {\n\t                                            t1 = Math.tan(skew);\n\t                                            t1 = Math.sqrt(1 + t1 * t1);\n\t                                            a12 *= t1;\n\t                                            a22 *= t1;\n\t                                            if (t.skewY) {\n\t                                                a11 *= t1;\n\t                                                a21 *= t1;\n\t                                            }\n\t                                        }\n\t                                        if (isSVG) {\n\t                                            x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t                                            y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t                                            if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {\n\t                                                min = this.t.getBBox();\n\t                                                x += t.xPercent * .01 * min.width;\n\t                                                y += t.yPercent * .01 * min.height;\n\t                                            }\n\t                                            min = 1e-6;\n\t                                            if (x < min) if (x > -min) {\n\t                                                x = 0;\n\t                                            }\n\t                                            if (y < min) if (y > -min) {\n\t                                                y = 0;\n\t                                            }\n\t                                        }\n\t                                        transform = (a11 * rnd | 0) / rnd + \",\" + (a21 * rnd | 0) / rnd + \",\" + (a12 * rnd | 0) / rnd + \",\" + (a22 * rnd | 0) / rnd + \",\" + x + \",\" + y + \")\";\n\t                                        if (isSVG && _useSVGTransformAttr) {\n\t                                            this.t.setAttribute(\"transform\", \"matrix(\" + transform);\n\t                                        } else {\n\t                                            style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n\t                                        }\n\t                                    } else {\n\t                                        style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n\t                                    }\n\t                                    return;\n\t                                }\n\t                                if (_isFirefox) {\n\t                                    min = 1e-4;\n\t                                    if (sx < min && sx > -min) {\n\t                                        sx = sz = 2e-5;\n\t                                    }\n\t                                    if (sy < min && sy > -min) {\n\t                                        sy = sz = 2e-5;\n\t                                    }\n\t                                    if (perspective && !t.z && !t.rotationX && !t.rotationY) {\n\t                                        perspective = 0;\n\t                                    }\n\t                                }\n\t                                if (angle || t.skewX) {\n\t                                    angle *= _DEG2RAD;\n\t                                    cos = a11 = Math.cos(angle);\n\t                                    sin = a21 = Math.sin(angle);\n\t                                    if (t.skewX) {\n\t                                        angle -= t.skewX * _DEG2RAD;\n\t                                        cos = Math.cos(angle);\n\t                                        sin = Math.sin(angle);\n\t                                        if (t.skewType === \"simple\") {\n\t                                            t1 = Math.tan(t.skewX * _DEG2RAD);\n\t                                            t1 = Math.sqrt(1 + t1 * t1);\n\t                                            cos *= t1;\n\t                                            sin *= t1;\n\t                                            if (t.skewY) {\n\t                                                a11 *= t1;\n\t                                                a21 *= t1;\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    a12 = -sin;\n\t                                    a22 = cos;\n\t                                } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {\n\t                                    style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z + \"px)\" + (sx !== 1 || sy !== 1 ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n\t                                    return;\n\t                                } else {\n\t                                    a11 = a22 = 1;\n\t                                    a12 = a21 = 0;\n\t                                }\n\t                                a33 = 1;\n\t                                a13 = a23 = a31 = a32 = a41 = a42 = 0;\n\t                                a43 = perspective ? -1 / perspective : 0;\n\t                                zOrigin = t.zOrigin;\n\t                                min = 1e-6;\n\t                                comma = \",\";\n\t                                zero = \"0\";\n\t                                angle = rotationY * _DEG2RAD;\n\t                                if (angle) {\n\t                                    cos = Math.cos(angle);\n\t                                    sin = Math.sin(angle);\n\t                                    a31 = -sin;\n\t                                    a41 = a43 * -sin;\n\t                                    a13 = a11 * sin;\n\t                                    a23 = a21 * sin;\n\t                                    a33 = cos;\n\t                                    a43 *= cos;\n\t                                    a11 *= cos;\n\t                                    a21 *= cos;\n\t                                }\n\t                                angle = rotationX * _DEG2RAD;\n\t                                if (angle) {\n\t                                    cos = Math.cos(angle);\n\t                                    sin = Math.sin(angle);\n\t                                    t1 = a12 * cos + a13 * sin;\n\t                                    t2 = a22 * cos + a23 * sin;\n\t                                    a32 = a33 * sin;\n\t                                    a42 = a43 * sin;\n\t                                    a13 = a12 * -sin + a13 * cos;\n\t                                    a23 = a22 * -sin + a23 * cos;\n\t                                    a33 = a33 * cos;\n\t                                    a43 = a43 * cos;\n\t                                    a12 = t1;\n\t                                    a22 = t2;\n\t                                }\n\t                                if (sz !== 1) {\n\t                                    a13 *= sz;\n\t                                    a23 *= sz;\n\t                                    a33 *= sz;\n\t                                    a43 *= sz;\n\t                                }\n\t                                if (sy !== 1) {\n\t                                    a12 *= sy;\n\t                                    a22 *= sy;\n\t                                    a32 *= sy;\n\t                                    a42 *= sy;\n\t                                }\n\t                                if (sx !== 1) {\n\t                                    a11 *= sx;\n\t                                    a21 *= sx;\n\t                                    a31 *= sx;\n\t                                    a41 *= sx;\n\t                                }\n\t                                if (zOrigin || isSVG) {\n\t                                    if (zOrigin) {\n\t                                        x += a13 * -zOrigin;\n\t                                        y += a23 * -zOrigin;\n\t                                        z += a33 * -zOrigin + zOrigin;\n\t                                    }\n\t                                    if (isSVG) {\n\t                                        x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t                                        y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t                                    }\n\t                                    if (x < min && x > -min) {\n\t                                        x = zero;\n\t                                    }\n\t                                    if (y < min && y > -min) {\n\t                                        y = zero;\n\t                                    }\n\t                                    if (z < min && z > -min) {\n\t                                        z = 0;\n\t                                    }\n\t                                }\n\t                                transform = t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\";\n\t                                transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);\n\t                                transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);\n\t                                if (rotationX || rotationY || sz !== 1) {\n\t                                    transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);\n\t                                    transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;\n\t                                } else {\n\t                                    transform += \",0,0,0,0,1,0,\";\n\t                                }\n\t                                transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + \")\";\n\t                                style[_transformProp] = transform;\n\t                            };\n\t                            p = Transform.prototype;\n\t                            p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n\t                            p.scaleX = p.scaleY = p.scaleZ = 1;\n\t                            _registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {\n\t                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                    if (cssp._lastParsedTransform === vars) {\n\t                                        return pt;\n\t                                    }\n\t                                    cssp._lastParsedTransform = vars;\n\t                                    var originalGSTransform = t._gsTransform, style = t.style, min = 1e-6, i = _transformProps.length, v = vars, endRotations = {}, transformOriginString = \"transformOrigin\", m1 = _getTransform(t, _cs, true, vars.parseTransform), m2, copy, orig, has3D, hasChange, dr, x, y, matrix;\n\t                                    cssp._transform = m1;\n\t                                    if (typeof v.transform === \"string\" && _transformProp) {\n\t                                        copy = _tempDiv.style;\n\t                                        copy[_transformProp] = v.transform;\n\t                                        copy.display = \"block\";\n\t                                        copy.position = \"absolute\";\n\t                                        _doc.body.appendChild(_tempDiv);\n\t                                        m2 = _getTransform(_tempDiv, null, false);\n\t                                        if (m1.svg) {\n\t                                            x = m1.xOrigin;\n\t                                            y = m1.yOrigin;\n\t                                            m2.x -= m1.xOffset;\n\t                                            m2.y -= m1.yOffset;\n\t                                            if (v.transformOrigin || v.svgOrigin) {\n\t                                                orig = {};\n\t                                                _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n\t                                                x = orig.xOrigin;\n\t                                                y = orig.yOrigin;\n\t                                                m2.x -= orig.xOffset - m1.xOffset;\n\t                                                m2.y -= orig.yOffset - m1.yOffset;\n\t                                            }\n\t                                            if (x || y) {\n\t                                                matrix = _getMatrix(_tempDiv, true);\n\t                                                m2.x -= x - (x * matrix[0] + y * matrix[2]);\n\t                                                m2.y -= y - (x * matrix[1] + y * matrix[3]);\n\t                                            }\n\t                                        }\n\t                                        _doc.body.removeChild(_tempDiv);\n\t                                        if (!m2.perspective) {\n\t                                            m2.perspective = m1.perspective;\n\t                                        }\n\t                                        if (v.xPercent != null) {\n\t                                            m2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n\t                                        }\n\t                                        if (v.yPercent != null) {\n\t                                            m2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n\t                                        }\n\t                                    } else if (typeof v === \"object\") {\n\t                                        m2 = {\n\t                                            scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),\n\t                                            scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),\n\t                                            scaleZ: _parseVal(v.scaleZ, m1.scaleZ),\n\t                                            x: _parseVal(v.x, m1.x),\n\t                                            y: _parseVal(v.y, m1.y),\n\t                                            z: _parseVal(v.z, m1.z),\n\t                                            xPercent: _parseVal(v.xPercent, m1.xPercent),\n\t                                            yPercent: _parseVal(v.yPercent, m1.yPercent),\n\t                                            perspective: _parseVal(v.transformPerspective, m1.perspective)\n\t                                        };\n\t                                        dr = v.directionalRotation;\n\t                                        if (dr != null) {\n\t                                            if (typeof dr === \"object\") {\n\t                                                for (copy in dr) {\n\t                                                    v[copy] = dr[copy];\n\t                                                }\n\t                                            } else {\n\t                                                v.rotation = dr;\n\t                                            }\n\t                                        }\n\t                                        if (typeof v.x === \"string\" && v.x.indexOf(\"%\") !== -1) {\n\t                                            m2.x = 0;\n\t                                            m2.xPercent = _parseVal(v.x, m1.xPercent);\n\t                                        }\n\t                                        if (typeof v.y === \"string\" && v.y.indexOf(\"%\") !== -1) {\n\t                                            m2.y = 0;\n\t                                            m2.yPercent = _parseVal(v.y, m1.yPercent);\n\t                                        }\n\t                                        m2.rotation = _parseAngle(\"rotation\" in v ? v.rotation : \"shortRotation\" in v ? v.shortRotation + \"_short\" : \"rotationZ\" in v ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, \"rotation\", endRotations);\n\t                                        if (_supports3D) {\n\t                                            m2.rotationX = _parseAngle(\"rotationX\" in v ? v.rotationX : \"shortRotationX\" in v ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n\t                                            m2.rotationY = _parseAngle(\"rotationY\" in v ? v.rotationY : \"shortRotationY\" in v ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n\t                                        }\n\t                                        m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY);\n\t                                        if (m2.skewY = _parseAngle(v.skewY, m1.skewY)) {\n\t                                            m2.skewX += m2.skewY;\n\t                                            m2.rotation += m2.skewY;\n\t                                        }\n\t                                    }\n\t                                    if (_supports3D && v.force3D != null) {\n\t                                        m1.force3D = v.force3D;\n\t                                        hasChange = true;\n\t                                    }\n\t                                    m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n\t                                    has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;\n\t                                    if (!has3D && v.scale != null) {\n\t                                        m2.scaleZ = 1;\n\t                                    }\n\t                                    while (--i > -1) {\n\t                                        p = _transformProps[i];\n\t                                        orig = m2[p] - m1[p];\n\t                                        if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n\t                                            hasChange = true;\n\t                                            pt = new CSSPropTween(m1, p, m1[p], orig, pt);\n\t                                            if (p in endRotations) {\n\t                                                pt.e = endRotations[p];\n\t                                            }\n\t                                            pt.xs0 = 0;\n\t                                            pt.plugin = plugin;\n\t                                            cssp._overwriteProps.push(pt.n);\n\t                                        }\n\t                                    }\n\t                                    orig = v.transformOrigin;\n\t                                    if (m1.svg && (orig || v.svgOrigin)) {\n\t                                        x = m1.xOffset;\n\t                                        y = m1.yOffset;\n\t                                        _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n\t                                        pt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString);\n\t                                        pt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n\t                                        if (x !== m1.xOffset || y !== m1.yOffset) {\n\t                                            pt = _addNonTweeningNumericPT(m1, \"xOffset\", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);\n\t                                            pt = _addNonTweeningNumericPT(m1, \"yOffset\", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);\n\t                                        }\n\t                                        orig = _useSVGTransformAttr ? null : \"0px 0px\";\n\t                                    }\n\t                                    if (orig || _supports3D && has3D && m1.zOrigin) {\n\t                                        if (_transformProp) {\n\t                                            hasChange = true;\n\t                                            p = _transformOriginProp;\n\t                                            orig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\";\n\t                                            pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n\t                                            pt.b = style[p];\n\t                                            pt.plugin = plugin;\n\t                                            if (_supports3D) {\n\t                                                copy = m1.zOrigin;\n\t                                                orig = orig.split(\" \");\n\t                                                m1.zOrigin = (orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\") ? parseFloat(orig[2]) : copy) || 0;\n\t                                                pt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\";\n\t                                                pt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n);\n\t                                                pt.b = copy;\n\t                                                pt.xs0 = pt.e = m1.zOrigin;\n\t                                            } else {\n\t                                                pt.xs0 = pt.e = orig;\n\t                                            }\n\t                                        } else {\n\t                                            _parsePosition(orig + \"\", m1);\n\t                                        }\n\t                                    }\n\t                                    if (hasChange) {\n\t                                        cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2;\n\t                                    }\n\t                                    return pt;\n\t                                },\n\t                                prefix: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"boxShadow\", {\n\t                                defaultValue: \"0px 0px 0px 0px #999\",\n\t                                prefix: true,\n\t                                color: true,\n\t                                multi: true,\n\t                                keyword: \"inset\"\n\t                            });\n\t                            _registerComplexSpecialProp(\"borderRadius\", {\n\t                                defaultValue: \"0px\",\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    e = this.format(e);\n\t                                    var props = [ \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\" ], style = t.style, ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n\t                                    w = parseFloat(t.offsetWidth);\n\t                                    h = parseFloat(t.offsetHeight);\n\t                                    ea1 = e.split(\" \");\n\t                                    for (i = 0; i < props.length; i++) {\n\t                                        if (this.p.indexOf(\"border\")) {\n\t                                            props[i] = _checkPropPrefix(props[i]);\n\t                                        }\n\t                                        bs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n\t                                        if (bs.indexOf(\" \") !== -1) {\n\t                                            bs2 = bs.split(\" \");\n\t                                            bs = bs2[0];\n\t                                            bs2 = bs2[1];\n\t                                        }\n\t                                        es = es2 = ea1[i];\n\t                                        bn = parseFloat(bs);\n\t                                        bsfx = bs.substr((bn + \"\").length);\n\t                                        rel = es.charAt(1) === \"=\";\n\t                                        if (rel) {\n\t                                            en = parseInt(es.charAt(0) + \"1\", 10);\n\t                                            es = es.substr(2);\n\t                                            en *= parseFloat(es);\n\t                                            esfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n\t                                        } else {\n\t                                            en = parseFloat(es);\n\t                                            esfx = es.substr((en + \"\").length);\n\t                                        }\n\t                                        if (esfx === \"\") {\n\t                                            esfx = _suffixMap[p] || bsfx;\n\t                                        }\n\t                                        if (esfx !== bsfx) {\n\t                                            hn = _convertToPixels(t, \"borderLeft\", bn, bsfx);\n\t                                            vn = _convertToPixels(t, \"borderTop\", bn, bsfx);\n\t                                            if (esfx === \"%\") {\n\t                                                bs = hn / w * 100 + \"%\";\n\t                                                bs2 = vn / h * 100 + \"%\";\n\t                                            } else if (esfx === \"em\") {\n\t                                                em = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n\t                                                bs = hn / em + \"em\";\n\t                                                bs2 = vn / em + \"em\";\n\t                                            } else {\n\t                                                bs = hn + \"px\";\n\t                                                bs2 = vn + \"px\";\n\t                                            }\n\t                                            if (rel) {\n\t                                                es = parseFloat(bs) + en + esfx;\n\t                                                es2 = parseFloat(bs2) + en + esfx;\n\t                                            }\n\t                                        }\n\t                                        pt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n\t                                    }\n\t                                    return pt;\n\t                                },\n\t                                prefix: true,\n\t                                formatter: _getFormatter(\"0px 0px 0px 0px\", false, true)\n\t                            });\n\t                            _registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {\n\t                                defaultValue: \"0px\",\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n\t                                },\n\t                                prefix: true,\n\t                                formatter: _getFormatter(\"0px 0px\", false, true)\n\t                            });\n\t                            _registerComplexSpecialProp(\"backgroundPosition\", {\n\t                                defaultValue: \"0 0\",\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    var bp = \"background-position\", cs = _cs || _getComputedStyle(t, null), bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), es = this.format(e), ba, ea, i, pct, overlap, src;\n\t                                    if (bs.indexOf(\"%\") !== -1 !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n\t                                        src = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n\t                                        if (src && src !== \"none\") {\n\t                                            ba = bs.split(\" \");\n\t                                            ea = es.split(\" \");\n\t                                            _tempImg.setAttribute(\"src\", src);\n\t                                            i = 2;\n\t                                            while (--i > -1) {\n\t                                                bs = ba[i];\n\t                                                pct = bs.indexOf(\"%\") !== -1;\n\t                                                if (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n\t                                                    overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n\t                                                    ba[i] = pct ? parseFloat(bs) / 100 * overlap + \"px\" : parseFloat(bs) / overlap * 100 + \"%\";\n\t                                                }\n\t                                            }\n\t                                            bs = ba.join(\" \");\n\t                                        }\n\t                                    }\n\t                                    return this.parseComplex(t.style, bs, es, pt, plugin);\n\t                                },\n\t                                formatter: _parsePosition\n\t                            });\n\t                            _registerComplexSpecialProp(\"backgroundSize\", {\n\t                                defaultValue: \"0 0\",\n\t                                formatter: _parsePosition\n\t                            });\n\t                            _registerComplexSpecialProp(\"perspective\", {\n\t                                defaultValue: \"0px\",\n\t                                prefix: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"perspectiveOrigin\", {\n\t                                defaultValue: \"50% 50%\",\n\t                                prefix: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"transformStyle\", {\n\t                                prefix: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"backfaceVisibility\", {\n\t                                prefix: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"userSelect\", {\n\t                                prefix: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"margin\", {\n\t                                parser: _getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")\n\t                            });\n\t                            _registerComplexSpecialProp(\"padding\", {\n\t                                parser: _getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")\n\t                            });\n\t                            _registerComplexSpecialProp(\"clip\", {\n\t                                defaultValue: \"rect(0px,0px,0px,0px)\",\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    var b, cs, delim;\n\t                                    if (_ieVers < 9) {\n\t                                        cs = t.currentStyle;\n\t                                        delim = _ieVers < 8 ? \" \" : \",\";\n\t                                        b = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n\t                                        e = this.format(e).split(\",\").join(delim);\n\t                                    } else {\n\t                                        b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n\t                                        e = this.format(e);\n\t                                    }\n\t                                    return this.parseComplex(t.style, b, e, pt, plugin);\n\t                                }\n\t                            });\n\t                            _registerComplexSpecialProp(\"textShadow\", {\n\t                                defaultValue: \"0px 0px 0px #999\",\n\t                                color: true,\n\t                                multi: true\n\t                            });\n\t                            _registerComplexSpecialProp(\"autoRound,strictUnits\", {\n\t                                parser: function(t, e, p, cssp, pt) {\n\t                                    return pt;\n\t                                }\n\t                            });\n\t                            _registerComplexSpecialProp(\"border\", {\n\t                                defaultValue: \"0px solid #000\",\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    var bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"), end = this.format(e).split(\" \"), esfx = end[0].replace(_suffixExp, \"\");\n\t                                    if (esfx !== \"px\") {\n\t                                        bw = parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx) + esfx;\n\t                                    }\n\t                                    return this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n\t                                },\n\t                                color: true,\n\t                                formatter: function(v) {\n\t                                    var a = v.split(\" \");\n\t                                    return a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [ \"#000\" ])[0];\n\t                                }\n\t                            });\n\t                            _registerComplexSpecialProp(\"borderWidth\", {\n\t                                parser: _getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")\n\t                            });\n\t                            _registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    var s = t.style, prop = \"cssFloat\" in s ? \"cssFloat\" : \"styleFloat\";\n\t                                    return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n\t                                }\n\t                            });\n\t                            var _setIEOpacityRatio = function(v) {\n\t                                var t = this.t, filters = t.filter || _getStyle(this.data, \"filter\") || \"\", val = this.s + this.c * v | 0, skip;\n\t                                if (val === 100) {\n\t                                    if (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n\t                                        t.removeAttribute(\"filter\");\n\t                                        skip = !_getStyle(this.data, \"filter\");\n\t                                    } else {\n\t                                        t.filter = filters.replace(_alphaFilterExp, \"\");\n\t                                        skip = true;\n\t                                    }\n\t                                }\n\t                                if (!skip) {\n\t                                    if (this.xn1) {\n\t                                        t.filter = filters = filters || \"alpha(opacity=\" + val + \")\";\n\t                                    }\n\t                                    if (filters.indexOf(\"pacity\") === -1) {\n\t                                        if (val !== 0 || !this.xn1) {\n\t                                            t.filter = filters + \" alpha(opacity=\" + val + \")\";\n\t                                        }\n\t                                    } else {\n\t                                        t.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n\t                                    }\n\t                                }\n\t                            };\n\t                            _registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {\n\t                                defaultValue: \"1\",\n\t                                parser: function(t, e, p, cssp, pt, plugin) {\n\t                                    var b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")), style = t.style, isAutoAlpha = p === \"autoAlpha\";\n\t                                    if (typeof e === \"string\" && e.charAt(1) === \"=\") {\n\t                                        e = (e.charAt(0) === \"-\" ? -1 : 1) * parseFloat(e.substr(2)) + b;\n\t                                    }\n\t                                    if (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) {\n\t                                        b = 0;\n\t                                    }\n\t                                    if (_supportsOpacity) {\n\t                                        pt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n\t                                    } else {\n\t                                        pt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n\t                                        pt.xn1 = isAutoAlpha ? 1 : 0;\n\t                                        style.zoom = 1;\n\t                                        pt.type = 2;\n\t                                        pt.b = \"alpha(opacity=\" + pt.s + \")\";\n\t                                        pt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n\t                                        pt.data = t;\n\t                                        pt.plugin = plugin;\n\t                                        pt.setRatio = _setIEOpacityRatio;\n\t                                    }\n\t                                    if (isAutoAlpha) {\n\t                                        pt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, b !== 0 ? \"inherit\" : \"hidden\", e === 0 ? \"hidden\" : \"inherit\");\n\t                                        pt.xs0 = \"inherit\";\n\t                                        cssp._overwriteProps.push(pt.n);\n\t                                        cssp._overwriteProps.push(p);\n\t                                    }\n\t                                    return pt;\n\t                                }\n\t                            });\n\t                            var _removeProp = function(s, p) {\n\t                                if (p) {\n\t                                    if (s.removeProperty) {\n\t                                        if (p.substr(0, 2) === \"ms\" || p.substr(0, 6) === \"webkit\") {\n\t                                            p = \"-\" + p;\n\t                                        }\n\t                                        s.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t                                    } else {\n\t                                        s.removeAttribute(p);\n\t                                    }\n\t                                }\n\t                            }, _setClassNameRatio = function(v) {\n\t                                this.t._gsClassPT = this;\n\t                                if (v === 1 || v === 0) {\n\t                                    this.t.setAttribute(\"class\", v === 0 ? this.b : this.e);\n\t                                    var mpt = this.data, s = this.t.style;\n\t                                    while (mpt) {\n\t                                        if (!mpt.v) {\n\t                                            _removeProp(s, mpt.p);\n\t                                        } else {\n\t                                            s[mpt.p] = mpt.v;\n\t                                        }\n\t                                        mpt = mpt._next;\n\t                                    }\n\t                                    if (v === 1 && this.t._gsClassPT === this) {\n\t                                        this.t._gsClassPT = null;\n\t                                    }\n\t                                } else if (this.t.getAttribute(\"class\") !== this.e) {\n\t                                    this.t.setAttribute(\"class\", this.e);\n\t                                }\n\t                            };\n\t                            _registerComplexSpecialProp(\"className\", {\n\t                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                    var b = t.getAttribute(\"class\") || \"\", cssText = t.style.cssText, difData, bs, cnpt, cnptLookup, mpt;\n\t                                    pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t                                    pt.setRatio = _setClassNameRatio;\n\t                                    pt.pr = -11;\n\t                                    _hasPriority = true;\n\t                                    pt.b = b;\n\t                                    bs = _getAllStyles(t, _cs);\n\t                                    cnpt = t._gsClassPT;\n\t                                    if (cnpt) {\n\t                                        cnptLookup = {};\n\t                                        mpt = cnpt.data;\n\t                                        while (mpt) {\n\t                                            cnptLookup[mpt.p] = 1;\n\t                                            mpt = mpt._next;\n\t                                        }\n\t                                        cnpt.setRatio(1);\n\t                                    }\n\t                                    t._gsClassPT = pt;\n\t                                    pt.e = e.charAt(1) !== \"=\" ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + (e.charAt(0) === \"+\" ? \" \" + e.substr(2) : \"\");\n\t                                    t.setAttribute(\"class\", pt.e);\n\t                                    difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n\t                                    t.setAttribute(\"class\", b);\n\t                                    pt.data = difData.firstMPT;\n\t                                    t.style.cssText = cssText;\n\t                                    pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin);\n\t                                    return pt;\n\t                                }\n\t                            });\n\t                            var _setClearPropsRatio = function(v) {\n\t                                if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") {\n\t                                    var s = this.t.style, transformParse = _specialProps.transform.parse, a, p, i, clearTransform, transform;\n\t                                    if (this.e === \"all\") {\n\t                                        s.cssText = \"\";\n\t                                        clearTransform = true;\n\t                                    } else {\n\t                                        a = this.e.split(\" \").join(\"\").split(\",\");\n\t                                        i = a.length;\n\t                                        while (--i > -1) {\n\t                                            p = a[i];\n\t                                            if (_specialProps[p]) {\n\t                                                if (_specialProps[p].parse === transformParse) {\n\t                                                    clearTransform = true;\n\t                                                } else {\n\t                                                    p = p === \"transformOrigin\" ? _transformOriginProp : _specialProps[p].p;\n\t                                                }\n\t                                            }\n\t                                            _removeProp(s, p);\n\t                                        }\n\t                                    }\n\t                                    if (clearTransform) {\n\t                                        _removeProp(s, _transformProp);\n\t                                        transform = this.t._gsTransform;\n\t                                        if (transform) {\n\t                                            if (transform.svg) {\n\t                                                this.t.removeAttribute(\"data-svg-origin\");\n\t                                                this.t.removeAttribute(\"transform\");\n\t                                            }\n\t                                            delete this.t._gsTransform;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            };\n\t                            _registerComplexSpecialProp(\"clearProps\", {\n\t                                parser: function(t, e, p, cssp, pt) {\n\t                                    pt = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t                                    pt.setRatio = _setClearPropsRatio;\n\t                                    pt.e = e;\n\t                                    pt.pr = -10;\n\t                                    pt.data = cssp._tween;\n\t                                    _hasPriority = true;\n\t                                    return pt;\n\t                                }\n\t                            });\n\t                            p = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n\t                            i = p.length;\n\t                            while (i--) {\n\t                                _registerPluginProp(p[i]);\n\t                            }\n\t                            p = CSSPlugin.prototype;\n\t                            p._firstPT = p._lastParsedTransform = p._transform = null;\n\t                            p._onInitTween = function(target, vars, tween) {\n\t                                if (!target.nodeType) {\n\t                                    return false;\n\t                                }\n\t                                this._target = target;\n\t                                this._tween = tween;\n\t                                this._vars = vars;\n\t                                _autoRound = vars.autoRound;\n\t                                _hasPriority = false;\n\t                                _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n\t                                _cs = _getComputedStyle(target, \"\");\n\t                                _overwriteProps = this._overwriteProps;\n\t                                var style = target.style, v, pt, pt2, first, last, next, zIndex, tpt, threeD;\n\t                                if (_reqSafariFix) if (style.zIndex === \"\") {\n\t                                    v = _getStyle(target, \"zIndex\", _cs);\n\t                                    if (v === \"auto\" || v === \"\") {\n\t                                        this._addLazySet(style, \"zIndex\", 0);\n\t                                    }\n\t                                }\n\t                                if (typeof vars === \"string\") {\n\t                                    first = style.cssText;\n\t                                    v = _getAllStyles(target, _cs);\n\t                                    style.cssText = first + \";\" + vars;\n\t                                    v = _cssDif(target, v, _getAllStyles(target)).difs;\n\t                                    if (!_supportsOpacity && _opacityValExp.test(vars)) {\n\t                                        v.opacity = parseFloat(RegExp.$1);\n\t                                    }\n\t                                    vars = v;\n\t                                    style.cssText = first;\n\t                                }\n\t                                if (vars.className) {\n\t                                    this._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n\t                                } else {\n\t                                    this._firstPT = pt = this.parse(target, vars, null);\n\t                                }\n\t                                if (this._transformType) {\n\t                                    threeD = this._transformType === 3;\n\t                                    if (!_transformProp) {\n\t                                        style.zoom = 1;\n\t                                    } else if (_isSafari) {\n\t                                        _reqSafariFix = true;\n\t                                        if (style.zIndex === \"\") {\n\t                                            zIndex = _getStyle(target, \"zIndex\", _cs);\n\t                                            if (zIndex === \"auto\" || zIndex === \"\") {\n\t                                                this._addLazySet(style, \"zIndex\", 0);\n\t                                            }\n\t                                        }\n\t                                        if (_isSafariLT6) {\n\t                                            this._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n\t                                        }\n\t                                    }\n\t                                    pt2 = pt;\n\t                                    while (pt2 && pt2._next) {\n\t                                        pt2 = pt2._next;\n\t                                    }\n\t                                    tpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n\t                                    this._linkCSSP(tpt, null, pt2);\n\t                                    tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n\t                                    tpt.data = this._transform || _getTransform(target, _cs, true);\n\t                                    tpt.tween = tween;\n\t                                    tpt.pr = -1;\n\t                                    _overwriteProps.pop();\n\t                                }\n\t                                if (_hasPriority) {\n\t                                    while (pt) {\n\t                                        next = pt._next;\n\t                                        pt2 = first;\n\t                                        while (pt2 && pt2.pr > pt.pr) {\n\t                                            pt2 = pt2._next;\n\t                                        }\n\t                                        if (pt._prev = pt2 ? pt2._prev : last) {\n\t                                            pt._prev._next = pt;\n\t                                        } else {\n\t                                            first = pt;\n\t                                        }\n\t                                        if (pt._next = pt2) {\n\t                                            pt2._prev = pt;\n\t                                        } else {\n\t                                            last = pt;\n\t                                        }\n\t                                        pt = next;\n\t                                    }\n\t                                    this._firstPT = first;\n\t                                }\n\t                                return true;\n\t                            };\n\t                            p.parse = function(target, vars, pt, plugin) {\n\t                                var style = target.style, p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n\t                                for (p in vars) {\n\t                                    es = vars[p];\n\t                                    sp = _specialProps[p];\n\t                                    if (sp) {\n\t                                        pt = sp.parse(target, es, p, this, pt, plugin, vars);\n\t                                    } else {\n\t                                        bs = _getStyle(target, p, _cs) + \"\";\n\t                                        isStr = typeof es === \"string\";\n\t                                        if (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || isStr && _rgbhslExp.test(es)) {\n\t                                            if (!isStr) {\n\t                                                es = _parseColor(es);\n\t                                                es = (es.length > 3 ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n\t                                            }\n\t                                            pt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n\t                                        } else if (isStr && _complexExp.test(es)) {\n\t                                            pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n\t                                        } else {\n\t                                            bn = parseFloat(bs);\n\t                                            bsfx = bn || bn === 0 ? bs.substr((bn + \"\").length) : \"\";\n\t                                            if (bs === \"\" || bs === \"auto\") {\n\t                                                if (p === \"width\" || p === \"height\") {\n\t                                                    bn = _getDimension(target, p, _cs);\n\t                                                    bsfx = \"px\";\n\t                                                } else if (p === \"left\" || p === \"top\") {\n\t                                                    bn = _calculateOffset(target, p, _cs);\n\t                                                    bsfx = \"px\";\n\t                                                } else {\n\t                                                    bn = p !== \"opacity\" ? 0 : 1;\n\t                                                    bsfx = \"\";\n\t                                                }\n\t                                            }\n\t                                            rel = isStr && es.charAt(1) === \"=\";\n\t                                            if (rel) {\n\t                                                en = parseInt(es.charAt(0) + \"1\", 10);\n\t                                                es = es.substr(2);\n\t                                                en *= parseFloat(es);\n\t                                                esfx = es.replace(_suffixExp, \"\");\n\t                                            } else {\n\t                                                en = parseFloat(es);\n\t                                                esfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n\t                                            }\n\t                                            if (esfx === \"\") {\n\t                                                esfx = p in _suffixMap ? _suffixMap[p] : bsfx;\n\t                                            }\n\t                                            es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p];\n\t                                            if (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) {\n\t                                                bn = _convertToPixels(target, p, bn, bsfx);\n\t                                                if (esfx === \"%\") {\n\t                                                    bn /= _convertToPixels(target, p, 100, \"%\") / 100;\n\t                                                    if (vars.strictUnits !== true) {\n\t                                                        bs = bn + \"%\";\n\t                                                    }\n\t                                                } else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n\t                                                    bn /= _convertToPixels(target, p, 1, esfx);\n\t                                                } else if (esfx !== \"px\") {\n\t                                                    en = _convertToPixels(target, p, en, esfx);\n\t                                                    esfx = \"px\";\n\t                                                }\n\t                                                if (rel) if (en || en === 0) {\n\t                                                    es = en + bn + esfx;\n\t                                                }\n\t                                            }\n\t                                            if (rel) {\n\t                                                en += bn;\n\t                                            }\n\t                                            if ((bn || bn === 0) && (en || en === 0)) {\n\t                                                pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === \"px\" || p === \"zIndex\"), 0, bs, es);\n\t                                                pt.xs0 = esfx;\n\t                                            } else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n\t                                                _log(\"invalid \" + p + \" tween value: \" + vars[p]);\n\t                                            } else {\n\t                                                pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n\t                                                pt.xs0 = es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1) ? bs : es;\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    if (plugin) if (pt && !pt.plugin) {\n\t                                        pt.plugin = plugin;\n\t                                    }\n\t                                }\n\t                                return pt;\n\t                            };\n\t                            p.setRatio = function(v) {\n\t                                var pt = this._firstPT, min = 1e-6, val, str, i;\n\t                                if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n\t                                    while (pt) {\n\t                                        if (pt.type !== 2) {\n\t                                            if (pt.r && pt.type !== -1) {\n\t                                                val = Math.round(pt.s + pt.c);\n\t                                                if (!pt.type) {\n\t                                                    pt.t[pt.p] = val + pt.xs0;\n\t                                                } else if (pt.type === 1) {\n\t                                                    i = pt.l;\n\t                                                    str = pt.xs0 + val + pt.xs1;\n\t                                                    for (i = 1; i < pt.l; i++) {\n\t                                                        str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                                    }\n\t                                                    pt.t[pt.p] = str;\n\t                                                }\n\t                                            } else {\n\t                                                pt.t[pt.p] = pt.e;\n\t                                            }\n\t                                        } else {\n\t                                            pt.setRatio(v);\n\t                                        }\n\t                                        pt = pt._next;\n\t                                    }\n\t                                } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -1e-6) {\n\t                                    while (pt) {\n\t                                        val = pt.c * v + pt.s;\n\t                                        if (pt.r) {\n\t                                            val = Math.round(val);\n\t                                        } else if (val < min) if (val > -min) {\n\t                                            val = 0;\n\t                                        }\n\t                                        if (!pt.type) {\n\t                                            pt.t[pt.p] = val + pt.xs0;\n\t                                        } else if (pt.type === 1) {\n\t                                            i = pt.l;\n\t                                            if (i === 2) {\n\t                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n\t                                            } else if (i === 3) {\n\t                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n\t                                            } else if (i === 4) {\n\t                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n\t                                            } else if (i === 5) {\n\t                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n\t                                            } else {\n\t                                                str = pt.xs0 + val + pt.xs1;\n\t                                                for (i = 1; i < pt.l; i++) {\n\t                                                    str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                                }\n\t                                                pt.t[pt.p] = str;\n\t                                            }\n\t                                        } else if (pt.type === -1) {\n\t                                            pt.t[pt.p] = pt.xs0;\n\t                                        } else if (pt.setRatio) {\n\t                                            pt.setRatio(v);\n\t                                        }\n\t                                        pt = pt._next;\n\t                                    }\n\t                                } else {\n\t                                    while (pt) {\n\t                                        if (pt.type !== 2) {\n\t                                            pt.t[pt.p] = pt.b;\n\t                                        } else {\n\t                                            pt.setRatio(v);\n\t                                        }\n\t                                        pt = pt._next;\n\t                                    }\n\t                                }\n\t                            };\n\t                            p._enableTransforms = function(threeD) {\n\t                                this._transform = this._transform || _getTransform(this._target, _cs, true);\n\t                                this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;\n\t                            };\n\t                            var lazySet = function(v) {\n\t                                this.t[this.p] = this.e;\n\t                                this.data._linkCSSP(this, this._next, null, true);\n\t                            };\n\t                            p._addLazySet = function(t, p, v) {\n\t                                var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n\t                                pt.e = v;\n\t                                pt.setRatio = lazySet;\n\t                                pt.data = this;\n\t                            };\n\t                            p._linkCSSP = function(pt, next, prev, remove) {\n\t                                if (pt) {\n\t                                    if (next) {\n\t                                        next._prev = pt;\n\t                                    }\n\t                                    if (pt._next) {\n\t                                        pt._next._prev = pt._prev;\n\t                                    }\n\t                                    if (pt._prev) {\n\t                                        pt._prev._next = pt._next;\n\t                                    } else if (this._firstPT === pt) {\n\t                                        this._firstPT = pt._next;\n\t                                        remove = true;\n\t                                    }\n\t                                    if (prev) {\n\t                                        prev._next = pt;\n\t                                    } else if (!remove && this._firstPT === null) {\n\t                                        this._firstPT = pt;\n\t                                    }\n\t                                    pt._next = next;\n\t                                    pt._prev = prev;\n\t                                }\n\t                                return pt;\n\t                            };\n\t                            p._kill = function(lookup) {\n\t                                var copy = lookup, pt, p, xfirst;\n\t                                if (lookup.autoAlpha || lookup.alpha) {\n\t                                    copy = {};\n\t                                    for (p in lookup) {\n\t                                        copy[p] = lookup[p];\n\t                                    }\n\t                                    copy.opacity = 1;\n\t                                    if (copy.autoAlpha) {\n\t                                        copy.visibility = 1;\n\t                                    }\n\t                                }\n\t                                if (lookup.className && (pt = this._classNamePT)) {\n\t                                    xfirst = pt.xfirst;\n\t                                    if (xfirst && xfirst._prev) {\n\t                                        this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev);\n\t                                    } else if (xfirst === this._firstPT) {\n\t                                        this._firstPT = pt._next;\n\t                                    }\n\t                                    if (pt._next) {\n\t                                        this._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n\t                                    }\n\t                                    this._classNamePT = null;\n\t                                }\n\t                                return TweenPlugin.prototype._kill.call(this, copy);\n\t                            };\n\t                            var _getChildStyles = function(e, props, targets) {\n\t                                var children, i, child, type;\n\t                                if (e.slice) {\n\t                                    i = e.length;\n\t                                    while (--i > -1) {\n\t                                        _getChildStyles(e[i], props, targets);\n\t                                    }\n\t                                    return;\n\t                                }\n\t                                children = e.childNodes;\n\t                                i = children.length;\n\t                                while (--i > -1) {\n\t                                    child = children[i];\n\t                                    type = child.type;\n\t                                    if (child.style) {\n\t                                        props.push(_getAllStyles(child));\n\t                                        if (targets) {\n\t                                            targets.push(child);\n\t                                        }\n\t                                    }\n\t                                    if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n\t                                        _getChildStyles(child, props, targets);\n\t                                    }\n\t                                }\n\t                            };\n\t                            CSSPlugin.cascadeTo = function(target, duration, vars) {\n\t                                var tween = TweenLite.to(target, duration, vars), results = [ tween ], b = [], e = [], targets = [], _reservedProps = TweenLite._internals.reservedProps, i, difs, p, from;\n\t                                target = tween._targets || tween.target;\n\t                                _getChildStyles(target, b, targets);\n\t                                tween.render(duration, true, true);\n\t                                _getChildStyles(target, e);\n\t                                tween.render(0, true, true);\n\t                                tween._enabled(true);\n\t                                i = targets.length;\n\t                                while (--i > -1) {\n\t                                    difs = _cssDif(targets[i], b[i], e[i]);\n\t                                    if (difs.firstMPT) {\n\t                                        difs = difs.difs;\n\t                                        for (p in vars) {\n\t                                            if (_reservedProps[p]) {\n\t                                                difs[p] = vars[p];\n\t                                            }\n\t                                        }\n\t                                        from = {};\n\t                                        for (p in difs) {\n\t                                            from[p] = b[i][p];\n\t                                        }\n\t                                        results.push(TweenLite.fromTo(targets[i], duration, from, difs));\n\t                                    }\n\t                                }\n\t                                return results;\n\t                            };\n\t                            TweenPlugin.activate([ CSSPlugin ]);\n\t                            return CSSPlugin;\n\t                        }, true);\n\t                        (function() {\n\t                            var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n\t                                propName: \"roundProps\",\n\t                                version: \"1.5\",\n\t                                priority: -1,\n\t                                API: 2,\n\t                                init: function(target, value, tween) {\n\t                                    this._tween = tween;\n\t                                    return true;\n\t                                }\n\t                            }), _roundLinkedList = function(node) {\n\t                                while (node) {\n\t                                    if (!node.f && !node.blob) {\n\t                                        node.r = 1;\n\t                                    }\n\t                                    node = node._next;\n\t                                }\n\t                            }, p = RoundPropsPlugin.prototype;\n\t                            p._onInitAllProps = function() {\n\t                                var tween = this._tween, rp = tween.vars.roundProps.join ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"), i = rp.length, lookup = {}, rpt = tween._propLookup.roundProps, prop, pt, next;\n\t                                while (--i > -1) {\n\t                                    lookup[rp[i]] = 1;\n\t                                }\n\t                                i = rp.length;\n\t                                while (--i > -1) {\n\t                                    prop = rp[i];\n\t                                    pt = tween._firstPT;\n\t                                    while (pt) {\n\t                                        next = pt._next;\n\t                                        if (pt.pg) {\n\t                                            pt.t._roundProps(lookup, true);\n\t                                        } else if (pt.n === prop) {\n\t                                            if (pt.f === 2 && pt.t) {\n\t                                                _roundLinkedList(pt.t._firstPT);\n\t                                            } else {\n\t                                                this._add(pt.t, prop, pt.s, pt.c);\n\t                                                if (next) {\n\t                                                    next._prev = pt._prev;\n\t                                                }\n\t                                                if (pt._prev) {\n\t                                                    pt._prev._next = next;\n\t                                                } else if (tween._firstPT === pt) {\n\t                                                    tween._firstPT = next;\n\t                                                }\n\t                                                pt._next = pt._prev = null;\n\t                                                tween._propLookup[prop] = rpt;\n\t                                            }\n\t                                        }\n\t                                        pt = next;\n\t                                    }\n\t                                }\n\t                                return false;\n\t                            };\n\t                            p._add = function(target, p, s, c) {\n\t                                this._addTween(target, p, s, s + c, p, true);\n\t                                this._overwriteProps.push(p);\n\t                            };\n\t                        })();\n\t                        (function() {\n\t                            _gsScope._gsDefine.plugin({\n\t                                propName: \"attr\",\n\t                                API: 2,\n\t                                version: \"0.5.0\",\n\t                                init: function(target, value, tween) {\n\t                                    var p;\n\t                                    if (typeof target.setAttribute !== \"function\") {\n\t                                        return false;\n\t                                    }\n\t                                    for (p in value) {\n\t                                        this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", value[p] + \"\", p, false, p);\n\t                                        this._overwriteProps.push(p);\n\t                                    }\n\t                                    return true;\n\t                                }\n\t                            });\n\t                        })();\n\t                        _gsScope._gsDefine.plugin({\n\t                            propName: \"directionalRotation\",\n\t                            version: \"0.2.1\",\n\t                            API: 2,\n\t                            init: function(target, value, tween) {\n\t                                if (typeof value !== \"object\") {\n\t                                    value = {\n\t                                        rotation: value\n\t                                    };\n\t                                }\n\t                                this.finals = {};\n\t                                var cap = value.useRadians === true ? Math.PI * 2 : 360, min = 1e-6, p, v, start, end, dif, split;\n\t                                for (p in value) {\n\t                                    if (p !== \"useRadians\") {\n\t                                        split = (value[p] + \"\").split(\"_\");\n\t                                        v = split[0];\n\t                                        start = parseFloat(typeof target[p] !== \"function\" ? target[p] : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]());\n\t                                        end = this.finals[p] = typeof v === \"string\" && v.charAt(1) === \"=\" ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n\t                                        dif = end - start;\n\t                                        if (split.length) {\n\t                                            v = split.join(\"_\");\n\t                                            if (v.indexOf(\"short\") !== -1) {\n\t                                                dif = dif % cap;\n\t                                                if (dif !== dif % (cap / 2)) {\n\t                                                    dif = dif < 0 ? dif + cap : dif - cap;\n\t                                                }\n\t                                            }\n\t                                            if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t                                                dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                            } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t                                                dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                            }\n\t                                        }\n\t                                        if (dif > min || dif < -min) {\n\t                                            this._addTween(target, p, start, start + dif, p);\n\t                                            this._overwriteProps.push(p);\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return true;\n\t                            },\n\t                            set: function(ratio) {\n\t                                var pt;\n\t                                if (ratio !== 1) {\n\t                                    this._super.setRatio.call(this, ratio);\n\t                                } else {\n\t                                    pt = this._firstPT;\n\t                                    while (pt) {\n\t                                        if (pt.f) {\n\t                                            pt.t[pt.p](this.finals[pt.p]);\n\t                                        } else {\n\t                                            pt.t[pt.p] = this.finals[pt.p];\n\t                                        }\n\t                                        pt = pt._next;\n\t                                    }\n\t                                }\n\t                            }\n\t                        })._autoCSS = true;\n\t                        _gsScope._gsDefine(\"easing.Back\", [ \"easing.Ease\" ], function(Ease) {\n\t                            var w = _gsScope.GreenSockGlobals || _gsScope, gs = w.com.greensock, _2PI = Math.PI * 2, _HALF_PI = Math.PI / 2, _class = gs._class, _create = function(n, f) {\n\t                                var C = _class(\"easing.\" + n, function() {}, true), p = C.prototype = new Ease();\n\t                                p.constructor = C;\n\t                                p.getRatio = f;\n\t                                return C;\n\t                            }, _easeReg = Ease.register || function() {}, _wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t                                var C = _class(\"easing.\" + name, {\n\t                                    easeOut: new EaseOut(),\n\t                                    easeIn: new EaseIn(),\n\t                                    easeInOut: new EaseInOut()\n\t                                }, true);\n\t                                _easeReg(C, name);\n\t                                return C;\n\t                            }, EasePoint = function(time, value, next) {\n\t                                this.t = time;\n\t                                this.v = value;\n\t                                if (next) {\n\t                                    this.next = next;\n\t                                    next.prev = this;\n\t                                    this.c = next.v - value;\n\t                                    this.gap = next.t - time;\n\t                                }\n\t                            }, _createBack = function(n, f) {\n\t                                var C = _class(\"easing.\" + n, function(overshoot) {\n\t                                    this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;\n\t                                    this._p2 = this._p1 * 1.525;\n\t                                }, true), p = C.prototype = new Ease();\n\t                                p.constructor = C;\n\t                                p.getRatio = f;\n\t                                p.config = function(overshoot) {\n\t                                    return new C(overshoot);\n\t                                };\n\t                                return C;\n\t                            }, Back = _wrap(\"Back\", _createBack(\"BackOut\", function(p) {\n\t                                return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;\n\t                            }), _createBack(\"BackIn\", function(p) {\n\t                                return p * p * ((this._p1 + 1) * p - this._p1);\n\t                            }), _createBack(\"BackInOut\", function(p) {\n\t                                return (p *= 2) < 1 ? .5 * p * p * ((this._p2 + 1) * p - this._p2) : .5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t                            })), SlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t                                power = power || power === 0 ? power : .7;\n\t                                if (linearRatio == null) {\n\t                                    linearRatio = .7;\n\t                                } else if (linearRatio > 1) {\n\t                                    linearRatio = 1;\n\t                                }\n\t                                this._p = linearRatio !== 1 ? power : 0;\n\t                                this._p1 = (1 - linearRatio) / 2;\n\t                                this._p2 = linearRatio;\n\t                                this._p3 = this._p1 + this._p2;\n\t                                this._calcEnd = yoyoMode === true;\n\t                            }, true), p = SlowMo.prototype = new Ease(), SteppedEase, RoughEase, _createElastic;\n\t                            p.constructor = SlowMo;\n\t                            p.getRatio = function(p) {\n\t                                var r = p + (.5 - p) * this._p;\n\t                                if (p < this._p1) {\n\t                                    return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;\n\t                                } else if (p > this._p3) {\n\t                                    return this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p;\n\t                                }\n\t                                return this._calcEnd ? 1 : r;\n\t                            };\n\t                            SlowMo.ease = new SlowMo(.7, .7);\n\t                            p.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t                                return new SlowMo(linearRatio, power, yoyoMode);\n\t                            };\n\t                            SteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n\t                                steps = steps || 1;\n\t                                this._p1 = 1 / steps;\n\t                                this._p2 = steps + 1;\n\t                            }, true);\n\t                            p = SteppedEase.prototype = new Ease();\n\t                            p.constructor = SteppedEase;\n\t                            p.getRatio = function(p) {\n\t                                if (p < 0) {\n\t                                    p = 0;\n\t                                } else if (p >= 1) {\n\t                                    p = .999999999;\n\t                                }\n\t                                return (this._p2 * p >> 0) * this._p1;\n\t                            };\n\t                            p.config = SteppedEase.config = function(steps) {\n\t                                return new SteppedEase(steps);\n\t                            };\n\t                            RoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t                                vars = vars || {};\n\t                                var taper = vars.taper || \"none\", a = [], cnt = 0, points = (vars.points || 20) | 0, i = points, randomize = vars.randomize !== false, clamp = vars.clamp === true, template = vars.template instanceof Ease ? vars.template : null, strength = typeof vars.strength === \"number\" ? vars.strength * .4 : .4, x, y, bump, invX, obj, pnt;\n\t                                while (--i > -1) {\n\t                                    x = randomize ? Math.random() : 1 / points * i;\n\t                                    y = template ? template.getRatio(x) : x;\n\t                                    if (taper === \"none\") {\n\t                                        bump = strength;\n\t                                    } else if (taper === \"out\") {\n\t                                        invX = 1 - x;\n\t                                        bump = invX * invX * strength;\n\t                                    } else if (taper === \"in\") {\n\t                                        bump = x * x * strength;\n\t                                    } else if (x < .5) {\n\t                                        invX = x * 2;\n\t                                        bump = invX * invX * .5 * strength;\n\t                                    } else {\n\t                                        invX = (1 - x) * 2;\n\t                                        bump = invX * invX * .5 * strength;\n\t                                    }\n\t                                    if (randomize) {\n\t                                        y += Math.random() * bump - bump * .5;\n\t                                    } else if (i % 2) {\n\t                                        y += bump * .5;\n\t                                    } else {\n\t                                        y -= bump * .5;\n\t                                    }\n\t                                    if (clamp) {\n\t                                        if (y > 1) {\n\t                                            y = 1;\n\t                                        } else if (y < 0) {\n\t                                            y = 0;\n\t                                        }\n\t                                    }\n\t                                    a[cnt++] = {\n\t                                        x: x,\n\t                                        y: y\n\t                                    };\n\t                                }\n\t                                a.sort(function(a, b) {\n\t                                    return a.x - b.x;\n\t                                });\n\t                                pnt = new EasePoint(1, 1, null);\n\t                                i = points;\n\t                                while (--i > -1) {\n\t                                    obj = a[i];\n\t                                    pnt = new EasePoint(obj.x, obj.y, pnt);\n\t                                }\n\t                                this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);\n\t                            }, true);\n\t                            p = RoughEase.prototype = new Ease();\n\t                            p.constructor = RoughEase;\n\t                            p.getRatio = function(p) {\n\t                                var pnt = this._prev;\n\t                                if (p > pnt.t) {\n\t                                    while (pnt.next && p >= pnt.t) {\n\t                                        pnt = pnt.next;\n\t                                    }\n\t                                    pnt = pnt.prev;\n\t                                } else {\n\t                                    while (pnt.prev && p <= pnt.t) {\n\t                                        pnt = pnt.prev;\n\t                                    }\n\t                                }\n\t                                this._prev = pnt;\n\t                                return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;\n\t                            };\n\t                            p.config = function(vars) {\n\t                                return new RoughEase(vars);\n\t                            };\n\t                            RoughEase.ease = new RoughEase();\n\t                            _wrap(\"Bounce\", _create(\"BounceOut\", function(p) {\n\t                                if (p < 1 / 2.75) {\n\t                                    return 7.5625 * p * p;\n\t                                } else if (p < 2 / 2.75) {\n\t                                    return 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n\t                                } else if (p < 2.5 / 2.75) {\n\t                                    return 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n\t                                }\n\t                                return 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n\t                            }), _create(\"BounceIn\", function(p) {\n\t                                if ((p = 1 - p) < 1 / 2.75) {\n\t                                    return 1 - 7.5625 * p * p;\n\t                                } else if (p < 2 / 2.75) {\n\t                                    return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + .75);\n\t                                } else if (p < 2.5 / 2.75) {\n\t                                    return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + .9375);\n\t                                }\n\t                                return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + .984375);\n\t                            }), _create(\"BounceInOut\", function(p) {\n\t                                var invert = p < .5;\n\t                                if (invert) {\n\t                                    p = 1 - p * 2;\n\t                                } else {\n\t                                    p = p * 2 - 1;\n\t                                }\n\t                                if (p < 1 / 2.75) {\n\t                                    p = 7.5625 * p * p;\n\t                                } else if (p < 2 / 2.75) {\n\t                                    p = 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n\t                                } else if (p < 2.5 / 2.75) {\n\t                                    p = 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n\t                                } else {\n\t                                    p = 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n\t                                }\n\t                                return invert ? (1 - p) * .5 : p * .5 + .5;\n\t                            }));\n\t                            _wrap(\"Circ\", _create(\"CircOut\", function(p) {\n\t                                return Math.sqrt(1 - (p = p - 1) * p);\n\t                            }), _create(\"CircIn\", function(p) {\n\t                                return -(Math.sqrt(1 - p * p) - 1);\n\t                            }), _create(\"CircInOut\", function(p) {\n\t                                return (p *= 2) < 1 ? -.5 * (Math.sqrt(1 - p * p) - 1) : .5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t                            }));\n\t                            _createElastic = function(n, f, def) {\n\t                                var C = _class(\"easing.\" + n, function(amplitude, period) {\n\t                                    this._p1 = amplitude >= 1 ? amplitude : 1;\n\t                                    this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n\t                                    this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t                                    this._p2 = _2PI / this._p2;\n\t                                }, true), p = C.prototype = new Ease();\n\t                                p.constructor = C;\n\t                                p.getRatio = f;\n\t                                p.config = function(amplitude, period) {\n\t                                    return new C(amplitude, period);\n\t                                };\n\t                                return C;\n\t                            };\n\t                            _wrap(\"Elastic\", _createElastic(\"ElasticOut\", function(p) {\n\t                                return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;\n\t                            }, .3), _createElastic(\"ElasticIn\", function(p) {\n\t                                return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));\n\t                            }, .3), _createElastic(\"ElasticInOut\", function(p) {\n\t                                return (p *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * .5 + 1;\n\t                            }, .45));\n\t                            _wrap(\"Expo\", _create(\"ExpoOut\", function(p) {\n\t                                return 1 - Math.pow(2, -10 * p);\n\t                            }), _create(\"ExpoIn\", function(p) {\n\t                                return Math.pow(2, 10 * (p - 1)) - .001;\n\t                            }), _create(\"ExpoInOut\", function(p) {\n\t                                return (p *= 2) < 1 ? .5 * Math.pow(2, 10 * (p - 1)) : .5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t                            }));\n\t                            _wrap(\"Sine\", _create(\"SineOut\", function(p) {\n\t                                return Math.sin(p * _HALF_PI);\n\t                            }), _create(\"SineIn\", function(p) {\n\t                                return -Math.cos(p * _HALF_PI) + 1;\n\t                            }), _create(\"SineInOut\", function(p) {\n\t                                return -.5 * (Math.cos(Math.PI * p) - 1);\n\t                            }));\n\t                            _class(\"easing.EaseLookup\", {\n\t                                find: function(s) {\n\t                                    return Ease.map[s];\n\t                                }\n\t                            }, true);\n\t                            _easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t                            _easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t                            _easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\t                            return Back;\n\t                        }, true);\n\t                    });\n\t                    if (_gsScope._gsDefine) {\n\t                        _gsScope._gsQueue.pop()();\n\t                    }\n\t                    (function(window, moduleName) {\n\t                        \"use strict\";\n\t                        var _exports = {}, _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n\t                        if (_globals.TweenLite) {\n\t                            return;\n\t                        }\n\t                        var _namespace = function(ns) {\n\t                            var a = ns.split(\".\"), p = _globals, i;\n\t                            for (i = 0; i < a.length; i++) {\n\t                                p[a[i]] = p = p[a[i]] || {};\n\t                            }\n\t                            return p;\n\t                        }, gs = _namespace(\"com.greensock\"), _tinyNum = 1e-10, _slice = function(a) {\n\t                            var b = [], l = a.length, i;\n\t                            for (i = 0; i !== l; b.push(a[i++])) {}\n\t                            return b;\n\t                        }, _emptyFunc = function() {}, _isArray = function() {\n\t                            var toString = Object.prototype.toString, array = toString.call([]);\n\t                            return function(obj) {\n\t                                return obj != null && (obj instanceof Array || typeof obj === \"object\" && !!obj.push && toString.call(obj) === array);\n\t                            };\n\t                        }(), a, i, p, _ticker, _tickerActive, _defLookup = {}, Definition = function(ns, dependencies, func, global) {\n\t                            this.sc = _defLookup[ns] ? _defLookup[ns].sc : [];\n\t                            _defLookup[ns] = this;\n\t                            this.gsClass = null;\n\t                            this.func = func;\n\t                            var _classes = [];\n\t                            this.check = function(init) {\n\t                                var i = dependencies.length, missing = i, cur, a, n, cl, hasModule;\n\t                                while (--i > -1) {\n\t                                    if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t                                        _classes[i] = cur.gsClass;\n\t                                        missing--;\n\t                                    } else if (init) {\n\t                                        cur.sc.push(this);\n\t                                    }\n\t                                }\n\t                                if (missing === 0 && func) {\n\t                                    a = (\"com.greensock.\" + ns).split(\".\");\n\t                                    n = a.pop();\n\t                                    cl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\t                                    if (global) {\n\t                                        _globals[n] = cl;\n\t                                        hasModule = typeof module !== \"undefined\" && module.exports;\n\t                                        if (!hasModule && \"function\" === \"function\" && __webpack_require__(6)) {\n\t                                            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                                                return cl;\n\t                                            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t                                        } else if (hasModule) {\n\t                                            if (ns === moduleName) {\n\t                                                module.exports = _exports[moduleName] = cl;\n\t                                                for (i in _exports) {\n\t                                                    cl[i] = _exports[i];\n\t                                                }\n\t                                            } else if (_exports[moduleName]) {\n\t                                                _exports[moduleName][n] = cl;\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                    for (i = 0; i < this.sc.length; i++) {\n\t                                        this.sc[i].check();\n\t                                    }\n\t                                }\n\t                            };\n\t                            this.check(true);\n\t                        }, _gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t                            return new Definition(ns, dependencies, func, global);\n\t                        }, _class = gs._class = function(ns, func, global) {\n\t                            func = func || function() {};\n\t                            _gsDefine(ns, [], function() {\n\t                                return func;\n\t                            }, global);\n\t                            return func;\n\t                        };\n\t                        _gsDefine.globals = _globals;\n\t                        var _baseParams = [ 0, 0, 1, 1 ], _blankArray = [], Ease = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t                            this._func = func;\n\t                            this._type = type || 0;\n\t                            this._power = power || 0;\n\t                            this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t                        }, true), _easeMap = Ease.map = {}, _easeReg = Ease.register = function(ease, names, types, create) {\n\t                            var na = names.split(\",\"), i = na.length, ta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"), e, name, j, type;\n\t                            while (--i > -1) {\n\t                                name = na[i];\n\t                                e = create ? _class(\"easing.\" + name, null, true) : gs.easing[name] || {};\n\t                                j = ta.length;\n\t                                while (--j > -1) {\n\t                                    type = ta[j];\n\t                                    _easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t                                }\n\t                            }\n\t                        };\n\t                        p = Ease.prototype;\n\t                        p._calcEnd = false;\n\t                        p.getRatio = function(p) {\n\t                            if (this._func) {\n\t                                this._params[0] = p;\n\t                                return this._func.apply(null, this._params);\n\t                            }\n\t                            var t = this._type, pw = this._power, r = t === 1 ? 1 - p : t === 2 ? p : p < .5 ? p * 2 : (1 - p) * 2;\n\t                            if (pw === 1) {\n\t                                r *= r;\n\t                            } else if (pw === 2) {\n\t                                r *= r * r;\n\t                            } else if (pw === 3) {\n\t                                r *= r * r * r;\n\t                            } else if (pw === 4) {\n\t                                r *= r * r * r * r;\n\t                            }\n\t                            return t === 1 ? 1 - r : t === 2 ? r : p < .5 ? r / 2 : 1 - r / 2;\n\t                        };\n\t                        a = [ \"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\" ];\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            p = a[i] + \",Power\" + i;\n\t                            _easeReg(new Ease(null, null, 1, i), p, \"easeOut\", true);\n\t                            _easeReg(new Ease(null, null, 2, i), p, \"easeIn\" + (i === 0 ? \",easeNone\" : \"\"));\n\t                            _easeReg(new Ease(null, null, 3, i), p, \"easeInOut\");\n\t                        }\n\t                        _easeMap.linear = gs.easing.Linear.easeIn;\n\t                        _easeMap.swing = gs.easing.Quad.easeInOut;\n\t                        var EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t                            this._listeners = {};\n\t                            this._eventTarget = target || this;\n\t                        });\n\t                        p = EventDispatcher.prototype;\n\t                        p.addEventListener = function(type, callback, scope, useParam, priority) {\n\t                            priority = priority || 0;\n\t                            var list = this._listeners[type], index = 0, listener, i;\n\t                            if (this === _ticker && !_tickerActive) {\n\t                                _ticker.wake();\n\t                            }\n\t                            if (list == null) {\n\t                                this._listeners[type] = list = [];\n\t                            }\n\t                            i = list.length;\n\t                            while (--i > -1) {\n\t                                listener = list[i];\n\t                                if (listener.c === callback && listener.s === scope) {\n\t                                    list.splice(i, 1);\n\t                                } else if (index === 0 && listener.pr < priority) {\n\t                                    index = i + 1;\n\t                                }\n\t                            }\n\t                            list.splice(index, 0, {\n\t                                c: callback,\n\t                                s: scope,\n\t                                up: useParam,\n\t                                pr: priority\n\t                            });\n\t                        };\n\t                        p.removeEventListener = function(type, callback) {\n\t                            var list = this._listeners[type], i;\n\t                            if (list) {\n\t                                i = list.length;\n\t                                while (--i > -1) {\n\t                                    if (list[i].c === callback) {\n\t                                        list.splice(i, 1);\n\t                                        return;\n\t                                    }\n\t                                }\n\t                            }\n\t                        };\n\t                        p.dispatchEvent = function(type) {\n\t                            var list = this._listeners[type], i, t, listener;\n\t                            if (list) {\n\t                                i = list.length;\n\t                                t = this._eventTarget;\n\t                                while (--i > -1) {\n\t                                    listener = list[i];\n\t                                    if (listener) {\n\t                                        if (listener.up) {\n\t                                            listener.c.call(listener.s || t, {\n\t                                                type: type,\n\t                                                target: t\n\t                                            });\n\t                                        } else {\n\t                                            listener.c.call(listener.s || t);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        };\n\t                        var _reqAnimFrame = window.requestAnimationFrame, _cancelAnimFrame = window.cancelAnimationFrame, _getTime = Date.now || function() {\n\t                            return new Date().getTime();\n\t                        }, _lastUpdate = _getTime();\n\t                        a = [ \"ms\", \"moz\", \"webkit\", \"o\" ];\n\t                        i = a.length;\n\t                        while (--i > -1 && !_reqAnimFrame) {\n\t                            _reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t                            _cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t                        }\n\t                        _class(\"Ticker\", function(fps, useRAF) {\n\t                            var _self = this, _startTime = _getTime(), _useRAF = useRAF !== false && _reqAnimFrame ? \"auto\" : false, _lagThreshold = 500, _adjustedLag = 33, _tickWord = \"tick\", _fps, _req, _id, _gap, _nextTime, _tick = function(manual) {\n\t                                var elapsed = _getTime() - _lastUpdate, overlap, dispatch;\n\t                                if (elapsed > _lagThreshold) {\n\t                                    _startTime += elapsed - _adjustedLag;\n\t                                }\n\t                                _lastUpdate += elapsed;\n\t                                _self.time = (_lastUpdate - _startTime) / 1e3;\n\t                                overlap = _self.time - _nextTime;\n\t                                if (!_fps || overlap > 0 || manual === true) {\n\t                                    _self.frame++;\n\t                                    _nextTime += overlap + (overlap >= _gap ? .004 : _gap - overlap);\n\t                                    dispatch = true;\n\t                                }\n\t                                if (manual !== true) {\n\t                                    _id = _req(_tick);\n\t                                }\n\t                                if (dispatch) {\n\t                                    _self.dispatchEvent(_tickWord);\n\t                                }\n\t                            };\n\t                            EventDispatcher.call(_self);\n\t                            _self.time = _self.frame = 0;\n\t                            _self.tick = function() {\n\t                                _tick(true);\n\t                            };\n\t                            _self.lagSmoothing = function(threshold, adjustedLag) {\n\t                                _lagThreshold = threshold || 1 / _tinyNum;\n\t                                _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t                            };\n\t                            _self.sleep = function() {\n\t                                if (_id == null) {\n\t                                    return;\n\t                                }\n\t                                if (!_useRAF || !_cancelAnimFrame) {\n\t                                    clearTimeout(_id);\n\t                                } else {\n\t                                    _cancelAnimFrame(_id);\n\t                                }\n\t                                _req = _emptyFunc;\n\t                                _id = null;\n\t                                if (_self === _ticker) {\n\t                                    _tickerActive = false;\n\t                                }\n\t                            };\n\t                            _self.wake = function(seamless) {\n\t                                if (_id !== null) {\n\t                                    _self.sleep();\n\t                                } else if (seamless) {\n\t                                    _startTime += -_lastUpdate + (_lastUpdate = _getTime());\n\t                                } else if (_self.frame > 10) {\n\t                                    _lastUpdate = _getTime() - _lagThreshold + 5;\n\t                                }\n\t                                _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function(f) {\n\t                                    return setTimeout(f, (_nextTime - _self.time) * 1e3 + 1 | 0);\n\t                                } : _reqAnimFrame;\n\t                                if (_self === _ticker) {\n\t                                    _tickerActive = true;\n\t                                }\n\t                                _tick(2);\n\t                            };\n\t                            _self.fps = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return _fps;\n\t                                }\n\t                                _fps = value;\n\t                                _gap = 1 / (_fps || 60);\n\t                                _nextTime = this.time + _gap;\n\t                                _self.wake();\n\t                            };\n\t                            _self.useRAF = function(value) {\n\t                                if (!arguments.length) {\n\t                                    return _useRAF;\n\t                                }\n\t                                _self.sleep();\n\t                                _useRAF = value;\n\t                                _self.fps(_fps);\n\t                            };\n\t                            _self.fps(fps);\n\t                            setTimeout(function() {\n\t                                if (_useRAF === \"auto\" && _self.frame < 5 && document.visibilityState !== \"hidden\") {\n\t                                    _self.useRAF(false);\n\t                                }\n\t                            }, 1500);\n\t                        });\n\t                        p = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t                        p.constructor = gs.Ticker;\n\t                        var Animation = _class(\"core.Animation\", function(duration, vars) {\n\t                            this.vars = vars = vars || {};\n\t                            this._duration = this._totalDuration = duration || 0;\n\t                            this._delay = Number(vars.delay) || 0;\n\t                            this._timeScale = 1;\n\t                            this._active = vars.immediateRender === true;\n\t                            this.data = vars.data;\n\t                            this._reversed = vars.reversed === true;\n\t                            if (!_rootTimeline) {\n\t                                return;\n\t                            }\n\t                            if (!_tickerActive) {\n\t                                _ticker.wake();\n\t                            }\n\t                            var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t                            tl.add(this, tl._time);\n\t                            if (this.vars.paused) {\n\t                                this.paused(true);\n\t                            }\n\t                        });\n\t                        _ticker = Animation.ticker = new gs.Ticker();\n\t                        p = Animation.prototype;\n\t                        p._dirty = p._gc = p._initted = p._paused = false;\n\t                        p._totalTime = p._time = 0;\n\t                        p._rawPrevTime = -1;\n\t                        p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t                        p._paused = false;\n\t                        var _checkTimeout = function() {\n\t                            if (_tickerActive && _getTime() - _lastUpdate > 2e3) {\n\t                                _ticker.wake();\n\t                            }\n\t                            setTimeout(_checkTimeout, 2e3);\n\t                        };\n\t                        _checkTimeout();\n\t                        p.play = function(from, suppressEvents) {\n\t                            if (from != null) {\n\t                                this.seek(from, suppressEvents);\n\t                            }\n\t                            return this.reversed(false).paused(false);\n\t                        };\n\t                        p.pause = function(atTime, suppressEvents) {\n\t                            if (atTime != null) {\n\t                                this.seek(atTime, suppressEvents);\n\t                            }\n\t                            return this.paused(true);\n\t                        };\n\t                        p.resume = function(from, suppressEvents) {\n\t                            if (from != null) {\n\t                                this.seek(from, suppressEvents);\n\t                            }\n\t                            return this.paused(false);\n\t                        };\n\t                        p.seek = function(time, suppressEvents) {\n\t                            return this.totalTime(Number(time), suppressEvents !== false);\n\t                        };\n\t                        p.restart = function(includeDelay, suppressEvents) {\n\t                            return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);\n\t                        };\n\t                        p.reverse = function(from, suppressEvents) {\n\t                            if (from != null) {\n\t                                this.seek(from || this.totalDuration(), suppressEvents);\n\t                            }\n\t                            return this.reversed(true).paused(false);\n\t                        };\n\t                        p.render = function(time, suppressEvents, force) {};\n\t                        p.invalidate = function() {\n\t                            this._time = this._totalTime = 0;\n\t                            this._initted = this._gc = false;\n\t                            this._rawPrevTime = -1;\n\t                            if (this._gc || !this.timeline) {\n\t                                this._enabled(true);\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.isActive = function() {\n\t                            var tl = this._timeline, startTime = this._startTime, rawTime;\n\t                            return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale;\n\t                        };\n\t                        p._enabled = function(enabled, ignoreTimeline) {\n\t                            if (!_tickerActive) {\n\t                                _ticker.wake();\n\t                            }\n\t                            this._gc = !enabled;\n\t                            this._active = this.isActive();\n\t                            if (ignoreTimeline !== true) {\n\t                                if (enabled && !this.timeline) {\n\t                                    this._timeline.add(this, this._startTime - this._delay);\n\t                                } else if (!enabled && this.timeline) {\n\t                                    this._timeline._remove(this, true);\n\t                                }\n\t                            }\n\t                            return false;\n\t                        };\n\t                        p._kill = function(vars, target) {\n\t                            return this._enabled(false, false);\n\t                        };\n\t                        p.kill = function(vars, target) {\n\t                            this._kill(vars, target);\n\t                            return this;\n\t                        };\n\t                        p._uncache = function(includeSelf) {\n\t                            var tween = includeSelf ? this : this.timeline;\n\t                            while (tween) {\n\t                                tween._dirty = true;\n\t                                tween = tween.timeline;\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p._swapSelfInParams = function(params) {\n\t                            var i = params.length, copy = params.concat();\n\t                            while (--i > -1) {\n\t                                if (params[i] === \"{self}\") {\n\t                                    copy[i] = this;\n\t                                }\n\t                            }\n\t                            return copy;\n\t                        };\n\t                        p._callback = function(type) {\n\t                            var v = this.vars;\n\t                            v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n\t                        };\n\t                        p.eventCallback = function(type, callback, params, scope) {\n\t                            if ((type || \"\").substr(0, 2) === \"on\") {\n\t                                var v = this.vars;\n\t                                if (arguments.length === 1) {\n\t                                    return v[type];\n\t                                }\n\t                                if (callback == null) {\n\t                                    delete v[type];\n\t                                } else {\n\t                                    v[type] = callback;\n\t                                    v[type + \"Params\"] = _isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1 ? this._swapSelfInParams(params) : params;\n\t                                    v[type + \"Scope\"] = scope;\n\t                                }\n\t                                if (type === \"onUpdate\") {\n\t                                    this._onUpdate = callback;\n\t                                }\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.delay = function(value) {\n\t                            if (!arguments.length) {\n\t                                return this._delay;\n\t                            }\n\t                            if (this._timeline.smoothChildTiming) {\n\t                                this.startTime(this._startTime + value - this._delay);\n\t                            }\n\t                            this._delay = value;\n\t                            return this;\n\t                        };\n\t                        p.duration = function(value) {\n\t                            if (!arguments.length) {\n\t                                this._dirty = false;\n\t                                return this._duration;\n\t                            }\n\t                            this._duration = this._totalDuration = value;\n\t                            this._uncache(true);\n\t                            if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t                                this.totalTime(this._totalTime * (value / this._duration), true);\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.totalDuration = function(value) {\n\t                            this._dirty = false;\n\t                            return !arguments.length ? this._totalDuration : this.duration(value);\n\t                        };\n\t                        p.time = function(value, suppressEvents) {\n\t                            if (!arguments.length) {\n\t                                return this._time;\n\t                            }\n\t                            if (this._dirty) {\n\t                                this.totalDuration();\n\t                            }\n\t                            return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);\n\t                        };\n\t                        p.totalTime = function(time, suppressEvents, uncapped) {\n\t                            if (!_tickerActive) {\n\t                                _ticker.wake();\n\t                            }\n\t                            if (!arguments.length) {\n\t                                return this._totalTime;\n\t                            }\n\t                            if (this._timeline) {\n\t                                if (time < 0 && !uncapped) {\n\t                                    time += this.totalDuration();\n\t                                }\n\t                                if (this._timeline.smoothChildTiming) {\n\t                                    if (this._dirty) {\n\t                                        this.totalDuration();\n\t                                    }\n\t                                    var totalDuration = this._totalDuration, tl = this._timeline;\n\t                                    if (time > totalDuration && !uncapped) {\n\t                                        time = totalDuration;\n\t                                    }\n\t                                    this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;\n\t                                    if (!tl._dirty) {\n\t                                        this._uncache(false);\n\t                                    }\n\t                                    if (tl._timeline) {\n\t                                        while (tl._timeline) {\n\t                                            if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t                                                tl.totalTime(tl._totalTime, true);\n\t                                            }\n\t                                            tl = tl._timeline;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                if (this._gc) {\n\t                                    this._enabled(true, false);\n\t                                }\n\t                                if (this._totalTime !== time || this._duration === 0) {\n\t                                    if (_lazyTweens.length) {\n\t                                        _lazyRender();\n\t                                    }\n\t                                    this.render(time, suppressEvents, false);\n\t                                    if (_lazyTweens.length) {\n\t                                        _lazyRender();\n\t                                    }\n\t                                }\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.progress = p.totalProgress = function(value, suppressEvents) {\n\t                            var duration = this.duration();\n\t                            return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);\n\t                        };\n\t                        p.startTime = function(value) {\n\t                            if (!arguments.length) {\n\t                                return this._startTime;\n\t                            }\n\t                            if (value !== this._startTime) {\n\t                                this._startTime = value;\n\t                                if (this.timeline) if (this.timeline._sortChildren) {\n\t                                    this.timeline.add(this, value - this._delay);\n\t                                }\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.endTime = function(includeRepeats) {\n\t                            return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;\n\t                        };\n\t                        p.timeScale = function(value) {\n\t                            if (!arguments.length) {\n\t                                return this._timeScale;\n\t                            }\n\t                            value = value || _tinyNum;\n\t                            if (this._timeline && this._timeline.smoothChildTiming) {\n\t                                var pauseTime = this._pauseTime, t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();\n\t                                this._startTime = t - (t - this._startTime) * this._timeScale / value;\n\t                            }\n\t                            this._timeScale = value;\n\t                            return this._uncache(false);\n\t                        };\n\t                        p.reversed = function(value) {\n\t                            if (!arguments.length) {\n\t                                return this._reversed;\n\t                            }\n\t                            if (value != this._reversed) {\n\t                                this._reversed = value;\n\t                                this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.paused = function(value) {\n\t                            if (!arguments.length) {\n\t                                return this._paused;\n\t                            }\n\t                            var tl = this._timeline, raw, elapsed;\n\t                            if (value != this._paused) if (tl) {\n\t                                if (!_tickerActive && !value) {\n\t                                    _ticker.wake();\n\t                                }\n\t                                raw = tl.rawTime();\n\t                                elapsed = raw - this._pauseTime;\n\t                                if (!value && tl.smoothChildTiming) {\n\t                                    this._startTime += elapsed;\n\t                                    this._uncache(false);\n\t                                }\n\t                                this._pauseTime = value ? raw : null;\n\t                                this._paused = value;\n\t                                this._active = this.isActive();\n\t                                if (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t                                    raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n\t                                    this.render(raw, raw === this._totalTime, true);\n\t                                }\n\t                            }\n\t                            if (this._gc && !value) {\n\t                                this._enabled(true, false);\n\t                            }\n\t                            return this;\n\t                        };\n\t                        var SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t                            Animation.call(this, 0, vars);\n\t                            this.autoRemoveChildren = this.smoothChildTiming = true;\n\t                        });\n\t                        p = SimpleTimeline.prototype = new Animation();\n\t                        p.constructor = SimpleTimeline;\n\t                        p.kill()._gc = false;\n\t                        p._first = p._last = p._recent = null;\n\t                        p._sortChildren = false;\n\t                        p.add = p.insert = function(child, position, align, stagger) {\n\t                            var prevTween, st;\n\t                            child._startTime = Number(position || 0) + child._delay;\n\t                            if (child._paused) if (this !== child._timeline) {\n\t                                child._pauseTime = child._startTime + (this.rawTime() - child._startTime) / child._timeScale;\n\t                            }\n\t                            if (child.timeline) {\n\t                                child.timeline._remove(child, true);\n\t                            }\n\t                            child.timeline = child._timeline = this;\n\t                            if (child._gc) {\n\t                                child._enabled(true, true);\n\t                            }\n\t                            prevTween = this._last;\n\t                            if (this._sortChildren) {\n\t                                st = child._startTime;\n\t                                while (prevTween && prevTween._startTime > st) {\n\t                                    prevTween = prevTween._prev;\n\t                                }\n\t                            }\n\t                            if (prevTween) {\n\t                                child._next = prevTween._next;\n\t                                prevTween._next = child;\n\t                            } else {\n\t                                child._next = this._first;\n\t                                this._first = child;\n\t                            }\n\t                            if (child._next) {\n\t                                child._next._prev = child;\n\t                            } else {\n\t                                this._last = child;\n\t                            }\n\t                            child._prev = prevTween;\n\t                            this._recent = child;\n\t                            if (this._timeline) {\n\t                                this._uncache(true);\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p._remove = function(tween, skipDisable) {\n\t                            if (tween.timeline === this) {\n\t                                if (!skipDisable) {\n\t                                    tween._enabled(false, true);\n\t                                }\n\t                                if (tween._prev) {\n\t                                    tween._prev._next = tween._next;\n\t                                } else if (this._first === tween) {\n\t                                    this._first = tween._next;\n\t                                }\n\t                                if (tween._next) {\n\t                                    tween._next._prev = tween._prev;\n\t                                } else if (this._last === tween) {\n\t                                    this._last = tween._prev;\n\t                                }\n\t                                tween._next = tween._prev = tween.timeline = null;\n\t                                if (tween === this._recent) {\n\t                                    this._recent = this._last;\n\t                                }\n\t                                if (this._timeline) {\n\t                                    this._uncache(true);\n\t                                }\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p.render = function(time, suppressEvents, force) {\n\t                            var tween = this._first, next;\n\t                            this._totalTime = this._time = this._rawPrevTime = time;\n\t                            while (tween) {\n\t                                next = tween._next;\n\t                                if (tween._active || time >= tween._startTime && !tween._paused) {\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        };\n\t                        p.rawTime = function() {\n\t                            if (!_tickerActive) {\n\t                                _ticker.wake();\n\t                            }\n\t                            return this._totalTime;\n\t                        };\n\t                        var TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t                            Animation.call(this, duration, vars);\n\t                            this.render = TweenLite.prototype.render;\n\t                            if (target == null) {\n\t                                throw \"Cannot tween a null target.\";\n\t                            }\n\t                            this.target = target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n\t                            var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType), overwrite = this.vars.overwrite, i, targ, targets;\n\t                            this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === \"number\" ? overwrite >> 0 : _overwriteLookup[overwrite];\n\t                            if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== \"number\") {\n\t                                this._targets = targets = _slice(target);\n\t                                this._propLookup = [];\n\t                                this._siblings = [];\n\t                                for (i = 0; i < targets.length; i++) {\n\t                                    targ = targets[i];\n\t                                    if (!targ) {\n\t                                        targets.splice(i--, 1);\n\t                                        continue;\n\t                                    } else if (typeof targ === \"string\") {\n\t                                        targ = targets[i--] = TweenLite.selector(targ);\n\t                                        if (typeof targ === \"string\") {\n\t                                            targets.splice(i + 1, 1);\n\t                                        }\n\t                                        continue;\n\t                                    } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {\n\t                                        targets.splice(i--, 1);\n\t                                        this._targets = targets = targets.concat(_slice(targ));\n\t                                        continue;\n\t                                    }\n\t                                    this._siblings[i] = _register(targ, this, false);\n\t                                    if (overwrite === 1) if (this._siblings[i].length > 1) {\n\t                                        _applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                this._propLookup = {};\n\t                                this._siblings = _register(target, this, false);\n\t                                if (overwrite === 1) if (this._siblings.length > 1) {\n\t                                    _applyOverwrite(target, this, null, 1, this._siblings);\n\t                                }\n\t                            }\n\t                            if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {\n\t                                this._time = -_tinyNum;\n\t                                this.render(Math.min(0, -this._delay));\n\t                            }\n\t                        }, true), _isSelector = function(v) {\n\t                            return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType);\n\t                        }, _autoCSS = function(vars, target) {\n\t                            var css = {}, p;\n\t                            for (p in vars) {\n\t                                if (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {\n\t                                    css[p] = vars[p];\n\t                                    delete vars[p];\n\t                                }\n\t                            }\n\t                            vars.css = css;\n\t                        };\n\t                        p = TweenLite.prototype = new Animation();\n\t                        p.constructor = TweenLite;\n\t                        p.kill()._gc = false;\n\t                        p.ratio = 0;\n\t                        p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t                        p._notifyPluginsOfEnabled = p._lazy = false;\n\t                        TweenLite.version = \"1.18.5\";\n\t                        TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t                        TweenLite.defaultOverwrite = \"auto\";\n\t                        TweenLite.ticker = _ticker;\n\t                        TweenLite.autoSleep = 120;\n\t                        TweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t                            _ticker.lagSmoothing(threshold, adjustedLag);\n\t                        };\n\t                        TweenLite.selector = window.$ || window.jQuery || function(e) {\n\t                            var selector = window.$ || window.jQuery;\n\t                            if (selector) {\n\t                                TweenLite.selector = selector;\n\t                                return selector(e);\n\t                            }\n\t                            return typeof document === \"undefined\" ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(e.charAt(0) === \"#\" ? e.substr(1) : e);\n\t                        };\n\t                        var _lazyTweens = [], _lazyLookup = {}, _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi, _setRatio = function(v) {\n\t                            var pt = this._firstPT, min = 1e-6, val;\n\t                            while (pt) {\n\t                                val = !pt.blob ? pt.c * v + pt.s : v ? this.join(\"\") : this.start;\n\t                                if (pt.r) {\n\t                                    val = Math.round(val);\n\t                                } else if (val < min) if (val > -min) {\n\t                                    val = 0;\n\t                                }\n\t                                if (!pt.f) {\n\t                                    pt.t[pt.p] = val;\n\t                                } else if (pt.fp) {\n\t                                    pt.t[pt.p](pt.fp, val);\n\t                                } else {\n\t                                    pt.t[pt.p](val);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        }, _blobDif = function(start, end, filter, pt) {\n\t                            var a = [ start, end ], charIndex = 0, s = \"\", color = 0, startNums, endNums, num, i, l, nonNumbers, currentNum;\n\t                            a.start = start;\n\t                            if (filter) {\n\t                                filter(a);\n\t                                start = a[0];\n\t                                end = a[1];\n\t                            }\n\t                            a.length = 0;\n\t                            startNums = start.match(_numbersExp) || [];\n\t                            endNums = end.match(_numbersExp) || [];\n\t                            if (pt) {\n\t                                pt._next = null;\n\t                                pt.blob = 1;\n\t                                a._firstPT = pt;\n\t                            }\n\t                            l = endNums.length;\n\t                            for (i = 0; i < l; i++) {\n\t                                currentNum = endNums[i];\n\t                                nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);\n\t                                s += nonNumbers || !i ? nonNumbers : \",\";\n\t                                charIndex += nonNumbers.length;\n\t                                if (color) {\n\t                                    color = (color + 1) % 5;\n\t                                } else if (nonNumbers.substr(-5) === \"rgba(\") {\n\t                                    color = 1;\n\t                                }\n\t                                if (currentNum === startNums[i] || startNums.length <= i) {\n\t                                    s += currentNum;\n\t                                } else {\n\t                                    if (s) {\n\t                                        a.push(s);\n\t                                        s = \"\";\n\t                                    }\n\t                                    num = parseFloat(startNums[i]);\n\t                                    a.push(num);\n\t                                    a._firstPT = {\n\t                                        _next: a._firstPT,\n\t                                        t: a,\n\t                                        p: a.length - 1,\n\t                                        s: num,\n\t                                        c: (currentNum.charAt(1) === \"=\" ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,\n\t                                        f: 0,\n\t                                        r: color && color < 4\n\t                                    };\n\t                                }\n\t                                charIndex += currentNum.length;\n\t                            }\n\t                            s += end.substr(charIndex);\n\t                            if (s) {\n\t                                a.push(s);\n\t                            }\n\t                            a.setRatio = _setRatio;\n\t                            return a;\n\t                        }, _addPropTween = function(target, prop, start, end, overwriteProp, round, funcParam, stringFilter) {\n\t                            var s = start === \"get\" ? target[prop] : start, type = typeof target[prop], isRelative = typeof end === \"string\" && end.charAt(1) === \"=\", pt = {\n\t                                t: target,\n\t                                p: prop,\n\t                                s: s,\n\t                                f: type === \"function\",\n\t                                pg: 0,\n\t                                n: overwriteProp || prop,\n\t                                r: round,\n\t                                pr: 0,\n\t                                c: isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0\n\t                            }, blob, getterName;\n\t                            if (type !== \"number\") {\n\t                                if (type === \"function\" && start === \"get\") {\n\t                                    getterName = prop.indexOf(\"set\") || typeof target[\"get\" + prop.substr(3)] !== \"function\" ? prop : \"get\" + prop.substr(3);\n\t                                    pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();\n\t                                }\n\t                                if (typeof s === \"string\" && (funcParam || isNaN(s))) {\n\t                                    pt.fp = funcParam;\n\t                                    blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);\n\t                                    pt = {\n\t                                        t: blob,\n\t                                        p: \"setRatio\",\n\t                                        s: 0,\n\t                                        c: 1,\n\t                                        f: 2,\n\t                                        pg: 0,\n\t                                        n: overwriteProp || prop,\n\t                                        pr: 0\n\t                                    };\n\t                                } else if (!isRelative) {\n\t                                    pt.s = parseFloat(s);\n\t                                    pt.c = parseFloat(end) - pt.s || 0;\n\t                                }\n\t                            }\n\t                            if (pt.c) {\n\t                                if (pt._next = this._firstPT) {\n\t                                    pt._next._prev = pt;\n\t                                }\n\t                                this._firstPT = pt;\n\t                                return pt;\n\t                            }\n\t                        }, _internals = TweenLite._internals = {\n\t                            isArray: _isArray,\n\t                            isSelector: _isSelector,\n\t                            lazyTweens: _lazyTweens,\n\t                            blobDif: _blobDif\n\t                        }, _plugins = TweenLite._plugins = {}, _tweenLookup = _internals.tweenLookup = {}, _tweenLookupNum = 0, _reservedProps = _internals.reservedProps = {\n\t                            ease: 1,\n\t                            delay: 1,\n\t                            overwrite: 1,\n\t                            onComplete: 1,\n\t                            onCompleteParams: 1,\n\t                            onCompleteScope: 1,\n\t                            useFrames: 1,\n\t                            runBackwards: 1,\n\t                            startAt: 1,\n\t                            onUpdate: 1,\n\t                            onUpdateParams: 1,\n\t                            onUpdateScope: 1,\n\t                            onStart: 1,\n\t                            onStartParams: 1,\n\t                            onStartScope: 1,\n\t                            onReverseComplete: 1,\n\t                            onReverseCompleteParams: 1,\n\t                            onReverseCompleteScope: 1,\n\t                            onRepeat: 1,\n\t                            onRepeatParams: 1,\n\t                            onRepeatScope: 1,\n\t                            easeParams: 1,\n\t                            yoyo: 1,\n\t                            immediateRender: 1,\n\t                            repeat: 1,\n\t                            repeatDelay: 1,\n\t                            data: 1,\n\t                            paused: 1,\n\t                            reversed: 1,\n\t                            autoCSS: 1,\n\t                            lazy: 1,\n\t                            onOverwrite: 1,\n\t                            callbackScope: 1,\n\t                            stringFilter: 1,\n\t                            id: 1\n\t                        }, _overwriteLookup = {\n\t                            none: 0,\n\t                            all: 1,\n\t                            auto: 2,\n\t                            concurrent: 3,\n\t                            allOnStart: 4,\n\t                            preexisting: 5,\n\t                            \"true\": 1,\n\t                            \"false\": 0\n\t                        }, _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(), _rootTimeline = Animation._rootTimeline = new SimpleTimeline(), _nextGCFrame = 30, _lazyRender = _internals.lazyRender = function() {\n\t                            var i = _lazyTweens.length, tween;\n\t                            _lazyLookup = {};\n\t                            while (--i > -1) {\n\t                                tween = _lazyTweens[i];\n\t                                if (tween && tween._lazy !== false) {\n\t                                    tween.render(tween._lazy[0], tween._lazy[1], true);\n\t                                    tween._lazy = false;\n\t                                }\n\t                            }\n\t                            _lazyTweens.length = 0;\n\t                        };\n\t                        _rootTimeline._startTime = _ticker.time;\n\t                        _rootFramesTimeline._startTime = _ticker.frame;\n\t                        _rootTimeline._active = _rootFramesTimeline._active = true;\n\t                        setTimeout(_lazyRender, 1);\n\t                        Animation._updateRoot = TweenLite.render = function() {\n\t                            var i, a, p;\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t                            _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            if (_ticker.frame >= _nextGCFrame) {\n\t                                _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n\t                                for (p in _tweenLookup) {\n\t                                    a = _tweenLookup[p].tweens;\n\t                                    i = a.length;\n\t                                    while (--i > -1) {\n\t                                        if (a[i]._gc) {\n\t                                            a.splice(i, 1);\n\t                                        }\n\t                                    }\n\t                                    if (a.length === 0) {\n\t                                        delete _tweenLookup[p];\n\t                                    }\n\t                                }\n\t                                p = _rootTimeline._first;\n\t                                if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t                                    while (p && p._paused) {\n\t                                        p = p._next;\n\t                                    }\n\t                                    if (!p) {\n\t                                        _ticker.sleep();\n\t                                    }\n\t                                }\n\t                            }\n\t                        };\n\t                        _ticker.addEventListener(\"tick\", Animation._updateRoot);\n\t                        var _register = function(target, tween, scrub) {\n\t                            var id = target._gsTweenID, a, i;\n\t                            if (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + _tweenLookupNum++)]) {\n\t                                _tweenLookup[id] = {\n\t                                    target: target,\n\t                                    tweens: []\n\t                                };\n\t                            }\n\t                            if (tween) {\n\t                                a = _tweenLookup[id].tweens;\n\t                                a[i = a.length] = tween;\n\t                                if (scrub) {\n\t                                    while (--i > -1) {\n\t                                        if (a[i] === tween) {\n\t                                            a.splice(i, 1);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                            return _tweenLookup[id].tweens;\n\t                        }, _onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n\t                            var func = overwrittenTween.vars.onOverwrite, r1, r2;\n\t                            if (func) {\n\t                                r1 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t                            }\n\t                            func = TweenLite.onOverwrite;\n\t                            if (func) {\n\t                                r2 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t                            }\n\t                            return r1 !== false && r2 !== false;\n\t                        }, _applyOverwrite = function(target, tween, props, mode, siblings) {\n\t                            var i, changed, curTween, l;\n\t                            if (mode === 1 || mode >= 4) {\n\t                                l = siblings.length;\n\t                                for (i = 0; i < l; i++) {\n\t                                    if ((curTween = siblings[i]) !== tween) {\n\t                                        if (!curTween._gc) {\n\t                                            if (curTween._kill(null, target, tween)) {\n\t                                                changed = true;\n\t                                            }\n\t                                        }\n\t                                    } else if (mode === 5) {\n\t                                        break;\n\t                                    }\n\t                                }\n\t                                return changed;\n\t                            }\n\t                            var startTime = tween._startTime + _tinyNum, overlaps = [], oCount = 0, zeroDur = tween._duration === 0, globalStart;\n\t                            i = siblings.length;\n\t                            while (--i > -1) {\n\t                                if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {} else if (curTween._timeline !== tween._timeline) {\n\t                                    globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t                                    if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t                                        overlaps[oCount++] = curTween;\n\t                                    }\n\t                                } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 2e-10)) {\n\t                                    overlaps[oCount++] = curTween;\n\t                                }\n\t                            }\n\t                            i = oCount;\n\t                            while (--i > -1) {\n\t                                curTween = overlaps[i];\n\t                                if (mode === 2) if (curTween._kill(props, target, tween)) {\n\t                                    changed = true;\n\t                                }\n\t                                if (mode !== 2 || !curTween._firstPT && curTween._initted) {\n\t                                    if (mode !== 2 && !_onOverwrite(curTween, tween)) {\n\t                                        continue;\n\t                                    }\n\t                                    if (curTween._enabled(false, false)) {\n\t                                        changed = true;\n\t                                    }\n\t                                }\n\t                            }\n\t                            return changed;\n\t                        }, _checkOverlap = function(tween, reference, zeroDur) {\n\t                            var tl = tween._timeline, ts = tl._timeScale, t = tween._startTime;\n\t                            while (tl._timeline) {\n\t                                t += tl._startTime;\n\t                                ts *= tl._timeScale;\n\t                                if (tl._paused) {\n\t                                    return -100;\n\t                                }\n\t                                tl = tl._timeline;\n\t                            }\n\t                            t /= ts;\n\t                            return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;\n\t                        };\n\t                        p._init = function() {\n\t                            var v = this.vars, op = this._overwrittenProps, dur = this._duration, immediate = !!v.immediateRender, ease = v.ease, i, initPlugins, pt, p, startVars;\n\t                            if (v.startAt) {\n\t                                if (this._startAt) {\n\t                                    this._startAt.render(-1, true);\n\t                                    this._startAt.kill();\n\t                                }\n\t                                startVars = {};\n\t                                for (p in v.startAt) {\n\t                                    startVars[p] = v.startAt[p];\n\t                                }\n\t                                startVars.overwrite = false;\n\t                                startVars.immediateRender = true;\n\t                                startVars.lazy = immediate && v.lazy !== false;\n\t                                startVars.startAt = startVars.delay = null;\n\t                                this._startAt = TweenLite.to(this.target, 0, startVars);\n\t                                if (immediate) {\n\t                                    if (this._time > 0) {\n\t                                        this._startAt = null;\n\t                                    } else if (dur !== 0) {\n\t                                        return;\n\t                                    }\n\t                                }\n\t                            } else if (v.runBackwards && dur !== 0) {\n\t                                if (this._startAt) {\n\t                                    this._startAt.render(-1, true);\n\t                                    this._startAt.kill();\n\t                                    this._startAt = null;\n\t                                } else {\n\t                                    if (this._time !== 0) {\n\t                                        immediate = false;\n\t                                    }\n\t                                    pt = {};\n\t                                    for (p in v) {\n\t                                        if (!_reservedProps[p] || p === \"autoCSS\") {\n\t                                            pt[p] = v[p];\n\t                                        }\n\t                                    }\n\t                                    pt.overwrite = 0;\n\t                                    pt.data = \"isFromStart\";\n\t                                    pt.lazy = immediate && v.lazy !== false;\n\t                                    pt.immediateRender = immediate;\n\t                                    this._startAt = TweenLite.to(this.target, 0, pt);\n\t                                    if (!immediate) {\n\t                                        this._startAt._init();\n\t                                        this._startAt._enabled(false);\n\t                                        if (this.vars.immediateRender) {\n\t                                            this._startAt = null;\n\t                                        }\n\t                                    } else if (this._time === 0) {\n\t                                        return;\n\t                                    }\n\t                                }\n\t                            }\n\t                            this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === \"function\" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t                            if (v.easeParams instanceof Array && ease.config) {\n\t                                this._ease = ease.config.apply(ease, v.easeParams);\n\t                            }\n\t                            this._easeType = this._ease._type;\n\t                            this._easePower = this._ease._power;\n\t                            this._firstPT = null;\n\t                            if (this._targets) {\n\t                                i = this._targets.length;\n\t                                while (--i > -1) {\n\t                                    if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null)) {\n\t                                        initPlugins = true;\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n\t                            }\n\t                            if (initPlugins) {\n\t                                TweenLite._onPluginEvent(\"_onInitAllProps\", this);\n\t                            }\n\t                            if (op) if (!this._firstPT) if (typeof this.target !== \"function\") {\n\t                                this._enabled(false, false);\n\t                            }\n\t                            if (v.runBackwards) {\n\t                                pt = this._firstPT;\n\t                                while (pt) {\n\t                                    pt.s += pt.c;\n\t                                    pt.c = -pt.c;\n\t                                    pt = pt._next;\n\t                                }\n\t                            }\n\t                            this._onUpdate = v.onUpdate;\n\t                            this._initted = true;\n\t                        };\n\t                        p._initProps = function(target, propLookup, siblings, overwrittenProps) {\n\t                            var p, i, initPlugins, plugin, pt, v;\n\t                            if (target == null) {\n\t                                return false;\n\t                            }\n\t                            if (_lazyLookup[target._gsTweenID]) {\n\t                                _lazyRender();\n\t                            }\n\t                            if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {\n\t                                _autoCSS(this.vars, target);\n\t                            }\n\t                            for (p in this.vars) {\n\t                                v = this.vars[p];\n\t                                if (_reservedProps[p]) {\n\t                                    if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t                                        this.vars[p] = v = this._swapSelfInParams(v, this);\n\t                                    }\n\t                                } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n\t                                    this._firstPT = pt = {\n\t                                        _next: this._firstPT,\n\t                                        t: plugin,\n\t                                        p: \"setRatio\",\n\t                                        s: 0,\n\t                                        c: 1,\n\t                                        f: 1,\n\t                                        n: p,\n\t                                        pg: 1,\n\t                                        pr: plugin._priority\n\t                                    };\n\t                                    i = plugin._overwriteProps.length;\n\t                                    while (--i > -1) {\n\t                                        propLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t                                    }\n\t                                    if (plugin._priority || plugin._onInitAllProps) {\n\t                                        initPlugins = true;\n\t                                    }\n\t                                    if (plugin._onDisable || plugin._onEnable) {\n\t                                        this._notifyPluginsOfEnabled = true;\n\t                                    }\n\t                                    if (pt._next) {\n\t                                        pt._next._prev = pt;\n\t                                    }\n\t                                } else {\n\t                                    propLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter);\n\t                                }\n\t                            }\n\t                            if (overwrittenProps) if (this._kill(overwrittenProps, target)) {\n\t                                return this._initProps(target, propLookup, siblings, overwrittenProps);\n\t                            }\n\t                            if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t                                this._kill(propLookup, target);\n\t                                return this._initProps(target, propLookup, siblings, overwrittenProps);\n\t                            }\n\t                            if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {\n\t                                _lazyLookup[target._gsTweenID] = true;\n\t                            }\n\t                            return initPlugins;\n\t                        };\n\t                        p.render = function(time, suppressEvents, force) {\n\t                            var prevTime = this._time, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, rawPrevTime;\n\t                            if (time >= duration - 1e-7) {\n\t                                this._totalTime = this._time = duration;\n\t                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t                                if (!this._reversed) {\n\t                                    isComplete = true;\n\t                                    callback = \"onComplete\";\n\t                                    force = force || this._timeline.autoRemoveChildren;\n\t                                }\n\t                                if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                    if (this._startTime === this._timeline._duration) {\n\t                                        time = 0;\n\t                                    }\n\t                                    if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n\t                                        force = true;\n\t                                        if (prevRawPrevTime > _tinyNum) {\n\t                                            callback = \"onReverseComplete\";\n\t                                        }\n\t                                    }\n\t                                    this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                                }\n\t                            } else if (time < 1e-7) {\n\t                                this._totalTime = this._time = 0;\n\t                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                                if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n\t                                    callback = \"onReverseComplete\";\n\t                                    isComplete = this._reversed;\n\t                                }\n\t                                if (time < 0) {\n\t                                    this._active = false;\n\t                                    if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                        if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n\t                                            force = true;\n\t                                        }\n\t                                        this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                                    }\n\t                                }\n\t                                if (!this._initted) {\n\t                                    force = true;\n\t                                }\n\t                            } else {\n\t                                this._totalTime = this._time = time;\n\t                                if (this._easeType) {\n\t                                    var r = time / duration, type = this._easeType, pow = this._easePower;\n\t                                    if (type === 1 || type === 3 && r >= .5) {\n\t                                        r = 1 - r;\n\t                                    }\n\t                                    if (type === 3) {\n\t                                        r *= 2;\n\t                                    }\n\t                                    if (pow === 1) {\n\t                                        r *= r;\n\t                                    } else if (pow === 2) {\n\t                                        r *= r * r;\n\t                                    } else if (pow === 3) {\n\t                                        r *= r * r * r;\n\t                                    } else if (pow === 4) {\n\t                                        r *= r * r * r * r;\n\t                                    }\n\t                                    if (type === 1) {\n\t                                        this.ratio = 1 - r;\n\t                                    } else if (type === 2) {\n\t                                        this.ratio = r;\n\t                                    } else if (time / duration < .5) {\n\t                                        this.ratio = r / 2;\n\t                                    } else {\n\t                                        this.ratio = 1 - r / 2;\n\t                                    }\n\t                                } else {\n\t                                    this.ratio = this._ease.getRatio(time / duration);\n\t                                }\n\t                            }\n\t                            if (this._time === prevTime && !force) {\n\t                                return;\n\t                            } else if (!this._initted) {\n\t                                this._init();\n\t                                if (!this._initted || this._gc) {\n\t                                    return;\n\t                                } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n\t                                    this._time = this._totalTime = prevTime;\n\t                                    this._rawPrevTime = prevRawPrevTime;\n\t                                    _lazyTweens.push(this);\n\t                                    this._lazy = [ time, suppressEvents ];\n\t                                    return;\n\t                                }\n\t                                if (this._time && !isComplete) {\n\t                                    this.ratio = this._ease.getRatio(this._time / duration);\n\t                                } else if (isComplete && this._ease._calcEnd) {\n\t                                    this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n\t                                }\n\t                            }\n\t                            if (this._lazy !== false) {\n\t                                this._lazy = false;\n\t                            }\n\t                            if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t                                this._active = true;\n\t                            }\n\t                            if (prevTime === 0) {\n\t                                if (this._startAt) {\n\t                                    if (time >= 0) {\n\t                                        this._startAt.render(time, suppressEvents, force);\n\t                                    } else if (!callback) {\n\t                                        callback = \"_dummyGS\";\n\t                                    }\n\t                                }\n\t                                if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n\t                                    this._callback(\"onStart\");\n\t                                }\n\t                            }\n\t                            pt = this._firstPT;\n\t                            while (pt) {\n\t                                if (pt.f) {\n\t                                    pt.t[pt.p](pt.c * this.ratio + pt.s);\n\t                                } else {\n\t                                    pt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                            if (this._onUpdate) {\n\t                                if (time < 0) if (this._startAt && time !== -1e-4) {\n\t                                    this._startAt.render(time, suppressEvents, force);\n\t                                }\n\t                                if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n\t                                    this._callback(\"onUpdate\");\n\t                                }\n\t                            }\n\t                            if (callback) if (!this._gc || force) {\n\t                                if (time < 0 && this._startAt && !this._onUpdate && time !== -1e-4) {\n\t                                    this._startAt.render(time, suppressEvents, force);\n\t                                }\n\t                                if (isComplete) {\n\t                                    if (this._timeline.autoRemoveChildren) {\n\t                                        this._enabled(false, false);\n\t                                    }\n\t                                    this._active = false;\n\t                                }\n\t                                if (!suppressEvents && this.vars[callback]) {\n\t                                    this._callback(callback);\n\t                                }\n\t                                if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n\t                                    this._rawPrevTime = 0;\n\t                                }\n\t                            }\n\t                        };\n\t                        p._kill = function(vars, target, overwritingTween) {\n\t                            if (vars === \"all\") {\n\t                                vars = null;\n\t                            }\n\t                            if (vars == null) if (target == null || target === this.target) {\n\t                                this._lazy = false;\n\t                                return this._enabled(false, false);\n\t                            }\n\t                            target = typeof target !== \"string\" ? target || this._targets || this.target : TweenLite.selector(target) || target;\n\t                            var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline, i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n\t                            if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n\t                                i = target.length;\n\t                                while (--i > -1) {\n\t                                    if (this._kill(vars, target[i], overwritingTween)) {\n\t                                        changed = true;\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                if (this._targets) {\n\t                                    i = this._targets.length;\n\t                                    while (--i > -1) {\n\t                                        if (target === this._targets[i]) {\n\t                                            propLookup = this._propLookup[i] || {};\n\t                                            this._overwrittenProps = this._overwrittenProps || [];\n\t                                            overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t                                            break;\n\t                                        }\n\t                                    }\n\t                                } else if (target !== this.target) {\n\t                                    return false;\n\t                                } else {\n\t                                    propLookup = this._propLookup;\n\t                                    overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t                                }\n\t                                if (propLookup) {\n\t                                    killProps = vars || propLookup;\n\t                                    record = vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof vars !== \"object\" || !vars._tempKill);\n\t                                    if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n\t                                        for (p in killProps) {\n\t                                            if (propLookup[p]) {\n\t                                                if (!killed) {\n\t                                                    killed = [];\n\t                                                }\n\t                                                killed.push(p);\n\t                                            }\n\t                                        }\n\t                                        if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {\n\t                                            return false;\n\t                                        }\n\t                                    }\n\t                                    for (p in killProps) {\n\t                                        if (pt = propLookup[p]) {\n\t                                            if (simultaneousOverwrite) {\n\t                                                if (pt.f) {\n\t                                                    pt.t[pt.p](pt.s);\n\t                                                } else {\n\t                                                    pt.t[pt.p] = pt.s;\n\t                                                }\n\t                                                changed = true;\n\t                                            }\n\t                                            if (pt.pg && pt.t._kill(killProps)) {\n\t                                                changed = true;\n\t                                            }\n\t                                            if (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t                                                if (pt._prev) {\n\t                                                    pt._prev._next = pt._next;\n\t                                                } else if (pt === this._firstPT) {\n\t                                                    this._firstPT = pt._next;\n\t                                                }\n\t                                                if (pt._next) {\n\t                                                    pt._next._prev = pt._prev;\n\t                                                }\n\t                                                pt._next = pt._prev = null;\n\t                                            }\n\t                                            delete propLookup[p];\n\t                                        }\n\t                                        if (record) {\n\t                                            overwrittenProps[p] = 1;\n\t                                        }\n\t                                    }\n\t                                    if (!this._firstPT && this._initted) {\n\t                                        this._enabled(false, false);\n\t                                    }\n\t                                }\n\t                            }\n\t                            return changed;\n\t                        };\n\t                        p.invalidate = function() {\n\t                            if (this._notifyPluginsOfEnabled) {\n\t                                TweenLite._onPluginEvent(\"_onDisable\", this);\n\t                            }\n\t                            this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n\t                            this._notifyPluginsOfEnabled = this._active = this._lazy = false;\n\t                            this._propLookup = this._targets ? {} : [];\n\t                            Animation.prototype.invalidate.call(this);\n\t                            if (this.vars.immediateRender) {\n\t                                this._time = -_tinyNum;\n\t                                this.render(Math.min(0, -this._delay));\n\t                            }\n\t                            return this;\n\t                        };\n\t                        p._enabled = function(enabled, ignoreTimeline) {\n\t                            if (!_tickerActive) {\n\t                                _ticker.wake();\n\t                            }\n\t                            if (enabled && this._gc) {\n\t                                var targets = this._targets, i;\n\t                                if (targets) {\n\t                                    i = targets.length;\n\t                                    while (--i > -1) {\n\t                                        this._siblings[i] = _register(targets[i], this, true);\n\t                                    }\n\t                                } else {\n\t                                    this._siblings = _register(this.target, this, true);\n\t                                }\n\t                            }\n\t                            Animation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t                            if (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t                                return TweenLite._onPluginEvent(enabled ? \"_onEnable\" : \"_onDisable\", this);\n\t                            }\n\t                            return false;\n\t                        };\n\t                        TweenLite.to = function(target, duration, vars) {\n\t                            return new TweenLite(target, duration, vars);\n\t                        };\n\t                        TweenLite.from = function(target, duration, vars) {\n\t                            vars.runBackwards = true;\n\t                            vars.immediateRender = vars.immediateRender != false;\n\t                            return new TweenLite(target, duration, vars);\n\t                        };\n\t                        TweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t                            toVars.startAt = fromVars;\n\t                            toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                            return new TweenLite(target, duration, toVars);\n\t                        };\n\t                        TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t                            return new TweenLite(callback, 0, {\n\t                                delay: delay,\n\t                                onComplete: callback,\n\t                                onCompleteParams: params,\n\t                                callbackScope: scope,\n\t                                onReverseComplete: callback,\n\t                                onReverseCompleteParams: params,\n\t                                immediateRender: false,\n\t                                lazy: false,\n\t                                useFrames: useFrames,\n\t                                overwrite: 0\n\t                            });\n\t                        };\n\t                        TweenLite.set = function(target, vars) {\n\t                            return new TweenLite(target, 0, vars);\n\t                        };\n\t                        TweenLite.getTweensOf = function(target, onlyActive) {\n\t                            if (target == null) {\n\t                                return [];\n\t                            }\n\t                            target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n\t                            var i, a, j, t;\n\t                            if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n\t                                i = target.length;\n\t                                a = [];\n\t                                while (--i > -1) {\n\t                                    a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t                                }\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    t = a[i];\n\t                                    j = i;\n\t                                    while (--j > -1) {\n\t                                        if (t === a[j]) {\n\t                                            a.splice(i, 1);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                a = _register(target).concat();\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    if (a[i]._gc || onlyActive && !a[i].isActive()) {\n\t                                        a.splice(i, 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                            return a;\n\t                        };\n\t                        TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t                            if (typeof onlyActive === \"object\") {\n\t                                vars = onlyActive;\n\t                                onlyActive = false;\n\t                            }\n\t                            var a = TweenLite.getTweensOf(target, onlyActive), i = a.length;\n\t                            while (--i > -1) {\n\t                                a[i]._kill(vars, target);\n\t                            }\n\t                        };\n\t                        var TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t                            this._overwriteProps = (props || \"\").split(\",\");\n\t                            this._propName = this._overwriteProps[0];\n\t                            this._priority = priority || 0;\n\t                            this._super = TweenPlugin.prototype;\n\t                        }, true);\n\t                        p = TweenPlugin.prototype;\n\t                        TweenPlugin.version = \"1.18.0\";\n\t                        TweenPlugin.API = 2;\n\t                        p._firstPT = null;\n\t                        p._addTween = _addPropTween;\n\t                        p.setRatio = _setRatio;\n\t                        p._kill = function(lookup) {\n\t                            var a = this._overwriteProps, pt = this._firstPT, i;\n\t                            if (lookup[this._propName] != null) {\n\t                                this._overwriteProps = [];\n\t                            } else {\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    if (lookup[a[i]] != null) {\n\t                                        a.splice(i, 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                            while (pt) {\n\t                                if (lookup[pt.n] != null) {\n\t                                    if (pt._next) {\n\t                                        pt._next._prev = pt._prev;\n\t                                    }\n\t                                    if (pt._prev) {\n\t                                        pt._prev._next = pt._next;\n\t                                        pt._prev = null;\n\t                                    } else if (this._firstPT === pt) {\n\t                                        this._firstPT = pt._next;\n\t                                    }\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                            return false;\n\t                        };\n\t                        p._roundProps = function(lookup, value) {\n\t                            var pt = this._firstPT;\n\t                            while (pt) {\n\t                                if (lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + \"_\").join(\"\")]) {\n\t                                    pt.r = value;\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        };\n\t                        TweenLite._onPluginEvent = function(type, tween) {\n\t                            var pt = tween._firstPT, changed, pt2, first, last, next;\n\t                            if (type === \"_onInitAllProps\") {\n\t                                while (pt) {\n\t                                    next = pt._next;\n\t                                    pt2 = first;\n\t                                    while (pt2 && pt2.pr > pt.pr) {\n\t                                        pt2 = pt2._next;\n\t                                    }\n\t                                    if (pt._prev = pt2 ? pt2._prev : last) {\n\t                                        pt._prev._next = pt;\n\t                                    } else {\n\t                                        first = pt;\n\t                                    }\n\t                                    if (pt._next = pt2) {\n\t                                        pt2._prev = pt;\n\t                                    } else {\n\t                                        last = pt;\n\t                                    }\n\t                                    pt = next;\n\t                                }\n\t                                pt = tween._firstPT = first;\n\t                            }\n\t                            while (pt) {\n\t                                if (pt.pg) if (typeof pt.t[type] === \"function\") if (pt.t[type]()) {\n\t                                    changed = true;\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                            return changed;\n\t                        };\n\t                        TweenPlugin.activate = function(plugins) {\n\t                            var i = plugins.length;\n\t                            while (--i > -1) {\n\t                                if (plugins[i].API === TweenPlugin.API) {\n\t                                    _plugins[new plugins[i]()._propName] = plugins[i];\n\t                                }\n\t                            }\n\t                            return true;\n\t                        };\n\t                        _gsDefine.plugin = function(config) {\n\t                            if (!config || !config.propName || !config.init || !config.API) {\n\t                                throw \"illegal plugin definition.\";\n\t                            }\n\t                            var propName = config.propName, priority = config.priority || 0, overwriteProps = config.overwriteProps, map = {\n\t                                init: \"_onInitTween\",\n\t                                set: \"setRatio\",\n\t                                kill: \"_kill\",\n\t                                round: \"_roundProps\",\n\t                                initAll: \"_onInitAllProps\"\n\t                            }, Plugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\", function() {\n\t                                TweenPlugin.call(this, propName, priority);\n\t                                this._overwriteProps = overwriteProps || [];\n\t                            }, config.global === true), p = Plugin.prototype = new TweenPlugin(propName), prop;\n\t                            p.constructor = Plugin;\n\t                            Plugin.API = config.API;\n\t                            for (prop in map) {\n\t                                if (typeof config[prop] === \"function\") {\n\t                                    p[map[prop]] = config[prop];\n\t                                }\n\t                            }\n\t                            Plugin.version = config.version;\n\t                            TweenPlugin.activate([ Plugin ]);\n\t                            return Plugin;\n\t                        };\n\t                        a = window._gsQueue;\n\t                        if (a) {\n\t                            for (i = 0; i < a.length; i++) {\n\t                                a[i]();\n\t                            }\n\t                            for (p in _defLookup) {\n\t                                if (!_defLookup[p].func) {\n\t                                    window.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n\t                                }\n\t                            }\n\t                        }\n\t                        _tickerActive = false;\n\t                    })(typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window, \"TweenMax\");\n\t                }).call(exports, function() {\n\t                    return this;\n\t                }());\n\t            }, function(module, exports) {\n\t                (function(__webpack_amd_options__) {\n\t                    module.exports = __webpack_amd_options__;\n\t                }).call(exports, {});\n\t            }, function(module, exports) {\n\t                THREE.SpriteCanvasMaterial = function(parameters) {\n\t                    THREE.Material.call(this);\n\t                    this.type = \"SpriteCanvasMaterial\";\n\t                    this.color = new THREE.Color(16777215);\n\t                    this.program = function(context, color) {};\n\t                    this.setValues(parameters);\n\t                };\n\t                THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n\t                THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t                THREE.SpriteCanvasMaterial.prototype.clone = function() {\n\t                    var material = new THREE.SpriteCanvasMaterial();\n\t                    material.copy(this);\n\t                    material.color.copy(this.color);\n\t                    material.program = this.program;\n\t                    return material;\n\t                };\n\t                THREE.CanvasRenderer = function(parameters) {\n\t                    console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n\t                    parameters = parameters || {};\n\t                    var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n\t                        alpha: parameters.alpha === true\n\t                    }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n\t                    if (_context.setLineDash === undefined) {\n\t                        _context.setLineDash = function() {};\n\t                    }\n\t                    this.domElement = _canvas;\n\t                    this.autoClear = true;\n\t                    this.sortObjects = true;\n\t                    this.sortElements = true;\n\t                    this.info = {\n\t                        render: {\n\t                            vertices: 0,\n\t                            faces: 0\n\t                        }\n\t                    };\n\t                    this.supportsVertexTextures = function() {};\n\t                    this.setFaceCulling = function() {};\n\t                    this.getContext = function() {\n\t                        return _context;\n\t                    };\n\t                    this.getContextAttributes = function() {\n\t                        return _context.getContextAttributes();\n\t                    };\n\t                    this.getPixelRatio = function() {\n\t                        return _pixelRatio;\n\t                    };\n\t                    this.setPixelRatio = function(value) {\n\t                        if (value !== undefined) _pixelRatio = value;\n\t                    };\n\t                    this.setSize = function(width, height, updateStyle) {\n\t                        _canvasWidth = width * _pixelRatio;\n\t                        _canvasHeight = height * _pixelRatio;\n\t                        _canvas.width = _canvasWidth;\n\t                        _canvas.height = _canvasHeight;\n\t                        _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n\t                        _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n\t                        if (updateStyle !== false) {\n\t                            _canvas.style.width = width + \"px\";\n\t                            _canvas.style.height = height + \"px\";\n\t                        }\n\t                        _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                        _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                        _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                        _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                        _contextGlobalAlpha = 1;\n\t                        _contextGlobalCompositeOperation = 0;\n\t                        _contextStrokeStyle = null;\n\t                        _contextFillStyle = null;\n\t                        _contextLineWidth = null;\n\t                        _contextLineCap = null;\n\t                        _contextLineJoin = null;\n\t                        this.setViewport(0, 0, width, height);\n\t                    };\n\t                    this.setViewport = function(x, y, width, height) {\n\t                        _viewportX = x * _pixelRatio;\n\t                        _viewportY = y * _pixelRatio;\n\t                        _viewportWidth = width * _pixelRatio;\n\t                        _viewportHeight = height * _pixelRatio;\n\t                    };\n\t                    this.setScissor = function() {};\n\t                    this.setScissorTest = function() {};\n\t                    this.setClearColor = function(color, alpha) {\n\t                        _clearColor.set(color);\n\t                        _clearAlpha = alpha !== undefined ? alpha : 1;\n\t                        _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                        _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                    };\n\t                    this.setClearColorHex = function(hex, alpha) {\n\t                        console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n\t                        this.setClearColor(hex, alpha);\n\t                    };\n\t                    this.getClearColor = function() {\n\t                        return _clearColor;\n\t                    };\n\t                    this.getClearAlpha = function() {\n\t                        return _clearAlpha;\n\t                    };\n\t                    this.getMaxAnisotropy = function() {\n\t                        return 0;\n\t                    };\n\t                    this.clear = function() {\n\t                        if (_clearBox.isEmpty() === false) {\n\t                            _clearBox.intersect(_clipBox);\n\t                            _clearBox.expandByScalar(2);\n\t                            _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t                            _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n\t                            _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t                            _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n\t                            if (_clearAlpha < 1) {\n\t                                _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                            }\n\t                            if (_clearAlpha > 0) {\n\t                                setBlending(THREE.NormalBlending);\n\t                                setOpacity(1);\n\t                                setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n\t                                _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                            }\n\t                            _clearBox.makeEmpty();\n\t                        }\n\t                    };\n\t                    this.clearColor = function() {};\n\t                    this.clearDepth = function() {};\n\t                    this.clearStencil = function() {};\n\t                    this.render = function(scene, camera) {\n\t                        if (camera instanceof THREE.Camera === false) {\n\t                            console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n\t                            return;\n\t                        }\n\t                        if (this.autoClear === true) this.clear();\n\t                        _this.info.render.vertices = 0;\n\t                        _this.info.render.faces = 0;\n\t                        _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n\t                        _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n\t                        _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n\t                        _elements = _renderData.elements;\n\t                        _lights = _renderData.lights;\n\t                        _camera = camera;\n\t                        _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\t                        calculateLights();\n\t                        for (var e = 0, el = _elements.length; e < el; e++) {\n\t                            var element = _elements[e];\n\t                            var material = element.material;\n\t                            if (material === undefined || material.opacity === 0) continue;\n\t                            _elemBox.makeEmpty();\n\t                            if (element instanceof THREE.RenderableSprite) {\n\t                                _v1 = element;\n\t                                _v1.x *= _canvasWidthHalf;\n\t                                _v1.y *= _canvasHeightHalf;\n\t                                renderSprite(_v1, element, material);\n\t                            } else if (element instanceof THREE.RenderableLine) {\n\t                                _v1 = element.v1;\n\t                                _v2 = element.v2;\n\t                                _v1.positionScreen.x *= _canvasWidthHalf;\n\t                                _v1.positionScreen.y *= _canvasHeightHalf;\n\t                                _v2.positionScreen.x *= _canvasWidthHalf;\n\t                                _v2.positionScreen.y *= _canvasHeightHalf;\n\t                                _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n\t                                if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                                    renderLine(_v1, _v2, element, material);\n\t                                }\n\t                            } else if (element instanceof THREE.RenderableFace) {\n\t                                _v1 = element.v1;\n\t                                _v2 = element.v2;\n\t                                _v3 = element.v3;\n\t                                if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n\t                                if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n\t                                if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n\t                                _v1.positionScreen.x *= _canvasWidthHalf;\n\t                                _v1.positionScreen.y *= _canvasHeightHalf;\n\t                                _v2.positionScreen.x *= _canvasWidthHalf;\n\t                                _v2.positionScreen.y *= _canvasHeightHalf;\n\t                                _v3.positionScreen.x *= _canvasWidthHalf;\n\t                                _v3.positionScreen.y *= _canvasHeightHalf;\n\t                                if (material.overdraw > 0) {\n\t                                    expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n\t                                    expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n\t                                    expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n\t                                }\n\t                                _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n\t                                if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                                    renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n\t                                }\n\t                            }\n\t                            _clearBox.union(_elemBox);\n\t                        }\n\t                        _context.setTransform(1, 0, 0, 1, 0, 0);\n\t                    };\n\t                    function calculateLights() {\n\t                        _ambientLight.setRGB(0, 0, 0);\n\t                        _directionalLights.setRGB(0, 0, 0);\n\t                        _pointLights.setRGB(0, 0, 0);\n\t                        for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                            var light = _lights[l];\n\t                            var lightColor = light.color;\n\t                            if (light instanceof THREE.AmbientLight) {\n\t                                _ambientLight.add(lightColor);\n\t                            } else if (light instanceof THREE.DirectionalLight) {\n\t                                _directionalLights.add(lightColor);\n\t                            } else if (light instanceof THREE.PointLight) {\n\t                                _pointLights.add(lightColor);\n\t                            }\n\t                        }\n\t                    }\n\t                    function calculateLight(position, normal, color) {\n\t                        for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                            var light = _lights[l];\n\t                            _lightColor.copy(light.color);\n\t                            if (light instanceof THREE.DirectionalLight) {\n\t                                var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\t                                var amount = normal.dot(lightPosition);\n\t                                if (amount <= 0) continue;\n\t                                amount *= light.intensity;\n\t                                color.add(_lightColor.multiplyScalar(amount));\n\t                            } else if (light instanceof THREE.PointLight) {\n\t                                var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\t                                var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n\t                                if (amount <= 0) continue;\n\t                                amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n\t                                if (amount == 0) continue;\n\t                                amount *= light.intensity;\n\t                                color.add(_lightColor.multiplyScalar(amount));\n\t                            }\n\t                        }\n\t                    }\n\t                    function renderSprite(v1, element, material) {\n\t                        setOpacity(material.opacity);\n\t                        setBlending(material.blending);\n\t                        var scaleX = element.scale.x * _canvasWidthHalf;\n\t                        var scaleY = element.scale.y * _canvasHeightHalf;\n\t                        var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n\t                        _elemBox.min.set(v1.x - dist, v1.y - dist);\n\t                        _elemBox.max.set(v1.x + dist, v1.y + dist);\n\t                        if (material instanceof THREE.SpriteMaterial) {\n\t                            var texture = material.map;\n\t                            if (texture !== null) {\n\t                                var pattern = _patterns[texture.id];\n\t                                if (pattern === undefined || pattern.version !== texture.version) {\n\t                                    pattern = textureToPattern(texture);\n\t                                    _patterns[texture.id] = pattern;\n\t                                }\n\t                                if (pattern.canvas !== undefined) {\n\t                                    setFillStyle(pattern.canvas);\n\t                                    var bitmap = texture.image;\n\t                                    var ox = bitmap.width * texture.offset.x;\n\t                                    var oy = bitmap.height * texture.offset.y;\n\t                                    var sx = bitmap.width * texture.repeat.x;\n\t                                    var sy = bitmap.height * texture.repeat.y;\n\t                                    var cx = scaleX / sx;\n\t                                    var cy = scaleY / sy;\n\t                                    _context.save();\n\t                                    _context.translate(v1.x, v1.y);\n\t                                    if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                                    _context.translate(-scaleX / 2, -scaleY / 2);\n\t                                    _context.scale(cx, cy);\n\t                                    _context.translate(-ox, -oy);\n\t                                    _context.fillRect(ox, oy, sx, sy);\n\t                                    _context.restore();\n\t                                }\n\t                            } else {\n\t                                setFillStyle(material.color.getStyle());\n\t                                _context.save();\n\t                                _context.translate(v1.x, v1.y);\n\t                                if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                                _context.scale(scaleX, -scaleY);\n\t                                _context.fillRect(-.5, -.5, 1, 1);\n\t                                _context.restore();\n\t                            }\n\t                        } else if (material instanceof THREE.SpriteCanvasMaterial) {\n\t                            setStrokeStyle(material.color.getStyle());\n\t                            setFillStyle(material.color.getStyle());\n\t                            _context.save();\n\t                            _context.translate(v1.x, v1.y);\n\t                            if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                            _context.scale(scaleX, scaleY);\n\t                            material.program(_context);\n\t                            _context.restore();\n\t                        }\n\t                    }\n\t                    function renderLine(v1, v2, element, material) {\n\t                        setOpacity(material.opacity);\n\t                        setBlending(material.blending);\n\t                        _context.beginPath();\n\t                        _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n\t                        _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n\t                        if (material instanceof THREE.LineBasicMaterial) {\n\t                            setLineWidth(material.linewidth);\n\t                            setLineCap(material.linecap);\n\t                            setLineJoin(material.linejoin);\n\t                            if (material.vertexColors !== THREE.VertexColors) {\n\t                                setStrokeStyle(material.color.getStyle());\n\t                            } else {\n\t                                var colorStyle1 = element.vertexColors[0].getStyle();\n\t                                var colorStyle2 = element.vertexColors[1].getStyle();\n\t                                if (colorStyle1 === colorStyle2) {\n\t                                    setStrokeStyle(colorStyle1);\n\t                                } else {\n\t                                    try {\n\t                                        var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n\t                                        grad.addColorStop(0, colorStyle1);\n\t                                        grad.addColorStop(1, colorStyle2);\n\t                                    } catch (exception) {\n\t                                        grad = colorStyle1;\n\t                                    }\n\t                                    setStrokeStyle(grad);\n\t                                }\n\t                            }\n\t                            _context.stroke();\n\t                            _elemBox.expandByScalar(material.linewidth * 2);\n\t                        } else if (material instanceof THREE.LineDashedMaterial) {\n\t                            setLineWidth(material.linewidth);\n\t                            setLineCap(material.linecap);\n\t                            setLineJoin(material.linejoin);\n\t                            setStrokeStyle(material.color.getStyle());\n\t                            setLineDash([ material.dashSize, material.gapSize ]);\n\t                            _context.stroke();\n\t                            _elemBox.expandByScalar(material.linewidth * 2);\n\t                            setLineDash([]);\n\t                        }\n\t                    }\n\t                    function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n\t                        _this.info.render.vertices += 3;\n\t                        _this.info.render.faces++;\n\t                        setOpacity(material.opacity);\n\t                        setBlending(material.blending);\n\t                        _v1x = v1.positionScreen.x;\n\t                        _v1y = v1.positionScreen.y;\n\t                        _v2x = v2.positionScreen.x;\n\t                        _v2y = v2.positionScreen.y;\n\t                        _v3x = v3.positionScreen.x;\n\t                        _v3y = v3.positionScreen.y;\n\t                        drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n\t                        if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n\t                            _diffuseColor.copy(material.color);\n\t                            _emissiveColor.copy(material.emissive);\n\t                            if (material.vertexColors === THREE.FaceColors) {\n\t                                _diffuseColor.multiply(element.color);\n\t                            }\n\t                            _color.copy(_ambientLight);\n\t                            _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\t                            calculateLight(_centroid, element.normalModel, _color);\n\t                            _color.multiply(_diffuseColor).add(_emissiveColor);\n\t                            material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                        } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n\t                            if (material.map !== null) {\n\t                                var mapping = material.map.mapping;\n\t                                if (mapping === THREE.UVMapping) {\n\t                                    _uvs = element.uvs;\n\t                                    patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n\t                                }\n\t                            } else if (material.envMap !== null) {\n\t                                if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n\t                                    _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n\t                                    _uv1x = .5 * _normal.x + .5;\n\t                                    _uv1y = .5 * _normal.y + .5;\n\t                                    _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n\t                                    _uv2x = .5 * _normal.x + .5;\n\t                                    _uv2y = .5 * _normal.y + .5;\n\t                                    _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n\t                                    _uv3x = .5 * _normal.x + .5;\n\t                                    _uv3y = .5 * _normal.y + .5;\n\t                                    patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n\t                                }\n\t                            } else {\n\t                                _color.copy(material.color);\n\t                                if (material.vertexColors === THREE.FaceColors) {\n\t                                    _color.multiply(element.color);\n\t                                }\n\t                                material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                            }\n\t                        } else if (material instanceof THREE.MeshNormalMaterial) {\n\t                            _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n\t                            _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n\t                            material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                        } else {\n\t                            _color.setRGB(1, 1, 1);\n\t                            material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                        }\n\t                    }\n\t                    function drawTriangle(x0, y0, x1, y1, x2, y2) {\n\t                        _context.beginPath();\n\t                        _context.moveTo(x0, y0);\n\t                        _context.lineTo(x1, y1);\n\t                        _context.lineTo(x2, y2);\n\t                        _context.closePath();\n\t                    }\n\t                    function strokePath(color, linewidth, linecap, linejoin) {\n\t                        setLineWidth(linewidth);\n\t                        setLineCap(linecap);\n\t                        setLineJoin(linejoin);\n\t                        setStrokeStyle(color.getStyle());\n\t                        _context.stroke();\n\t                        _elemBox.expandByScalar(linewidth * 2);\n\t                    }\n\t                    function fillPath(color) {\n\t                        setFillStyle(color.getStyle());\n\t                        _context.fill();\n\t                    }\n\t                    function textureToPattern(texture) {\n\t                        if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n\t                            return {\n\t                                canvas: undefined,\n\t                                version: texture.version\n\t                            };\n\t                        }\n\t                        var image = texture.image;\n\t                        if (image.complete === false) {\n\t                            return {\n\t                                canvas: undefined,\n\t                                version: 0\n\t                            };\n\t                        }\n\t                        var canvas = document.createElement(\"canvas\");\n\t                        canvas.width = image.width;\n\t                        canvas.height = image.height;\n\t                        var context = canvas.getContext(\"2d\");\n\t                        context.setTransform(1, 0, 0, -1, 0, image.height);\n\t                        context.drawImage(image, 0, 0);\n\t                        var repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t                        var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t                        var repeat = \"no-repeat\";\n\t                        if (repeatX === true && repeatY === true) {\n\t                            repeat = \"repeat\";\n\t                        } else if (repeatX === true) {\n\t                            repeat = \"repeat-x\";\n\t                        } else if (repeatY === true) {\n\t                            repeat = \"repeat-y\";\n\t                        }\n\t                        var pattern = _context.createPattern(canvas, repeat);\n\t                        if (texture.onUpdate) texture.onUpdate(texture);\n\t                        return {\n\t                            canvas: pattern,\n\t                            version: texture.version\n\t                        };\n\t                    }\n\t                    function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n\t                        var pattern = _patterns[texture.id];\n\t                        if (pattern === undefined || pattern.version !== texture.version) {\n\t                            pattern = textureToPattern(texture);\n\t                            _patterns[texture.id] = pattern;\n\t                        }\n\t                        if (pattern.canvas !== undefined) {\n\t                            setFillStyle(pattern.canvas);\n\t                        } else {\n\t                            setFillStyle(\"rgba( 0, 0, 0, 1)\");\n\t                            _context.fill();\n\t                            return;\n\t                        }\n\t                        var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n\t                        u0 = (u0 + offsetX) * width;\n\t                        v0 = (v0 + offsetY) * height;\n\t                        u1 = (u1 + offsetX) * width;\n\t                        v1 = (v1 + offsetY) * height;\n\t                        u2 = (u2 + offsetX) * width;\n\t                        v2 = (v2 + offsetY) * height;\n\t                        x1 -= x0;\n\t                        y1 -= y0;\n\t                        x2 -= x0;\n\t                        y2 -= y0;\n\t                        u1 -= u0;\n\t                        v1 -= v0;\n\t                        u2 -= u0;\n\t                        v2 -= v0;\n\t                        det = u1 * v2 - u2 * v1;\n\t                        if (det === 0) return;\n\t                        idet = 1 / det;\n\t                        a = (v2 * x1 - v1 * x2) * idet;\n\t                        b = (v2 * y1 - v1 * y2) * idet;\n\t                        c = (u1 * x2 - u2 * x1) * idet;\n\t                        d = (u1 * y2 - u2 * y1) * idet;\n\t                        e = x0 - a * u0 - c * v0;\n\t                        f = y0 - b * u0 - d * v0;\n\t                        _context.save();\n\t                        _context.transform(a, b, c, d, e, f);\n\t                        _context.fill();\n\t                        _context.restore();\n\t                    }\n\t                    function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n\t                        var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n\t                        u0 *= width;\n\t                        v0 *= height;\n\t                        u1 *= width;\n\t                        v1 *= height;\n\t                        u2 *= width;\n\t                        v2 *= height;\n\t                        x1 -= x0;\n\t                        y1 -= y0;\n\t                        x2 -= x0;\n\t                        y2 -= y0;\n\t                        u1 -= u0;\n\t                        v1 -= v0;\n\t                        u2 -= u0;\n\t                        v2 -= v0;\n\t                        det = u1 * v2 - u2 * v1;\n\t                        idet = 1 / det;\n\t                        a = (v2 * x1 - v1 * x2) * idet;\n\t                        b = (v2 * y1 - v1 * y2) * idet;\n\t                        c = (u1 * x2 - u2 * x1) * idet;\n\t                        d = (u1 * y2 - u2 * y1) * idet;\n\t                        e = x0 - a * u0 - c * v0;\n\t                        f = y0 - b * u0 - d * v0;\n\t                        _context.save();\n\t                        _context.transform(a, b, c, d, e, f);\n\t                        _context.clip();\n\t                        _context.drawImage(image, 0, 0);\n\t                        _context.restore();\n\t                    }\n\t                    function expand(v1, v2, pixels) {\n\t                        var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n\t                        if (det === 0) return;\n\t                        idet = pixels / Math.sqrt(det);\n\t                        x *= idet;\n\t                        y *= idet;\n\t                        v2.x += x;\n\t                        v2.y += y;\n\t                        v1.x -= x;\n\t                        v1.y -= y;\n\t                    }\n\t                    function setOpacity(value) {\n\t                        if (_contextGlobalAlpha !== value) {\n\t                            _context.globalAlpha = value;\n\t                            _contextGlobalAlpha = value;\n\t                        }\n\t                    }\n\t                    function setBlending(value) {\n\t                        if (_contextGlobalCompositeOperation !== value) {\n\t                            if (value === THREE.NormalBlending) {\n\t                                _context.globalCompositeOperation = \"source-over\";\n\t                            } else if (value === THREE.AdditiveBlending) {\n\t                                _context.globalCompositeOperation = \"lighter\";\n\t                            } else if (value === THREE.SubtractiveBlending) {\n\t                                _context.globalCompositeOperation = \"darker\";\n\t                            }\n\t                            _contextGlobalCompositeOperation = value;\n\t                        }\n\t                    }\n\t                    function setLineWidth(value) {\n\t                        if (_contextLineWidth !== value) {\n\t                            _context.lineWidth = value;\n\t                            _contextLineWidth = value;\n\t                        }\n\t                    }\n\t                    function setLineCap(value) {\n\t                        if (_contextLineCap !== value) {\n\t                            _context.lineCap = value;\n\t                            _contextLineCap = value;\n\t                        }\n\t                    }\n\t                    function setLineJoin(value) {\n\t                        if (_contextLineJoin !== value) {\n\t                            _context.lineJoin = value;\n\t                            _contextLineJoin = value;\n\t                        }\n\t                    }\n\t                    function setStrokeStyle(value) {\n\t                        if (_contextStrokeStyle !== value) {\n\t                            _context.strokeStyle = value;\n\t                            _contextStrokeStyle = value;\n\t                        }\n\t                    }\n\t                    function setFillStyle(value) {\n\t                        if (_contextFillStyle !== value) {\n\t                            _context.fillStyle = value;\n\t                            _contextFillStyle = value;\n\t                        }\n\t                    }\n\t                    function setLineDash(value) {\n\t                        if (_contextLineDash.length !== value.length) {\n\t                            _context.setLineDash(value);\n\t                            _contextLineDash = value;\n\t                        }\n\t                    }\n\t                };\n\t            }, function(module, exports) {\n\t                THREE.RenderableObject = function() {\n\t                    this.id = 0;\n\t                    this.object = null;\n\t                    this.z = 0;\n\t                    this.renderOrder = 0;\n\t                };\n\t                THREE.RenderableFace = function() {\n\t                    this.id = 0;\n\t                    this.v1 = new THREE.RenderableVertex();\n\t                    this.v2 = new THREE.RenderableVertex();\n\t                    this.v3 = new THREE.RenderableVertex();\n\t                    this.normalModel = new THREE.Vector3();\n\t                    this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t                    this.vertexNormalsLength = 0;\n\t                    this.color = new THREE.Color();\n\t                    this.material = null;\n\t                    this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t                    this.z = 0;\n\t                    this.renderOrder = 0;\n\t                };\n\t                THREE.RenderableVertex = function() {\n\t                    this.position = new THREE.Vector3();\n\t                    this.positionWorld = new THREE.Vector3();\n\t                    this.positionScreen = new THREE.Vector4();\n\t                    this.visible = true;\n\t                };\n\t                THREE.RenderableVertex.prototype.copy = function(vertex) {\n\t                    this.positionWorld.copy(vertex.positionWorld);\n\t                    this.positionScreen.copy(vertex.positionScreen);\n\t                };\n\t                THREE.RenderableLine = function() {\n\t                    this.id = 0;\n\t                    this.v1 = new THREE.RenderableVertex();\n\t                    this.v2 = new THREE.RenderableVertex();\n\t                    this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t                    this.material = null;\n\t                    this.z = 0;\n\t                    this.renderOrder = 0;\n\t                };\n\t                THREE.RenderableSprite = function() {\n\t                    this.id = 0;\n\t                    this.object = null;\n\t                    this.x = 0;\n\t                    this.y = 0;\n\t                    this.z = 0;\n\t                    this.rotation = 0;\n\t                    this.scale = new THREE.Vector2();\n\t                    this.material = null;\n\t                    this.renderOrder = 0;\n\t                };\n\t                THREE.Projector = function() {\n\t                    var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n\t                        objects: [],\n\t                        lights: [],\n\t                        elements: []\n\t                    }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n\t                    this.projectVector = function(vector, camera) {\n\t                        console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n\t                        vector.project(camera);\n\t                    };\n\t                    this.unprojectVector = function(vector, camera) {\n\t                        console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n\t                        vector.unproject(camera);\n\t                    };\n\t                    this.pickingRay = function(vector, camera) {\n\t                        console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n\t                    };\n\t                    var RenderList = function() {\n\t                        var normals = [];\n\t                        var uvs = [];\n\t                        var object = null;\n\t                        var material = null;\n\t                        var normalMatrix = new THREE.Matrix3();\n\t                        function setObject(value) {\n\t                            object = value;\n\t                            material = object.material;\n\t                            normalMatrix.getNormalMatrix(object.matrixWorld);\n\t                            normals.length = 0;\n\t                            uvs.length = 0;\n\t                        }\n\t                        function projectVertex(vertex) {\n\t                            var position = vertex.position;\n\t                            var positionWorld = vertex.positionWorld;\n\t                            var positionScreen = vertex.positionScreen;\n\t                            positionWorld.copy(position).applyMatrix4(_modelMatrix);\n\t                            positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n\t                            var invW = 1 / positionScreen.w;\n\t                            positionScreen.x *= invW;\n\t                            positionScreen.y *= invW;\n\t                            positionScreen.z *= invW;\n\t                            vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n\t                        }\n\t                        function pushVertex(x, y, z) {\n\t                            _vertex = getNextVertexInPool();\n\t                            _vertex.position.set(x, y, z);\n\t                            projectVertex(_vertex);\n\t                        }\n\t                        function pushNormal(x, y, z) {\n\t                            normals.push(x, y, z);\n\t                        }\n\t                        function pushUv(x, y) {\n\t                            uvs.push(x, y);\n\t                        }\n\t                        function checkTriangleVisibility(v1, v2, v3) {\n\t                            if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n\t                            _points3[0] = v1.positionScreen;\n\t                            _points3[1] = v2.positionScreen;\n\t                            _points3[2] = v3.positionScreen;\n\t                            return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n\t                        }\n\t                        function checkBackfaceCulling(v1, v2, v3) {\n\t                            return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n\t                        }\n\t                        function pushLine(a, b) {\n\t                            var v1 = _vertexPool[a];\n\t                            var v2 = _vertexPool[b];\n\t                            _line = getNextLineInPool();\n\t                            _line.id = object.id;\n\t                            _line.v1.copy(v1);\n\t                            _line.v2.copy(v2);\n\t                            _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n\t                            _line.renderOrder = object.renderOrder;\n\t                            _line.material = object.material;\n\t                            _renderData.elements.push(_line);\n\t                        }\n\t                        function pushTriangle(a, b, c) {\n\t                            var v1 = _vertexPool[a];\n\t                            var v2 = _vertexPool[b];\n\t                            var v3 = _vertexPool[c];\n\t                            if (checkTriangleVisibility(v1, v2, v3) === false) return;\n\t                            if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n\t                                _face = getNextFaceInPool();\n\t                                _face.id = object.id;\n\t                                _face.v1.copy(v1);\n\t                                _face.v2.copy(v2);\n\t                                _face.v3.copy(v3);\n\t                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                                _face.renderOrder = object.renderOrder;\n\t                                _face.normalModel.fromArray(normals, a * 3);\n\t                                _face.normalModel.applyMatrix3(normalMatrix).normalize();\n\t                                for (var i = 0; i < 3; i++) {\n\t                                    var normal = _face.vertexNormalsModel[i];\n\t                                    normal.fromArray(normals, arguments[i] * 3);\n\t                                    normal.applyMatrix3(normalMatrix).normalize();\n\t                                    var uv = _face.uvs[i];\n\t                                    uv.fromArray(uvs, arguments[i] * 2);\n\t                                }\n\t                                _face.vertexNormalsLength = 3;\n\t                                _face.material = object.material;\n\t                                _renderData.elements.push(_face);\n\t                            }\n\t                        }\n\t                        return {\n\t                            setObject: setObject,\n\t                            projectVertex: projectVertex,\n\t                            checkTriangleVisibility: checkTriangleVisibility,\n\t                            checkBackfaceCulling: checkBackfaceCulling,\n\t                            pushVertex: pushVertex,\n\t                            pushNormal: pushNormal,\n\t                            pushUv: pushUv,\n\t                            pushLine: pushLine,\n\t                            pushTriangle: pushTriangle\n\t                        };\n\t                    };\n\t                    var renderList = new RenderList();\n\t                    this.projectScene = function(scene, camera, sortObjects, sortElements) {\n\t                        _faceCount = 0;\n\t                        _lineCount = 0;\n\t                        _spriteCount = 0;\n\t                        _renderData.elements.length = 0;\n\t                        if (scene.autoUpdate === true) scene.updateMatrixWorld();\n\t                        if (camera.parent === null) camera.updateMatrixWorld();\n\t                        _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n\t                        _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\t                        _frustum.setFromMatrix(_viewProjectionMatrix);\n\t                        _objectCount = 0;\n\t                        _renderData.objects.length = 0;\n\t                        _renderData.lights.length = 0;\n\t                        scene.traverseVisible(function(object) {\n\t                            if (object instanceof THREE.Light) {\n\t                                _renderData.lights.push(object);\n\t                            } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n\t                                var material = object.material;\n\t                                if (material.visible === false) return;\n\t                                if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n\t                                    _object = getNextObjectInPool();\n\t                                    _object.id = object.id;\n\t                                    _object.object = object;\n\t                                    _vector3.setFromMatrixPosition(object.matrixWorld);\n\t                                    _vector3.applyProjection(_viewProjectionMatrix);\n\t                                    _object.z = _vector3.z;\n\t                                    _object.renderOrder = object.renderOrder;\n\t                                    _renderData.objects.push(_object);\n\t                                }\n\t                            }\n\t                        });\n\t                        if (sortObjects === true) {\n\t                            _renderData.objects.sort(painterSort);\n\t                        }\n\t                        for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n\t                            var object = _renderData.objects[o].object;\n\t                            var geometry = object.geometry;\n\t                            renderList.setObject(object);\n\t                            _modelMatrix = object.matrixWorld;\n\t                            _vertexCount = 0;\n\t                            if (object instanceof THREE.Mesh) {\n\t                                if (geometry instanceof THREE.BufferGeometry) {\n\t                                    var attributes = geometry.attributes;\n\t                                    var groups = geometry.groups;\n\t                                    if (attributes.position === undefined) continue;\n\t                                    var positions = attributes.position.array;\n\t                                    for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                        renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                                    }\n\t                                    if (attributes.normal !== undefined) {\n\t                                        var normals = attributes.normal.array;\n\t                                        for (var i = 0, l = normals.length; i < l; i += 3) {\n\t                                            renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n\t                                        }\n\t                                    }\n\t                                    if (attributes.uv !== undefined) {\n\t                                        var uvs = attributes.uv.array;\n\t                                        for (var i = 0, l = uvs.length; i < l; i += 2) {\n\t                                            renderList.pushUv(uvs[i], uvs[i + 1]);\n\t                                        }\n\t                                    }\n\t                                    if (geometry.index !== null) {\n\t                                        var indices = geometry.index.array;\n\t                                        if (groups.length > 0) {\n\t                                            for (var o = 0; o < groups.length; o++) {\n\t                                                var group = groups[o];\n\t                                                for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n\t                                                    renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                                }\n\t                                            }\n\t                                        } else {\n\t                                            for (var i = 0, l = indices.length; i < l; i += 3) {\n\t                                                renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                            }\n\t                                        }\n\t                                    } else {\n\t                                        for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n\t                                            renderList.pushTriangle(i, i + 1, i + 2);\n\t                                        }\n\t                                    }\n\t                                } else if (geometry instanceof THREE.Geometry) {\n\t                                    var vertices = geometry.vertices;\n\t                                    var faces = geometry.faces;\n\t                                    var faceVertexUvs = geometry.faceVertexUvs[0];\n\t                                    _normalMatrix.getNormalMatrix(_modelMatrix);\n\t                                    var material = object.material;\n\t                                    var isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t                                    var objectMaterials = isFaceMaterial === true ? object.material : null;\n\t                                    for (var v = 0, vl = vertices.length; v < vl; v++) {\n\t                                        var vertex = vertices[v];\n\t                                        _vector3.copy(vertex);\n\t                                        if (material.morphTargets === true) {\n\t                                            var morphTargets = geometry.morphTargets;\n\t                                            var morphInfluences = object.morphTargetInfluences;\n\t                                            for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n\t                                                var influence = morphInfluences[t];\n\t                                                if (influence === 0) continue;\n\t                                                var target = morphTargets[t];\n\t                                                var targetVertex = target.vertices[v];\n\t                                                _vector3.x += (targetVertex.x - vertex.x) * influence;\n\t                                                _vector3.y += (targetVertex.y - vertex.y) * influence;\n\t                                                _vector3.z += (targetVertex.z - vertex.z) * influence;\n\t                                            }\n\t                                        }\n\t                                        renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n\t                                    }\n\t                                    for (var f = 0, fl = faces.length; f < fl; f++) {\n\t                                        var face = faces[f];\n\t                                        material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n\t                                        if (material === undefined) continue;\n\t                                        var side = material.side;\n\t                                        var v1 = _vertexPool[face.a];\n\t                                        var v2 = _vertexPool[face.b];\n\t                                        var v3 = _vertexPool[face.c];\n\t                                        if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n\t                                        var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n\t                                        if (side !== THREE.DoubleSide) {\n\t                                            if (side === THREE.FrontSide && visible === false) continue;\n\t                                            if (side === THREE.BackSide && visible === true) continue;\n\t                                        }\n\t                                        _face = getNextFaceInPool();\n\t                                        _face.id = object.id;\n\t                                        _face.v1.copy(v1);\n\t                                        _face.v2.copy(v2);\n\t                                        _face.v3.copy(v3);\n\t                                        _face.normalModel.copy(face.normal);\n\t                                        if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                            _face.normalModel.negate();\n\t                                        }\n\t                                        _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                        var faceVertexNormals = face.vertexNormals;\n\t                                        for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n\t                                            var normalModel = _face.vertexNormalsModel[n];\n\t                                            normalModel.copy(faceVertexNormals[n]);\n\t                                            if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                                normalModel.negate();\n\t                                            }\n\t                                            normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                        }\n\t                                        _face.vertexNormalsLength = faceVertexNormals.length;\n\t                                        var vertexUvs = faceVertexUvs[f];\n\t                                        if (vertexUvs !== undefined) {\n\t                                            for (var u = 0; u < 3; u++) {\n\t                                                _face.uvs[u].copy(vertexUvs[u]);\n\t                                            }\n\t                                        }\n\t                                        _face.color = face.color;\n\t                                        _face.material = material;\n\t                                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                                        _face.renderOrder = object.renderOrder;\n\t                                        _renderData.elements.push(_face);\n\t                                    }\n\t                                }\n\t                            } else if (object instanceof THREE.Line) {\n\t                                if (geometry instanceof THREE.BufferGeometry) {\n\t                                    var attributes = geometry.attributes;\n\t                                    if (attributes.position !== undefined) {\n\t                                        var positions = attributes.position.array;\n\t                                        for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                            renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                                        }\n\t                                        if (geometry.index !== null) {\n\t                                            var indices = geometry.index.array;\n\t                                            for (var i = 0, l = indices.length; i < l; i += 2) {\n\t                                                renderList.pushLine(indices[i], indices[i + 1]);\n\t                                            }\n\t                                        } else {\n\t                                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                                            for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n\t                                                renderList.pushLine(i, i + 1);\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                } else if (geometry instanceof THREE.Geometry) {\n\t                                    _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n\t                                    var vertices = object.geometry.vertices;\n\t                                    if (vertices.length === 0) continue;\n\t                                    v1 = getNextVertexInPool();\n\t                                    v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n\t                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                                    for (var v = 1, vl = vertices.length; v < vl; v++) {\n\t                                        v1 = getNextVertexInPool();\n\t                                        v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n\t                                        if ((v + 1) % step > 0) continue;\n\t                                        v2 = _vertexPool[_vertexCount - 2];\n\t                                        _clippedVertex1PositionScreen.copy(v1.positionScreen);\n\t                                        _clippedVertex2PositionScreen.copy(v2.positionScreen);\n\t                                        if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n\t                                            _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n\t                                            _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n\t                                            _line = getNextLineInPool();\n\t                                            _line.id = object.id;\n\t                                            _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n\t                                            _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n\t                                            _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n\t                                            _line.renderOrder = object.renderOrder;\n\t                                            _line.material = object.material;\n\t                                            if (object.material.vertexColors === THREE.VertexColors) {\n\t                                                _line.vertexColors[0].copy(object.geometry.colors[v]);\n\t                                                _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n\t                                            }\n\t                                            _renderData.elements.push(_line);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            } else if (object instanceof THREE.Sprite) {\n\t                                _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n\t                                _vector4.applyMatrix4(_viewProjectionMatrix);\n\t                                var invW = 1 / _vector4.w;\n\t                                _vector4.z *= invW;\n\t                                if (_vector4.z >= -1 && _vector4.z <= 1) {\n\t                                    _sprite = getNextSpriteInPool();\n\t                                    _sprite.id = object.id;\n\t                                    _sprite.x = _vector4.x * invW;\n\t                                    _sprite.y = _vector4.y * invW;\n\t                                    _sprite.z = _vector4.z;\n\t                                    _sprite.renderOrder = object.renderOrder;\n\t                                    _sprite.object = object;\n\t                                    _sprite.rotation = object.rotation;\n\t                                    _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n\t                                    _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n\t                                    _sprite.material = object.material;\n\t                                    _renderData.elements.push(_sprite);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (sortElements === true) {\n\t                            _renderData.elements.sort(painterSort);\n\t                        }\n\t                        return _renderData;\n\t                    };\n\t                    function getNextObjectInPool() {\n\t                        if (_objectCount === _objectPoolLength) {\n\t                            var object = new THREE.RenderableObject();\n\t                            _objectPool.push(object);\n\t                            _objectPoolLength++;\n\t                            _objectCount++;\n\t                            return object;\n\t                        }\n\t                        return _objectPool[_objectCount++];\n\t                    }\n\t                    function getNextVertexInPool() {\n\t                        if (_vertexCount === _vertexPoolLength) {\n\t                            var vertex = new THREE.RenderableVertex();\n\t                            _vertexPool.push(vertex);\n\t                            _vertexPoolLength++;\n\t                            _vertexCount++;\n\t                            return vertex;\n\t                        }\n\t                        return _vertexPool[_vertexCount++];\n\t                    }\n\t                    function getNextFaceInPool() {\n\t                        if (_faceCount === _facePoolLength) {\n\t                            var face = new THREE.RenderableFace();\n\t                            _facePool.push(face);\n\t                            _facePoolLength++;\n\t                            _faceCount++;\n\t                            return face;\n\t                        }\n\t                        return _facePool[_faceCount++];\n\t                    }\n\t                    function getNextLineInPool() {\n\t                        if (_lineCount === _linePoolLength) {\n\t                            var line = new THREE.RenderableLine();\n\t                            _linePool.push(line);\n\t                            _linePoolLength++;\n\t                            _lineCount++;\n\t                            return line;\n\t                        }\n\t                        return _linePool[_lineCount++];\n\t                    }\n\t                    function getNextSpriteInPool() {\n\t                        if (_spriteCount === _spritePoolLength) {\n\t                            var sprite = new THREE.RenderableSprite();\n\t                            _spritePool.push(sprite);\n\t                            _spritePoolLength++;\n\t                            _spriteCount++;\n\t                            return sprite;\n\t                        }\n\t                        return _spritePool[_spriteCount++];\n\t                    }\n\t                    function painterSort(a, b) {\n\t                        if (a.renderOrder !== b.renderOrder) {\n\t                            return a.renderOrder - b.renderOrder;\n\t                        } else if (a.z !== b.z) {\n\t                            return b.z - a.z;\n\t                        } else if (a.id !== b.id) {\n\t                            return a.id - b.id;\n\t                        } else {\n\t                            return 0;\n\t                        }\n\t                    }\n\t                    function clipLine(s1, s2) {\n\t                        var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n\t                        if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n\t                            return true;\n\t                        } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n\t                            return false;\n\t                        } else {\n\t                            if (bc1near < 0) {\n\t                                alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n\t                            } else if (bc2near < 0) {\n\t                                alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n\t                            }\n\t                            if (bc1far < 0) {\n\t                                alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n\t                            } else if (bc2far < 0) {\n\t                                alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n\t                            }\n\t                            if (alpha2 < alpha1) {\n\t                                return false;\n\t                            } else {\n\t                                s1.lerp(s2, alpha1);\n\t                                s2.lerp(s1, 1 - alpha2);\n\t                                return true;\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t            }, function(module, exports, __webpack_require__) {\n\t                /*!\n\t\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t\t *\n\t\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t\t * Licensed under the MIT License.\n\t\t\t */\n\t                \"use strict\";\n\t                var isObject = __webpack_require__(10);\n\t                function isObjectObject(o) {\n\t                    return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t                }\n\t                module.exports = function isPlainObject(o) {\n\t                    var ctor, prot;\n\t                    if (isObjectObject(o) === false) return false;\n\t                    ctor = o.constructor;\n\t                    if (typeof ctor !== \"function\") return false;\n\t                    prot = ctor.prototype;\n\t                    if (isObjectObject(prot) === false) return false;\n\t                    if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                        return false;\n\t                    }\n\t                    return true;\n\t                };\n\t            }, function(module, exports) {\n\t                /*!\n\t\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t\t *\n\t\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t\t * Licensed under the MIT License.\n\t\t\t */\n\t                \"use strict\";\n\t                module.exports = function isObject(val) {\n\t                    return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t                };\n\t            }, function(module, exports, __webpack_require__) {\n\t                var __WEBPACK_AMD_DEFINE_RESULT__;\n\t                !function(undefined) {\n\t                    var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                        return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t                    };\n\t                    var defaultMaxListeners = 10;\n\t                    function init() {\n\t                        this._events = {};\n\t                        if (this._conf) {\n\t                            configure.call(this, this._conf);\n\t                        }\n\t                    }\n\t                    function configure(conf) {\n\t                        if (conf) {\n\t                            this._conf = conf;\n\t                            conf.delimiter && (this.delimiter = conf.delimiter);\n\t                            conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                            conf.wildcard && (this.wildcard = conf.wildcard);\n\t                            conf.newListener && (this.newListener = conf.newListener);\n\t                            if (this.wildcard) {\n\t                                this.listenerTree = {};\n\t                            }\n\t                        }\n\t                    }\n\t                    function EventEmitter(conf) {\n\t                        this._events = {};\n\t                        this.newListener = false;\n\t                        configure.call(this, conf);\n\t                    }\n\t                    function searchListenerTree(handlers, type, tree, i) {\n\t                        if (!tree) {\n\t                            return [];\n\t                        }\n\t                        var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                        if (i === typeLength && tree._listeners) {\n\t                            if (typeof tree._listeners === \"function\") {\n\t                                handlers && handlers.push(tree._listeners);\n\t                                return [ tree ];\n\t                            } else {\n\t                                for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                                    handlers && handlers.push(tree._listeners[leaf]);\n\t                                }\n\t                                return [ tree ];\n\t                            }\n\t                        }\n\t                        if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                            if (currentType === \"*\") {\n\t                                for (branch in tree) {\n\t                                    if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                                    }\n\t                                }\n\t                                return listeners;\n\t                            } else if (currentType === \"**\") {\n\t                                endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                                if (endReached && tree._listeners) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                                }\n\t                                for (branch in tree) {\n\t                                    if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                        if (branch === \"*\" || branch === \"**\") {\n\t                                            if (tree[branch]._listeners && !endReached) {\n\t                                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                            }\n\t                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                        } else if (branch === nextType) {\n\t                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                        } else {\n\t                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return listeners;\n\t                            }\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                        }\n\t                        xTree = tree[\"*\"];\n\t                        if (xTree) {\n\t                            searchListenerTree(handlers, type, xTree, i + 1);\n\t                        }\n\t                        xxTree = tree[\"**\"];\n\t                        if (xxTree) {\n\t                            if (i < typeLength) {\n\t                                if (xxTree._listeners) {\n\t                                    searchListenerTree(handlers, type, xxTree, typeLength);\n\t                                }\n\t                                for (branch in xxTree) {\n\t                                    if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                        if (branch === nextType) {\n\t                                            searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                        } else if (branch === currentType) {\n\t                                            searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                        } else {\n\t                                            isolatedBranch = {};\n\t                                            isolatedBranch[branch] = xxTree[branch];\n\t                                            searchListenerTree(handlers, type, {\n\t                                                \"**\": isolatedBranch\n\t                                            }, i + 1);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            } else if (xxTree._listeners) {\n\t                                searchListenerTree(handlers, type, xxTree, typeLength);\n\t                            } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                                searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    function growListenerTree(type, listener) {\n\t                        type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                        for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                            if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                                return;\n\t                            }\n\t                        }\n\t                        var tree = this.listenerTree;\n\t                        var name = type.shift();\n\t                        while (name) {\n\t                            if (!tree[name]) {\n\t                                tree[name] = {};\n\t                            }\n\t                            tree = tree[name];\n\t                            if (type.length === 0) {\n\t                                if (!tree._listeners) {\n\t                                    tree._listeners = listener;\n\t                                } else if (typeof tree._listeners === \"function\") {\n\t                                    tree._listeners = [ tree._listeners, listener ];\n\t                                } else if (isArray(tree._listeners)) {\n\t                                    tree._listeners.push(listener);\n\t                                    if (!tree._listeners.warned) {\n\t                                        var m = defaultMaxListeners;\n\t                                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                            m = this._events.maxListeners;\n\t                                        }\n\t                                        if (m > 0 && tree._listeners.length > m) {\n\t                                            tree._listeners.warned = true;\n\t                                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                            console.trace();\n\t                                        }\n\t                                    }\n\t                                }\n\t                                return true;\n\t                            }\n\t                            name = type.shift();\n\t                        }\n\t                        return true;\n\t                    }\n\t                    EventEmitter.prototype.delimiter = \".\";\n\t                    EventEmitter.prototype.setMaxListeners = function(n) {\n\t                        this._events || init.call(this);\n\t                        this._events.maxListeners = n;\n\t                        if (!this._conf) this._conf = {};\n\t                        this._conf.maxListeners = n;\n\t                    };\n\t                    EventEmitter.prototype.event = \"\";\n\t                    EventEmitter.prototype.once = function(event, fn) {\n\t                        this.many(event, 1, fn);\n\t                        return this;\n\t                    };\n\t                    EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                        var self = this;\n\t                        if (typeof fn !== \"function\") {\n\t                            throw new Error(\"many only accepts instances of Function\");\n\t                        }\n\t                        function listener() {\n\t                            if (--ttl === 0) {\n\t                                self.off(event, listener);\n\t                            }\n\t                            fn.apply(this, arguments);\n\t                        }\n\t                        listener._origin = fn;\n\t                        this.on(event, listener);\n\t                        return self;\n\t                    };\n\t                    EventEmitter.prototype.emit = function() {\n\t                        this._events || init.call(this);\n\t                        var type = arguments[0];\n\t                        if (type === \"newListener\" && !this.newListener) {\n\t                            if (!this._events.newListener) {\n\t                                return false;\n\t                            }\n\t                        }\n\t                        if (this._all) {\n\t                            var l = arguments.length;\n\t                            var args = new Array(l - 1);\n\t                            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                            for (i = 0, l = this._all.length; i < l; i++) {\n\t                                this.event = type;\n\t                                this._all[i].apply(this, args);\n\t                            }\n\t                        }\n\t                        if (type === \"error\") {\n\t                            if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                                if (arguments[1] instanceof Error) {\n\t                                    throw arguments[1];\n\t                                } else {\n\t                                    throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                                }\n\t                                return false;\n\t                            }\n\t                        }\n\t                        var handler;\n\t                        if (this.wildcard) {\n\t                            handler = [];\n\t                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                            searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                        } else {\n\t                            handler = this._events[type];\n\t                        }\n\t                        if (typeof handler === \"function\") {\n\t                            this.event = type;\n\t                            if (arguments.length === 1) {\n\t                                handler.call(this);\n\t                            } else if (arguments.length > 1) switch (arguments.length) {\n\t                              case 2:\n\t                                handler.call(this, arguments[1]);\n\t                                break;\n\t\n\t                              case 3:\n\t                                handler.call(this, arguments[1], arguments[2]);\n\t                                break;\n\t\n\t                              default:\n\t                                var l = arguments.length;\n\t                                var args = new Array(l - 1);\n\t                                for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                                handler.apply(this, args);\n\t                            }\n\t                            return true;\n\t                        } else if (handler) {\n\t                            var l = arguments.length;\n\t                            var args = new Array(l - 1);\n\t                            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                            var listeners = handler.slice();\n\t                            for (var i = 0, l = listeners.length; i < l; i++) {\n\t                                this.event = type;\n\t                                listeners[i].apply(this, args);\n\t                            }\n\t                            return listeners.length > 0 || !!this._all;\n\t                        } else {\n\t                            return !!this._all;\n\t                        }\n\t                    };\n\t                    EventEmitter.prototype.on = function(type, listener) {\n\t                        if (typeof type === \"function\") {\n\t                            this.onAny(type);\n\t                            return this;\n\t                        }\n\t                        if (typeof listener !== \"function\") {\n\t                            throw new Error(\"on only accepts instances of Function\");\n\t                        }\n\t                        this._events || init.call(this);\n\t                        this.emit(\"newListener\", type, listener);\n\t                        if (this.wildcard) {\n\t                            growListenerTree.call(this, type, listener);\n\t                            return this;\n\t                        }\n\t                        if (!this._events[type]) {\n\t                            this._events[type] = listener;\n\t                        } else if (typeof this._events[type] === \"function\") {\n\t                            this._events[type] = [ this._events[type], listener ];\n\t                        } else if (isArray(this._events[type])) {\n\t                            this._events[type].push(listener);\n\t                            if (!this._events[type].warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && this._events[type].length > m) {\n\t                                    this._events[type].warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    EventEmitter.prototype.onAny = function(fn) {\n\t                        if (typeof fn !== \"function\") {\n\t                            throw new Error(\"onAny only accepts instances of Function\");\n\t                        }\n\t                        if (!this._all) {\n\t                            this._all = [];\n\t                        }\n\t                        this._all.push(fn);\n\t                        return this;\n\t                    };\n\t                    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t                    EventEmitter.prototype.off = function(type, listener) {\n\t                        if (typeof listener !== \"function\") {\n\t                            throw new Error(\"removeListener only takes instances of Function\");\n\t                        }\n\t                        var handlers, leafs = [];\n\t                        if (this.wildcard) {\n\t                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                            leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                        } else {\n\t                            if (!this._events[type]) return this;\n\t                            handlers = this._events[type];\n\t                            leafs.push({\n\t                                _listeners: handlers\n\t                            });\n\t                        }\n\t                        for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                            var leaf = leafs[iLeaf];\n\t                            handlers = leaf._listeners;\n\t                            if (isArray(handlers)) {\n\t                                var position = -1;\n\t                                for (var i = 0, length = handlers.length; i < length; i++) {\n\t                                    if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                        position = i;\n\t                                        break;\n\t                                    }\n\t                                }\n\t                                if (position < 0) {\n\t                                    continue;\n\t                                }\n\t                                if (this.wildcard) {\n\t                                    leaf._listeners.splice(position, 1);\n\t                                } else {\n\t                                    this._events[type].splice(position, 1);\n\t                                }\n\t                                if (handlers.length === 0) {\n\t                                    if (this.wildcard) {\n\t                                        delete leaf._listeners;\n\t                                    } else {\n\t                                        delete this._events[type];\n\t                                    }\n\t                                }\n\t                                return this;\n\t                            } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                                if (this.wildcard) {\n\t                                    delete leaf._listeners;\n\t                                } else {\n\t                                    delete this._events[type];\n\t                                }\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    EventEmitter.prototype.offAny = function(fn) {\n\t                        var i = 0, l = 0, fns;\n\t                        if (fn && this._all && this._all.length > 0) {\n\t                            fns = this._all;\n\t                            for (i = 0, l = fns.length; i < l; i++) {\n\t                                if (fn === fns[i]) {\n\t                                    fns.splice(i, 1);\n\t                                    return this;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            this._all = [];\n\t                        }\n\t                        return this;\n\t                    };\n\t                    EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t                    EventEmitter.prototype.removeAllListeners = function(type) {\n\t                        if (arguments.length === 0) {\n\t                            !this._events || init.call(this);\n\t                            return this;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                            var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                            for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                                var leaf = leafs[iLeaf];\n\t                                leaf._listeners = null;\n\t                            }\n\t                        } else {\n\t                            if (!this._events[type]) return this;\n\t                            this._events[type] = null;\n\t                        }\n\t                        return this;\n\t                    };\n\t                    EventEmitter.prototype.listeners = function(type) {\n\t                        if (this.wildcard) {\n\t                            var handlers = [];\n\t                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                            searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                            return handlers;\n\t                        }\n\t                        this._events || init.call(this);\n\t                        if (!this._events[type]) this._events[type] = [];\n\t                        if (!isArray(this._events[type])) {\n\t                            this._events[type] = [ this._events[type] ];\n\t                        }\n\t                        return this._events[type];\n\t                    };\n\t                    EventEmitter.prototype.listenersAny = function() {\n\t                        if (this._all) {\n\t                            return this._all;\n\t                        } else {\n\t                            return [];\n\t                        }\n\t                    };\n\t                    if (true) {\n\t                        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                            return EventEmitter;\n\t                        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t                    } else if (typeof exports === \"object\") {\n\t                        exports.EventEmitter2 = EventEmitter;\n\t                    } else {\n\t                        window.EventEmitter2 = EventEmitter;\n\t                    }\n\t                }();\n\t            }, function(module, exports) {\n\t                module.exports = {\n\t                    Promise: window[\"Promise\"]\n\t                };\n\t            }, function(module, exports) {\n\t                (function() {\n\t                    var ResizeSensor = function(element, callback) {\n\t                        function EventQueue() {\n\t                            this.q = [];\n\t                            this.add = function(ev) {\n\t                                this.q.push(ev);\n\t                            };\n\t                            var i, j;\n\t                            this.call = function() {\n\t                                for (i = 0, j = this.q.length; i < j; i++) {\n\t                                    this.q[i].call();\n\t                                }\n\t                            };\n\t                        }\n\t                        function getComputedStyle(element, prop) {\n\t                            if (element.currentStyle) {\n\t                                return element.currentStyle[prop];\n\t                            } else if (window.getComputedStyle) {\n\t                                return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                            } else {\n\t                                return element.style[prop];\n\t                            }\n\t                        }\n\t                        function attachResizeEvent(element, resized) {\n\t                            if (!element.resizedAttached) {\n\t                                element.resizedAttached = new EventQueue();\n\t                                element.resizedAttached.add(resized);\n\t                            } else if (element.resizedAttached) {\n\t                                element.resizedAttached.add(resized);\n\t                                return;\n\t                            }\n\t                            element.resizeSensor = document.createElement(\"div\");\n\t                            element.resizeSensor.className = \"resize-sensor\";\n\t                            var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                            var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                            element.resizeSensor.style.cssText = style;\n\t                            element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                            element.appendChild(element.resizeSensor);\n\t                            if (!{\n\t                                fixed: 1,\n\t                                absolute: 1\n\t                            }[getComputedStyle(element, \"position\")]) {\n\t                                element.style.position = \"relative\";\n\t                            }\n\t                            var expand = element.resizeSensor.childNodes[0];\n\t                            var expandChild = expand.childNodes[0];\n\t                            var shrink = element.resizeSensor.childNodes[1];\n\t                            var shrinkChild = shrink.childNodes[0];\n\t                            var lastWidth, lastHeight;\n\t                            var reset = function() {\n\t                                expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                                expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                                expand.scrollLeft = expand.scrollWidth;\n\t                                expand.scrollTop = expand.scrollHeight;\n\t                                shrink.scrollLeft = shrink.scrollWidth;\n\t                                shrink.scrollTop = shrink.scrollHeight;\n\t                                lastWidth = element.offsetWidth;\n\t                                lastHeight = element.offsetHeight;\n\t                            };\n\t                            reset();\n\t                            var changed = function() {\n\t                                if (element.resizedAttached) {\n\t                                    element.resizedAttached.call();\n\t                                }\n\t                            };\n\t                            var addEvent = function(el, name, cb) {\n\t                                if (el.attachEvent) {\n\t                                    el.attachEvent(\"on\" + name, cb);\n\t                                } else {\n\t                                    el.addEventListener(name, cb);\n\t                                }\n\t                            };\n\t                            var onScroll = function() {\n\t                                if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                                    changed();\n\t                                }\n\t                                reset();\n\t                            };\n\t                            addEvent(expand, \"scroll\", onScroll);\n\t                            addEvent(shrink, \"scroll\", onScroll);\n\t                        }\n\t                        var elementType = Object.prototype.toString.call(element);\n\t                        var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                        if (isCollectionTyped) {\n\t                            var i = 0, j = element.length;\n\t                            for (;i < j; i++) {\n\t                                attachResizeEvent(element[i], callback);\n\t                            }\n\t                        } else {\n\t                            attachResizeEvent(element, callback);\n\t                        }\n\t                        this.detach = function() {\n\t                            if (isCollectionTyped) {\n\t                                var i = 0, j = element.length;\n\t                                for (;i < j; i++) {\n\t                                    ResizeSensor.detach(element[i]);\n\t                                }\n\t                            } else {\n\t                                ResizeSensor.detach(element);\n\t                            }\n\t                        };\n\t                    };\n\t                    ResizeSensor.detach = function(element) {\n\t                        if (element.resizeSensor) {\n\t                            element.removeChild(element.resizeSensor);\n\t                            delete element.resizeSensor;\n\t                            delete element.resizedAttached;\n\t                        }\n\t                    };\n\t                    if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                        module.exports = ResizeSensor;\n\t                    } else {\n\t                        window.ResizeSensor = ResizeSensor;\n\t                    }\n\t                })();\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var Vector3 = THREE.Vector3;\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                var Utils_1 = __webpack_require__(16);\n\t                var Widget_1 = __webpack_require__(17);\n\t                var TrendsManager_1 = __webpack_require__(18);\n\t                var Screen_1 = __webpack_require__(21);\n\t                var AxisMarks_1 = __webpack_require__(22);\n\t                var interfaces_1 = __webpack_require__(23);\n\t                var deps_1 = __webpack_require__(3);\n\t                var CHART_STATE_EVENTS = {\n\t                    INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t                    READY: \"ready\",\n\t                    DESTROY: \"destroy\",\n\t                    CHANGE: \"change\",\n\t                    TREND_CHANGE: \"trendChange\",\n\t                    TRENDS_CHANGE: \"trendsChange\",\n\t                    ZOOM: \"zoom\",\n\t                    RESIZE: \"resize\",\n\t                    SCROLL: \"scroll\",\n\t                    SCROLL_STOP: \"scrollStop\",\n\t                    PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t                };\n\t                var ChartState = function() {\n\t                    function ChartState(initialState, widgetsClasses, plugins) {\n\t                        if (widgetsClasses === void 0) {\n\t                            widgetsClasses = {};\n\t                        }\n\t                        if (plugins === void 0) {\n\t                            plugins = [];\n\t                        }\n\t                        this.data = {\n\t                            prevState: {},\n\t                            $el: null,\n\t                            zoom: 0,\n\t                            xAxis: {\n\t                                range: {\n\t                                    type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                                    from: 0,\n\t                                    to: 0,\n\t                                    scroll: 0,\n\t                                    zoom: 1,\n\t                                    padding: {\n\t                                        start: 0,\n\t                                        end: 5\n\t                                    },\n\t                                    margin: {\n\t                                        start: 0,\n\t                                        end: 5\n\t                                    }\n\t                                },\n\t                                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                                gridMinSize: 100,\n\t                                autoScroll: true,\n\t                                marks: []\n\t                            },\n\t                            yAxis: {\n\t                                range: {\n\t                                    type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                                    from: 0,\n\t                                    to: 0,\n\t                                    zoom: 1,\n\t                                    padding: {\n\t                                        start: 5,\n\t                                        end: 5\n\t                                    },\n\t                                    margin: {\n\t                                        start: 5,\n\t                                        end: 5\n\t                                    }\n\t                                },\n\t                                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                                gridMinSize: 50,\n\t                                marks: []\n\t                            },\n\t                            animations: {\n\t                                enabled: true,\n\t                                trendChangeSpeed: .5,\n\t                                trendChangeEase: void 0,\n\t                                zoomSpeed: .25,\n\t                                zoomEase: Linear.easeNone,\n\t                                scrollSpeed: .5,\n\t                                scrollEase: Linear.easeNone,\n\t                                autoScrollSpeed: 1,\n\t                                autoScrollEase: Linear.easeNone\n\t                            },\n\t                            autoRender: {\n\t                                enabled: true,\n\t                                fps: 0\n\t                            },\n\t                            autoResize: true,\n\t                            renderer: \"WebGLRenderer\",\n\t                            autoScroll: true,\n\t                            controls: {\n\t                                enabled: true\n\t                            },\n\t                            cursor: {\n\t                                dragMode: false,\n\t                                x: 0,\n\t                                y: 0\n\t                            },\n\t                            backgroundColor: 0,\n\t                            backgroundOpacity: 1,\n\t                            showStats: false,\n\t                            pluginsState: {},\n\t                            eventEmitterMaxListeners: 20\n\t                        };\n\t                        this.widgetsClasses = {};\n\t                        this.plugins = {};\n\t                        this.isReady = false;\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n\t                        this.widgetsClasses = widgetsClasses;\n\t                        this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                        initialState.trends = this.trendsManager.calculatedOptions;\n\t                        initialState = this.installPlugins(plugins, initialState);\n\t                        this.setState(initialState);\n\t                        this.setState({\n\t                            computedData: this.getComputedData()\n\t                        });\n\t                        this.savePrevState();\n\t                        this.screen = new Screen_1.Screen(this);\n\t                        this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                        this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                        this.initListeners();\n\t                        this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                        this.isReady = true;\n\t                        this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t                    }\n\t                    ChartState.prototype.destroy = function() {\n\t                        this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                        this.ee.removeAllListeners();\n\t                        this.data = {};\n\t                    };\n\t                    ChartState.prototype.onDestroy = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t                    };\n\t                    ChartState.prototype.onInitialStateApplied = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t                    };\n\t                    ChartState.prototype.onReady = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t                    };\n\t                    ChartState.prototype.onChange = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t                    };\n\t                    ChartState.prototype.onTrendChange = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t                    };\n\t                    ChartState.prototype.onTrendsChange = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t                    };\n\t                    ChartState.prototype.onScrollStop = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t                    };\n\t                    ChartState.prototype.onScroll = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t                    };\n\t                    ChartState.prototype.onZoom = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t                    };\n\t                    ChartState.prototype.onResize = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t                    };\n\t                    ChartState.prototype.onPluginsStateChange = function(cb) {\n\t                        return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t                    };\n\t                    ChartState.prototype.getTrend = function(trendName) {\n\t                        return this.trendsManager.getTrend(trendName);\n\t                    };\n\t                    ChartState.prototype.setState = function(newState, eventData, silent) {\n\t                        if (silent === void 0) {\n\t                            silent = false;\n\t                        }\n\t                        var stateData = this.data;\n\t                        var changedProps = {};\n\t                        for (var key in newState) {\n\t                            if (stateData[key] !== newState[key]) {\n\t                                changedProps[key] = newState[key];\n\t                            }\n\t                        }\n\t                        this.savePrevState(changedProps);\n\t                        var trendsData = {};\n\t                        if (newState.trends) for (var trendName in newState.trends) {\n\t                            var trendOptions = newState.trends[trendName];\n\t                            if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                            delete trendOptions.data;\n\t                        }\n\t                        var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                        this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n\t                        if (newStateContainsData) for (var trendName in trendsData) {\n\t                            this.data.trends[trendName].data = trendsData[trendName];\n\t                        }\n\t                        if (silent) return;\n\t                        var recalculateResult = this.recalculateState(changedProps);\n\t                        changedProps = recalculateResult.changedProps;\n\t                        this.emitChangedStateEvents(changedProps, eventData);\n\t                    };\n\t                    ChartState.prototype.recalculateState = function(changedProps) {\n\t                        var data = this.data;\n\t                        var patch = {};\n\t                        var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                        if (changedProps.widgets || !data.widgets) {\n\t                            patch.widgets = {};\n\t                            var widgetsOptions = data.widgets || {};\n\t                            for (var widgetName in this.widgetsClasses) {\n\t                                var WidgetClass = this.widgetsClasses[widgetName];\n\t                                var userOptions = widgetsOptions[widgetName] || {};\n\t                                var defaultOptions = WidgetClass.getDefaultOptions() || Widget_1.ChartWidget.getDefaultOptions();\n\t                                patch.widgets[widgetName] = Utils_1.Utils.deepMerge(defaultOptions, userOptions);\n\t                            }\n\t                        }\n\t                        var cursorOptions = changedProps.cursor;\n\t                        var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                        if (isMouseDrag) {\n\t                            var oldX = data.prevState.cursor.x;\n\t                            var currentX = cursorOptions.x;\n\t                            var currentScroll = data.xAxis.range.scroll;\n\t                            var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                            patch.xAxis = {\n\t                                range: {\n\t                                    scroll: currentScroll + deltaXVal\n\t                                }\n\t                            };\n\t                            actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                                xAxis: patch.xAxis\n\t                            });\n\t                        }\n\t                        var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                        var scrollXChanged = false;\n\t                        var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n\t                        if (needToRecalculateXAxis) {\n\t                            var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                            if (xAxisPatch) {\n\t                                scrollXChanged = true;\n\t                                patch = Utils_1.Utils.deepMerge(patch, {\n\t                                    xAxis: xAxisPatch\n\t                                });\n\t                                actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                                    xAxis: xAxisPatch\n\t                                });\n\t                            }\n\t                        }\n\t                        var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n\t                        if (needToRecalculateYAxis) {\n\t                            var yAxisPatch = this.recalculateYAxis(actualData);\n\t                            if (yAxisPatch) {\n\t                                patch = Utils_1.Utils.deepMerge(patch, {\n\t                                    yAxis: yAxisPatch\n\t                                });\n\t                                actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                                    yAxis: yAxisPatch\n\t                                });\n\t                            }\n\t                        }\n\t                        this.savePrevState(patch);\n\t                        var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                        patch.computedData = this.getComputedData(allChangedProps);\n\t                        this.savePrevState(patch);\n\t                        this.data = Utils_1.Utils.deepMerge(this.data, patch);\n\t                        return {\n\t                            changedProps: allChangedProps,\n\t                            patch: patch\n\t                        };\n\t                    };\n\t                    ChartState.prototype.getComputedData = function(changedProps) {\n\t                        var computeAll = !changedProps;\n\t                        var computedData = {};\n\t                        if (computeAll || changedProps.trends && this.trendsManager) {\n\t                            computedData.trends = {\n\t                                maxXVal: this.trendsManager.getEndXVal(),\n\t                                minXVal: this.trendsManager.getStartXVal()\n\t                            };\n\t                        }\n\t                        return computedData;\n\t                    };\n\t                    ChartState.prototype.savePrevState = function(changedProps) {\n\t                        if (!changedProps) changedProps = this.data;\n\t                        var prevState = this.data.prevState;\n\t                        Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n\t                    };\n\t                    ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                        var prevState = this.data.prevState;\n\t                        this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                        for (var key in changedProps) {\n\t                            this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                        }\n\t                        if (!this.isReady) return;\n\t                        var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                        scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                        var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                        scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                        var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                        zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                        var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                        resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                        var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                        pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t                    };\n\t                    ChartState.prototype.installPlugins = function(plugins, initialState) {\n\t                        var _this = this;\n\t                        initialState.pluginsState = {};\n\t                        plugins.forEach(function(plugin) {\n\t                            var PluginClass = plugin.constructor;\n\t                            var pluginName = PluginClass.NAME;\n\t                            PluginClass.pluginWidgets.forEach(function(PluginWidget) {\n\t                                return _this.widgetsClasses[PluginWidget.widgetName] = PluginWidget;\n\t                            });\n\t                            initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                            _this.plugins[pluginName] = plugin;\n\t                            plugin.setupChartState(_this);\n\t                        });\n\t                        return initialState;\n\t                    };\n\t                    ChartState.prototype.getPlugin = function(pluginName) {\n\t                        return this.plugins[pluginName];\n\t                    };\n\t                    ChartState.prototype.initListeners = function() {\n\t                        var _this = this;\n\t                        this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                            _this.handleTrendsChange(changedTrends, newData);\n\t                        });\n\t                    };\n\t                    ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                        for (var trendName in changedTrends) {\n\t                            this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                        }\n\t                    };\n\t                    ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                        var axisRange = actualData.xAxis.range;\n\t                        var patch = {\n\t                            range: {}\n\t                        };\n\t                        var isInitialize = axisRange.zeroVal == void 0;\n\t                        var zeroVal, scaleFactor;\n\t                        var zoom = axisRange.zoom;\n\t                        if (axisRange.isMirrorMode) {\n\t                            Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                        }\n\t                        if (isInitialize) {\n\t                            zeroVal = axisRange.from;\n\t                            scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                            patch = {\n\t                                range: {\n\t                                    zeroVal: zeroVal,\n\t                                    scaleFactor: scaleFactor\n\t                                }\n\t                            };\n\t                        } else {\n\t                            zeroVal = axisRange.zeroVal;\n\t                            scaleFactor = axisRange.scaleFactor;\n\t                            if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                                if (changedProps.xAxis.range.zoom) {\n\t                                    Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                                }\n\t                                var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                                patch.range.scroll = axisRange.from - zeroVal;\n\t                                patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                                return patch;\n\t                            }\n\t                        }\n\t                        do {\n\t                            var from = zeroVal + axisRange.scroll;\n\t                            var to = from + actualData.width / (scaleFactor * zoom);\n\t                            var rangeLength = to - from;\n\t                            var needToRecalculateZoom = false;\n\t                            var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                            var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                            needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                            if (needToRecalculateZoom) {\n\t                                var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                                var zoom = zoom * fixScale;\n\t                                patch.range.zoom = zoom;\n\t                            }\n\t                        } while (needToRecalculateZoom);\n\t                        patch.range.from = from;\n\t                        patch.range.to = to;\n\t                        return patch;\n\t                    };\n\t                    ChartState.prototype.recalculateYAxis = function(actualData) {\n\t                        var patch = {\n\t                            range: {}\n\t                        };\n\t                        var yAxisRange = actualData.yAxis.range;\n\t                        var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                        var trends = this.trendsManager;\n\t                        var trendsEndXVal = trends.getEndXVal();\n\t                        var trendsStartXVal = trends.getStartXVal();\n\t                        var xRange = actualData.xAxis.range;\n\t                        var xFrom = xRange.from, xTo = xRange.to;\n\t                        var xRangeLength = xTo - xFrom;\n\t                        var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                        if (xTo > trendsEndXVal) {\n\t                            xTo = trendsEndXVal;\n\t                            xFrom = xTo - xRangeLength;\n\t                        } else if (xFrom < trendsStartXVal) {\n\t                            xFrom = trendsStartXVal;\n\t                            xTo = xFrom + xRangeLength;\n\t                        }\n\t                        var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                        var minY = trends.getMinYVal(xFrom, xTo);\n\t                        var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                        if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                            if (trendLastY > maxY) maxY = trendLastY;\n\t                            if (trendLastY < minY) minY = trendLastY;\n\t                        }\n\t                        if (yAxisRange.isMirrorMode) {\n\t                            if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                            var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                            var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                            var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                            maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                            minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                        }\n\t                        var margin = yAxisRange.margin;\n\t                        var padding = {\n\t                            start: yAxisRange.padding.start + margin.start,\n\t                            end: yAxisRange.padding.end + margin.end\n\t                        };\n\t                        if (padding.end + padding.start >= actualData.height) {\n\t                            Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n\t                        }\n\t                        var rangeLength = maxY - minY;\n\t                        var paddingTopInPercents = padding.end / actualData.height;\n\t                        var paddingBottomInPercents = padding.start / actualData.height;\n\t                        var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                        var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                        var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                        var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                        if (isInitialize) {\n\t                            zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                            scaleFactor = actualData.height / (toVal - fromVal);\n\t                            patch = {\n\t                                range: {\n\t                                    zeroVal: zeroVal,\n\t                                    scaleFactor: scaleFactor\n\t                                }\n\t                            };\n\t                            needToZoom = true;\n\t                        } else {\n\t                            scaleFactor = yAxisRange.scaleFactor;\n\t                            zeroVal = yAxisRange.zeroVal;\n\t                            var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                            var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                            needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                        }\n\t                        if (!needToZoom) return null;\n\t                        scroll = fromVal - zeroVal;\n\t                        zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                        var currentAxisRange = this.data.yAxis.range;\n\t                        if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                        if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                        if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                        if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                        return patch;\n\t                    };\n\t                    ChartState.prototype.zoom = function(zoomValue, origin) {\n\t                        var _this = this;\n\t                        if (origin === void 0) {\n\t                            origin = .5;\n\t                        }\n\t                        var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                        var newZoom = zoom * zoomValue;\n\t                        var currentRange = this.data.width / (scaleFactor * zoom);\n\t                        var nextRange = this.data.width / (scaleFactor * newZoom);\n\t                        var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                        this.setState({\n\t                            xAxis: {\n\t                                range: {\n\t                                    zoom: newZoom,\n\t                                    scroll: newScroll\n\t                                }\n\t                            }\n\t                        });\n\t                        return new deps_1.Promise(function(resolve) {\n\t                            var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n\t                            setTimeout(resolve, animationTime * 1e3);\n\t                        });\n\t                    };\n\t                    ChartState.prototype.zoomToRange = function(range, origin) {\n\t                        var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                        var currentRange = this.data.width / (scaleFactor * zoom);\n\t                        return this.zoom(currentRange / range, origin);\n\t                    };\n\t                    ChartState.prototype.scrollToEnd = function() {\n\t                        var _this = this;\n\t                        var state = this.data;\n\t                        var endXVal = this.trendsManager.getEndXVal();\n\t                        var range = state.xAxis.range;\n\t                        var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                        this.setState({\n\t                            xAxis: {\n\t                                range: {\n\t                                    scroll: scroll\n\t                                }\n\t                            }\n\t                        });\n\t                        return new deps_1.Promise(function(resolve) {\n\t                            var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n\t                            setTimeout(resolve, animationTime * 1e3);\n\t                        });\n\t                    };\n\t                    ChartState.prototype.getPointOnXAxis = function(xVal) {\n\t                        var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                        return (xVal - zeroVal) * scaleFactor * zoom;\n\t                    };\n\t                    ChartState.prototype.getPointOnYAxis = function(yVal) {\n\t                        var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                        return (yVal - zeroVal) * scaleFactor * zoom;\n\t                    };\n\t                    ChartState.prototype.getValueOnXAxis = function(x) {\n\t                        return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t                    };\n\t                    ChartState.prototype.valueToPxByXAxis = function(xVal) {\n\t                        return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n\t                    };\n\t                    ChartState.prototype.valueToPxByYAxis = function(yVal) {\n\t                        return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n\t                    };\n\t                    ChartState.prototype.pxToValueByXAxis = function(xVal) {\n\t                        return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n\t                    };\n\t                    ChartState.prototype.pxToValueByYAxis = function(yVal) {\n\t                        return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n\t                    };\n\t                    ChartState.prototype.getValueByScreenX = function(x) {\n\t                        var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                        return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t                    };\n\t                    ChartState.prototype.getValueByScreenY = function(y) {\n\t                        var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                        return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t                    };\n\t                    ChartState.prototype.getScreenXByValue = function(xVal) {\n\t                        var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                        return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t                    };\n\t                    ChartState.prototype.getScreenYByValue = function(yVal) {\n\t                        var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                        return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t                    };\n\t                    ChartState.prototype.getScreenXByPoint = function(xVal) {\n\t                        return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t                    };\n\t                    ChartState.prototype.getPointByScreenX = function(screenX) {\n\t                        return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t                    };\n\t                    ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n\t                        return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t                    };\n\t                    ChartState.prototype.getScreenLeftVal = function() {\n\t                        return this.getValueByScreenX(0);\n\t                    };\n\t                    ChartState.prototype.getScreenRightVal = function() {\n\t                        return this.getValueByScreenX(this.data.width);\n\t                    };\n\t                    ChartState.prototype.getPaddingRight = function() {\n\t                        return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n\t                    };\n\t                    return ChartState;\n\t                }();\n\t                exports.ChartState = ChartState;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var deps_1 = __webpack_require__(3);\n\t                var EventEmitter = function() {\n\t                    function EventEmitter() {\n\t                        this.ee = new deps_1.EE2();\n\t                    }\n\t                    EventEmitter.prototype.emit = function(eventName) {\n\t                        var args = [];\n\t                        for (var _i = 1; _i < arguments.length; _i++) {\n\t                            args[_i - 1] = arguments[_i];\n\t                        }\n\t                        (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                        var _a;\n\t                    };\n\t                    EventEmitter.prototype.on = function(eventName, callback) {\n\t                        return this.ee.on(eventName, callback);\n\t                    };\n\t                    EventEmitter.prototype.off = function(eventName, callback) {\n\t                        return this.ee.off(eventName, callback);\n\t                    };\n\t                    EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                        var _this = this;\n\t                        this.on(eventName, callback);\n\t                        return function() {\n\t                            return _this.off(eventName, callback);\n\t                        };\n\t                    };\n\t                    EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                        this.ee.setMaxListeners(listenersCount);\n\t                    };\n\t                    EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                        this.ee.removeAllListeners(eventName);\n\t                    };\n\t                    return EventEmitter;\n\t                }();\n\t                exports.EventEmitter = EventEmitter;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var deps_1 = __webpack_require__(3);\n\t                function deepmerge(target, src, mergeArrays) {\n\t                    if (mergeArrays === void 0) {\n\t                        mergeArrays = true;\n\t                    }\n\t                    var array = Array.isArray(src);\n\t                    var dst = array && [] || {};\n\t                    if (array) {\n\t                        target = target || [];\n\t                        if (mergeArrays) {\n\t                            dst = dst.concat(target);\n\t                        }\n\t                        src.forEach(function(e, i) {\n\t                            if (typeof dst[i] === \"undefined\") {\n\t                                dst[i] = e;\n\t                            } else if (typeof e === \"object\") {\n\t                                dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                            } else {\n\t                                if (target.indexOf(e) === -1) {\n\t                                    dst.push(e);\n\t                                }\n\t                            }\n\t                        });\n\t                    } else {\n\t                        if (target && typeof target === \"object\") {\n\t                            Object.keys(target).forEach(function(key) {\n\t                                dst[key] = target[key];\n\t                            });\n\t                        }\n\t                        Object.keys(src).forEach(function(key) {\n\t                            if (typeof src[key] !== \"object\" || !src[key]) {\n\t                                dst[key] = src[key];\n\t                            } else {\n\t                                if (!target[key]) {\n\t                                    dst[key] = src[key];\n\t                                } else {\n\t                                    dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                                }\n\t                            }\n\t                        });\n\t                    }\n\t                    return dst;\n\t                }\n\t                var Utils = function() {\n\t                    function Utils() {}\n\t                    Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                        return deepmerge(obj1, obj2, mergeArrays);\n\t                    };\n\t                    Utils.deepCopy = function(obj) {\n\t                        return JSON.parse(JSON.stringify(obj));\n\t                    };\n\t                    Utils.toFixed = function(num, digitsCount) {\n\t                        var maxDigits = 15;\n\t                        var result = \"\";\n\t                        var intVal = Math.floor(num);\n\t                        var intStr = intVal.toString();\n\t                        var lengthDiff = digitsCount - intStr.length;\n\t                        if (lengthDiff > 0) {\n\t                            result = \"0\".repeat(lengthDiff) + intStr;\n\t                        } else {\n\t                            result = intStr;\n\t                        }\n\t                        var afterPointDigitsCount = maxDigits - intStr.length;\n\t                        var afterPointStr = num.toString().split(\".\")[1];\n\t                        if (afterPointStr) {\n\t                            result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                        }\n\t                        return result;\n\t                    };\n\t                    Utils.bindEvent = function() {};\n\t                    Utils.createTexture = function(width, height, fn) {\n\t                        var canvas = document.createElement(\"canvas\");\n\t                        canvas.width = width;\n\t                        canvas.height = height;\n\t                        var ctx = canvas.getContext(\"2d\");\n\t                        fn(ctx);\n\t                        var texture = new THREE.Texture(canvas);\n\t                        texture.needsUpdate = true;\n\t                        return texture;\n\t                    };\n\t                    Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                        var texture = this.createTexture(width, height, fn);\n\t                        texture.minFilter = THREE.NearestFilter;\n\t                        return texture;\n\t                    };\n\t                    Utils.error = function(msg) {\n\t                        console.error(\"Chart error: \" + msg);\n\t                        throw \"Chart: \" + msg;\n\t                    };\n\t                    Utils.warn = function(msg) {\n\t                        console.warn(\"Chart warning: \" + msg);\n\t                    };\n\t                    Utils.getUid = function() {\n\t                        return this.currentId++;\n\t                    };\n\t                    Utils.getDistance = function(num1, num2) {\n\t                        return Math.max(num1, num2) - Math.min(num1, num2);\n\t                    };\n\t                    Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                        var mid;\n\t                        var lo = 0;\n\t                        var hi = arr.length - 1;\n\t                        while (hi - lo > 1) {\n\t                            mid = Math.floor((lo + hi) / 2);\n\t                            if (arr[mid][key] < num) {\n\t                                lo = mid;\n\t                            } else {\n\t                                hi = mid;\n\t                            }\n\t                        }\n\t                        if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                            return lo;\n\t                        }\n\t                        return hi;\n\t                    };\n\t                    Utils.binarySearchClosest = function(arr, num, key) {\n\t                        var ind = this.binarySearchClosestInd(arr, num, key);\n\t                        return arr[ind];\n\t                    };\n\t                    Utils.rectsIntersect = function(r1, r2) {\n\t                        var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                        var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                        var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                        return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t                    };\n\t                    /**!\r\n\t\t\t     * @preserve $.parseColor\r\n\t\t\t     * Copyright 2011 THEtheChad Elliott\r\n\t\t\t     * Released under the MIT and GPL licenses.\r\n\t\t\t     */\n\t                    Utils.parseColor = function(color) {\n\t                        var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                        if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by $.parseColor\");\n\t                        isNaN(cache[3]) && (cache[3] = 1);\n\t                        return cache;\n\t                    };\n\t                    Utils.getHexColor = function(str) {\n\t                        var rgb = this.parseColor(str);\n\t                        return (rgb[0] << 8 * 2) + (rgb[1] << 8) + rgb[2];\n\t                    };\n\t                    Utils.throttle = function(func, ms) {\n\t                        var isThrottled = false, savedArgs, savedThis;\n\t                        function wrapper() {\n\t                            if (isThrottled) {\n\t                                savedArgs = arguments;\n\t                                savedThis = this;\n\t                                return;\n\t                            }\n\t                            func.apply(this, arguments);\n\t                            isThrottled = true;\n\t                            setTimeout(function() {\n\t                                isThrottled = false;\n\t                                if (savedArgs) {\n\t                                    wrapper.apply(savedThis, savedArgs);\n\t                                    savedArgs = savedThis = null;\n\t                                }\n\t                            }, ms);\n\t                        }\n\t                        return wrapper;\n\t                    };\n\t                    Utils.msToTimeString = function(timestamp) {\n\t                        var h = Math.floor(timestamp / 36e4);\n\t                        var m = Math.floor(timestamp / 6e4);\n\t                        var s = Math.floor(timestamp / 1e3);\n\t                        return h + \":\" + m + \":\" + s;\n\t                    };\n\t                    Utils.getRandomItem = function(arr) {\n\t                        var ind = Math.floor(Math.random() * arr.length);\n\t                        return arr[ind];\n\t                    };\n\t                    Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                        if (excludeProps === void 0) {\n\t                            excludeProps = [];\n\t                        }\n\t                        for (var key in props) {\n\t                            if (excludeProps.indexOf(key) !== -1) continue;\n\t                            if (srcObject[key] == void 0) continue;\n\t                            if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                                this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                            } else {\n\t                                dstObject[key] = this.deepCopy(srcObject[key]);\n\t                            }\n\t                        }\n\t                    };\n\t                    Utils.currentId = 1;\n\t                    return Utils;\n\t                }();\n\t                exports.Utils = Utils;\n\t            }, function(module, exports) {\n\t                \"use strict\";\n\t                var ChartWidget = function() {\n\t                    function ChartWidget(chartState) {\n\t                        this.unsubscribers = [];\n\t                        this.chartState = chartState;\n\t                        this.bindEvents();\n\t                    }\n\t                    ChartWidget.prototype.bindEvents = function() {};\n\t                    ChartWidget.prototype.bindEvent = function() {\n\t                        var args = [];\n\t                        for (var _i = 0; _i < arguments.length; _i++) {\n\t                            args[_i - 0] = arguments[_i];\n\t                        }\n\t                        var unsubscribers = [];\n\t                        if (!Array.isArray(args[0])) {\n\t                            unsubscribers.push(args[0]);\n\t                        } else {\n\t                            unsubscribers.push.apply(unsubscribers, args);\n\t                        }\n\t                        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                        var _a;\n\t                    };\n\t                    ChartWidget.prototype.unbindEvents = function() {\n\t                        this.unsubscribers.forEach(function(unsubscriber) {\n\t                            return unsubscriber();\n\t                        });\n\t                        this.unsubscribers.length = 0;\n\t                    };\n\t                    ChartWidget.getDefaultOptions = function() {\n\t                        return {\n\t                            enabled: true\n\t                        };\n\t                    };\n\t                    ChartWidget.widgetName = \"\";\n\t                    return ChartWidget;\n\t                }();\n\t                exports.ChartWidget = ChartWidget;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var Trend_1 = __webpack_require__(19);\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                var EVENTS = {\n\t                    SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t                };\n\t                var TrendsManager = function() {\n\t                    function TrendsManager(state, initialState) {\n\t                        this.trends = {};\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.chartState = state;\n\t                        var trendsCalculatedOptions = {};\n\t                        for (var trendName in initialState.trends) {\n\t                            var trend = this.createTrend(state, trendName, initialState);\n\t                            trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                        }\n\t                        this.calculatedOptions = trendsCalculatedOptions;\n\t                        this.bindEvents();\n\t                    }\n\t                    TrendsManager.prototype.getTrend = function(trendName) {\n\t                        return this.trends[trendName];\n\t                    };\n\t                    TrendsManager.prototype.getEnabledTrends = function() {\n\t                        var enabledTrends = [];\n\t                        var allTrends = this.trends;\n\t                        for (var trendName in allTrends) {\n\t                            var trend = allTrends[trendName];\n\t                            trend.getOptions().enabled && enabledTrends.push(trend);\n\t                        }\n\t                        return enabledTrends;\n\t                    };\n\t                    TrendsManager.prototype.getStartXVal = function() {\n\t                        var trends = this.getEnabledTrends();\n\t                        return trends[0].getData()[0].xVal;\n\t                    };\n\t                    TrendsManager.prototype.getEndXVal = function() {\n\t                        var trends = this.getEnabledTrends();\n\t                        var firstTrendData = trends[0].getData();\n\t                        return firstTrendData[firstTrendData.length - 1].xVal;\n\t                    };\n\t                    TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                        var trends = this.getEnabledTrends();\n\t                        var compareFn;\n\t                        var result;\n\t                        if (extremumIsMax) {\n\t                            result = -Infinity;\n\t                            compareFn = Math.max;\n\t                        } else {\n\t                            result = Infinity;\n\t                            compareFn = Math.min;\n\t                        }\n\t                        for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                            var trend = trends_1[_i];\n\t                            var trendData = trend.getData(fromX, toX);\n\t                            var trendYValues = trendData.map(function(dataItem) {\n\t                                return dataItem.yVal;\n\t                            });\n\t                            result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                        }\n\t                        if (result == Infinity || result == -Infinity) result = NaN;\n\t                        return result;\n\t                    };\n\t                    TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                        return this.getExtremumYVal(true, fromX, toX);\n\t                    };\n\t                    TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                        return this.getExtremumYVal(false, fromX, toX);\n\t                    };\n\t                    TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                        return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t                    };\n\t                    TrendsManager.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.chartState.onInitialStateApplied(function() {\n\t                            return _this.onInitialStateAppliedHandler();\n\t                        });\n\t                    };\n\t                    TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                        var _this = this;\n\t                        var _loop_1 = function(trendName) {\n\t                            this_1.trends[trendName].segments.onRebuild(function() {\n\t                                return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                            });\n\t                        };\n\t                        var this_1 = this;\n\t                        for (var trendName in this.trends) {\n\t                            _loop_1(trendName);\n\t                        }\n\t                    };\n\t                    TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                        var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                        this.trends[trendName] = trend;\n\t                        return trend;\n\t                    };\n\t                    return TrendsManager;\n\t                }();\n\t                exports.TrendsManager = TrendsManager;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var Utils_1 = __webpack_require__(16);\n\t                var TrendSegments_1 = __webpack_require__(20);\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                var deps_1 = __webpack_require__(3);\n\t                var EVENTS = {\n\t                    CHANGE: \"Change\",\n\t                    PREPEND_REQUEST: \"prependRequest\"\n\t                };\n\t                (function(TREND_TYPE) {\n\t                    TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t                    TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t                })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t                var TREND_TYPE = exports.TREND_TYPE;\n\t                var DEFAULT_OPTIONS = {\n\t                    enabled: true,\n\t                    type: TREND_TYPE.LINE,\n\t                    data: [],\n\t                    maxSegmentLength: 1e3,\n\t                    lineWidth: 2,\n\t                    lineColor: 16777215,\n\t                    hasGradient: true,\n\t                    hasBeacon: false,\n\t                    settingsForTypes: {\n\t                        CANDLE: {\n\t                            minSegmentLengthInPx: 20,\n\t                            maxSegmentLengthInPx: 40\n\t                        },\n\t                        LINE: {\n\t                            minSegmentLengthInPx: 2,\n\t                            maxSegmentLengthInPx: 10\n\t                        }\n\t                    }\n\t                };\n\t                var Trend = function() {\n\t                    function Trend(chartState, trendName, initialState) {\n\t                        this.minXVal = Infinity;\n\t                        this.minYVal = Infinity;\n\t                        this.maxXVal = -Infinity;\n\t                        this.maxYVal = -Infinity;\n\t                        var options = initialState.trends[trendName];\n\t                        this.name = trendName;\n\t                        this.chartState = chartState;\n\t                        this.calculatedOptions = Utils_1.Utils.deepMerge(DEFAULT_OPTIONS, options);\n\t                        this.calculatedOptions.name = trendName;\n\t                        if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                        this.calculatedOptions.dataset = [];\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.bindEvents();\n\t                    }\n\t                    Trend.prototype.onInitialStateApplied = function() {\n\t                        this.segments = new TrendSegments_1.TrendSegments(this.chartState, this);\n\t                    };\n\t                    Trend.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        var chartState = this.chartState;\n\t                        chartState.onInitialStateApplied(function() {\n\t                            return _this.onInitialStateApplied();\n\t                        });\n\t                        chartState.onScrollStop(function() {\n\t                            return _this.checkForPrependRequest();\n\t                        });\n\t                        chartState.onZoom(function() {\n\t                            return _this.checkForPrependRequest();\n\t                        });\n\t                        chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                            return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                        });\n\t                        chartState.onDestroy(function() {\n\t                            return _this.ee.removeAllListeners();\n\t                        });\n\t                    };\n\t                    Trend.prototype.getCalculatedOptions = function() {\n\t                        return this.calculatedOptions;\n\t                    };\n\t                    Trend.prototype.appendData = function(rawData) {\n\t                        var options = this.getOptions();\n\t                        var newData = Trend.prepareData(rawData, this.getData());\n\t                        var updatedTrendData = options.data.concat(newData);\n\t                        this.changeData(updatedTrendData, newData);\n\t                    };\n\t                    Trend.prototype.prependData = function(rawData) {\n\t                        var options = this.getOptions();\n\t                        var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                        var updatedTrendData = newData.concat(options.data);\n\t                        this.changeData(updatedTrendData, newData);\n\t                    };\n\t                    Trend.prototype.changeData = function(allData, newData) {\n\t                        for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                            var item = newData_1[_i];\n\t                            if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                            if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                            if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                            if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                        }\n\t                        var options = this.getOptions();\n\t                        var statePatch = {\n\t                            trends: (_a = {}, _a[options.name] = {\n\t                                data: allData\n\t                            }, _a)\n\t                        };\n\t                        this.chartState.setState(statePatch, newData);\n\t                        var _a;\n\t                    };\n\t                    Trend.prototype.getData = function(fromX, toX) {\n\t                        var data = this.getOptions().data;\n\t                        if (fromX == void 0 && toX == void 0) return data;\n\t                        fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                        toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                        var filteredData = [];\n\t                        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                            var item = data_1[_i];\n\t                            if (item.xVal < fromX) continue;\n\t                            if (item.xVal > toX) break;\n\t                            filteredData.push(item);\n\t                        }\n\t                        return filteredData;\n\t                    };\n\t                    Trend.prototype.getFirstItem = function() {\n\t                        return this.getOptions().data[0];\n\t                    };\n\t                    Trend.prototype.getLastItem = function() {\n\t                        var data = this.getOptions().data;\n\t                        return data[data.length - 1];\n\t                    };\n\t                    Trend.prototype.getOptions = function() {\n\t                        return this.chartState.data.trends[this.name];\n\t                    };\n\t                    Trend.prototype.setOptions = function(options) {\n\t                        this.chartState.setState({\n\t                            trends: (_a = {}, _a[this.name] = options, _a)\n\t                        });\n\t                        var _a;\n\t                    };\n\t                    Trend.prototype.onPrependRequest = function(cb) {\n\t                        var _this = this;\n\t                        this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                        return function() {\n\t                            _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                        };\n\t                    };\n\t                    Trend.prototype.onChange = function(cb) {\n\t                        var _this = this;\n\t                        this.ee.on(EVENTS.CHANGE, cb);\n\t                        return function() {\n\t                            _this.ee.off(EVENTS.CHANGE, cb);\n\t                        };\n\t                    };\n\t                    Trend.prototype.onDataChange = function(cb) {\n\t                        var _this = this;\n\t                        var onChangeCb = function(changedOptions, newData) {\n\t                            if (newData) cb(newData);\n\t                        };\n\t                        this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                        return function() {\n\t                            _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                        };\n\t                    };\n\t                    Trend.prototype.checkForPrependRequest = function() {\n\t                        var _this = this;\n\t                        if (this.prependRequest) return;\n\t                        var chartState = this.chartState;\n\t                        var minXVal = chartState.data.computedData.trends.minXVal;\n\t                        var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                        var needToRequest = minScreenX > 0;\n\t                        var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                        var requestedDataLength = to - from;\n\t                        if (!needToRequest) return;\n\t                        this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                            _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                        });\n\t                        this.prependRequest.then(function(newData) {\n\t                            _this.prependData(newData);\n\t                            _this.prependRequest = null;\n\t                        }, function() {\n\t                            _this.prependRequest = null;\n\t                        });\n\t                    };\n\t                    Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                        if (isPrepend === void 0) {\n\t                            isPrepend = false;\n\t                        }\n\t                        var data = [];\n\t                        if (typeof newData[0] == \"number\") {\n\t                            currentData = currentData || [];\n\t                            var initialItem = void 0;\n\t                            var xVal = void 0;\n\t                            if (isPrepend) {\n\t                                initialItem = currentData[0];\n\t                                xVal = initialItem.xVal - newData.length;\n\t                            } else {\n\t                                initialItem = currentData[currentData.length - 1];\n\t                                xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                            }\n\t                            for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                                var yVal = _a[_i];\n\t                                data.push({\n\t                                    xVal: xVal,\n\t                                    yVal: yVal,\n\t                                    id: Utils_1.Utils.getUid()\n\t                                });\n\t                                xVal++;\n\t                            }\n\t                        } else {\n\t                            data = newData;\n\t                        }\n\t                        return data;\n\t                    };\n\t                    return Trend;\n\t                }();\n\t                exports.Trend = Trend;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                var Vector3 = THREE.Vector3;\n\t                var Trend_1 = __webpack_require__(19);\n\t                var Utils_1 = __webpack_require__(16);\n\t                var MAX_ANIMATED_SEGMENTS = 100;\n\t                var EVENTS = {\n\t                    REBUILD: \"rebuild\",\n\t                    DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t                    ANIMATION_FRAME: \"animationFrame\"\n\t                };\n\t                var TrendSegments = function() {\n\t                    function TrendSegments(chartState, trend) {\n\t                        this.segmentsById = {};\n\t                        this.segments = [];\n\t                        this.animatedSegmentsIds = [];\n\t                        this.segmentsLength = 0;\n\t                        this.animatedSegmentsForAppend = [];\n\t                        this.animatedSegmentsForPrepend = [];\n\t                        this.nextEmptyId = 0;\n\t                        this.startSegmentId = 0;\n\t                        this.endSegmentId = 0;\n\t                        this.chartState = chartState;\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.trend = trend;\n\t                        this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                        this.tryToRebuildSegments();\n\t                        this.bindEvents();\n\t                    }\n\t                    TrendSegments.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.trend.onChange(function(changedOptions, newData) {\n\t                            return _this.onTrendChangeHandler(changedOptions, newData);\n\t                        });\n\t                        this.chartState.onZoom(function() {\n\t                            return _this.onZoomHandler();\n\t                        });\n\t                        this.chartState.onScroll(function() {\n\t                            return _this.recalculateDisplayedRange();\n\t                        });\n\t                        this.chartState.onDestroy(function() {\n\t                            return _this.onDestroyHandler();\n\t                        });\n\t                    };\n\t                    TrendSegments.prototype.onDestroyHandler = function() {\n\t                        this.ee.removeAllListeners();\n\t                        this.appendAnimation && this.appendAnimation.kill();\n\t                        this.prependAnimation && this.prependAnimation.kill();\n\t                    };\n\t                    TrendSegments.prototype.onZoomHandler = function() {\n\t                        var segmentsRebuilded = this.tryToRebuildSegments();\n\t                        if (!segmentsRebuilded) {\n\t                            this.recalculateDisplayedRange();\n\t                        }\n\t                    };\n\t                    TrendSegments.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                        var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                        if (needToRebuildSegments) {\n\t                            this.tryToRebuildSegments(true);\n\t                            return;\n\t                        }\n\t                        if (!newData) return;\n\t                        var data = this.trend.getData();\n\t                        var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                        isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                        this.recalculateDisplayedRange();\n\t                    };\n\t                    TrendSegments.prototype.getEndSegment = function() {\n\t                        return this.segmentsById[this.endSegmentId];\n\t                    };\n\t                    TrendSegments.prototype.getStartSegment = function() {\n\t                        return this.segmentsById[this.startSegmentId];\n\t                    };\n\t                    TrendSegments.prototype.tryToRebuildSegments = function(force) {\n\t                        if (force === void 0) {\n\t                            force = false;\n\t                        }\n\t                        var options = this.trend.getOptions();\n\t                        var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                        var trendTypesSettings = options.settingsForTypes;\n\t                        var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                        var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                        var needToRebuild = this.segments.length === 0 || force;\n\t                        var segmentLength = this.maxSegmentLength;\n\t                        var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                        var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                        if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                            needToRebuild = true;\n\t                            segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                        } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                            needToRebuild = true;\n\t                            segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                        }\n\t                        if (!needToRebuild) return false;\n\t                        this.maxSegmentLength = segmentLength;\n\t                        this.segmentsById = {};\n\t                        this.segments = [];\n\t                        this.nextEmptyId = 0;\n\t                        this.startSegmentId = 0;\n\t                        this.endSegmentId = 0;\n\t                        this.segmentsLength = 0;\n\t                        this.stopAllAnimations();\n\t                        this.appendData(null, true);\n\t                        this.recalculateDisplayedRange(true);\n\t                        this.ee.emit(EVENTS.REBUILD);\n\t                    };\n\t                    TrendSegments.prototype.stopAllAnimations = function() {\n\t                        this.animatedSegmentsIds = [];\n\t                        this.animatedSegmentsForAppend = [];\n\t                        this.animatedSegmentsForAppend = [];\n\t                        if (this.prependAnimation) this.prependAnimation.kill();\n\t                        if (this.appendAnimation) this.appendAnimation.kill();\n\t                    };\n\t                    TrendSegments.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                        if (segmentsAreRebuilded === void 0) {\n\t                            segmentsAreRebuilded = false;\n\t                        }\n\t                        var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                        var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                        var displayedRange = to - from;\n\t                        this.firstDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, from - displayedRange, \"startXVal\");\n\t                        this.lastDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, to + displayedRange, \"endXVal\");\n\t                        if (segmentsAreRebuilded) return;\n\t                        var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                        if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t                    };\n\t                    TrendSegments.prototype.getSegmentsForXValues = function(values) {\n\t                        var valueInd = 0;\n\t                        var value = values[valueInd];\n\t                        var lastValueInd = values.length - 1;\n\t                        var results = [];\n\t                        var segment = this.getStartSegment();\n\t                        if (!segment.hasValue) return [];\n\t                        while (segment) {\n\t                            while (value < segment.startXVal) {\n\t                                results.push(void 0);\n\t                                value = values[++valueInd];\n\t                            }\n\t                            while (value > segment.endXVal) {\n\t                                segment = segment.getNext();\n\t                                if (!segment) break;\n\t                            }\n\t                            var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                            if (valueInPoint) {\n\t                                results.push(segment);\n\t                                value = values[++valueInd];\n\t                            }\n\t                            if (valueInd > lastValueInd) break;\n\t                        }\n\t                        return results;\n\t                    };\n\t                    TrendSegments.prototype.onAnimationFrame = function(cb) {\n\t                        return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t                    };\n\t                    TrendSegments.prototype.onRebuild = function(cb) {\n\t                        return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t                    };\n\t                    TrendSegments.prototype.onDisplayedRangeChanged = function(cb) {\n\t                        return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t                    };\n\t                    TrendSegments.prototype.allocateNextSegment = function() {\n\t                        var id = this.nextEmptyId++;\n\t                        var segment = new TrendSegment(this, id);\n\t                        var prevSegment = this.segmentsById[this.endSegmentId];\n\t                        if (prevSegment && prevSegment.hasValue) {\n\t                            prevSegment.nextId = id;\n\t                            segment.prevId = prevSegment.id;\n\t                        }\n\t                        this.endSegmentId = id;\n\t                        this.segmentsLength++;\n\t                        this.segmentsById[id] = segment;\n\t                        this.segments.push(segment);\n\t                        return segment;\n\t                    };\n\t                    TrendSegments.prototype.allocatePrevSegment = function() {\n\t                        var id = this.nextEmptyId++;\n\t                        var segment = new TrendSegment(this, id);\n\t                        var nextSegment = this.segmentsById[this.startSegmentId];\n\t                        if (nextSegment && nextSegment.hasValue) {\n\t                            nextSegment.prevId = id;\n\t                            segment.nextId = nextSegment.id;\n\t                        }\n\t                        this.startSegmentId = id;\n\t                        this.segmentsLength++;\n\t                        this.segmentsById[id] = segment;\n\t                        this.segments.unshift(segment);\n\t                        return segment;\n\t                    };\n\t                    TrendSegments.prototype.appendData = function(newData, needRebuildSegments) {\n\t                        if (needRebuildSegments === void 0) {\n\t                            needRebuildSegments = false;\n\t                        }\n\t                        var trendData = this.trend.getData();\n\t                        if (needRebuildSegments) {\n\t                            newData = trendData;\n\t                            this.animatedSegmentsForAppend = [];\n\t                        }\n\t                        var startItemInd = trendData.length - newData.length;\n\t                        var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                        var initialSegment = segment.hasValue ? segment : null;\n\t                        var initialAnimationState = segment.createAnimationState();\n\t                        var itemInd = 0;\n\t                        while (itemInd < newData.length) {\n\t                            var item = newData[itemInd];\n\t                            var itemIsInserted = segment.appendItem(item);\n\t                            var isLastItem = itemInd == newData.length - 1;\n\t                            if (itemIsInserted) {\n\t                                if (!isLastItem) itemInd++;\n\t                            } else {\n\t                                if (!segment.isCompleted) segment.complete();\n\t                            }\n\t                            if (isLastItem && itemIsInserted) {\n\t                                segment.recalculateItems();\n\t                            }\n\t                            var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                            if (segmentIsReadyForAnimate) {\n\t                                var id = segment.id;\n\t                                if (!initialSegment) initialSegment = segment;\n\t                                if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                                if (this.animatedSegmentsForAppend.length > 0) {\n\t                                    segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                                    segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                                }\n\t                                segment.targetAnimationState = segment.createAnimationState();\n\t                                this.animatedSegmentsForAppend.push(id);\n\t                            }\n\t                            if (isLastItem && itemIsInserted) break;\n\t                            if (!segment.isCompleted) continue;\n\t                            segment = this.allocateNextSegment();\n\t                            var prevItem = trendData[startItemInd + itemInd - 1];\n\t                            segment.appendItem(prevItem);\n\t                        }\n\t                        var animationsOptions = this.chartState.data.animations;\n\t                        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                        if (needRebuildSegments) {\n\t                            for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                                var segmentId = _a[_i];\n\t                                var segment_1 = this.segmentsById[segmentId];\n\t                                segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                            }\n\t                            this.animatedSegmentsForAppend = [];\n\t                            return;\n\t                        }\n\t                        if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                        this.animate(time);\n\t                    };\n\t                    TrendSegments.prototype.prependData = function(newData) {\n\t                        var trendData = this.trend.getData();\n\t                        var segment = this.getStartSegment() || this.segmentsById[0];\n\t                        var initialSegment = segment.hasValue ? segment : null;\n\t                        var itemInd = newData.length - 1;\n\t                        var initialAnimationState = segment.createAnimationState();\n\t                        while (itemInd >= 0) {\n\t                            var item = newData[itemInd];\n\t                            var itemIsInserted = segment.prependItem(item);\n\t                            var isLastItem = itemInd == 0;\n\t                            if (itemIsInserted) {\n\t                                if (!isLastItem) itemInd--;\n\t                            } else {\n\t                                if (!segment.isCompleted) segment.complete();\n\t                            }\n\t                            if (isLastItem && itemIsInserted) {\n\t                                segment.recalculateItems();\n\t                            }\n\t                            var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                            if (segmentIsReadyForAnimate) {\n\t                                var id = segment.id;\n\t                                if (!initialSegment) initialSegment = segment;\n\t                                if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                                if (this.animatedSegmentsForPrepend.length > 0) {\n\t                                    segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                                    segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                                }\n\t                                segment.targetAnimationState = segment.createAnimationState();\n\t                                this.animatedSegmentsForPrepend.push(id);\n\t                            }\n\t                            if (isLastItem && itemIsInserted) break;\n\t                            if (!segment.isCompleted) continue;\n\t                            segment = this.allocatePrevSegment();\n\t                            var nextItem = trendData[itemInd + 1];\n\t                            segment.prependItem(nextItem);\n\t                        }\n\t                        var animationsOptions = this.chartState.data.animations;\n\t                        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                        if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                        this.animate(time, true);\n\t                    };\n\t                    TrendSegments.prototype.animate = function(time, isPrepend) {\n\t                        var _this = this;\n\t                        if (isPrepend === void 0) {\n\t                            isPrepend = false;\n\t                        }\n\t                        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                        var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                        if (animation && animation.isActive() || time == 0) {\n\t                            if (animation) animation.kill();\n\t                            this.onAnimationFrameHandler(1, isPrepend);\n\t                            animatedSegmentsIds.length = 0;\n\t                            return;\n\t                        }\n\t                        var animationsOptions = this.chartState.data.animations;\n\t                        var ease = animationsOptions.trendChangeEase;\n\t                        var objectToAnimate = {\n\t                            animationValue: 0\n\t                        };\n\t                        animation = TweenLite.to(objectToAnimate, time, {\n\t                            animationValue: 1,\n\t                            ease: ease\n\t                        });\n\t                        animation.eventCallback(\"onUpdate\", function() {\n\t                            return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                        });\n\t                        animation.eventCallback(\"onComplete\", function() {\n\t                            animatedSegmentsIds.length = 0;\n\t                            _this.appendAnimation = null;\n\t                        });\n\t                        if (isPrepend) {\n\t                            this.prependAnimation = animation;\n\t                        } else {\n\t                            this.appendAnimation = animation;\n\t                        }\n\t                    };\n\t                    TrendSegments.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                        if (isPrepend === void 0) {\n\t                            isPrepend = false;\n\t                        }\n\t                        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                        for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                            var segmentId = animatedSegmentsIds_1[_i];\n\t                            var segment = this.segmentsById[segmentId];\n\t                            for (var key in segment.targetAnimationState) {\n\t                                var targetValue = segment.targetAnimationState[key];\n\t                                var initialValue = segment.initialAnimationState[key];\n\t                                var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                                segment.currentAnimationState[key] = currentValue;\n\t                            }\n\t                        }\n\t                        this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                        this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t                    };\n\t                    return TrendSegments;\n\t                }();\n\t                exports.TrendSegments = TrendSegments;\n\t                var TrendSegment = function() {\n\t                    function TrendSegment(trendPoints, id) {\n\t                        this.isCompleted = false;\n\t                        this.items = [];\n\t                        this.initialAnimationState = {};\n\t                        this.targetAnimationState = {};\n\t                        this.currentAnimationState = {};\n\t                        this.trendSegments = trendPoints;\n\t                        this.id = id;\n\t                        this.maxLength = trendPoints.maxSegmentLength;\n\t                    }\n\t                    TrendSegment.prototype.createAnimationState = function() {\n\t                        var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                        return {\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            startXVal: startXVal,\n\t                            startYVal: startYVal,\n\t                            endXVal: endXVal,\n\t                            endYVal: endYVal,\n\t                            maxYVal: maxYVal,\n\t                            minYVal: minYVal,\n\t                            maxLength: maxLength\n\t                        };\n\t                    };\n\t                    TrendSegment.prototype.appendItem = function(item) {\n\t                        if (this.isCompleted) return false;\n\t                        var items = this.items;\n\t                        if (items.length < 2) {\n\t                            this.items.push(item);\n\t                            this.hasValue = true;\n\t                            return true;\n\t                        }\n\t                        var startXVal = items[0].xVal;\n\t                        if (item.xVal - startXVal > this.maxLength) return false;\n\t                        items.push(item);\n\t                        return true;\n\t                    };\n\t                    TrendSegment.prototype.prependItem = function(item) {\n\t                        if (this.isCompleted) return false;\n\t                        var items = this.items;\n\t                        if (items.length < 2) {\n\t                            this.items.unshift(item);\n\t                            this.hasValue = true;\n\t                            return true;\n\t                        }\n\t                        var endXVal = items[items.length - 1].xVal;\n\t                        if (endXVal - item.xVal > this.maxLength) return false;\n\t                        items.unshift(item);\n\t                        return true;\n\t                    };\n\t                    TrendSegment.prototype.complete = function() {\n\t                        this.isCompleted = true;\n\t                        this.recalculateItems();\n\t                        this.items = [];\n\t                    };\n\t                    TrendSegment.prototype.recalculateItems = function() {\n\t                        var items = this.items;\n\t                        var itemsLength = items.length;\n\t                        if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                        var endItem = items[itemsLength - 1];\n\t                        var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                        var startXVal, startYVal;\n\t                        var startItem = items[0];\n\t                        startXVal = startItem.xVal;\n\t                        startYVal = startItem.yVal;\n\t                        var minX = Math.min(startXVal, endXVal);\n\t                        var maxX = Math.max(startXVal, endXVal);\n\t                        var middleXVal = minX + (maxX - minX) / 2;\n\t                        var minY = Math.min(startYVal, endYVal);\n\t                        var maxY = Math.max(startYVal, endYVal);\n\t                        var middleYVal = minY + (maxY - minY) / 2;\n\t                        var yVals = items.map(function(item) {\n\t                            return item.yVal;\n\t                        });\n\t                        this.startXVal = startXVal;\n\t                        this.startYVal = startYVal;\n\t                        this.endXVal = endXVal;\n\t                        this.endYVal = endYVal;\n\t                        this.xVal = middleXVal;\n\t                        this.yVal = middleYVal;\n\t                        this.maxYVal = Math.max.apply(Math, yVals);\n\t                        this.minYVal = Math.min.apply(Math, yVals);\n\t                        if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t                    };\n\t                    TrendSegment.prototype.getNext = function() {\n\t                        var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                        return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t                    };\n\t                    TrendSegment.prototype.getPrev = function() {\n\t                        var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                        return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t                    };\n\t                    TrendSegment.prototype.getFrameVal = function() {\n\t                        var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                        return new Vector3(xVal, yVal, 0);\n\t                    };\n\t                    TrendSegment.prototype.getFramePoint = function() {\n\t                        var frameVal = this.getFrameVal();\n\t                        return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t                    };\n\t                    return TrendSegment;\n\t                }();\n\t                exports.TrendSegment = TrendSegment;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var Vector3 = THREE.Vector3;\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                var Screen = function() {\n\t                    function Screen(chartState) {\n\t                        this.options = {\n\t                            scrollXVal: 0,\n\t                            scrollX: 0,\n\t                            scrollYVal: 0,\n\t                            scrollY: 0,\n\t                            zoomX: 1,\n\t                            zoomY: 1\n\t                        };\n\t                        this.currentScrollX = {\n\t                            x: 0\n\t                        };\n\t                        this.currentScrollY = {\n\t                            y: 0\n\t                        };\n\t                        this.currentZoomX = {\n\t                            val: 1\n\t                        };\n\t                        this.currentZoomY = {\n\t                            val: 1\n\t                        };\n\t                        this.chartState = chartState;\n\t                        var _a = chartState.data, w = _a.width, h = _a.height;\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.transform({\n\t                            scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n\t                            zoomY: 1\n\t                        });\n\t                        this.bindEvents();\n\t                    }\n\t                    Screen.prototype.getCameraSettings = function() {\n\t                        var _a = this.chartState.data, w = _a.width, h = _a.height;\n\t                        var FOV = 75;\n\t                        var vFOV = FOV * (Math.PI / 180);\n\t                        return {\n\t                            FOV: FOV,\n\t                            aspect: w / h,\n\t                            near: .1,\n\t                            far: 5e3,\n\t                            z: h / (2 * Math.tan(vFOV / 2)),\n\t                            x: w / 2,\n\t                            y: h / 2\n\t                        };\n\t                    };\n\t                    Screen.prototype.onZoomFrame = function(cb) {\n\t                        var _this = this;\n\t                        var eventName = \"zoomFrame\";\n\t                        this.ee.on(eventName, cb);\n\t                        return function() {\n\t                            _this.ee.off(eventName, cb);\n\t                        };\n\t                    };\n\t                    Screen.prototype.onScrollFrame = function(cb) {\n\t                        var _this = this;\n\t                        var eventName = \"scrollFrame\";\n\t                        this.ee.on(eventName, cb);\n\t                        return function() {\n\t                            _this.ee.off(eventName, cb);\n\t                        };\n\t                    };\n\t                    Screen.prototype.onTransformationFrame = function(cb) {\n\t                        var _this = this;\n\t                        var eventName = \"transformationFrame\";\n\t                        this.ee.on(eventName, cb);\n\t                        return function() {\n\t                            _this.ee.off(eventName, cb);\n\t                        };\n\t                    };\n\t                    Screen.prototype.cameraIsMoving = function() {\n\t                        return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n\t                    };\n\t                    Screen.prototype.transform = function(options, silent) {\n\t                        if (silent === void 0) {\n\t                            silent = false;\n\t                        }\n\t                        var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                        if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                        if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                        if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                        if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                        if (scrollX != void 0 || zoomX) {\n\t                            options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                            this.options.scrollXVal = options.scrollXVal;\n\t                        }\n\t                        if (scrollY != void 0 || zoomY) {\n\t                            options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                            this.options.scrollYVal = options.scrollYVal;\n\t                        }\n\t                        if (silent) return;\n\t                        this.ee.emit(\"transformationFrame\", options);\n\t                        if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t                            this.ee.emit(\"scrollFrame\", options);\n\t                        }\n\t                        if (options.zoomX != void 0 || options.zoomY != void 0) {\n\t                            this.ee.emit(\"zoomFrame\", options);\n\t                        }\n\t                    };\n\t                    Screen.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        state.onChange(function(changedProps) {\n\t                            if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                                if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                                if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                            }\n\t                            if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                                if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                                if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                            }\n\t                        });\n\t                        state.onDestroy(function() {\n\t                            return _this.onDestroyHandler();\n\t                        });\n\t                    };\n\t                    Screen.prototype.onDestroyHandler = function() {\n\t                        this.ee.removeAllListeners();\n\t                        this.scrollXAnimation && this.scrollXAnimation.kill();\n\t                        this.scrollYAnimation && this.scrollYAnimation.kill();\n\t                        this.zoomXAnimation && this.zoomXAnimation.kill();\n\t                        this.zoomYAnimation && this.zoomYAnimation.kill();\n\t                    };\n\t                    Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        var isDragMode = state.data.cursor.dragMode;\n\t                        var animations = state.data.animations;\n\t                        var canAnimate = animations.enabled && !isDragMode;\n\t                        var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                        var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n\t                        var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                        var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                        if (this.scrollXAnimation) this.scrollXAnimation.pause();\n\t                        var range = state.data.xAxis.range;\n\t                        var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                        this.currentScrollX.x = this.options.scrollX;\n\t                        var cb = function() {\n\t                            _this.transform({\n\t                                scrollX: _this.currentScrollX.x\n\t                            });\n\t                        };\n\t                        if (canAnimate) {\n\t                            this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t                                x: targetX,\n\t                                ease: ease\n\t                            });\n\t                            this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n\t                        } else {\n\t                            this.currentScrollX.x = targetX;\n\t                            cb();\n\t                        }\n\t                    };\n\t                    Screen.prototype.onScrollYHandler = function() {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        var animations = state.data.animations;\n\t                        var canAnimate = animations.enabled;\n\t                        var time = animations.zoomSpeed;\n\t                        if (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t                        var range = state.data.yAxis.range;\n\t                        var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                        this.currentScrollY.y = this.options.scrollY;\n\t                        var cb = function() {\n\t                            _this.transform({\n\t                                scrollY: _this.currentScrollY.y\n\t                            });\n\t                        };\n\t                        if (canAnimate) {\n\t                            this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t                                y: targetY,\n\t                                ease: animations.zoomEase\n\t                            });\n\t                            this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n\t                        } else {\n\t                            this.currentScrollY.y = targetY;\n\t                            cb();\n\t                        }\n\t                    };\n\t                    Screen.prototype.onZoomXHandler = function() {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        var animations = state.data.animations;\n\t                        var canAnimate = animations.enabled;\n\t                        var time = animations.zoomSpeed;\n\t                        var targetZoom = state.data.xAxis.range.zoom;\n\t                        if (this.zoomXAnimation) this.zoomXAnimation.pause();\n\t                        var cb = function() {\n\t                            _this.transform({\n\t                                zoomX: _this.currentZoomX.val\n\t                            });\n\t                        };\n\t                        if (canAnimate) {\n\t                            this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t                                val: targetZoom,\n\t                                ease: animations.zoomEase\n\t                            });\n\t                            this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n\t                        } else {\n\t                            this.currentZoomX.val = targetZoom;\n\t                            cb();\n\t                        }\n\t                    };\n\t                    Screen.prototype.onZoomYHandler = function() {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        var animations = state.data.animations;\n\t                        var canAnimate = animations.enabled;\n\t                        var time = animations.zoomSpeed;\n\t                        var targetZoom = state.data.yAxis.range.zoom;\n\t                        if (this.zoomYAnimation) this.zoomYAnimation.pause();\n\t                        var cb = function() {\n\t                            _this.transform({\n\t                                zoomY: _this.currentZoomY.val\n\t                            });\n\t                        };\n\t                        if (canAnimate) {\n\t                            this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t                                val: targetZoom,\n\t                                ease: animations.zoomEase\n\t                            });\n\t                            this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n\t                        } else {\n\t                            this.currentZoomY.val = targetZoom;\n\t                            cb();\n\t                        }\n\t                    };\n\t                    Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                        var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                        var zoom = this.options.zoomX;\n\t                        return (xVal - zeroVal) * scaleFactor * zoom;\n\t                    };\n\t                    Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                        var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                        var zoom = this.options.zoomY;\n\t                        return (yVal - zeroVal) * scaleFactor * zoom;\n\t                    };\n\t                    Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                        return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t                    };\n\t                    Screen.prototype.getValueOnXAxis = function(x) {\n\t                        return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t                    };\n\t                    Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                        return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n\t                    };\n\t                    Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                        return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n\t                    };\n\t                    Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                        return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n\t                    };\n\t                    Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                        return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n\t                    };\n\t                    Screen.prototype.getValueByScreenX = function(x) {\n\t                        return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t                    };\n\t                    Screen.prototype.getValueByScreenY = function(y) {\n\t                        return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t                    };\n\t                    Screen.prototype.getScreenXByValue = function(xVal) {\n\t                        var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                        return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t                    };\n\t                    Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                        return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t                    };\n\t                    Screen.prototype.getPointByScreenX = function(screenX) {\n\t                        return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t                    };\n\t                    Screen.prototype.getPointByScreenY = function(screenY) {\n\t                        return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t                    };\n\t                    Screen.prototype.getTop = function() {\n\t                        return this.getPointByScreenY(this.chartState.data.height);\n\t                    };\n\t                    Screen.prototype.getBottom = function() {\n\t                        return this.getPointByScreenY(0);\n\t                    };\n\t                    Screen.prototype.getLeft = function() {\n\t                        return this.getPointByScreenX(0);\n\t                    };\n\t                    Screen.prototype.getScreenRightVal = function() {\n\t                        return this.getValueByScreenX(this.chartState.data.width);\n\t                    };\n\t                    Screen.prototype.getTopVal = function() {\n\t                        return this.getValueByScreenY(this.chartState.data.height);\n\t                    };\n\t                    Screen.prototype.getBottomVal = function() {\n\t                        return this.getValueByScreenY(0);\n\t                    };\n\t                    Screen.prototype.getCenterYVal = function() {\n\t                        return this.getValueByScreenY(this.chartState.data.height / 2);\n\t                    };\n\t                    return Screen;\n\t                }();\n\t                exports.Screen = Screen;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Utils_1 = __webpack_require__(16);\n\t                var interfaces_1 = __webpack_require__(23);\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                var AXIS_MARK_DEFAULT_OPTIONS = {\n\t                    type: \"simple\",\n\t                    lineWidth: 1,\n\t                    value: 0,\n\t                    showValue: false,\n\t                    stickToEdges: false,\n\t                    lineColor: \"#FFFFFF\",\n\t                    title: \"\"\n\t                };\n\t                var AxisMarks = function() {\n\t                    function AxisMarks(chartState, axisType) {\n\t                        this.items = {};\n\t                        this.chartState = chartState;\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.axisType = axisType;\n\t                        var marks = this.items;\n\t                        var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n\t                        for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                            var options = axisMarksOptions_1[_i];\n\t                            var axisMark = void 0;\n\t                            options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                            if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                            if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                            if (options.type == \"timeleft\") {\n\t                                axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                            } else {\n\t                                axisMark = new AxisMark(chartState, axisType, options);\n\t                            }\n\t                            marks[options.name] = axisMark;\n\t                        }\n\t                        this.bindEvents();\n\t                    }\n\t                    AxisMarks.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                            _this.onTrendChange(trendName, newData);\n\t                        });\n\t                        this.chartState.onDestroy(function() {\n\t                            return _this.ee.removeAllListeners();\n\t                        });\n\t                    };\n\t                    AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                        if (!newData) return;\n\t                        var startVal = newData[0].xVal;\n\t                        var endVal = newData[newData.length - 1].xVal;\n\t                        var marks = this.items;\n\t                        for (var markName in marks) {\n\t                            var mark = marks[markName];\n\t                            var markVal = mark.options.value;\n\t                            var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                            if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                        }\n\t                    };\n\t                    AxisMarks.prototype.getItems = function() {\n\t                        return this.items;\n\t                    };\n\t                    AxisMarks.prototype.getItem = function(markName) {\n\t                        return this.items[markName];\n\t                    };\n\t                    return AxisMarks;\n\t                }();\n\t                exports.AxisMarks = AxisMarks;\n\t                var AxisMark = function() {\n\t                    function AxisMark(chartState, axisType, options) {\n\t                        this.renderOnTrendsChange = false;\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.options = options;\n\t                        this.axisType = axisType;\n\t                        this.chartState = chartState;\n\t                        this.bindEvents();\n\t                    }\n\t                    AxisMark.prototype.bindEvents = function() {};\n\t                    AxisMark.prototype.setOptions = function(newOptions) {\n\t                        var value = this.options.value;\n\t                        this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                        if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                        this.ee.emit(\"onDisplayedValueChange\");\n\t                    };\n\t                    AxisMark.prototype.getDisplayedVal = function() {\n\t                        var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                        return String(displayedValue !== void 0 ? displayedValue : value);\n\t                    };\n\t                    AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                        var _this = this;\n\t                        this.ee.on(\"markCrossed\", cb);\n\t                        return function() {\n\t                            _this.ee.off(\"markCrossed\", cb);\n\t                        };\n\t                    };\n\t                    AxisMark.prototype.onValueChange = function(cb) {\n\t                        var _this = this;\n\t                        this.ee.on(\"valueChange\", cb);\n\t                        return function() {\n\t                            _this.ee.off(\"valueChange\", cb);\n\t                        };\n\t                    };\n\t                    AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                        var _this = this;\n\t                        this.ee.on(\"onDisplayedValueChange\", cb);\n\t                        return function() {\n\t                            _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                        };\n\t                    };\n\t                    AxisMark.typeName = \"simple\";\n\t                    return AxisMark;\n\t                }();\n\t                exports.AxisMark = AxisMark;\n\t                var AxisTimeleftMark = function(_super) {\n\t                    __extends(AxisTimeleftMark, _super);\n\t                    function AxisTimeleftMark() {\n\t                        _super.apply(this, arguments);\n\t                        this.renderOnTrendsChange = true;\n\t                    }\n\t                    AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                        var markVal = this.options.value;\n\t                        var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n\t                        var time = markVal - maxXVal;\n\t                        if (time < 0) time = 0;\n\t                        return Utils_1.Utils.msToTimeString(time);\n\t                    };\n\t                    AxisTimeleftMark.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.chartState.onTrendsChange(function() {\n\t                            return _this.onTrendsChange();\n\t                        });\n\t                    };\n\t                    AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                        this.ee.emit(\"onDisplayedValueChange\");\n\t                    };\n\t                    AxisTimeleftMark.typeName = \"timeleft\";\n\t                    return AxisTimeleftMark;\n\t                }(AxisMark);\n\t                exports.AxisTimeleftMark = AxisTimeleftMark;\n\t            }, function(module, exports) {\n\t                \"use strict\";\n\t                (function(AXIS_RANGE_TYPE) {\n\t                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t                })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t                var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t                (function(AXIS_TYPE) {\n\t                    AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t                    AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t                })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t                var AXIS_TYPE = exports.AXIS_TYPE;\n\t                (function(AXIS_DATA_TYPE) {\n\t                    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t                    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t                })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t                var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Mesh = THREE.Mesh;\n\t                var Object3D = THREE.Object3D;\n\t                var Widget_1 = __webpack_require__(17);\n\t                var GridWidget_1 = __webpack_require__(25);\n\t                var Utils_1 = __webpack_require__(16);\n\t                var interfaces_1 = __webpack_require__(23);\n\t                var AxisWidget = function(_super) {\n\t                    __extends(AxisWidget, _super);\n\t                    function AxisWidget(state) {\n\t                        var _this = this;\n\t                        _super.call(this, state);\n\t                        this.isDestroyed = false;\n\t                        this.object3D = new Object3D();\n\t                        this.axisXObject = new Object3D();\n\t                        this.axisYObject = new Object3D();\n\t                        this.object3D.add(this.axisXObject);\n\t                        this.object3D.add(this.axisYObject);\n\t                        this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                        this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                            return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                        }, 1e3);\n\t                        this.onScrollChange(state.screen.options.scrollX, state.screen.options.scrollY);\n\t                    }\n\t                    AxisWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                            _this.onScrollChange(options.scrollX, options.scrollY);\n\t                        }), state.screen.onZoomFrame(function(options) {\n\t                            _this.onZoomFrame(options);\n\t                        }), state.onDestroy(function() {\n\t                            return _this.onDestroy();\n\t                        }), state.onResize(function() {\n\t                            return _this.onResize();\n\t                        }));\n\t                    };\n\t                    AxisWidget.prototype.onDestroy = function() {\n\t                        this.isDestroyed = true;\n\t                        this.unbindEvents();\n\t                    };\n\t                    AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                        if (y != void 0) {\n\t                            this.axisYObject.position.y = y;\n\t                            this.axisXObject.position.y = y;\n\t                        }\n\t                        if (x != void 0) {\n\t                            this.axisYObject.position.x = x;\n\t                            this.updateAxisXRequest();\n\t                        }\n\t                    };\n\t                    AxisWidget.prototype.onResize = function() {\n\t                        this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                    };\n\t                    AxisWidget.prototype.setupAxis = function(orientation) {\n\t                        var _this = this;\n\t                        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                        var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                        var canvasWidth = 0, canvasHeight = 0;\n\t                        if (isXAxis) {\n\t                            this.axisXObject.traverse(function(obj) {\n\t                                return _this.axisXObject.remove(obj);\n\t                            });\n\t                            canvasWidth = visibleWidth * 3;\n\t                            canvasHeight = 50;\n\t                        } else {\n\t                            this.axisYObject.traverse(function(obj) {\n\t                                return _this.axisYObject.remove(obj);\n\t                            });\n\t                            canvasWidth = 50;\n\t                            canvasHeight = visibleHeight * 3;\n\t                        }\n\t                        var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                            ctx.beginPath();\n\t                            ctx.font = \"10px Arial\";\n\t                            ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t                            ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n\t                        });\n\t                        var material = new THREE.MeshBasicMaterial({\n\t                            map: texture,\n\t                            side: THREE.FrontSide\n\t                        });\n\t                        material.transparent = true;\n\t                        var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                        if (isXAxis) {\n\t                            axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                            this.axisXObject.add(axisMesh);\n\t                        } else {\n\t                            axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                            this.axisYObject.add(axisMesh);\n\t                        }\n\t                        this.updateAxis(orientation);\n\t                    };\n\t                    AxisWidget.prototype.getObject3D = function() {\n\t                        return this.object3D;\n\t                    };\n\t                    AxisWidget.prototype.updateAxis = function(orientation) {\n\t                        if (this.isDestroyed) return;\n\t                        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                        var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                        var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                        var axisOptions;\n\t                        var axisMesh;\n\t                        var axisGridParams;\n\t                        if (isXAxis) {\n\t                            axisMesh = this.axisXObject.children[0];\n\t                            axisOptions = this.chartState.data.xAxis;\n\t                            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                        } else {\n\t                            axisMesh = this.axisYObject.children[0];\n\t                            axisOptions = this.chartState.data.yAxis;\n\t                            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                        }\n\t                        var geometry = axisMesh.geometry;\n\t                        var canvasWidth = geometry.parameters.width;\n\t                        var canvasHeight = geometry.parameters.height;\n\t                        var texture = axisMesh.material.map;\n\t                        var ctx = texture.image.getContext(\"2d\");\n\t                        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                        if (isXAxis) {\n\t                            axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                        }\n\t                        var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                        var startVal = axisGridParams.start - edgeOffset;\n\t                        var endVal = axisGridParams.end + edgeOffset;\n\t                        ctx.beginPath();\n\t                        for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                            var displayedValue = \"\";\n\t                            if (isXAxis) {\n\t                                var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                                ctx.textAlign = \"center\";\n\t                                if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                                    displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                                } else {\n\t                                    displayedValue = Number(val.toFixed(14)).toString();\n\t                                }\n\t                                ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                            } else {\n\t                                var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n\t                                ctx.textAlign = \"right\";\n\t                                displayedValue = Number(val.toFixed(14)).toString();\n\t                                ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                            }\n\t                            ctx.stroke();\n\t                        }\n\t                        ctx.stroke();\n\t                        ctx.closePath();\n\t                        texture.needsUpdate = true;\n\t                    };\n\t                    AxisWidget.prototype.onZoomFrame = function(options) {\n\t                        if (options.zoomX) {\n\t                            this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                        }\n\t                        if (options.zoomY) {\n\t                            this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                        }\n\t                    };\n\t                    AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                        var sec = 1e3;\n\t                        var min = sec * 60;\n\t                        var hour = min * 60;\n\t                        var day = hour * 60;\n\t                        var step = gridParams.step;\n\t                        var d = new Date(timestamp);\n\t                        var tf = function(num) {\n\t                            return Utils_1.Utils.toFixed(num, 2);\n\t                        };\n\t                        return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t                    };\n\t                    AxisWidget.widgetName = \"Axis\";\n\t                    return AxisWidget;\n\t                }(Widget_1.ChartWidget);\n\t                exports.AxisWidget = AxisWidget;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Vector3 = THREE.Vector3;\n\t                var Widget_1 = __webpack_require__(17);\n\t                var LineSegments = THREE.LineSegments;\n\t                var Utils_1 = __webpack_require__(16);\n\t                var GridWidget = function(_super) {\n\t                    __extends(GridWidget, _super);\n\t                    function GridWidget(chartState) {\n\t                        _super.call(this, chartState);\n\t                        this.isDestroyed = false;\n\t                        var _a = chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                        this.gridSizeH = Math.floor(width / xAxis.gridMinSize) * 3;\n\t                        this.gridSizeV = Math.floor(height / yAxis.gridMinSize) * 3;\n\t                        this.initGrid();\n\t                        this.updateGrid();\n\t                    }\n\t                    GridWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                            return _this.updateGrid();\n\t                        }, 1e3);\n\t                        this.bindEvent(this.chartState.onScroll(function() {\n\t                            return updateGridThrottled();\n\t                        }), this.chartState.screen.onZoomFrame(function(options) {\n\t                            updateGridThrottled();\n\t                            _this.onZoomFrame(options);\n\t                        }), this.chartState.onDestroy(function() {\n\t                            _this.isDestroyed = true;\n\t                            _this.unbindEvents();\n\t                        }), this.chartState.onResize(function() {\n\t                            _this.updateGrid();\n\t                        }));\n\t                    };\n\t                    GridWidget.prototype.initGrid = function() {\n\t                        var geometry = new THREE.Geometry();\n\t                        var material = new THREE.LineBasicMaterial({\n\t                            linewidth: 1,\n\t                            opacity: .1,\n\t                            transparent: true\n\t                        });\n\t                        var xLinesCount = this.gridSizeH;\n\t                        var yLinesCount = this.gridSizeV;\n\t                        while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                        while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                        this.lineSegments = new LineSegments(geometry, material);\n\t                        this.lineSegments.position.setZ(-1);\n\t                        this.lineSegments.frustumCulled = false;\n\t                    };\n\t                    GridWidget.prototype.updateGrid = function() {\n\t                        if (this.isDestroyed) return;\n\t                        var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                        var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                        var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                        var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                        var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                        var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                        var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                        var startXVal = axisXGrid.start + gridScrollXVal;\n\t                        var startYVal = axisYGrid.start + gridScrollYVal;\n\t                        var geometry = this.lineSegments.geometry;\n\t                        var vertices = geometry.vertices;\n\t                        var lineInd = 0;\n\t                        for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                            var value = startXVal + i * axisXGrid.step;\n\t                            var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                            lineInd++;\n\t                        }\n\t                        for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                            var value = startYVal + i * axisYGrid.step;\n\t                            var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                            lineInd++;\n\t                        }\n\t                        geometry.verticesNeedUpdate = true;\n\t                        this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t                    };\n\t                    GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                        var chartState = this.chartState;\n\t                        var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n\t                        var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n\t                        return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t                    };\n\t                    GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                        var chartState = this.chartState;\n\t                        var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n\t                        var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n\t                        return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t                    };\n\t                    GridWidget.prototype.onZoomFrame = function(options) {\n\t                        var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                        if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                        if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t                    };\n\t                    GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                        var axisRange = axisOptions.range;\n\t                        var from = axisRange.from;\n\t                        var to = axisRange.to;\n\t                        var axisLength = to - from;\n\t                        var gridStep = 0;\n\t                        var gridStepInPixels = 0;\n\t                        var minGridStepInPixels = axisOptions.gridMinSize;\n\t                        var axisLengthStr = String(axisLength);\n\t                        var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                        var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                        var gridStepFound = false;\n\t                        var digitPos = 0;\n\t                        while (!gridStepFound) {\n\t                            var power = intPartLength - digitPos - 1;\n\t                            var multiplier = Math.pow(10, power) || 1;\n\t                            var dividers = [ 1, 2, 5 ];\n\t                            for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                                var nextGridStep = multiplier / dividers[dividerInd];\n\t                                var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                                if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                                    gridStep = nextGridStep;\n\t                                    gridStepInPixels = nextGridStepInPixels;\n\t                                } else {\n\t                                    gridStepFound = true;\n\t                                    if (gridStep === 0) {\n\t                                        gridStep = nextGridStep;\n\t                                        gridStepInPixels = nextGridStepInPixels;\n\t                                    }\n\t                                    break;\n\t                                }\n\t                            }\n\t                            if (!gridStepFound) digitPos++;\n\t                        }\n\t                        var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                        var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                        return {\n\t                            start: gridStart,\n\t                            end: gridEnd,\n\t                            step: gridStep,\n\t                            stepInPx: gridStepInPixels,\n\t                            length: gridEnd - gridStart,\n\t                            segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                        };\n\t                    };\n\t                    GridWidget.prototype.getObject3D = function() {\n\t                        return this.lineSegments;\n\t                    };\n\t                    GridWidget.widgetName = \"Grid\";\n\t                    return GridWidget;\n\t                }(Widget_1.ChartWidget);\n\t                exports.GridWidget = GridWidget;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Utils_1 = __webpack_require__(16);\n\t                var Mesh = THREE.Mesh;\n\t                var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t                var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t                var TrendsWidget_1 = __webpack_require__(27);\n\t                var Trend_1 = __webpack_require__(19);\n\t                var TrendsLoadingWidget = function(_super) {\n\t                    __extends(TrendsLoadingWidget, _super);\n\t                    function TrendsLoadingWidget() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                        return TrendLoading;\n\t                    };\n\t                    TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t                    return TrendsLoadingWidget;\n\t                }(TrendsWidget_1.TrendsWidget);\n\t                exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t                var TrendLoading = function(_super) {\n\t                    __extends(TrendLoading, _super);\n\t                    function TrendLoading(state, trendName) {\n\t                        _super.call(this, state, trendName);\n\t                        this.isActive = false;\n\t                        this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                            map: TrendLoading.createTexture(),\n\t                            transparent: true\n\t                        }));\n\t                        this.deactivate();\n\t                    }\n\t                    TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n\t                        return trendOptions.enabled && chartState.data.animations.enabled;\n\t                    };\n\t                    TrendLoading.prototype.getObject3D = function() {\n\t                        return this.mesh;\n\t                    };\n\t                    TrendLoading.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        _super.prototype.bindEvents.call(this);\n\t                        this.bindEvent(this.trend.onPrependRequest(function() {\n\t                            return _this.activate();\n\t                        }));\n\t                    };\n\t                    TrendLoading.prototype.prependData = function() {\n\t                        this.deactivate();\n\t                    };\n\t                    TrendLoading.prototype.activate = function() {\n\t                        var mesh = this.mesh;\n\t                        mesh.material.opacity = 1;\n\t                        mesh.rotation.z = 0;\n\t                        var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                            z: Math.PI * 2\n\t                        });\n\t                        animation.eventCallback(\"onComplete\", function() {\n\t                            animation.restart();\n\t                        });\n\t                        this.animation = animation;\n\t                        this.isActive = true;\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendLoading.prototype.deactivate = function() {\n\t                        this.animation && this.animation.kill();\n\t                        this.mesh.material.opacity = 0;\n\t                        this.isActive = false;\n\t                    };\n\t                    TrendLoading.createTexture = function() {\n\t                        var h = 64, w = 64;\n\t                        return Utils_1.Utils.createTexture(h, w, function(ctx) {\n\t                            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                            ctx.lineWidth = 5;\n\t                            var center = h / 2;\n\t                            ctx.beginPath();\n\t                            ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                            ctx.stroke();\n\t                            ctx.beginPath();\n\t                            ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                            ctx.stroke();\n\t                            ctx.beginPath();\n\t                            ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                            ctx.stroke();\n\t                        });\n\t                    };\n\t                    TrendLoading.prototype.onZoomFrame = function() {\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendLoading.prototype.updatePosition = function() {\n\t                        if (!this.isActive) return;\n\t                        var trend = this.trend;\n\t                        var segment = trend.segments.getStartSegment();\n\t                        var x, y;\n\t                        if (trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n\t                            x = segment.currentAnimationState.startXVal;\n\t                            y = segment.currentAnimationState.startYVal;\n\t                        } else {\n\t                            x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                            y = segment.currentAnimationState.yVal;\n\t                        }\n\t                        var pointVector = this.chartState.screen.getPointOnChart(x, y);\n\t                        this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t                    };\n\t                    return TrendLoading;\n\t                }(TrendsWidget_1.TrendWidget);\n\t                exports.TrendLoading = TrendLoading;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Widget_1 = __webpack_require__(17);\n\t                var Object3D = THREE.Object3D;\n\t                var TrendsWidget = function(_super) {\n\t                    __extends(TrendsWidget, _super);\n\t                    function TrendsWidget(state) {\n\t                        _super.call(this, state);\n\t                        this.widgets = {};\n\t                        this.object3D = new Object3D();\n\t                        this.onTrendsChange();\n\t                    }\n\t                    TrendsWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        var state = this.chartState;\n\t                        state.onTrendsChange(function() {\n\t                            return _this.onTrendsChange();\n\t                        });\n\t                        state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                            _this.onTrendChange(trendName, changedOptions, newData);\n\t                        });\n\t                    };\n\t                    TrendsWidget.prototype.onTrendsChange = function() {\n\t                        var trendsOptions = this.chartState.data.trends;\n\t                        var TrendWidgetClass = this.getTrendWidgetClass();\n\t                        for (var trendName in trendsOptions) {\n\t                            var trendOptions = trendsOptions[trendName];\n\t                            var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n\t                            if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                                this.createTrendWidget(trendName);\n\t                            } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                                this.destroyTrendWidget(trendName);\n\t                            }\n\t                        }\n\t                    };\n\t                    TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                        var widget = this.widgets[trendName];\n\t                        if (!widget) return;\n\t                        widget.onTrendChange(changedOptions);\n\t                        if (newData) {\n\t                            var data = this.chartState.getTrend(trendName).getData();\n\t                            var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                            isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                        }\n\t                    };\n\t                    TrendsWidget.prototype.getObject3D = function() {\n\t                        return this.object3D;\n\t                    };\n\t                    TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                        var WidgetConstructor = this.getTrendWidgetClass();\n\t                        var widget = new WidgetConstructor(this.chartState, trendName);\n\t                        this.widgets[trendName] = widget;\n\t                        var widgetObject = widget.getObject3D();\n\t                        widgetObject.name = trendName;\n\t                        this.object3D.add(widget.getObject3D());\n\t                    };\n\t                    TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                        this.widgets[trendName].onDestroy();\n\t                        delete this.widgets[trendName];\n\t                        var widgetObject = this.object3D.getObjectByName(trendName);\n\t                        this.object3D.remove(widgetObject);\n\t                    };\n\t                    return TrendsWidget;\n\t                }(Widget_1.ChartWidget);\n\t                exports.TrendsWidget = TrendsWidget;\n\t                var TrendWidget = function() {\n\t                    function TrendWidget(chartState, trendName) {\n\t                        this.chartState = chartState;\n\t                        this.trendName = trendName;\n\t                        this.unsubscribers = [];\n\t                        this.trend = chartState.trendsManager.getTrend(trendName);\n\t                        this.chartState = chartState;\n\t                        this.bindEvents();\n\t                    }\n\t                    TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n\t                        return trendOptions.enabled;\n\t                    };\n\t                    TrendWidget.prototype.appendData = function(newData) {};\n\t                    TrendWidget.prototype.prependData = function(newData) {};\n\t                    TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t                    TrendWidget.prototype.onDestroy = function() {\n\t                        for (var _i = 0, _a = this.unsubscribers; _i < _a.length; _i++) {\n\t                            var unsubscriber = _a[_i];\n\t                            unsubscriber();\n\t                        }\n\t                    };\n\t                    TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t                    TrendWidget.prototype.onZoomFrame = function(options) {};\n\t                    TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t                    TrendWidget.prototype.onZoom = function() {};\n\t                    TrendWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.bindEvent(this.trend.segments.onAnimationFrame(function(trendPoints) {\n\t                            return _this.onSegmentsAnimate(trendPoints);\n\t                        }));\n\t                        this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n\t                            return _this.onTransformationFrame(options);\n\t                        }));\n\t                        this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n\t                            return _this.onZoomFrame(options);\n\t                        }));\n\t                        this.bindEvent(this.chartState.onZoom(function() {\n\t                            return _this.onZoom();\n\t                        }));\n\t                    };\n\t                    TrendWidget.prototype.bindEvent = function(unsubscriber) {\n\t                        this.unsubscribers.push(unsubscriber);\n\t                    };\n\t                    return TrendWidget;\n\t                }();\n\t                exports.TrendWidget = TrendWidget;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Widget_1 = __webpack_require__(17);\n\t                var Object3D = THREE.Object3D;\n\t                var Geometry = THREE.Geometry;\n\t                var LineBasicMaterial = THREE.LineBasicMaterial;\n\t                var Vector3 = THREE.Vector3;\n\t                var Utils_1 = __webpack_require__(16);\n\t                var Line = THREE.Line;\n\t                var Mesh = THREE.Mesh;\n\t                var interfaces_1 = __webpack_require__(23);\n\t                var AxisMarksWidget = function(_super) {\n\t                    __extends(AxisMarksWidget, _super);\n\t                    function AxisMarksWidget(chartState) {\n\t                        _super.call(this, chartState);\n\t                        this.axisMarksWidgets = [];\n\t                        this.object3D = new Object3D();\n\t                        var xAxisMarks = chartState.xAxisMarks, yAxisMarks = chartState.yAxisMarks;\n\t                        var items = xAxisMarks.getItems();\n\t                        for (var markName in items) {\n\t                            this.createAxisMark(items[markName]);\n\t                        }\n\t                        items = yAxisMarks.getItems();\n\t                        for (var markName in items) {\n\t                            this.createAxisMark(items[markName]);\n\t                        }\n\t                    }\n\t                    AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n\t                        var axisMarkWidget = new AxisMarkWidget(this.chartState, axisMark);\n\t                        this.axisMarksWidgets.push(axisMarkWidget);\n\t                        this.object3D.add(axisMarkWidget.getObject3D());\n\t                    };\n\t                    AxisMarksWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.bindEvent(this.chartState.screen.onTransformationFrame(function() {\n\t                            return _this.updateMarksPositions();\n\t                        }), this.chartState.onResize(function() {\n\t                            return _this.updateMarksPositions();\n\t                        }));\n\t                    };\n\t                    AxisMarksWidget.prototype.updateMarksPositions = function() {\n\t                        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n\t                            var widget = _a[_i];\n\t                            widget.updatePosition();\n\t                        }\n\t                    };\n\t                    AxisMarksWidget.prototype.getObject3D = function() {\n\t                        return this.object3D;\n\t                    };\n\t                    AxisMarksWidget.widgetName = \"AxisMarks\";\n\t                    return AxisMarksWidget;\n\t                }(Widget_1.ChartWidget);\n\t                exports.AxisMarksWidget = AxisMarksWidget;\n\t                var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n\t                    var axisMark = axisMarkWidget.axisMark;\n\t                    ctx.fillStyle = axisMark.options.lineColor;\n\t                    ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n\t                    var xCoord = 15;\n\t                    if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n\t                        ctx.textAlign = \"end\";\n\t                        xCoord = axisMarkWidget.indicatorWidth;\n\t                    }\n\t                    ctx.fillText(axisMark.options.title, xCoord, 20);\n\t                    if (!axisMark.options.showValue) return;\n\t                    ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n\t                    ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n\t                };\n\t                var INDICATOR_POS_Z = .1;\n\t                var AxisMarkWidget = function() {\n\t                    function AxisMarkWidget(chartState, axisMark) {\n\t                        this.indicatorWidth = 128;\n\t                        this.indicatorHeight = 64;\n\t                        this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n\t                        this.chartState = chartState;\n\t                        this.axisMark = axisMark;\n\t                        this.axisType = axisMark.axisType;\n\t                        this.frameValue = axisMark.options.value;\n\t                        this.object3D = new Object3D();\n\t                        this.object3D.position.setZ(-.1);\n\t                        this.line = this.createLine();\n\t                        this.object3D.add(this.line);\n\t                        this.indicator = this.createIndicator();\n\t                        this.object3D.add(this.indicator);\n\t                        this.renderIndicator();\n\t                        this.updatePosition();\n\t                        this.bindEvents();\n\t                    }\n\t                    AxisMarkWidget.prototype.getObject3D = function() {\n\t                        return this.object3D;\n\t                    };\n\t                    AxisMarkWidget.prototype.createLine = function() {\n\t                        var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n\t                        var lineGeometry = new Geometry();\n\t                        lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\t                        return new Line(lineGeometry, new LineBasicMaterial({\n\t                            color: Utils_1.Utils.getHexColor(lineColor),\n\t                            linewidth: lineWidth\n\t                        }));\n\t                    };\n\t                    AxisMarkWidget.prototype.createIndicator = function() {\n\t                        var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n\t                        var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n\t                            ctx.beginPath();\n\t                            ctx.font = \"10px Arial\";\n\t                        });\n\t                        var material = new THREE.MeshBasicMaterial({\n\t                            map: texture,\n\t                            side: THREE.FrontSide\n\t                        });\n\t                        material.transparent = true;\n\t                        return new Mesh(new THREE.PlaneGeometry(width, height), material);\n\t                    };\n\t                    AxisMarkWidget.prototype.renderIndicator = function() {\n\t                        var texture = this.indicator.material.map;\n\t                        var ctx = texture.image.getContext(\"2d\");\n\t                        DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n\t                        texture.needsUpdate = true;\n\t                    };\n\t                    AxisMarkWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        this.axisMark.onDisplayedValueChange(function() {\n\t                            return _this.renderIndicator();\n\t                        });\n\t                        this.axisMark.onValueChange(function() {\n\t                            return _this.onValueChangeHandler();\n\t                        });\n\t                    };\n\t                    AxisMarkWidget.prototype.onValueChangeHandler = function() {\n\t                        var _this = this;\n\t                        if (this.moveAnimation) this.moveAnimation.kill();\n\t                        var animations = this.chartState.data.animations;\n\t                        var targetValue = this.axisMark.options.value;\n\t                        var cb = function() {\n\t                            _this.updatePosition();\n\t                        };\n\t                        if (animations.enabled) {\n\t                            this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n\t                                frameValue: targetValue,\n\t                                ease: animations.trendChangeEase\n\t                            });\n\t                            this.moveAnimation.eventCallback(\"onUpdate\", cb);\n\t                        } else {\n\t                            this.frameValue = targetValue;\n\t                            cb();\n\t                        }\n\t                    };\n\t                    AxisMarkWidget.prototype.updatePosition = function() {\n\t                        var chartState = this.chartState;\n\t                        var screen = chartState.screen;\n\t                        var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n\t                        var lineGeometry = this.line.geometry;\n\t                        var hasStickMode = this.axisMark.options.stickToEdges;\n\t                        var _a = this.chartState.data, width = _a.width, height = _a.height;\n\t                        if (isXAxis) {\n\t                            this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n\t                            this.object3D.position.y = screen.getBottom();\n\t                            lineGeometry.vertices[1].setY(height);\n\t                            this.indicator.position.set(this.indicatorWidth / 2, chartState.data.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n\t                        } else {\n\t                            var val = this.frameValue;\n\t                            var bottomVal = screen.getBottomVal();\n\t                            var topVal = screen.getTopVal();\n\t                            var needToStickOnTop = hasStickMode && val > topVal;\n\t                            var needToStickOnBottom = hasStickMode && val < bottomVal;\n\t                            var centerYVal = screen.getCenterYVal();\n\t                            this.object3D.position.x = screen.getLeft();\n\t                            if (needToStickOnTop) {\n\t                                this.object3D.position.y = screen.getTop();\n\t                            } else if (needToStickOnBottom) {\n\t                                this.object3D.position.y = screen.getBottom();\n\t                            } else {\n\t                                this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n\t                            }\n\t                            lineGeometry.vertices[1].setX(width);\n\t                            var indicatorPosY = val > centerYVal ? -35 : 10;\n\t                            this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n\t                        }\n\t                        lineGeometry.verticesNeedUpdate = true;\n\t                    };\n\t                    AxisMarkWidget.typeName = \"simple\";\n\t                    return AxisMarkWidget;\n\t                }();\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Widget_1 = __webpack_require__(17);\n\t                var LineSegments = THREE.LineSegments;\n\t                var Vector3 = THREE.Vector3;\n\t                var BorderWidget = function(_super) {\n\t                    __extends(BorderWidget, _super);\n\t                    function BorderWidget(chartState) {\n\t                        _super.call(this, chartState);\n\t                        var _a = chartState.data, width = _a.width, height = _a.height;\n\t                        var geometry = new THREE.Geometry();\n\t                        var material = new THREE.LineBasicMaterial({\n\t                            linewidth: 1,\n\t                            opacity: 0,\n\t                            transparent: true\n\t                        });\n\t                        geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, height, 0), new Vector3(0, height, 0), new Vector3(width, height, 0), new Vector3(width, height, 0), new Vector3(width, 0, 0), new Vector3(width, 0, 0), new Vector3(0, 0, 0), new Vector3(width / 2, height, 0), new Vector3(width / 2, 0, 0));\n\t                        this.lineSegments = new LineSegments(geometry, material);\n\t                    }\n\t                    BorderWidget.prototype.getObject3D = function() {\n\t                        return this.lineSegments;\n\t                    };\n\t                    BorderWidget.widgetName = \"Border\";\n\t                    return BorderWidget;\n\t                }(Widget_1.ChartWidget);\n\t                exports.BorderWidget = BorderWidget;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Utils_1 = __webpack_require__(16);\n\t                var Mesh = THREE.Mesh;\n\t                var TrendsWidget_1 = __webpack_require__(27);\n\t                var Color = THREE.Color;\n\t                var CANVAS_WIDTH = 128;\n\t                var CANVAS_HEIGHT = 64;\n\t                var OFFSET_X = 15;\n\t                var TrendsIndicatorWidget = function(_super) {\n\t                    __extends(TrendsIndicatorWidget, _super);\n\t                    function TrendsIndicatorWidget() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                        return TrendIndicator;\n\t                    };\n\t                    TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t                    return TrendsIndicatorWidget;\n\t                }(TrendsWidget_1.TrendsWidget);\n\t                exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t                var TrendIndicator = function(_super) {\n\t                    __extends(TrendIndicator, _super);\n\t                    function TrendIndicator(state, trendName) {\n\t                        _super.call(this, state, trendName);\n\t                        this.initObject();\n\t                        this.onTrendChange();\n\t                    }\n\t                    TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                        return trendOptions.enabled && trendOptions.hasIndicator;\n\t                    };\n\t                    TrendIndicator.prototype.getObject3D = function() {\n\t                        return this.mesh;\n\t                    };\n\t                    TrendIndicator.prototype.onTrendChange = function() {\n\t                        var trendData = this.trend.getData();\n\t                        var lastItem = trendData[trendData.length - 1];\n\t                        var texture = this.mesh.material.map;\n\t                        var ctx = texture.image.getContext(\"2d\");\n\t                        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                        ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                        texture.needsUpdate = true;\n\t                    };\n\t                    TrendIndicator.prototype.initObject = function() {\n\t                        var color = new Color(this.trend.getOptions().lineColor);\n\t                        var texture = Utils_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                            ctx.beginPath();\n\t                            ctx.font = \"15px Arial\";\n\t                            ctx.fillStyle = color.getStyle();\n\t                            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                        });\n\t                        var material = new THREE.MeshBasicMaterial({\n\t                            map: texture,\n\t                            side: THREE.FrontSide\n\t                        });\n\t                        material.transparent = true;\n\t                        this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t                    };\n\t                    TrendIndicator.prototype.onTransformationFrame = function() {\n\t                        this.segment = this.trend.segments.getEndSegment();\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                        this.segment = segments.getEndSegment();\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendIndicator.prototype.updatePosition = function() {\n\t                        var state = this.chartState;\n\t                        var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                        var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                        var screenWidth = state.data.width;\n\t                        var x = endPointVector.x + OFFSET_X;\n\t                        var y = endPointVector.y;\n\t                        var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                        var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                        if (indicatorIsOutOfScreen) {\n\t                            if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n\t                            if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                            y -= 25;\n\t                        }\n\t                        this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t                    };\n\t                    return TrendIndicator;\n\t                }(TrendsWidget_1.TrendWidget);\n\t                exports.TrendIndicator = TrendIndicator;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Geometry = THREE.Geometry;\n\t                var LineBasicMaterial = THREE.LineBasicMaterial;\n\t                var Vector3 = THREE.Vector3;\n\t                var TrendsWidget_1 = __webpack_require__(27);\n\t                var LineSegments = THREE.LineSegments;\n\t                var Trend_1 = __webpack_require__(19);\n\t                var Utils_1 = __webpack_require__(16);\n\t                var MAX_DISPLAYED_SEGMENTS = 2e3;\n\t                var TrendsLineWidget = function(_super) {\n\t                    __extends(TrendsLineWidget, _super);\n\t                    function TrendsLineWidget() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                        return TrendLine;\n\t                    };\n\t                    TrendsLineWidget.widgetName = \"TrendsLine\";\n\t                    return TrendsLineWidget;\n\t                }(TrendsWidget_1.TrendsWidget);\n\t                exports.TrendsLineWidget = TrendsLineWidget;\n\t                var TrendLine = function(_super) {\n\t                    __extends(TrendLine, _super);\n\t                    function TrendLine(chartState, trendName) {\n\t                        _super.call(this, chartState, trendName);\n\t                        this.freeSegmentsInds = [];\n\t                        this.displayedSegments = {};\n\t                        var options = this.trend.getOptions();\n\t                        this.material = new LineBasicMaterial({\n\t                            color: options.lineColor,\n\t                            linewidth: options.lineWidth\n\t                        });\n\t                        this.initLine();\n\t                    }\n\t                    TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t                    };\n\t                    TrendLine.prototype.getObject3D = function() {\n\t                        return this.lineSegments;\n\t                    };\n\t                    TrendLine.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        _super.prototype.bindEvents.call(this);\n\t                        this.bindEvent(this.trend.segments.onRebuild(function() {\n\t                            _this.destroySegments();\n\t                            _this.setupSegments();\n\t                        }));\n\t                        this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n\t                            _this.setupSegments();\n\t                        }));\n\t                    };\n\t                    TrendLine.prototype.initLine = function() {\n\t                        var geometry = new Geometry();\n\t                        var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                        var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                        this.scaleXFactor = scaleXFactor;\n\t                        this.scaleYFactor = scaleYFactor;\n\t                        this.lineSegments = new LineSegments(geometry, this.material);\n\t                        this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                        this.lineSegments.frustumCulled = false;\n\t                        for (var i = 0; i < MAX_DISPLAYED_SEGMENTS; i++) {\n\t                            geometry.vertices.push(new Vector3(), new Vector3());\n\t                            this.freeSegmentsInds.push(i);\n\t                        }\n\t                        this.vertices = geometry.vertices;\n\t                        this.setupSegments();\n\t                    };\n\t                    TrendLine.prototype.setupSegments = function() {\n\t                        var geometry = this.lineSegments.geometry;\n\t                        var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                        for (var segmentId in this.displayedSegments) {\n\t                            var lineSegment = this.displayedSegments[segmentId];\n\t                            var segment_1 = this.trend.segments.segments[lineSegment.segmentId];\n\t                            var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                            if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                        }\n\t                        var segment = firstDisplayedSegment;\n\t                        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                            this.setupSegment(segment.id, segment.currentAnimationState);\n\t                            segment = segment.getNext();\n\t                        }\n\t                        geometry.verticesNeedUpdate = true;\n\t                    };\n\t                    TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                        var lineSegment = this.displayedSegments[segmentId];\n\t                        if (!lineSegment) {\n\t                            if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                            var ind = this.freeSegmentsInds.pop();\n\t                            lineSegment = this.displayedSegments[segmentId] = {\n\t                                segmentId: segmentId,\n\t                                ind: ind\n\t                            };\n\t                        }\n\t                        var segmentInd = lineSegment.ind;\n\t                        var lineStartVertex = this.vertices[segmentInd * 2];\n\t                        var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                        lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                        lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t                    };\n\t                    TrendLine.prototype.destroySegments = function() {\n\t                        for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t                    };\n\t                    TrendLine.prototype.destroySegment = function(segmentId) {\n\t                        var lineSegment = this.displayedSegments[segmentId];\n\t                        var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                        var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                        lineStartVertex.set(0, 0, 0);\n\t                        lineEndVertex.set(0, 0, 0);\n\t                        delete this.displayedSegments[segmentId];\n\t                        this.freeSegmentsInds.push(lineSegment.ind);\n\t                    };\n\t                    TrendLine.prototype.onZoomFrame = function(options) {\n\t                        var currentScale = this.lineSegments.scale;\n\t                        if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                        if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t                    };\n\t                    TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                        var geometry = this.lineSegments.geometry;\n\t                        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                            var segmentId = _a[_i];\n\t                            if (!this.displayedSegments[segmentId]) continue;\n\t                            this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                        }\n\t                        geometry.verticesNeedUpdate = true;\n\t                    };\n\t                    TrendLine.prototype.toLocalX = function(xVal) {\n\t                        return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t                    };\n\t                    TrendLine.prototype.toLocalY = function(yVal) {\n\t                        return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t                    };\n\t                    TrendLine.prototype.toLocalVec = function(vec) {\n\t                        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t                    };\n\t                    return TrendLine;\n\t                }(TrendsWidget_1.TrendWidget);\n\t                exports.TrendLine = TrendLine;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var TrendsWidget_1 = __webpack_require__(27);\n\t                var Object3D = THREE.Object3D;\n\t                var Geometry = THREE.Geometry;\n\t                var Vector3 = THREE.Vector3;\n\t                var Mesh = THREE.Mesh;\n\t                var Line = THREE.Line;\n\t                var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t                var PlaneGeometry = THREE.PlaneGeometry;\n\t                var Trend_1 = __webpack_require__(19);\n\t                var LineBasicMaterial = THREE.LineBasicMaterial;\n\t                var Utils_1 = __webpack_require__(16);\n\t                var RISE_COLOR = 2927680;\n\t                var FALL_COLOR = 15619379;\n\t                var MARGIN_PERCENT = .3;\n\t                var MAX_CANDLES = 100;\n\t                var TrendsCandlesWidget = function(_super) {\n\t                    __extends(TrendsCandlesWidget, _super);\n\t                    function TrendsCandlesWidget() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                        return TrendCandlesWidget;\n\t                    };\n\t                    TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t                    return TrendsCandlesWidget;\n\t                }(TrendsWidget_1.TrendsWidget);\n\t                exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t                var TrendCandlesWidget = function(_super) {\n\t                    __extends(TrendCandlesWidget, _super);\n\t                    function TrendCandlesWidget(chartState, trendName) {\n\t                        _super.call(this, chartState, trendName);\n\t                        this.freeCandlesInds = [];\n\t                        this.candlesPool = [];\n\t                        this.candles = {};\n\t                        this.initObject();\n\t                    }\n\t                    TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t                    };\n\t                    TrendCandlesWidget.prototype.getObject3D = function() {\n\t                        return this.object3D;\n\t                    };\n\t                    TrendCandlesWidget.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        _super.prototype.bindEvents.call(this);\n\t                        this.bindEvent(this.trend.segments.onRebuild(function() {\n\t                            _this.destroyCandles();\n\t                            _this.setupCandles();\n\t                        }));\n\t                        this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n\t                            _this.setupCandles();\n\t                        }));\n\t                    };\n\t                    TrendCandlesWidget.prototype.initObject = function() {\n\t                        var stateData = this.chartState.data;\n\t                        var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                        var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                        this.scaleXFactor = scaleXFactor;\n\t                        this.scaleYFactor = scaleYFactor;\n\t                        this.object3D = new Object3D();\n\t                        this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                        this.object3D.frustumCulled = false;\n\t                        for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                        this.setupCandles();\n\t                    };\n\t                    TrendCandlesWidget.prototype.setupCandles = function() {\n\t                        var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                        for (var segmentId in this.candles) {\n\t                            var segment_1 = this.candles[segmentId].segment;\n\t                            var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                            if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                        }\n\t                        var segment = firstDisplayedSegment;\n\t                        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                            this.setupCandle(segment.id, segment.currentAnimationState);\n\t                            segment = segment.getNext();\n\t                        }\n\t                    };\n\t                    TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                        for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t                    };\n\t                    TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                        var candle = this.candles[segmentId];\n\t                        this.object3D.remove(candle.getObject3D());\n\t                        delete this.candles[segmentId];\n\t                    };\n\t                    TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                        var currentScale = this.object3D.scale;\n\t                        if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                        if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t                    };\n\t                    TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                            var segmentId = _a[_i];\n\t                            if (!this.candles[segmentId]) continue;\n\t                            var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                            this.setupCandle(segmentId, segmentState);\n\t                        }\n\t                    };\n\t                    TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                        var candleInd = candleId % MAX_CANDLES;\n\t                        var candle = this.candlesPool[candleInd];\n\t                        if (!candle) {\n\t                            candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                        }\n\t                        if (!this.candles[candleId]) {\n\t                            this.candles[candleId] = candle;\n\t                            this.object3D.add(candle.getObject3D());\n\t                        }\n\t                        candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                        candle.setSegment(segmentState);\n\t                    };\n\t                    TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                        return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t                    };\n\t                    TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                        return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t                    };\n\t                    TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t                    };\n\t                    return TrendCandlesWidget;\n\t                }(TrendsWidget_1.TrendWidget);\n\t                exports.TrendCandlesWidget = TrendCandlesWidget;\n\t                var CandleWidget = function() {\n\t                    function CandleWidget() {\n\t                        this.initObject();\n\t                    }\n\t                    CandleWidget.prototype.getObject3D = function() {\n\t                        return this.rect;\n\t                    };\n\t                    CandleWidget.prototype.setSegment = function(segment) {\n\t                        this.segment = segment;\n\t                        var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                        var geometry = this.rect.geometry;\n\t                        var material = this.rect.material;\n\t                        var width = segment.endXVal - segment.startXVal;\n\t                        width -= width * MARGIN_PERCENT;\n\t                        var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                        var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                        leftTop.set(-width / 2, height / 2, 0);\n\t                        rightTop.set(width / 2, height / 2, 0);\n\t                        leftBottom.set(-width / 2, -height / 2, 0);\n\t                        rightBottom.set(width / 2, -height / 2, 0);\n\t                        if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                            leftBottom.setY(leftBottom.y + 1);\n\t                            rightBottom.setY(rightBottom.y + 1);\n\t                        }\n\t                        material.color.set(color);\n\t                        geometry.verticesNeedUpdate = true;\n\t                        var vLineGeometry = this.vLine.geometry;\n\t                        var vLineMaterial = this.vLine.material;\n\t                        var lineTop = segment.maxYVal - segment.yVal;\n\t                        var lineBottom = segment.minYVal - segment.yVal;\n\t                        vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                        vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                        vLineMaterial.color.set(color);\n\t                        vLineGeometry.verticesNeedUpdate = true;\n\t                        var hLineGeometry = this.hLine.geometry;\n\t                        var hLineMaterial = this.hLine.material;\n\t                        var lineLeft = -width / 2;\n\t                        var lineRight = width / 2;\n\t                        hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                        hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                        hLineMaterial.color.set(color);\n\t                        hLineGeometry.verticesNeedUpdate = true;\n\t                    };\n\t                    CandleWidget.prototype.initObject = function() {\n\t                        this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                        var vLineGeometry = new Geometry();\n\t                        var hLineGeometry = new Geometry();\n\t                        vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                        hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                        this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                            linewidth: 1\n\t                        }));\n\t                        this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                            linewidth: 1\n\t                        }));\n\t                        this.rect.add(this.vLine);\n\t                        this.rect.add(this.hLine);\n\t                    };\n\t                    return CandleWidget;\n\t                }();\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var __extends = this && this.__extends || function(d, b) {\n\t                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t                    function __() {\n\t                        this.constructor = d;\n\t                    }\n\t                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t                };\n\t                var Utils_1 = __webpack_require__(16);\n\t                var Mesh = THREE.Mesh;\n\t                var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t                var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t                var TrendsWidget_1 = __webpack_require__(27);\n\t                var Trend_1 = __webpack_require__(19);\n\t                var TrendsBeaconWidget = function(_super) {\n\t                    __extends(TrendsBeaconWidget, _super);\n\t                    function TrendsBeaconWidget() {\n\t                        _super.apply(this, arguments);\n\t                    }\n\t                    TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                        return TrendBeacon;\n\t                    };\n\t                    TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t                    return TrendsBeaconWidget;\n\t                }(TrendsWidget_1.TrendsWidget);\n\t                exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t                var TrendBeacon = function(_super) {\n\t                    __extends(TrendBeacon, _super);\n\t                    function TrendBeacon(state, trendName) {\n\t                        _super.call(this, state, trendName);\n\t                        this.initObject();\n\t                        if (state.data.animations.enabled) {\n\t                            this.animate();\n\t                        }\n\t                        this.updatePosition();\n\t                    }\n\t                    TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                        return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t                    };\n\t                    TrendBeacon.prototype.getObject3D = function() {\n\t                        return this.mesh;\n\t                    };\n\t                    TrendBeacon.prototype.onTrendChange = function() {\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendBeacon.prototype.bindEvents = function() {\n\t                        var _this = this;\n\t                        _super.prototype.bindEvents.call(this);\n\t                        this.bindEvent(this.chartState.onScroll(function() {\n\t                            return _this.updatePosition();\n\t                        }));\n\t                        this.bindEvent(this.chartState.onChange(function(changedProps) {\n\t                            return _this.onStateChange(changedProps);\n\t                        }));\n\t                        this.bindEvent(this.chartState.onDestroy(function() {\n\t                            return _this.stopAnimation();\n\t                        }));\n\t                    };\n\t                    TrendBeacon.prototype.initObject = function() {\n\t                        var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                            map: TrendBeacon.createTexture(),\n\t                            transparent: true\n\t                        }));\n\t                        light.scale.set(.2, .2, 1);\n\t                        light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                            map: TrendBeacon.createTexture()\n\t                        })));\n\t                        this.segment = this.trend.segments.getEndSegment();\n\t                    };\n\t                    TrendBeacon.prototype.animate = function() {\n\t                        var _this = this;\n\t                        this.animated = true;\n\t                        var object = this.mesh;\n\t                        var animationObject = {\n\t                            scale: object.scale.x,\n\t                            opacity: object.material.opacity\n\t                        };\n\t                        this.mesh.scale.set(.1, .1, 1);\n\t                        setTimeout(function() {\n\t                            var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                                scale: 1,\n\t                                opacity: 0\n\t                            });\n\t                            animation.eventCallback(\"onUpdate\", function() {\n\t                                object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                                object.material.opacity = animationObject.opacity;\n\t                            }).eventCallback(\"onComplete\", function() {\n\t                                _this.animation && animation.restart();\n\t                            });\n\t                        }, 500);\n\t                    };\n\t                    TrendBeacon.prototype.stopAnimation = function() {\n\t                        this.animated = false;\n\t                        this.animation && this.animation.kill();\n\t                        this.animation = null;\n\t                    };\n\t                    TrendBeacon.createTexture = function() {\n\t                        var h = 32, w = 32;\n\t                        return Utils_1.Utils.createTexture(h, w, function(ctx) {\n\t                            ctx.beginPath();\n\t                            ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                            ctx.fillStyle = \"white\";\n\t                            ctx.fill();\n\t                        });\n\t                    };\n\t                    TrendBeacon.prototype.onTransformationFrame = function() {\n\t                        this.segment = this.trend.segments.getEndSegment();\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                        this.segment = trendsSegments.getEndSegment();\n\t                        this.updatePosition();\n\t                    };\n\t                    TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                        if (!changedProps.animations) return;\n\t                        if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                        if (changedProps.animations.enabled) {\n\t                            this.animate();\n\t                        } else {\n\t                            this.stopAnimation();\n\t                        }\n\t                    };\n\t                    TrendBeacon.prototype.updatePosition = function() {\n\t                        var state = this.chartState;\n\t                        var xVal, yVal;\n\t                        var currentAnimationState = this.segment.currentAnimationState;\n\t                        if (this.trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n\t                            xVal = currentAnimationState.endXVal;\n\t                            yVal = currentAnimationState.endYVal;\n\t                        } else {\n\t                            xVal = currentAnimationState.xVal;\n\t                            yVal = currentAnimationState.endYVal;\n\t                        }\n\t                        var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n\t                        var screenWidth = state.data.width;\n\t                        var x = endPointVector.x;\n\t                        var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                        if (screenX < 0) x = state.screen.getPointByScreenX(0);\n\t                        if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n\t                        this.mesh.position.set(x, endPointVector.y, .1);\n\t                    };\n\t                    return TrendBeacon;\n\t                }(TrendsWidget_1.TrendWidget);\n\t                exports.TrendBeacon = TrendBeacon;\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                function __export(m) {\n\t                    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t                }\n\t                __export(__webpack_require__(3));\n\t            }, function(module, exports, __webpack_require__) {\n\t                \"use strict\";\n\t                var Utils_1 = __webpack_require__(16);\n\t                var EventEmmiter_1 = __webpack_require__(15);\n\t                exports.DEFAULT_CONFIG = {\n\t                    installPluginWidgets: true\n\t                };\n\t                var ChartPlugin = function() {\n\t                    function ChartPlugin(options, config) {\n\t                        if (config === void 0) {\n\t                            config = {};\n\t                        }\n\t                        this.unsubscribers = [];\n\t                        this.initialState = options;\n\t                        this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                        this.name = this.constructor.NAME;\n\t                        if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t                    }\n\t                    ChartPlugin.prototype.setupChartState = function(chartState) {\n\t                        var _this = this;\n\t                        this.chartState = chartState;\n\t                        this.ee = new EventEmmiter_1.EventEmitter();\n\t                        this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n\t                            return _this.onInitialStateAppliedHandler(initialState);\n\t                        }), this.chartState.onReady(function() {\n\t                            return _this.onChartReadyHandler();\n\t                        }), this.chartState.onDestroy(function() {\n\t                            return _this.onDestroyHandler();\n\t                        }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n\t                            return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                        }));\n\t                    };\n\t                    ChartPlugin.prototype.getOptions = function() {\n\t                        return this.chartState.data.pluginsState[this.name];\n\t                    };\n\t                    ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t                    ChartPlugin.prototype.onChartReadyHandler = function() {};\n\t                    ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t                    ChartPlugin.prototype.onDestroyHandler = function() {\n\t                        this.ee.removeAllListeners();\n\t                    };\n\t                    ChartPlugin.prototype.bindEvent = function() {\n\t                        var args = [];\n\t                        for (var _i = 0; _i < arguments.length; _i++) {\n\t                            args[_i - 0] = arguments[_i];\n\t                        }\n\t                        var unsubscribers = [];\n\t                        if (!Array.isArray(args[0])) {\n\t                            unsubscribers.push(args[0]);\n\t                        } else {\n\t                            unsubscribers.push.apply(unsubscribers, args);\n\t                        }\n\t                        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                        var _a;\n\t                    };\n\t                    ChartPlugin.prototype.unbindEvents = function() {\n\t                        this.unsubscribers.forEach(function(unsubscriber) {\n\t                            return unsubscriber();\n\t                        });\n\t                        this.unsubscribers.length = 0;\n\t                    };\n\t                    ChartPlugin.NAME = \"\";\n\t                    ChartPlugin.pluginWidgets = [];\n\t                    return ChartPlugin;\n\t                }();\n\t                exports.ChartPlugin = ChartPlugin;\n\t            } ]);\n\t        });\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var three_chart_1 = __webpack_require__(2);\n\t        var Geometry = THREE.Geometry;\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsMarksPlugin_1 = __webpack_require__(1);\n\t        var MAX_MARKS_IN_ROW = 3;\n\t        var TrendsMarksWidget = function(_super) {\n\t            __extends(TrendsMarksWidget, _super);\n\t            function TrendsMarksWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsMarksWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendMarksWidget;\n\t            };\n\t            TrendsMarksWidget.widgetName = \"TrendsMarks\";\n\t            return TrendsMarksWidget;\n\t        }(three_chart_1.TrendsWidget);\n\t        exports.TrendsMarksWidget = TrendsMarksWidget;\n\t        var TrendMarksWidget = function(_super) {\n\t            __extends(TrendMarksWidget, _super);\n\t            function TrendMarksWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.marksWidgets = {};\n\t                this.object3D = new Object3D();\n\t                this.onMarksChange();\n\t            }\n\t            TrendMarksWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendMarksWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.getTrendsMarksPlugin().onChange(function() {\n\t                    return _this.onMarksChange();\n\t                });\n\t            };\n\t            TrendMarksWidget.prototype.getTrendsMarksPlugin = function() {\n\t                return this.chartState.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\n\t            };\n\t            TrendMarksWidget.prototype.onMarksChange = function() {\n\t                var marksItems = this.getTrendsMarksPlugin().getItems();\n\t                var widgets = this.marksWidgets;\n\t                var actualMarksNames = [];\n\t                for (var markName in marksItems) {\n\t                    actualMarksNames.push(markName);\n\t                    if (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t                }\n\t                for (var markName in this.marksWidgets) {\n\t                    if (actualMarksNames.indexOf(markName) !== -1) continue;\n\t                    this.destroyMarkWidget(markName);\n\t                }\n\t            };\n\t            TrendMarksWidget.prototype.createMarkWidget = function(mark) {\n\t                if (!mark.segment) return;\n\t                var markWidget = new TrendMarkWidget(this.chartState, mark);\n\t                this.marksWidgets[mark.options.name] = markWidget;\n\t                this.object3D.add(markWidget.getObject3D());\n\t            };\n\t            TrendMarksWidget.prototype.destroyMarkWidget = function(markName) {\n\t                this.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t                delete this.marksWidgets[markName];\n\t            };\n\t            TrendMarksWidget.prototype.onZoomFrame = function() {\n\t                var widgets = this.marksWidgets;\n\t                for (var markName in widgets) {\n\t                    widgets[markName].onZoomFrameHandler();\n\t                }\n\t            };\n\t            TrendMarksWidget.prototype.onSegmentsAnimate = function() {\n\t                var widgets = this.marksWidgets;\n\t                for (var markName in widgets) {\n\t                    widgets[markName].onSegmentsAnimate();\n\t                }\n\t            };\n\t            return TrendMarksWidget;\n\t        }(three_chart_1.TrendWidget);\n\t        exports.TrendMarksWidget = TrendMarksWidget;\n\t        var TrendMarkWidget = function() {\n\t            function TrendMarkWidget(chartState, trendMark) {\n\t                this.markHeight = 74;\n\t                this.markWidth = 150;\n\t                this.position = {\n\t                    lineHeight: 30,\n\t                    x: 0,\n\t                    y: 0\n\t                };\n\t                this.chartState = chartState;\n\t                this.mark = trendMark;\n\t                this.initObject();\n\t                this.show();\n\t            }\n\t            TrendMarkWidget.prototype.initObject = function() {\n\t                this.object3D = new Object3D();\n\t                this.markMesh = this.createMarkMesh();\n\t                this.line = this.createMarkLine();\n\t                this.object3D.add(this.markMesh);\n\t                this.object3D.add(this.line);\n\t            };\n\t            TrendMarkWidget.prototype.createMarkMesh = function() {\n\t                var _a = this, markHeight = _a.markHeight, markWidth = _a.markWidth;\n\t                var mark = this.mark.options;\n\t                var isTopSide = mark.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\n\t                var texture = three_chart_1.Utils.createPixelPerfectTexture(markWidth, markHeight, function(ctx) {\n\t                    var circleOffset = isTopSide ? 30 : 0;\n\t                    var circleR = 22;\n\t                    var circleX = markWidth / 2;\n\t                    var circleY = circleOffset + circleR;\n\t                    var textOffset = isTopSide ? 10 : circleR * 2 + 15;\n\t                    ctx.beginPath();\n\t                    ctx.textAlign = \"center\";\n\t                    ctx.font = \"11px Arial\";\n\t                    ctx.fillStyle = \"rgba(255,255,255, 0.6)\";\n\t                    ctx.fillText(mark.title, circleX, textOffset);\n\t                    ctx.fillStyle = mark.descriptionColor;\n\t                    ctx.fillText(mark.description, circleX, textOffset + 12);\n\t                    ctx.beginPath();\n\t                    ctx.fillStyle = mark.iconColor;\n\t                    ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n\t                    ctx.fill();\n\t                    ctx.font = \"19px Arial\";\n\t                    ctx.fillStyle = \"rgb(255, 255, 255)\";\n\t                    ctx.fillText(mark.icon, circleX, circleY + 7);\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var mesh = new Mesh(new THREE.PlaneGeometry(markWidth, markHeight), material);\n\t                var offset = this.mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP ? this.mark.offset : -this.mark.offset;\n\t                return mesh;\n\t            };\n\t            TrendMarkWidget.prototype.createMarkLine = function() {\n\t                var lineGeometry = new Geometry();\n\t                lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, this.mark.offset, 0));\n\t                lineGeometry.computeLineDistances();\n\t                var lineMaterial = new THREE.LineDashedMaterial({\n\t                    dashSize: 1,\n\t                    gapSize: 4,\n\t                    transparent: true,\n\t                    opacity: .6\n\t                });\n\t                var line = new THREE.Line(lineGeometry, lineMaterial);\n\t                line.position.setZ(-.1);\n\t                return line;\n\t            };\n\t            TrendMarkWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendMarkWidget.prototype.onSegmentsAnimate = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendMarkWidget.prototype.onZoomFrameHandler = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendMarkWidget.prototype.updatePosition = function() {\n\t                if (!this.mark.segment) return;\n\t                var mark = this.mark;\n\t                var meshMaterial = this.markMesh.material;\n\t                var lineMaterial = this.line.material;\n\t                if (mark.row >= MAX_MARKS_IN_ROW - 1) {\n\t                    meshMaterial.opacity = 0;\n\t                    lineMaterial.opacity = 0;\n\t                } else {\n\t                    meshMaterial.opacity = 1;\n\t                    lineMaterial.opacity = 1;\n\t                }\n\t                var screen = this.chartState.screen;\n\t                var posX = screen.getPointOnXAxis(mark.xVal);\n\t                var posY = screen.getPointOnYAxis(mark.yVal);\n\t                var lineGeometry = this.line.geometry;\n\t                if (mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP) {\n\t                    this.markMesh.position.setY(this.markHeight / 2 + mark.offset);\n\t                    lineGeometry.vertices[1].setY(mark.offset);\n\t                } else {\n\t                    this.markMesh.position.setY(-mark.offset - this.markHeight / 2);\n\t                    lineGeometry.vertices[1].setY(-mark.offset);\n\t                }\n\t                lineGeometry.verticesNeedUpdate = true;\n\t                lineGeometry.lineDistancesNeedUpdate = true;\n\t                lineGeometry.computeLineDistances();\n\t                this.object3D.position.set(posX, posY, 0);\n\t            };\n\t            TrendMarkWidget.prototype.show = function() {\n\t                if (!this.mark.segment) return;\n\t                this.updatePosition();\n\t                var animations = this.chartState.data.animations;\n\t                var time = animations.enabled ? 1 : 0;\n\t                this.object3D.scale.set(.01, .01, 1);\n\t                TweenLite.to(this.object3D.scale, time, {\n\t                    x: 1,\n\t                    y: 1,\n\t                    ease: Elastic.easeOut\n\t                });\n\t            };\n\t            return TrendMarkWidget;\n\t        }();\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsMarksPlugin.js.map\n\n/***/ }\n\n/******/ })\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1b961503305d2600f90b\n **/","import { Chart, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from 'three-chart';\nimport enabled = THREE.Cache.enabled;\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/plugins/src/TrendsMarksPlugin/TrendsMarksPlugin';\n\n\nvar chart: Chart;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\tvalue: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\n\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\n\t\t\torientation: orientation,\n\t\t\tdescriptionColor: descriptionColor\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\tchart = new Chart({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 200, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasGradient: false,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.data, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.data, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\t\twidgets: {\n\t\t\t//Grid: {enabled: false},\n\t\t\t//Axis: {enabled: false},\n\t\t\tTrendsGradient: {enabled: false},\n\t\t\t//TrendsBeacon: {enabled: false},\n\t\t\t//TrendsIndicator: {enabled: false},\n\t\t\t// TrendsMarks: {enabled: false},\n\t\t\t// TrendsLoading: {enabled: false},\n\t\t\t// AxisMarks: {enabled: false}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t]\n\t);\n\n\tchart.setState({animations: {enabled: false}});\n\tchart.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chart'] = chart;\n\n\tvar mainTrend = chart.getTrend('main');\n\tvar deadlineMark = chart.state.xAxisMarks.getItem('deadline');\n\tvar closeMark = chart.state.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\t// var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\t// if (markOptions) setTimeout(() => {\n\t\t// \tlet trendsMarks = chart.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t// \ttrendsMarks.createMark(markOptions);\n\t\t// }, 500);\n\t});\n\n\n\t// var previewChart1 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[0],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true}\n\t// \t}\n\t// });\n\t//\n\t// var previewChart2 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[1],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true}\n\t// \t},\n\t//\n\t// });\n\t//\n\t// var previewChart3 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[2],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true},\n\t// \t\t'red': {dataset: dsRed.data, lineColor: 0xFF2222},\n\t// \t}\n\t// });\n\t//\n\n\tvar i = 0;\n\n\tchart.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chart.getTrend('main').appendData([val]);\n\t\t// chart.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\n\t\t// chart.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// chart.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// chart.getTrend('red').appendData([val + 10 + Math.random() * 20]);\n\t\t// chart.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\n\n\n\n\t\t// previewChart1.getTrend('main').appendData([val]);\n\t\t// previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\n\t\t// previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\n\t\t\n\t\t// previewChart1.appendData(dataToAppend1);\n\t\t//\n\t\t// var chartData2 = previewChart2.state.data.trends[0].data;\n\t\t// var lastItem2 = chartData2[chartData.length - 1];\n\t\t// var dataToAppend2 = [\n\t\t// \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\n\t\t// ];\n\t\t// previewChart2.appendData(dataToAppend2);\n\t\t// previewChart3.appendData(dataToAppend2);\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.state.data.xAxis.range;\n\t\tchart.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.state.data.xAxis.range;\n\t\tchart.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchart.state.setState({autoScroll: false});\n\t\t\tchart.state.zoomToRange(range);\n\t\t\tchart.state.scrollToEnd().then(() => {\n\t\t\t\tchart.state.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-chart/build/index.js\n ** module id = 34\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"ThreeChart\"] = factory(); else root[\"ThreeChart\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(35));\n        __export(__webpack_require__(27));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        __webpack_require__(3);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var State_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(16);\n        var AxisWidget_1 = __webpack_require__(24);\n        var GridWidget_1 = __webpack_require__(25);\n        var TrendsLoadingWidget_1 = __webpack_require__(26);\n        var AxisMarksWidget_1 = __webpack_require__(28);\n        var BorderWidget_1 = __webpack_require__(29);\n        var TrendsIndicatorWidget_1 = __webpack_require__(30);\n        var TrendsLineWidget_1 = __webpack_require__(31);\n        var TrendsCandleWidget_1 = __webpack_require__(32);\n        var TrendsBeaconWidget_1 = __webpack_require__(33);\n        var deps_1 = __webpack_require__(34);\n        exports.MAX_DATA_LENGTH = 2692e3;\n        var Chart = function() {\n            function Chart(state, $container, plugins) {\n                var _this = this;\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                this.state = new State_1.ChartState(state, Chart.installedWidgets, plugins);\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            Chart.installWidget = function(Widget) {\n                if (!Widget.widgetName) {\n                    Utils_1.Utils.error(\"unnamed widget\");\n                }\n                this.installedWidgets[Widget.widgetName] = Widget;\n            };\n            Chart.prototype.init = function($container) {\n                var state = this.state;\n                var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                renderer.setPixelRatio(Chart.devicePixelRatio);\n                renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n                renderer.setSize(w, h);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                var widgetsClasses = this.state.widgetsClasses;\n                for (var widgetName in widgetsClasses) {\n                    var widgetOptions = this.state.data.widgets[widgetName];\n                    if (!widgetOptions.enabled) continue;\n                    var WidgetConstructor = widgetsClasses[widgetName];\n                    var widget = new WidgetConstructor(this.state);\n                    this.scene.add(widget.getObject3D());\n                    this.widgets.push(widget);\n                }\n                this.bindEvents();\n                this.renderLoop();\n            };\n            Chart.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.state.data.autoRender.fps;\n                if (fpsLimit) {\n                    var delay = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            Chart.prototype.render = function() {\n                this.renderer.render(this.scene, this.camera);\n            };\n            Chart.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Chart.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            Chart.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.state.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            Chart.prototype.getState = function() {\n                return this.state.data;\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.state.getTrend(trendName);\n            };\n            Chart.prototype.setState = function(state) {\n                return this.state.setState(state);\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.state.data.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.state.data.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.state.onTrendsChange(function() {\n                    return _this.autoscroll();\n                }), this.state.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.state.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            Chart.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            Chart.prototype.setupCamera = function() {\n                var camSettings = this.state.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.state.screen.options);\n            };\n            Chart.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            Chart.prototype.autoscroll = function() {\n                var state = this.state;\n                if (!state.data.autoScroll) return;\n                var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleX = this.state.screen.getScreenRightVal();\n                    var paddingRightX = this.state.getPaddingRight();\n                    var currentScroll = state.data.xAxis.range.scroll;\n                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                        return;\n                    }\n                    var scrollDelta = trendsMaxXDelta;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onScrollStop = function() {};\n            Chart.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            Chart.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            Chart.prototype.onMouseMove = function(ev) {\n                if (this.state.data.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.state.data.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            Chart.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            Chart.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            Chart.prototype.onChartResize = function() {\n                var _a = this.state.data, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var _this = this;\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                var autoScrollIsEnabled = this.state.data.autoScroll;\n                if (autoScrollIsEnabled) this.state.setState({\n                    autoScroll: false\n                });\n                this.state.zoom(zoomValue, zoomOrigin).then(function() {\n                    if (autoScrollIsEnabled) _this.setState({\n                        autoScroll: true\n                    });\n                });\n            };\n            Chart.createPreviewChart = function(userOptions, $el) {\n                var previewChartOptions = {\n                    animations: {\n                        enabled: false\n                    },\n                    widgets: {\n                        Grid: {\n                            enabled: false\n                        },\n                        Axis: {\n                            enabled: false\n                        },\n                        TrendsGradient: {\n                            enabled: false\n                        }\n                    }\n                };\n                var options = Utils_1.Utils.deepMerge(userOptions, previewChartOptions);\n                return new Chart(options, $el);\n            };\n            Chart.devicePixelRatio = window.devicePixelRatio;\n            Chart.installedWidgets = {};\n            Chart.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n        Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n        Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n        Chart.installWidget(AxisWidget_1.AxisWidget);\n        Chart.installWidget(GridWidget_1.GridWidget);\n        Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\n        Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\n        Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\n        Chart.installWidget(AxisMarksWidget_1.AxisMarksWidget);\n        Chart.installWidget(BorderWidget_1.BorderWidget);\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.Stats = __webpack_require__(4);\n        window.TweenLite = __webpack_require__(5);\n        __webpack_require__(7);\n        __webpack_require__(8);\n        exports.isPlainObject = __webpack_require__(9);\n        exports.EE2 = __webpack_require__(11);\n        var es6_promise_1 = __webpack_require__(12);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(13);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n        (function(global) {\n            /*!\n\t * VERSION: 1.18.5\n\t * DATE: 2016-05-24\n\t * UPDATES AND DOCS AT: http://greensock.com\n\t * \n\t * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n\t *\n\t * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n\t * This work is subject to the terms at http://greensock.com/standard-license or for\n\t * Club GreenSock members, the software agreement that was issued with your membership.\n\t * \n\t * @author: Jack Doyle, jack@greensock.com\n\t **/\n            var _gsScope = typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window;\n            (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {\n                \"use strict\";\n                _gsScope._gsDefine(\"TweenMax\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n                    var _slice = function(a) {\n                        var b = [], l = a.length, i;\n                        for (i = 0; i !== l; b.push(a[i++])) ;\n                        return b;\n                    }, _applyCycle = function(vars, targets, i) {\n                        var alt = vars.cycle, p, val;\n                        for (p in alt) {\n                            val = alt[p];\n                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n                        }\n                        delete vars.cycle;\n                    }, TweenMax = function(target, duration, vars) {\n                        TweenLite.call(this, target, duration, vars);\n                        this._cycle = 0;\n                        this._yoyo = this.vars.yoyo === true;\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._dirty = true;\n                        this.render = TweenMax.prototype.render;\n                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, p = TweenMax.prototype = TweenLite.to({}, .1, {}), _blankArray = [];\n                    TweenMax.version = \"1.18.5\";\n                    p.constructor = TweenMax;\n                    p.kill()._gc = false;\n                    TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n                    TweenMax.getTweensOf = TweenLite.getTweensOf;\n                    TweenMax.lagSmoothing = TweenLite.lagSmoothing;\n                    TweenMax.ticker = TweenLite.ticker;\n                    TweenMax.render = TweenLite.render;\n                    p.invalidate = function() {\n                        this._yoyo = this.vars.yoyo === true;\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._uncache(true);\n                        return TweenLite.prototype.invalidate.call(this);\n                    };\n                    p.updateTo = function(vars, resetDuration) {\n                        var curRatio = this.ratio, immediate = this.vars.immediateRender || vars.immediateRender, p;\n                        if (resetDuration && this._startTime < this._timeline._time) {\n                            this._startTime = this._timeline._time;\n                            this._uncache(false);\n                            if (this._gc) {\n                                this._enabled(true, false);\n                            } else {\n                                this._timeline.insert(this, this._startTime - this._delay);\n                            }\n                        }\n                        for (p in vars) {\n                            this.vars[p] = vars[p];\n                        }\n                        if (this._initted || immediate) {\n                            if (resetDuration) {\n                                this._initted = false;\n                                if (immediate) {\n                                    this.render(0, true, true);\n                                }\n                            } else {\n                                if (this._gc) {\n                                    this._enabled(true, false);\n                                }\n                                if (this._notifyPluginsOfEnabled && this._firstPT) {\n                                    TweenLite._onPluginEvent(\"_onDisable\", this);\n                                }\n                                if (this._time / this._duration > .998) {\n                                    var prevTime = this._totalTime;\n                                    this.render(0, true, false);\n                                    this._initted = false;\n                                    this.render(prevTime, true, false);\n                                } else {\n                                    this._initted = false;\n                                    this._init();\n                                    if (this._time > 0 || immediate) {\n                                        var inv = 1 / (1 - curRatio), pt = this._firstPT, endValue;\n                                        while (pt) {\n                                            endValue = pt.s + pt.c;\n                                            pt.c *= inv;\n                                            pt.s = endValue - pt.c;\n                                            pt = pt._next;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        return this;\n                    };\n                    p.render = function(time, suppressEvents, force) {\n                        if (!this._initted) if (this._duration === 0 && this.vars.repeat) {\n                            this.invalidate();\n                        }\n                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevTotalTime = this._totalTime, prevCycle = this._cycle, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n                        if (time >= totalDur - 1e-7) {\n                            this._totalTime = totalDur;\n                            this._cycle = this._repeat;\n                            if (this._yoyo && (this._cycle & 1) !== 0) {\n                                this._time = 0;\n                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                            } else {\n                                this._time = duration;\n                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n                            }\n                            if (!this._reversed) {\n                                isComplete = true;\n                                callback = \"onComplete\";\n                                force = force || this._timeline.autoRemoveChildren;\n                            }\n                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                if (this._startTime === this._timeline._duration) {\n                                    time = 0;\n                                }\n                                if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n                                    force = true;\n                                    if (prevRawPrevTime > _tinyNum) {\n                                        callback = \"onReverseComplete\";\n                                    }\n                                }\n                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                            }\n                        } else if (time < 1e-7) {\n                            this._totalTime = this._time = this._cycle = 0;\n                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                            if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n                                callback = \"onReverseComplete\";\n                                isComplete = this._reversed;\n                            }\n                            if (time < 0) {\n                                this._active = false;\n                                if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                    if (prevRawPrevTime >= 0) {\n                                        force = true;\n                                    }\n                                    this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                                }\n                            }\n                            if (!this._initted) {\n                                force = true;\n                            }\n                        } else {\n                            this._totalTime = this._time = time;\n                            if (this._repeat !== 0) {\n                                cycleDuration = duration + this._repeatDelay;\n                                this._cycle = this._totalTime / cycleDuration >> 0;\n                                if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n                                    this._cycle--;\n                                }\n                                this._time = this._totalTime - this._cycle * cycleDuration;\n                                if (this._yoyo) if ((this._cycle & 1) !== 0) {\n                                    this._time = duration - this._time;\n                                }\n                                if (this._time > duration) {\n                                    this._time = duration;\n                                } else if (this._time < 0) {\n                                    this._time = 0;\n                                }\n                            }\n                            if (this._easeType) {\n                                r = this._time / duration;\n                                type = this._easeType;\n                                pow = this._easePower;\n                                if (type === 1 || type === 3 && r >= .5) {\n                                    r = 1 - r;\n                                }\n                                if (type === 3) {\n                                    r *= 2;\n                                }\n                                if (pow === 1) {\n                                    r *= r;\n                                } else if (pow === 2) {\n                                    r *= r * r;\n                                } else if (pow === 3) {\n                                    r *= r * r * r;\n                                } else if (pow === 4) {\n                                    r *= r * r * r * r;\n                                }\n                                if (type === 1) {\n                                    this.ratio = 1 - r;\n                                } else if (type === 2) {\n                                    this.ratio = r;\n                                } else if (this._time / duration < .5) {\n                                    this.ratio = r / 2;\n                                } else {\n                                    this.ratio = 1 - r / 2;\n                                }\n                            } else {\n                                this.ratio = this._ease.getRatio(this._time / duration);\n                            }\n                        }\n                        if (prevTime === this._time && !force && prevCycle === this._cycle) {\n                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n                                this._callback(\"onUpdate\");\n                            }\n                            return;\n                        } else if (!this._initted) {\n                            this._init();\n                            if (!this._initted || this._gc) {\n                                return;\n                            } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n                                this._time = prevTime;\n                                this._totalTime = prevTotalTime;\n                                this._rawPrevTime = prevRawPrevTime;\n                                this._cycle = prevCycle;\n                                TweenLiteInternals.lazyTweens.push(this);\n                                this._lazy = [ time, suppressEvents ];\n                                return;\n                            }\n                            if (this._time && !isComplete) {\n                                this.ratio = this._ease.getRatio(this._time / duration);\n                            } else if (isComplete && this._ease._calcEnd) {\n                                this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n                            }\n                        }\n                        if (this._lazy !== false) {\n                            this._lazy = false;\n                        }\n                        if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n                            this._active = true;\n                        }\n                        if (prevTotalTime === 0) {\n                            if (this._initted === 2 && time > 0) {\n                                this._init();\n                            }\n                            if (this._startAt) {\n                                if (time >= 0) {\n                                    this._startAt.render(time, suppressEvents, force);\n                                } else if (!callback) {\n                                    callback = \"_dummyGS\";\n                                }\n                            }\n                            if (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n                                this._callback(\"onStart\");\n                            }\n                        }\n                        pt = this._firstPT;\n                        while (pt) {\n                            if (pt.f) {\n                                pt.t[pt.p](pt.c * this.ratio + pt.s);\n                            } else {\n                                pt.t[pt.p] = pt.c * this.ratio + pt.s;\n                            }\n                            pt = pt._next;\n                        }\n                        if (this._onUpdate) {\n                            if (time < 0) if (this._startAt && this._startTime) {\n                                this._startAt.render(time, suppressEvents, force);\n                            }\n                            if (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n                                this._callback(\"onUpdate\");\n                            }\n                        }\n                        if (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n                            this._callback(\"onRepeat\");\n                        }\n                        if (callback) if (!this._gc || force) {\n                            if (time < 0 && this._startAt && !this._onUpdate && this._startTime) {\n                                this._startAt.render(time, suppressEvents, force);\n                            }\n                            if (isComplete) {\n                                if (this._timeline.autoRemoveChildren) {\n                                    this._enabled(false, false);\n                                }\n                                this._active = false;\n                            }\n                            if (!suppressEvents && this.vars[callback]) {\n                                this._callback(callback);\n                            }\n                            if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n                                this._rawPrevTime = 0;\n                            }\n                        }\n                    };\n                    TweenMax.to = function(target, duration, vars) {\n                        return new TweenMax(target, duration, vars);\n                    };\n                    TweenMax.from = function(target, duration, vars) {\n                        vars.runBackwards = true;\n                        vars.immediateRender = vars.immediateRender != false;\n                        return new TweenMax(target, duration, vars);\n                    };\n                    TweenMax.fromTo = function(target, duration, fromVars, toVars) {\n                        toVars.startAt = fromVars;\n                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                        return new TweenMax(target, duration, toVars);\n                    };\n                    TweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        stagger = stagger || 0;\n                        var delay = 0, a = [], finalComplete = function() {\n                            if (vars.onComplete) {\n                                vars.onComplete.apply(vars.onCompleteScope || this, arguments);\n                            }\n                            onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n                        }, cycle = vars.cycle, fromCycle = vars.startAt && vars.startAt.cycle, l, copy, i, p;\n                        if (!_isArray(targets)) {\n                            if (typeof targets === \"string\") {\n                                targets = TweenLite.selector(targets) || targets;\n                            }\n                            if (_isSelector(targets)) {\n                                targets = _slice(targets);\n                            }\n                        }\n                        targets = targets || [];\n                        if (stagger < 0) {\n                            targets = _slice(targets);\n                            targets.reverse();\n                            stagger *= -1;\n                        }\n                        l = targets.length - 1;\n                        for (i = 0; i <= l; i++) {\n                            copy = {};\n                            for (p in vars) {\n                                copy[p] = vars[p];\n                            }\n                            if (cycle) {\n                                _applyCycle(copy, targets, i);\n                                if (copy.duration != null) {\n                                    duration = copy.duration;\n                                    delete copy.duration;\n                                }\n                            }\n                            if (fromCycle) {\n                                fromCycle = copy.startAt = {};\n                                for (p in vars.startAt) {\n                                    fromCycle[p] = vars.startAt[p];\n                                }\n                                _applyCycle(copy.startAt, targets, i);\n                            }\n                            copy.delay = delay + (copy.delay || 0);\n                            if (i === l && onCompleteAll) {\n                                copy.onComplete = finalComplete;\n                            }\n                            a[i] = new TweenMax(targets[i], duration, copy);\n                            delay += stagger;\n                        }\n                        return a;\n                    };\n                    TweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        vars.runBackwards = true;\n                        vars.immediateRender = vars.immediateRender != false;\n                        return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    TweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        toVars.startAt = fromVars;\n                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                        return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    TweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n                        return new TweenMax(callback, 0, {\n                            delay: delay,\n                            onComplete: callback,\n                            onCompleteParams: params,\n                            callbackScope: scope,\n                            onReverseComplete: callback,\n                            onReverseCompleteParams: params,\n                            immediateRender: false,\n                            useFrames: useFrames,\n                            overwrite: 0\n                        });\n                    };\n                    TweenMax.set = function(target, vars) {\n                        return new TweenMax(target, 0, vars);\n                    };\n                    TweenMax.isTweening = function(target) {\n                        return TweenLite.getTweensOf(target, true).length > 0;\n                    };\n                    var _getChildrenOf = function(timeline, includeTimelines) {\n                        var a = [], cnt = 0, tween = timeline._first;\n                        while (tween) {\n                            if (tween instanceof TweenLite) {\n                                a[cnt++] = tween;\n                            } else {\n                                if (includeTimelines) {\n                                    a[cnt++] = tween;\n                                }\n                                a = a.concat(_getChildrenOf(tween, includeTimelines));\n                                cnt = a.length;\n                            }\n                            tween = tween._next;\n                        }\n                        return a;\n                    }, getAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n                        return _getChildrenOf(Animation._rootTimeline, includeTimelines).concat(_getChildrenOf(Animation._rootFramesTimeline, includeTimelines));\n                    };\n                    TweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n                        if (tweens == null) {\n                            tweens = true;\n                        }\n                        if (delayedCalls == null) {\n                            delayedCalls = true;\n                        }\n                        var a = getAllTweens(timelines != false), l = a.length, allTrue = tweens && delayedCalls && timelines, isDC, tween, i;\n                        for (i = 0; i < l; i++) {\n                            tween = a[i];\n                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n                                if (complete) {\n                                    tween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n                                } else {\n                                    tween._enabled(false, false);\n                                }\n                            }\n                        }\n                    };\n                    TweenMax.killChildTweensOf = function(parent, complete) {\n                        if (parent == null) {\n                            return;\n                        }\n                        var tl = TweenLiteInternals.tweenLookup, a, curParent, p, i, l;\n                        if (typeof parent === \"string\") {\n                            parent = TweenLite.selector(parent) || parent;\n                        }\n                        if (_isSelector(parent)) {\n                            parent = _slice(parent);\n                        }\n                        if (_isArray(parent)) {\n                            i = parent.length;\n                            while (--i > -1) {\n                                TweenMax.killChildTweensOf(parent[i], complete);\n                            }\n                            return;\n                        }\n                        a = [];\n                        for (p in tl) {\n                            curParent = tl[p].target.parentNode;\n                            while (curParent) {\n                                if (curParent === parent) {\n                                    a = a.concat(tl[p].tweens);\n                                }\n                                curParent = curParent.parentNode;\n                            }\n                        }\n                        l = a.length;\n                        for (i = 0; i < l; i++) {\n                            if (complete) {\n                                a[i].totalTime(a[i].totalDuration());\n                            }\n                            a[i]._enabled(false, false);\n                        }\n                    };\n                    var _changePause = function(pause, tweens, delayedCalls, timelines) {\n                        tweens = tweens !== false;\n                        delayedCalls = delayedCalls !== false;\n                        timelines = timelines !== false;\n                        var a = getAllTweens(timelines), allTrue = tweens && delayedCalls && timelines, i = a.length, isDC, tween;\n                        while (--i > -1) {\n                            tween = a[i];\n                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n                                tween.paused(pause);\n                            }\n                        }\n                    };\n                    TweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n                        _changePause(true, tweens, delayedCalls, timelines);\n                    };\n                    TweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n                        _changePause(false, tweens, delayedCalls, timelines);\n                    };\n                    TweenMax.globalTimeScale = function(value) {\n                        var tl = Animation._rootTimeline, t = TweenLite.ticker.time;\n                        if (!arguments.length) {\n                            return tl._timeScale;\n                        }\n                        value = value || _tinyNum;\n                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n                        tl = Animation._rootFramesTimeline;\n                        t = TweenLite.ticker.frame;\n                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n                        tl._timeScale = Animation._rootTimeline._timeScale = value;\n                        return value;\n                    };\n                    p.progress = function(value, suppressEvents) {\n                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n                    };\n                    p.totalProgress = function(value, suppressEvents) {\n                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n                    };\n                    p.time = function(value, suppressEvents) {\n                        if (!arguments.length) {\n                            return this._time;\n                        }\n                        if (this._dirty) {\n                            this.totalDuration();\n                        }\n                        if (value > this._duration) {\n                            value = this._duration;\n                        }\n                        if (this._yoyo && (this._cycle & 1) !== 0) {\n                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n                        } else if (this._repeat !== 0) {\n                            value += this._cycle * (this._duration + this._repeatDelay);\n                        }\n                        return this.totalTime(value, suppressEvents);\n                    };\n                    p.duration = function(value) {\n                        if (!arguments.length) {\n                            return this._duration;\n                        }\n                        return Animation.prototype.duration.call(this, value);\n                    };\n                    p.totalDuration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n                                this._dirty = false;\n                            }\n                            return this._totalDuration;\n                        }\n                        return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));\n                    };\n                    p.repeat = function(value) {\n                        if (!arguments.length) {\n                            return this._repeat;\n                        }\n                        this._repeat = value;\n                        return this._uncache(true);\n                    };\n                    p.repeatDelay = function(value) {\n                        if (!arguments.length) {\n                            return this._repeatDelay;\n                        }\n                        this._repeatDelay = value;\n                        return this._uncache(true);\n                    };\n                    p.yoyo = function(value) {\n                        if (!arguments.length) {\n                            return this._yoyo;\n                        }\n                        this._yoyo = value;\n                        return this;\n                    };\n                    return TweenMax;\n                }, true);\n                _gsScope._gsDefine(\"TimelineLite\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n                    var TimelineLite = function(vars) {\n                        SimpleTimeline.call(this, vars);\n                        this._labels = {};\n                        this.autoRemoveChildren = this.vars.autoRemoveChildren === true;\n                        this.smoothChildTiming = this.vars.smoothChildTiming === true;\n                        this._sortChildren = true;\n                        this._onUpdate = this.vars.onUpdate;\n                        var v = this.vars, val, p;\n                        for (p in v) {\n                            val = v[p];\n                            if (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n                                v[p] = this._swapSelfInParams(val);\n                            }\n                        }\n                        if (_isArray(v.tweens)) {\n                            this.add(v.tweens, 0, v.align, v.stagger);\n                        }\n                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _internals = TimelineLite._internals = {}, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _globals = _gsScope._gsDefine.globals, _copy = function(vars) {\n                        var copy = {}, p;\n                        for (p in vars) {\n                            copy[p] = vars[p];\n                        }\n                        return copy;\n                    }, _applyCycle = function(vars, targets, i) {\n                        var alt = vars.cycle, p, val;\n                        for (p in alt) {\n                            val = alt[p];\n                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n                        }\n                        delete vars.cycle;\n                    }, _pauseCallback = _internals.pauseCallback = function() {}, _slice = function(a) {\n                        var b = [], l = a.length, i;\n                        for (i = 0; i !== l; b.push(a[i++])) ;\n                        return b;\n                    }, p = TimelineLite.prototype = new SimpleTimeline();\n                    TimelineLite.version = \"1.18.5\";\n                    p.constructor = TimelineLite;\n                    p.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n                    p.to = function(target, duration, vars, position) {\n                        var Engine = vars.repeat && _globals.TweenMax || TweenLite;\n                        return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);\n                    };\n                    p.from = function(target, duration, vars, position) {\n                        return this.add((vars.repeat && _globals.TweenMax || TweenLite).from(target, duration, vars), position);\n                    };\n                    p.fromTo = function(target, duration, fromVars, toVars, position) {\n                        var Engine = toVars.repeat && _globals.TweenMax || TweenLite;\n                        return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n                    };\n                    p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        var tl = new TimelineLite({\n                            onComplete: onCompleteAll,\n                            onCompleteParams: onCompleteAllParams,\n                            callbackScope: onCompleteAllScope,\n                            smoothChildTiming: this.smoothChildTiming\n                        }), cycle = vars.cycle, copy, i;\n                        if (typeof targets === \"string\") {\n                            targets = TweenLite.selector(targets) || targets;\n                        }\n                        targets = targets || [];\n                        if (_isSelector(targets)) {\n                            targets = _slice(targets);\n                        }\n                        stagger = stagger || 0;\n                        if (stagger < 0) {\n                            targets = _slice(targets);\n                            targets.reverse();\n                            stagger *= -1;\n                        }\n                        for (i = 0; i < targets.length; i++) {\n                            copy = _copy(vars);\n                            if (copy.startAt) {\n                                copy.startAt = _copy(copy.startAt);\n                                if (copy.startAt.cycle) {\n                                    _applyCycle(copy.startAt, targets, i);\n                                }\n                            }\n                            if (cycle) {\n                                _applyCycle(copy, targets, i);\n                                if (copy.duration != null) {\n                                    duration = copy.duration;\n                                    delete copy.duration;\n                                }\n                            }\n                            tl.to(targets[i], duration, copy, i * stagger);\n                        }\n                        return this.add(tl, position);\n                    };\n                    p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        vars.immediateRender = vars.immediateRender != false;\n                        vars.runBackwards = true;\n                        return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        toVars.startAt = fromVars;\n                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                        return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    p.call = function(callback, params, scope, position) {\n                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n                    };\n                    p.set = function(target, vars, position) {\n                        position = this._parseTimeOrLabel(position, 0, true);\n                        if (vars.immediateRender == null) {\n                            vars.immediateRender = position === this._time && !this._paused;\n                        }\n                        return this.add(new TweenLite(target, 0, vars), position);\n                    };\n                    TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n                        vars = vars || {};\n                        if (vars.smoothChildTiming == null) {\n                            vars.smoothChildTiming = true;\n                        }\n                        var tl = new TimelineLite(vars), root = tl._timeline, tween, next;\n                        if (ignoreDelayedCalls == null) {\n                            ignoreDelayedCalls = true;\n                        }\n                        root._remove(tl, true);\n                        tl._startTime = 0;\n                        tl._rawPrevTime = tl._time = tl._totalTime = root._time;\n                        tween = root._first;\n                        while (tween) {\n                            next = tween._next;\n                            if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n                                tl.add(tween, tween._startTime - tween._delay);\n                            }\n                            tween = next;\n                        }\n                        root.add(tl, 0);\n                        return tl;\n                    };\n                    p.add = function(value, position, align, stagger) {\n                        var curTime, l, i, child, tl, beforeRawTime;\n                        if (typeof position !== \"number\") {\n                            position = this._parseTimeOrLabel(position, 0, true, value);\n                        }\n                        if (!(value instanceof Animation)) {\n                            if (value instanceof Array || value && value.push && _isArray(value)) {\n                                align = align || \"normal\";\n                                stagger = stagger || 0;\n                                curTime = position;\n                                l = value.length;\n                                for (i = 0; i < l; i++) {\n                                    if (_isArray(child = value[i])) {\n                                        child = new TimelineLite({\n                                            tweens: child\n                                        });\n                                    }\n                                    this.add(child, curTime);\n                                    if (typeof child !== \"string\" && typeof child !== \"function\") {\n                                        if (align === \"sequence\") {\n                                            curTime = child._startTime + child.totalDuration() / child._timeScale;\n                                        } else if (align === \"start\") {\n                                            child._startTime -= child.delay();\n                                        }\n                                    }\n                                    curTime += stagger;\n                                }\n                                return this._uncache(true);\n                            } else if (typeof value === \"string\") {\n                                return this.addLabel(value, position);\n                            } else if (typeof value === \"function\") {\n                                value = TweenLite.delayedCall(0, value);\n                            } else {\n                                throw \"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\";\n                            }\n                        }\n                        SimpleTimeline.prototype.add.call(this, value, position);\n                        if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n                            tl = this;\n                            beforeRawTime = tl.rawTime() > value._startTime;\n                            while (tl._timeline) {\n                                if (beforeRawTime && tl._timeline.smoothChildTiming) {\n                                    tl.totalTime(tl._totalTime, true);\n                                } else if (tl._gc) {\n                                    tl._enabled(true, false);\n                                }\n                                tl = tl._timeline;\n                            }\n                        }\n                        return this;\n                    };\n                    p.remove = function(value) {\n                        if (value instanceof Animation) {\n                            this._remove(value, false);\n                            var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline;\n                            value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale;\n                            return this;\n                        } else if (value instanceof Array || value && value.push && _isArray(value)) {\n                            var i = value.length;\n                            while (--i > -1) {\n                                this.remove(value[i]);\n                            }\n                            return this;\n                        } else if (typeof value === \"string\") {\n                            return this.removeLabel(value);\n                        }\n                        return this.kill(null, value);\n                    };\n                    p._remove = function(tween, skipDisable) {\n                        SimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n                        var last = this._last;\n                        if (!last) {\n                            this._time = this._totalTime = this._duration = this._totalDuration = 0;\n                        } else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n                            this._time = this.duration();\n                            this._totalTime = this._totalDuration;\n                        }\n                        return this;\n                    };\n                    p.append = function(value, offsetOrLabel) {\n                        return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n                    };\n                    p.insert = p.insertMultiple = function(value, position, align, stagger) {\n                        return this.add(value, position || 0, align, stagger);\n                    };\n                    p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n                        return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n                    };\n                    p.addLabel = function(label, position) {\n                        this._labels[label] = this._parseTimeOrLabel(position);\n                        return this;\n                    };\n                    p.addPause = function(position, callback, params, scope) {\n                        var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n                        t.vars.onComplete = t.vars.onReverseComplete = callback;\n                        t.data = \"isPause\";\n                        this._hasPause = true;\n                        return this.add(t, position);\n                    };\n                    p.removeLabel = function(label) {\n                        delete this._labels[label];\n                        return this;\n                    };\n                    p.getLabelTime = function(label) {\n                        return this._labels[label] != null ? this._labels[label] : -1;\n                    };\n                    p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n                        var i;\n                        if (ignore instanceof Animation && ignore.timeline === this) {\n                            this.remove(ignore);\n                        } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {\n                            i = ignore.length;\n                            while (--i > -1) {\n                                if (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n                                    this.remove(ignore[i]);\n                                }\n                            }\n                        }\n                        if (typeof offsetOrLabel === \"string\") {\n                            return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === \"number\" && this._labels[offsetOrLabel] == null ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n                        }\n                        offsetOrLabel = offsetOrLabel || 0;\n                        if (typeof timeOrLabel === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {\n                            i = timeOrLabel.indexOf(\"=\");\n                            if (i === -1) {\n                                if (this._labels[timeOrLabel] == null) {\n                                    return appendIfAbsent ? this._labels[timeOrLabel] = this.duration() + offsetOrLabel : offsetOrLabel;\n                                }\n                                return this._labels[timeOrLabel] + offsetOrLabel;\n                            }\n                            offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + \"1\", 10) * Number(timeOrLabel.substr(i + 1));\n                            timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : this.duration();\n                        } else if (timeOrLabel == null) {\n                            timeOrLabel = this.duration();\n                        }\n                        return Number(timeOrLabel) + offsetOrLabel;\n                    };\n                    p.seek = function(position, suppressEvents) {\n                        return this.totalTime(typeof position === \"number\" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);\n                    };\n                    p.stop = function() {\n                        return this.paused(true);\n                    };\n                    p.gotoAndPlay = function(position, suppressEvents) {\n                        return this.play(position, suppressEvents);\n                    };\n                    p.gotoAndStop = function(position, suppressEvents) {\n                        return this.pause(position, suppressEvents);\n                    };\n                    p.render = function(time, suppressEvents, force) {\n                        if (this._gc) {\n                            this._enabled(true, false);\n                        }\n                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevStart = this._startTime, prevTimeScale = this._timeScale, prevPaused = this._paused, tween, isComplete, next, callback, internalForce, pauseTween, curTime;\n                        if (time >= totalDur - 1e-7) {\n                            this._totalTime = this._time = totalDur;\n                            if (!this._reversed) if (!this._hasPausedChild()) {\n                                isComplete = true;\n                                callback = \"onComplete\";\n                                internalForce = !!this._timeline.autoRemoveChildren;\n                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n                                    internalForce = true;\n                                    if (this._rawPrevTime > _tinyNum) {\n                                        callback = \"onReverseComplete\";\n                                    }\n                                }\n                            }\n                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                            time = totalDur + 1e-4;\n                        } else if (time < 1e-7) {\n                            this._totalTime = this._time = 0;\n                            if (prevTime !== 0 || this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || time < 0 && this._rawPrevTime >= 0)) {\n                                callback = \"onReverseComplete\";\n                                isComplete = this._reversed;\n                            }\n                            if (time < 0) {\n                                this._active = false;\n                                if (this._timeline.autoRemoveChildren && this._reversed) {\n                                    internalForce = isComplete = true;\n                                    callback = \"onReverseComplete\";\n                                } else if (this._rawPrevTime >= 0 && this._first) {\n                                    internalForce = true;\n                                }\n                                this._rawPrevTime = time;\n                            } else {\n                                this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                if (time === 0 && isComplete) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime === 0) {\n                                        if (!tween._duration) {\n                                            isComplete = false;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                }\n                                time = 0;\n                                if (!this._initted) {\n                                    internalForce = true;\n                                }\n                            }\n                        } else {\n                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n                                if (time >= prevTime) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime <= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                } else {\n                                    tween = this._last;\n                                    while (tween && tween._startTime >= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._prev;\n                                    }\n                                }\n                                if (pauseTween) {\n                                    this._time = time = pauseTween._startTime;\n                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n                                }\n                            }\n                            this._totalTime = this._time = this._rawPrevTime = time;\n                        }\n                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n                            return;\n                        } else if (!this._initted) {\n                            this._initted = true;\n                        }\n                        if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n                            this._active = true;\n                        }\n                        if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n                            this._callback(\"onStart\");\n                        }\n                        curTime = this._time;\n                        if (curTime >= prevTime) {\n                            tween = this._first;\n                            while (tween) {\n                                next = tween._next;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        } else {\n                            tween = this._last;\n                            while (tween) {\n                                next = tween._prev;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        pauseTween = tween._prev;\n                                        while (pauseTween && pauseTween.endTime() > this._time) {\n                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n                                            pauseTween = pauseTween._prev;\n                                        }\n                                        pauseTween = null;\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        }\n                        if (this._onUpdate) if (!suppressEvents) {\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            this._callback(\"onUpdate\");\n                        }\n                        if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n                            if (isComplete) {\n                                if (_lazyTweens.length) {\n                                    _lazyRender();\n                                }\n                                if (this._timeline.autoRemoveChildren) {\n                                    this._enabled(false, false);\n                                }\n                                this._active = false;\n                            }\n                            if (!suppressEvents && this.vars[callback]) {\n                                this._callback(callback);\n                            }\n                        }\n                    };\n                    p._hasPausedChild = function() {\n                        var tween = this._first;\n                        while (tween) {\n                            if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {\n                                return true;\n                            }\n                            tween = tween._next;\n                        }\n                        return false;\n                    };\n                    p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n                        ignoreBeforeTime = ignoreBeforeTime || -9999999999;\n                        var a = [], tween = this._first, cnt = 0;\n                        while (tween) {\n                            if (tween._startTime < ignoreBeforeTime) {} else if (tween instanceof TweenLite) {\n                                if (tweens !== false) {\n                                    a[cnt++] = tween;\n                                }\n                            } else {\n                                if (timelines !== false) {\n                                    a[cnt++] = tween;\n                                }\n                                if (nested !== false) {\n                                    a = a.concat(tween.getChildren(true, tweens, timelines));\n                                    cnt = a.length;\n                                }\n                            }\n                            tween = tween._next;\n                        }\n                        return a;\n                    };\n                    p.getTweensOf = function(target, nested) {\n                        var disabled = this._gc, a = [], cnt = 0, tweens, i;\n                        if (disabled) {\n                            this._enabled(true, true);\n                        }\n                        tweens = TweenLite.getTweensOf(target);\n                        i = tweens.length;\n                        while (--i > -1) {\n                            if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {\n                                a[cnt++] = tweens[i];\n                            }\n                        }\n                        if (disabled) {\n                            this._enabled(false, true);\n                        }\n                        return a;\n                    };\n                    p.recent = function() {\n                        return this._recent;\n                    };\n                    p._contains = function(tween) {\n                        var tl = tween.timeline;\n                        while (tl) {\n                            if (tl === this) {\n                                return true;\n                            }\n                            tl = tl.timeline;\n                        }\n                        return false;\n                    };\n                    p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n                        ignoreBeforeTime = ignoreBeforeTime || 0;\n                        var tween = this._first, labels = this._labels, p;\n                        while (tween) {\n                            if (tween._startTime >= ignoreBeforeTime) {\n                                tween._startTime += amount;\n                            }\n                            tween = tween._next;\n                        }\n                        if (adjustLabels) {\n                            for (p in labels) {\n                                if (labels[p] >= ignoreBeforeTime) {\n                                    labels[p] += amount;\n                                }\n                            }\n                        }\n                        return this._uncache(true);\n                    };\n                    p._kill = function(vars, target) {\n                        if (!vars && !target) {\n                            return this._enabled(false, false);\n                        }\n                        var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target), i = tweens.length, changed = false;\n                        while (--i > -1) {\n                            if (tweens[i]._kill(vars, target)) {\n                                changed = true;\n                            }\n                        }\n                        return changed;\n                    };\n                    p.clear = function(labels) {\n                        var tweens = this.getChildren(false, true, true), i = tweens.length;\n                        this._time = this._totalTime = 0;\n                        while (--i > -1) {\n                            tweens[i]._enabled(false, false);\n                        }\n                        if (labels !== false) {\n                            this._labels = {};\n                        }\n                        return this._uncache(true);\n                    };\n                    p.invalidate = function() {\n                        var tween = this._first;\n                        while (tween) {\n                            tween.invalidate();\n                            tween = tween._next;\n                        }\n                        return Animation.prototype.invalidate.call(this);\n                    };\n                    p._enabled = function(enabled, ignoreTimeline) {\n                        if (enabled === this._gc) {\n                            var tween = this._first;\n                            while (tween) {\n                                tween._enabled(enabled, true);\n                                tween = tween._next;\n                            }\n                        }\n                        return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n                    };\n                    p.totalTime = function(time, suppressEvents, uncapped) {\n                        this._forcingPlayhead = true;\n                        var val = Animation.prototype.totalTime.apply(this, arguments);\n                        this._forcingPlayhead = false;\n                        return val;\n                    };\n                    p.duration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                this.totalDuration();\n                            }\n                            return this._duration;\n                        }\n                        if (this.duration() !== 0 && value !== 0) {\n                            this.timeScale(this._duration / value);\n                        }\n                        return this;\n                    };\n                    p.totalDuration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                var max = 0, tween = this._last, prevStart = 999999999999, prev, end;\n                                while (tween) {\n                                    prev = tween._prev;\n                                    if (tween._dirty) {\n                                        tween.totalDuration();\n                                    }\n                                    if (tween._startTime > prevStart && this._sortChildren && !tween._paused) {\n                                        this.add(tween, tween._startTime - tween._delay);\n                                    } else {\n                                        prevStart = tween._startTime;\n                                    }\n                                    if (tween._startTime < 0 && !tween._paused) {\n                                        max -= tween._startTime;\n                                        if (this._timeline.smoothChildTiming) {\n                                            this._startTime += tween._startTime / this._timeScale;\n                                        }\n                                        this.shiftChildren(-tween._startTime, false, -9999999999);\n                                        prevStart = 0;\n                                    }\n                                    end = tween._startTime + tween._totalDuration / tween._timeScale;\n                                    if (end > max) {\n                                        max = end;\n                                    }\n                                    tween = prev;\n                                }\n                                this._duration = this._totalDuration = max;\n                                this._dirty = false;\n                            }\n                            return this._totalDuration;\n                        }\n                        return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;\n                    };\n                    p.paused = function(value) {\n                        if (!value) {\n                            var tween = this._first, time = this._time;\n                            while (tween) {\n                                if (tween._startTime === time && tween.data === \"isPause\") {\n                                    tween._rawPrevTime = 0;\n                                }\n                                tween = tween._next;\n                            }\n                        }\n                        return Animation.prototype.paused.apply(this, arguments);\n                    };\n                    p.usesFrames = function() {\n                        var tl = this._timeline;\n                        while (tl._timeline) {\n                            tl = tl._timeline;\n                        }\n                        return tl === Animation._rootFramesTimeline;\n                    };\n                    p.rawTime = function() {\n                        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n                    };\n                    return TimelineLite;\n                }, true);\n                _gsScope._gsDefine(\"TimelineMax\", [ \"TimelineLite\", \"TweenLite\", \"easing.Ease\" ], function(TimelineLite, TweenLite, Ease) {\n                    var TimelineMax = function(vars) {\n                        TimelineLite.call(this, vars);\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._cycle = 0;\n                        this._yoyo = this.vars.yoyo === true;\n                        this._dirty = true;\n                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _easeNone = new Ease(null, null, 1, 0), p = TimelineMax.prototype = new TimelineLite();\n                    p.constructor = TimelineMax;\n                    p.kill()._gc = false;\n                    TimelineMax.version = \"1.18.5\";\n                    p.invalidate = function() {\n                        this._yoyo = this.vars.yoyo === true;\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._uncache(true);\n                        return TimelineLite.prototype.invalidate.call(this);\n                    };\n                    p.addCallback = function(callback, position, params, scope) {\n                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n                    };\n                    p.removeCallback = function(callback, position) {\n                        if (callback) {\n                            if (position == null) {\n                                this._kill(null, callback);\n                            } else {\n                                var a = this.getTweensOf(callback, false), i = a.length, time = this._parseTimeOrLabel(position);\n                                while (--i > -1) {\n                                    if (a[i]._startTime === time) {\n                                        a[i]._enabled(false, false);\n                                    }\n                                }\n                            }\n                        }\n                        return this;\n                    };\n                    p.removePause = function(position) {\n                        return this.removeCallback(TimelineLite._internals.pauseCallback, position);\n                    };\n                    p.tweenTo = function(position, vars) {\n                        vars = vars || {};\n                        var copy = {\n                            ease: _easeNone,\n                            useFrames: this.usesFrames(),\n                            immediateRender: false\n                        }, duration, p, t;\n                        for (p in vars) {\n                            copy[p] = vars[p];\n                        }\n                        copy.time = this._parseTimeOrLabel(position);\n                        duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || .001;\n                        t = new TweenLite(this, duration, copy);\n                        copy.onStart = function() {\n                            t.target.paused(true);\n                            if (t.vars.time !== t.target.time() && duration === t.duration()) {\n                                t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale);\n                            }\n                            if (vars.onStart) {\n                                t._callback(\"onStart\");\n                            }\n                        };\n                        return t;\n                    };\n                    p.tweenFromTo = function(fromPosition, toPosition, vars) {\n                        vars = vars || {};\n                        fromPosition = this._parseTimeOrLabel(fromPosition);\n                        vars.startAt = {\n                            onComplete: this.seek,\n                            onCompleteParams: [ fromPosition ],\n                            callbackScope: this\n                        };\n                        vars.immediateRender = vars.immediateRender !== false;\n                        var t = this.tweenTo(toPosition, vars);\n                        return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || .001);\n                    };\n                    p.render = function(time, suppressEvents, force) {\n                        if (this._gc) {\n                            this._enabled(true, false);\n                        }\n                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), dur = this._duration, prevTime = this._time, prevTotalTime = this._totalTime, prevStart = this._startTime, prevTimeScale = this._timeScale, prevRawPrevTime = this._rawPrevTime, prevPaused = this._paused, prevCycle = this._cycle, tween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n                        if (time >= totalDur - 1e-7) {\n                            if (!this._locked) {\n                                this._totalTime = totalDur;\n                                this._cycle = this._repeat;\n                            }\n                            if (!this._reversed) if (!this._hasPausedChild()) {\n                                isComplete = true;\n                                callback = \"onComplete\";\n                                internalForce = !!this._timeline.autoRemoveChildren;\n                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n                                    internalForce = true;\n                                    if (prevRawPrevTime > _tinyNum) {\n                                        callback = \"onReverseComplete\";\n                                    }\n                                }\n                            }\n                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                            if (this._yoyo && (this._cycle & 1) !== 0) {\n                                this._time = time = 0;\n                            } else {\n                                this._time = dur;\n                                time = dur + 1e-4;\n                            }\n                        } else if (time < 1e-7) {\n                            if (!this._locked) {\n                                this._totalTime = this._cycle = 0;\n                            }\n                            this._time = 0;\n                            if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !this._locked) {\n                                callback = \"onReverseComplete\";\n                                isComplete = this._reversed;\n                            }\n                            if (time < 0) {\n                                this._active = false;\n                                if (this._timeline.autoRemoveChildren && this._reversed) {\n                                    internalForce = isComplete = true;\n                                    callback = \"onReverseComplete\";\n                                } else if (prevRawPrevTime >= 0 && this._first) {\n                                    internalForce = true;\n                                }\n                                this._rawPrevTime = time;\n                            } else {\n                                this._rawPrevTime = dur || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                if (time === 0 && isComplete) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime === 0) {\n                                        if (!tween._duration) {\n                                            isComplete = false;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                }\n                                time = 0;\n                                if (!this._initted) {\n                                    internalForce = true;\n                                }\n                            }\n                        } else {\n                            if (dur === 0 && prevRawPrevTime < 0) {\n                                internalForce = true;\n                            }\n                            this._time = this._rawPrevTime = time;\n                            if (!this._locked) {\n                                this._totalTime = time;\n                                if (this._repeat !== 0) {\n                                    cycleDuration = dur + this._repeatDelay;\n                                    this._cycle = this._totalTime / cycleDuration >> 0;\n                                    if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n                                        this._cycle--;\n                                    }\n                                    this._time = this._totalTime - this._cycle * cycleDuration;\n                                    if (this._yoyo) if ((this._cycle & 1) !== 0) {\n                                        this._time = dur - this._time;\n                                    }\n                                    if (this._time > dur) {\n                                        this._time = dur;\n                                        time = dur + 1e-4;\n                                    } else if (this._time < 0) {\n                                        this._time = time = 0;\n                                    } else {\n                                        time = this._time;\n                                    }\n                                }\n                            }\n                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n                                time = this._time;\n                                if (time >= prevTime) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime <= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                } else {\n                                    tween = this._last;\n                                    while (tween && tween._startTime >= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._prev;\n                                    }\n                                }\n                                if (pauseTween) {\n                                    this._time = time = pauseTween._startTime;\n                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n                                }\n                            }\n                        }\n                        if (this._cycle !== prevCycle) if (!this._locked) {\n                            var backwards = this._yoyo && (prevCycle & 1) !== 0, wrap = backwards === (this._yoyo && (this._cycle & 1) !== 0), recTotalTime = this._totalTime, recCycle = this._cycle, recRawPrevTime = this._rawPrevTime, recTime = this._time;\n                            this._totalTime = prevCycle * dur;\n                            if (this._cycle < prevCycle) {\n                                backwards = !backwards;\n                            } else {\n                                this._totalTime += dur;\n                            }\n                            this._time = prevTime;\n                            this._rawPrevTime = dur === 0 ? prevRawPrevTime - 1e-4 : prevRawPrevTime;\n                            this._cycle = prevCycle;\n                            this._locked = true;\n                            prevTime = backwards ? 0 : dur;\n                            this.render(prevTime, suppressEvents, dur === 0);\n                            if (!suppressEvents) if (!this._gc) {\n                                if (this.vars.onRepeat) {\n                                    this._callback(\"onRepeat\");\n                                }\n                            }\n                            if (prevTime !== this._time) {\n                                return;\n                            }\n                            if (wrap) {\n                                prevTime = backwards ? dur + 1e-4 : -1e-4;\n                                this.render(prevTime, true, false);\n                            }\n                            this._locked = false;\n                            if (this._paused && !prevPaused) {\n                                return;\n                            }\n                            this._time = recTime;\n                            this._totalTime = recTotalTime;\n                            this._cycle = recCycle;\n                            this._rawPrevTime = recRawPrevTime;\n                        }\n                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n                                this._callback(\"onUpdate\");\n                            }\n                            return;\n                        } else if (!this._initted) {\n                            this._initted = true;\n                        }\n                        if (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n                            this._active = true;\n                        }\n                        if (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n                            this._callback(\"onStart\");\n                        }\n                        curTime = this._time;\n                        if (curTime >= prevTime) {\n                            tween = this._first;\n                            while (tween) {\n                                next = tween._next;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= this._time && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        } else {\n                            tween = this._last;\n                            while (tween) {\n                                next = tween._prev;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        pauseTween = tween._prev;\n                                        while (pauseTween && pauseTween.endTime() > this._time) {\n                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n                                            pauseTween = pauseTween._prev;\n                                        }\n                                        pauseTween = null;\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        }\n                        if (this._onUpdate) if (!suppressEvents) {\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            this._callback(\"onUpdate\");\n                        }\n                        if (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n                            if (isComplete) {\n                                if (_lazyTweens.length) {\n                                    _lazyRender();\n                                }\n                                if (this._timeline.autoRemoveChildren) {\n                                    this._enabled(false, false);\n                                }\n                                this._active = false;\n                            }\n                            if (!suppressEvents && this.vars[callback]) {\n                                this._callback(callback);\n                            }\n                        }\n                    };\n                    p.getActive = function(nested, tweens, timelines) {\n                        if (nested == null) {\n                            nested = true;\n                        }\n                        if (tweens == null) {\n                            tweens = true;\n                        }\n                        if (timelines == null) {\n                            timelines = false;\n                        }\n                        var a = [], all = this.getChildren(nested, tweens, timelines), cnt = 0, l = all.length, i, tween;\n                        for (i = 0; i < l; i++) {\n                            tween = all[i];\n                            if (tween.isActive()) {\n                                a[cnt++] = tween;\n                            }\n                        }\n                        return a;\n                    };\n                    p.getLabelAfter = function(time) {\n                        if (!time) if (time !== 0) {\n                            time = this._time;\n                        }\n                        var labels = this.getLabelsArray(), l = labels.length, i;\n                        for (i = 0; i < l; i++) {\n                            if (labels[i].time > time) {\n                                return labels[i].name;\n                            }\n                        }\n                        return null;\n                    };\n                    p.getLabelBefore = function(time) {\n                        if (time == null) {\n                            time = this._time;\n                        }\n                        var labels = this.getLabelsArray(), i = labels.length;\n                        while (--i > -1) {\n                            if (labels[i].time < time) {\n                                return labels[i].name;\n                            }\n                        }\n                        return null;\n                    };\n                    p.getLabelsArray = function() {\n                        var a = [], cnt = 0, p;\n                        for (p in this._labels) {\n                            a[cnt++] = {\n                                time: this._labels[p],\n                                name: p\n                            };\n                        }\n                        a.sort(function(a, b) {\n                            return a.time - b.time;\n                        });\n                        return a;\n                    };\n                    p.progress = function(value, suppressEvents) {\n                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n                    };\n                    p.totalProgress = function(value, suppressEvents) {\n                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n                    };\n                    p.totalDuration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                TimelineLite.prototype.totalDuration.call(this);\n                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n                            }\n                            return this._totalDuration;\n                        }\n                        return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);\n                    };\n                    p.time = function(value, suppressEvents) {\n                        if (!arguments.length) {\n                            return this._time;\n                        }\n                        if (this._dirty) {\n                            this.totalDuration();\n                        }\n                        if (value > this._duration) {\n                            value = this._duration;\n                        }\n                        if (this._yoyo && (this._cycle & 1) !== 0) {\n                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n                        } else if (this._repeat !== 0) {\n                            value += this._cycle * (this._duration + this._repeatDelay);\n                        }\n                        return this.totalTime(value, suppressEvents);\n                    };\n                    p.repeat = function(value) {\n                        if (!arguments.length) {\n                            return this._repeat;\n                        }\n                        this._repeat = value;\n                        return this._uncache(true);\n                    };\n                    p.repeatDelay = function(value) {\n                        if (!arguments.length) {\n                            return this._repeatDelay;\n                        }\n                        this._repeatDelay = value;\n                        return this._uncache(true);\n                    };\n                    p.yoyo = function(value) {\n                        if (!arguments.length) {\n                            return this._yoyo;\n                        }\n                        this._yoyo = value;\n                        return this;\n                    };\n                    p.currentLabel = function(value) {\n                        if (!arguments.length) {\n                            return this.getLabelBefore(this._time + 1e-8);\n                        }\n                        return this.seek(value, true);\n                    };\n                    return TimelineMax;\n                }, true);\n                (function() {\n                    var _RAD2DEG = 180 / Math.PI, _r1 = [], _r2 = [], _r3 = [], _corProps = {}, _globals = _gsScope._gsDefine.globals, Segment = function(a, b, c, d) {\n                        if (c === d) {\n                            c = d - (d - b) / 1e6;\n                        }\n                        if (a === b) {\n                            b = a + (c - a) / 1e6;\n                        }\n                        this.a = a;\n                        this.b = b;\n                        this.c = c;\n                        this.d = d;\n                        this.da = d - a;\n                        this.ca = c - a;\n                        this.ba = b - a;\n                    }, _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\", cubicToQuadratic = function(a, b, c, d) {\n                        var q1 = {\n                            a: a\n                        }, q2 = {}, q3 = {}, q4 = {\n                            c: d\n                        }, mab = (a + b) / 2, mbc = (b + c) / 2, mcd = (c + d) / 2, mabc = (mab + mbc) / 2, mbcd = (mbc + mcd) / 2, m8 = (mbcd - mabc) / 8;\n                        q1.b = mab + (a - mab) / 4;\n                        q2.b = mabc + m8;\n                        q1.c = q2.a = (q1.b + q2.b) / 2;\n                        q2.c = q3.a = (mabc + mbcd) / 2;\n                        q3.b = mbcd - m8;\n                        q4.b = mcd + (d - mcd) / 4;\n                        q3.c = q4.a = (q3.b + q4.b) / 2;\n                        return [ q1, q2, q3, q4 ];\n                    }, _calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n                        var l = a.length - 1, ii = 0, cp1 = a[0].a, i, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n                        for (i = 0; i < l; i++) {\n                            seg = a[ii];\n                            p1 = seg.a;\n                            p2 = seg.d;\n                            p3 = a[ii + 1].d;\n                            if (correlate) {\n                                r1 = _r1[i];\n                                r2 = _r2[i];\n                                tl = (r2 + r1) * curviness * .25 / (basic ? .5 : _r3[i] || .5);\n                                m1 = p2 - (p2 - p1) * (basic ? curviness * .5 : r1 !== 0 ? tl / r1 : 0);\n                                m2 = p2 + (p3 - p2) * (basic ? curviness * .5 : r2 !== 0 ? tl / r2 : 0);\n                                mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + .5) / 4 || 0));\n                            } else {\n                                m1 = p2 - (p2 - p1) * curviness * .5;\n                                m2 = p2 + (p3 - p2) * curviness * .5;\n                                mm = p2 - (m1 + m2) / 2;\n                            }\n                            m1 += mm;\n                            m2 += mm;\n                            seg.c = cp2 = m1;\n                            if (i !== 0) {\n                                seg.b = cp1;\n                            } else {\n                                seg.b = cp1 = seg.a + (seg.c - seg.a) * .6;\n                            }\n                            seg.da = p2 - p1;\n                            seg.ca = cp2 - p1;\n                            seg.ba = cp1 - p1;\n                            if (quad) {\n                                qb = cubicToQuadratic(p1, cp1, cp2, p2);\n                                a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n                                ii += 4;\n                            } else {\n                                ii++;\n                            }\n                            cp1 = m2;\n                        }\n                        seg = a[ii];\n                        seg.b = cp1;\n                        seg.c = cp1 + (seg.d - cp1) * .4;\n                        seg.da = seg.d - seg.a;\n                        seg.ca = seg.c - seg.a;\n                        seg.ba = cp1 - seg.a;\n                        if (quad) {\n                            qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n                            a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n                        }\n                    }, _parseAnchors = function(values, p, correlate, prepend) {\n                        var a = [], l, i, p1, p2, p3, tmp;\n                        if (prepend) {\n                            values = [ prepend ].concat(values);\n                            i = values.length;\n                            while (--i > -1) {\n                                if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n                                    values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n                                }\n                            }\n                        }\n                        l = values.length - 2;\n                        if (l < 0) {\n                            a[0] = new Segment(values[0][p], 0, 0, values[l < -1 ? 0 : 1][p]);\n                            return a;\n                        }\n                        for (i = 0; i < l; i++) {\n                            p1 = values[i][p];\n                            p2 = values[i + 1][p];\n                            a[i] = new Segment(p1, 0, 0, p2);\n                            if (correlate) {\n                                p3 = values[i + 2][p];\n                                _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n                                _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n                            }\n                        }\n                        a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n                        return a;\n                    }, bezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n                        var obj = {}, props = [], first = prepend || values[0], i, p, a, j, r, l, seamless, last;\n                        correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n                        if (curviness == null) {\n                            curviness = 1;\n                        }\n                        for (p in values[0]) {\n                            props.push(p);\n                        }\n                        if (values.length > 1) {\n                            last = values[values.length - 1];\n                            seamless = true;\n                            i = props.length;\n                            while (--i > -1) {\n                                p = props[i];\n                                if (Math.abs(first[p] - last[p]) > .05) {\n                                    seamless = false;\n                                    break;\n                                }\n                            }\n                            if (seamless) {\n                                values = values.concat();\n                                if (prepend) {\n                                    values.unshift(prepend);\n                                }\n                                values.push(values[1]);\n                                prepend = values[values.length - 3];\n                            }\n                        }\n                        _r1.length = _r2.length = _r3.length = 0;\n                        i = props.length;\n                        while (--i > -1) {\n                            p = props[i];\n                            _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n                            obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n                        }\n                        i = _r1.length;\n                        while (--i > -1) {\n                            _r1[i] = Math.sqrt(_r1[i]);\n                            _r2[i] = Math.sqrt(_r2[i]);\n                        }\n                        if (!basic) {\n                            i = props.length;\n                            while (--i > -1) {\n                                if (_corProps[p]) {\n                                    a = obj[props[i]];\n                                    l = a.length - 1;\n                                    for (j = 0; j < l; j++) {\n                                        r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n                                        _r3[j] = (_r3[j] || 0) + r * r;\n                                    }\n                                }\n                            }\n                            i = _r3.length;\n                            while (--i > -1) {\n                                _r3[i] = Math.sqrt(_r3[i]);\n                            }\n                        }\n                        i = props.length;\n                        j = quadratic ? 4 : 1;\n                        while (--i > -1) {\n                            p = props[i];\n                            a = obj[p];\n                            _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n                            if (seamless) {\n                                a.splice(0, j);\n                                a.splice(a.length - j, j);\n                            }\n                        }\n                        return obj;\n                    }, _parseBezierData = function(values, type, prepend) {\n                        type = type || \"soft\";\n                        var obj = {}, inc = type === \"cubic\" ? 3 : 2, soft = type === \"soft\", props = [], a, b, c, d, cur, i, j, l, p, cnt, tmp;\n                        if (soft && prepend) {\n                            values = [ prepend ].concat(values);\n                        }\n                        if (values == null || values.length < inc + 1) {\n                            throw \"invalid Bezier data\";\n                        }\n                        for (p in values[0]) {\n                            props.push(p);\n                        }\n                        i = props.length;\n                        while (--i > -1) {\n                            p = props[i];\n                            obj[p] = cur = [];\n                            cnt = 0;\n                            l = values.length;\n                            for (j = 0; j < l; j++) {\n                                a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n                                if (soft) if (j > 1) if (j < l - 1) {\n                                    cur[cnt++] = (a + cur[cnt - 2]) / 2;\n                                }\n                                cur[cnt++] = a;\n                            }\n                            l = cnt - inc + 1;\n                            cnt = 0;\n                            for (j = 0; j < l; j += inc) {\n                                a = cur[j];\n                                b = cur[j + 1];\n                                c = cur[j + 2];\n                                d = inc === 2 ? 0 : cur[j + 3];\n                                cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n                            }\n                            cur.length = cnt;\n                        }\n                        return obj;\n                    }, _addCubicLengths = function(a, steps, resolution) {\n                        var inc = 1 / resolution, j = a.length, d, d1, s, da, ca, ba, p, i, inv, bez, index;\n                        while (--j > -1) {\n                            bez = a[j];\n                            s = bez.a;\n                            da = bez.d - s;\n                            ca = bez.c - s;\n                            ba = bez.b - s;\n                            d = d1 = 0;\n                            for (i = 1; i <= resolution; i++) {\n                                p = inc * i;\n                                inv = 1 - p;\n                                d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n                                index = j * resolution + i - 1;\n                                steps[index] = (steps[index] || 0) + d * d;\n                            }\n                        }\n                    }, _parseLengthData = function(obj, resolution) {\n                        resolution = resolution >> 0 || 6;\n                        var a = [], lengths = [], d = 0, total = 0, threshold = resolution - 1, segments = [], curLS = [], p, i, l, index;\n                        for (p in obj) {\n                            _addCubicLengths(obj[p], a, resolution);\n                        }\n                        l = a.length;\n                        for (i = 0; i < l; i++) {\n                            d += Math.sqrt(a[i]);\n                            index = i % resolution;\n                            curLS[index] = d;\n                            if (index === threshold) {\n                                total += d;\n                                index = i / resolution >> 0;\n                                segments[index] = curLS;\n                                lengths[index] = total;\n                                d = 0;\n                                curLS = [];\n                            }\n                        }\n                        return {\n                            length: total,\n                            lengths: lengths,\n                            segments: segments\n                        };\n                    }, BezierPlugin = _gsScope._gsDefine.plugin({\n                        propName: \"bezier\",\n                        priority: -1,\n                        version: \"1.3.6\",\n                        API: 2,\n                        global: true,\n                        init: function(target, vars, tween) {\n                            this._target = target;\n                            if (vars instanceof Array) {\n                                vars = {\n                                    values: vars\n                                };\n                            }\n                            this._func = {};\n                            this._round = {};\n                            this._props = [];\n                            this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n                            var values = vars.values || [], first = {}, second = values[0], autoRotate = vars.autoRotate || tween.vars.orientToBezier, p, isFunc, i, j, prepend;\n                            this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [ [ \"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0 ] ] : null;\n                            for (p in second) {\n                                this._props.push(p);\n                            }\n                            i = this._props.length;\n                            while (--i > -1) {\n                                p = this._props[i];\n                                this._overwriteProps.push(p);\n                                isFunc = this._func[p] = typeof target[p] === \"function\";\n                                first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n                                if (!prepend) if (first[p] !== values[0][p]) {\n                                    prepend = first;\n                                }\n                            }\n                            this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n                            this._segCount = this._beziers[p].length;\n                            if (this._timeRes) {\n                                var ld = _parseLengthData(this._beziers, this._timeRes);\n                                this._length = ld.length;\n                                this._lengths = ld.lengths;\n                                this._segments = ld.segments;\n                                this._l1 = this._li = this._s1 = this._si = 0;\n                                this._l2 = this._lengths[0];\n                                this._curSeg = this._segments[0];\n                                this._s2 = this._curSeg[0];\n                                this._prec = 1 / this._curSeg.length;\n                            }\n                            if (autoRotate = this._autoRotate) {\n                                this._initialRotations = [];\n                                if (!(autoRotate[0] instanceof Array)) {\n                                    this._autoRotate = autoRotate = [ autoRotate ];\n                                }\n                                i = autoRotate.length;\n                                while (--i > -1) {\n                                    for (j = 0; j < 3; j++) {\n                                        p = autoRotate[i][j];\n                                        this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n                                    }\n                                    p = autoRotate[i][2];\n                                    this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n                                }\n                            }\n                            this._startRatio = tween.vars.runBackwards ? 1 : 0;\n                            return true;\n                        },\n                        set: function(v) {\n                            var segments = this._segCount, func = this._func, target = this._target, notStart = v !== this._startRatio, curIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n                            if (!this._timeRes) {\n                                curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n                                t = (v - curIndex * (1 / segments)) * segments;\n                            } else {\n                                lengths = this._lengths;\n                                curSeg = this._curSeg;\n                                v *= this._length;\n                                i = this._li;\n                                if (v > this._l2 && i < segments - 1) {\n                                    l = segments - 1;\n                                    while (i < l && (this._l2 = lengths[++i]) <= v) {}\n                                    this._l1 = lengths[i - 1];\n                                    this._li = i;\n                                    this._curSeg = curSeg = this._segments[i];\n                                    this._s2 = curSeg[this._s1 = this._si = 0];\n                                } else if (v < this._l1 && i > 0) {\n                                    while (i > 0 && (this._l1 = lengths[--i]) >= v) {}\n                                    if (i === 0 && v < this._l1) {\n                                        this._l1 = 0;\n                                    } else {\n                                        i++;\n                                    }\n                                    this._l2 = lengths[i];\n                                    this._li = i;\n                                    this._curSeg = curSeg = this._segments[i];\n                                    this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n                                    this._s2 = curSeg[this._si];\n                                }\n                                curIndex = i;\n                                v -= this._l1;\n                                i = this._si;\n                                if (v > this._s2 && i < curSeg.length - 1) {\n                                    l = curSeg.length - 1;\n                                    while (i < l && (this._s2 = curSeg[++i]) <= v) {}\n                                    this._s1 = curSeg[i - 1];\n                                    this._si = i;\n                                } else if (v < this._s1 && i > 0) {\n                                    while (i > 0 && (this._s1 = curSeg[--i]) >= v) {}\n                                    if (i === 0 && v < this._s1) {\n                                        this._s1 = 0;\n                                    } else {\n                                        i++;\n                                    }\n                                    this._s2 = curSeg[i];\n                                    this._si = i;\n                                }\n                                t = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n                            }\n                            inv = 1 - t;\n                            i = this._props.length;\n                            while (--i > -1) {\n                                p = this._props[i];\n                                b = this._beziers[p][curIndex];\n                                val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n                                if (this._round[p]) {\n                                    val = Math.round(val);\n                                }\n                                if (func[p]) {\n                                    target[p](val);\n                                } else {\n                                    target[p] = val;\n                                }\n                            }\n                            if (this._autoRotate) {\n                                var ar = this._autoRotate, b2, x1, y1, x2, y2, add, conv;\n                                i = ar.length;\n                                while (--i > -1) {\n                                    p = ar[i][2];\n                                    add = ar[i][3] || 0;\n                                    conv = ar[i][4] === true ? 1 : _RAD2DEG;\n                                    b = this._beziers[ar[i][0]];\n                                    b2 = this._beziers[ar[i][1]];\n                                    if (b && b2) {\n                                        b = b[curIndex];\n                                        b2 = b2[curIndex];\n                                        x1 = b.a + (b.b - b.a) * t;\n                                        x2 = b.b + (b.c - b.b) * t;\n                                        x1 += (x2 - x1) * t;\n                                        x2 += (b.c + (b.d - b.c) * t - x2) * t;\n                                        y1 = b2.a + (b2.b - b2.a) * t;\n                                        y2 = b2.b + (b2.c - b2.b) * t;\n                                        y1 += (y2 - y1) * t;\n                                        y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n                                        val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n                                        if (func[p]) {\n                                            target[p](val);\n                                        } else {\n                                            target[p] = val;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }), p = BezierPlugin.prototype;\n                    BezierPlugin.bezierThrough = bezierThrough;\n                    BezierPlugin.cubicToQuadratic = cubicToQuadratic;\n                    BezierPlugin._autoCSS = true;\n                    BezierPlugin.quadraticToCubic = function(a, b, c) {\n                        return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n                    };\n                    BezierPlugin._cssRegister = function() {\n                        var CSSPlugin = _globals.CSSPlugin;\n                        if (!CSSPlugin) {\n                            return;\n                        }\n                        var _internals = CSSPlugin._internals, _parseToProxy = _internals._parseToProxy, _setPluginRatio = _internals._setPluginRatio, CSSPropTween = _internals.CSSPropTween;\n                        _internals._registerComplexSpecialProp(\"bezier\", {\n                            parser: function(t, e, prop, cssp, pt, plugin) {\n                                if (e instanceof Array) {\n                                    e = {\n                                        values: e\n                                    };\n                                }\n                                plugin = new BezierPlugin();\n                                var values = e.values, l = values.length - 1, pluginValues = [], v = {}, i, p, data;\n                                if (l < 0) {\n                                    return pt;\n                                }\n                                for (i = 0; i <= l; i++) {\n                                    data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n                                    pluginValues[i] = data.end;\n                                }\n                                for (p in e) {\n                                    v[p] = e[p];\n                                }\n                                v.values = pluginValues;\n                                pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n                                pt.data = data;\n                                pt.plugin = plugin;\n                                pt.setRatio = _setPluginRatio;\n                                if (v.autoRotate === 0) {\n                                    v.autoRotate = true;\n                                }\n                                if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n                                    i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n                                    v.autoRotate = data.end.left != null ? [ [ \"left\", \"top\", \"rotation\", i, false ] ] : data.end.x != null ? [ [ \"x\", \"y\", \"rotation\", i, false ] ] : false;\n                                }\n                                if (v.autoRotate) {\n                                    if (!cssp._transform) {\n                                        cssp._enableTransforms(false);\n                                    }\n                                    data.autoRotate = cssp._target._gsTransform;\n                                    data.proxy.rotation = data.autoRotate.rotation || 0;\n                                }\n                                plugin._onInitTween(data.proxy, v, cssp._tween);\n                                return pt;\n                            }\n                        });\n                    };\n                    p._roundProps = function(lookup, value) {\n                        var op = this._overwriteProps, i = op.length;\n                        while (--i > -1) {\n                            if (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n                                this._round[op[i]] = value;\n                            }\n                        }\n                    };\n                    p._kill = function(lookup) {\n                        var a = this._props, p, i;\n                        for (p in this._beziers) {\n                            if (p in lookup) {\n                                delete this._beziers[p];\n                                delete this._func[p];\n                                i = a.length;\n                                while (--i > -1) {\n                                    if (a[i] === p) {\n                                        a.splice(i, 1);\n                                    }\n                                }\n                            }\n                        }\n                        return this._super._kill.call(this, lookup);\n                    };\n                })();\n                _gsScope._gsDefine(\"plugins.CSSPlugin\", [ \"plugins.TweenPlugin\", \"TweenLite\" ], function(TweenPlugin, TweenLite) {\n                    var CSSPlugin = function() {\n                        TweenPlugin.call(this, \"css\");\n                        this._overwriteProps.length = 0;\n                        this.setRatio = CSSPlugin.prototype.setRatio;\n                    }, _globals = _gsScope._gsDefine.globals, _hasPriority, _suffixMap, _cs, _overwriteProps, _specialProps = {}, p = CSSPlugin.prototype = new TweenPlugin(\"css\");\n                    p.constructor = CSSPlugin;\n                    CSSPlugin.version = \"1.18.5\";\n                    CSSPlugin.API = 2;\n                    CSSPlugin.defaultTransformPerspective = 0;\n                    CSSPlugin.defaultSkewType = \"compensated\";\n                    CSSPlugin.defaultSmoothOrigin = true;\n                    p = \"px\";\n                    CSSPlugin.suffixMap = {\n                        top: p,\n                        right: p,\n                        bottom: p,\n                        left: p,\n                        width: p,\n                        height: p,\n                        fontSize: p,\n                        padding: p,\n                        margin: p,\n                        perspective: p,\n                        lineHeight: \"\"\n                    };\n                    var _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g, _relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g, _valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, _NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, _suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g, _opacityExp = /opacity *= *([^)]*)/i, _opacityValExp = /opacity:([^;]*)/i, _alphaFilterExp = /alpha\\(opacity *=.+?\\)/i, _rgbhslExp = /^(rgb|hsl)/, _capsExp = /([A-Z])/g, _camelExp = /-([a-z])/gi, _urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, _camelFunc = function(s, g) {\n                        return g.toUpperCase();\n                    }, _horizExp = /(?:Left|Right|Width)/i, _ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi, _ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i, _commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, _complexExp = /[\\s,\\(]/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _forcePT = {}, _doc = document, _createElement = function(type) {\n                        return _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n                    }, _tempDiv = _createElement(\"div\"), _tempImg = _createElement(\"img\"), _internals = CSSPlugin._internals = {\n                        _specialProps: _specialProps\n                    }, _agent = navigator.userAgent, _autoRound, _reqSafariFix, _isSafari, _isFirefox, _isSafariLT6, _ieVers, _supportsOpacity = function() {\n                        var i = _agent.indexOf(\"Android\"), a = _createElement(\"a\");\n                        _isSafari = _agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i + 8, 1)) > 3);\n                        _isSafariLT6 = _isSafari && Number(_agent.substr(_agent.indexOf(\"Version/\") + 8, 1)) < 6;\n                        _isFirefox = _agent.indexOf(\"Firefox\") !== -1;\n                        if (/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(_agent) || /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(_agent)) {\n                            _ieVers = parseFloat(RegExp.$1);\n                        }\n                        if (!a) {\n                            return false;\n                        }\n                        a.style.cssText = \"top:1px;opacity:.55;\";\n                        return /^0.55/.test(a.style.opacity);\n                    }(), _getIEOpacity = function(v) {\n                        return _opacityExp.test(typeof v === \"string\" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ? parseFloat(RegExp.$1) / 100 : 1;\n                    }, _log = function(s) {\n                        if (window.console) {\n                            console.log(s);\n                        }\n                    }, _prefixCSS = \"\", _prefix = \"\", _checkPropPrefix = function(p, e) {\n                        e = e || _tempDiv;\n                        var s = e.style, a, i;\n                        if (s[p] !== undefined) {\n                            return p;\n                        }\n                        p = p.charAt(0).toUpperCase() + p.substr(1);\n                        a = [ \"O\", \"Moz\", \"ms\", \"Ms\", \"Webkit\" ];\n                        i = 5;\n                        while (--i > -1 && s[a[i] + p] === undefined) {}\n                        if (i >= 0) {\n                            _prefix = i === 3 ? \"ms\" : a[i];\n                            _prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n                            return _prefix + p;\n                        }\n                        return null;\n                    }, _getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {}, _getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n                        var rv;\n                        if (!_supportsOpacity) if (p === \"opacity\") {\n                            return _getIEOpacity(t);\n                        }\n                        if (!calc && t.style[p]) {\n                            rv = t.style[p];\n                        } else if (cs = cs || _getComputedStyle(t)) {\n                            rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n                        } else if (t.currentStyle) {\n                            rv = t.currentStyle[p];\n                        }\n                        return dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\") ? dflt : rv;\n                    }, _convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n                        if (sfx === \"px\" || !sfx) {\n                            return v;\n                        }\n                        if (sfx === \"auto\" || !v) {\n                            return 0;\n                        }\n                        var horiz = _horizExp.test(p), node = t, style = _tempDiv.style, neg = v < 0, precise = v === 1, pix, cache, time;\n                        if (neg) {\n                            v = -v;\n                        }\n                        if (precise) {\n                            v *= 100;\n                        }\n                        if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n                            pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);\n                        } else {\n                            style.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n                            if (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n                                node = t.parentNode || _doc.body;\n                                cache = node._gsCache;\n                                time = TweenLite.ticker.frame;\n                                if (cache && horiz && cache.time === time) {\n                                    return cache.width * v / 100;\n                                }\n                                style[horiz ? \"width\" : \"height\"] = v + sfx;\n                            } else {\n                                style[horiz ? \"borderLeftWidth\" : \"borderTopWidth\"] = v + sfx;\n                            }\n                            node.appendChild(_tempDiv);\n                            pix = parseFloat(_tempDiv[horiz ? \"offsetWidth\" : \"offsetHeight\"]);\n                            node.removeChild(_tempDiv);\n                            if (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n                                cache = node._gsCache = node._gsCache || {};\n                                cache.time = time;\n                                cache.width = pix / v * 100;\n                            }\n                            if (pix === 0 && !recurse) {\n                                pix = _convertToPixels(t, p, v, sfx, true);\n                            }\n                        }\n                        if (precise) {\n                            pix /= 100;\n                        }\n                        return neg ? -pix : pix;\n                    }, _calculateOffset = _internals.calculateOffset = function(t, p, cs) {\n                        if (_getStyle(t, \"position\", cs) !== \"absolute\") {\n                            return 0;\n                        }\n                        var dim = p === \"left\" ? \"Left\" : \"Top\", v = _getStyle(t, \"margin\" + dim, cs);\n                        return t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n                    }, _getAllStyles = function(t, cs) {\n                        var s = {}, i, tr, p;\n                        if (cs = cs || _getComputedStyle(t, null)) {\n                            if (i = cs.length) {\n                                while (--i > -1) {\n                                    p = cs[i];\n                                    if (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) {\n                                        s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n                                    }\n                                }\n                            } else {\n                                for (i in cs) {\n                                    if (i.indexOf(\"Transform\") === -1 || _transformProp === i) {\n                                        s[i] = cs[i];\n                                    }\n                                }\n                            }\n                        } else if (cs = t.currentStyle || t.style) {\n                            for (i in cs) {\n                                if (typeof i === \"string\" && s[i] === undefined) {\n                                    s[i.replace(_camelExp, _camelFunc)] = cs[i];\n                                }\n                            }\n                        }\n                        if (!_supportsOpacity) {\n                            s.opacity = _getIEOpacity(t);\n                        }\n                        tr = _getTransform(t, cs, false);\n                        s.rotation = tr.rotation;\n                        s.skewX = tr.skewX;\n                        s.scaleX = tr.scaleX;\n                        s.scaleY = tr.scaleY;\n                        s.x = tr.x;\n                        s.y = tr.y;\n                        if (_supports3D) {\n                            s.z = tr.z;\n                            s.rotationX = tr.rotationX;\n                            s.rotationY = tr.rotationY;\n                            s.scaleZ = tr.scaleZ;\n                        }\n                        if (s.filters) {\n                            delete s.filters;\n                        }\n                        return s;\n                    }, _cssDif = function(t, s1, s2, vars, forceLookup) {\n                        var difs = {}, style = t.style, val, p, mpt;\n                        for (p in s2) {\n                            if (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf(\"Origin\") === -1) if (typeof val === \"number\" || typeof val === \"string\") {\n                                difs[p] = val === \"auto\" && (p === \"left\" || p === \"top\") ? _calculateOffset(t, p) : (val === \"\" || val === \"auto\" || val === \"none\") && typeof s1[p] === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\" ? 0 : val;\n                                if (style[p] !== undefined) {\n                                    mpt = new MiniPropTween(style, p, style[p], mpt);\n                                }\n                            }\n                        }\n                        if (vars) {\n                            for (p in vars) {\n                                if (p !== \"className\") {\n                                    difs[p] = vars[p];\n                                }\n                            }\n                        }\n                        return {\n                            difs: difs,\n                            firstMPT: mpt\n                        };\n                    }, _dimensions = {\n                        width: [ \"Left\", \"Right\" ],\n                        height: [ \"Top\", \"Bottom\" ]\n                    }, _margins = [ \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\" ], _getDimension = function(t, p, cs) {\n                        if ((t.nodeName + \"\").toLowerCase() === \"svg\") {\n                            return (cs || _getComputedStyle(t))[p] || 0;\n                        } else if (t.getBBox && _isSVG(t)) {\n                            return t.getBBox()[p] || 0;\n                        }\n                        var v = parseFloat(p === \"width\" ? t.offsetWidth : t.offsetHeight), a = _dimensions[p], i = a.length;\n                        cs = cs || _getComputedStyle(t, null);\n                        while (--i > -1) {\n                            v -= parseFloat(_getStyle(t, \"padding\" + a[i], cs, true)) || 0;\n                            v -= parseFloat(_getStyle(t, \"border\" + a[i] + \"Width\", cs, true)) || 0;\n                        }\n                        return v;\n                    }, _parsePosition = function(v, recObj) {\n                        if (v === \"contain\" || v === \"auto\" || v === \"auto auto\") {\n                            return v + \" \";\n                        }\n                        if (v == null || v === \"\") {\n                            v = \"0 0\";\n                        }\n                        var a = v.split(\" \"), x = v.indexOf(\"left\") !== -1 ? \"0%\" : v.indexOf(\"right\") !== -1 ? \"100%\" : a[0], y = v.indexOf(\"top\") !== -1 ? \"0%\" : v.indexOf(\"bottom\") !== -1 ? \"100%\" : a[1], i;\n                        if (a.length > 3 && !recObj) {\n                            a = v.split(\", \").join(\",\").split(\",\");\n                            v = [];\n                            for (i = 0; i < a.length; i++) {\n                                v.push(_parsePosition(a[i]));\n                            }\n                            return v.join(\",\");\n                        }\n                        if (y == null) {\n                            y = x === \"center\" ? \"50%\" : \"0\";\n                        } else if (y === \"center\") {\n                            y = \"50%\";\n                        }\n                        if (x === \"center\" || isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1) {\n                            x = \"50%\";\n                        }\n                        v = x + \" \" + y + (a.length > 2 ? \" \" + a[2] : \"\");\n                        if (recObj) {\n                            recObj.oxp = x.indexOf(\"%\") !== -1;\n                            recObj.oyp = y.indexOf(\"%\") !== -1;\n                            recObj.oxr = x.charAt(1) === \"=\";\n                            recObj.oyr = y.charAt(1) === \"=\";\n                            recObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n                            recObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n                            recObj.v = v;\n                        }\n                        return recObj || v;\n                    }, _parseChange = function(e, b) {\n                        return typeof e === \"string\" && e.charAt(1) === \"=\" ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;\n                    }, _parseVal = function(v, d) {\n                        return v == null ? d : typeof v === \"string\" && v.charAt(1) === \"=\" ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n                    }, _parseAngle = function(v, d, p, directionalEnd) {\n                        var min = 1e-6, cap, split, dif, result, isRelative;\n                        if (v == null) {\n                            result = d;\n                        } else if (typeof v === \"number\") {\n                            result = v;\n                        } else {\n                            cap = 360;\n                            split = v.split(\"_\");\n                            isRelative = v.charAt(1) === \"=\";\n                            dif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf(\"rad\") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n                            if (split.length) {\n                                if (directionalEnd) {\n                                    directionalEnd[p] = d + dif;\n                                }\n                                if (v.indexOf(\"short\") !== -1) {\n                                    dif = dif % cap;\n                                    if (dif !== dif % (cap / 2)) {\n                                        dif = dif < 0 ? dif + cap : dif - cap;\n                                    }\n                                }\n                                if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n                                    dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n                                    dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                }\n                            }\n                            result = d + dif;\n                        }\n                        if (result < min && result > -min) {\n                            result = 0;\n                        }\n                        return result;\n                    }, _colorLookup = {\n                        aqua: [ 0, 255, 255 ],\n                        lime: [ 0, 255, 0 ],\n                        silver: [ 192, 192, 192 ],\n                        black: [ 0, 0, 0 ],\n                        maroon: [ 128, 0, 0 ],\n                        teal: [ 0, 128, 128 ],\n                        blue: [ 0, 0, 255 ],\n                        navy: [ 0, 0, 128 ],\n                        white: [ 255, 255, 255 ],\n                        fuchsia: [ 255, 0, 255 ],\n                        olive: [ 128, 128, 0 ],\n                        yellow: [ 255, 255, 0 ],\n                        orange: [ 255, 165, 0 ],\n                        gray: [ 128, 128, 128 ],\n                        purple: [ 128, 0, 128 ],\n                        green: [ 0, 128, 0 ],\n                        red: [ 255, 0, 0 ],\n                        pink: [ 255, 192, 203 ],\n                        cyan: [ 0, 255, 255 ],\n                        transparent: [ 255, 255, 255, 0 ]\n                    }, _hue = function(h, m1, m2) {\n                        h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n                        return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + .5 | 0;\n                    }, _parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n                        var a, r, g, b, h, s, l, max, min, d, wasHSL;\n                        if (!v) {\n                            a = _colorLookup.black;\n                        } else if (typeof v === \"number\") {\n                            a = [ v >> 16, v >> 8 & 255, v & 255 ];\n                        } else {\n                            if (v.charAt(v.length - 1) === \",\") {\n                                v = v.substr(0, v.length - 1);\n                            }\n                            if (_colorLookup[v]) {\n                                a = _colorLookup[v];\n                            } else if (v.charAt(0) === \"#\") {\n                                if (v.length === 4) {\n                                    r = v.charAt(1);\n                                    g = v.charAt(2);\n                                    b = v.charAt(3);\n                                    v = \"#\" + r + r + g + g + b + b;\n                                }\n                                v = parseInt(v.substr(1), 16);\n                                a = [ v >> 16, v >> 8 & 255, v & 255 ];\n                            } else if (v.substr(0, 3) === \"hsl\") {\n                                a = wasHSL = v.match(_numExp);\n                                if (!toHSL) {\n                                    h = Number(a[0]) % 360 / 360;\n                                    s = Number(a[1]) / 100;\n                                    l = Number(a[2]) / 100;\n                                    g = l <= .5 ? l * (s + 1) : l + s - l * s;\n                                    r = l * 2 - g;\n                                    if (a.length > 3) {\n                                        a[3] = Number(v[3]);\n                                    }\n                                    a[0] = _hue(h + 1 / 3, r, g);\n                                    a[1] = _hue(h, r, g);\n                                    a[2] = _hue(h - 1 / 3, r, g);\n                                } else if (v.indexOf(\"=\") !== -1) {\n                                    return v.match(_relNumExp);\n                                }\n                            } else {\n                                a = v.match(_numExp) || _colorLookup.transparent;\n                            }\n                            a[0] = Number(a[0]);\n                            a[1] = Number(a[1]);\n                            a[2] = Number(a[2]);\n                            if (a.length > 3) {\n                                a[3] = Number(a[3]);\n                            }\n                        }\n                        if (toHSL && !wasHSL) {\n                            r = a[0] / 255;\n                            g = a[1] / 255;\n                            b = a[2] / 255;\n                            max = Math.max(r, g, b);\n                            min = Math.min(r, g, b);\n                            l = (max + min) / 2;\n                            if (max === min) {\n                                h = s = 0;\n                            } else {\n                                d = max - min;\n                                s = l > .5 ? d / (2 - max - min) : d / (max + min);\n                                h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n                                h *= 60;\n                            }\n                            a[0] = h + .5 | 0;\n                            a[1] = s * 100 + .5 | 0;\n                            a[2] = l * 100 + .5 | 0;\n                        }\n                        return a;\n                    }, _formatColors = function(s, toHSL) {\n                        var colors = s.match(_colorExp) || [], charIndex = 0, parsed = colors.length ? \"\" : s, i, color, temp;\n                        for (i = 0; i < colors.length; i++) {\n                            color = colors[i];\n                            temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);\n                            charIndex += temp.length + color.length;\n                            color = _parseColor(color, toHSL);\n                            if (color.length === 3) {\n                                color.push(1);\n                            }\n                            parsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n                        }\n                        return parsed + s.substr(charIndex);\n                    }, _colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";\n                    for (p in _colorLookup) {\n                        _colorExp += \"|\" + p + \"\\\\b\";\n                    }\n                    _colorExp = new RegExp(_colorExp + \")\", \"gi\");\n                    CSSPlugin.colorStringFilter = function(a) {\n                        var combined = a[0] + a[1], toHSL;\n                        if (_colorExp.test(combined)) {\n                            toHSL = combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1;\n                            a[0] = _formatColors(a[0], toHSL);\n                            a[1] = _formatColors(a[1], toHSL);\n                        }\n                        _colorExp.lastIndex = 0;\n                    };\n                    if (!TweenLite.defaultStringFilter) {\n                        TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n                    }\n                    var _getFormatter = function(dflt, clr, collapsible, multi) {\n                        if (dflt == null) {\n                            return function(v) {\n                                return v;\n                            };\n                        }\n                        var dColor = clr ? (dflt.match(_colorExp) || [ \"\" ])[0] : \"\", dVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [], pfx = dflt.substr(0, dflt.indexOf(dVals[0])), sfx = dflt.charAt(dflt.length - 1) === \")\" ? \")\" : \"\", delim = dflt.indexOf(\" \") !== -1 ? \" \" : \",\", numVals = dVals.length, dSfx = numVals > 0 ? dVals[0].replace(_numExp, \"\") : \"\", formatter;\n                        if (!numVals) {\n                            return function(v) {\n                                return v;\n                            };\n                        }\n                        if (clr) {\n                            formatter = function(v) {\n                                var color, vals, i, a;\n                                if (typeof v === \"number\") {\n                                    v += dSfx;\n                                } else if (multi && _commasOutsideParenExp.test(v)) {\n                                    a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                    for (i = 0; i < a.length; i++) {\n                                        a[i] = formatter(a[i]);\n                                    }\n                                    return a.join(\",\");\n                                }\n                                color = (v.match(_colorExp) || [ dColor ])[0];\n                                vals = v.split(color).join(\"\").match(_valuesExp) || [];\n                                i = vals.length;\n                                if (numVals > i--) {\n                                    while (++i < numVals) {\n                                        vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n                                    }\n                                }\n                                return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n                            };\n                            return formatter;\n                        }\n                        formatter = function(v) {\n                            var vals, a, i;\n                            if (typeof v === \"number\") {\n                                v += dSfx;\n                            } else if (multi && _commasOutsideParenExp.test(v)) {\n                                a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                for (i = 0; i < a.length; i++) {\n                                    a[i] = formatter(a[i]);\n                                }\n                                return a.join(\",\");\n                            }\n                            vals = v.match(_valuesExp) || [];\n                            i = vals.length;\n                            if (numVals > i--) {\n                                while (++i < numVals) {\n                                    vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n                                }\n                            }\n                            return pfx + vals.join(delim) + sfx;\n                        };\n                        return formatter;\n                    }, _getEdgeParser = function(props) {\n                        props = props.split(\",\");\n                        return function(t, e, p, cssp, pt, plugin, vars) {\n                            var a = (e + \"\").split(\" \"), i;\n                            vars = {};\n                            for (i = 0; i < 4; i++) {\n                                vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];\n                            }\n                            return cssp.parse(t, vars, pt, plugin);\n                        };\n                    }, _setPluginRatio = _internals._setPluginRatio = function(v) {\n                        this.plugin.setRatio(v);\n                        var d = this.data, proxy = d.proxy, mpt = d.firstMPT, min = 1e-6, val, pt, i, str, p;\n                        while (mpt) {\n                            val = proxy[mpt.v];\n                            if (mpt.r) {\n                                val = Math.round(val);\n                            } else if (val < min && val > -min) {\n                                val = 0;\n                            }\n                            mpt.t[mpt.p] = val;\n                            mpt = mpt._next;\n                        }\n                        if (d.autoRotate) {\n                            d.autoRotate.rotation = proxy.rotation;\n                        }\n                        if (v === 1 || v === 0) {\n                            mpt = d.firstMPT;\n                            p = v === 1 ? \"e\" : \"b\";\n                            while (mpt) {\n                                pt = mpt.t;\n                                if (!pt.type) {\n                                    pt[p] = pt.s + pt.xs0;\n                                } else if (pt.type === 1) {\n                                    str = pt.xs0 + pt.s + pt.xs1;\n                                    for (i = 1; i < pt.l; i++) {\n                                        str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                    }\n                                    pt[p] = str;\n                                }\n                                mpt = mpt._next;\n                            }\n                        }\n                    }, MiniPropTween = function(t, p, v, next, r) {\n                        this.t = t;\n                        this.p = p;\n                        this.v = v;\n                        this.r = r;\n                        if (next) {\n                            next._prev = this;\n                            this._next = next;\n                        }\n                    }, _parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n                        var bpt = pt, start = {}, end = {}, transform = cssp._transform, oldForce = _forcePT, i, p, xp, mpt, firstPT;\n                        cssp._transform = null;\n                        _forcePT = vars;\n                        pt = firstPT = cssp.parse(t, vars, pt, plugin);\n                        _forcePT = oldForce;\n                        if (shallow) {\n                            cssp._transform = transform;\n                            if (bpt) {\n                                bpt._prev = null;\n                                if (bpt._prev) {\n                                    bpt._prev._next = null;\n                                }\n                            }\n                        }\n                        while (pt && pt !== bpt) {\n                            if (pt.type <= 1) {\n                                p = pt.p;\n                                end[p] = pt.s + pt.c;\n                                start[p] = pt.s;\n                                if (!shallow) {\n                                    mpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n                                    pt.c = 0;\n                                }\n                                if (pt.type === 1) {\n                                    i = pt.l;\n                                    while (--i > 0) {\n                                        xp = \"xn\" + i;\n                                        p = pt.p + \"_\" + xp;\n                                        end[p] = pt.data[xp];\n                                        start[p] = pt[xp];\n                                        if (!shallow) {\n                                            mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n                                        }\n                                    }\n                                }\n                            }\n                            pt = pt._next;\n                        }\n                        return {\n                            proxy: start,\n                            end: end,\n                            firstMPT: mpt,\n                            pt: firstPT\n                        };\n                    }, CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n                        this.t = t;\n                        this.p = p;\n                        this.s = s;\n                        this.c = c;\n                        this.n = n || p;\n                        if (!(t instanceof CSSPropTween)) {\n                            _overwriteProps.push(this.n);\n                        }\n                        this.r = r;\n                        this.type = type || 0;\n                        if (pr) {\n                            this.pr = pr;\n                            _hasPriority = true;\n                        }\n                        this.b = b === undefined ? s : b;\n                        this.e = e === undefined ? s + c : e;\n                        if (next) {\n                            this._next = next;\n                            next._prev = this;\n                        }\n                    }, _addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) {\n                        var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n                        pt.b = start;\n                        pt.e = pt.xs0 = end;\n                        return pt;\n                    }, _parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n                        b = b || dflt || \"\";\n                        pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);\n                        e += \"\";\n                        if (clrs && _colorExp.test(e + b)) {\n                            e = [ b, e ];\n                            CSSPlugin.colorStringFilter(e);\n                            b = e[0];\n                            e = e[1];\n                        }\n                        var ba = b.split(\", \").join(\",\").split(\" \"), ea = e.split(\", \").join(\",\").split(\" \"), l = ba.length, autoRound = _autoRound !== false, i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n                        if (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n                            ba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n                            ea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n                            l = ba.length;\n                        }\n                        if (l !== ea.length) {\n                            ba = (dflt || \"\").split(\" \");\n                            l = ba.length;\n                        }\n                        pt.plugin = plugin;\n                        pt.setRatio = setRatio;\n                        _colorExp.lastIndex = 0;\n                        for (i = 0; i < l; i++) {\n                            bv = ba[i];\n                            ev = ea[i];\n                            bn = parseFloat(bv);\n                            if (bn || bn === 0) {\n                                pt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), autoRound && ev.indexOf(\"px\") !== -1, true);\n                            } else if (clrs && _colorExp.test(bv)) {\n                                str = ev.indexOf(\")\") + 1;\n                                str = \")\" + (str ? ev.substr(str) : \"\");\n                                useHSL = ev.indexOf(\"hsl\") !== -1 && _supportsOpacity;\n                                bv = _parseColor(bv, useHSL);\n                                ev = _parseColor(ev, useHSL);\n                                hasAlpha = bv.length + ev.length > 6;\n                                if (hasAlpha && !_supportsOpacity && ev[3] === 0) {\n                                    pt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n                                    pt.e = pt.e.split(ea[i]).join(\"transparent\");\n                                } else {\n                                    if (!_supportsOpacity) {\n                                        hasAlpha = false;\n                                    }\n                                    if (useHSL) {\n                                        pt.appendXtra(hasAlpha ? \"hsla(\" : \"hsl(\", bv[0], _parseChange(ev[0], bv[0]), \",\", false, true).appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false).appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? \"%,\" : \"%\" + str, false);\n                                    } else {\n                                        pt.appendXtra(hasAlpha ? \"rgba(\" : \"rgb(\", bv[0], ev[0] - bv[0], \",\", true, true).appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true).appendXtra(\"\", bv[2], ev[2] - bv[2], hasAlpha ? \",\" : str, true);\n                                    }\n                                    if (hasAlpha) {\n                                        bv = bv.length < 4 ? 1 : bv[3];\n                                        pt.appendXtra(\"\", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);\n                                    }\n                                }\n                                _colorExp.lastIndex = 0;\n                            } else {\n                                bnums = bv.match(_numExp);\n                                if (!bnums) {\n                                    pt[\"xs\" + pt.l] += pt.l || pt[\"xs\" + pt.l] ? \" \" + ev : ev;\n                                } else {\n                                    enums = ev.match(_relNumExp);\n                                    if (!enums || enums.length !== bnums.length) {\n                                        return pt;\n                                    }\n                                    ni = 0;\n                                    for (xi = 0; xi < bnums.length; xi++) {\n                                        cv = bnums[xi];\n                                        temp = bv.indexOf(cv, ni);\n                                        pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", autoRound && bv.substr(temp + cv.length, 2) === \"px\", xi === 0);\n                                        ni = temp + cv.length;\n                                    }\n                                    pt[\"xs\" + pt.l] += bv.substr(ni);\n                                }\n                            }\n                        }\n                        if (e.indexOf(\"=\") !== -1) if (pt.data) {\n                            str = pt.xs0 + pt.data.s;\n                            for (i = 1; i < pt.l; i++) {\n                                str += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n                            }\n                            pt.e = str + pt[\"xs\" + i];\n                        }\n                        if (!pt.l) {\n                            pt.type = -1;\n                            pt.xs0 = pt.e;\n                        }\n                        return pt.xfirst || pt;\n                    }, i = 9;\n                    p = CSSPropTween.prototype;\n                    p.l = p.pr = 0;\n                    while (--i > 0) {\n                        p[\"xn\" + i] = 0;\n                        p[\"xs\" + i] = \"\";\n                    }\n                    p.xs0 = \"\";\n                    p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n                    p.appendXtra = function(pfx, s, c, sfx, r, pad) {\n                        var pt = this, l = pt.l;\n                        pt[\"xs\" + l] += pad && (l || pt[\"xs\" + l]) ? \" \" + pfx : pfx || \"\";\n                        if (!c) if (l !== 0 && !pt.plugin) {\n                            pt[\"xs\" + l] += s + (sfx || \"\");\n                            return pt;\n                        }\n                        pt.l++;\n                        pt.type = pt.setRatio ? 2 : 1;\n                        pt[\"xs\" + pt.l] = sfx || \"\";\n                        if (l > 0) {\n                            pt.data[\"xn\" + l] = s + c;\n                            pt.rxp[\"xn\" + l] = r;\n                            pt[\"xn\" + l] = s;\n                            if (!pt.plugin) {\n                                pt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n                                pt.xfirst.xs0 = 0;\n                            }\n                            return pt;\n                        }\n                        pt.data = {\n                            s: s + c\n                        };\n                        pt.rxp = {};\n                        pt.s = s;\n                        pt.c = c;\n                        pt.r = r;\n                        return pt;\n                    };\n                    var SpecialProp = function(p, options) {\n                        options = options || {};\n                        this.p = options.prefix ? _checkPropPrefix(p) || p : p;\n                        _specialProps[p] = _specialProps[this.p] = this;\n                        this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n                        if (options.parser) {\n                            this.parse = options.parser;\n                        }\n                        this.clrs = options.color;\n                        this.multi = options.multi;\n                        this.keyword = options.keyword;\n                        this.dflt = options.defaultValue;\n                        this.pr = options.priority || 0;\n                    }, _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n                        if (typeof options !== \"object\") {\n                            options = {\n                                parser: defaults\n                            };\n                        }\n                        var a = p.split(\",\"), d = options.defaultValue, i, temp;\n                        defaults = defaults || [ d ];\n                        for (i = 0; i < a.length; i++) {\n                            options.prefix = i === 0 && options.prefix;\n                            options.defaultValue = defaults[i] || d;\n                            temp = new SpecialProp(a[i], options);\n                        }\n                    }, _registerPluginProp = function(p) {\n                        if (!_specialProps[p]) {\n                            var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n                            _registerComplexSpecialProp(p, {\n                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                    var pluginClass = _globals.com.greensock.plugins[pluginName];\n                                    if (!pluginClass) {\n                                        _log(\"Error: \" + pluginName + \" js file not loaded.\");\n                                        return pt;\n                                    }\n                                    pluginClass._cssRegister();\n                                    return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n                                }\n                            });\n                        }\n                    };\n                    p = SpecialProp.prototype;\n                    p.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n                        var kwd = this.keyword, i, ba, ea, l, bi, ei;\n                        if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n                            ba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                            ea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                        } else if (kwd) {\n                            ba = [ b ];\n                            ea = [ e ];\n                        }\n                        if (ea) {\n                            l = ea.length > ba.length ? ea.length : ba.length;\n                            for (i = 0; i < l; i++) {\n                                b = ba[i] = ba[i] || this.dflt;\n                                e = ea[i] = ea[i] || this.dflt;\n                                if (kwd) {\n                                    bi = b.indexOf(kwd);\n                                    ei = e.indexOf(kwd);\n                                    if (bi !== ei) {\n                                        if (ei === -1) {\n                                            ba[i] = ba[i].split(kwd).join(\"\");\n                                        } else if (bi === -1) {\n                                            ba[i] += \" \" + kwd;\n                                        }\n                                    }\n                                }\n                            }\n                            b = ba.join(\", \");\n                            e = ea.join(\", \");\n                        }\n                        return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n                    };\n                    p.parse = function(t, e, p, cssp, pt, plugin, vars) {\n                        return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n                    };\n                    CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n                        _registerComplexSpecialProp(name, {\n                            parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n                                rv.plugin = plugin;\n                                rv.setRatio = onInitTween(t, e, cssp._tween, p);\n                                return rv;\n                            },\n                            priority: priority\n                        });\n                    };\n                    CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox;\n                    var _transformProps = \"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"), _transformProp = _checkPropPrefix(\"transform\"), _transformPropCSS = _prefixCSS + \"transform\", _transformOriginProp = _checkPropPrefix(\"transformOrigin\"), _supports3D = _checkPropPrefix(\"perspective\") !== null, Transform = _internals.Transform = function() {\n                        this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n                        this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || \"auto\";\n                    }, _SVGElement = window.SVGElement, _useSVGTransformAttr, _createSVG = function(type, container, attributes) {\n                        var element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type), reg = /([a-z])([A-Z])/g, p;\n                        for (p in attributes) {\n                            element.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n                        }\n                        container.appendChild(element);\n                        return element;\n                    }, _docElement = _doc.documentElement, _forceSVGTransformAttr = function() {\n                        var force = _ieVers || /Android/i.test(_agent) && !window.chrome, svg, rect, width;\n                        if (_doc.createElementNS && !force) {\n                            svg = _createSVG(\"svg\", _docElement);\n                            rect = _createSVG(\"rect\", svg, {\n                                width: 100,\n                                height: 50,\n                                x: 100\n                            });\n                            width = rect.getBoundingClientRect().width;\n                            rect.style[_transformOriginProp] = \"50% 50%\";\n                            rect.style[_transformProp] = \"scaleX(0.5)\";\n                            force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D);\n                            _docElement.removeChild(svg);\n                        }\n                        return force;\n                    }(), _parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n                        var tm = e._gsTransform, m = _getMatrix(e, true), v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n                        if (tm) {\n                            xOriginOld = tm.xOrigin;\n                            yOriginOld = tm.yOrigin;\n                        }\n                        if (!absolute || (v = absolute.split(\" \")).length < 2) {\n                            b = e.getBBox();\n                            local = _parsePosition(local).split(\" \");\n                            v = [ (local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y ];\n                        }\n                        decoratee.xOrigin = xOrigin = parseFloat(v[0]);\n                        decoratee.yOrigin = yOrigin = parseFloat(v[1]);\n                        if (absolute && m !== _identity2DMatrix) {\n                            a = m[0];\n                            b = m[1];\n                            c = m[2];\n                            d = m[3];\n                            tx = m[4];\n                            ty = m[5];\n                            determinant = a * d - b * c;\n                            x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n                            y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n                            xOrigin = decoratee.xOrigin = v[0] = x;\n                            yOrigin = decoratee.yOrigin = v[1] = y;\n                        }\n                        if (tm) {\n                            if (skipRecord) {\n                                decoratee.xOffset = tm.xOffset;\n                                decoratee.yOffset = tm.yOffset;\n                                tm = decoratee;\n                            }\n                            if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {\n                                x = xOrigin - xOriginOld;\n                                y = yOrigin - yOriginOld;\n                                tm.xOffset += x * m[0] + y * m[2] - x;\n                                tm.yOffset += x * m[1] + y * m[3] - y;\n                            } else {\n                                tm.xOffset = tm.yOffset = 0;\n                            }\n                        }\n                        if (!skipRecord) {\n                            e.setAttribute(\"data-svg-origin\", v.join(\" \"));\n                        }\n                    }, _canGetBBox = function(e) {\n                        try {\n                            return e.getBBox();\n                        } catch (e) {}\n                    }, _isSVG = function(e) {\n                        return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));\n                    }, _identity2DMatrix = [ 1, 0, 0, 1, 0, 0 ], _getMatrix = function(e, force2D) {\n                        var tm = e._gsTransform || new Transform(), rnd = 1e5, style = e.style, isDefault, s, m, n, dec, none;\n                        if (_transformProp) {\n                            s = _getStyle(e, _transformPropCSS, null, true);\n                        } else if (e.currentStyle) {\n                            s = e.currentStyle.filter.match(_ieGetMatrixExp);\n                            s = s && s.length === 4 ? [ s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0 ].join(\",\") : \"\";\n                        }\n                        isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n                        if (isDefault && _transformProp && ((none = _getComputedStyle(e).display === \"none\") || !e.parentNode)) {\n                            if (none) {\n                                n = style.display;\n                                style.display = \"block\";\n                            }\n                            if (!e.parentNode) {\n                                dec = 1;\n                                _docElement.appendChild(e);\n                            }\n                            s = _getStyle(e, _transformPropCSS, null, true);\n                            isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n                            if (n) {\n                                style.display = n;\n                            } else if (none) {\n                                _removeProp(style, \"display\");\n                            }\n                            if (dec) {\n                                _docElement.removeChild(e);\n                            }\n                        }\n                        if (tm.svg || e.getBBox && _isSVG(e)) {\n                            if (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) {\n                                s = style[_transformProp];\n                                isDefault = 0;\n                            }\n                            m = e.getAttribute(\"transform\");\n                            if (isDefault && m) {\n                                if (m.indexOf(\"matrix\") !== -1) {\n                                    s = m;\n                                    isDefault = 0;\n                                } else if (m.indexOf(\"translate\") !== -1) {\n                                    s = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n                                    isDefault = 0;\n                                }\n                            }\n                        }\n                        if (isDefault) {\n                            return _identity2DMatrix;\n                        }\n                        m = (s || \"\").match(_numExp) || [];\n                        i = m.length;\n                        while (--i > -1) {\n                            n = Number(m[i]);\n                            m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -.5 : .5) | 0) / rnd + n : n;\n                        }\n                        return force2D && m.length > 6 ? [ m[0], m[1], m[4], m[5], m[12], m[13] ] : m;\n                    }, _getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n                        if (t._gsTransform && rec && !parse) {\n                            return t._gsTransform;\n                        }\n                        var tm = rec ? t._gsTransform || new Transform() : new Transform(), invX = tm.scaleX < 0, min = 2e-5, rnd = 1e5, zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin || 0 : 0, defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0, m, i, scaleX, scaleY, rotation, skewX;\n                        tm.svg = !!(t.getBBox && _isSVG(t));\n                        if (tm.svg) {\n                            _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n                            _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n                        }\n                        m = _getMatrix(t);\n                        if (m !== _identity2DMatrix) {\n                            if (m.length === 16) {\n                                var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3], a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7], a13 = m[8], a23 = m[9], a33 = m[10], a14 = m[12], a24 = m[13], a34 = m[14], a43 = m[11], angle = Math.atan2(a32, a33), t1, t2, t3, t4, cos, sin;\n                                if (tm.zOrigin) {\n                                    a34 = -tm.zOrigin;\n                                    a14 = a13 * a34 - m[12];\n                                    a24 = a23 * a34 - m[13];\n                                    a34 = a33 * a34 + tm.zOrigin - m[14];\n                                }\n                                tm.rotationX = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    t1 = a12 * cos + a13 * sin;\n                                    t2 = a22 * cos + a23 * sin;\n                                    t3 = a32 * cos + a33 * sin;\n                                    a13 = a12 * -sin + a13 * cos;\n                                    a23 = a22 * -sin + a23 * cos;\n                                    a33 = a32 * -sin + a33 * cos;\n                                    a43 = a42 * -sin + a43 * cos;\n                                    a12 = t1;\n                                    a22 = t2;\n                                    a32 = t3;\n                                }\n                                angle = Math.atan2(-a31, a33);\n                                tm.rotationY = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    t1 = a11 * cos - a13 * sin;\n                                    t2 = a21 * cos - a23 * sin;\n                                    t3 = a31 * cos - a33 * sin;\n                                    a23 = a21 * sin + a23 * cos;\n                                    a33 = a31 * sin + a33 * cos;\n                                    a43 = a41 * sin + a43 * cos;\n                                    a11 = t1;\n                                    a21 = t2;\n                                    a31 = t3;\n                                }\n                                angle = Math.atan2(a21, a11);\n                                tm.rotation = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    a11 = a11 * cos + a12 * sin;\n                                    t2 = a21 * cos + a22 * sin;\n                                    a22 = a21 * -sin + a22 * cos;\n                                    a32 = a31 * -sin + a32 * cos;\n                                    a21 = t2;\n                                }\n                                if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {\n                                    tm.rotationX = tm.rotation = 0;\n                                    tm.rotationY = 180 - tm.rotationY;\n                                }\n                                tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21) * rnd + .5 | 0) / rnd;\n                                tm.scaleY = (Math.sqrt(a22 * a22 + a23 * a23) * rnd + .5 | 0) / rnd;\n                                tm.scaleZ = (Math.sqrt(a32 * a32 + a33 * a33) * rnd + .5 | 0) / rnd;\n                                if (tm.rotationX || tm.rotationY) {\n                                    tm.skewX = 0;\n                                } else {\n                                    tm.skewX = a12 || a22 ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n                                    if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n                                        if (invX) {\n                                            tm.scaleX *= -1;\n                                            tm.skewX += tm.rotation <= 0 ? 180 : -180;\n                                            tm.rotation += tm.rotation <= 0 ? 180 : -180;\n                                        } else {\n                                            tm.scaleY *= -1;\n                                            tm.skewX += tm.skewX <= 0 ? 180 : -180;\n                                        }\n                                    }\n                                }\n                                tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n                                tm.x = a14;\n                                tm.y = a24;\n                                tm.z = a34;\n                                if (tm.svg) {\n                                    tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n                                    tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n                                }\n                            } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {\n                                var k = m.length >= 6, a = k ? m[0] : 1, b = m[1] || 0, c = m[2] || 0, d = k ? m[3] : 1;\n                                tm.x = m[4] || 0;\n                                tm.y = m[5] || 0;\n                                scaleX = Math.sqrt(a * a + b * b);\n                                scaleY = Math.sqrt(d * d + c * c);\n                                rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0;\n                                skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n                                if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n                                    if (invX) {\n                                        scaleX *= -1;\n                                        skewX += rotation <= 0 ? 180 : -180;\n                                        rotation += rotation <= 0 ? 180 : -180;\n                                    } else {\n                                        scaleY *= -1;\n                                        skewX += skewX <= 0 ? 180 : -180;\n                                    }\n                                }\n                                tm.scaleX = scaleX;\n                                tm.scaleY = scaleY;\n                                tm.rotation = rotation;\n                                tm.skewX = skewX;\n                                if (_supports3D) {\n                                    tm.rotationX = tm.rotationY = tm.z = 0;\n                                    tm.perspective = defaultTransformPerspective;\n                                    tm.scaleZ = 1;\n                                }\n                                if (tm.svg) {\n                                    tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n                                    tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n                                }\n                            }\n                            tm.zOrigin = zOrigin;\n                            for (i in tm) {\n                                if (tm[i] < min) if (tm[i] > -min) {\n                                    tm[i] = 0;\n                                }\n                            }\n                        }\n                        if (rec) {\n                            t._gsTransform = tm;\n                            if (tm.svg) {\n                                if (_useSVGTransformAttr && t.style[_transformProp]) {\n                                    TweenLite.delayedCall(.001, function() {\n                                        _removeProp(t.style, _transformProp);\n                                    });\n                                } else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n                                    TweenLite.delayedCall(.001, function() {\n                                        t.removeAttribute(\"transform\");\n                                    });\n                                }\n                            }\n                        }\n                        return tm;\n                    }, _setIETransformRatio = function(v) {\n                        var t = this.data, ang = -t.rotation * _DEG2RAD, skew = ang + t.skewX * _DEG2RAD, rnd = 1e5, a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd, b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd, c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd, d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd, style = this.t.style, cs = this.t.currentStyle, filters, val;\n                        if (!cs) {\n                            return;\n                        }\n                        val = b;\n                        b = -c;\n                        c = -val;\n                        filters = cs.filter;\n                        style.filter = \"\";\n                        var w = this.t.offsetWidth, h = this.t.offsetHeight, clip = cs.position !== \"absolute\", m = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d, ox = t.x + w * t.xPercent / 100, oy = t.y + h * t.yPercent / 100, dx, dy;\n                        if (t.ox != null) {\n                            dx = (t.oxp ? w * t.ox * .01 : t.ox) - w / 2;\n                            dy = (t.oyp ? h * t.oy * .01 : t.oy) - h / 2;\n                            ox += dx - (dx * a + dy * b);\n                            oy += dy - (dx * c + dy * d);\n                        }\n                        if (!clip) {\n                            m += \", sizingMethod='auto expand')\";\n                        } else {\n                            dx = w / 2;\n                            dy = h / 2;\n                            m += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n                        }\n                        if (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n                            style.filter = filters.replace(_ieSetMatrixExp, m);\n                        } else {\n                            style.filter = m + \" \" + filters;\n                        }\n                        if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n                            style.removeAttribute(\"filter\");\n                        }\n                        if (!clip) {\n                            var mult = _ieVers < 8 ? 1 : -1, marg, prop, dif;\n                            dx = t.ieOffsetX || 0;\n                            dy = t.ieOffsetY || 0;\n                            t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n                            t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n                            for (i = 0; i < 4; i++) {\n                                prop = _margins[i];\n                                marg = cs[prop];\n                                val = marg.indexOf(\"px\") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n                                if (val !== t[prop]) {\n                                    dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY;\n                                } else {\n                                    dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n                                }\n                                style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + \"px\";\n                            }\n                        }\n                    }, _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n                        var t = this.data, style = this.t.style, angle = t.rotation, rotationX = t.rotationX, rotationY = t.rotationY, sx = t.scaleX, sy = t.scaleY, sz = t.scaleZ, x = t.x, y = t.y, z = t.z, isSVG = t.svg, perspective = t.perspective, force3D = t.force3D, a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43, zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;\n                        if (((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {\n                            if (angle || t.skewX || isSVG) {\n                                angle *= _DEG2RAD;\n                                skew = t.skewX * _DEG2RAD;\n                                rnd = 1e5;\n                                a11 = Math.cos(angle) * sx;\n                                a21 = Math.sin(angle) * sx;\n                                a12 = Math.sin(angle - skew) * -sy;\n                                a22 = Math.cos(angle - skew) * sy;\n                                if (skew && t.skewType === \"simple\") {\n                                    t1 = Math.tan(skew);\n                                    t1 = Math.sqrt(1 + t1 * t1);\n                                    a12 *= t1;\n                                    a22 *= t1;\n                                    if (t.skewY) {\n                                        a11 *= t1;\n                                        a21 *= t1;\n                                    }\n                                }\n                                if (isSVG) {\n                                    x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n                                    y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n                                    if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {\n                                        min = this.t.getBBox();\n                                        x += t.xPercent * .01 * min.width;\n                                        y += t.yPercent * .01 * min.height;\n                                    }\n                                    min = 1e-6;\n                                    if (x < min) if (x > -min) {\n                                        x = 0;\n                                    }\n                                    if (y < min) if (y > -min) {\n                                        y = 0;\n                                    }\n                                }\n                                transform = (a11 * rnd | 0) / rnd + \",\" + (a21 * rnd | 0) / rnd + \",\" + (a12 * rnd | 0) / rnd + \",\" + (a22 * rnd | 0) / rnd + \",\" + x + \",\" + y + \")\";\n                                if (isSVG && _useSVGTransformAttr) {\n                                    this.t.setAttribute(\"transform\", \"matrix(\" + transform);\n                                } else {\n                                    style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n                                }\n                            } else {\n                                style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n                            }\n                            return;\n                        }\n                        if (_isFirefox) {\n                            min = 1e-4;\n                            if (sx < min && sx > -min) {\n                                sx = sz = 2e-5;\n                            }\n                            if (sy < min && sy > -min) {\n                                sy = sz = 2e-5;\n                            }\n                            if (perspective && !t.z && !t.rotationX && !t.rotationY) {\n                                perspective = 0;\n                            }\n                        }\n                        if (angle || t.skewX) {\n                            angle *= _DEG2RAD;\n                            cos = a11 = Math.cos(angle);\n                            sin = a21 = Math.sin(angle);\n                            if (t.skewX) {\n                                angle -= t.skewX * _DEG2RAD;\n                                cos = Math.cos(angle);\n                                sin = Math.sin(angle);\n                                if (t.skewType === \"simple\") {\n                                    t1 = Math.tan(t.skewX * _DEG2RAD);\n                                    t1 = Math.sqrt(1 + t1 * t1);\n                                    cos *= t1;\n                                    sin *= t1;\n                                    if (t.skewY) {\n                                        a11 *= t1;\n                                        a21 *= t1;\n                                    }\n                                }\n                            }\n                            a12 = -sin;\n                            a22 = cos;\n                        } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {\n                            style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z + \"px)\" + (sx !== 1 || sy !== 1 ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n                            return;\n                        } else {\n                            a11 = a22 = 1;\n                            a12 = a21 = 0;\n                        }\n                        a33 = 1;\n                        a13 = a23 = a31 = a32 = a41 = a42 = 0;\n                        a43 = perspective ? -1 / perspective : 0;\n                        zOrigin = t.zOrigin;\n                        min = 1e-6;\n                        comma = \",\";\n                        zero = \"0\";\n                        angle = rotationY * _DEG2RAD;\n                        if (angle) {\n                            cos = Math.cos(angle);\n                            sin = Math.sin(angle);\n                            a31 = -sin;\n                            a41 = a43 * -sin;\n                            a13 = a11 * sin;\n                            a23 = a21 * sin;\n                            a33 = cos;\n                            a43 *= cos;\n                            a11 *= cos;\n                            a21 *= cos;\n                        }\n                        angle = rotationX * _DEG2RAD;\n                        if (angle) {\n                            cos = Math.cos(angle);\n                            sin = Math.sin(angle);\n                            t1 = a12 * cos + a13 * sin;\n                            t2 = a22 * cos + a23 * sin;\n                            a32 = a33 * sin;\n                            a42 = a43 * sin;\n                            a13 = a12 * -sin + a13 * cos;\n                            a23 = a22 * -sin + a23 * cos;\n                            a33 = a33 * cos;\n                            a43 = a43 * cos;\n                            a12 = t1;\n                            a22 = t2;\n                        }\n                        if (sz !== 1) {\n                            a13 *= sz;\n                            a23 *= sz;\n                            a33 *= sz;\n                            a43 *= sz;\n                        }\n                        if (sy !== 1) {\n                            a12 *= sy;\n                            a22 *= sy;\n                            a32 *= sy;\n                            a42 *= sy;\n                        }\n                        if (sx !== 1) {\n                            a11 *= sx;\n                            a21 *= sx;\n                            a31 *= sx;\n                            a41 *= sx;\n                        }\n                        if (zOrigin || isSVG) {\n                            if (zOrigin) {\n                                x += a13 * -zOrigin;\n                                y += a23 * -zOrigin;\n                                z += a33 * -zOrigin + zOrigin;\n                            }\n                            if (isSVG) {\n                                x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n                                y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n                            }\n                            if (x < min && x > -min) {\n                                x = zero;\n                            }\n                            if (y < min && y > -min) {\n                                y = zero;\n                            }\n                            if (z < min && z > -min) {\n                                z = 0;\n                            }\n                        }\n                        transform = t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\";\n                        transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);\n                        transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);\n                        if (rotationX || rotationY || sz !== 1) {\n                            transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);\n                            transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;\n                        } else {\n                            transform += \",0,0,0,0,1,0,\";\n                        }\n                        transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + \")\";\n                        style[_transformProp] = transform;\n                    };\n                    p = Transform.prototype;\n                    p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n                    p.scaleX = p.scaleY = p.scaleZ = 1;\n                    _registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {\n                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n                            if (cssp._lastParsedTransform === vars) {\n                                return pt;\n                            }\n                            cssp._lastParsedTransform = vars;\n                            var originalGSTransform = t._gsTransform, style = t.style, min = 1e-6, i = _transformProps.length, v = vars, endRotations = {}, transformOriginString = \"transformOrigin\", m1 = _getTransform(t, _cs, true, vars.parseTransform), m2, copy, orig, has3D, hasChange, dr, x, y, matrix;\n                            cssp._transform = m1;\n                            if (typeof v.transform === \"string\" && _transformProp) {\n                                copy = _tempDiv.style;\n                                copy[_transformProp] = v.transform;\n                                copy.display = \"block\";\n                                copy.position = \"absolute\";\n                                _doc.body.appendChild(_tempDiv);\n                                m2 = _getTransform(_tempDiv, null, false);\n                                if (m1.svg) {\n                                    x = m1.xOrigin;\n                                    y = m1.yOrigin;\n                                    m2.x -= m1.xOffset;\n                                    m2.y -= m1.yOffset;\n                                    if (v.transformOrigin || v.svgOrigin) {\n                                        orig = {};\n                                        _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n                                        x = orig.xOrigin;\n                                        y = orig.yOrigin;\n                                        m2.x -= orig.xOffset - m1.xOffset;\n                                        m2.y -= orig.yOffset - m1.yOffset;\n                                    }\n                                    if (x || y) {\n                                        matrix = _getMatrix(_tempDiv, true);\n                                        m2.x -= x - (x * matrix[0] + y * matrix[2]);\n                                        m2.y -= y - (x * matrix[1] + y * matrix[3]);\n                                    }\n                                }\n                                _doc.body.removeChild(_tempDiv);\n                                if (!m2.perspective) {\n                                    m2.perspective = m1.perspective;\n                                }\n                                if (v.xPercent != null) {\n                                    m2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n                                }\n                                if (v.yPercent != null) {\n                                    m2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n                                }\n                            } else if (typeof v === \"object\") {\n                                m2 = {\n                                    scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),\n                                    scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),\n                                    scaleZ: _parseVal(v.scaleZ, m1.scaleZ),\n                                    x: _parseVal(v.x, m1.x),\n                                    y: _parseVal(v.y, m1.y),\n                                    z: _parseVal(v.z, m1.z),\n                                    xPercent: _parseVal(v.xPercent, m1.xPercent),\n                                    yPercent: _parseVal(v.yPercent, m1.yPercent),\n                                    perspective: _parseVal(v.transformPerspective, m1.perspective)\n                                };\n                                dr = v.directionalRotation;\n                                if (dr != null) {\n                                    if (typeof dr === \"object\") {\n                                        for (copy in dr) {\n                                            v[copy] = dr[copy];\n                                        }\n                                    } else {\n                                        v.rotation = dr;\n                                    }\n                                }\n                                if (typeof v.x === \"string\" && v.x.indexOf(\"%\") !== -1) {\n                                    m2.x = 0;\n                                    m2.xPercent = _parseVal(v.x, m1.xPercent);\n                                }\n                                if (typeof v.y === \"string\" && v.y.indexOf(\"%\") !== -1) {\n                                    m2.y = 0;\n                                    m2.yPercent = _parseVal(v.y, m1.yPercent);\n                                }\n                                m2.rotation = _parseAngle(\"rotation\" in v ? v.rotation : \"shortRotation\" in v ? v.shortRotation + \"_short\" : \"rotationZ\" in v ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, \"rotation\", endRotations);\n                                if (_supports3D) {\n                                    m2.rotationX = _parseAngle(\"rotationX\" in v ? v.rotationX : \"shortRotationX\" in v ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n                                    m2.rotationY = _parseAngle(\"rotationY\" in v ? v.rotationY : \"shortRotationY\" in v ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n                                }\n                                m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY);\n                                if (m2.skewY = _parseAngle(v.skewY, m1.skewY)) {\n                                    m2.skewX += m2.skewY;\n                                    m2.rotation += m2.skewY;\n                                }\n                            }\n                            if (_supports3D && v.force3D != null) {\n                                m1.force3D = v.force3D;\n                                hasChange = true;\n                            }\n                            m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n                            has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;\n                            if (!has3D && v.scale != null) {\n                                m2.scaleZ = 1;\n                            }\n                            while (--i > -1) {\n                                p = _transformProps[i];\n                                orig = m2[p] - m1[p];\n                                if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n                                    hasChange = true;\n                                    pt = new CSSPropTween(m1, p, m1[p], orig, pt);\n                                    if (p in endRotations) {\n                                        pt.e = endRotations[p];\n                                    }\n                                    pt.xs0 = 0;\n                                    pt.plugin = plugin;\n                                    cssp._overwriteProps.push(pt.n);\n                                }\n                            }\n                            orig = v.transformOrigin;\n                            if (m1.svg && (orig || v.svgOrigin)) {\n                                x = m1.xOffset;\n                                y = m1.yOffset;\n                                _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n                                pt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString);\n                                pt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n                                if (x !== m1.xOffset || y !== m1.yOffset) {\n                                    pt = _addNonTweeningNumericPT(m1, \"xOffset\", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);\n                                    pt = _addNonTweeningNumericPT(m1, \"yOffset\", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);\n                                }\n                                orig = _useSVGTransformAttr ? null : \"0px 0px\";\n                            }\n                            if (orig || _supports3D && has3D && m1.zOrigin) {\n                                if (_transformProp) {\n                                    hasChange = true;\n                                    p = _transformOriginProp;\n                                    orig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\";\n                                    pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n                                    pt.b = style[p];\n                                    pt.plugin = plugin;\n                                    if (_supports3D) {\n                                        copy = m1.zOrigin;\n                                        orig = orig.split(\" \");\n                                        m1.zOrigin = (orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\") ? parseFloat(orig[2]) : copy) || 0;\n                                        pt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\";\n                                        pt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n);\n                                        pt.b = copy;\n                                        pt.xs0 = pt.e = m1.zOrigin;\n                                    } else {\n                                        pt.xs0 = pt.e = orig;\n                                    }\n                                } else {\n                                    _parsePosition(orig + \"\", m1);\n                                }\n                            }\n                            if (hasChange) {\n                                cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2;\n                            }\n                            return pt;\n                        },\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"boxShadow\", {\n                        defaultValue: \"0px 0px 0px 0px #999\",\n                        prefix: true,\n                        color: true,\n                        multi: true,\n                        keyword: \"inset\"\n                    });\n                    _registerComplexSpecialProp(\"borderRadius\", {\n                        defaultValue: \"0px\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            e = this.format(e);\n                            var props = [ \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\" ], style = t.style, ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n                            w = parseFloat(t.offsetWidth);\n                            h = parseFloat(t.offsetHeight);\n                            ea1 = e.split(\" \");\n                            for (i = 0; i < props.length; i++) {\n                                if (this.p.indexOf(\"border\")) {\n                                    props[i] = _checkPropPrefix(props[i]);\n                                }\n                                bs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n                                if (bs.indexOf(\" \") !== -1) {\n                                    bs2 = bs.split(\" \");\n                                    bs = bs2[0];\n                                    bs2 = bs2[1];\n                                }\n                                es = es2 = ea1[i];\n                                bn = parseFloat(bs);\n                                bsfx = bs.substr((bn + \"\").length);\n                                rel = es.charAt(1) === \"=\";\n                                if (rel) {\n                                    en = parseInt(es.charAt(0) + \"1\", 10);\n                                    es = es.substr(2);\n                                    en *= parseFloat(es);\n                                    esfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n                                } else {\n                                    en = parseFloat(es);\n                                    esfx = es.substr((en + \"\").length);\n                                }\n                                if (esfx === \"\") {\n                                    esfx = _suffixMap[p] || bsfx;\n                                }\n                                if (esfx !== bsfx) {\n                                    hn = _convertToPixels(t, \"borderLeft\", bn, bsfx);\n                                    vn = _convertToPixels(t, \"borderTop\", bn, bsfx);\n                                    if (esfx === \"%\") {\n                                        bs = hn / w * 100 + \"%\";\n                                        bs2 = vn / h * 100 + \"%\";\n                                    } else if (esfx === \"em\") {\n                                        em = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n                                        bs = hn / em + \"em\";\n                                        bs2 = vn / em + \"em\";\n                                    } else {\n                                        bs = hn + \"px\";\n                                        bs2 = vn + \"px\";\n                                    }\n                                    if (rel) {\n                                        es = parseFloat(bs) + en + esfx;\n                                        es2 = parseFloat(bs2) + en + esfx;\n                                    }\n                                }\n                                pt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n                            }\n                            return pt;\n                        },\n                        prefix: true,\n                        formatter: _getFormatter(\"0px 0px 0px 0px\", false, true)\n                    });\n                    _registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {\n                        defaultValue: \"0px\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n                        },\n                        prefix: true,\n                        formatter: _getFormatter(\"0px 0px\", false, true)\n                    });\n                    _registerComplexSpecialProp(\"backgroundPosition\", {\n                        defaultValue: \"0 0\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var bp = \"background-position\", cs = _cs || _getComputedStyle(t, null), bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), es = this.format(e), ba, ea, i, pct, overlap, src;\n                            if (bs.indexOf(\"%\") !== -1 !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n                                src = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n                                if (src && src !== \"none\") {\n                                    ba = bs.split(\" \");\n                                    ea = es.split(\" \");\n                                    _tempImg.setAttribute(\"src\", src);\n                                    i = 2;\n                                    while (--i > -1) {\n                                        bs = ba[i];\n                                        pct = bs.indexOf(\"%\") !== -1;\n                                        if (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n                                            overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n                                            ba[i] = pct ? parseFloat(bs) / 100 * overlap + \"px\" : parseFloat(bs) / overlap * 100 + \"%\";\n                                        }\n                                    }\n                                    bs = ba.join(\" \");\n                                }\n                            }\n                            return this.parseComplex(t.style, bs, es, pt, plugin);\n                        },\n                        formatter: _parsePosition\n                    });\n                    _registerComplexSpecialProp(\"backgroundSize\", {\n                        defaultValue: \"0 0\",\n                        formatter: _parsePosition\n                    });\n                    _registerComplexSpecialProp(\"perspective\", {\n                        defaultValue: \"0px\",\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"perspectiveOrigin\", {\n                        defaultValue: \"50% 50%\",\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"transformStyle\", {\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"backfaceVisibility\", {\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"userSelect\", {\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"margin\", {\n                        parser: _getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")\n                    });\n                    _registerComplexSpecialProp(\"padding\", {\n                        parser: _getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")\n                    });\n                    _registerComplexSpecialProp(\"clip\", {\n                        defaultValue: \"rect(0px,0px,0px,0px)\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var b, cs, delim;\n                            if (_ieVers < 9) {\n                                cs = t.currentStyle;\n                                delim = _ieVers < 8 ? \" \" : \",\";\n                                b = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n                                e = this.format(e).split(\",\").join(delim);\n                            } else {\n                                b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n                                e = this.format(e);\n                            }\n                            return this.parseComplex(t.style, b, e, pt, plugin);\n                        }\n                    });\n                    _registerComplexSpecialProp(\"textShadow\", {\n                        defaultValue: \"0px 0px 0px #999\",\n                        color: true,\n                        multi: true\n                    });\n                    _registerComplexSpecialProp(\"autoRound,strictUnits\", {\n                        parser: function(t, e, p, cssp, pt) {\n                            return pt;\n                        }\n                    });\n                    _registerComplexSpecialProp(\"border\", {\n                        defaultValue: \"0px solid #000\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"), end = this.format(e).split(\" \"), esfx = end[0].replace(_suffixExp, \"\");\n                            if (esfx !== \"px\") {\n                                bw = parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx) + esfx;\n                            }\n                            return this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n                        },\n                        color: true,\n                        formatter: function(v) {\n                            var a = v.split(\" \");\n                            return a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [ \"#000\" ])[0];\n                        }\n                    });\n                    _registerComplexSpecialProp(\"borderWidth\", {\n                        parser: _getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")\n                    });\n                    _registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var s = t.style, prop = \"cssFloat\" in s ? \"cssFloat\" : \"styleFloat\";\n                            return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n                        }\n                    });\n                    var _setIEOpacityRatio = function(v) {\n                        var t = this.t, filters = t.filter || _getStyle(this.data, \"filter\") || \"\", val = this.s + this.c * v | 0, skip;\n                        if (val === 100) {\n                            if (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n                                t.removeAttribute(\"filter\");\n                                skip = !_getStyle(this.data, \"filter\");\n                            } else {\n                                t.filter = filters.replace(_alphaFilterExp, \"\");\n                                skip = true;\n                            }\n                        }\n                        if (!skip) {\n                            if (this.xn1) {\n                                t.filter = filters = filters || \"alpha(opacity=\" + val + \")\";\n                            }\n                            if (filters.indexOf(\"pacity\") === -1) {\n                                if (val !== 0 || !this.xn1) {\n                                    t.filter = filters + \" alpha(opacity=\" + val + \")\";\n                                }\n                            } else {\n                                t.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n                            }\n                        }\n                    };\n                    _registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {\n                        defaultValue: \"1\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")), style = t.style, isAutoAlpha = p === \"autoAlpha\";\n                            if (typeof e === \"string\" && e.charAt(1) === \"=\") {\n                                e = (e.charAt(0) === \"-\" ? -1 : 1) * parseFloat(e.substr(2)) + b;\n                            }\n                            if (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) {\n                                b = 0;\n                            }\n                            if (_supportsOpacity) {\n                                pt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n                            } else {\n                                pt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n                                pt.xn1 = isAutoAlpha ? 1 : 0;\n                                style.zoom = 1;\n                                pt.type = 2;\n                                pt.b = \"alpha(opacity=\" + pt.s + \")\";\n                                pt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n                                pt.data = t;\n                                pt.plugin = plugin;\n                                pt.setRatio = _setIEOpacityRatio;\n                            }\n                            if (isAutoAlpha) {\n                                pt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, b !== 0 ? \"inherit\" : \"hidden\", e === 0 ? \"hidden\" : \"inherit\");\n                                pt.xs0 = \"inherit\";\n                                cssp._overwriteProps.push(pt.n);\n                                cssp._overwriteProps.push(p);\n                            }\n                            return pt;\n                        }\n                    });\n                    var _removeProp = function(s, p) {\n                        if (p) {\n                            if (s.removeProperty) {\n                                if (p.substr(0, 2) === \"ms\" || p.substr(0, 6) === \"webkit\") {\n                                    p = \"-\" + p;\n                                }\n                                s.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n                            } else {\n                                s.removeAttribute(p);\n                            }\n                        }\n                    }, _setClassNameRatio = function(v) {\n                        this.t._gsClassPT = this;\n                        if (v === 1 || v === 0) {\n                            this.t.setAttribute(\"class\", v === 0 ? this.b : this.e);\n                            var mpt = this.data, s = this.t.style;\n                            while (mpt) {\n                                if (!mpt.v) {\n                                    _removeProp(s, mpt.p);\n                                } else {\n                                    s[mpt.p] = mpt.v;\n                                }\n                                mpt = mpt._next;\n                            }\n                            if (v === 1 && this.t._gsClassPT === this) {\n                                this.t._gsClassPT = null;\n                            }\n                        } else if (this.t.getAttribute(\"class\") !== this.e) {\n                            this.t.setAttribute(\"class\", this.e);\n                        }\n                    };\n                    _registerComplexSpecialProp(\"className\", {\n                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n                            var b = t.getAttribute(\"class\") || \"\", cssText = t.style.cssText, difData, bs, cnpt, cnptLookup, mpt;\n                            pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n                            pt.setRatio = _setClassNameRatio;\n                            pt.pr = -11;\n                            _hasPriority = true;\n                            pt.b = b;\n                            bs = _getAllStyles(t, _cs);\n                            cnpt = t._gsClassPT;\n                            if (cnpt) {\n                                cnptLookup = {};\n                                mpt = cnpt.data;\n                                while (mpt) {\n                                    cnptLookup[mpt.p] = 1;\n                                    mpt = mpt._next;\n                                }\n                                cnpt.setRatio(1);\n                            }\n                            t._gsClassPT = pt;\n                            pt.e = e.charAt(1) !== \"=\" ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + (e.charAt(0) === \"+\" ? \" \" + e.substr(2) : \"\");\n                            t.setAttribute(\"class\", pt.e);\n                            difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n                            t.setAttribute(\"class\", b);\n                            pt.data = difData.firstMPT;\n                            t.style.cssText = cssText;\n                            pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin);\n                            return pt;\n                        }\n                    });\n                    var _setClearPropsRatio = function(v) {\n                        if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") {\n                            var s = this.t.style, transformParse = _specialProps.transform.parse, a, p, i, clearTransform, transform;\n                            if (this.e === \"all\") {\n                                s.cssText = \"\";\n                                clearTransform = true;\n                            } else {\n                                a = this.e.split(\" \").join(\"\").split(\",\");\n                                i = a.length;\n                                while (--i > -1) {\n                                    p = a[i];\n                                    if (_specialProps[p]) {\n                                        if (_specialProps[p].parse === transformParse) {\n                                            clearTransform = true;\n                                        } else {\n                                            p = p === \"transformOrigin\" ? _transformOriginProp : _specialProps[p].p;\n                                        }\n                                    }\n                                    _removeProp(s, p);\n                                }\n                            }\n                            if (clearTransform) {\n                                _removeProp(s, _transformProp);\n                                transform = this.t._gsTransform;\n                                if (transform) {\n                                    if (transform.svg) {\n                                        this.t.removeAttribute(\"data-svg-origin\");\n                                        this.t.removeAttribute(\"transform\");\n                                    }\n                                    delete this.t._gsTransform;\n                                }\n                            }\n                        }\n                    };\n                    _registerComplexSpecialProp(\"clearProps\", {\n                        parser: function(t, e, p, cssp, pt) {\n                            pt = new CSSPropTween(t, p, 0, 0, pt, 2);\n                            pt.setRatio = _setClearPropsRatio;\n                            pt.e = e;\n                            pt.pr = -10;\n                            pt.data = cssp._tween;\n                            _hasPriority = true;\n                            return pt;\n                        }\n                    });\n                    p = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n                    i = p.length;\n                    while (i--) {\n                        _registerPluginProp(p[i]);\n                    }\n                    p = CSSPlugin.prototype;\n                    p._firstPT = p._lastParsedTransform = p._transform = null;\n                    p._onInitTween = function(target, vars, tween) {\n                        if (!target.nodeType) {\n                            return false;\n                        }\n                        this._target = target;\n                        this._tween = tween;\n                        this._vars = vars;\n                        _autoRound = vars.autoRound;\n                        _hasPriority = false;\n                        _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n                        _cs = _getComputedStyle(target, \"\");\n                        _overwriteProps = this._overwriteProps;\n                        var style = target.style, v, pt, pt2, first, last, next, zIndex, tpt, threeD;\n                        if (_reqSafariFix) if (style.zIndex === \"\") {\n                            v = _getStyle(target, \"zIndex\", _cs);\n                            if (v === \"auto\" || v === \"\") {\n                                this._addLazySet(style, \"zIndex\", 0);\n                            }\n                        }\n                        if (typeof vars === \"string\") {\n                            first = style.cssText;\n                            v = _getAllStyles(target, _cs);\n                            style.cssText = first + \";\" + vars;\n                            v = _cssDif(target, v, _getAllStyles(target)).difs;\n                            if (!_supportsOpacity && _opacityValExp.test(vars)) {\n                                v.opacity = parseFloat(RegExp.$1);\n                            }\n                            vars = v;\n                            style.cssText = first;\n                        }\n                        if (vars.className) {\n                            this._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n                        } else {\n                            this._firstPT = pt = this.parse(target, vars, null);\n                        }\n                        if (this._transformType) {\n                            threeD = this._transformType === 3;\n                            if (!_transformProp) {\n                                style.zoom = 1;\n                            } else if (_isSafari) {\n                                _reqSafariFix = true;\n                                if (style.zIndex === \"\") {\n                                    zIndex = _getStyle(target, \"zIndex\", _cs);\n                                    if (zIndex === \"auto\" || zIndex === \"\") {\n                                        this._addLazySet(style, \"zIndex\", 0);\n                                    }\n                                }\n                                if (_isSafariLT6) {\n                                    this._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n                                }\n                            }\n                            pt2 = pt;\n                            while (pt2 && pt2._next) {\n                                pt2 = pt2._next;\n                            }\n                            tpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n                            this._linkCSSP(tpt, null, pt2);\n                            tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n                            tpt.data = this._transform || _getTransform(target, _cs, true);\n                            tpt.tween = tween;\n                            tpt.pr = -1;\n                            _overwriteProps.pop();\n                        }\n                        if (_hasPriority) {\n                            while (pt) {\n                                next = pt._next;\n                                pt2 = first;\n                                while (pt2 && pt2.pr > pt.pr) {\n                                    pt2 = pt2._next;\n                                }\n                                if (pt._prev = pt2 ? pt2._prev : last) {\n                                    pt._prev._next = pt;\n                                } else {\n                                    first = pt;\n                                }\n                                if (pt._next = pt2) {\n                                    pt2._prev = pt;\n                                } else {\n                                    last = pt;\n                                }\n                                pt = next;\n                            }\n                            this._firstPT = first;\n                        }\n                        return true;\n                    };\n                    p.parse = function(target, vars, pt, plugin) {\n                        var style = target.style, p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n                        for (p in vars) {\n                            es = vars[p];\n                            sp = _specialProps[p];\n                            if (sp) {\n                                pt = sp.parse(target, es, p, this, pt, plugin, vars);\n                            } else {\n                                bs = _getStyle(target, p, _cs) + \"\";\n                                isStr = typeof es === \"string\";\n                                if (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || isStr && _rgbhslExp.test(es)) {\n                                    if (!isStr) {\n                                        es = _parseColor(es);\n                                        es = (es.length > 3 ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n                                    }\n                                    pt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n                                } else if (isStr && _complexExp.test(es)) {\n                                    pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n                                } else {\n                                    bn = parseFloat(bs);\n                                    bsfx = bn || bn === 0 ? bs.substr((bn + \"\").length) : \"\";\n                                    if (bs === \"\" || bs === \"auto\") {\n                                        if (p === \"width\" || p === \"height\") {\n                                            bn = _getDimension(target, p, _cs);\n                                            bsfx = \"px\";\n                                        } else if (p === \"left\" || p === \"top\") {\n                                            bn = _calculateOffset(target, p, _cs);\n                                            bsfx = \"px\";\n                                        } else {\n                                            bn = p !== \"opacity\" ? 0 : 1;\n                                            bsfx = \"\";\n                                        }\n                                    }\n                                    rel = isStr && es.charAt(1) === \"=\";\n                                    if (rel) {\n                                        en = parseInt(es.charAt(0) + \"1\", 10);\n                                        es = es.substr(2);\n                                        en *= parseFloat(es);\n                                        esfx = es.replace(_suffixExp, \"\");\n                                    } else {\n                                        en = parseFloat(es);\n                                        esfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n                                    }\n                                    if (esfx === \"\") {\n                                        esfx = p in _suffixMap ? _suffixMap[p] : bsfx;\n                                    }\n                                    es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p];\n                                    if (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) {\n                                        bn = _convertToPixels(target, p, bn, bsfx);\n                                        if (esfx === \"%\") {\n                                            bn /= _convertToPixels(target, p, 100, \"%\") / 100;\n                                            if (vars.strictUnits !== true) {\n                                                bs = bn + \"%\";\n                                            }\n                                        } else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n                                            bn /= _convertToPixels(target, p, 1, esfx);\n                                        } else if (esfx !== \"px\") {\n                                            en = _convertToPixels(target, p, en, esfx);\n                                            esfx = \"px\";\n                                        }\n                                        if (rel) if (en || en === 0) {\n                                            es = en + bn + esfx;\n                                        }\n                                    }\n                                    if (rel) {\n                                        en += bn;\n                                    }\n                                    if ((bn || bn === 0) && (en || en === 0)) {\n                                        pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === \"px\" || p === \"zIndex\"), 0, bs, es);\n                                        pt.xs0 = esfx;\n                                    } else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n                                        _log(\"invalid \" + p + \" tween value: \" + vars[p]);\n                                    } else {\n                                        pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n                                        pt.xs0 = es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1) ? bs : es;\n                                    }\n                                }\n                            }\n                            if (plugin) if (pt && !pt.plugin) {\n                                pt.plugin = plugin;\n                            }\n                        }\n                        return pt;\n                    };\n                    p.setRatio = function(v) {\n                        var pt = this._firstPT, min = 1e-6, val, str, i;\n                        if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n                            while (pt) {\n                                if (pt.type !== 2) {\n                                    if (pt.r && pt.type !== -1) {\n                                        val = Math.round(pt.s + pt.c);\n                                        if (!pt.type) {\n                                            pt.t[pt.p] = val + pt.xs0;\n                                        } else if (pt.type === 1) {\n                                            i = pt.l;\n                                            str = pt.xs0 + val + pt.xs1;\n                                            for (i = 1; i < pt.l; i++) {\n                                                str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                            }\n                                            pt.t[pt.p] = str;\n                                        }\n                                    } else {\n                                        pt.t[pt.p] = pt.e;\n                                    }\n                                } else {\n                                    pt.setRatio(v);\n                                }\n                                pt = pt._next;\n                            }\n                        } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -1e-6) {\n                            while (pt) {\n                                val = pt.c * v + pt.s;\n                                if (pt.r) {\n                                    val = Math.round(val);\n                                } else if (val < min) if (val > -min) {\n                                    val = 0;\n                                }\n                                if (!pt.type) {\n                                    pt.t[pt.p] = val + pt.xs0;\n                                } else if (pt.type === 1) {\n                                    i = pt.l;\n                                    if (i === 2) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n                                    } else if (i === 3) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n                                    } else if (i === 4) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n                                    } else if (i === 5) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n                                    } else {\n                                        str = pt.xs0 + val + pt.xs1;\n                                        for (i = 1; i < pt.l; i++) {\n                                            str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                        }\n                                        pt.t[pt.p] = str;\n                                    }\n                                } else if (pt.type === -1) {\n                                    pt.t[pt.p] = pt.xs0;\n                                } else if (pt.setRatio) {\n                                    pt.setRatio(v);\n                                }\n                                pt = pt._next;\n                            }\n                        } else {\n                            while (pt) {\n                                if (pt.type !== 2) {\n                                    pt.t[pt.p] = pt.b;\n                                } else {\n                                    pt.setRatio(v);\n                                }\n                                pt = pt._next;\n                            }\n                        }\n                    };\n                    p._enableTransforms = function(threeD) {\n                        this._transform = this._transform || _getTransform(this._target, _cs, true);\n                        this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;\n                    };\n                    var lazySet = function(v) {\n                        this.t[this.p] = this.e;\n                        this.data._linkCSSP(this, this._next, null, true);\n                    };\n                    p._addLazySet = function(t, p, v) {\n                        var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n                        pt.e = v;\n                        pt.setRatio = lazySet;\n                        pt.data = this;\n                    };\n                    p._linkCSSP = function(pt, next, prev, remove) {\n                        if (pt) {\n                            if (next) {\n                                next._prev = pt;\n                            }\n                            if (pt._next) {\n                                pt._next._prev = pt._prev;\n                            }\n                            if (pt._prev) {\n                                pt._prev._next = pt._next;\n                            } else if (this._firstPT === pt) {\n                                this._firstPT = pt._next;\n                                remove = true;\n                            }\n                            if (prev) {\n                                prev._next = pt;\n                            } else if (!remove && this._firstPT === null) {\n                                this._firstPT = pt;\n                            }\n                            pt._next = next;\n                            pt._prev = prev;\n                        }\n                        return pt;\n                    };\n                    p._kill = function(lookup) {\n                        var copy = lookup, pt, p, xfirst;\n                        if (lookup.autoAlpha || lookup.alpha) {\n                            copy = {};\n                            for (p in lookup) {\n                                copy[p] = lookup[p];\n                            }\n                            copy.opacity = 1;\n                            if (copy.autoAlpha) {\n                                copy.visibility = 1;\n                            }\n                        }\n                        if (lookup.className && (pt = this._classNamePT)) {\n                            xfirst = pt.xfirst;\n                            if (xfirst && xfirst._prev) {\n                                this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev);\n                            } else if (xfirst === this._firstPT) {\n                                this._firstPT = pt._next;\n                            }\n                            if (pt._next) {\n                                this._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n                            }\n                            this._classNamePT = null;\n                        }\n                        return TweenPlugin.prototype._kill.call(this, copy);\n                    };\n                    var _getChildStyles = function(e, props, targets) {\n                        var children, i, child, type;\n                        if (e.slice) {\n                            i = e.length;\n                            while (--i > -1) {\n                                _getChildStyles(e[i], props, targets);\n                            }\n                            return;\n                        }\n                        children = e.childNodes;\n                        i = children.length;\n                        while (--i > -1) {\n                            child = children[i];\n                            type = child.type;\n                            if (child.style) {\n                                props.push(_getAllStyles(child));\n                                if (targets) {\n                                    targets.push(child);\n                                }\n                            }\n                            if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n                                _getChildStyles(child, props, targets);\n                            }\n                        }\n                    };\n                    CSSPlugin.cascadeTo = function(target, duration, vars) {\n                        var tween = TweenLite.to(target, duration, vars), results = [ tween ], b = [], e = [], targets = [], _reservedProps = TweenLite._internals.reservedProps, i, difs, p, from;\n                        target = tween._targets || tween.target;\n                        _getChildStyles(target, b, targets);\n                        tween.render(duration, true, true);\n                        _getChildStyles(target, e);\n                        tween.render(0, true, true);\n                        tween._enabled(true);\n                        i = targets.length;\n                        while (--i > -1) {\n                            difs = _cssDif(targets[i], b[i], e[i]);\n                            if (difs.firstMPT) {\n                                difs = difs.difs;\n                                for (p in vars) {\n                                    if (_reservedProps[p]) {\n                                        difs[p] = vars[p];\n                                    }\n                                }\n                                from = {};\n                                for (p in difs) {\n                                    from[p] = b[i][p];\n                                }\n                                results.push(TweenLite.fromTo(targets[i], duration, from, difs));\n                            }\n                        }\n                        return results;\n                    };\n                    TweenPlugin.activate([ CSSPlugin ]);\n                    return CSSPlugin;\n                }, true);\n                (function() {\n                    var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n                        propName: \"roundProps\",\n                        version: \"1.5\",\n                        priority: -1,\n                        API: 2,\n                        init: function(target, value, tween) {\n                            this._tween = tween;\n                            return true;\n                        }\n                    }), _roundLinkedList = function(node) {\n                        while (node) {\n                            if (!node.f && !node.blob) {\n                                node.r = 1;\n                            }\n                            node = node._next;\n                        }\n                    }, p = RoundPropsPlugin.prototype;\n                    p._onInitAllProps = function() {\n                        var tween = this._tween, rp = tween.vars.roundProps.join ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"), i = rp.length, lookup = {}, rpt = tween._propLookup.roundProps, prop, pt, next;\n                        while (--i > -1) {\n                            lookup[rp[i]] = 1;\n                        }\n                        i = rp.length;\n                        while (--i > -1) {\n                            prop = rp[i];\n                            pt = tween._firstPT;\n                            while (pt) {\n                                next = pt._next;\n                                if (pt.pg) {\n                                    pt.t._roundProps(lookup, true);\n                                } else if (pt.n === prop) {\n                                    if (pt.f === 2 && pt.t) {\n                                        _roundLinkedList(pt.t._firstPT);\n                                    } else {\n                                        this._add(pt.t, prop, pt.s, pt.c);\n                                        if (next) {\n                                            next._prev = pt._prev;\n                                        }\n                                        if (pt._prev) {\n                                            pt._prev._next = next;\n                                        } else if (tween._firstPT === pt) {\n                                            tween._firstPT = next;\n                                        }\n                                        pt._next = pt._prev = null;\n                                        tween._propLookup[prop] = rpt;\n                                    }\n                                }\n                                pt = next;\n                            }\n                        }\n                        return false;\n                    };\n                    p._add = function(target, p, s, c) {\n                        this._addTween(target, p, s, s + c, p, true);\n                        this._overwriteProps.push(p);\n                    };\n                })();\n                (function() {\n                    _gsScope._gsDefine.plugin({\n                        propName: \"attr\",\n                        API: 2,\n                        version: \"0.5.0\",\n                        init: function(target, value, tween) {\n                            var p;\n                            if (typeof target.setAttribute !== \"function\") {\n                                return false;\n                            }\n                            for (p in value) {\n                                this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", value[p] + \"\", p, false, p);\n                                this._overwriteProps.push(p);\n                            }\n                            return true;\n                        }\n                    });\n                })();\n                _gsScope._gsDefine.plugin({\n                    propName: \"directionalRotation\",\n                    version: \"0.2.1\",\n                    API: 2,\n                    init: function(target, value, tween) {\n                        if (typeof value !== \"object\") {\n                            value = {\n                                rotation: value\n                            };\n                        }\n                        this.finals = {};\n                        var cap = value.useRadians === true ? Math.PI * 2 : 360, min = 1e-6, p, v, start, end, dif, split;\n                        for (p in value) {\n                            if (p !== \"useRadians\") {\n                                split = (value[p] + \"\").split(\"_\");\n                                v = split[0];\n                                start = parseFloat(typeof target[p] !== \"function\" ? target[p] : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]());\n                                end = this.finals[p] = typeof v === \"string\" && v.charAt(1) === \"=\" ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n                                dif = end - start;\n                                if (split.length) {\n                                    v = split.join(\"_\");\n                                    if (v.indexOf(\"short\") !== -1) {\n                                        dif = dif % cap;\n                                        if (dif !== dif % (cap / 2)) {\n                                            dif = dif < 0 ? dif + cap : dif - cap;\n                                        }\n                                    }\n                                    if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n                                        dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                    } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n                                        dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                    }\n                                }\n                                if (dif > min || dif < -min) {\n                                    this._addTween(target, p, start, start + dif, p);\n                                    this._overwriteProps.push(p);\n                                }\n                            }\n                        }\n                        return true;\n                    },\n                    set: function(ratio) {\n                        var pt;\n                        if (ratio !== 1) {\n                            this._super.setRatio.call(this, ratio);\n                        } else {\n                            pt = this._firstPT;\n                            while (pt) {\n                                if (pt.f) {\n                                    pt.t[pt.p](this.finals[pt.p]);\n                                } else {\n                                    pt.t[pt.p] = this.finals[pt.p];\n                                }\n                                pt = pt._next;\n                            }\n                        }\n                    }\n                })._autoCSS = true;\n                _gsScope._gsDefine(\"easing.Back\", [ \"easing.Ease\" ], function(Ease) {\n                    var w = _gsScope.GreenSockGlobals || _gsScope, gs = w.com.greensock, _2PI = Math.PI * 2, _HALF_PI = Math.PI / 2, _class = gs._class, _create = function(n, f) {\n                        var C = _class(\"easing.\" + n, function() {}, true), p = C.prototype = new Ease();\n                        p.constructor = C;\n                        p.getRatio = f;\n                        return C;\n                    }, _easeReg = Ease.register || function() {}, _wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n                        var C = _class(\"easing.\" + name, {\n                            easeOut: new EaseOut(),\n                            easeIn: new EaseIn(),\n                            easeInOut: new EaseInOut()\n                        }, true);\n                        _easeReg(C, name);\n                        return C;\n                    }, EasePoint = function(time, value, next) {\n                        this.t = time;\n                        this.v = value;\n                        if (next) {\n                            this.next = next;\n                            next.prev = this;\n                            this.c = next.v - value;\n                            this.gap = next.t - time;\n                        }\n                    }, _createBack = function(n, f) {\n                        var C = _class(\"easing.\" + n, function(overshoot) {\n                            this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;\n                            this._p2 = this._p1 * 1.525;\n                        }, true), p = C.prototype = new Ease();\n                        p.constructor = C;\n                        p.getRatio = f;\n                        p.config = function(overshoot) {\n                            return new C(overshoot);\n                        };\n                        return C;\n                    }, Back = _wrap(\"Back\", _createBack(\"BackOut\", function(p) {\n                        return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;\n                    }), _createBack(\"BackIn\", function(p) {\n                        return p * p * ((this._p1 + 1) * p - this._p1);\n                    }), _createBack(\"BackInOut\", function(p) {\n                        return (p *= 2) < 1 ? .5 * p * p * ((this._p2 + 1) * p - this._p2) : .5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n                    })), SlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n                        power = power || power === 0 ? power : .7;\n                        if (linearRatio == null) {\n                            linearRatio = .7;\n                        } else if (linearRatio > 1) {\n                            linearRatio = 1;\n                        }\n                        this._p = linearRatio !== 1 ? power : 0;\n                        this._p1 = (1 - linearRatio) / 2;\n                        this._p2 = linearRatio;\n                        this._p3 = this._p1 + this._p2;\n                        this._calcEnd = yoyoMode === true;\n                    }, true), p = SlowMo.prototype = new Ease(), SteppedEase, RoughEase, _createElastic;\n                    p.constructor = SlowMo;\n                    p.getRatio = function(p) {\n                        var r = p + (.5 - p) * this._p;\n                        if (p < this._p1) {\n                            return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;\n                        } else if (p > this._p3) {\n                            return this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p;\n                        }\n                        return this._calcEnd ? 1 : r;\n                    };\n                    SlowMo.ease = new SlowMo(.7, .7);\n                    p.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n                        return new SlowMo(linearRatio, power, yoyoMode);\n                    };\n                    SteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n                        steps = steps || 1;\n                        this._p1 = 1 / steps;\n                        this._p2 = steps + 1;\n                    }, true);\n                    p = SteppedEase.prototype = new Ease();\n                    p.constructor = SteppedEase;\n                    p.getRatio = function(p) {\n                        if (p < 0) {\n                            p = 0;\n                        } else if (p >= 1) {\n                            p = .999999999;\n                        }\n                        return (this._p2 * p >> 0) * this._p1;\n                    };\n                    p.config = SteppedEase.config = function(steps) {\n                        return new SteppedEase(steps);\n                    };\n                    RoughEase = _class(\"easing.RoughEase\", function(vars) {\n                        vars = vars || {};\n                        var taper = vars.taper || \"none\", a = [], cnt = 0, points = (vars.points || 20) | 0, i = points, randomize = vars.randomize !== false, clamp = vars.clamp === true, template = vars.template instanceof Ease ? vars.template : null, strength = typeof vars.strength === \"number\" ? vars.strength * .4 : .4, x, y, bump, invX, obj, pnt;\n                        while (--i > -1) {\n                            x = randomize ? Math.random() : 1 / points * i;\n                            y = template ? template.getRatio(x) : x;\n                            if (taper === \"none\") {\n                                bump = strength;\n                            } else if (taper === \"out\") {\n                                invX = 1 - x;\n                                bump = invX * invX * strength;\n                            } else if (taper === \"in\") {\n                                bump = x * x * strength;\n                            } else if (x < .5) {\n                                invX = x * 2;\n                                bump = invX * invX * .5 * strength;\n                            } else {\n                                invX = (1 - x) * 2;\n                                bump = invX * invX * .5 * strength;\n                            }\n                            if (randomize) {\n                                y += Math.random() * bump - bump * .5;\n                            } else if (i % 2) {\n                                y += bump * .5;\n                            } else {\n                                y -= bump * .5;\n                            }\n                            if (clamp) {\n                                if (y > 1) {\n                                    y = 1;\n                                } else if (y < 0) {\n                                    y = 0;\n                                }\n                            }\n                            a[cnt++] = {\n                                x: x,\n                                y: y\n                            };\n                        }\n                        a.sort(function(a, b) {\n                            return a.x - b.x;\n                        });\n                        pnt = new EasePoint(1, 1, null);\n                        i = points;\n                        while (--i > -1) {\n                            obj = a[i];\n                            pnt = new EasePoint(obj.x, obj.y, pnt);\n                        }\n                        this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);\n                    }, true);\n                    p = RoughEase.prototype = new Ease();\n                    p.constructor = RoughEase;\n                    p.getRatio = function(p) {\n                        var pnt = this._prev;\n                        if (p > pnt.t) {\n                            while (pnt.next && p >= pnt.t) {\n                                pnt = pnt.next;\n                            }\n                            pnt = pnt.prev;\n                        } else {\n                            while (pnt.prev && p <= pnt.t) {\n                                pnt = pnt.prev;\n                            }\n                        }\n                        this._prev = pnt;\n                        return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;\n                    };\n                    p.config = function(vars) {\n                        return new RoughEase(vars);\n                    };\n                    RoughEase.ease = new RoughEase();\n                    _wrap(\"Bounce\", _create(\"BounceOut\", function(p) {\n                        if (p < 1 / 2.75) {\n                            return 7.5625 * p * p;\n                        } else if (p < 2 / 2.75) {\n                            return 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n                        } else if (p < 2.5 / 2.75) {\n                            return 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n                        }\n                        return 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n                    }), _create(\"BounceIn\", function(p) {\n                        if ((p = 1 - p) < 1 / 2.75) {\n                            return 1 - 7.5625 * p * p;\n                        } else if (p < 2 / 2.75) {\n                            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + .75);\n                        } else if (p < 2.5 / 2.75) {\n                            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + .9375);\n                        }\n                        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + .984375);\n                    }), _create(\"BounceInOut\", function(p) {\n                        var invert = p < .5;\n                        if (invert) {\n                            p = 1 - p * 2;\n                        } else {\n                            p = p * 2 - 1;\n                        }\n                        if (p < 1 / 2.75) {\n                            p = 7.5625 * p * p;\n                        } else if (p < 2 / 2.75) {\n                            p = 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n                        } else if (p < 2.5 / 2.75) {\n                            p = 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n                        } else {\n                            p = 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n                        }\n                        return invert ? (1 - p) * .5 : p * .5 + .5;\n                    }));\n                    _wrap(\"Circ\", _create(\"CircOut\", function(p) {\n                        return Math.sqrt(1 - (p = p - 1) * p);\n                    }), _create(\"CircIn\", function(p) {\n                        return -(Math.sqrt(1 - p * p) - 1);\n                    }), _create(\"CircInOut\", function(p) {\n                        return (p *= 2) < 1 ? -.5 * (Math.sqrt(1 - p * p) - 1) : .5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n                    }));\n                    _createElastic = function(n, f, def) {\n                        var C = _class(\"easing.\" + n, function(amplitude, period) {\n                            this._p1 = amplitude >= 1 ? amplitude : 1;\n                            this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n                            this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n                            this._p2 = _2PI / this._p2;\n                        }, true), p = C.prototype = new Ease();\n                        p.constructor = C;\n                        p.getRatio = f;\n                        p.config = function(amplitude, period) {\n                            return new C(amplitude, period);\n                        };\n                        return C;\n                    };\n                    _wrap(\"Elastic\", _createElastic(\"ElasticOut\", function(p) {\n                        return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;\n                    }, .3), _createElastic(\"ElasticIn\", function(p) {\n                        return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));\n                    }, .3), _createElastic(\"ElasticInOut\", function(p) {\n                        return (p *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * .5 + 1;\n                    }, .45));\n                    _wrap(\"Expo\", _create(\"ExpoOut\", function(p) {\n                        return 1 - Math.pow(2, -10 * p);\n                    }), _create(\"ExpoIn\", function(p) {\n                        return Math.pow(2, 10 * (p - 1)) - .001;\n                    }), _create(\"ExpoInOut\", function(p) {\n                        return (p *= 2) < 1 ? .5 * Math.pow(2, 10 * (p - 1)) : .5 * (2 - Math.pow(2, -10 * (p - 1)));\n                    }));\n                    _wrap(\"Sine\", _create(\"SineOut\", function(p) {\n                        return Math.sin(p * _HALF_PI);\n                    }), _create(\"SineIn\", function(p) {\n                        return -Math.cos(p * _HALF_PI) + 1;\n                    }), _create(\"SineInOut\", function(p) {\n                        return -.5 * (Math.cos(Math.PI * p) - 1);\n                    }));\n                    _class(\"easing.EaseLookup\", {\n                        find: function(s) {\n                            return Ease.map[s];\n                        }\n                    }, true);\n                    _easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n                    _easeReg(RoughEase, \"RoughEase\", \"ease,\");\n                    _easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n                    return Back;\n                }, true);\n            });\n            if (_gsScope._gsDefine) {\n                _gsScope._gsQueue.pop()();\n            }\n            (function(window, moduleName) {\n                \"use strict\";\n                var _exports = {}, _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n                if (_globals.TweenLite) {\n                    return;\n                }\n                var _namespace = function(ns) {\n                    var a = ns.split(\".\"), p = _globals, i;\n                    for (i = 0; i < a.length; i++) {\n                        p[a[i]] = p = p[a[i]] || {};\n                    }\n                    return p;\n                }, gs = _namespace(\"com.greensock\"), _tinyNum = 1e-10, _slice = function(a) {\n                    var b = [], l = a.length, i;\n                    for (i = 0; i !== l; b.push(a[i++])) {}\n                    return b;\n                }, _emptyFunc = function() {}, _isArray = function() {\n                    var toString = Object.prototype.toString, array = toString.call([]);\n                    return function(obj) {\n                        return obj != null && (obj instanceof Array || typeof obj === \"object\" && !!obj.push && toString.call(obj) === array);\n                    };\n                }(), a, i, p, _ticker, _tickerActive, _defLookup = {}, Definition = function(ns, dependencies, func, global) {\n                    this.sc = _defLookup[ns] ? _defLookup[ns].sc : [];\n                    _defLookup[ns] = this;\n                    this.gsClass = null;\n                    this.func = func;\n                    var _classes = [];\n                    this.check = function(init) {\n                        var i = dependencies.length, missing = i, cur, a, n, cl, hasModule;\n                        while (--i > -1) {\n                            if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n                                _classes[i] = cur.gsClass;\n                                missing--;\n                            } else if (init) {\n                                cur.sc.push(this);\n                            }\n                        }\n                        if (missing === 0 && func) {\n                            a = (\"com.greensock.\" + ns).split(\".\");\n                            n = a.pop();\n                            cl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n                            if (global) {\n                                _globals[n] = cl;\n                                hasModule = typeof module !== \"undefined\" && module.exports;\n                                if (!hasModule && \"function\" === \"function\" && __webpack_require__(6)) {\n                                    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                                        return cl;\n                                    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n                                } else if (hasModule) {\n                                    if (ns === moduleName) {\n                                        module.exports = _exports[moduleName] = cl;\n                                        for (i in _exports) {\n                                            cl[i] = _exports[i];\n                                        }\n                                    } else if (_exports[moduleName]) {\n                                        _exports[moduleName][n] = cl;\n                                    }\n                                }\n                            }\n                            for (i = 0; i < this.sc.length; i++) {\n                                this.sc[i].check();\n                            }\n                        }\n                    };\n                    this.check(true);\n                }, _gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n                    return new Definition(ns, dependencies, func, global);\n                }, _class = gs._class = function(ns, func, global) {\n                    func = func || function() {};\n                    _gsDefine(ns, [], function() {\n                        return func;\n                    }, global);\n                    return func;\n                };\n                _gsDefine.globals = _globals;\n                var _baseParams = [ 0, 0, 1, 1 ], _blankArray = [], Ease = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n                    this._func = func;\n                    this._type = type || 0;\n                    this._power = power || 0;\n                    this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n                }, true), _easeMap = Ease.map = {}, _easeReg = Ease.register = function(ease, names, types, create) {\n                    var na = names.split(\",\"), i = na.length, ta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"), e, name, j, type;\n                    while (--i > -1) {\n                        name = na[i];\n                        e = create ? _class(\"easing.\" + name, null, true) : gs.easing[name] || {};\n                        j = ta.length;\n                        while (--j > -1) {\n                            type = ta[j];\n                            _easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n                        }\n                    }\n                };\n                p = Ease.prototype;\n                p._calcEnd = false;\n                p.getRatio = function(p) {\n                    if (this._func) {\n                        this._params[0] = p;\n                        return this._func.apply(null, this._params);\n                    }\n                    var t = this._type, pw = this._power, r = t === 1 ? 1 - p : t === 2 ? p : p < .5 ? p * 2 : (1 - p) * 2;\n                    if (pw === 1) {\n                        r *= r;\n                    } else if (pw === 2) {\n                        r *= r * r;\n                    } else if (pw === 3) {\n                        r *= r * r * r;\n                    } else if (pw === 4) {\n                        r *= r * r * r * r;\n                    }\n                    return t === 1 ? 1 - r : t === 2 ? r : p < .5 ? r / 2 : 1 - r / 2;\n                };\n                a = [ \"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\" ];\n                i = a.length;\n                while (--i > -1) {\n                    p = a[i] + \",Power\" + i;\n                    _easeReg(new Ease(null, null, 1, i), p, \"easeOut\", true);\n                    _easeReg(new Ease(null, null, 2, i), p, \"easeIn\" + (i === 0 ? \",easeNone\" : \"\"));\n                    _easeReg(new Ease(null, null, 3, i), p, \"easeInOut\");\n                }\n                _easeMap.linear = gs.easing.Linear.easeIn;\n                _easeMap.swing = gs.easing.Quad.easeInOut;\n                var EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n                    this._listeners = {};\n                    this._eventTarget = target || this;\n                });\n                p = EventDispatcher.prototype;\n                p.addEventListener = function(type, callback, scope, useParam, priority) {\n                    priority = priority || 0;\n                    var list = this._listeners[type], index = 0, listener, i;\n                    if (this === _ticker && !_tickerActive) {\n                        _ticker.wake();\n                    }\n                    if (list == null) {\n                        this._listeners[type] = list = [];\n                    }\n                    i = list.length;\n                    while (--i > -1) {\n                        listener = list[i];\n                        if (listener.c === callback && listener.s === scope) {\n                            list.splice(i, 1);\n                        } else if (index === 0 && listener.pr < priority) {\n                            index = i + 1;\n                        }\n                    }\n                    list.splice(index, 0, {\n                        c: callback,\n                        s: scope,\n                        up: useParam,\n                        pr: priority\n                    });\n                };\n                p.removeEventListener = function(type, callback) {\n                    var list = this._listeners[type], i;\n                    if (list) {\n                        i = list.length;\n                        while (--i > -1) {\n                            if (list[i].c === callback) {\n                                list.splice(i, 1);\n                                return;\n                            }\n                        }\n                    }\n                };\n                p.dispatchEvent = function(type) {\n                    var list = this._listeners[type], i, t, listener;\n                    if (list) {\n                        i = list.length;\n                        t = this._eventTarget;\n                        while (--i > -1) {\n                            listener = list[i];\n                            if (listener) {\n                                if (listener.up) {\n                                    listener.c.call(listener.s || t, {\n                                        type: type,\n                                        target: t\n                                    });\n                                } else {\n                                    listener.c.call(listener.s || t);\n                                }\n                            }\n                        }\n                    }\n                };\n                var _reqAnimFrame = window.requestAnimationFrame, _cancelAnimFrame = window.cancelAnimationFrame, _getTime = Date.now || function() {\n                    return new Date().getTime();\n                }, _lastUpdate = _getTime();\n                a = [ \"ms\", \"moz\", \"webkit\", \"o\" ];\n                i = a.length;\n                while (--i > -1 && !_reqAnimFrame) {\n                    _reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n                    _cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n                }\n                _class(\"Ticker\", function(fps, useRAF) {\n                    var _self = this, _startTime = _getTime(), _useRAF = useRAF !== false && _reqAnimFrame ? \"auto\" : false, _lagThreshold = 500, _adjustedLag = 33, _tickWord = \"tick\", _fps, _req, _id, _gap, _nextTime, _tick = function(manual) {\n                        var elapsed = _getTime() - _lastUpdate, overlap, dispatch;\n                        if (elapsed > _lagThreshold) {\n                            _startTime += elapsed - _adjustedLag;\n                        }\n                        _lastUpdate += elapsed;\n                        _self.time = (_lastUpdate - _startTime) / 1e3;\n                        overlap = _self.time - _nextTime;\n                        if (!_fps || overlap > 0 || manual === true) {\n                            _self.frame++;\n                            _nextTime += overlap + (overlap >= _gap ? .004 : _gap - overlap);\n                            dispatch = true;\n                        }\n                        if (manual !== true) {\n                            _id = _req(_tick);\n                        }\n                        if (dispatch) {\n                            _self.dispatchEvent(_tickWord);\n                        }\n                    };\n                    EventDispatcher.call(_self);\n                    _self.time = _self.frame = 0;\n                    _self.tick = function() {\n                        _tick(true);\n                    };\n                    _self.lagSmoothing = function(threshold, adjustedLag) {\n                        _lagThreshold = threshold || 1 / _tinyNum;\n                        _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n                    };\n                    _self.sleep = function() {\n                        if (_id == null) {\n                            return;\n                        }\n                        if (!_useRAF || !_cancelAnimFrame) {\n                            clearTimeout(_id);\n                        } else {\n                            _cancelAnimFrame(_id);\n                        }\n                        _req = _emptyFunc;\n                        _id = null;\n                        if (_self === _ticker) {\n                            _tickerActive = false;\n                        }\n                    };\n                    _self.wake = function(seamless) {\n                        if (_id !== null) {\n                            _self.sleep();\n                        } else if (seamless) {\n                            _startTime += -_lastUpdate + (_lastUpdate = _getTime());\n                        } else if (_self.frame > 10) {\n                            _lastUpdate = _getTime() - _lagThreshold + 5;\n                        }\n                        _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function(f) {\n                            return setTimeout(f, (_nextTime - _self.time) * 1e3 + 1 | 0);\n                        } : _reqAnimFrame;\n                        if (_self === _ticker) {\n                            _tickerActive = true;\n                        }\n                        _tick(2);\n                    };\n                    _self.fps = function(value) {\n                        if (!arguments.length) {\n                            return _fps;\n                        }\n                        _fps = value;\n                        _gap = 1 / (_fps || 60);\n                        _nextTime = this.time + _gap;\n                        _self.wake();\n                    };\n                    _self.useRAF = function(value) {\n                        if (!arguments.length) {\n                            return _useRAF;\n                        }\n                        _self.sleep();\n                        _useRAF = value;\n                        _self.fps(_fps);\n                    };\n                    _self.fps(fps);\n                    setTimeout(function() {\n                        if (_useRAF === \"auto\" && _self.frame < 5 && document.visibilityState !== \"hidden\") {\n                            _self.useRAF(false);\n                        }\n                    }, 1500);\n                });\n                p = gs.Ticker.prototype = new gs.events.EventDispatcher();\n                p.constructor = gs.Ticker;\n                var Animation = _class(\"core.Animation\", function(duration, vars) {\n                    this.vars = vars = vars || {};\n                    this._duration = this._totalDuration = duration || 0;\n                    this._delay = Number(vars.delay) || 0;\n                    this._timeScale = 1;\n                    this._active = vars.immediateRender === true;\n                    this.data = vars.data;\n                    this._reversed = vars.reversed === true;\n                    if (!_rootTimeline) {\n                        return;\n                    }\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n                    tl.add(this, tl._time);\n                    if (this.vars.paused) {\n                        this.paused(true);\n                    }\n                });\n                _ticker = Animation.ticker = new gs.Ticker();\n                p = Animation.prototype;\n                p._dirty = p._gc = p._initted = p._paused = false;\n                p._totalTime = p._time = 0;\n                p._rawPrevTime = -1;\n                p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n                p._paused = false;\n                var _checkTimeout = function() {\n                    if (_tickerActive && _getTime() - _lastUpdate > 2e3) {\n                        _ticker.wake();\n                    }\n                    setTimeout(_checkTimeout, 2e3);\n                };\n                _checkTimeout();\n                p.play = function(from, suppressEvents) {\n                    if (from != null) {\n                        this.seek(from, suppressEvents);\n                    }\n                    return this.reversed(false).paused(false);\n                };\n                p.pause = function(atTime, suppressEvents) {\n                    if (atTime != null) {\n                        this.seek(atTime, suppressEvents);\n                    }\n                    return this.paused(true);\n                };\n                p.resume = function(from, suppressEvents) {\n                    if (from != null) {\n                        this.seek(from, suppressEvents);\n                    }\n                    return this.paused(false);\n                };\n                p.seek = function(time, suppressEvents) {\n                    return this.totalTime(Number(time), suppressEvents !== false);\n                };\n                p.restart = function(includeDelay, suppressEvents) {\n                    return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);\n                };\n                p.reverse = function(from, suppressEvents) {\n                    if (from != null) {\n                        this.seek(from || this.totalDuration(), suppressEvents);\n                    }\n                    return this.reversed(true).paused(false);\n                };\n                p.render = function(time, suppressEvents, force) {};\n                p.invalidate = function() {\n                    this._time = this._totalTime = 0;\n                    this._initted = this._gc = false;\n                    this._rawPrevTime = -1;\n                    if (this._gc || !this.timeline) {\n                        this._enabled(true);\n                    }\n                    return this;\n                };\n                p.isActive = function() {\n                    var tl = this._timeline, startTime = this._startTime, rawTime;\n                    return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale;\n                };\n                p._enabled = function(enabled, ignoreTimeline) {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    this._gc = !enabled;\n                    this._active = this.isActive();\n                    if (ignoreTimeline !== true) {\n                        if (enabled && !this.timeline) {\n                            this._timeline.add(this, this._startTime - this._delay);\n                        } else if (!enabled && this.timeline) {\n                            this._timeline._remove(this, true);\n                        }\n                    }\n                    return false;\n                };\n                p._kill = function(vars, target) {\n                    return this._enabled(false, false);\n                };\n                p.kill = function(vars, target) {\n                    this._kill(vars, target);\n                    return this;\n                };\n                p._uncache = function(includeSelf) {\n                    var tween = includeSelf ? this : this.timeline;\n                    while (tween) {\n                        tween._dirty = true;\n                        tween = tween.timeline;\n                    }\n                    return this;\n                };\n                p._swapSelfInParams = function(params) {\n                    var i = params.length, copy = params.concat();\n                    while (--i > -1) {\n                        if (params[i] === \"{self}\") {\n                            copy[i] = this;\n                        }\n                    }\n                    return copy;\n                };\n                p._callback = function(type) {\n                    var v = this.vars;\n                    v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n                };\n                p.eventCallback = function(type, callback, params, scope) {\n                    if ((type || \"\").substr(0, 2) === \"on\") {\n                        var v = this.vars;\n                        if (arguments.length === 1) {\n                            return v[type];\n                        }\n                        if (callback == null) {\n                            delete v[type];\n                        } else {\n                            v[type] = callback;\n                            v[type + \"Params\"] = _isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1 ? this._swapSelfInParams(params) : params;\n                            v[type + \"Scope\"] = scope;\n                        }\n                        if (type === \"onUpdate\") {\n                            this._onUpdate = callback;\n                        }\n                    }\n                    return this;\n                };\n                p.delay = function(value) {\n                    if (!arguments.length) {\n                        return this._delay;\n                    }\n                    if (this._timeline.smoothChildTiming) {\n                        this.startTime(this._startTime + value - this._delay);\n                    }\n                    this._delay = value;\n                    return this;\n                };\n                p.duration = function(value) {\n                    if (!arguments.length) {\n                        this._dirty = false;\n                        return this._duration;\n                    }\n                    this._duration = this._totalDuration = value;\n                    this._uncache(true);\n                    if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n                        this.totalTime(this._totalTime * (value / this._duration), true);\n                    }\n                    return this;\n                };\n                p.totalDuration = function(value) {\n                    this._dirty = false;\n                    return !arguments.length ? this._totalDuration : this.duration(value);\n                };\n                p.time = function(value, suppressEvents) {\n                    if (!arguments.length) {\n                        return this._time;\n                    }\n                    if (this._dirty) {\n                        this.totalDuration();\n                    }\n                    return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);\n                };\n                p.totalTime = function(time, suppressEvents, uncapped) {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    if (!arguments.length) {\n                        return this._totalTime;\n                    }\n                    if (this._timeline) {\n                        if (time < 0 && !uncapped) {\n                            time += this.totalDuration();\n                        }\n                        if (this._timeline.smoothChildTiming) {\n                            if (this._dirty) {\n                                this.totalDuration();\n                            }\n                            var totalDuration = this._totalDuration, tl = this._timeline;\n                            if (time > totalDuration && !uncapped) {\n                                time = totalDuration;\n                            }\n                            this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;\n                            if (!tl._dirty) {\n                                this._uncache(false);\n                            }\n                            if (tl._timeline) {\n                                while (tl._timeline) {\n                                    if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n                                        tl.totalTime(tl._totalTime, true);\n                                    }\n                                    tl = tl._timeline;\n                                }\n                            }\n                        }\n                        if (this._gc) {\n                            this._enabled(true, false);\n                        }\n                        if (this._totalTime !== time || this._duration === 0) {\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            this.render(time, suppressEvents, false);\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                        }\n                    }\n                    return this;\n                };\n                p.progress = p.totalProgress = function(value, suppressEvents) {\n                    var duration = this.duration();\n                    return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);\n                };\n                p.startTime = function(value) {\n                    if (!arguments.length) {\n                        return this._startTime;\n                    }\n                    if (value !== this._startTime) {\n                        this._startTime = value;\n                        if (this.timeline) if (this.timeline._sortChildren) {\n                            this.timeline.add(this, value - this._delay);\n                        }\n                    }\n                    return this;\n                };\n                p.endTime = function(includeRepeats) {\n                    return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;\n                };\n                p.timeScale = function(value) {\n                    if (!arguments.length) {\n                        return this._timeScale;\n                    }\n                    value = value || _tinyNum;\n                    if (this._timeline && this._timeline.smoothChildTiming) {\n                        var pauseTime = this._pauseTime, t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();\n                        this._startTime = t - (t - this._startTime) * this._timeScale / value;\n                    }\n                    this._timeScale = value;\n                    return this._uncache(false);\n                };\n                p.reversed = function(value) {\n                    if (!arguments.length) {\n                        return this._reversed;\n                    }\n                    if (value != this._reversed) {\n                        this._reversed = value;\n                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);\n                    }\n                    return this;\n                };\n                p.paused = function(value) {\n                    if (!arguments.length) {\n                        return this._paused;\n                    }\n                    var tl = this._timeline, raw, elapsed;\n                    if (value != this._paused) if (tl) {\n                        if (!_tickerActive && !value) {\n                            _ticker.wake();\n                        }\n                        raw = tl.rawTime();\n                        elapsed = raw - this._pauseTime;\n                        if (!value && tl.smoothChildTiming) {\n                            this._startTime += elapsed;\n                            this._uncache(false);\n                        }\n                        this._pauseTime = value ? raw : null;\n                        this._paused = value;\n                        this._active = this.isActive();\n                        if (!value && elapsed !== 0 && this._initted && this.duration()) {\n                            raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n                            this.render(raw, raw === this._totalTime, true);\n                        }\n                    }\n                    if (this._gc && !value) {\n                        this._enabled(true, false);\n                    }\n                    return this;\n                };\n                var SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n                    Animation.call(this, 0, vars);\n                    this.autoRemoveChildren = this.smoothChildTiming = true;\n                });\n                p = SimpleTimeline.prototype = new Animation();\n                p.constructor = SimpleTimeline;\n                p.kill()._gc = false;\n                p._first = p._last = p._recent = null;\n                p._sortChildren = false;\n                p.add = p.insert = function(child, position, align, stagger) {\n                    var prevTween, st;\n                    child._startTime = Number(position || 0) + child._delay;\n                    if (child._paused) if (this !== child._timeline) {\n                        child._pauseTime = child._startTime + (this.rawTime() - child._startTime) / child._timeScale;\n                    }\n                    if (child.timeline) {\n                        child.timeline._remove(child, true);\n                    }\n                    child.timeline = child._timeline = this;\n                    if (child._gc) {\n                        child._enabled(true, true);\n                    }\n                    prevTween = this._last;\n                    if (this._sortChildren) {\n                        st = child._startTime;\n                        while (prevTween && prevTween._startTime > st) {\n                            prevTween = prevTween._prev;\n                        }\n                    }\n                    if (prevTween) {\n                        child._next = prevTween._next;\n                        prevTween._next = child;\n                    } else {\n                        child._next = this._first;\n                        this._first = child;\n                    }\n                    if (child._next) {\n                        child._next._prev = child;\n                    } else {\n                        this._last = child;\n                    }\n                    child._prev = prevTween;\n                    this._recent = child;\n                    if (this._timeline) {\n                        this._uncache(true);\n                    }\n                    return this;\n                };\n                p._remove = function(tween, skipDisable) {\n                    if (tween.timeline === this) {\n                        if (!skipDisable) {\n                            tween._enabled(false, true);\n                        }\n                        if (tween._prev) {\n                            tween._prev._next = tween._next;\n                        } else if (this._first === tween) {\n                            this._first = tween._next;\n                        }\n                        if (tween._next) {\n                            tween._next._prev = tween._prev;\n                        } else if (this._last === tween) {\n                            this._last = tween._prev;\n                        }\n                        tween._next = tween._prev = tween.timeline = null;\n                        if (tween === this._recent) {\n                            this._recent = this._last;\n                        }\n                        if (this._timeline) {\n                            this._uncache(true);\n                        }\n                    }\n                    return this;\n                };\n                p.render = function(time, suppressEvents, force) {\n                    var tween = this._first, next;\n                    this._totalTime = this._time = this._rawPrevTime = time;\n                    while (tween) {\n                        next = tween._next;\n                        if (tween._active || time >= tween._startTime && !tween._paused) {\n                            if (!tween._reversed) {\n                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                            } else {\n                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                            }\n                        }\n                        tween = next;\n                    }\n                };\n                p.rawTime = function() {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    return this._totalTime;\n                };\n                var TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n                    Animation.call(this, duration, vars);\n                    this.render = TweenLite.prototype.render;\n                    if (target == null) {\n                        throw \"Cannot tween a null target.\";\n                    }\n                    this.target = target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n                    var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType), overwrite = this.vars.overwrite, i, targ, targets;\n                    this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === \"number\" ? overwrite >> 0 : _overwriteLookup[overwrite];\n                    if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== \"number\") {\n                        this._targets = targets = _slice(target);\n                        this._propLookup = [];\n                        this._siblings = [];\n                        for (i = 0; i < targets.length; i++) {\n                            targ = targets[i];\n                            if (!targ) {\n                                targets.splice(i--, 1);\n                                continue;\n                            } else if (typeof targ === \"string\") {\n                                targ = targets[i--] = TweenLite.selector(targ);\n                                if (typeof targ === \"string\") {\n                                    targets.splice(i + 1, 1);\n                                }\n                                continue;\n                            } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {\n                                targets.splice(i--, 1);\n                                this._targets = targets = targets.concat(_slice(targ));\n                                continue;\n                            }\n                            this._siblings[i] = _register(targ, this, false);\n                            if (overwrite === 1) if (this._siblings[i].length > 1) {\n                                _applyOverwrite(targ, this, null, 1, this._siblings[i]);\n                            }\n                        }\n                    } else {\n                        this._propLookup = {};\n                        this._siblings = _register(target, this, false);\n                        if (overwrite === 1) if (this._siblings.length > 1) {\n                            _applyOverwrite(target, this, null, 1, this._siblings);\n                        }\n                    }\n                    if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {\n                        this._time = -_tinyNum;\n                        this.render(Math.min(0, -this._delay));\n                    }\n                }, true), _isSelector = function(v) {\n                    return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType);\n                }, _autoCSS = function(vars, target) {\n                    var css = {}, p;\n                    for (p in vars) {\n                        if (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {\n                            css[p] = vars[p];\n                            delete vars[p];\n                        }\n                    }\n                    vars.css = css;\n                };\n                p = TweenLite.prototype = new Animation();\n                p.constructor = TweenLite;\n                p.kill()._gc = false;\n                p.ratio = 0;\n                p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n                p._notifyPluginsOfEnabled = p._lazy = false;\n                TweenLite.version = \"1.18.5\";\n                TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n                TweenLite.defaultOverwrite = \"auto\";\n                TweenLite.ticker = _ticker;\n                TweenLite.autoSleep = 120;\n                TweenLite.lagSmoothing = function(threshold, adjustedLag) {\n                    _ticker.lagSmoothing(threshold, adjustedLag);\n                };\n                TweenLite.selector = window.$ || window.jQuery || function(e) {\n                    var selector = window.$ || window.jQuery;\n                    if (selector) {\n                        TweenLite.selector = selector;\n                        return selector(e);\n                    }\n                    return typeof document === \"undefined\" ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(e.charAt(0) === \"#\" ? e.substr(1) : e);\n                };\n                var _lazyTweens = [], _lazyLookup = {}, _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi, _setRatio = function(v) {\n                    var pt = this._firstPT, min = 1e-6, val;\n                    while (pt) {\n                        val = !pt.blob ? pt.c * v + pt.s : v ? this.join(\"\") : this.start;\n                        if (pt.r) {\n                            val = Math.round(val);\n                        } else if (val < min) if (val > -min) {\n                            val = 0;\n                        }\n                        if (!pt.f) {\n                            pt.t[pt.p] = val;\n                        } else if (pt.fp) {\n                            pt.t[pt.p](pt.fp, val);\n                        } else {\n                            pt.t[pt.p](val);\n                        }\n                        pt = pt._next;\n                    }\n                }, _blobDif = function(start, end, filter, pt) {\n                    var a = [ start, end ], charIndex = 0, s = \"\", color = 0, startNums, endNums, num, i, l, nonNumbers, currentNum;\n                    a.start = start;\n                    if (filter) {\n                        filter(a);\n                        start = a[0];\n                        end = a[1];\n                    }\n                    a.length = 0;\n                    startNums = start.match(_numbersExp) || [];\n                    endNums = end.match(_numbersExp) || [];\n                    if (pt) {\n                        pt._next = null;\n                        pt.blob = 1;\n                        a._firstPT = pt;\n                    }\n                    l = endNums.length;\n                    for (i = 0; i < l; i++) {\n                        currentNum = endNums[i];\n                        nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);\n                        s += nonNumbers || !i ? nonNumbers : \",\";\n                        charIndex += nonNumbers.length;\n                        if (color) {\n                            color = (color + 1) % 5;\n                        } else if (nonNumbers.substr(-5) === \"rgba(\") {\n                            color = 1;\n                        }\n                        if (currentNum === startNums[i] || startNums.length <= i) {\n                            s += currentNum;\n                        } else {\n                            if (s) {\n                                a.push(s);\n                                s = \"\";\n                            }\n                            num = parseFloat(startNums[i]);\n                            a.push(num);\n                            a._firstPT = {\n                                _next: a._firstPT,\n                                t: a,\n                                p: a.length - 1,\n                                s: num,\n                                c: (currentNum.charAt(1) === \"=\" ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,\n                                f: 0,\n                                r: color && color < 4\n                            };\n                        }\n                        charIndex += currentNum.length;\n                    }\n                    s += end.substr(charIndex);\n                    if (s) {\n                        a.push(s);\n                    }\n                    a.setRatio = _setRatio;\n                    return a;\n                }, _addPropTween = function(target, prop, start, end, overwriteProp, round, funcParam, stringFilter) {\n                    var s = start === \"get\" ? target[prop] : start, type = typeof target[prop], isRelative = typeof end === \"string\" && end.charAt(1) === \"=\", pt = {\n                        t: target,\n                        p: prop,\n                        s: s,\n                        f: type === \"function\",\n                        pg: 0,\n                        n: overwriteProp || prop,\n                        r: round,\n                        pr: 0,\n                        c: isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0\n                    }, blob, getterName;\n                    if (type !== \"number\") {\n                        if (type === \"function\" && start === \"get\") {\n                            getterName = prop.indexOf(\"set\") || typeof target[\"get\" + prop.substr(3)] !== \"function\" ? prop : \"get\" + prop.substr(3);\n                            pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();\n                        }\n                        if (typeof s === \"string\" && (funcParam || isNaN(s))) {\n                            pt.fp = funcParam;\n                            blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);\n                            pt = {\n                                t: blob,\n                                p: \"setRatio\",\n                                s: 0,\n                                c: 1,\n                                f: 2,\n                                pg: 0,\n                                n: overwriteProp || prop,\n                                pr: 0\n                            };\n                        } else if (!isRelative) {\n                            pt.s = parseFloat(s);\n                            pt.c = parseFloat(end) - pt.s || 0;\n                        }\n                    }\n                    if (pt.c) {\n                        if (pt._next = this._firstPT) {\n                            pt._next._prev = pt;\n                        }\n                        this._firstPT = pt;\n                        return pt;\n                    }\n                }, _internals = TweenLite._internals = {\n                    isArray: _isArray,\n                    isSelector: _isSelector,\n                    lazyTweens: _lazyTweens,\n                    blobDif: _blobDif\n                }, _plugins = TweenLite._plugins = {}, _tweenLookup = _internals.tweenLookup = {}, _tweenLookupNum = 0, _reservedProps = _internals.reservedProps = {\n                    ease: 1,\n                    delay: 1,\n                    overwrite: 1,\n                    onComplete: 1,\n                    onCompleteParams: 1,\n                    onCompleteScope: 1,\n                    useFrames: 1,\n                    runBackwards: 1,\n                    startAt: 1,\n                    onUpdate: 1,\n                    onUpdateParams: 1,\n                    onUpdateScope: 1,\n                    onStart: 1,\n                    onStartParams: 1,\n                    onStartScope: 1,\n                    onReverseComplete: 1,\n                    onReverseCompleteParams: 1,\n                    onReverseCompleteScope: 1,\n                    onRepeat: 1,\n                    onRepeatParams: 1,\n                    onRepeatScope: 1,\n                    easeParams: 1,\n                    yoyo: 1,\n                    immediateRender: 1,\n                    repeat: 1,\n                    repeatDelay: 1,\n                    data: 1,\n                    paused: 1,\n                    reversed: 1,\n                    autoCSS: 1,\n                    lazy: 1,\n                    onOverwrite: 1,\n                    callbackScope: 1,\n                    stringFilter: 1,\n                    id: 1\n                }, _overwriteLookup = {\n                    none: 0,\n                    all: 1,\n                    auto: 2,\n                    concurrent: 3,\n                    allOnStart: 4,\n                    preexisting: 5,\n                    \"true\": 1,\n                    \"false\": 0\n                }, _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(), _rootTimeline = Animation._rootTimeline = new SimpleTimeline(), _nextGCFrame = 30, _lazyRender = _internals.lazyRender = function() {\n                    var i = _lazyTweens.length, tween;\n                    _lazyLookup = {};\n                    while (--i > -1) {\n                        tween = _lazyTweens[i];\n                        if (tween && tween._lazy !== false) {\n                            tween.render(tween._lazy[0], tween._lazy[1], true);\n                            tween._lazy = false;\n                        }\n                    }\n                    _lazyTweens.length = 0;\n                };\n                _rootTimeline._startTime = _ticker.time;\n                _rootFramesTimeline._startTime = _ticker.frame;\n                _rootTimeline._active = _rootFramesTimeline._active = true;\n                setTimeout(_lazyRender, 1);\n                Animation._updateRoot = TweenLite.render = function() {\n                    var i, a, p;\n                    if (_lazyTweens.length) {\n                        _lazyRender();\n                    }\n                    _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n                    _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n                    if (_lazyTweens.length) {\n                        _lazyRender();\n                    }\n                    if (_ticker.frame >= _nextGCFrame) {\n                        _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n                        for (p in _tweenLookup) {\n                            a = _tweenLookup[p].tweens;\n                            i = a.length;\n                            while (--i > -1) {\n                                if (a[i]._gc) {\n                                    a.splice(i, 1);\n                                }\n                            }\n                            if (a.length === 0) {\n                                delete _tweenLookup[p];\n                            }\n                        }\n                        p = _rootTimeline._first;\n                        if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n                            while (p && p._paused) {\n                                p = p._next;\n                            }\n                            if (!p) {\n                                _ticker.sleep();\n                            }\n                        }\n                    }\n                };\n                _ticker.addEventListener(\"tick\", Animation._updateRoot);\n                var _register = function(target, tween, scrub) {\n                    var id = target._gsTweenID, a, i;\n                    if (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + _tweenLookupNum++)]) {\n                        _tweenLookup[id] = {\n                            target: target,\n                            tweens: []\n                        };\n                    }\n                    if (tween) {\n                        a = _tweenLookup[id].tweens;\n                        a[i = a.length] = tween;\n                        if (scrub) {\n                            while (--i > -1) {\n                                if (a[i] === tween) {\n                                    a.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                    return _tweenLookup[id].tweens;\n                }, _onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n                    var func = overwrittenTween.vars.onOverwrite, r1, r2;\n                    if (func) {\n                        r1 = func(overwrittenTween, overwritingTween, target, killedProps);\n                    }\n                    func = TweenLite.onOverwrite;\n                    if (func) {\n                        r2 = func(overwrittenTween, overwritingTween, target, killedProps);\n                    }\n                    return r1 !== false && r2 !== false;\n                }, _applyOverwrite = function(target, tween, props, mode, siblings) {\n                    var i, changed, curTween, l;\n                    if (mode === 1 || mode >= 4) {\n                        l = siblings.length;\n                        for (i = 0; i < l; i++) {\n                            if ((curTween = siblings[i]) !== tween) {\n                                if (!curTween._gc) {\n                                    if (curTween._kill(null, target, tween)) {\n                                        changed = true;\n                                    }\n                                }\n                            } else if (mode === 5) {\n                                break;\n                            }\n                        }\n                        return changed;\n                    }\n                    var startTime = tween._startTime + _tinyNum, overlaps = [], oCount = 0, zeroDur = tween._duration === 0, globalStart;\n                    i = siblings.length;\n                    while (--i > -1) {\n                        if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {} else if (curTween._timeline !== tween._timeline) {\n                            globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n                            if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n                                overlaps[oCount++] = curTween;\n                            }\n                        } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 2e-10)) {\n                            overlaps[oCount++] = curTween;\n                        }\n                    }\n                    i = oCount;\n                    while (--i > -1) {\n                        curTween = overlaps[i];\n                        if (mode === 2) if (curTween._kill(props, target, tween)) {\n                            changed = true;\n                        }\n                        if (mode !== 2 || !curTween._firstPT && curTween._initted) {\n                            if (mode !== 2 && !_onOverwrite(curTween, tween)) {\n                                continue;\n                            }\n                            if (curTween._enabled(false, false)) {\n                                changed = true;\n                            }\n                        }\n                    }\n                    return changed;\n                }, _checkOverlap = function(tween, reference, zeroDur) {\n                    var tl = tween._timeline, ts = tl._timeScale, t = tween._startTime;\n                    while (tl._timeline) {\n                        t += tl._startTime;\n                        ts *= tl._timeScale;\n                        if (tl._paused) {\n                            return -100;\n                        }\n                        tl = tl._timeline;\n                    }\n                    t /= ts;\n                    return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;\n                };\n                p._init = function() {\n                    var v = this.vars, op = this._overwrittenProps, dur = this._duration, immediate = !!v.immediateRender, ease = v.ease, i, initPlugins, pt, p, startVars;\n                    if (v.startAt) {\n                        if (this._startAt) {\n                            this._startAt.render(-1, true);\n                            this._startAt.kill();\n                        }\n                        startVars = {};\n                        for (p in v.startAt) {\n                            startVars[p] = v.startAt[p];\n                        }\n                        startVars.overwrite = false;\n                        startVars.immediateRender = true;\n                        startVars.lazy = immediate && v.lazy !== false;\n                        startVars.startAt = startVars.delay = null;\n                        this._startAt = TweenLite.to(this.target, 0, startVars);\n                        if (immediate) {\n                            if (this._time > 0) {\n                                this._startAt = null;\n                            } else if (dur !== 0) {\n                                return;\n                            }\n                        }\n                    } else if (v.runBackwards && dur !== 0) {\n                        if (this._startAt) {\n                            this._startAt.render(-1, true);\n                            this._startAt.kill();\n                            this._startAt = null;\n                        } else {\n                            if (this._time !== 0) {\n                                immediate = false;\n                            }\n                            pt = {};\n                            for (p in v) {\n                                if (!_reservedProps[p] || p === \"autoCSS\") {\n                                    pt[p] = v[p];\n                                }\n                            }\n                            pt.overwrite = 0;\n                            pt.data = \"isFromStart\";\n                            pt.lazy = immediate && v.lazy !== false;\n                            pt.immediateRender = immediate;\n                            this._startAt = TweenLite.to(this.target, 0, pt);\n                            if (!immediate) {\n                                this._startAt._init();\n                                this._startAt._enabled(false);\n                                if (this.vars.immediateRender) {\n                                    this._startAt = null;\n                                }\n                            } else if (this._time === 0) {\n                                return;\n                            }\n                        }\n                    }\n                    this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === \"function\" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n                    if (v.easeParams instanceof Array && ease.config) {\n                        this._ease = ease.config.apply(ease, v.easeParams);\n                    }\n                    this._easeType = this._ease._type;\n                    this._easePower = this._ease._power;\n                    this._firstPT = null;\n                    if (this._targets) {\n                        i = this._targets.length;\n                        while (--i > -1) {\n                            if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null)) {\n                                initPlugins = true;\n                            }\n                        }\n                    } else {\n                        initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n                    }\n                    if (initPlugins) {\n                        TweenLite._onPluginEvent(\"_onInitAllProps\", this);\n                    }\n                    if (op) if (!this._firstPT) if (typeof this.target !== \"function\") {\n                        this._enabled(false, false);\n                    }\n                    if (v.runBackwards) {\n                        pt = this._firstPT;\n                        while (pt) {\n                            pt.s += pt.c;\n                            pt.c = -pt.c;\n                            pt = pt._next;\n                        }\n                    }\n                    this._onUpdate = v.onUpdate;\n                    this._initted = true;\n                };\n                p._initProps = function(target, propLookup, siblings, overwrittenProps) {\n                    var p, i, initPlugins, plugin, pt, v;\n                    if (target == null) {\n                        return false;\n                    }\n                    if (_lazyLookup[target._gsTweenID]) {\n                        _lazyRender();\n                    }\n                    if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {\n                        _autoCSS(this.vars, target);\n                    }\n                    for (p in this.vars) {\n                        v = this.vars[p];\n                        if (_reservedProps[p]) {\n                            if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n                                this.vars[p] = v = this._swapSelfInParams(v, this);\n                            }\n                        } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n                            this._firstPT = pt = {\n                                _next: this._firstPT,\n                                t: plugin,\n                                p: \"setRatio\",\n                                s: 0,\n                                c: 1,\n                                f: 1,\n                                n: p,\n                                pg: 1,\n                                pr: plugin._priority\n                            };\n                            i = plugin._overwriteProps.length;\n                            while (--i > -1) {\n                                propLookup[plugin._overwriteProps[i]] = this._firstPT;\n                            }\n                            if (plugin._priority || plugin._onInitAllProps) {\n                                initPlugins = true;\n                            }\n                            if (plugin._onDisable || plugin._onEnable) {\n                                this._notifyPluginsOfEnabled = true;\n                            }\n                            if (pt._next) {\n                                pt._next._prev = pt;\n                            }\n                        } else {\n                            propLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter);\n                        }\n                    }\n                    if (overwrittenProps) if (this._kill(overwrittenProps, target)) {\n                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n                    }\n                    if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n                        this._kill(propLookup, target);\n                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n                    }\n                    if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {\n                        _lazyLookup[target._gsTweenID] = true;\n                    }\n                    return initPlugins;\n                };\n                p.render = function(time, suppressEvents, force) {\n                    var prevTime = this._time, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, rawPrevTime;\n                    if (time >= duration - 1e-7) {\n                        this._totalTime = this._time = duration;\n                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n                        if (!this._reversed) {\n                            isComplete = true;\n                            callback = \"onComplete\";\n                            force = force || this._timeline.autoRemoveChildren;\n                        }\n                        if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                            if (this._startTime === this._timeline._duration) {\n                                time = 0;\n                            }\n                            if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n                                force = true;\n                                if (prevRawPrevTime > _tinyNum) {\n                                    callback = \"onReverseComplete\";\n                                }\n                            }\n                            this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                        }\n                    } else if (time < 1e-7) {\n                        this._totalTime = this._time = 0;\n                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                        if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n                            callback = \"onReverseComplete\";\n                            isComplete = this._reversed;\n                        }\n                        if (time < 0) {\n                            this._active = false;\n                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n                                    force = true;\n                                }\n                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                            }\n                        }\n                        if (!this._initted) {\n                            force = true;\n                        }\n                    } else {\n                        this._totalTime = this._time = time;\n                        if (this._easeType) {\n                            var r = time / duration, type = this._easeType, pow = this._easePower;\n                            if (type === 1 || type === 3 && r >= .5) {\n                                r = 1 - r;\n                            }\n                            if (type === 3) {\n                                r *= 2;\n                            }\n                            if (pow === 1) {\n                                r *= r;\n                            } else if (pow === 2) {\n                                r *= r * r;\n                            } else if (pow === 3) {\n                                r *= r * r * r;\n                            } else if (pow === 4) {\n                                r *= r * r * r * r;\n                            }\n                            if (type === 1) {\n                                this.ratio = 1 - r;\n                            } else if (type === 2) {\n                                this.ratio = r;\n                            } else if (time / duration < .5) {\n                                this.ratio = r / 2;\n                            } else {\n                                this.ratio = 1 - r / 2;\n                            }\n                        } else {\n                            this.ratio = this._ease.getRatio(time / duration);\n                        }\n                    }\n                    if (this._time === prevTime && !force) {\n                        return;\n                    } else if (!this._initted) {\n                        this._init();\n                        if (!this._initted || this._gc) {\n                            return;\n                        } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n                            this._time = this._totalTime = prevTime;\n                            this._rawPrevTime = prevRawPrevTime;\n                            _lazyTweens.push(this);\n                            this._lazy = [ time, suppressEvents ];\n                            return;\n                        }\n                        if (this._time && !isComplete) {\n                            this.ratio = this._ease.getRatio(this._time / duration);\n                        } else if (isComplete && this._ease._calcEnd) {\n                            this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n                        }\n                    }\n                    if (this._lazy !== false) {\n                        this._lazy = false;\n                    }\n                    if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n                        this._active = true;\n                    }\n                    if (prevTime === 0) {\n                        if (this._startAt) {\n                            if (time >= 0) {\n                                this._startAt.render(time, suppressEvents, force);\n                            } else if (!callback) {\n                                callback = \"_dummyGS\";\n                            }\n                        }\n                        if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n                            this._callback(\"onStart\");\n                        }\n                    }\n                    pt = this._firstPT;\n                    while (pt) {\n                        if (pt.f) {\n                            pt.t[pt.p](pt.c * this.ratio + pt.s);\n                        } else {\n                            pt.t[pt.p] = pt.c * this.ratio + pt.s;\n                        }\n                        pt = pt._next;\n                    }\n                    if (this._onUpdate) {\n                        if (time < 0) if (this._startAt && time !== -1e-4) {\n                            this._startAt.render(time, suppressEvents, force);\n                        }\n                        if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n                            this._callback(\"onUpdate\");\n                        }\n                    }\n                    if (callback) if (!this._gc || force) {\n                        if (time < 0 && this._startAt && !this._onUpdate && time !== -1e-4) {\n                            this._startAt.render(time, suppressEvents, force);\n                        }\n                        if (isComplete) {\n                            if (this._timeline.autoRemoveChildren) {\n                                this._enabled(false, false);\n                            }\n                            this._active = false;\n                        }\n                        if (!suppressEvents && this.vars[callback]) {\n                            this._callback(callback);\n                        }\n                        if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n                            this._rawPrevTime = 0;\n                        }\n                    }\n                };\n                p._kill = function(vars, target, overwritingTween) {\n                    if (vars === \"all\") {\n                        vars = null;\n                    }\n                    if (vars == null) if (target == null || target === this.target) {\n                        this._lazy = false;\n                        return this._enabled(false, false);\n                    }\n                    target = typeof target !== \"string\" ? target || this._targets || this.target : TweenLite.selector(target) || target;\n                    var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline, i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n                        i = target.length;\n                        while (--i > -1) {\n                            if (this._kill(vars, target[i], overwritingTween)) {\n                                changed = true;\n                            }\n                        }\n                    } else {\n                        if (this._targets) {\n                            i = this._targets.length;\n                            while (--i > -1) {\n                                if (target === this._targets[i]) {\n                                    propLookup = this._propLookup[i] || {};\n                                    this._overwrittenProps = this._overwrittenProps || [];\n                                    overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n                                    break;\n                                }\n                            }\n                        } else if (target !== this.target) {\n                            return false;\n                        } else {\n                            propLookup = this._propLookup;\n                            overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n                        }\n                        if (propLookup) {\n                            killProps = vars || propLookup;\n                            record = vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof vars !== \"object\" || !vars._tempKill);\n                            if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n                                for (p in killProps) {\n                                    if (propLookup[p]) {\n                                        if (!killed) {\n                                            killed = [];\n                                        }\n                                        killed.push(p);\n                                    }\n                                }\n                                if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {\n                                    return false;\n                                }\n                            }\n                            for (p in killProps) {\n                                if (pt = propLookup[p]) {\n                                    if (simultaneousOverwrite) {\n                                        if (pt.f) {\n                                            pt.t[pt.p](pt.s);\n                                        } else {\n                                            pt.t[pt.p] = pt.s;\n                                        }\n                                        changed = true;\n                                    }\n                                    if (pt.pg && pt.t._kill(killProps)) {\n                                        changed = true;\n                                    }\n                                    if (!pt.pg || pt.t._overwriteProps.length === 0) {\n                                        if (pt._prev) {\n                                            pt._prev._next = pt._next;\n                                        } else if (pt === this._firstPT) {\n                                            this._firstPT = pt._next;\n                                        }\n                                        if (pt._next) {\n                                            pt._next._prev = pt._prev;\n                                        }\n                                        pt._next = pt._prev = null;\n                                    }\n                                    delete propLookup[p];\n                                }\n                                if (record) {\n                                    overwrittenProps[p] = 1;\n                                }\n                            }\n                            if (!this._firstPT && this._initted) {\n                                this._enabled(false, false);\n                            }\n                        }\n                    }\n                    return changed;\n                };\n                p.invalidate = function() {\n                    if (this._notifyPluginsOfEnabled) {\n                        TweenLite._onPluginEvent(\"_onDisable\", this);\n                    }\n                    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n                    this._notifyPluginsOfEnabled = this._active = this._lazy = false;\n                    this._propLookup = this._targets ? {} : [];\n                    Animation.prototype.invalidate.call(this);\n                    if (this.vars.immediateRender) {\n                        this._time = -_tinyNum;\n                        this.render(Math.min(0, -this._delay));\n                    }\n                    return this;\n                };\n                p._enabled = function(enabled, ignoreTimeline) {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    if (enabled && this._gc) {\n                        var targets = this._targets, i;\n                        if (targets) {\n                            i = targets.length;\n                            while (--i > -1) {\n                                this._siblings[i] = _register(targets[i], this, true);\n                            }\n                        } else {\n                            this._siblings = _register(this.target, this, true);\n                        }\n                    }\n                    Animation.prototype._enabled.call(this, enabled, ignoreTimeline);\n                    if (this._notifyPluginsOfEnabled) if (this._firstPT) {\n                        return TweenLite._onPluginEvent(enabled ? \"_onEnable\" : \"_onDisable\", this);\n                    }\n                    return false;\n                };\n                TweenLite.to = function(target, duration, vars) {\n                    return new TweenLite(target, duration, vars);\n                };\n                TweenLite.from = function(target, duration, vars) {\n                    vars.runBackwards = true;\n                    vars.immediateRender = vars.immediateRender != false;\n                    return new TweenLite(target, duration, vars);\n                };\n                TweenLite.fromTo = function(target, duration, fromVars, toVars) {\n                    toVars.startAt = fromVars;\n                    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                    return new TweenLite(target, duration, toVars);\n                };\n                TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n                    return new TweenLite(callback, 0, {\n                        delay: delay,\n                        onComplete: callback,\n                        onCompleteParams: params,\n                        callbackScope: scope,\n                        onReverseComplete: callback,\n                        onReverseCompleteParams: params,\n                        immediateRender: false,\n                        lazy: false,\n                        useFrames: useFrames,\n                        overwrite: 0\n                    });\n                };\n                TweenLite.set = function(target, vars) {\n                    return new TweenLite(target, 0, vars);\n                };\n                TweenLite.getTweensOf = function(target, onlyActive) {\n                    if (target == null) {\n                        return [];\n                    }\n                    target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n                    var i, a, j, t;\n                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n                        i = target.length;\n                        a = [];\n                        while (--i > -1) {\n                            a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n                        }\n                        i = a.length;\n                        while (--i > -1) {\n                            t = a[i];\n                            j = i;\n                            while (--j > -1) {\n                                if (t === a[j]) {\n                                    a.splice(i, 1);\n                                }\n                            }\n                        }\n                    } else {\n                        a = _register(target).concat();\n                        i = a.length;\n                        while (--i > -1) {\n                            if (a[i]._gc || onlyActive && !a[i].isActive()) {\n                                a.splice(i, 1);\n                            }\n                        }\n                    }\n                    return a;\n                };\n                TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n                    if (typeof onlyActive === \"object\") {\n                        vars = onlyActive;\n                        onlyActive = false;\n                    }\n                    var a = TweenLite.getTweensOf(target, onlyActive), i = a.length;\n                    while (--i > -1) {\n                        a[i]._kill(vars, target);\n                    }\n                };\n                var TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n                    this._overwriteProps = (props || \"\").split(\",\");\n                    this._propName = this._overwriteProps[0];\n                    this._priority = priority || 0;\n                    this._super = TweenPlugin.prototype;\n                }, true);\n                p = TweenPlugin.prototype;\n                TweenPlugin.version = \"1.18.0\";\n                TweenPlugin.API = 2;\n                p._firstPT = null;\n                p._addTween = _addPropTween;\n                p.setRatio = _setRatio;\n                p._kill = function(lookup) {\n                    var a = this._overwriteProps, pt = this._firstPT, i;\n                    if (lookup[this._propName] != null) {\n                        this._overwriteProps = [];\n                    } else {\n                        i = a.length;\n                        while (--i > -1) {\n                            if (lookup[a[i]] != null) {\n                                a.splice(i, 1);\n                            }\n                        }\n                    }\n                    while (pt) {\n                        if (lookup[pt.n] != null) {\n                            if (pt._next) {\n                                pt._next._prev = pt._prev;\n                            }\n                            if (pt._prev) {\n                                pt._prev._next = pt._next;\n                                pt._prev = null;\n                            } else if (this._firstPT === pt) {\n                                this._firstPT = pt._next;\n                            }\n                        }\n                        pt = pt._next;\n                    }\n                    return false;\n                };\n                p._roundProps = function(lookup, value) {\n                    var pt = this._firstPT;\n                    while (pt) {\n                        if (lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + \"_\").join(\"\")]) {\n                            pt.r = value;\n                        }\n                        pt = pt._next;\n                    }\n                };\n                TweenLite._onPluginEvent = function(type, tween) {\n                    var pt = tween._firstPT, changed, pt2, first, last, next;\n                    if (type === \"_onInitAllProps\") {\n                        while (pt) {\n                            next = pt._next;\n                            pt2 = first;\n                            while (pt2 && pt2.pr > pt.pr) {\n                                pt2 = pt2._next;\n                            }\n                            if (pt._prev = pt2 ? pt2._prev : last) {\n                                pt._prev._next = pt;\n                            } else {\n                                first = pt;\n                            }\n                            if (pt._next = pt2) {\n                                pt2._prev = pt;\n                            } else {\n                                last = pt;\n                            }\n                            pt = next;\n                        }\n                        pt = tween._firstPT = first;\n                    }\n                    while (pt) {\n                        if (pt.pg) if (typeof pt.t[type] === \"function\") if (pt.t[type]()) {\n                            changed = true;\n                        }\n                        pt = pt._next;\n                    }\n                    return changed;\n                };\n                TweenPlugin.activate = function(plugins) {\n                    var i = plugins.length;\n                    while (--i > -1) {\n                        if (plugins[i].API === TweenPlugin.API) {\n                            _plugins[new plugins[i]()._propName] = plugins[i];\n                        }\n                    }\n                    return true;\n                };\n                _gsDefine.plugin = function(config) {\n                    if (!config || !config.propName || !config.init || !config.API) {\n                        throw \"illegal plugin definition.\";\n                    }\n                    var propName = config.propName, priority = config.priority || 0, overwriteProps = config.overwriteProps, map = {\n                        init: \"_onInitTween\",\n                        set: \"setRatio\",\n                        kill: \"_kill\",\n                        round: \"_roundProps\",\n                        initAll: \"_onInitAllProps\"\n                    }, Plugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\", function() {\n                        TweenPlugin.call(this, propName, priority);\n                        this._overwriteProps = overwriteProps || [];\n                    }, config.global === true), p = Plugin.prototype = new TweenPlugin(propName), prop;\n                    p.constructor = Plugin;\n                    Plugin.API = config.API;\n                    for (prop in map) {\n                        if (typeof config[prop] === \"function\") {\n                            p[map[prop]] = config[prop];\n                        }\n                    }\n                    Plugin.version = config.version;\n                    TweenPlugin.activate([ Plugin ]);\n                    return Plugin;\n                };\n                a = window._gsQueue;\n                if (a) {\n                    for (i = 0; i < a.length; i++) {\n                        a[i]();\n                    }\n                    for (p in _defLookup) {\n                        if (!_defLookup[p].func) {\n                            window.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n                        }\n                    }\n                }\n                _tickerActive = false;\n            })(typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window, \"TweenMax\");\n        }).call(exports, function() {\n            return this;\n        }());\n    }, function(module, exports) {\n        (function(__webpack_amd_options__) {\n            module.exports = __webpack_amd_options__;\n        }).call(exports, {});\n    }, function(module, exports) {\n        THREE.SpriteCanvasMaterial = function(parameters) {\n            THREE.Material.call(this);\n            this.type = \"SpriteCanvasMaterial\";\n            this.color = new THREE.Color(16777215);\n            this.program = function(context, color) {};\n            this.setValues(parameters);\n        };\n        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n            var material = new THREE.SpriteCanvasMaterial();\n            material.copy(this);\n            material.color.copy(this.color);\n            material.program = this.program;\n            return material;\n        };\n        THREE.CanvasRenderer = function(parameters) {\n            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n            parameters = parameters || {};\n            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n                alpha: parameters.alpha === true\n            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n            if (_context.setLineDash === undefined) {\n                _context.setLineDash = function() {};\n            }\n            this.domElement = _canvas;\n            this.autoClear = true;\n            this.sortObjects = true;\n            this.sortElements = true;\n            this.info = {\n                render: {\n                    vertices: 0,\n                    faces: 0\n                }\n            };\n            this.supportsVertexTextures = function() {};\n            this.setFaceCulling = function() {};\n            this.getContext = function() {\n                return _context;\n            };\n            this.getContextAttributes = function() {\n                return _context.getContextAttributes();\n            };\n            this.getPixelRatio = function() {\n                return _pixelRatio;\n            };\n            this.setPixelRatio = function(value) {\n                if (value !== undefined) _pixelRatio = value;\n            };\n            this.setSize = function(width, height, updateStyle) {\n                _canvasWidth = width * _pixelRatio;\n                _canvasHeight = height * _pixelRatio;\n                _canvas.width = _canvasWidth;\n                _canvas.height = _canvasHeight;\n                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n                if (updateStyle !== false) {\n                    _canvas.style.width = width + \"px\";\n                    _canvas.style.height = height + \"px\";\n                }\n                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _contextGlobalAlpha = 1;\n                _contextGlobalCompositeOperation = 0;\n                _contextStrokeStyle = null;\n                _contextFillStyle = null;\n                _contextLineWidth = null;\n                _contextLineCap = null;\n                _contextLineJoin = null;\n                this.setViewport(0, 0, width, height);\n            };\n            this.setViewport = function(x, y, width, height) {\n                _viewportX = x * _pixelRatio;\n                _viewportY = y * _pixelRatio;\n                _viewportWidth = width * _pixelRatio;\n                _viewportHeight = height * _pixelRatio;\n            };\n            this.setScissor = function() {};\n            this.setScissorTest = function() {};\n            this.setClearColor = function(color, alpha) {\n                _clearColor.set(color);\n                _clearAlpha = alpha !== undefined ? alpha : 1;\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n            };\n            this.setClearColorHex = function(hex, alpha) {\n                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n                this.setClearColor(hex, alpha);\n            };\n            this.getClearColor = function() {\n                return _clearColor;\n            };\n            this.getClearAlpha = function() {\n                return _clearAlpha;\n            };\n            this.getMaxAnisotropy = function() {\n                return 0;\n            };\n            this.clear = function() {\n                if (_clearBox.isEmpty() === false) {\n                    _clearBox.intersect(_clipBox);\n                    _clearBox.expandByScalar(2);\n                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n                    if (_clearAlpha < 1) {\n                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    if (_clearAlpha > 0) {\n                        setBlending(THREE.NormalBlending);\n                        setOpacity(1);\n                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    _clearBox.makeEmpty();\n                }\n            };\n            this.clearColor = function() {};\n            this.clearDepth = function() {};\n            this.clearStencil = function() {};\n            this.render = function(scene, camera) {\n                if (camera instanceof THREE.Camera === false) {\n                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n                    return;\n                }\n                if (this.autoClear === true) this.clear();\n                _this.info.render.vertices = 0;\n                _this.info.render.faces = 0;\n                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n                _elements = _renderData.elements;\n                _lights = _renderData.lights;\n                _camera = camera;\n                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n                calculateLights();\n                for (var e = 0, el = _elements.length; e < el; e++) {\n                    var element = _elements[e];\n                    var material = element.material;\n                    if (material === undefined || material.opacity === 0) continue;\n                    _elemBox.makeEmpty();\n                    if (element instanceof THREE.RenderableSprite) {\n                        _v1 = element;\n                        _v1.x *= _canvasWidthHalf;\n                        _v1.y *= _canvasHeightHalf;\n                        renderSprite(_v1, element, material);\n                    } else if (element instanceof THREE.RenderableLine) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderLine(_v1, _v2, element, material);\n                        }\n                    } else if (element instanceof THREE.RenderableFace) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v3 = element.v3;\n                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _v3.positionScreen.x *= _canvasWidthHalf;\n                        _v3.positionScreen.y *= _canvasHeightHalf;\n                        if (material.overdraw > 0) {\n                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n                        }\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n                        }\n                    }\n                    _clearBox.union(_elemBox);\n                }\n                _context.setTransform(1, 0, 0, 1, 0, 0);\n            };\n            function calculateLights() {\n                _ambientLight.setRGB(0, 0, 0);\n                _directionalLights.setRGB(0, 0, 0);\n                _pointLights.setRGB(0, 0, 0);\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    var lightColor = light.color;\n                    if (light instanceof THREE.AmbientLight) {\n                        _ambientLight.add(lightColor);\n                    } else if (light instanceof THREE.DirectionalLight) {\n                        _directionalLights.add(lightColor);\n                    } else if (light instanceof THREE.PointLight) {\n                        _pointLights.add(lightColor);\n                    }\n                }\n            }\n            function calculateLight(position, normal, color) {\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    _lightColor.copy(light.color);\n                    if (light instanceof THREE.DirectionalLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n                        var amount = normal.dot(lightPosition);\n                        if (amount <= 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    } else if (light instanceof THREE.PointLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n                        if (amount <= 0) continue;\n                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n                        if (amount == 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    }\n                }\n            }\n            function renderSprite(v1, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                var scaleX = element.scale.x * _canvasWidthHalf;\n                var scaleY = element.scale.y * _canvasHeightHalf;\n                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n                _elemBox.min.set(v1.x - dist, v1.y - dist);\n                _elemBox.max.set(v1.x + dist, v1.y + dist);\n                if (material instanceof THREE.SpriteMaterial) {\n                    var texture = material.map;\n                    if (texture !== null) {\n                        var pattern = _patterns[texture.id];\n                        if (pattern === undefined || pattern.version !== texture.version) {\n                            pattern = textureToPattern(texture);\n                            _patterns[texture.id] = pattern;\n                        }\n                        if (pattern.canvas !== undefined) {\n                            setFillStyle(pattern.canvas);\n                            var bitmap = texture.image;\n                            var ox = bitmap.width * texture.offset.x;\n                            var oy = bitmap.height * texture.offset.y;\n                            var sx = bitmap.width * texture.repeat.x;\n                            var sy = bitmap.height * texture.repeat.y;\n                            var cx = scaleX / sx;\n                            var cy = scaleY / sy;\n                            _context.save();\n                            _context.translate(v1.x, v1.y);\n                            if (material.rotation !== 0) _context.rotate(material.rotation);\n                            _context.translate(-scaleX / 2, -scaleY / 2);\n                            _context.scale(cx, cy);\n                            _context.translate(-ox, -oy);\n                            _context.fillRect(ox, oy, sx, sy);\n                            _context.restore();\n                        }\n                    } else {\n                        setFillStyle(material.color.getStyle());\n                        _context.save();\n                        _context.translate(v1.x, v1.y);\n                        if (material.rotation !== 0) _context.rotate(material.rotation);\n                        _context.scale(scaleX, -scaleY);\n                        _context.fillRect(-.5, -.5, 1, 1);\n                        _context.restore();\n                    }\n                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n                    setStrokeStyle(material.color.getStyle());\n                    setFillStyle(material.color.getStyle());\n                    _context.save();\n                    _context.translate(v1.x, v1.y);\n                    if (material.rotation !== 0) _context.rotate(material.rotation);\n                    _context.scale(scaleX, scaleY);\n                    material.program(_context);\n                    _context.restore();\n                }\n            }\n            function renderLine(v1, v2, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _context.beginPath();\n                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n                if (material instanceof THREE.LineBasicMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    if (material.vertexColors !== THREE.VertexColors) {\n                        setStrokeStyle(material.color.getStyle());\n                    } else {\n                        var colorStyle1 = element.vertexColors[0].getStyle();\n                        var colorStyle2 = element.vertexColors[1].getStyle();\n                        if (colorStyle1 === colorStyle2) {\n                            setStrokeStyle(colorStyle1);\n                        } else {\n                            try {\n                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n                                grad.addColorStop(0, colorStyle1);\n                                grad.addColorStop(1, colorStyle2);\n                            } catch (exception) {\n                                grad = colorStyle1;\n                            }\n                            setStrokeStyle(grad);\n                        }\n                    }\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                } else if (material instanceof THREE.LineDashedMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    setStrokeStyle(material.color.getStyle());\n                    setLineDash([ material.dashSize, material.gapSize ]);\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                    setLineDash([]);\n                }\n            }\n            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n                _this.info.render.vertices += 3;\n                _this.info.render.faces++;\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _v1x = v1.positionScreen.x;\n                _v1y = v1.positionScreen.y;\n                _v2x = v2.positionScreen.x;\n                _v2y = v2.positionScreen.y;\n                _v3x = v3.positionScreen.x;\n                _v3y = v3.positionScreen.y;\n                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n                    _diffuseColor.copy(material.color);\n                    _emissiveColor.copy(material.emissive);\n                    if (material.vertexColors === THREE.FaceColors) {\n                        _diffuseColor.multiply(element.color);\n                    }\n                    _color.copy(_ambientLight);\n                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n                    calculateLight(_centroid, element.normalModel, _color);\n                    _color.multiply(_diffuseColor).add(_emissiveColor);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n                    if (material.map !== null) {\n                        var mapping = material.map.mapping;\n                        if (mapping === THREE.UVMapping) {\n                            _uvs = element.uvs;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n                        }\n                    } else if (material.envMap !== null) {\n                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n                            _uv1x = .5 * _normal.x + .5;\n                            _uv1y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n                            _uv2x = .5 * _normal.x + .5;\n                            _uv2y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n                            _uv3x = .5 * _normal.x + .5;\n                            _uv3y = .5 * _normal.y + .5;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n                        }\n                    } else {\n                        _color.copy(material.color);\n                        if (material.vertexColors === THREE.FaceColors) {\n                            _color.multiply(element.color);\n                        }\n                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                    }\n                } else if (material instanceof THREE.MeshNormalMaterial) {\n                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else {\n                    _color.setRGB(1, 1, 1);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                }\n            }\n            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n                _context.beginPath();\n                _context.moveTo(x0, y0);\n                _context.lineTo(x1, y1);\n                _context.lineTo(x2, y2);\n                _context.closePath();\n            }\n            function strokePath(color, linewidth, linecap, linejoin) {\n                setLineWidth(linewidth);\n                setLineCap(linecap);\n                setLineJoin(linejoin);\n                setStrokeStyle(color.getStyle());\n                _context.stroke();\n                _elemBox.expandByScalar(linewidth * 2);\n            }\n            function fillPath(color) {\n                setFillStyle(color.getStyle());\n                _context.fill();\n            }\n            function textureToPattern(texture) {\n                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n                    return {\n                        canvas: undefined,\n                        version: texture.version\n                    };\n                }\n                var image = texture.image;\n                if (image.complete === false) {\n                    return {\n                        canvas: undefined,\n                        version: 0\n                    };\n                }\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                var context = canvas.getContext(\"2d\");\n                context.setTransform(1, 0, 0, -1, 0, image.height);\n                context.drawImage(image, 0, 0);\n                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n                var repeat = \"no-repeat\";\n                if (repeatX === true && repeatY === true) {\n                    repeat = \"repeat\";\n                } else if (repeatX === true) {\n                    repeat = \"repeat-x\";\n                } else if (repeatY === true) {\n                    repeat = \"repeat-y\";\n                }\n                var pattern = _context.createPattern(canvas, repeat);\n                if (texture.onUpdate) texture.onUpdate(texture);\n                return {\n                    canvas: pattern,\n                    version: texture.version\n                };\n            }\n            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n                var pattern = _patterns[texture.id];\n                if (pattern === undefined || pattern.version !== texture.version) {\n                    pattern = textureToPattern(texture);\n                    _patterns[texture.id] = pattern;\n                }\n                if (pattern.canvas !== undefined) {\n                    setFillStyle(pattern.canvas);\n                } else {\n                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n                    _context.fill();\n                    return;\n                }\n                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n                u0 = (u0 + offsetX) * width;\n                v0 = (v0 + offsetY) * height;\n                u1 = (u1 + offsetX) * width;\n                v1 = (v1 + offsetY) * height;\n                u2 = (u2 + offsetX) * width;\n                v2 = (v2 + offsetY) * height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                if (det === 0) return;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.fill();\n                _context.restore();\n            }\n            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n                u0 *= width;\n                v0 *= height;\n                u1 *= width;\n                v1 *= height;\n                u2 *= width;\n                v2 *= height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.clip();\n                _context.drawImage(image, 0, 0);\n                _context.restore();\n            }\n            function expand(v1, v2, pixels) {\n                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n                if (det === 0) return;\n                idet = pixels / Math.sqrt(det);\n                x *= idet;\n                y *= idet;\n                v2.x += x;\n                v2.y += y;\n                v1.x -= x;\n                v1.y -= y;\n            }\n            function setOpacity(value) {\n                if (_contextGlobalAlpha !== value) {\n                    _context.globalAlpha = value;\n                    _contextGlobalAlpha = value;\n                }\n            }\n            function setBlending(value) {\n                if (_contextGlobalCompositeOperation !== value) {\n                    if (value === THREE.NormalBlending) {\n                        _context.globalCompositeOperation = \"source-over\";\n                    } else if (value === THREE.AdditiveBlending) {\n                        _context.globalCompositeOperation = \"lighter\";\n                    } else if (value === THREE.SubtractiveBlending) {\n                        _context.globalCompositeOperation = \"darker\";\n                    }\n                    _contextGlobalCompositeOperation = value;\n                }\n            }\n            function setLineWidth(value) {\n                if (_contextLineWidth !== value) {\n                    _context.lineWidth = value;\n                    _contextLineWidth = value;\n                }\n            }\n            function setLineCap(value) {\n                if (_contextLineCap !== value) {\n                    _context.lineCap = value;\n                    _contextLineCap = value;\n                }\n            }\n            function setLineJoin(value) {\n                if (_contextLineJoin !== value) {\n                    _context.lineJoin = value;\n                    _contextLineJoin = value;\n                }\n            }\n            function setStrokeStyle(value) {\n                if (_contextStrokeStyle !== value) {\n                    _context.strokeStyle = value;\n                    _contextStrokeStyle = value;\n                }\n            }\n            function setFillStyle(value) {\n                if (_contextFillStyle !== value) {\n                    _context.fillStyle = value;\n                    _contextFillStyle = value;\n                }\n            }\n            function setLineDash(value) {\n                if (_contextLineDash.length !== value.length) {\n                    _context.setLineDash(value);\n                    _contextLineDash = value;\n                }\n            }\n        };\n    }, function(module, exports) {\n        THREE.RenderableObject = function() {\n            this.id = 0;\n            this.object = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableFace = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.v3 = new THREE.RenderableVertex();\n            this.normalModel = new THREE.Vector3();\n            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n            this.vertexNormalsLength = 0;\n            this.color = new THREE.Color();\n            this.material = null;\n            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableVertex = function() {\n            this.position = new THREE.Vector3();\n            this.positionWorld = new THREE.Vector3();\n            this.positionScreen = new THREE.Vector4();\n            this.visible = true;\n        };\n        THREE.RenderableVertex.prototype.copy = function(vertex) {\n            this.positionWorld.copy(vertex.positionWorld);\n            this.positionScreen.copy(vertex.positionScreen);\n        };\n        THREE.RenderableLine = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n            this.material = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableSprite = function() {\n            this.id = 0;\n            this.object = null;\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.rotation = 0;\n            this.scale = new THREE.Vector2();\n            this.material = null;\n            this.renderOrder = 0;\n        };\n        THREE.Projector = function() {\n            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n                objects: [],\n                lights: [],\n                elements: []\n            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n            this.projectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n                vector.project(camera);\n            };\n            this.unprojectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n                vector.unproject(camera);\n            };\n            this.pickingRay = function(vector, camera) {\n                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n            };\n            var RenderList = function() {\n                var normals = [];\n                var uvs = [];\n                var object = null;\n                var material = null;\n                var normalMatrix = new THREE.Matrix3();\n                function setObject(value) {\n                    object = value;\n                    material = object.material;\n                    normalMatrix.getNormalMatrix(object.matrixWorld);\n                    normals.length = 0;\n                    uvs.length = 0;\n                }\n                function projectVertex(vertex) {\n                    var position = vertex.position;\n                    var positionWorld = vertex.positionWorld;\n                    var positionScreen = vertex.positionScreen;\n                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n                    var invW = 1 / positionScreen.w;\n                    positionScreen.x *= invW;\n                    positionScreen.y *= invW;\n                    positionScreen.z *= invW;\n                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n                }\n                function pushVertex(x, y, z) {\n                    _vertex = getNextVertexInPool();\n                    _vertex.position.set(x, y, z);\n                    projectVertex(_vertex);\n                }\n                function pushNormal(x, y, z) {\n                    normals.push(x, y, z);\n                }\n                function pushUv(x, y) {\n                    uvs.push(x, y);\n                }\n                function checkTriangleVisibility(v1, v2, v3) {\n                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n                    _points3[0] = v1.positionScreen;\n                    _points3[1] = v2.positionScreen;\n                    _points3[2] = v3.positionScreen;\n                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n                }\n                function checkBackfaceCulling(v1, v2, v3) {\n                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n                }\n                function pushLine(a, b) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    _line = getNextLineInPool();\n                    _line.id = object.id;\n                    _line.v1.copy(v1);\n                    _line.v2.copy(v2);\n                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n                    _line.renderOrder = object.renderOrder;\n                    _line.material = object.material;\n                    _renderData.elements.push(_line);\n                }\n                function pushTriangle(a, b, c) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    var v3 = _vertexPool[c];\n                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n                        _face = getNextFaceInPool();\n                        _face.id = object.id;\n                        _face.v1.copy(v1);\n                        _face.v2.copy(v2);\n                        _face.v3.copy(v3);\n                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                        _face.renderOrder = object.renderOrder;\n                        _face.normalModel.fromArray(normals, a * 3);\n                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n                        for (var i = 0; i < 3; i++) {\n                            var normal = _face.vertexNormalsModel[i];\n                            normal.fromArray(normals, arguments[i] * 3);\n                            normal.applyMatrix3(normalMatrix).normalize();\n                            var uv = _face.uvs[i];\n                            uv.fromArray(uvs, arguments[i] * 2);\n                        }\n                        _face.vertexNormalsLength = 3;\n                        _face.material = object.material;\n                        _renderData.elements.push(_face);\n                    }\n                }\n                return {\n                    setObject: setObject,\n                    projectVertex: projectVertex,\n                    checkTriangleVisibility: checkTriangleVisibility,\n                    checkBackfaceCulling: checkBackfaceCulling,\n                    pushVertex: pushVertex,\n                    pushNormal: pushNormal,\n                    pushUv: pushUv,\n                    pushLine: pushLine,\n                    pushTriangle: pushTriangle\n                };\n            };\n            var renderList = new RenderList();\n            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n                _faceCount = 0;\n                _lineCount = 0;\n                _spriteCount = 0;\n                _renderData.elements.length = 0;\n                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n                if (camera.parent === null) camera.updateMatrixWorld();\n                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n                _frustum.setFromMatrix(_viewProjectionMatrix);\n                _objectCount = 0;\n                _renderData.objects.length = 0;\n                _renderData.lights.length = 0;\n                scene.traverseVisible(function(object) {\n                    if (object instanceof THREE.Light) {\n                        _renderData.lights.push(object);\n                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n                        var material = object.material;\n                        if (material.visible === false) return;\n                        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n                            _object = getNextObjectInPool();\n                            _object.id = object.id;\n                            _object.object = object;\n                            _vector3.setFromMatrixPosition(object.matrixWorld);\n                            _vector3.applyProjection(_viewProjectionMatrix);\n                            _object.z = _vector3.z;\n                            _object.renderOrder = object.renderOrder;\n                            _renderData.objects.push(_object);\n                        }\n                    }\n                });\n                if (sortObjects === true) {\n                    _renderData.objects.sort(painterSort);\n                }\n                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n                    var object = _renderData.objects[o].object;\n                    var geometry = object.geometry;\n                    renderList.setObject(object);\n                    _modelMatrix = object.matrixWorld;\n                    _vertexCount = 0;\n                    if (object instanceof THREE.Mesh) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            var groups = geometry.groups;\n                            if (attributes.position === undefined) continue;\n                            var positions = attributes.position.array;\n                            for (var i = 0, l = positions.length; i < l; i += 3) {\n                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                            }\n                            if (attributes.normal !== undefined) {\n                                var normals = attributes.normal.array;\n                                for (var i = 0, l = normals.length; i < l; i += 3) {\n                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n                                }\n                            }\n                            if (attributes.uv !== undefined) {\n                                var uvs = attributes.uv.array;\n                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n                                }\n                            }\n                            if (geometry.index !== null) {\n                                var indices = geometry.index.array;\n                                if (groups.length > 0) {\n                                    for (var o = 0; o < groups.length; o++) {\n                                        var group = groups[o];\n                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                        }\n                                    }\n                                } else {\n                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                    }\n                                }\n                            } else {\n                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n                                    renderList.pushTriangle(i, i + 1, i + 2);\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            var vertices = geometry.vertices;\n                            var faces = geometry.faces;\n                            var faceVertexUvs = geometry.faceVertexUvs[0];\n                            _normalMatrix.getNormalMatrix(_modelMatrix);\n                            var material = object.material;\n                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n                                var vertex = vertices[v];\n                                _vector3.copy(vertex);\n                                if (material.morphTargets === true) {\n                                    var morphTargets = geometry.morphTargets;\n                                    var morphInfluences = object.morphTargetInfluences;\n                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                                        var influence = morphInfluences[t];\n                                        if (influence === 0) continue;\n                                        var target = morphTargets[t];\n                                        var targetVertex = target.vertices[v];\n                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n                                    }\n                                }\n                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n                            }\n                            for (var f = 0, fl = faces.length; f < fl; f++) {\n                                var face = faces[f];\n                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n                                if (material === undefined) continue;\n                                var side = material.side;\n                                var v1 = _vertexPool[face.a];\n                                var v2 = _vertexPool[face.b];\n                                var v3 = _vertexPool[face.c];\n                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n                                if (side !== THREE.DoubleSide) {\n                                    if (side === THREE.FrontSide && visible === false) continue;\n                                    if (side === THREE.BackSide && visible === true) continue;\n                                }\n                                _face = getNextFaceInPool();\n                                _face.id = object.id;\n                                _face.v1.copy(v1);\n                                _face.v2.copy(v2);\n                                _face.v3.copy(v3);\n                                _face.normalModel.copy(face.normal);\n                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                    _face.normalModel.negate();\n                                }\n                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n                                var faceVertexNormals = face.vertexNormals;\n                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n                                    var normalModel = _face.vertexNormalsModel[n];\n                                    normalModel.copy(faceVertexNormals[n]);\n                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                        normalModel.negate();\n                                    }\n                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n                                }\n                                _face.vertexNormalsLength = faceVertexNormals.length;\n                                var vertexUvs = faceVertexUvs[f];\n                                if (vertexUvs !== undefined) {\n                                    for (var u = 0; u < 3; u++) {\n                                        _face.uvs[u].copy(vertexUvs[u]);\n                                    }\n                                }\n                                _face.color = face.color;\n                                _face.material = material;\n                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                                _face.renderOrder = object.renderOrder;\n                                _renderData.elements.push(_face);\n                            }\n                        }\n                    } else if (object instanceof THREE.Line) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            if (attributes.position !== undefined) {\n                                var positions = attributes.position.array;\n                                for (var i = 0, l = positions.length; i < l; i += 3) {\n                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                                }\n                                if (geometry.index !== null) {\n                                    var indices = geometry.index.array;\n                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n                                        renderList.pushLine(indices[i], indices[i + 1]);\n                                    }\n                                } else {\n                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n                                        renderList.pushLine(i, i + 1);\n                                    }\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n                            var vertices = object.geometry.vertices;\n                            if (vertices.length === 0) continue;\n                            v1 = getNextVertexInPool();\n                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n                                v1 = getNextVertexInPool();\n                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n                                if ((v + 1) % step > 0) continue;\n                                v2 = _vertexPool[_vertexCount - 2];\n                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n                                    _line = getNextLineInPool();\n                                    _line.id = object.id;\n                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n                                    _line.renderOrder = object.renderOrder;\n                                    _line.material = object.material;\n                                    if (object.material.vertexColors === THREE.VertexColors) {\n                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n                                    }\n                                    _renderData.elements.push(_line);\n                                }\n                            }\n                        }\n                    } else if (object instanceof THREE.Sprite) {\n                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n                        _vector4.applyMatrix4(_viewProjectionMatrix);\n                        var invW = 1 / _vector4.w;\n                        _vector4.z *= invW;\n                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n                            _sprite = getNextSpriteInPool();\n                            _sprite.id = object.id;\n                            _sprite.x = _vector4.x * invW;\n                            _sprite.y = _vector4.y * invW;\n                            _sprite.z = _vector4.z;\n                            _sprite.renderOrder = object.renderOrder;\n                            _sprite.object = object;\n                            _sprite.rotation = object.rotation;\n                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n                            _sprite.material = object.material;\n                            _renderData.elements.push(_sprite);\n                        }\n                    }\n                }\n                if (sortElements === true) {\n                    _renderData.elements.sort(painterSort);\n                }\n                return _renderData;\n            };\n            function getNextObjectInPool() {\n                if (_objectCount === _objectPoolLength) {\n                    var object = new THREE.RenderableObject();\n                    _objectPool.push(object);\n                    _objectPoolLength++;\n                    _objectCount++;\n                    return object;\n                }\n                return _objectPool[_objectCount++];\n            }\n            function getNextVertexInPool() {\n                if (_vertexCount === _vertexPoolLength) {\n                    var vertex = new THREE.RenderableVertex();\n                    _vertexPool.push(vertex);\n                    _vertexPoolLength++;\n                    _vertexCount++;\n                    return vertex;\n                }\n                return _vertexPool[_vertexCount++];\n            }\n            function getNextFaceInPool() {\n                if (_faceCount === _facePoolLength) {\n                    var face = new THREE.RenderableFace();\n                    _facePool.push(face);\n                    _facePoolLength++;\n                    _faceCount++;\n                    return face;\n                }\n                return _facePool[_faceCount++];\n            }\n            function getNextLineInPool() {\n                if (_lineCount === _linePoolLength) {\n                    var line = new THREE.RenderableLine();\n                    _linePool.push(line);\n                    _linePoolLength++;\n                    _lineCount++;\n                    return line;\n                }\n                return _linePool[_lineCount++];\n            }\n            function getNextSpriteInPool() {\n                if (_spriteCount === _spritePoolLength) {\n                    var sprite = new THREE.RenderableSprite();\n                    _spritePool.push(sprite);\n                    _spritePoolLength++;\n                    _spriteCount++;\n                    return sprite;\n                }\n                return _spritePool[_spriteCount++];\n            }\n            function painterSort(a, b) {\n                if (a.renderOrder !== b.renderOrder) {\n                    return a.renderOrder - b.renderOrder;\n                } else if (a.z !== b.z) {\n                    return b.z - a.z;\n                } else if (a.id !== b.id) {\n                    return a.id - b.id;\n                } else {\n                    return 0;\n                }\n            }\n            function clipLine(s1, s2) {\n                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n                    return true;\n                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n                    return false;\n                } else {\n                    if (bc1near < 0) {\n                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n                    } else if (bc2near < 0) {\n                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n                    }\n                    if (bc1far < 0) {\n                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n                    } else if (bc2far < 0) {\n                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n                    }\n                    if (alpha2 < alpha1) {\n                        return false;\n                    } else {\n                        s1.lerp(s2, alpha1);\n                        s2.lerp(s1, 1 - alpha2);\n                        return true;\n                    }\n                }\n            }\n        };\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(10);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(16);\n        var Widget_1 = __webpack_require__(17);\n        var TrendsManager_1 = __webpack_require__(18);\n        var Screen_1 = __webpack_require__(21);\n        var AxisMarks_1 = __webpack_require__(22);\n        var interfaces_1 = __webpack_require__(23);\n        var deps_1 = __webpack_require__(3);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            SCROLL_STOP: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var ChartState = function() {\n            function ChartState(initialState, widgetsClasses, plugins) {\n                if (widgetsClasses === void 0) {\n                    widgetsClasses = {};\n                }\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.data = {\n                    prevState: {},\n                    $el: null,\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        gridMinSize: 100,\n                        autoScroll: true,\n                        marks: []\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        gridMinSize: 50,\n                        marks: []\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: .25,\n                        zoomEase: Linear.easeNone,\n                        scrollSpeed: .5,\n                        scrollEase: Linear.easeNone,\n                        autoScrollSpeed: 1,\n                        autoScrollEase: Linear.easeNone\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    backgroundColor: 0,\n                    backgroundOpacity: 1,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20\n                };\n                this.widgetsClasses = {};\n                this.plugins = {};\n                this.isReady = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n                this.widgetsClasses = widgetsClasses;\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.initListeners();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            ChartState.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.data = {};\n            };\n            ChartState.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            ChartState.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            ChartState.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            ChartState.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            ChartState.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            ChartState.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            ChartState.prototype.onScrollStop = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n            };\n            ChartState.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            ChartState.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            ChartState.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            ChartState.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            ChartState.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            ChartState.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var stateData = this.data;\n                var changedProps = {};\n                for (var key in newState) {\n                    if (stateData[key] !== newState[key]) {\n                        changedProps[key] = newState[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.data.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            ChartState.prototype.recalculateState = function(changedProps) {\n                var data = this.data;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                if (changedProps.widgets || !data.widgets) {\n                    patch.widgets = {};\n                    var widgetsOptions = data.widgets || {};\n                    for (var widgetName in this.widgetsClasses) {\n                        var WidgetClass = this.widgetsClasses[widgetName];\n                        var userOptions = widgetsOptions[widgetName] || {};\n                        var defaultOptions = WidgetClass.getDefaultOptions() || Widget_1.ChartWidget.getDefaultOptions();\n                        patch.widgets[widgetName] = Utils_1.Utils.deepMerge(defaultOptions, userOptions);\n                    }\n                }\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.data = Utils_1.Utils.deepMerge(this.data, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            ChartState.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            ChartState.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.data;\n                var prevState = this.data.prevState;\n                Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n            };\n            ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.data.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            ChartState.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    PluginClass.pluginWidgets.forEach(function(PluginWidget) {\n                        return _this.widgetsClasses[PluginWidget.widgetName] = PluginWidget;\n                    });\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChartState(_this);\n                });\n                return initialState;\n            };\n            ChartState.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            ChartState.prototype.initListeners = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n            };\n            ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n            };\n            ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            ChartState.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.data.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            ChartState.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.data.width / (scaleFactor * zoom);\n                var nextRange = this.data.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            ChartState.prototype.zoomToRange = function(range, origin) {\n                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.data.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            ChartState.prototype.scrollToEnd = function() {\n                var _this = this;\n                var state = this.data;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            ChartState.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            ChartState.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            ChartState.prototype.getValueOnXAxis = function(x) {\n                return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            ChartState.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n            };\n            ChartState.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n            };\n            ChartState.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n            };\n            ChartState.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n            };\n            ChartState.prototype.getValueByScreenX = function(x) {\n                var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            ChartState.prototype.getValueByScreenY = function(y) {\n                var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            ChartState.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            ChartState.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            ChartState.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            ChartState.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            ChartState.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            ChartState.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.data.width);\n            };\n            ChartState.prototype.getPaddingRight = function() {\n                return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n            };\n            return ChartState;\n        }();\n        exports.ChartState = ChartState;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(3);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(3);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            /**!\r\n\t     * @preserve $.parseColor\r\n\t     * Copyright 2011 THEtheChad Elliott\r\n\t     * Released under the MIT and GPL licenses.\r\n\t     */\n            Utils.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by $.parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            Utils.getHexColor = function(str) {\n                var rgb = this.parseColor(str);\n                return (rgb[0] << 8 * 2) + (rgb[1] << 8) + rgb[2];\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget(chartState) {\n                this.unsubscribers = [];\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            ChartWidget.prototype.bindEvents = function() {};\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartWidget.getDefaultOptions = function() {\n                return {\n                    enabled: true\n                };\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(19);\n        var EventEmmiter_1 = __webpack_require__(15);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n                this.bindEvents();\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                });\n            };\n            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                var _this = this;\n                var _loop_1 = function(trendName) {\n                    this_1.trends[trendName].segments.onRebuild(function() {\n                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                    });\n                };\n                var this_1 = this;\n                for (var trendName in this.trends) {\n                    _loop_1(trendName);\n                }\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var TrendSegments_1 = __webpack_require__(20);\n        var EventEmmiter_1 = __webpack_require__(15);\n        var deps_1 = __webpack_require__(3);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var DEFAULT_OPTIONS = {\n            enabled: true,\n            type: TREND_TYPE.LINE,\n            data: [],\n            maxSegmentLength: 1e3,\n            lineWidth: 2,\n            lineColor: 16777215,\n            hasGradient: true,\n            hasBeacon: false,\n            settingsForTypes: {\n                CANDLE: {\n                    minSegmentLengthInPx: 20,\n                    maxSegmentLengthInPx: 40\n                },\n                LINE: {\n                    minSegmentLengthInPx: 2,\n                    maxSegmentLengthInPx: 10\n                }\n            }\n        };\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chartState = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(DEFAULT_OPTIONS, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvents();\n            }\n            Trend.prototype.onInitialStateApplied = function() {\n                this.segments = new TrendSegments_1.TrendSegments(this.chartState, this);\n            };\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chartState;\n                chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateApplied();\n                });\n                chartState.onScrollStop(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chartState.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chartState.data.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chartState.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chartState;\n                var minXVal = chartState.data.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(15);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(19);\n        var Utils_1 = __webpack_require__(16);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegments = function() {\n            function TrendSegments(chartState, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n                this.bindEvents();\n            }\n            TrendSegments.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.chartState.onZoom(function() {\n                    return _this.onZoomHandler();\n                });\n                this.chartState.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            TrendSegments.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegments.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegments.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegments.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegments.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegments.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegments.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegments.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, from - displayedRange, \"startXVal\");\n                this.lastDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, to + displayedRange, \"endXVal\");\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegments.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegments.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegments.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegments.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegments.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegments.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegments.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegments.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegments.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegments.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegments;\n        }();\n        exports.TrendSegments = TrendSegments;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(15);\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.currentScrollX = {\n                    x: 0\n                };\n                this.currentScrollY = {\n                    y: 0\n                };\n                this.currentZoomX = {\n                    val: 1\n                };\n                this.currentZoomY = {\n                    val: 1\n                };\n                this.chartState = chartState;\n                var _a = chartState.data, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chartState.data, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                var _this = this;\n                var eventName = \"zoomFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                var _this = this;\n                var eventName = \"scrollFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                var _this = this;\n                var eventName = \"transformationFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                this.ee.emit(\"transformationFrame\", options);\n                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n                    this.ee.emit(\"scrollFrame\", options);\n                }\n                if (options.zoomX != void 0 || options.zoomY != void 0) {\n                    this.ee.emit(\"zoomFrame\", options);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.scrollXAnimation && this.scrollXAnimation.kill();\n                this.scrollYAnimation && this.scrollYAnimation.kill();\n                this.zoomXAnimation && this.zoomXAnimation.kill();\n                this.zoomYAnimation && this.zoomYAnimation.kill();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var state = this.chartState;\n                var isDragMode = state.data.cursor.dragMode;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled && !isDragMode;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n                var range = state.data.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollX.x = this.options.scrollX;\n                var cb = function() {\n                    _this.transform({\n                        scrollX: _this.currentScrollX.x\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n                        x: targetX,\n                        ease: ease\n                    });\n                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollX.x = targetX;\n                    cb();\n                }\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n                var range = state.data.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollY.y = this.options.scrollY;\n                var cb = function() {\n                    _this.transform({\n                        scrollY: _this.currentScrollY.y\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n                        y: targetY,\n                        ease: animations.zoomEase\n                    });\n                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollY.y = targetY;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.data.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomX: _this.currentZoomX.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomX.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.data.yAxis.range.zoom;\n                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomY: _this.currentZoomY.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomY.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chartState.data.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chartState.data.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chartState.data.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chartState.data.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var interfaces_1 = __webpack_require__(23);\n        var EventEmmiter_1 = __webpack_require__(15);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(17);\n        var GridWidget_1 = __webpack_require__(25);\n        var Utils_1 = __webpack_require__(16);\n        var interfaces_1 = __webpack_require__(23);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget(state) {\n                var _this = this;\n                _super.call(this, state);\n                this.isDestroyed = false;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(state.screen.options.scrollX, state.screen.options.scrollY);\n            }\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                }\n                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                    ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n                    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chartState.data.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chartState.data.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(17);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(16);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget(chartState) {\n                _super.call(this, chartState);\n                this.isDestroyed = false;\n                var _a = chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.gridMinSize) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.gridMinSize) * 3;\n                this.initGrid();\n                this.updateGrid();\n            }\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chartState.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chartState.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chartState.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chartState.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    opacity: .1,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chartState;\n                var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chartState;\n                var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.gridMinSize;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Trend_1 = __webpack_require__(19);\n        var TrendsLoadingWidget = function(_super) {\n            __extends(TrendsLoadingWidget, _super);\n            function TrendsLoadingWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLoading;\n            };\n            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n            return TrendsLoadingWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n        var TrendLoading = function(_super) {\n            __extends(TrendLoading, _super);\n            function TrendLoading(state, trendName) {\n                _super.call(this, state, trendName);\n                this.isActive = false;\n                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendLoading.createTexture(),\n                    transparent: true\n                }));\n                this.deactivate();\n            }\n            TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n                return trendOptions.enabled && chartState.data.animations.enabled;\n            };\n            TrendLoading.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendLoading.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.onPrependRequest(function() {\n                    return _this.activate();\n                }));\n            };\n            TrendLoading.prototype.prependData = function() {\n                this.deactivate();\n            };\n            TrendLoading.prototype.activate = function() {\n                var mesh = this.mesh;\n                mesh.material.opacity = 1;\n                mesh.rotation.z = 0;\n                var animation = TweenLite.to(this.mesh.rotation, .5, {\n                    z: Math.PI * 2\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animation.restart();\n                });\n                this.animation = animation;\n                this.isActive = true;\n                this.updatePosition();\n            };\n            TrendLoading.prototype.deactivate = function() {\n                this.animation && this.animation.kill();\n                this.mesh.material.opacity = 0;\n                this.isActive = false;\n            };\n            TrendLoading.createTexture = function() {\n                var h = 64, w = 64;\n                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                    ctx.lineWidth = 5;\n                    var center = h / 2;\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n                    ctx.stroke();\n                });\n            };\n            TrendLoading.prototype.onZoomFrame = function() {\n                this.updatePosition();\n            };\n            TrendLoading.prototype.updatePosition = function() {\n                if (!this.isActive) return;\n                var trend = this.trend;\n                var segment = trend.segments.getStartSegment();\n                var x, y;\n                if (trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n                    x = segment.currentAnimationState.startXVal;\n                    y = segment.currentAnimationState.startYVal;\n                } else {\n                    x = segment.currentAnimationState.xVal - segment.maxLength;\n                    y = segment.currentAnimationState.yVal;\n                }\n                var pointVector = this.chartState.screen.getPointOnChart(x, y);\n                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n            };\n            return TrendLoading;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLoading = TrendLoading;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(17);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget(state) {\n                _super.call(this, state);\n                this.widgets = {};\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n            }\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chartState.data.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chartState.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chartState, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chartState, trendName) {\n                this.chartState = chartState;\n                this.trendName = trendName;\n                this.unsubscribers = [];\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unsubscribers; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segments.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chartState.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unsubscriber) {\n                this.unsubscribers.push(unsubscriber);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(17);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var Utils_1 = __webpack_require__(16);\n        var Line = THREE.Line;\n        var Mesh = THREE.Mesh;\n        var interfaces_1 = __webpack_require__(23);\n        var AxisMarksWidget = function(_super) {\n            __extends(AxisMarksWidget, _super);\n            function AxisMarksWidget(chartState) {\n                _super.call(this, chartState);\n                this.axisMarksWidgets = [];\n                this.object3D = new Object3D();\n                var xAxisMarks = chartState.xAxisMarks, yAxisMarks = chartState.yAxisMarks;\n                var items = xAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n                items = yAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n            }\n            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n                var axisMarkWidget = new AxisMarkWidget(this.chartState, axisMark);\n                this.axisMarksWidgets.push(axisMarkWidget);\n                this.object3D.add(axisMarkWidget.getObject3D());\n            };\n            AxisMarksWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.chartState.screen.onTransformationFrame(function() {\n                    return _this.updateMarksPositions();\n                }), this.chartState.onResize(function() {\n                    return _this.updateMarksPositions();\n                }));\n            };\n            AxisMarksWidget.prototype.updateMarksPositions = function() {\n                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n                    var widget = _a[_i];\n                    widget.updatePosition();\n                }\n            };\n            AxisMarksWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarksWidget.widgetName = \"AxisMarks\";\n            return AxisMarksWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisMarksWidget = AxisMarksWidget;\n        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n            var axisMark = axisMarkWidget.axisMark;\n            ctx.fillStyle = axisMark.options.lineColor;\n            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n            var xCoord = 15;\n            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n                ctx.textAlign = \"end\";\n                xCoord = axisMarkWidget.indicatorWidth;\n            }\n            ctx.fillText(axisMark.options.title, xCoord, 20);\n            if (!axisMark.options.showValue) return;\n            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n        };\n        var INDICATOR_POS_Z = .1;\n        var AxisMarkWidget = function() {\n            function AxisMarkWidget(chartState, axisMark) {\n                this.indicatorWidth = 128;\n                this.indicatorHeight = 64;\n                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n                this.chartState = chartState;\n                this.axisMark = axisMark;\n                this.axisType = axisMark.axisType;\n                this.frameValue = axisMark.options.value;\n                this.object3D = new Object3D();\n                this.object3D.position.setZ(-.1);\n                this.line = this.createLine();\n                this.object3D.add(this.line);\n                this.indicator = this.createIndicator();\n                this.object3D.add(this.indicator);\n                this.renderIndicator();\n                this.updatePosition();\n                this.bindEvents();\n            }\n            AxisMarkWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarkWidget.prototype.createLine = function() {\n                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n                var lineGeometry = new Geometry();\n                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n                return new Line(lineGeometry, new LineBasicMaterial({\n                    color: Utils_1.Utils.getHexColor(lineColor),\n                    linewidth: lineWidth\n                }));\n            };\n            AxisMarkWidget.prototype.createIndicator = function() {\n                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n                var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n            };\n            AxisMarkWidget.prototype.renderIndicator = function() {\n                var texture = this.indicator.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n                texture.needsUpdate = true;\n            };\n            AxisMarkWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.axisMark.onDisplayedValueChange(function() {\n                    return _this.renderIndicator();\n                });\n                this.axisMark.onValueChange(function() {\n                    return _this.onValueChangeHandler();\n                });\n            };\n            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n                var _this = this;\n                if (this.moveAnimation) this.moveAnimation.kill();\n                var animations = this.chartState.data.animations;\n                var targetValue = this.axisMark.options.value;\n                var cb = function() {\n                    _this.updatePosition();\n                };\n                if (animations.enabled) {\n                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n                        frameValue: targetValue,\n                        ease: animations.trendChangeEase\n                    });\n                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.frameValue = targetValue;\n                    cb();\n                }\n            };\n            AxisMarkWidget.prototype.updatePosition = function() {\n                var chartState = this.chartState;\n                var screen = chartState.screen;\n                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n                var lineGeometry = this.line.geometry;\n                var hasStickMode = this.axisMark.options.stickToEdges;\n                var _a = this.chartState.data, width = _a.width, height = _a.height;\n                if (isXAxis) {\n                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n                    this.object3D.position.y = screen.getBottom();\n                    lineGeometry.vertices[1].setY(height);\n                    this.indicator.position.set(this.indicatorWidth / 2, chartState.data.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n                } else {\n                    var val = this.frameValue;\n                    var bottomVal = screen.getBottomVal();\n                    var topVal = screen.getTopVal();\n                    var needToStickOnTop = hasStickMode && val > topVal;\n                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n                    var centerYVal = screen.getCenterYVal();\n                    this.object3D.position.x = screen.getLeft();\n                    if (needToStickOnTop) {\n                        this.object3D.position.y = screen.getTop();\n                    } else if (needToStickOnBottom) {\n                        this.object3D.position.y = screen.getBottom();\n                    } else {\n                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n                    }\n                    lineGeometry.vertices[1].setX(width);\n                    var indicatorPosY = val > centerYVal ? -35 : 10;\n                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n                }\n                lineGeometry.verticesNeedUpdate = true;\n            };\n            AxisMarkWidget.typeName = \"simple\";\n            return AxisMarkWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(17);\n        var LineSegments = THREE.LineSegments;\n        var Vector3 = THREE.Vector3;\n        var BorderWidget = function(_super) {\n            __extends(BorderWidget, _super);\n            function BorderWidget(chartState) {\n                _super.call(this, chartState);\n                var _a = chartState.data, width = _a.width, height = _a.height;\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    opacity: 0,\n                    transparent: true\n                });\n                geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, height, 0), new Vector3(0, height, 0), new Vector3(width, height, 0), new Vector3(width, height, 0), new Vector3(width, 0, 0), new Vector3(width, 0, 0), new Vector3(0, 0, 0), new Vector3(width / 2, height, 0), new Vector3(width / 2, 0, 0));\n                this.lineSegments = new LineSegments(geometry, material);\n            }\n            BorderWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            BorderWidget.widgetName = \"Border\";\n            return BorderWidget;\n        }(Widget_1.ChartWidget);\n        exports.BorderWidget = BorderWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var Mesh = THREE.Mesh;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Color = THREE.Color;\n        var CANVAS_WIDTH = 128;\n        var CANVAS_HEIGHT = 64;\n        var OFFSET_X = 15;\n        var TrendsIndicatorWidget = function(_super) {\n            __extends(TrendsIndicatorWidget, _super);\n            function TrendsIndicatorWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                return TrendIndicator;\n            };\n            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n            return TrendsIndicatorWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n        var TrendIndicator = function(_super) {\n            __extends(TrendIndicator, _super);\n            function TrendIndicator(state, trendName) {\n                _super.call(this, state, trendName);\n                this.initObject();\n                this.onTrendChange();\n            }\n            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasIndicator;\n            };\n            TrendIndicator.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendIndicator.prototype.onTrendChange = function() {\n                var trendData = this.trend.getData();\n                var lastItem = trendData[trendData.length - 1];\n                var texture = this.mesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                texture.needsUpdate = true;\n            };\n            TrendIndicator.prototype.initObject = function() {\n                var color = new Color(this.trend.getOptions().lineColor);\n                var texture = Utils_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"15px Arial\";\n                    ctx.fillStyle = color.getStyle();\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n            };\n            TrendIndicator.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                this.segment = segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.updatePosition = function() {\n                var state = this.chartState;\n                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                var screenWidth = state.data.width;\n                var x = endPointVector.x + OFFSET_X;\n                var y = endPointVector.y;\n                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                if (indicatorIsOutOfScreen) {\n                    if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n                    if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                    y -= 25;\n                }\n                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n            };\n            return TrendIndicator;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendIndicator = TrendIndicator;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(19);\n        var Utils_1 = __webpack_require__(16);\n        var MAX_DISPLAYED_SEGMENTS = 2e3;\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segments.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < MAX_DISPLAYED_SEGMENTS; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segments.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(19);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(16);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segments.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chartState.data;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Trend_1 = __webpack_require__(19);\n        var TrendsBeaconWidget = function(_super) {\n            __extends(TrendsBeaconWidget, _super);\n            function TrendsBeaconWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                return TrendBeacon;\n            };\n            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n            return TrendsBeaconWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n        var TrendBeacon = function(_super) {\n            __extends(TrendBeacon, _super);\n            function TrendBeacon(state, trendName) {\n                _super.call(this, state, trendName);\n                this.initObject();\n                if (state.data.animations.enabled) {\n                    this.animate();\n                }\n                this.updatePosition();\n            }\n            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendBeacon.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendBeacon.prototype.onTrendChange = function() {\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.chartState.onScroll(function() {\n                    return _this.updatePosition();\n                }));\n                this.bindEvent(this.chartState.onChange(function(changedProps) {\n                    return _this.onStateChange(changedProps);\n                }));\n                this.bindEvent(this.chartState.onDestroy(function() {\n                    return _this.stopAnimation();\n                }));\n            };\n            TrendBeacon.prototype.initObject = function() {\n                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture(),\n                    transparent: true\n                }));\n                light.scale.set(.2, .2, 1);\n                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture()\n                })));\n                this.segment = this.trend.segments.getEndSegment();\n            };\n            TrendBeacon.prototype.animate = function() {\n                var _this = this;\n                this.animated = true;\n                var object = this.mesh;\n                var animationObject = {\n                    scale: object.scale.x,\n                    opacity: object.material.opacity\n                };\n                this.mesh.scale.set(.1, .1, 1);\n                setTimeout(function() {\n                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                        scale: 1,\n                        opacity: 0\n                    });\n                    animation.eventCallback(\"onUpdate\", function() {\n                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n                        object.material.opacity = animationObject.opacity;\n                    }).eventCallback(\"onComplete\", function() {\n                        _this.animation && animation.restart();\n                    });\n                }, 500);\n            };\n            TrendBeacon.prototype.stopAnimation = function() {\n                this.animated = false;\n                this.animation && this.animation.kill();\n                this.animation = null;\n            };\n            TrendBeacon.createTexture = function() {\n                var h = 32, w = 32;\n                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.beginPath();\n                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                });\n            };\n            TrendBeacon.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                this.segment = trendsSegments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onStateChange = function(changedProps) {\n                if (!changedProps.animations) return;\n                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                if (changedProps.animations.enabled) {\n                    this.animate();\n                } else {\n                    this.stopAnimation();\n                }\n            };\n            TrendBeacon.prototype.updatePosition = function() {\n                var state = this.chartState;\n                var xVal, yVal;\n                var currentAnimationState = this.segment.currentAnimationState;\n                if (this.trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n                    xVal = currentAnimationState.endXVal;\n                    yVal = currentAnimationState.endYVal;\n                } else {\n                    xVal = currentAnimationState.xVal;\n                    yVal = currentAnimationState.endYVal;\n                }\n                var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n                var screenWidth = state.data.width;\n                var x = endPointVector.x;\n                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                if (screenX < 0) x = state.screen.getPointByScreenX(0);\n                if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n                this.mesh.position.set(x, endPointVector.y, .1);\n            };\n            return TrendBeacon;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendBeacon = TrendBeacon;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(3));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(15);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChartState = function(chartState) {\n                var _this = this;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chartState.onReady(function() {\n                    return _this.onChartReadyHandler();\n                }), this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chartState.data.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onChartReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.pluginWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-chart/build/ThreeChart.js\n ** module id = 35\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"TrendsMarksPlugin\"] = factory(); else root[\"TrendsMarksPlugin\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var three_chart_1 = __webpack_require__(2);\n        var TrendsMarksWidget_1 = __webpack_require__(4);\n        (function(TREND_MARK_SIDE) {\n            TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\n            TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\n        })(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\n        var TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\n        (function(EVENTS) {\n            EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\n        })(exports.EVENTS || (exports.EVENTS = {}));\n        var EVENTS = exports.EVENTS;\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            trendName: \"\",\n            title: \"\",\n            description: \"\",\n            descriptionColor: \"rgb(40,136,75)\",\n            value: 0,\n            iconColor: \"rgb(255, 102, 217)\",\n            orientation: TREND_MARK_SIDE.TOP,\n            width: 65,\n            height: 80,\n            offset: 40,\n            margin: 20\n        };\n        var TrendsMarksPlugin = function(_super) {\n            __extends(TrendsMarksPlugin, _super);\n            function TrendsMarksPlugin(trendsMarksPluginOptions) {\n                _super.call(this, trendsMarksPluginOptions);\n                this.items = {};\n                this.rects = {};\n            }\n            TrendsMarksPlugin.prototype.onInitialStateApplied = function() {\n                this.bindEvents();\n                this.onMarksChangeHandler();\n            };\n            TrendsMarksPlugin.prototype.onStateChanged = function() {\n                this.onMarksChangeHandler();\n            };\n            TrendsMarksPlugin.prototype.getOptions = function() {\n                return _super.prototype.getOptions.call(this);\n            };\n            TrendsMarksPlugin.prototype.getItems = function() {\n                return this.items;\n            };\n            TrendsMarksPlugin.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            TrendsMarksPlugin.prototype.createMark = function(options) {\n                var marksOptions = this.getOptions().items;\n                var newMarkOptions = marksOptions.concat([ options ]);\n                this.chartState.setState({\n                    pluginsState: (_a = {}, _a[this.name] = {\n                        items: newMarkOptions\n                    }, _a)\n                });\n                var _a;\n            };\n            TrendsMarksPlugin.prototype.onChange = function(cb) {\n                return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n            };\n            TrendsMarksPlugin.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.trendsManager.onSegmentsRebuilded(function() {\n                    return _this.updateMarksSegments();\n                });\n                this.chartState.screen.onZoomFrame(function() {\n                    return _this.calclulateMarksPositions();\n                });\n            };\n            TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function() {\n                this.onMarksChangeHandler();\n            };\n            TrendsMarksPlugin.prototype.onMarksChangeHandler = function() {\n                var trendsMarksOptions = this.getOptions().items;\n                var actualMarksNames = [];\n                for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\n                    var options = trendsMarksOptions_1[_i];\n                    var marks = this.items;\n                    if (!options.name) {\n                        options.name = three_chart_1.Utils.getUid().toString();\n                        actualMarksNames.push(options.name);\n                        if (marks[options.name]) three_chart_1.Utils.error(\"duplicated mark name \" + options.name);\n                    } else if (marks[options.name]) {\n                        actualMarksNames.push(options.name);\n                        continue;\n                    }\n                    options = three_chart_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    var mark = new TrendMark(this.chartState, options);\n                    marks[options.name] = mark;\n                }\n                for (var markName in this.items) {\n                    if (actualMarksNames.indexOf(markName) != -1) continue;\n                    delete this.items[markName];\n                }\n                this.updateMarksSegments();\n                this.ee.emit(EVENTS[EVENTS.CHANGE]);\n            };\n            TrendsMarksPlugin.prototype.calclulateMarksPositions = function() {\n                this.rects = {};\n                for (var markName in this.items) {\n                    this.createMarkRect(this.items[markName]);\n                }\n            };\n            TrendsMarksPlugin.prototype.createMarkRect = function(mark) {\n                if (!mark.segment) return;\n                var state = this.chartState;\n                var options = mark.options;\n                var width = options.width, height = options.height, offset = options.offset, name = options.name;\n                var left = state.getPointOnXAxis(mark.xVal) - width / 2;\n                var top = state.getPointOnYAxis(mark.yVal);\n                var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n                var newOffset;\n                var row = 0;\n                if (isTopSideMark) {\n                    top += offset + height;\n                } else {\n                    top -= offset;\n                }\n                var markRect = [ left, top, width, height ];\n                var hasIntersection = false;\n                do {\n                    for (var markName in this.rects) {\n                        var rect = this.rects[markName];\n                        hasIntersection = three_chart_1.Utils.rectsIntersect(rect, markRect);\n                        if (!hasIntersection) continue;\n                        if (isTopSideMark) {\n                            markRect[1] = rect[1] + markRect[3] + options.margin;\n                        } else {\n                            markRect[1] = rect[1] - rect[3] - options.margin;\n                        }\n                        row++;\n                        break;\n                    }\n                } while (hasIntersection);\n                if (isTopSideMark) {\n                    newOffset = markRect[1] - markRect[3] - state.getPointOnYAxis(mark.yVal);\n                } else {\n                    newOffset = state.getPointOnYAxis(mark.yVal) - markRect[1];\n                }\n                mark._setOffset(newOffset);\n                mark._setRow(row);\n                this.rects[name] = markRect;\n            };\n            TrendsMarksPlugin.prototype.updateMarksSegments = function() {\n                var chartState = this.chartState;\n                var trends = chartState.trendsManager.trends;\n                for (var trendName in trends) {\n                    var marks = this.getTrendMarks(trendName);\n                    var marksArr = [];\n                    var xVals = [];\n                    for (var markName in marks) {\n                        var mark = marks[markName];\n                        xVals.push(mark.options.value);\n                        marksArr.push(mark);\n                        mark._setSegment(null);\n                    }\n                    marksArr.sort(function(a, b) {\n                        return a.options.value - b.options.value;\n                    });\n                    var trend = chartState.getTrend(trendName);\n                    var points = trend.segments.getSegmentsForXValues(xVals.sort(function(a, b) {\n                        return a - b;\n                    }));\n                    for (var markInd = 0; markInd < marksArr.length; markInd++) {\n                        marksArr[markInd]._setSegment(points[markInd]);\n                    }\n                }\n                this.calclulateMarksPositions();\n            };\n            TrendsMarksPlugin.prototype.getTrendMarks = function(trendName) {\n                var trendMarks = [];\n                for (var markName in this.items) {\n                    if (this.items[markName].options.trendName != trendName) continue;\n                    trendMarks.push(this.items[markName]);\n                }\n                return trendMarks;\n            };\n            TrendsMarksPlugin.NAME = \"TrendsMarks\";\n            TrendsMarksPlugin.pluginWidgets = [ TrendsMarksWidget_1.TrendsMarksWidget ];\n            return TrendsMarksPlugin;\n        }(three_chart_1.ChartPlugin);\n        exports.TrendsMarksPlugin = TrendsMarksPlugin;\n        var TrendMark = function() {\n            function TrendMark(chartState, options) {\n                this.row = 0;\n                this.options = options;\n                this.chartState = chartState;\n            }\n            TrendMark.prototype._setSegment = function(segment) {\n                this.segment = segment;\n                if (!segment) return;\n                var trend = this.chartState.getTrend(this.options.trendName);\n                if (trend.getOptions().type == three_chart_1.TREND_TYPE.LINE) {\n                    this.xVal = segment.endXVal;\n                    this.yVal = segment.endYVal;\n                } else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n                    this.xVal = segment.xVal;\n                    this.yVal = segment.maxYVal;\n                } else {\n                    this.xVal = segment.xVal;\n                    this.yVal = segment.minYVal;\n                }\n            };\n            TrendMark.prototype._setOffset = function(offset) {\n                this.offset = offset;\n            };\n            TrendMark.prototype._setRow = function(row) {\n                this.row = row;\n            };\n            return TrendMark;\n        }();\n        exports.TrendMark = TrendMark;\n    }, function(module, exports, __webpack_require__) {\n        module.exports = __webpack_require__(3);\n    }, function(module, exports, __webpack_require__) {\n        (function webpackUniversalModuleDefinition(root, factory) {\n            if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"ThreeChart\"] = factory(); else root[\"ThreeChart\"] = factory();\n        })(this, function() {\n            return function(modules) {\n                var installedModules = {};\n                function __webpack_require__(moduleId) {\n                    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n                    var module = installedModules[moduleId] = {\n                        exports: {},\n                        id: moduleId,\n                        loaded: false\n                    };\n                    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n                    module.loaded = true;\n                    return module.exports;\n                }\n                __webpack_require__.m = modules;\n                __webpack_require__.c = installedModules;\n                __webpack_require__.p = \"\";\n                return __webpack_require__(0);\n            }([ function(module, exports, __webpack_require__) {\n                \"use strict\";\n                function __export(m) {\n                    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n                }\n                __export(__webpack_require__(1));\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                function __export(m) {\n                    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n                }\n                __export(__webpack_require__(2));\n                __export(__webpack_require__(23));\n                __export(__webpack_require__(22));\n                __export(__webpack_require__(21));\n                __export(__webpack_require__(14));\n                __export(__webpack_require__(19));\n                __export(__webpack_require__(20));\n                __export(__webpack_require__(18));\n                __export(__webpack_require__(16));\n                __export(__webpack_require__(17));\n                __export(__webpack_require__(35));\n                __export(__webpack_require__(27));\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                __webpack_require__(3);\n                var PerspectiveCamera = THREE.PerspectiveCamera;\n                var State_1 = __webpack_require__(14);\n                var Utils_1 = __webpack_require__(16);\n                var AxisWidget_1 = __webpack_require__(24);\n                var GridWidget_1 = __webpack_require__(25);\n                var TrendsLoadingWidget_1 = __webpack_require__(26);\n                var AxisMarksWidget_1 = __webpack_require__(28);\n                var BorderWidget_1 = __webpack_require__(29);\n                var TrendsIndicatorWidget_1 = __webpack_require__(30);\n                var TrendsLineWidget_1 = __webpack_require__(31);\n                var TrendsCandleWidget_1 = __webpack_require__(32);\n                var TrendsBeaconWidget_1 = __webpack_require__(33);\n                var deps_1 = __webpack_require__(34);\n                exports.MAX_DATA_LENGTH = 2692e3;\n                var Chart = function() {\n                    function Chart(state, $container, plugins) {\n                        var _this = this;\n                        if (plugins === void 0) {\n                            plugins = [];\n                        }\n                        this.widgets = [];\n                        if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                        if (!$container) {\n                            Utils_1.Utils.error(\"$el must be set\");\n                        }\n                        var style = getComputedStyle($container);\n                        state.width = parseInt(style.width);\n                        state.height = parseInt(style.height);\n                        this.state = new State_1.ChartState(state, Chart.installedWidgets, plugins);\n                        this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                            return _this.zoom(zoomValue, origin);\n                        }, 200);\n                        this.$container = $container;\n                        this.init($container);\n                    }\n                    Chart.installWidget = function(Widget) {\n                        if (!Widget.widgetName) {\n                            Utils_1.Utils.error(\"unnamed widget\");\n                        }\n                        this.installedWidgets[Widget.widgetName] = Widget;\n                    };\n                    Chart.prototype.init = function($container) {\n                        var state = this.state;\n                        var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                        this.scene = new THREE.Scene();\n                        this.isStopped = !autoRender.enabled;\n                        var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n                            antialias: true,\n                            alpha: true\n                        });\n                        renderer.setPixelRatio(Chart.devicePixelRatio);\n                        renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n                        renderer.setSize(w, h);\n                        $container.appendChild(renderer.domElement);\n                        this.$el = renderer.domElement;\n                        this.$el.style.display = \"block\";\n                        if (showStats) {\n                            this.stats = new Stats();\n                            $container.appendChild(this.stats.domElement);\n                        }\n                        this.setupCamera();\n                        var widgetsClasses = this.state.widgetsClasses;\n                        for (var widgetName in widgetsClasses) {\n                            var widgetOptions = this.state.data.widgets[widgetName];\n                            if (!widgetOptions.enabled) continue;\n                            var WidgetConstructor = widgetsClasses[widgetName];\n                            var widget = new WidgetConstructor(this.state);\n                            this.scene.add(widget.getObject3D());\n                            this.widgets.push(widget);\n                        }\n                        this.bindEvents();\n                        this.renderLoop();\n                    };\n                    Chart.prototype.renderLoop = function() {\n                        var _this = this;\n                        if (this.isDestroyed) return;\n                        this.stats && this.stats.begin();\n                        this.render();\n                        if (this.isStopped) return;\n                        var fpsLimit = this.state.data.autoRender.fps;\n                        if (fpsLimit) {\n                            var delay = 1e3 / fpsLimit;\n                            setTimeout(function() {\n                                return requestAnimationFrame(function() {\n                                    return _this.renderLoop();\n                                });\n                            }, delay);\n                        } else {\n                            requestAnimationFrame(function() {\n                                return _this.renderLoop();\n                            });\n                        }\n                        this.stats && this.stats.end();\n                    };\n                    Chart.prototype.render = function() {\n                        this.renderer.render(this.scene, this.camera);\n                    };\n                    Chart.prototype.stop = function() {\n                        this.isStopped = true;\n                    };\n                    Chart.prototype.run = function() {\n                        this.isStopped = false;\n                        this.renderLoop();\n                    };\n                    Chart.prototype.destroy = function() {\n                        this.isDestroyed = true;\n                        this.stop();\n                        this.state.destroy();\n                        this.unbindEvents();\n                        try {\n                            this.renderer.forceContextLoss();\n                        } catch (wtf) {}\n                        this.renderer.context = null;\n                        this.renderer.domElement = null;\n                        this.renderer = null;\n                    };\n                    Chart.prototype.getState = function() {\n                        return this.state.data;\n                    };\n                    Chart.prototype.getTrend = function(trendName) {\n                        return this.state.getTrend(trendName);\n                    };\n                    Chart.prototype.setState = function(state) {\n                        return this.state.setState(state);\n                    };\n                    Chart.prototype.bindEvents = function() {\n                        var _this = this;\n                        var $el = this.$el;\n                        if (this.state.data.controls.enabled) {\n                            $el.addEventListener(\"mousewheel\", function(ev) {\n                                _this.onMouseWheel(ev);\n                            });\n                            $el.addEventListener(\"mousemove\", function(ev) {\n                                _this.onMouseMove(ev);\n                            });\n                            $el.addEventListener(\"mousedown\", function(ev) {\n                                return _this.onMouseDown(ev);\n                            });\n                            $el.addEventListener(\"mouseup\", function(ev) {\n                                return _this.onMouseUp(ev);\n                            });\n                            $el.addEventListener(\"touchmove\", function(ev) {\n                                _this.onTouchMove(ev);\n                            });\n                            $el.addEventListener(\"touchend\", function(ev) {\n                                _this.onTouchEnd(ev);\n                            });\n                        }\n                        if (this.state.data.autoResize) {\n                            this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                                _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                            });\n                        }\n                        this.unsubscribers = [ this.state.onTrendsChange(function() {\n                            return _this.autoscroll();\n                        }), this.state.screen.onTransformationFrame(function(options) {\n                            return _this.onScreenTransformHandler(options);\n                        }), this.state.onResize(function(options) {\n                            return _this.onChartResize();\n                        }) ];\n                    };\n                    Chart.prototype.unbindEvents = function() {\n                        try {\n                            this.resizeSensor && this.resizeSensor.detach();\n                        } catch (e) {}\n                        this.$el.remove();\n                        this.unsubscribers.forEach(function(unsubscribe) {\n                            return unsubscribe();\n                        });\n                    };\n                    Chart.prototype.setupCamera = function() {\n                        var camSettings = this.state.screen.getCameraSettings();\n                        if (!this.camera) {\n                            this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                            this.scene.add(this.camera);\n                        } else {\n                            this.camera.fov = camSettings.FOV;\n                            this.camera.aspect = camSettings.aspect;\n                            this.camera.far = camSettings.far;\n                            this.camera.near = camSettings.near;\n                            this.camera.updateProjectionMatrix();\n                        }\n                        this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                        this.cameraInitialPosition = this.camera.position.clone();\n                        this.onScreenTransformHandler(this.state.screen.options);\n                    };\n                    Chart.prototype.onScreenTransformHandler = function(options) {\n                        if (options.scrollX != void 0) {\n                            var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                            this.camera.position.setX(scrollX_1);\n                        }\n                        if (options.scrollY != void 0) {\n                            var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                            this.camera.position.setY(scrollY_1);\n                        }\n                    };\n                    Chart.prototype.autoscroll = function() {\n                        var state = this.state;\n                        if (!state.data.autoScroll) return;\n                        var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n                        var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n                        if (trendsMaxXDelta > 0) {\n                            var maxVisibleX = this.state.screen.getScreenRightVal();\n                            var paddingRightX = this.state.getPaddingRight();\n                            var currentScroll = state.data.xAxis.range.scroll;\n                            if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                                return;\n                            }\n                            var scrollDelta = trendsMaxXDelta;\n                            this.setState({\n                                xAxis: {\n                                    range: {\n                                        scroll: currentScroll + scrollDelta\n                                    }\n                                }\n                            });\n                        }\n                    };\n                    Chart.prototype.onScrollStop = function() {};\n                    Chart.prototype.onMouseDown = function(ev) {\n                        this.setState({\n                            cursor: {\n                                dragMode: true,\n                                x: ev.clientX,\n                                y: ev.clientY\n                            }\n                        });\n                    };\n                    Chart.prototype.onMouseUp = function(ev) {\n                        this.setState({\n                            cursor: {\n                                dragMode: false\n                            }\n                        });\n                    };\n                    Chart.prototype.onMouseMove = function(ev) {\n                        if (this.state.data.cursor.dragMode) {\n                            this.setState({\n                                cursor: {\n                                    dragMode: true,\n                                    x: ev.clientX,\n                                    y: ev.clientY\n                                }\n                            });\n                        }\n                    };\n                    Chart.prototype.onMouseWheel = function(ev) {\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                        var zoomOrigin = ev.layerX / this.state.data.width;\n                        var zoomValue = 1 + ev.wheelDeltaY * .001;\n                        this.zoom(zoomValue, zoomOrigin);\n                    };\n                    Chart.prototype.onTouchMove = function(ev) {\n                        this.setState({\n                            cursor: {\n                                dragMode: true,\n                                x: ev.touches[0].clientX,\n                                y: ev.touches[0].clientY\n                            }\n                        });\n                    };\n                    Chart.prototype.onTouchEnd = function(ev) {\n                        this.setState({\n                            cursor: {\n                                dragMode: false\n                            }\n                        });\n                    };\n                    Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n                        this.setState({\n                            width: width,\n                            height: height\n                        });\n                    };\n                    Chart.prototype.onChartResize = function() {\n                        var _a = this.state.data, width = _a.width, height = _a.height;\n                        this.renderer.setSize(width, height);\n                        this.setupCamera();\n                    };\n                    Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n                        var _this = this;\n                        var MAX_ZOOM_VALUE = 1.5;\n                        var MIN_ZOOM_VALUE = .7;\n                        zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                        zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                        var autoScrollIsEnabled = this.state.data.autoScroll;\n                        if (autoScrollIsEnabled) this.state.setState({\n                            autoScroll: false\n                        });\n                        this.state.zoom(zoomValue, zoomOrigin).then(function() {\n                            if (autoScrollIsEnabled) _this.setState({\n                                autoScroll: true\n                            });\n                        });\n                    };\n                    Chart.createPreviewChart = function(userOptions, $el) {\n                        var previewChartOptions = {\n                            animations: {\n                                enabled: false\n                            },\n                            widgets: {\n                                Grid: {\n                                    enabled: false\n                                },\n                                Axis: {\n                                    enabled: false\n                                },\n                                TrendsGradient: {\n                                    enabled: false\n                                }\n                            }\n                        };\n                        var options = Utils_1.Utils.deepMerge(userOptions, previewChartOptions);\n                        return new Chart(options, $el);\n                    };\n                    Chart.devicePixelRatio = window.devicePixelRatio;\n                    Chart.installedWidgets = {};\n                    Chart.renderers = {\n                        CanvasRenderer: THREE.CanvasRenderer,\n                        WebGLRenderer: THREE.WebGLRenderer\n                    };\n                    return Chart;\n                }();\n                exports.Chart = Chart;\n                Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n                Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n                Chart.installWidget(AxisWidget_1.AxisWidget);\n                Chart.installWidget(GridWidget_1.GridWidget);\n                Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\n                Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\n                Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\n                Chart.installWidget(AxisMarksWidget_1.AxisMarksWidget);\n                Chart.installWidget(BorderWidget_1.BorderWidget);\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                window.Stats = __webpack_require__(4);\n                window.TweenLite = __webpack_require__(5);\n                __webpack_require__(7);\n                __webpack_require__(8);\n                exports.isPlainObject = __webpack_require__(9);\n                exports.EE2 = __webpack_require__(11);\n                var es6_promise_1 = __webpack_require__(12);\n                exports.Promise = es6_promise_1.Promise;\n                exports.ResizeSensor = __webpack_require__(13);\n            }, function(module, exports) {\n                var Stats = function() {\n                    function h(a) {\n                        c.appendChild(a.dom);\n                        return a;\n                    }\n                    function k(a) {\n                        for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                        l = a;\n                    }\n                    var l = 0, c = document.createElement(\"div\");\n                    c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n                    c.addEventListener(\"click\", function(a) {\n                        a.preventDefault();\n                        k(++l % c.children.length);\n                    }, !1);\n                    var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n                    if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n                    k(0);\n                    return {\n                        REVISION: 16,\n                        dom: c,\n                        addPanel: h,\n                        showPanel: k,\n                        begin: function() {\n                            g = (performance || Date).now();\n                        },\n                        end: function() {\n                            a++;\n                            var c = (performance || Date).now();\n                            f.update(c - g, 200);\n                            if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                                var d = performance.memory;\n                                t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                            }\n                            return c;\n                        },\n                        update: function() {\n                            g = this.end();\n                        },\n                        domElement: c,\n                        setMode: k\n                    };\n                };\n                Stats.Panel = function(h, k, l) {\n                    var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n                    q.width = r;\n                    q.height = f;\n                    q.style.cssText = \"width:80px;height:48px\";\n                    var b = q.getContext(\"2d\");\n                    b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n                    b.textBaseline = \"top\";\n                    b.fillStyle = l;\n                    b.fillRect(0, 0, r, f);\n                    b.fillStyle = k;\n                    b.fillText(h, t, u);\n                    b.fillRect(d, m, n, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d, m, n, p);\n                    return {\n                        dom: q,\n                        update: function(f, v) {\n                            c = Math.min(c, f);\n                            g = Math.max(g, f);\n                            b.fillStyle = l;\n                            b.globalAlpha = 1;\n                            b.fillRect(0, 0, r, m);\n                            b.fillStyle = k;\n                            b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                            b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                            b.fillRect(d + n - a, m, a, p);\n                            b.fillStyle = l;\n                            b.globalAlpha = .9;\n                            b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                        }\n                    };\n                };\n                \"object\" === typeof module && (module.exports = Stats);\n            }, function(module, exports, __webpack_require__) {\n                var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n                (function(global) {\n                    /*!\n\t\t * VERSION: 1.18.5\n\t\t * DATE: 2016-05-24\n\t\t * UPDATES AND DOCS AT: http://greensock.com\n\t\t * \n\t\t * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n\t\t *\n\t\t * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n\t\t * This work is subject to the terms at http://greensock.com/standard-license or for\n\t\t * Club GreenSock members, the software agreement that was issued with your membership.\n\t\t * \n\t\t * @author: Jack Doyle, jack@greensock.com\n\t\t **/\n                    var _gsScope = typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window;\n                    (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {\n                        \"use strict\";\n                        _gsScope._gsDefine(\"TweenMax\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n                            var _slice = function(a) {\n                                var b = [], l = a.length, i;\n                                for (i = 0; i !== l; b.push(a[i++])) ;\n                                return b;\n                            }, _applyCycle = function(vars, targets, i) {\n                                var alt = vars.cycle, p, val;\n                                for (p in alt) {\n                                    val = alt[p];\n                                    vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n                                }\n                                delete vars.cycle;\n                            }, TweenMax = function(target, duration, vars) {\n                                TweenLite.call(this, target, duration, vars);\n                                this._cycle = 0;\n                                this._yoyo = this.vars.yoyo === true;\n                                this._repeat = this.vars.repeat || 0;\n                                this._repeatDelay = this.vars.repeatDelay || 0;\n                                this._dirty = true;\n                                this.render = TweenMax.prototype.render;\n                            }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, p = TweenMax.prototype = TweenLite.to({}, .1, {}), _blankArray = [];\n                            TweenMax.version = \"1.18.5\";\n                            p.constructor = TweenMax;\n                            p.kill()._gc = false;\n                            TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n                            TweenMax.getTweensOf = TweenLite.getTweensOf;\n                            TweenMax.lagSmoothing = TweenLite.lagSmoothing;\n                            TweenMax.ticker = TweenLite.ticker;\n                            TweenMax.render = TweenLite.render;\n                            p.invalidate = function() {\n                                this._yoyo = this.vars.yoyo === true;\n                                this._repeat = this.vars.repeat || 0;\n                                this._repeatDelay = this.vars.repeatDelay || 0;\n                                this._uncache(true);\n                                return TweenLite.prototype.invalidate.call(this);\n                            };\n                            p.updateTo = function(vars, resetDuration) {\n                                var curRatio = this.ratio, immediate = this.vars.immediateRender || vars.immediateRender, p;\n                                if (resetDuration && this._startTime < this._timeline._time) {\n                                    this._startTime = this._timeline._time;\n                                    this._uncache(false);\n                                    if (this._gc) {\n                                        this._enabled(true, false);\n                                    } else {\n                                        this._timeline.insert(this, this._startTime - this._delay);\n                                    }\n                                }\n                                for (p in vars) {\n                                    this.vars[p] = vars[p];\n                                }\n                                if (this._initted || immediate) {\n                                    if (resetDuration) {\n                                        this._initted = false;\n                                        if (immediate) {\n                                            this.render(0, true, true);\n                                        }\n                                    } else {\n                                        if (this._gc) {\n                                            this._enabled(true, false);\n                                        }\n                                        if (this._notifyPluginsOfEnabled && this._firstPT) {\n                                            TweenLite._onPluginEvent(\"_onDisable\", this);\n                                        }\n                                        if (this._time / this._duration > .998) {\n                                            var prevTime = this._totalTime;\n                                            this.render(0, true, false);\n                                            this._initted = false;\n                                            this.render(prevTime, true, false);\n                                        } else {\n                                            this._initted = false;\n                                            this._init();\n                                            if (this._time > 0 || immediate) {\n                                                var inv = 1 / (1 - curRatio), pt = this._firstPT, endValue;\n                                                while (pt) {\n                                                    endValue = pt.s + pt.c;\n                                                    pt.c *= inv;\n                                                    pt.s = endValue - pt.c;\n                                                    pt = pt._next;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                return this;\n                            };\n                            p.render = function(time, suppressEvents, force) {\n                                if (!this._initted) if (this._duration === 0 && this.vars.repeat) {\n                                    this.invalidate();\n                                }\n                                var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevTotalTime = this._totalTime, prevCycle = this._cycle, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n                                if (time >= totalDur - 1e-7) {\n                                    this._totalTime = totalDur;\n                                    this._cycle = this._repeat;\n                                    if (this._yoyo && (this._cycle & 1) !== 0) {\n                                        this._time = 0;\n                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                                    } else {\n                                        this._time = duration;\n                                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n                                    }\n                                    if (!this._reversed) {\n                                        isComplete = true;\n                                        callback = \"onComplete\";\n                                        force = force || this._timeline.autoRemoveChildren;\n                                    }\n                                    if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                        if (this._startTime === this._timeline._duration) {\n                                            time = 0;\n                                        }\n                                        if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n                                            force = true;\n                                            if (prevRawPrevTime > _tinyNum) {\n                                                callback = \"onReverseComplete\";\n                                            }\n                                        }\n                                        this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                                    }\n                                } else if (time < 1e-7) {\n                                    this._totalTime = this._time = this._cycle = 0;\n                                    this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                                    if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n                                        callback = \"onReverseComplete\";\n                                        isComplete = this._reversed;\n                                    }\n                                    if (time < 0) {\n                                        this._active = false;\n                                        if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                            if (prevRawPrevTime >= 0) {\n                                                force = true;\n                                            }\n                                            this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                                        }\n                                    }\n                                    if (!this._initted) {\n                                        force = true;\n                                    }\n                                } else {\n                                    this._totalTime = this._time = time;\n                                    if (this._repeat !== 0) {\n                                        cycleDuration = duration + this._repeatDelay;\n                                        this._cycle = this._totalTime / cycleDuration >> 0;\n                                        if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n                                            this._cycle--;\n                                        }\n                                        this._time = this._totalTime - this._cycle * cycleDuration;\n                                        if (this._yoyo) if ((this._cycle & 1) !== 0) {\n                                            this._time = duration - this._time;\n                                        }\n                                        if (this._time > duration) {\n                                            this._time = duration;\n                                        } else if (this._time < 0) {\n                                            this._time = 0;\n                                        }\n                                    }\n                                    if (this._easeType) {\n                                        r = this._time / duration;\n                                        type = this._easeType;\n                                        pow = this._easePower;\n                                        if (type === 1 || type === 3 && r >= .5) {\n                                            r = 1 - r;\n                                        }\n                                        if (type === 3) {\n                                            r *= 2;\n                                        }\n                                        if (pow === 1) {\n                                            r *= r;\n                                        } else if (pow === 2) {\n                                            r *= r * r;\n                                        } else if (pow === 3) {\n                                            r *= r * r * r;\n                                        } else if (pow === 4) {\n                                            r *= r * r * r * r;\n                                        }\n                                        if (type === 1) {\n                                            this.ratio = 1 - r;\n                                        } else if (type === 2) {\n                                            this.ratio = r;\n                                        } else if (this._time / duration < .5) {\n                                            this.ratio = r / 2;\n                                        } else {\n                                            this.ratio = 1 - r / 2;\n                                        }\n                                    } else {\n                                        this.ratio = this._ease.getRatio(this._time / duration);\n                                    }\n                                }\n                                if (prevTime === this._time && !force && prevCycle === this._cycle) {\n                                    if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n                                        this._callback(\"onUpdate\");\n                                    }\n                                    return;\n                                } else if (!this._initted) {\n                                    this._init();\n                                    if (!this._initted || this._gc) {\n                                        return;\n                                    } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n                                        this._time = prevTime;\n                                        this._totalTime = prevTotalTime;\n                                        this._rawPrevTime = prevRawPrevTime;\n                                        this._cycle = prevCycle;\n                                        TweenLiteInternals.lazyTweens.push(this);\n                                        this._lazy = [ time, suppressEvents ];\n                                        return;\n                                    }\n                                    if (this._time && !isComplete) {\n                                        this.ratio = this._ease.getRatio(this._time / duration);\n                                    } else if (isComplete && this._ease._calcEnd) {\n                                        this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n                                    }\n                                }\n                                if (this._lazy !== false) {\n                                    this._lazy = false;\n                                }\n                                if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n                                    this._active = true;\n                                }\n                                if (prevTotalTime === 0) {\n                                    if (this._initted === 2 && time > 0) {\n                                        this._init();\n                                    }\n                                    if (this._startAt) {\n                                        if (time >= 0) {\n                                            this._startAt.render(time, suppressEvents, force);\n                                        } else if (!callback) {\n                                            callback = \"_dummyGS\";\n                                        }\n                                    }\n                                    if (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n                                        this._callback(\"onStart\");\n                                    }\n                                }\n                                pt = this._firstPT;\n                                while (pt) {\n                                    if (pt.f) {\n                                        pt.t[pt.p](pt.c * this.ratio + pt.s);\n                                    } else {\n                                        pt.t[pt.p] = pt.c * this.ratio + pt.s;\n                                    }\n                                    pt = pt._next;\n                                }\n                                if (this._onUpdate) {\n                                    if (time < 0) if (this._startAt && this._startTime) {\n                                        this._startAt.render(time, suppressEvents, force);\n                                    }\n                                    if (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n                                        this._callback(\"onUpdate\");\n                                    }\n                                }\n                                if (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n                                    this._callback(\"onRepeat\");\n                                }\n                                if (callback) if (!this._gc || force) {\n                                    if (time < 0 && this._startAt && !this._onUpdate && this._startTime) {\n                                        this._startAt.render(time, suppressEvents, force);\n                                    }\n                                    if (isComplete) {\n                                        if (this._timeline.autoRemoveChildren) {\n                                            this._enabled(false, false);\n                                        }\n                                        this._active = false;\n                                    }\n                                    if (!suppressEvents && this.vars[callback]) {\n                                        this._callback(callback);\n                                    }\n                                    if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n                                        this._rawPrevTime = 0;\n                                    }\n                                }\n                            };\n                            TweenMax.to = function(target, duration, vars) {\n                                return new TweenMax(target, duration, vars);\n                            };\n                            TweenMax.from = function(target, duration, vars) {\n                                vars.runBackwards = true;\n                                vars.immediateRender = vars.immediateRender != false;\n                                return new TweenMax(target, duration, vars);\n                            };\n                            TweenMax.fromTo = function(target, duration, fromVars, toVars) {\n                                toVars.startAt = fromVars;\n                                toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                                return new TweenMax(target, duration, toVars);\n                            };\n                            TweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                                stagger = stagger || 0;\n                                var delay = 0, a = [], finalComplete = function() {\n                                    if (vars.onComplete) {\n                                        vars.onComplete.apply(vars.onCompleteScope || this, arguments);\n                                    }\n                                    onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n                                }, cycle = vars.cycle, fromCycle = vars.startAt && vars.startAt.cycle, l, copy, i, p;\n                                if (!_isArray(targets)) {\n                                    if (typeof targets === \"string\") {\n                                        targets = TweenLite.selector(targets) || targets;\n                                    }\n                                    if (_isSelector(targets)) {\n                                        targets = _slice(targets);\n                                    }\n                                }\n                                targets = targets || [];\n                                if (stagger < 0) {\n                                    targets = _slice(targets);\n                                    targets.reverse();\n                                    stagger *= -1;\n                                }\n                                l = targets.length - 1;\n                                for (i = 0; i <= l; i++) {\n                                    copy = {};\n                                    for (p in vars) {\n                                        copy[p] = vars[p];\n                                    }\n                                    if (cycle) {\n                                        _applyCycle(copy, targets, i);\n                                        if (copy.duration != null) {\n                                            duration = copy.duration;\n                                            delete copy.duration;\n                                        }\n                                    }\n                                    if (fromCycle) {\n                                        fromCycle = copy.startAt = {};\n                                        for (p in vars.startAt) {\n                                            fromCycle[p] = vars.startAt[p];\n                                        }\n                                        _applyCycle(copy.startAt, targets, i);\n                                    }\n                                    copy.delay = delay + (copy.delay || 0);\n                                    if (i === l && onCompleteAll) {\n                                        copy.onComplete = finalComplete;\n                                    }\n                                    a[i] = new TweenMax(targets[i], duration, copy);\n                                    delay += stagger;\n                                }\n                                return a;\n                            };\n                            TweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                                vars.runBackwards = true;\n                                vars.immediateRender = vars.immediateRender != false;\n                                return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                            };\n                            TweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                                toVars.startAt = fromVars;\n                                toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                                return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                            };\n                            TweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n                                return new TweenMax(callback, 0, {\n                                    delay: delay,\n                                    onComplete: callback,\n                                    onCompleteParams: params,\n                                    callbackScope: scope,\n                                    onReverseComplete: callback,\n                                    onReverseCompleteParams: params,\n                                    immediateRender: false,\n                                    useFrames: useFrames,\n                                    overwrite: 0\n                                });\n                            };\n                            TweenMax.set = function(target, vars) {\n                                return new TweenMax(target, 0, vars);\n                            };\n                            TweenMax.isTweening = function(target) {\n                                return TweenLite.getTweensOf(target, true).length > 0;\n                            };\n                            var _getChildrenOf = function(timeline, includeTimelines) {\n                                var a = [], cnt = 0, tween = timeline._first;\n                                while (tween) {\n                                    if (tween instanceof TweenLite) {\n                                        a[cnt++] = tween;\n                                    } else {\n                                        if (includeTimelines) {\n                                            a[cnt++] = tween;\n                                        }\n                                        a = a.concat(_getChildrenOf(tween, includeTimelines));\n                                        cnt = a.length;\n                                    }\n                                    tween = tween._next;\n                                }\n                                return a;\n                            }, getAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n                                return _getChildrenOf(Animation._rootTimeline, includeTimelines).concat(_getChildrenOf(Animation._rootFramesTimeline, includeTimelines));\n                            };\n                            TweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n                                if (tweens == null) {\n                                    tweens = true;\n                                }\n                                if (delayedCalls == null) {\n                                    delayedCalls = true;\n                                }\n                                var a = getAllTweens(timelines != false), l = a.length, allTrue = tweens && delayedCalls && timelines, isDC, tween, i;\n                                for (i = 0; i < l; i++) {\n                                    tween = a[i];\n                                    if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n                                        if (complete) {\n                                            tween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n                                        } else {\n                                            tween._enabled(false, false);\n                                        }\n                                    }\n                                }\n                            };\n                            TweenMax.killChildTweensOf = function(parent, complete) {\n                                if (parent == null) {\n                                    return;\n                                }\n                                var tl = TweenLiteInternals.tweenLookup, a, curParent, p, i, l;\n                                if (typeof parent === \"string\") {\n                                    parent = TweenLite.selector(parent) || parent;\n                                }\n                                if (_isSelector(parent)) {\n                                    parent = _slice(parent);\n                                }\n                                if (_isArray(parent)) {\n                                    i = parent.length;\n                                    while (--i > -1) {\n                                        TweenMax.killChildTweensOf(parent[i], complete);\n                                    }\n                                    return;\n                                }\n                                a = [];\n                                for (p in tl) {\n                                    curParent = tl[p].target.parentNode;\n                                    while (curParent) {\n                                        if (curParent === parent) {\n                                            a = a.concat(tl[p].tweens);\n                                        }\n                                        curParent = curParent.parentNode;\n                                    }\n                                }\n                                l = a.length;\n                                for (i = 0; i < l; i++) {\n                                    if (complete) {\n                                        a[i].totalTime(a[i].totalDuration());\n                                    }\n                                    a[i]._enabled(false, false);\n                                }\n                            };\n                            var _changePause = function(pause, tweens, delayedCalls, timelines) {\n                                tweens = tweens !== false;\n                                delayedCalls = delayedCalls !== false;\n                                timelines = timelines !== false;\n                                var a = getAllTweens(timelines), allTrue = tweens && delayedCalls && timelines, i = a.length, isDC, tween;\n                                while (--i > -1) {\n                                    tween = a[i];\n                                    if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n                                        tween.paused(pause);\n                                    }\n                                }\n                            };\n                            TweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n                                _changePause(true, tweens, delayedCalls, timelines);\n                            };\n                            TweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n                                _changePause(false, tweens, delayedCalls, timelines);\n                            };\n                            TweenMax.globalTimeScale = function(value) {\n                                var tl = Animation._rootTimeline, t = TweenLite.ticker.time;\n                                if (!arguments.length) {\n                                    return tl._timeScale;\n                                }\n                                value = value || _tinyNum;\n                                tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n                                tl = Animation._rootFramesTimeline;\n                                t = TweenLite.ticker.frame;\n                                tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n                                tl._timeScale = Animation._rootTimeline._timeScale = value;\n                                return value;\n                            };\n                            p.progress = function(value, suppressEvents) {\n                                return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n                            };\n                            p.totalProgress = function(value, suppressEvents) {\n                                return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n                            };\n                            p.time = function(value, suppressEvents) {\n                                if (!arguments.length) {\n                                    return this._time;\n                                }\n                                if (this._dirty) {\n                                    this.totalDuration();\n                                }\n                                if (value > this._duration) {\n                                    value = this._duration;\n                                }\n                                if (this._yoyo && (this._cycle & 1) !== 0) {\n                                    value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n                                } else if (this._repeat !== 0) {\n                                    value += this._cycle * (this._duration + this._repeatDelay);\n                                }\n                                return this.totalTime(value, suppressEvents);\n                            };\n                            p.duration = function(value) {\n                                if (!arguments.length) {\n                                    return this._duration;\n                                }\n                                return Animation.prototype.duration.call(this, value);\n                            };\n                            p.totalDuration = function(value) {\n                                if (!arguments.length) {\n                                    if (this._dirty) {\n                                        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n                                        this._dirty = false;\n                                    }\n                                    return this._totalDuration;\n                                }\n                                return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));\n                            };\n                            p.repeat = function(value) {\n                                if (!arguments.length) {\n                                    return this._repeat;\n                                }\n                                this._repeat = value;\n                                return this._uncache(true);\n                            };\n                            p.repeatDelay = function(value) {\n                                if (!arguments.length) {\n                                    return this._repeatDelay;\n                                }\n                                this._repeatDelay = value;\n                                return this._uncache(true);\n                            };\n                            p.yoyo = function(value) {\n                                if (!arguments.length) {\n                                    return this._yoyo;\n                                }\n                                this._yoyo = value;\n                                return this;\n                            };\n                            return TweenMax;\n                        }, true);\n                        _gsScope._gsDefine(\"TimelineLite\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n                            var TimelineLite = function(vars) {\n                                SimpleTimeline.call(this, vars);\n                                this._labels = {};\n                                this.autoRemoveChildren = this.vars.autoRemoveChildren === true;\n                                this.smoothChildTiming = this.vars.smoothChildTiming === true;\n                                this._sortChildren = true;\n                                this._onUpdate = this.vars.onUpdate;\n                                var v = this.vars, val, p;\n                                for (p in v) {\n                                    val = v[p];\n                                    if (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n                                        v[p] = this._swapSelfInParams(val);\n                                    }\n                                }\n                                if (_isArray(v.tweens)) {\n                                    this.add(v.tweens, 0, v.align, v.stagger);\n                                }\n                            }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _internals = TimelineLite._internals = {}, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _globals = _gsScope._gsDefine.globals, _copy = function(vars) {\n                                var copy = {}, p;\n                                for (p in vars) {\n                                    copy[p] = vars[p];\n                                }\n                                return copy;\n                            }, _applyCycle = function(vars, targets, i) {\n                                var alt = vars.cycle, p, val;\n                                for (p in alt) {\n                                    val = alt[p];\n                                    vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n                                }\n                                delete vars.cycle;\n                            }, _pauseCallback = _internals.pauseCallback = function() {}, _slice = function(a) {\n                                var b = [], l = a.length, i;\n                                for (i = 0; i !== l; b.push(a[i++])) ;\n                                return b;\n                            }, p = TimelineLite.prototype = new SimpleTimeline();\n                            TimelineLite.version = \"1.18.5\";\n                            p.constructor = TimelineLite;\n                            p.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n                            p.to = function(target, duration, vars, position) {\n                                var Engine = vars.repeat && _globals.TweenMax || TweenLite;\n                                return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);\n                            };\n                            p.from = function(target, duration, vars, position) {\n                                return this.add((vars.repeat && _globals.TweenMax || TweenLite).from(target, duration, vars), position);\n                            };\n                            p.fromTo = function(target, duration, fromVars, toVars, position) {\n                                var Engine = toVars.repeat && _globals.TweenMax || TweenLite;\n                                return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n                            };\n                            p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                                var tl = new TimelineLite({\n                                    onComplete: onCompleteAll,\n                                    onCompleteParams: onCompleteAllParams,\n                                    callbackScope: onCompleteAllScope,\n                                    smoothChildTiming: this.smoothChildTiming\n                                }), cycle = vars.cycle, copy, i;\n                                if (typeof targets === \"string\") {\n                                    targets = TweenLite.selector(targets) || targets;\n                                }\n                                targets = targets || [];\n                                if (_isSelector(targets)) {\n                                    targets = _slice(targets);\n                                }\n                                stagger = stagger || 0;\n                                if (stagger < 0) {\n                                    targets = _slice(targets);\n                                    targets.reverse();\n                                    stagger *= -1;\n                                }\n                                for (i = 0; i < targets.length; i++) {\n                                    copy = _copy(vars);\n                                    if (copy.startAt) {\n                                        copy.startAt = _copy(copy.startAt);\n                                        if (copy.startAt.cycle) {\n                                            _applyCycle(copy.startAt, targets, i);\n                                        }\n                                    }\n                                    if (cycle) {\n                                        _applyCycle(copy, targets, i);\n                                        if (copy.duration != null) {\n                                            duration = copy.duration;\n                                            delete copy.duration;\n                                        }\n                                    }\n                                    tl.to(targets[i], duration, copy, i * stagger);\n                                }\n                                return this.add(tl, position);\n                            };\n                            p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                                vars.immediateRender = vars.immediateRender != false;\n                                vars.runBackwards = true;\n                                return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                            };\n                            p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                                toVars.startAt = fromVars;\n                                toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                                return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                            };\n                            p.call = function(callback, params, scope, position) {\n                                return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n                            };\n                            p.set = function(target, vars, position) {\n                                position = this._parseTimeOrLabel(position, 0, true);\n                                if (vars.immediateRender == null) {\n                                    vars.immediateRender = position === this._time && !this._paused;\n                                }\n                                return this.add(new TweenLite(target, 0, vars), position);\n                            };\n                            TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n                                vars = vars || {};\n                                if (vars.smoothChildTiming == null) {\n                                    vars.smoothChildTiming = true;\n                                }\n                                var tl = new TimelineLite(vars), root = tl._timeline, tween, next;\n                                if (ignoreDelayedCalls == null) {\n                                    ignoreDelayedCalls = true;\n                                }\n                                root._remove(tl, true);\n                                tl._startTime = 0;\n                                tl._rawPrevTime = tl._time = tl._totalTime = root._time;\n                                tween = root._first;\n                                while (tween) {\n                                    next = tween._next;\n                                    if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n                                        tl.add(tween, tween._startTime - tween._delay);\n                                    }\n                                    tween = next;\n                                }\n                                root.add(tl, 0);\n                                return tl;\n                            };\n                            p.add = function(value, position, align, stagger) {\n                                var curTime, l, i, child, tl, beforeRawTime;\n                                if (typeof position !== \"number\") {\n                                    position = this._parseTimeOrLabel(position, 0, true, value);\n                                }\n                                if (!(value instanceof Animation)) {\n                                    if (value instanceof Array || value && value.push && _isArray(value)) {\n                                        align = align || \"normal\";\n                                        stagger = stagger || 0;\n                                        curTime = position;\n                                        l = value.length;\n                                        for (i = 0; i < l; i++) {\n                                            if (_isArray(child = value[i])) {\n                                                child = new TimelineLite({\n                                                    tweens: child\n                                                });\n                                            }\n                                            this.add(child, curTime);\n                                            if (typeof child !== \"string\" && typeof child !== \"function\") {\n                                                if (align === \"sequence\") {\n                                                    curTime = child._startTime + child.totalDuration() / child._timeScale;\n                                                } else if (align === \"start\") {\n                                                    child._startTime -= child.delay();\n                                                }\n                                            }\n                                            curTime += stagger;\n                                        }\n                                        return this._uncache(true);\n                                    } else if (typeof value === \"string\") {\n                                        return this.addLabel(value, position);\n                                    } else if (typeof value === \"function\") {\n                                        value = TweenLite.delayedCall(0, value);\n                                    } else {\n                                        throw \"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\";\n                                    }\n                                }\n                                SimpleTimeline.prototype.add.call(this, value, position);\n                                if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n                                    tl = this;\n                                    beforeRawTime = tl.rawTime() > value._startTime;\n                                    while (tl._timeline) {\n                                        if (beforeRawTime && tl._timeline.smoothChildTiming) {\n                                            tl.totalTime(tl._totalTime, true);\n                                        } else if (tl._gc) {\n                                            tl._enabled(true, false);\n                                        }\n                                        tl = tl._timeline;\n                                    }\n                                }\n                                return this;\n                            };\n                            p.remove = function(value) {\n                                if (value instanceof Animation) {\n                                    this._remove(value, false);\n                                    var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline;\n                                    value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale;\n                                    return this;\n                                } else if (value instanceof Array || value && value.push && _isArray(value)) {\n                                    var i = value.length;\n                                    while (--i > -1) {\n                                        this.remove(value[i]);\n                                    }\n                                    return this;\n                                } else if (typeof value === \"string\") {\n                                    return this.removeLabel(value);\n                                }\n                                return this.kill(null, value);\n                            };\n                            p._remove = function(tween, skipDisable) {\n                                SimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n                                var last = this._last;\n                                if (!last) {\n                                    this._time = this._totalTime = this._duration = this._totalDuration = 0;\n                                } else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n                                    this._time = this.duration();\n                                    this._totalTime = this._totalDuration;\n                                }\n                                return this;\n                            };\n                            p.append = function(value, offsetOrLabel) {\n                                return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n                            };\n                            p.insert = p.insertMultiple = function(value, position, align, stagger) {\n                                return this.add(value, position || 0, align, stagger);\n                            };\n                            p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n                                return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n                            };\n                            p.addLabel = function(label, position) {\n                                this._labels[label] = this._parseTimeOrLabel(position);\n                                return this;\n                            };\n                            p.addPause = function(position, callback, params, scope) {\n                                var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n                                t.vars.onComplete = t.vars.onReverseComplete = callback;\n                                t.data = \"isPause\";\n                                this._hasPause = true;\n                                return this.add(t, position);\n                            };\n                            p.removeLabel = function(label) {\n                                delete this._labels[label];\n                                return this;\n                            };\n                            p.getLabelTime = function(label) {\n                                return this._labels[label] != null ? this._labels[label] : -1;\n                            };\n                            p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n                                var i;\n                                if (ignore instanceof Animation && ignore.timeline === this) {\n                                    this.remove(ignore);\n                                } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {\n                                    i = ignore.length;\n                                    while (--i > -1) {\n                                        if (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n                                            this.remove(ignore[i]);\n                                        }\n                                    }\n                                }\n                                if (typeof offsetOrLabel === \"string\") {\n                                    return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === \"number\" && this._labels[offsetOrLabel] == null ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n                                }\n                                offsetOrLabel = offsetOrLabel || 0;\n                                if (typeof timeOrLabel === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {\n                                    i = timeOrLabel.indexOf(\"=\");\n                                    if (i === -1) {\n                                        if (this._labels[timeOrLabel] == null) {\n                                            return appendIfAbsent ? this._labels[timeOrLabel] = this.duration() + offsetOrLabel : offsetOrLabel;\n                                        }\n                                        return this._labels[timeOrLabel] + offsetOrLabel;\n                                    }\n                                    offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + \"1\", 10) * Number(timeOrLabel.substr(i + 1));\n                                    timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : this.duration();\n                                } else if (timeOrLabel == null) {\n                                    timeOrLabel = this.duration();\n                                }\n                                return Number(timeOrLabel) + offsetOrLabel;\n                            };\n                            p.seek = function(position, suppressEvents) {\n                                return this.totalTime(typeof position === \"number\" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);\n                            };\n                            p.stop = function() {\n                                return this.paused(true);\n                            };\n                            p.gotoAndPlay = function(position, suppressEvents) {\n                                return this.play(position, suppressEvents);\n                            };\n                            p.gotoAndStop = function(position, suppressEvents) {\n                                return this.pause(position, suppressEvents);\n                            };\n                            p.render = function(time, suppressEvents, force) {\n                                if (this._gc) {\n                                    this._enabled(true, false);\n                                }\n                                var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevStart = this._startTime, prevTimeScale = this._timeScale, prevPaused = this._paused, tween, isComplete, next, callback, internalForce, pauseTween, curTime;\n                                if (time >= totalDur - 1e-7) {\n                                    this._totalTime = this._time = totalDur;\n                                    if (!this._reversed) if (!this._hasPausedChild()) {\n                                        isComplete = true;\n                                        callback = \"onComplete\";\n                                        internalForce = !!this._timeline.autoRemoveChildren;\n                                        if (this._duration === 0) if (time <= 0 && time >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n                                            internalForce = true;\n                                            if (this._rawPrevTime > _tinyNum) {\n                                                callback = \"onReverseComplete\";\n                                            }\n                                        }\n                                    }\n                                    this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                    time = totalDur + 1e-4;\n                                } else if (time < 1e-7) {\n                                    this._totalTime = this._time = 0;\n                                    if (prevTime !== 0 || this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || time < 0 && this._rawPrevTime >= 0)) {\n                                        callback = \"onReverseComplete\";\n                                        isComplete = this._reversed;\n                                    }\n                                    if (time < 0) {\n                                        this._active = false;\n                                        if (this._timeline.autoRemoveChildren && this._reversed) {\n                                            internalForce = isComplete = true;\n                                            callback = \"onReverseComplete\";\n                                        } else if (this._rawPrevTime >= 0 && this._first) {\n                                            internalForce = true;\n                                        }\n                                        this._rawPrevTime = time;\n                                    } else {\n                                        this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                        if (time === 0 && isComplete) {\n                                            tween = this._first;\n                                            while (tween && tween._startTime === 0) {\n                                                if (!tween._duration) {\n                                                    isComplete = false;\n                                                }\n                                                tween = tween._next;\n                                            }\n                                        }\n                                        time = 0;\n                                        if (!this._initted) {\n                                            internalForce = true;\n                                        }\n                                    }\n                                } else {\n                                    if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n                                        if (time >= prevTime) {\n                                            tween = this._first;\n                                            while (tween && tween._startTime <= time && !pauseTween) {\n                                                if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n                                                    pauseTween = tween;\n                                                }\n                                                tween = tween._next;\n                                            }\n                                        } else {\n                                            tween = this._last;\n                                            while (tween && tween._startTime >= time && !pauseTween) {\n                                                if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n                                                    pauseTween = tween;\n                                                }\n                                                tween = tween._prev;\n                                            }\n                                        }\n                                        if (pauseTween) {\n                                            this._time = time = pauseTween._startTime;\n                                            this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n                                        }\n                                    }\n                                    this._totalTime = this._time = this._rawPrevTime = time;\n                                }\n                                if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n                                    return;\n                                } else if (!this._initted) {\n                                    this._initted = true;\n                                }\n                                if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n                                    this._active = true;\n                                }\n                                if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n                                    this._callback(\"onStart\");\n                                }\n                                curTime = this._time;\n                                if (curTime >= prevTime) {\n                                    tween = this._first;\n                                    while (tween) {\n                                        next = tween._next;\n                                        if (curTime !== this._time || this._paused && !prevPaused) {\n                                            break;\n                                        } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {\n                                            if (pauseTween === tween) {\n                                                this.pause();\n                                            }\n                                            if (!tween._reversed) {\n                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            } else {\n                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            }\n                                        }\n                                        tween = next;\n                                    }\n                                } else {\n                                    tween = this._last;\n                                    while (tween) {\n                                        next = tween._prev;\n                                        if (curTime !== this._time || this._paused && !prevPaused) {\n                                            break;\n                                        } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n                                            if (pauseTween === tween) {\n                                                pauseTween = tween._prev;\n                                                while (pauseTween && pauseTween.endTime() > this._time) {\n                                                    pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n                                                    pauseTween = pauseTween._prev;\n                                                }\n                                                pauseTween = null;\n                                                this.pause();\n                                            }\n                                            if (!tween._reversed) {\n                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            } else {\n                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            }\n                                        }\n                                        tween = next;\n                                    }\n                                }\n                                if (this._onUpdate) if (!suppressEvents) {\n                                    if (_lazyTweens.length) {\n                                        _lazyRender();\n                                    }\n                                    this._callback(\"onUpdate\");\n                                }\n                                if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n                                    if (isComplete) {\n                                        if (_lazyTweens.length) {\n                                            _lazyRender();\n                                        }\n                                        if (this._timeline.autoRemoveChildren) {\n                                            this._enabled(false, false);\n                                        }\n                                        this._active = false;\n                                    }\n                                    if (!suppressEvents && this.vars[callback]) {\n                                        this._callback(callback);\n                                    }\n                                }\n                            };\n                            p._hasPausedChild = function() {\n                                var tween = this._first;\n                                while (tween) {\n                                    if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {\n                                        return true;\n                                    }\n                                    tween = tween._next;\n                                }\n                                return false;\n                            };\n                            p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n                                ignoreBeforeTime = ignoreBeforeTime || -9999999999;\n                                var a = [], tween = this._first, cnt = 0;\n                                while (tween) {\n                                    if (tween._startTime < ignoreBeforeTime) {} else if (tween instanceof TweenLite) {\n                                        if (tweens !== false) {\n                                            a[cnt++] = tween;\n                                        }\n                                    } else {\n                                        if (timelines !== false) {\n                                            a[cnt++] = tween;\n                                        }\n                                        if (nested !== false) {\n                                            a = a.concat(tween.getChildren(true, tweens, timelines));\n                                            cnt = a.length;\n                                        }\n                                    }\n                                    tween = tween._next;\n                                }\n                                return a;\n                            };\n                            p.getTweensOf = function(target, nested) {\n                                var disabled = this._gc, a = [], cnt = 0, tweens, i;\n                                if (disabled) {\n                                    this._enabled(true, true);\n                                }\n                                tweens = TweenLite.getTweensOf(target);\n                                i = tweens.length;\n                                while (--i > -1) {\n                                    if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {\n                                        a[cnt++] = tweens[i];\n                                    }\n                                }\n                                if (disabled) {\n                                    this._enabled(false, true);\n                                }\n                                return a;\n                            };\n                            p.recent = function() {\n                                return this._recent;\n                            };\n                            p._contains = function(tween) {\n                                var tl = tween.timeline;\n                                while (tl) {\n                                    if (tl === this) {\n                                        return true;\n                                    }\n                                    tl = tl.timeline;\n                                }\n                                return false;\n                            };\n                            p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n                                ignoreBeforeTime = ignoreBeforeTime || 0;\n                                var tween = this._first, labels = this._labels, p;\n                                while (tween) {\n                                    if (tween._startTime >= ignoreBeforeTime) {\n                                        tween._startTime += amount;\n                                    }\n                                    tween = tween._next;\n                                }\n                                if (adjustLabels) {\n                                    for (p in labels) {\n                                        if (labels[p] >= ignoreBeforeTime) {\n                                            labels[p] += amount;\n                                        }\n                                    }\n                                }\n                                return this._uncache(true);\n                            };\n                            p._kill = function(vars, target) {\n                                if (!vars && !target) {\n                                    return this._enabled(false, false);\n                                }\n                                var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target), i = tweens.length, changed = false;\n                                while (--i > -1) {\n                                    if (tweens[i]._kill(vars, target)) {\n                                        changed = true;\n                                    }\n                                }\n                                return changed;\n                            };\n                            p.clear = function(labels) {\n                                var tweens = this.getChildren(false, true, true), i = tweens.length;\n                                this._time = this._totalTime = 0;\n                                while (--i > -1) {\n                                    tweens[i]._enabled(false, false);\n                                }\n                                if (labels !== false) {\n                                    this._labels = {};\n                                }\n                                return this._uncache(true);\n                            };\n                            p.invalidate = function() {\n                                var tween = this._first;\n                                while (tween) {\n                                    tween.invalidate();\n                                    tween = tween._next;\n                                }\n                                return Animation.prototype.invalidate.call(this);\n                            };\n                            p._enabled = function(enabled, ignoreTimeline) {\n                                if (enabled === this._gc) {\n                                    var tween = this._first;\n                                    while (tween) {\n                                        tween._enabled(enabled, true);\n                                        tween = tween._next;\n                                    }\n                                }\n                                return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n                            };\n                            p.totalTime = function(time, suppressEvents, uncapped) {\n                                this._forcingPlayhead = true;\n                                var val = Animation.prototype.totalTime.apply(this, arguments);\n                                this._forcingPlayhead = false;\n                                return val;\n                            };\n                            p.duration = function(value) {\n                                if (!arguments.length) {\n                                    if (this._dirty) {\n                                        this.totalDuration();\n                                    }\n                                    return this._duration;\n                                }\n                                if (this.duration() !== 0 && value !== 0) {\n                                    this.timeScale(this._duration / value);\n                                }\n                                return this;\n                            };\n                            p.totalDuration = function(value) {\n                                if (!arguments.length) {\n                                    if (this._dirty) {\n                                        var max = 0, tween = this._last, prevStart = 999999999999, prev, end;\n                                        while (tween) {\n                                            prev = tween._prev;\n                                            if (tween._dirty) {\n                                                tween.totalDuration();\n                                            }\n                                            if (tween._startTime > prevStart && this._sortChildren && !tween._paused) {\n                                                this.add(tween, tween._startTime - tween._delay);\n                                            } else {\n                                                prevStart = tween._startTime;\n                                            }\n                                            if (tween._startTime < 0 && !tween._paused) {\n                                                max -= tween._startTime;\n                                                if (this._timeline.smoothChildTiming) {\n                                                    this._startTime += tween._startTime / this._timeScale;\n                                                }\n                                                this.shiftChildren(-tween._startTime, false, -9999999999);\n                                                prevStart = 0;\n                                            }\n                                            end = tween._startTime + tween._totalDuration / tween._timeScale;\n                                            if (end > max) {\n                                                max = end;\n                                            }\n                                            tween = prev;\n                                        }\n                                        this._duration = this._totalDuration = max;\n                                        this._dirty = false;\n                                    }\n                                    return this._totalDuration;\n                                }\n                                return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;\n                            };\n                            p.paused = function(value) {\n                                if (!value) {\n                                    var tween = this._first, time = this._time;\n                                    while (tween) {\n                                        if (tween._startTime === time && tween.data === \"isPause\") {\n                                            tween._rawPrevTime = 0;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                }\n                                return Animation.prototype.paused.apply(this, arguments);\n                            };\n                            p.usesFrames = function() {\n                                var tl = this._timeline;\n                                while (tl._timeline) {\n                                    tl = tl._timeline;\n                                }\n                                return tl === Animation._rootFramesTimeline;\n                            };\n                            p.rawTime = function() {\n                                return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n                            };\n                            return TimelineLite;\n                        }, true);\n                        _gsScope._gsDefine(\"TimelineMax\", [ \"TimelineLite\", \"TweenLite\", \"easing.Ease\" ], function(TimelineLite, TweenLite, Ease) {\n                            var TimelineMax = function(vars) {\n                                TimelineLite.call(this, vars);\n                                this._repeat = this.vars.repeat || 0;\n                                this._repeatDelay = this.vars.repeatDelay || 0;\n                                this._cycle = 0;\n                                this._yoyo = this.vars.yoyo === true;\n                                this._dirty = true;\n                            }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _easeNone = new Ease(null, null, 1, 0), p = TimelineMax.prototype = new TimelineLite();\n                            p.constructor = TimelineMax;\n                            p.kill()._gc = false;\n                            TimelineMax.version = \"1.18.5\";\n                            p.invalidate = function() {\n                                this._yoyo = this.vars.yoyo === true;\n                                this._repeat = this.vars.repeat || 0;\n                                this._repeatDelay = this.vars.repeatDelay || 0;\n                                this._uncache(true);\n                                return TimelineLite.prototype.invalidate.call(this);\n                            };\n                            p.addCallback = function(callback, position, params, scope) {\n                                return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n                            };\n                            p.removeCallback = function(callback, position) {\n                                if (callback) {\n                                    if (position == null) {\n                                        this._kill(null, callback);\n                                    } else {\n                                        var a = this.getTweensOf(callback, false), i = a.length, time = this._parseTimeOrLabel(position);\n                                        while (--i > -1) {\n                                            if (a[i]._startTime === time) {\n                                                a[i]._enabled(false, false);\n                                            }\n                                        }\n                                    }\n                                }\n                                return this;\n                            };\n                            p.removePause = function(position) {\n                                return this.removeCallback(TimelineLite._internals.pauseCallback, position);\n                            };\n                            p.tweenTo = function(position, vars) {\n                                vars = vars || {};\n                                var copy = {\n                                    ease: _easeNone,\n                                    useFrames: this.usesFrames(),\n                                    immediateRender: false\n                                }, duration, p, t;\n                                for (p in vars) {\n                                    copy[p] = vars[p];\n                                }\n                                copy.time = this._parseTimeOrLabel(position);\n                                duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || .001;\n                                t = new TweenLite(this, duration, copy);\n                                copy.onStart = function() {\n                                    t.target.paused(true);\n                                    if (t.vars.time !== t.target.time() && duration === t.duration()) {\n                                        t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale);\n                                    }\n                                    if (vars.onStart) {\n                                        t._callback(\"onStart\");\n                                    }\n                                };\n                                return t;\n                            };\n                            p.tweenFromTo = function(fromPosition, toPosition, vars) {\n                                vars = vars || {};\n                                fromPosition = this._parseTimeOrLabel(fromPosition);\n                                vars.startAt = {\n                                    onComplete: this.seek,\n                                    onCompleteParams: [ fromPosition ],\n                                    callbackScope: this\n                                };\n                                vars.immediateRender = vars.immediateRender !== false;\n                                var t = this.tweenTo(toPosition, vars);\n                                return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || .001);\n                            };\n                            p.render = function(time, suppressEvents, force) {\n                                if (this._gc) {\n                                    this._enabled(true, false);\n                                }\n                                var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), dur = this._duration, prevTime = this._time, prevTotalTime = this._totalTime, prevStart = this._startTime, prevTimeScale = this._timeScale, prevRawPrevTime = this._rawPrevTime, prevPaused = this._paused, prevCycle = this._cycle, tween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n                                if (time >= totalDur - 1e-7) {\n                                    if (!this._locked) {\n                                        this._totalTime = totalDur;\n                                        this._cycle = this._repeat;\n                                    }\n                                    if (!this._reversed) if (!this._hasPausedChild()) {\n                                        isComplete = true;\n                                        callback = \"onComplete\";\n                                        internalForce = !!this._timeline.autoRemoveChildren;\n                                        if (this._duration === 0) if (time <= 0 && time >= -1e-7 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n                                            internalForce = true;\n                                            if (prevRawPrevTime > _tinyNum) {\n                                                callback = \"onReverseComplete\";\n                                            }\n                                        }\n                                    }\n                                    this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                    if (this._yoyo && (this._cycle & 1) !== 0) {\n                                        this._time = time = 0;\n                                    } else {\n                                        this._time = dur;\n                                        time = dur + 1e-4;\n                                    }\n                                } else if (time < 1e-7) {\n                                    if (!this._locked) {\n                                        this._totalTime = this._cycle = 0;\n                                    }\n                                    this._time = 0;\n                                    if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !this._locked) {\n                                        callback = \"onReverseComplete\";\n                                        isComplete = this._reversed;\n                                    }\n                                    if (time < 0) {\n                                        this._active = false;\n                                        if (this._timeline.autoRemoveChildren && this._reversed) {\n                                            internalForce = isComplete = true;\n                                            callback = \"onReverseComplete\";\n                                        } else if (prevRawPrevTime >= 0 && this._first) {\n                                            internalForce = true;\n                                        }\n                                        this._rawPrevTime = time;\n                                    } else {\n                                        this._rawPrevTime = dur || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                        if (time === 0 && isComplete) {\n                                            tween = this._first;\n                                            while (tween && tween._startTime === 0) {\n                                                if (!tween._duration) {\n                                                    isComplete = false;\n                                                }\n                                                tween = tween._next;\n                                            }\n                                        }\n                                        time = 0;\n                                        if (!this._initted) {\n                                            internalForce = true;\n                                        }\n                                    }\n                                } else {\n                                    if (dur === 0 && prevRawPrevTime < 0) {\n                                        internalForce = true;\n                                    }\n                                    this._time = this._rawPrevTime = time;\n                                    if (!this._locked) {\n                                        this._totalTime = time;\n                                        if (this._repeat !== 0) {\n                                            cycleDuration = dur + this._repeatDelay;\n                                            this._cycle = this._totalTime / cycleDuration >> 0;\n                                            if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n                                                this._cycle--;\n                                            }\n                                            this._time = this._totalTime - this._cycle * cycleDuration;\n                                            if (this._yoyo) if ((this._cycle & 1) !== 0) {\n                                                this._time = dur - this._time;\n                                            }\n                                            if (this._time > dur) {\n                                                this._time = dur;\n                                                time = dur + 1e-4;\n                                            } else if (this._time < 0) {\n                                                this._time = time = 0;\n                                            } else {\n                                                time = this._time;\n                                            }\n                                        }\n                                    }\n                                    if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n                                        time = this._time;\n                                        if (time >= prevTime) {\n                                            tween = this._first;\n                                            while (tween && tween._startTime <= time && !pauseTween) {\n                                                if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n                                                    pauseTween = tween;\n                                                }\n                                                tween = tween._next;\n                                            }\n                                        } else {\n                                            tween = this._last;\n                                            while (tween && tween._startTime >= time && !pauseTween) {\n                                                if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n                                                    pauseTween = tween;\n                                                }\n                                                tween = tween._prev;\n                                            }\n                                        }\n                                        if (pauseTween) {\n                                            this._time = time = pauseTween._startTime;\n                                            this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n                                        }\n                                    }\n                                }\n                                if (this._cycle !== prevCycle) if (!this._locked) {\n                                    var backwards = this._yoyo && (prevCycle & 1) !== 0, wrap = backwards === (this._yoyo && (this._cycle & 1) !== 0), recTotalTime = this._totalTime, recCycle = this._cycle, recRawPrevTime = this._rawPrevTime, recTime = this._time;\n                                    this._totalTime = prevCycle * dur;\n                                    if (this._cycle < prevCycle) {\n                                        backwards = !backwards;\n                                    } else {\n                                        this._totalTime += dur;\n                                    }\n                                    this._time = prevTime;\n                                    this._rawPrevTime = dur === 0 ? prevRawPrevTime - 1e-4 : prevRawPrevTime;\n                                    this._cycle = prevCycle;\n                                    this._locked = true;\n                                    prevTime = backwards ? 0 : dur;\n                                    this.render(prevTime, suppressEvents, dur === 0);\n                                    if (!suppressEvents) if (!this._gc) {\n                                        if (this.vars.onRepeat) {\n                                            this._callback(\"onRepeat\");\n                                        }\n                                    }\n                                    if (prevTime !== this._time) {\n                                        return;\n                                    }\n                                    if (wrap) {\n                                        prevTime = backwards ? dur + 1e-4 : -1e-4;\n                                        this.render(prevTime, true, false);\n                                    }\n                                    this._locked = false;\n                                    if (this._paused && !prevPaused) {\n                                        return;\n                                    }\n                                    this._time = recTime;\n                                    this._totalTime = recTotalTime;\n                                    this._cycle = recCycle;\n                                    this._rawPrevTime = recRawPrevTime;\n                                }\n                                if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n                                    if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n                                        this._callback(\"onUpdate\");\n                                    }\n                                    return;\n                                } else if (!this._initted) {\n                                    this._initted = true;\n                                }\n                                if (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n                                    this._active = true;\n                                }\n                                if (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n                                    this._callback(\"onStart\");\n                                }\n                                curTime = this._time;\n                                if (curTime >= prevTime) {\n                                    tween = this._first;\n                                    while (tween) {\n                                        next = tween._next;\n                                        if (curTime !== this._time || this._paused && !prevPaused) {\n                                            break;\n                                        } else if (tween._active || tween._startTime <= this._time && !tween._paused && !tween._gc) {\n                                            if (pauseTween === tween) {\n                                                this.pause();\n                                            }\n                                            if (!tween._reversed) {\n                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            } else {\n                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            }\n                                        }\n                                        tween = next;\n                                    }\n                                } else {\n                                    tween = this._last;\n                                    while (tween) {\n                                        next = tween._prev;\n                                        if (curTime !== this._time || this._paused && !prevPaused) {\n                                            break;\n                                        } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n                                            if (pauseTween === tween) {\n                                                pauseTween = tween._prev;\n                                                while (pauseTween && pauseTween.endTime() > this._time) {\n                                                    pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n                                                    pauseTween = pauseTween._prev;\n                                                }\n                                                pauseTween = null;\n                                                this.pause();\n                                            }\n                                            if (!tween._reversed) {\n                                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            } else {\n                                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                            }\n                                        }\n                                        tween = next;\n                                    }\n                                }\n                                if (this._onUpdate) if (!suppressEvents) {\n                                    if (_lazyTweens.length) {\n                                        _lazyRender();\n                                    }\n                                    this._callback(\"onUpdate\");\n                                }\n                                if (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n                                    if (isComplete) {\n                                        if (_lazyTweens.length) {\n                                            _lazyRender();\n                                        }\n                                        if (this._timeline.autoRemoveChildren) {\n                                            this._enabled(false, false);\n                                        }\n                                        this._active = false;\n                                    }\n                                    if (!suppressEvents && this.vars[callback]) {\n                                        this._callback(callback);\n                                    }\n                                }\n                            };\n                            p.getActive = function(nested, tweens, timelines) {\n                                if (nested == null) {\n                                    nested = true;\n                                }\n                                if (tweens == null) {\n                                    tweens = true;\n                                }\n                                if (timelines == null) {\n                                    timelines = false;\n                                }\n                                var a = [], all = this.getChildren(nested, tweens, timelines), cnt = 0, l = all.length, i, tween;\n                                for (i = 0; i < l; i++) {\n                                    tween = all[i];\n                                    if (tween.isActive()) {\n                                        a[cnt++] = tween;\n                                    }\n                                }\n                                return a;\n                            };\n                            p.getLabelAfter = function(time) {\n                                if (!time) if (time !== 0) {\n                                    time = this._time;\n                                }\n                                var labels = this.getLabelsArray(), l = labels.length, i;\n                                for (i = 0; i < l; i++) {\n                                    if (labels[i].time > time) {\n                                        return labels[i].name;\n                                    }\n                                }\n                                return null;\n                            };\n                            p.getLabelBefore = function(time) {\n                                if (time == null) {\n                                    time = this._time;\n                                }\n                                var labels = this.getLabelsArray(), i = labels.length;\n                                while (--i > -1) {\n                                    if (labels[i].time < time) {\n                                        return labels[i].name;\n                                    }\n                                }\n                                return null;\n                            };\n                            p.getLabelsArray = function() {\n                                var a = [], cnt = 0, p;\n                                for (p in this._labels) {\n                                    a[cnt++] = {\n                                        time: this._labels[p],\n                                        name: p\n                                    };\n                                }\n                                a.sort(function(a, b) {\n                                    return a.time - b.time;\n                                });\n                                return a;\n                            };\n                            p.progress = function(value, suppressEvents) {\n                                return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n                            };\n                            p.totalProgress = function(value, suppressEvents) {\n                                return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n                            };\n                            p.totalDuration = function(value) {\n                                if (!arguments.length) {\n                                    if (this._dirty) {\n                                        TimelineLite.prototype.totalDuration.call(this);\n                                        this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n                                    }\n                                    return this._totalDuration;\n                                }\n                                return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);\n                            };\n                            p.time = function(value, suppressEvents) {\n                                if (!arguments.length) {\n                                    return this._time;\n                                }\n                                if (this._dirty) {\n                                    this.totalDuration();\n                                }\n                                if (value > this._duration) {\n                                    value = this._duration;\n                                }\n                                if (this._yoyo && (this._cycle & 1) !== 0) {\n                                    value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n                                } else if (this._repeat !== 0) {\n                                    value += this._cycle * (this._duration + this._repeatDelay);\n                                }\n                                return this.totalTime(value, suppressEvents);\n                            };\n                            p.repeat = function(value) {\n                                if (!arguments.length) {\n                                    return this._repeat;\n                                }\n                                this._repeat = value;\n                                return this._uncache(true);\n                            };\n                            p.repeatDelay = function(value) {\n                                if (!arguments.length) {\n                                    return this._repeatDelay;\n                                }\n                                this._repeatDelay = value;\n                                return this._uncache(true);\n                            };\n                            p.yoyo = function(value) {\n                                if (!arguments.length) {\n                                    return this._yoyo;\n                                }\n                                this._yoyo = value;\n                                return this;\n                            };\n                            p.currentLabel = function(value) {\n                                if (!arguments.length) {\n                                    return this.getLabelBefore(this._time + 1e-8);\n                                }\n                                return this.seek(value, true);\n                            };\n                            return TimelineMax;\n                        }, true);\n                        (function() {\n                            var _RAD2DEG = 180 / Math.PI, _r1 = [], _r2 = [], _r3 = [], _corProps = {}, _globals = _gsScope._gsDefine.globals, Segment = function(a, b, c, d) {\n                                if (c === d) {\n                                    c = d - (d - b) / 1e6;\n                                }\n                                if (a === b) {\n                                    b = a + (c - a) / 1e6;\n                                }\n                                this.a = a;\n                                this.b = b;\n                                this.c = c;\n                                this.d = d;\n                                this.da = d - a;\n                                this.ca = c - a;\n                                this.ba = b - a;\n                            }, _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\", cubicToQuadratic = function(a, b, c, d) {\n                                var q1 = {\n                                    a: a\n                                }, q2 = {}, q3 = {}, q4 = {\n                                    c: d\n                                }, mab = (a + b) / 2, mbc = (b + c) / 2, mcd = (c + d) / 2, mabc = (mab + mbc) / 2, mbcd = (mbc + mcd) / 2, m8 = (mbcd - mabc) / 8;\n                                q1.b = mab + (a - mab) / 4;\n                                q2.b = mabc + m8;\n                                q1.c = q2.a = (q1.b + q2.b) / 2;\n                                q2.c = q3.a = (mabc + mbcd) / 2;\n                                q3.b = mbcd - m8;\n                                q4.b = mcd + (d - mcd) / 4;\n                                q3.c = q4.a = (q3.b + q4.b) / 2;\n                                return [ q1, q2, q3, q4 ];\n                            }, _calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n                                var l = a.length - 1, ii = 0, cp1 = a[0].a, i, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n                                for (i = 0; i < l; i++) {\n                                    seg = a[ii];\n                                    p1 = seg.a;\n                                    p2 = seg.d;\n                                    p3 = a[ii + 1].d;\n                                    if (correlate) {\n                                        r1 = _r1[i];\n                                        r2 = _r2[i];\n                                        tl = (r2 + r1) * curviness * .25 / (basic ? .5 : _r3[i] || .5);\n                                        m1 = p2 - (p2 - p1) * (basic ? curviness * .5 : r1 !== 0 ? tl / r1 : 0);\n                                        m2 = p2 + (p3 - p2) * (basic ? curviness * .5 : r2 !== 0 ? tl / r2 : 0);\n                                        mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + .5) / 4 || 0));\n                                    } else {\n                                        m1 = p2 - (p2 - p1) * curviness * .5;\n                                        m2 = p2 + (p3 - p2) * curviness * .5;\n                                        mm = p2 - (m1 + m2) / 2;\n                                    }\n                                    m1 += mm;\n                                    m2 += mm;\n                                    seg.c = cp2 = m1;\n                                    if (i !== 0) {\n                                        seg.b = cp1;\n                                    } else {\n                                        seg.b = cp1 = seg.a + (seg.c - seg.a) * .6;\n                                    }\n                                    seg.da = p2 - p1;\n                                    seg.ca = cp2 - p1;\n                                    seg.ba = cp1 - p1;\n                                    if (quad) {\n                                        qb = cubicToQuadratic(p1, cp1, cp2, p2);\n                                        a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n                                        ii += 4;\n                                    } else {\n                                        ii++;\n                                    }\n                                    cp1 = m2;\n                                }\n                                seg = a[ii];\n                                seg.b = cp1;\n                                seg.c = cp1 + (seg.d - cp1) * .4;\n                                seg.da = seg.d - seg.a;\n                                seg.ca = seg.c - seg.a;\n                                seg.ba = cp1 - seg.a;\n                                if (quad) {\n                                    qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n                                    a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n                                }\n                            }, _parseAnchors = function(values, p, correlate, prepend) {\n                                var a = [], l, i, p1, p2, p3, tmp;\n                                if (prepend) {\n                                    values = [ prepend ].concat(values);\n                                    i = values.length;\n                                    while (--i > -1) {\n                                        if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n                                            values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n                                        }\n                                    }\n                                }\n                                l = values.length - 2;\n                                if (l < 0) {\n                                    a[0] = new Segment(values[0][p], 0, 0, values[l < -1 ? 0 : 1][p]);\n                                    return a;\n                                }\n                                for (i = 0; i < l; i++) {\n                                    p1 = values[i][p];\n                                    p2 = values[i + 1][p];\n                                    a[i] = new Segment(p1, 0, 0, p2);\n                                    if (correlate) {\n                                        p3 = values[i + 2][p];\n                                        _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n                                        _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n                                    }\n                                }\n                                a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n                                return a;\n                            }, bezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n                                var obj = {}, props = [], first = prepend || values[0], i, p, a, j, r, l, seamless, last;\n                                correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n                                if (curviness == null) {\n                                    curviness = 1;\n                                }\n                                for (p in values[0]) {\n                                    props.push(p);\n                                }\n                                if (values.length > 1) {\n                                    last = values[values.length - 1];\n                                    seamless = true;\n                                    i = props.length;\n                                    while (--i > -1) {\n                                        p = props[i];\n                                        if (Math.abs(first[p] - last[p]) > .05) {\n                                            seamless = false;\n                                            break;\n                                        }\n                                    }\n                                    if (seamless) {\n                                        values = values.concat();\n                                        if (prepend) {\n                                            values.unshift(prepend);\n                                        }\n                                        values.push(values[1]);\n                                        prepend = values[values.length - 3];\n                                    }\n                                }\n                                _r1.length = _r2.length = _r3.length = 0;\n                                i = props.length;\n                                while (--i > -1) {\n                                    p = props[i];\n                                    _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n                                    obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n                                }\n                                i = _r1.length;\n                                while (--i > -1) {\n                                    _r1[i] = Math.sqrt(_r1[i]);\n                                    _r2[i] = Math.sqrt(_r2[i]);\n                                }\n                                if (!basic) {\n                                    i = props.length;\n                                    while (--i > -1) {\n                                        if (_corProps[p]) {\n                                            a = obj[props[i]];\n                                            l = a.length - 1;\n                                            for (j = 0; j < l; j++) {\n                                                r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n                                                _r3[j] = (_r3[j] || 0) + r * r;\n                                            }\n                                        }\n                                    }\n                                    i = _r3.length;\n                                    while (--i > -1) {\n                                        _r3[i] = Math.sqrt(_r3[i]);\n                                    }\n                                }\n                                i = props.length;\n                                j = quadratic ? 4 : 1;\n                                while (--i > -1) {\n                                    p = props[i];\n                                    a = obj[p];\n                                    _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n                                    if (seamless) {\n                                        a.splice(0, j);\n                                        a.splice(a.length - j, j);\n                                    }\n                                }\n                                return obj;\n                            }, _parseBezierData = function(values, type, prepend) {\n                                type = type || \"soft\";\n                                var obj = {}, inc = type === \"cubic\" ? 3 : 2, soft = type === \"soft\", props = [], a, b, c, d, cur, i, j, l, p, cnt, tmp;\n                                if (soft && prepend) {\n                                    values = [ prepend ].concat(values);\n                                }\n                                if (values == null || values.length < inc + 1) {\n                                    throw \"invalid Bezier data\";\n                                }\n                                for (p in values[0]) {\n                                    props.push(p);\n                                }\n                                i = props.length;\n                                while (--i > -1) {\n                                    p = props[i];\n                                    obj[p] = cur = [];\n                                    cnt = 0;\n                                    l = values.length;\n                                    for (j = 0; j < l; j++) {\n                                        a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n                                        if (soft) if (j > 1) if (j < l - 1) {\n                                            cur[cnt++] = (a + cur[cnt - 2]) / 2;\n                                        }\n                                        cur[cnt++] = a;\n                                    }\n                                    l = cnt - inc + 1;\n                                    cnt = 0;\n                                    for (j = 0; j < l; j += inc) {\n                                        a = cur[j];\n                                        b = cur[j + 1];\n                                        c = cur[j + 2];\n                                        d = inc === 2 ? 0 : cur[j + 3];\n                                        cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n                                    }\n                                    cur.length = cnt;\n                                }\n                                return obj;\n                            }, _addCubicLengths = function(a, steps, resolution) {\n                                var inc = 1 / resolution, j = a.length, d, d1, s, da, ca, ba, p, i, inv, bez, index;\n                                while (--j > -1) {\n                                    bez = a[j];\n                                    s = bez.a;\n                                    da = bez.d - s;\n                                    ca = bez.c - s;\n                                    ba = bez.b - s;\n                                    d = d1 = 0;\n                                    for (i = 1; i <= resolution; i++) {\n                                        p = inc * i;\n                                        inv = 1 - p;\n                                        d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n                                        index = j * resolution + i - 1;\n                                        steps[index] = (steps[index] || 0) + d * d;\n                                    }\n                                }\n                            }, _parseLengthData = function(obj, resolution) {\n                                resolution = resolution >> 0 || 6;\n                                var a = [], lengths = [], d = 0, total = 0, threshold = resolution - 1, segments = [], curLS = [], p, i, l, index;\n                                for (p in obj) {\n                                    _addCubicLengths(obj[p], a, resolution);\n                                }\n                                l = a.length;\n                                for (i = 0; i < l; i++) {\n                                    d += Math.sqrt(a[i]);\n                                    index = i % resolution;\n                                    curLS[index] = d;\n                                    if (index === threshold) {\n                                        total += d;\n                                        index = i / resolution >> 0;\n                                        segments[index] = curLS;\n                                        lengths[index] = total;\n                                        d = 0;\n                                        curLS = [];\n                                    }\n                                }\n                                return {\n                                    length: total,\n                                    lengths: lengths,\n                                    segments: segments\n                                };\n                            }, BezierPlugin = _gsScope._gsDefine.plugin({\n                                propName: \"bezier\",\n                                priority: -1,\n                                version: \"1.3.6\",\n                                API: 2,\n                                global: true,\n                                init: function(target, vars, tween) {\n                                    this._target = target;\n                                    if (vars instanceof Array) {\n                                        vars = {\n                                            values: vars\n                                        };\n                                    }\n                                    this._func = {};\n                                    this._round = {};\n                                    this._props = [];\n                                    this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n                                    var values = vars.values || [], first = {}, second = values[0], autoRotate = vars.autoRotate || tween.vars.orientToBezier, p, isFunc, i, j, prepend;\n                                    this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [ [ \"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0 ] ] : null;\n                                    for (p in second) {\n                                        this._props.push(p);\n                                    }\n                                    i = this._props.length;\n                                    while (--i > -1) {\n                                        p = this._props[i];\n                                        this._overwriteProps.push(p);\n                                        isFunc = this._func[p] = typeof target[p] === \"function\";\n                                        first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n                                        if (!prepend) if (first[p] !== values[0][p]) {\n                                            prepend = first;\n                                        }\n                                    }\n                                    this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n                                    this._segCount = this._beziers[p].length;\n                                    if (this._timeRes) {\n                                        var ld = _parseLengthData(this._beziers, this._timeRes);\n                                        this._length = ld.length;\n                                        this._lengths = ld.lengths;\n                                        this._segments = ld.segments;\n                                        this._l1 = this._li = this._s1 = this._si = 0;\n                                        this._l2 = this._lengths[0];\n                                        this._curSeg = this._segments[0];\n                                        this._s2 = this._curSeg[0];\n                                        this._prec = 1 / this._curSeg.length;\n                                    }\n                                    if (autoRotate = this._autoRotate) {\n                                        this._initialRotations = [];\n                                        if (!(autoRotate[0] instanceof Array)) {\n                                            this._autoRotate = autoRotate = [ autoRotate ];\n                                        }\n                                        i = autoRotate.length;\n                                        while (--i > -1) {\n                                            for (j = 0; j < 3; j++) {\n                                                p = autoRotate[i][j];\n                                                this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n                                            }\n                                            p = autoRotate[i][2];\n                                            this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n                                        }\n                                    }\n                                    this._startRatio = tween.vars.runBackwards ? 1 : 0;\n                                    return true;\n                                },\n                                set: function(v) {\n                                    var segments = this._segCount, func = this._func, target = this._target, notStart = v !== this._startRatio, curIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n                                    if (!this._timeRes) {\n                                        curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n                                        t = (v - curIndex * (1 / segments)) * segments;\n                                    } else {\n                                        lengths = this._lengths;\n                                        curSeg = this._curSeg;\n                                        v *= this._length;\n                                        i = this._li;\n                                        if (v > this._l2 && i < segments - 1) {\n                                            l = segments - 1;\n                                            while (i < l && (this._l2 = lengths[++i]) <= v) {}\n                                            this._l1 = lengths[i - 1];\n                                            this._li = i;\n                                            this._curSeg = curSeg = this._segments[i];\n                                            this._s2 = curSeg[this._s1 = this._si = 0];\n                                        } else if (v < this._l1 && i > 0) {\n                                            while (i > 0 && (this._l1 = lengths[--i]) >= v) {}\n                                            if (i === 0 && v < this._l1) {\n                                                this._l1 = 0;\n                                            } else {\n                                                i++;\n                                            }\n                                            this._l2 = lengths[i];\n                                            this._li = i;\n                                            this._curSeg = curSeg = this._segments[i];\n                                            this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n                                            this._s2 = curSeg[this._si];\n                                        }\n                                        curIndex = i;\n                                        v -= this._l1;\n                                        i = this._si;\n                                        if (v > this._s2 && i < curSeg.length - 1) {\n                                            l = curSeg.length - 1;\n                                            while (i < l && (this._s2 = curSeg[++i]) <= v) {}\n                                            this._s1 = curSeg[i - 1];\n                                            this._si = i;\n                                        } else if (v < this._s1 && i > 0) {\n                                            while (i > 0 && (this._s1 = curSeg[--i]) >= v) {}\n                                            if (i === 0 && v < this._s1) {\n                                                this._s1 = 0;\n                                            } else {\n                                                i++;\n                                            }\n                                            this._s2 = curSeg[i];\n                                            this._si = i;\n                                        }\n                                        t = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n                                    }\n                                    inv = 1 - t;\n                                    i = this._props.length;\n                                    while (--i > -1) {\n                                        p = this._props[i];\n                                        b = this._beziers[p][curIndex];\n                                        val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n                                        if (this._round[p]) {\n                                            val = Math.round(val);\n                                        }\n                                        if (func[p]) {\n                                            target[p](val);\n                                        } else {\n                                            target[p] = val;\n                                        }\n                                    }\n                                    if (this._autoRotate) {\n                                        var ar = this._autoRotate, b2, x1, y1, x2, y2, add, conv;\n                                        i = ar.length;\n                                        while (--i > -1) {\n                                            p = ar[i][2];\n                                            add = ar[i][3] || 0;\n                                            conv = ar[i][4] === true ? 1 : _RAD2DEG;\n                                            b = this._beziers[ar[i][0]];\n                                            b2 = this._beziers[ar[i][1]];\n                                            if (b && b2) {\n                                                b = b[curIndex];\n                                                b2 = b2[curIndex];\n                                                x1 = b.a + (b.b - b.a) * t;\n                                                x2 = b.b + (b.c - b.b) * t;\n                                                x1 += (x2 - x1) * t;\n                                                x2 += (b.c + (b.d - b.c) * t - x2) * t;\n                                                y1 = b2.a + (b2.b - b2.a) * t;\n                                                y2 = b2.b + (b2.c - b2.b) * t;\n                                                y1 += (y2 - y1) * t;\n                                                y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n                                                val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n                                                if (func[p]) {\n                                                    target[p](val);\n                                                } else {\n                                                    target[p] = val;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }), p = BezierPlugin.prototype;\n                            BezierPlugin.bezierThrough = bezierThrough;\n                            BezierPlugin.cubicToQuadratic = cubicToQuadratic;\n                            BezierPlugin._autoCSS = true;\n                            BezierPlugin.quadraticToCubic = function(a, b, c) {\n                                return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n                            };\n                            BezierPlugin._cssRegister = function() {\n                                var CSSPlugin = _globals.CSSPlugin;\n                                if (!CSSPlugin) {\n                                    return;\n                                }\n                                var _internals = CSSPlugin._internals, _parseToProxy = _internals._parseToProxy, _setPluginRatio = _internals._setPluginRatio, CSSPropTween = _internals.CSSPropTween;\n                                _internals._registerComplexSpecialProp(\"bezier\", {\n                                    parser: function(t, e, prop, cssp, pt, plugin) {\n                                        if (e instanceof Array) {\n                                            e = {\n                                                values: e\n                                            };\n                                        }\n                                        plugin = new BezierPlugin();\n                                        var values = e.values, l = values.length - 1, pluginValues = [], v = {}, i, p, data;\n                                        if (l < 0) {\n                                            return pt;\n                                        }\n                                        for (i = 0; i <= l; i++) {\n                                            data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n                                            pluginValues[i] = data.end;\n                                        }\n                                        for (p in e) {\n                                            v[p] = e[p];\n                                        }\n                                        v.values = pluginValues;\n                                        pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n                                        pt.data = data;\n                                        pt.plugin = plugin;\n                                        pt.setRatio = _setPluginRatio;\n                                        if (v.autoRotate === 0) {\n                                            v.autoRotate = true;\n                                        }\n                                        if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n                                            i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n                                            v.autoRotate = data.end.left != null ? [ [ \"left\", \"top\", \"rotation\", i, false ] ] : data.end.x != null ? [ [ \"x\", \"y\", \"rotation\", i, false ] ] : false;\n                                        }\n                                        if (v.autoRotate) {\n                                            if (!cssp._transform) {\n                                                cssp._enableTransforms(false);\n                                            }\n                                            data.autoRotate = cssp._target._gsTransform;\n                                            data.proxy.rotation = data.autoRotate.rotation || 0;\n                                        }\n                                        plugin._onInitTween(data.proxy, v, cssp._tween);\n                                        return pt;\n                                    }\n                                });\n                            };\n                            p._roundProps = function(lookup, value) {\n                                var op = this._overwriteProps, i = op.length;\n                                while (--i > -1) {\n                                    if (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n                                        this._round[op[i]] = value;\n                                    }\n                                }\n                            };\n                            p._kill = function(lookup) {\n                                var a = this._props, p, i;\n                                for (p in this._beziers) {\n                                    if (p in lookup) {\n                                        delete this._beziers[p];\n                                        delete this._func[p];\n                                        i = a.length;\n                                        while (--i > -1) {\n                                            if (a[i] === p) {\n                                                a.splice(i, 1);\n                                            }\n                                        }\n                                    }\n                                }\n                                return this._super._kill.call(this, lookup);\n                            };\n                        })();\n                        _gsScope._gsDefine(\"plugins.CSSPlugin\", [ \"plugins.TweenPlugin\", \"TweenLite\" ], function(TweenPlugin, TweenLite) {\n                            var CSSPlugin = function() {\n                                TweenPlugin.call(this, \"css\");\n                                this._overwriteProps.length = 0;\n                                this.setRatio = CSSPlugin.prototype.setRatio;\n                            }, _globals = _gsScope._gsDefine.globals, _hasPriority, _suffixMap, _cs, _overwriteProps, _specialProps = {}, p = CSSPlugin.prototype = new TweenPlugin(\"css\");\n                            p.constructor = CSSPlugin;\n                            CSSPlugin.version = \"1.18.5\";\n                            CSSPlugin.API = 2;\n                            CSSPlugin.defaultTransformPerspective = 0;\n                            CSSPlugin.defaultSkewType = \"compensated\";\n                            CSSPlugin.defaultSmoothOrigin = true;\n                            p = \"px\";\n                            CSSPlugin.suffixMap = {\n                                top: p,\n                                right: p,\n                                bottom: p,\n                                left: p,\n                                width: p,\n                                height: p,\n                                fontSize: p,\n                                padding: p,\n                                margin: p,\n                                perspective: p,\n                                lineHeight: \"\"\n                            };\n                            var _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g, _relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g, _valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, _NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, _suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g, _opacityExp = /opacity *= *([^)]*)/i, _opacityValExp = /opacity:([^;]*)/i, _alphaFilterExp = /alpha\\(opacity *=.+?\\)/i, _rgbhslExp = /^(rgb|hsl)/, _capsExp = /([A-Z])/g, _camelExp = /-([a-z])/gi, _urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, _camelFunc = function(s, g) {\n                                return g.toUpperCase();\n                            }, _horizExp = /(?:Left|Right|Width)/i, _ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi, _ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i, _commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, _complexExp = /[\\s,\\(]/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _forcePT = {}, _doc = document, _createElement = function(type) {\n                                return _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n                            }, _tempDiv = _createElement(\"div\"), _tempImg = _createElement(\"img\"), _internals = CSSPlugin._internals = {\n                                _specialProps: _specialProps\n                            }, _agent = navigator.userAgent, _autoRound, _reqSafariFix, _isSafari, _isFirefox, _isSafariLT6, _ieVers, _supportsOpacity = function() {\n                                var i = _agent.indexOf(\"Android\"), a = _createElement(\"a\");\n                                _isSafari = _agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i + 8, 1)) > 3);\n                                _isSafariLT6 = _isSafari && Number(_agent.substr(_agent.indexOf(\"Version/\") + 8, 1)) < 6;\n                                _isFirefox = _agent.indexOf(\"Firefox\") !== -1;\n                                if (/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(_agent) || /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(_agent)) {\n                                    _ieVers = parseFloat(RegExp.$1);\n                                }\n                                if (!a) {\n                                    return false;\n                                }\n                                a.style.cssText = \"top:1px;opacity:.55;\";\n                                return /^0.55/.test(a.style.opacity);\n                            }(), _getIEOpacity = function(v) {\n                                return _opacityExp.test(typeof v === \"string\" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ? parseFloat(RegExp.$1) / 100 : 1;\n                            }, _log = function(s) {\n                                if (window.console) {\n                                    console.log(s);\n                                }\n                            }, _prefixCSS = \"\", _prefix = \"\", _checkPropPrefix = function(p, e) {\n                                e = e || _tempDiv;\n                                var s = e.style, a, i;\n                                if (s[p] !== undefined) {\n                                    return p;\n                                }\n                                p = p.charAt(0).toUpperCase() + p.substr(1);\n                                a = [ \"O\", \"Moz\", \"ms\", \"Ms\", \"Webkit\" ];\n                                i = 5;\n                                while (--i > -1 && s[a[i] + p] === undefined) {}\n                                if (i >= 0) {\n                                    _prefix = i === 3 ? \"ms\" : a[i];\n                                    _prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n                                    return _prefix + p;\n                                }\n                                return null;\n                            }, _getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {}, _getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n                                var rv;\n                                if (!_supportsOpacity) if (p === \"opacity\") {\n                                    return _getIEOpacity(t);\n                                }\n                                if (!calc && t.style[p]) {\n                                    rv = t.style[p];\n                                } else if (cs = cs || _getComputedStyle(t)) {\n                                    rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n                                } else if (t.currentStyle) {\n                                    rv = t.currentStyle[p];\n                                }\n                                return dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\") ? dflt : rv;\n                            }, _convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n                                if (sfx === \"px\" || !sfx) {\n                                    return v;\n                                }\n                                if (sfx === \"auto\" || !v) {\n                                    return 0;\n                                }\n                                var horiz = _horizExp.test(p), node = t, style = _tempDiv.style, neg = v < 0, precise = v === 1, pix, cache, time;\n                                if (neg) {\n                                    v = -v;\n                                }\n                                if (precise) {\n                                    v *= 100;\n                                }\n                                if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n                                    pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);\n                                } else {\n                                    style.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n                                    if (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n                                        node = t.parentNode || _doc.body;\n                                        cache = node._gsCache;\n                                        time = TweenLite.ticker.frame;\n                                        if (cache && horiz && cache.time === time) {\n                                            return cache.width * v / 100;\n                                        }\n                                        style[horiz ? \"width\" : \"height\"] = v + sfx;\n                                    } else {\n                                        style[horiz ? \"borderLeftWidth\" : \"borderTopWidth\"] = v + sfx;\n                                    }\n                                    node.appendChild(_tempDiv);\n                                    pix = parseFloat(_tempDiv[horiz ? \"offsetWidth\" : \"offsetHeight\"]);\n                                    node.removeChild(_tempDiv);\n                                    if (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n                                        cache = node._gsCache = node._gsCache || {};\n                                        cache.time = time;\n                                        cache.width = pix / v * 100;\n                                    }\n                                    if (pix === 0 && !recurse) {\n                                        pix = _convertToPixels(t, p, v, sfx, true);\n                                    }\n                                }\n                                if (precise) {\n                                    pix /= 100;\n                                }\n                                return neg ? -pix : pix;\n                            }, _calculateOffset = _internals.calculateOffset = function(t, p, cs) {\n                                if (_getStyle(t, \"position\", cs) !== \"absolute\") {\n                                    return 0;\n                                }\n                                var dim = p === \"left\" ? \"Left\" : \"Top\", v = _getStyle(t, \"margin\" + dim, cs);\n                                return t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n                            }, _getAllStyles = function(t, cs) {\n                                var s = {}, i, tr, p;\n                                if (cs = cs || _getComputedStyle(t, null)) {\n                                    if (i = cs.length) {\n                                        while (--i > -1) {\n                                            p = cs[i];\n                                            if (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) {\n                                                s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n                                            }\n                                        }\n                                    } else {\n                                        for (i in cs) {\n                                            if (i.indexOf(\"Transform\") === -1 || _transformProp === i) {\n                                                s[i] = cs[i];\n                                            }\n                                        }\n                                    }\n                                } else if (cs = t.currentStyle || t.style) {\n                                    for (i in cs) {\n                                        if (typeof i === \"string\" && s[i] === undefined) {\n                                            s[i.replace(_camelExp, _camelFunc)] = cs[i];\n                                        }\n                                    }\n                                }\n                                if (!_supportsOpacity) {\n                                    s.opacity = _getIEOpacity(t);\n                                }\n                                tr = _getTransform(t, cs, false);\n                                s.rotation = tr.rotation;\n                                s.skewX = tr.skewX;\n                                s.scaleX = tr.scaleX;\n                                s.scaleY = tr.scaleY;\n                                s.x = tr.x;\n                                s.y = tr.y;\n                                if (_supports3D) {\n                                    s.z = tr.z;\n                                    s.rotationX = tr.rotationX;\n                                    s.rotationY = tr.rotationY;\n                                    s.scaleZ = tr.scaleZ;\n                                }\n                                if (s.filters) {\n                                    delete s.filters;\n                                }\n                                return s;\n                            }, _cssDif = function(t, s1, s2, vars, forceLookup) {\n                                var difs = {}, style = t.style, val, p, mpt;\n                                for (p in s2) {\n                                    if (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf(\"Origin\") === -1) if (typeof val === \"number\" || typeof val === \"string\") {\n                                        difs[p] = val === \"auto\" && (p === \"left\" || p === \"top\") ? _calculateOffset(t, p) : (val === \"\" || val === \"auto\" || val === \"none\") && typeof s1[p] === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\" ? 0 : val;\n                                        if (style[p] !== undefined) {\n                                            mpt = new MiniPropTween(style, p, style[p], mpt);\n                                        }\n                                    }\n                                }\n                                if (vars) {\n                                    for (p in vars) {\n                                        if (p !== \"className\") {\n                                            difs[p] = vars[p];\n                                        }\n                                    }\n                                }\n                                return {\n                                    difs: difs,\n                                    firstMPT: mpt\n                                };\n                            }, _dimensions = {\n                                width: [ \"Left\", \"Right\" ],\n                                height: [ \"Top\", \"Bottom\" ]\n                            }, _margins = [ \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\" ], _getDimension = function(t, p, cs) {\n                                if ((t.nodeName + \"\").toLowerCase() === \"svg\") {\n                                    return (cs || _getComputedStyle(t))[p] || 0;\n                                } else if (t.getBBox && _isSVG(t)) {\n                                    return t.getBBox()[p] || 0;\n                                }\n                                var v = parseFloat(p === \"width\" ? t.offsetWidth : t.offsetHeight), a = _dimensions[p], i = a.length;\n                                cs = cs || _getComputedStyle(t, null);\n                                while (--i > -1) {\n                                    v -= parseFloat(_getStyle(t, \"padding\" + a[i], cs, true)) || 0;\n                                    v -= parseFloat(_getStyle(t, \"border\" + a[i] + \"Width\", cs, true)) || 0;\n                                }\n                                return v;\n                            }, _parsePosition = function(v, recObj) {\n                                if (v === \"contain\" || v === \"auto\" || v === \"auto auto\") {\n                                    return v + \" \";\n                                }\n                                if (v == null || v === \"\") {\n                                    v = \"0 0\";\n                                }\n                                var a = v.split(\" \"), x = v.indexOf(\"left\") !== -1 ? \"0%\" : v.indexOf(\"right\") !== -1 ? \"100%\" : a[0], y = v.indexOf(\"top\") !== -1 ? \"0%\" : v.indexOf(\"bottom\") !== -1 ? \"100%\" : a[1], i;\n                                if (a.length > 3 && !recObj) {\n                                    a = v.split(\", \").join(\",\").split(\",\");\n                                    v = [];\n                                    for (i = 0; i < a.length; i++) {\n                                        v.push(_parsePosition(a[i]));\n                                    }\n                                    return v.join(\",\");\n                                }\n                                if (y == null) {\n                                    y = x === \"center\" ? \"50%\" : \"0\";\n                                } else if (y === \"center\") {\n                                    y = \"50%\";\n                                }\n                                if (x === \"center\" || isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1) {\n                                    x = \"50%\";\n                                }\n                                v = x + \" \" + y + (a.length > 2 ? \" \" + a[2] : \"\");\n                                if (recObj) {\n                                    recObj.oxp = x.indexOf(\"%\") !== -1;\n                                    recObj.oyp = y.indexOf(\"%\") !== -1;\n                                    recObj.oxr = x.charAt(1) === \"=\";\n                                    recObj.oyr = y.charAt(1) === \"=\";\n                                    recObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n                                    recObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n                                    recObj.v = v;\n                                }\n                                return recObj || v;\n                            }, _parseChange = function(e, b) {\n                                return typeof e === \"string\" && e.charAt(1) === \"=\" ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;\n                            }, _parseVal = function(v, d) {\n                                return v == null ? d : typeof v === \"string\" && v.charAt(1) === \"=\" ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n                            }, _parseAngle = function(v, d, p, directionalEnd) {\n                                var min = 1e-6, cap, split, dif, result, isRelative;\n                                if (v == null) {\n                                    result = d;\n                                } else if (typeof v === \"number\") {\n                                    result = v;\n                                } else {\n                                    cap = 360;\n                                    split = v.split(\"_\");\n                                    isRelative = v.charAt(1) === \"=\";\n                                    dif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf(\"rad\") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n                                    if (split.length) {\n                                        if (directionalEnd) {\n                                            directionalEnd[p] = d + dif;\n                                        }\n                                        if (v.indexOf(\"short\") !== -1) {\n                                            dif = dif % cap;\n                                            if (dif !== dif % (cap / 2)) {\n                                                dif = dif < 0 ? dif + cap : dif - cap;\n                                            }\n                                        }\n                                        if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n                                            dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                        } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n                                            dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                        }\n                                    }\n                                    result = d + dif;\n                                }\n                                if (result < min && result > -min) {\n                                    result = 0;\n                                }\n                                return result;\n                            }, _colorLookup = {\n                                aqua: [ 0, 255, 255 ],\n                                lime: [ 0, 255, 0 ],\n                                silver: [ 192, 192, 192 ],\n                                black: [ 0, 0, 0 ],\n                                maroon: [ 128, 0, 0 ],\n                                teal: [ 0, 128, 128 ],\n                                blue: [ 0, 0, 255 ],\n                                navy: [ 0, 0, 128 ],\n                                white: [ 255, 255, 255 ],\n                                fuchsia: [ 255, 0, 255 ],\n                                olive: [ 128, 128, 0 ],\n                                yellow: [ 255, 255, 0 ],\n                                orange: [ 255, 165, 0 ],\n                                gray: [ 128, 128, 128 ],\n                                purple: [ 128, 0, 128 ],\n                                green: [ 0, 128, 0 ],\n                                red: [ 255, 0, 0 ],\n                                pink: [ 255, 192, 203 ],\n                                cyan: [ 0, 255, 255 ],\n                                transparent: [ 255, 255, 255, 0 ]\n                            }, _hue = function(h, m1, m2) {\n                                h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n                                return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + .5 | 0;\n                            }, _parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n                                var a, r, g, b, h, s, l, max, min, d, wasHSL;\n                                if (!v) {\n                                    a = _colorLookup.black;\n                                } else if (typeof v === \"number\") {\n                                    a = [ v >> 16, v >> 8 & 255, v & 255 ];\n                                } else {\n                                    if (v.charAt(v.length - 1) === \",\") {\n                                        v = v.substr(0, v.length - 1);\n                                    }\n                                    if (_colorLookup[v]) {\n                                        a = _colorLookup[v];\n                                    } else if (v.charAt(0) === \"#\") {\n                                        if (v.length === 4) {\n                                            r = v.charAt(1);\n                                            g = v.charAt(2);\n                                            b = v.charAt(3);\n                                            v = \"#\" + r + r + g + g + b + b;\n                                        }\n                                        v = parseInt(v.substr(1), 16);\n                                        a = [ v >> 16, v >> 8 & 255, v & 255 ];\n                                    } else if (v.substr(0, 3) === \"hsl\") {\n                                        a = wasHSL = v.match(_numExp);\n                                        if (!toHSL) {\n                                            h = Number(a[0]) % 360 / 360;\n                                            s = Number(a[1]) / 100;\n                                            l = Number(a[2]) / 100;\n                                            g = l <= .5 ? l * (s + 1) : l + s - l * s;\n                                            r = l * 2 - g;\n                                            if (a.length > 3) {\n                                                a[3] = Number(v[3]);\n                                            }\n                                            a[0] = _hue(h + 1 / 3, r, g);\n                                            a[1] = _hue(h, r, g);\n                                            a[2] = _hue(h - 1 / 3, r, g);\n                                        } else if (v.indexOf(\"=\") !== -1) {\n                                            return v.match(_relNumExp);\n                                        }\n                                    } else {\n                                        a = v.match(_numExp) || _colorLookup.transparent;\n                                    }\n                                    a[0] = Number(a[0]);\n                                    a[1] = Number(a[1]);\n                                    a[2] = Number(a[2]);\n                                    if (a.length > 3) {\n                                        a[3] = Number(a[3]);\n                                    }\n                                }\n                                if (toHSL && !wasHSL) {\n                                    r = a[0] / 255;\n                                    g = a[1] / 255;\n                                    b = a[2] / 255;\n                                    max = Math.max(r, g, b);\n                                    min = Math.min(r, g, b);\n                                    l = (max + min) / 2;\n                                    if (max === min) {\n                                        h = s = 0;\n                                    } else {\n                                        d = max - min;\n                                        s = l > .5 ? d / (2 - max - min) : d / (max + min);\n                                        h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n                                        h *= 60;\n                                    }\n                                    a[0] = h + .5 | 0;\n                                    a[1] = s * 100 + .5 | 0;\n                                    a[2] = l * 100 + .5 | 0;\n                                }\n                                return a;\n                            }, _formatColors = function(s, toHSL) {\n                                var colors = s.match(_colorExp) || [], charIndex = 0, parsed = colors.length ? \"\" : s, i, color, temp;\n                                for (i = 0; i < colors.length; i++) {\n                                    color = colors[i];\n                                    temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);\n                                    charIndex += temp.length + color.length;\n                                    color = _parseColor(color, toHSL);\n                                    if (color.length === 3) {\n                                        color.push(1);\n                                    }\n                                    parsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n                                }\n                                return parsed + s.substr(charIndex);\n                            }, _colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";\n                            for (p in _colorLookup) {\n                                _colorExp += \"|\" + p + \"\\\\b\";\n                            }\n                            _colorExp = new RegExp(_colorExp + \")\", \"gi\");\n                            CSSPlugin.colorStringFilter = function(a) {\n                                var combined = a[0] + a[1], toHSL;\n                                if (_colorExp.test(combined)) {\n                                    toHSL = combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1;\n                                    a[0] = _formatColors(a[0], toHSL);\n                                    a[1] = _formatColors(a[1], toHSL);\n                                }\n                                _colorExp.lastIndex = 0;\n                            };\n                            if (!TweenLite.defaultStringFilter) {\n                                TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n                            }\n                            var _getFormatter = function(dflt, clr, collapsible, multi) {\n                                if (dflt == null) {\n                                    return function(v) {\n                                        return v;\n                                    };\n                                }\n                                var dColor = clr ? (dflt.match(_colorExp) || [ \"\" ])[0] : \"\", dVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [], pfx = dflt.substr(0, dflt.indexOf(dVals[0])), sfx = dflt.charAt(dflt.length - 1) === \")\" ? \")\" : \"\", delim = dflt.indexOf(\" \") !== -1 ? \" \" : \",\", numVals = dVals.length, dSfx = numVals > 0 ? dVals[0].replace(_numExp, \"\") : \"\", formatter;\n                                if (!numVals) {\n                                    return function(v) {\n                                        return v;\n                                    };\n                                }\n                                if (clr) {\n                                    formatter = function(v) {\n                                        var color, vals, i, a;\n                                        if (typeof v === \"number\") {\n                                            v += dSfx;\n                                        } else if (multi && _commasOutsideParenExp.test(v)) {\n                                            a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                            for (i = 0; i < a.length; i++) {\n                                                a[i] = formatter(a[i]);\n                                            }\n                                            return a.join(\",\");\n                                        }\n                                        color = (v.match(_colorExp) || [ dColor ])[0];\n                                        vals = v.split(color).join(\"\").match(_valuesExp) || [];\n                                        i = vals.length;\n                                        if (numVals > i--) {\n                                            while (++i < numVals) {\n                                                vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n                                            }\n                                        }\n                                        return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n                                    };\n                                    return formatter;\n                                }\n                                formatter = function(v) {\n                                    var vals, a, i;\n                                    if (typeof v === \"number\") {\n                                        v += dSfx;\n                                    } else if (multi && _commasOutsideParenExp.test(v)) {\n                                        a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                        for (i = 0; i < a.length; i++) {\n                                            a[i] = formatter(a[i]);\n                                        }\n                                        return a.join(\",\");\n                                    }\n                                    vals = v.match(_valuesExp) || [];\n                                    i = vals.length;\n                                    if (numVals > i--) {\n                                        while (++i < numVals) {\n                                            vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n                                        }\n                                    }\n                                    return pfx + vals.join(delim) + sfx;\n                                };\n                                return formatter;\n                            }, _getEdgeParser = function(props) {\n                                props = props.split(\",\");\n                                return function(t, e, p, cssp, pt, plugin, vars) {\n                                    var a = (e + \"\").split(\" \"), i;\n                                    vars = {};\n                                    for (i = 0; i < 4; i++) {\n                                        vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];\n                                    }\n                                    return cssp.parse(t, vars, pt, plugin);\n                                };\n                            }, _setPluginRatio = _internals._setPluginRatio = function(v) {\n                                this.plugin.setRatio(v);\n                                var d = this.data, proxy = d.proxy, mpt = d.firstMPT, min = 1e-6, val, pt, i, str, p;\n                                while (mpt) {\n                                    val = proxy[mpt.v];\n                                    if (mpt.r) {\n                                        val = Math.round(val);\n                                    } else if (val < min && val > -min) {\n                                        val = 0;\n                                    }\n                                    mpt.t[mpt.p] = val;\n                                    mpt = mpt._next;\n                                }\n                                if (d.autoRotate) {\n                                    d.autoRotate.rotation = proxy.rotation;\n                                }\n                                if (v === 1 || v === 0) {\n                                    mpt = d.firstMPT;\n                                    p = v === 1 ? \"e\" : \"b\";\n                                    while (mpt) {\n                                        pt = mpt.t;\n                                        if (!pt.type) {\n                                            pt[p] = pt.s + pt.xs0;\n                                        } else if (pt.type === 1) {\n                                            str = pt.xs0 + pt.s + pt.xs1;\n                                            for (i = 1; i < pt.l; i++) {\n                                                str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                            }\n                                            pt[p] = str;\n                                        }\n                                        mpt = mpt._next;\n                                    }\n                                }\n                            }, MiniPropTween = function(t, p, v, next, r) {\n                                this.t = t;\n                                this.p = p;\n                                this.v = v;\n                                this.r = r;\n                                if (next) {\n                                    next._prev = this;\n                                    this._next = next;\n                                }\n                            }, _parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n                                var bpt = pt, start = {}, end = {}, transform = cssp._transform, oldForce = _forcePT, i, p, xp, mpt, firstPT;\n                                cssp._transform = null;\n                                _forcePT = vars;\n                                pt = firstPT = cssp.parse(t, vars, pt, plugin);\n                                _forcePT = oldForce;\n                                if (shallow) {\n                                    cssp._transform = transform;\n                                    if (bpt) {\n                                        bpt._prev = null;\n                                        if (bpt._prev) {\n                                            bpt._prev._next = null;\n                                        }\n                                    }\n                                }\n                                while (pt && pt !== bpt) {\n                                    if (pt.type <= 1) {\n                                        p = pt.p;\n                                        end[p] = pt.s + pt.c;\n                                        start[p] = pt.s;\n                                        if (!shallow) {\n                                            mpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n                                            pt.c = 0;\n                                        }\n                                        if (pt.type === 1) {\n                                            i = pt.l;\n                                            while (--i > 0) {\n                                                xp = \"xn\" + i;\n                                                p = pt.p + \"_\" + xp;\n                                                end[p] = pt.data[xp];\n                                                start[p] = pt[xp];\n                                                if (!shallow) {\n                                                    mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n                                                }\n                                            }\n                                        }\n                                    }\n                                    pt = pt._next;\n                                }\n                                return {\n                                    proxy: start,\n                                    end: end,\n                                    firstMPT: mpt,\n                                    pt: firstPT\n                                };\n                            }, CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n                                this.t = t;\n                                this.p = p;\n                                this.s = s;\n                                this.c = c;\n                                this.n = n || p;\n                                if (!(t instanceof CSSPropTween)) {\n                                    _overwriteProps.push(this.n);\n                                }\n                                this.r = r;\n                                this.type = type || 0;\n                                if (pr) {\n                                    this.pr = pr;\n                                    _hasPriority = true;\n                                }\n                                this.b = b === undefined ? s : b;\n                                this.e = e === undefined ? s + c : e;\n                                if (next) {\n                                    this._next = next;\n                                    next._prev = this;\n                                }\n                            }, _addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) {\n                                var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n                                pt.b = start;\n                                pt.e = pt.xs0 = end;\n                                return pt;\n                            }, _parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n                                b = b || dflt || \"\";\n                                pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);\n                                e += \"\";\n                                if (clrs && _colorExp.test(e + b)) {\n                                    e = [ b, e ];\n                                    CSSPlugin.colorStringFilter(e);\n                                    b = e[0];\n                                    e = e[1];\n                                }\n                                var ba = b.split(\", \").join(\",\").split(\" \"), ea = e.split(\", \").join(\",\").split(\" \"), l = ba.length, autoRound = _autoRound !== false, i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n                                if (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n                                    ba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n                                    ea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n                                    l = ba.length;\n                                }\n                                if (l !== ea.length) {\n                                    ba = (dflt || \"\").split(\" \");\n                                    l = ba.length;\n                                }\n                                pt.plugin = plugin;\n                                pt.setRatio = setRatio;\n                                _colorExp.lastIndex = 0;\n                                for (i = 0; i < l; i++) {\n                                    bv = ba[i];\n                                    ev = ea[i];\n                                    bn = parseFloat(bv);\n                                    if (bn || bn === 0) {\n                                        pt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), autoRound && ev.indexOf(\"px\") !== -1, true);\n                                    } else if (clrs && _colorExp.test(bv)) {\n                                        str = ev.indexOf(\")\") + 1;\n                                        str = \")\" + (str ? ev.substr(str) : \"\");\n                                        useHSL = ev.indexOf(\"hsl\") !== -1 && _supportsOpacity;\n                                        bv = _parseColor(bv, useHSL);\n                                        ev = _parseColor(ev, useHSL);\n                                        hasAlpha = bv.length + ev.length > 6;\n                                        if (hasAlpha && !_supportsOpacity && ev[3] === 0) {\n                                            pt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n                                            pt.e = pt.e.split(ea[i]).join(\"transparent\");\n                                        } else {\n                                            if (!_supportsOpacity) {\n                                                hasAlpha = false;\n                                            }\n                                            if (useHSL) {\n                                                pt.appendXtra(hasAlpha ? \"hsla(\" : \"hsl(\", bv[0], _parseChange(ev[0], bv[0]), \",\", false, true).appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false).appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? \"%,\" : \"%\" + str, false);\n                                            } else {\n                                                pt.appendXtra(hasAlpha ? \"rgba(\" : \"rgb(\", bv[0], ev[0] - bv[0], \",\", true, true).appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true).appendXtra(\"\", bv[2], ev[2] - bv[2], hasAlpha ? \",\" : str, true);\n                                            }\n                                            if (hasAlpha) {\n                                                bv = bv.length < 4 ? 1 : bv[3];\n                                                pt.appendXtra(\"\", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);\n                                            }\n                                        }\n                                        _colorExp.lastIndex = 0;\n                                    } else {\n                                        bnums = bv.match(_numExp);\n                                        if (!bnums) {\n                                            pt[\"xs\" + pt.l] += pt.l || pt[\"xs\" + pt.l] ? \" \" + ev : ev;\n                                        } else {\n                                            enums = ev.match(_relNumExp);\n                                            if (!enums || enums.length !== bnums.length) {\n                                                return pt;\n                                            }\n                                            ni = 0;\n                                            for (xi = 0; xi < bnums.length; xi++) {\n                                                cv = bnums[xi];\n                                                temp = bv.indexOf(cv, ni);\n                                                pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", autoRound && bv.substr(temp + cv.length, 2) === \"px\", xi === 0);\n                                                ni = temp + cv.length;\n                                            }\n                                            pt[\"xs\" + pt.l] += bv.substr(ni);\n                                        }\n                                    }\n                                }\n                                if (e.indexOf(\"=\") !== -1) if (pt.data) {\n                                    str = pt.xs0 + pt.data.s;\n                                    for (i = 1; i < pt.l; i++) {\n                                        str += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n                                    }\n                                    pt.e = str + pt[\"xs\" + i];\n                                }\n                                if (!pt.l) {\n                                    pt.type = -1;\n                                    pt.xs0 = pt.e;\n                                }\n                                return pt.xfirst || pt;\n                            }, i = 9;\n                            p = CSSPropTween.prototype;\n                            p.l = p.pr = 0;\n                            while (--i > 0) {\n                                p[\"xn\" + i] = 0;\n                                p[\"xs\" + i] = \"\";\n                            }\n                            p.xs0 = \"\";\n                            p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n                            p.appendXtra = function(pfx, s, c, sfx, r, pad) {\n                                var pt = this, l = pt.l;\n                                pt[\"xs\" + l] += pad && (l || pt[\"xs\" + l]) ? \" \" + pfx : pfx || \"\";\n                                if (!c) if (l !== 0 && !pt.plugin) {\n                                    pt[\"xs\" + l] += s + (sfx || \"\");\n                                    return pt;\n                                }\n                                pt.l++;\n                                pt.type = pt.setRatio ? 2 : 1;\n                                pt[\"xs\" + pt.l] = sfx || \"\";\n                                if (l > 0) {\n                                    pt.data[\"xn\" + l] = s + c;\n                                    pt.rxp[\"xn\" + l] = r;\n                                    pt[\"xn\" + l] = s;\n                                    if (!pt.plugin) {\n                                        pt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n                                        pt.xfirst.xs0 = 0;\n                                    }\n                                    return pt;\n                                }\n                                pt.data = {\n                                    s: s + c\n                                };\n                                pt.rxp = {};\n                                pt.s = s;\n                                pt.c = c;\n                                pt.r = r;\n                                return pt;\n                            };\n                            var SpecialProp = function(p, options) {\n                                options = options || {};\n                                this.p = options.prefix ? _checkPropPrefix(p) || p : p;\n                                _specialProps[p] = _specialProps[this.p] = this;\n                                this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n                                if (options.parser) {\n                                    this.parse = options.parser;\n                                }\n                                this.clrs = options.color;\n                                this.multi = options.multi;\n                                this.keyword = options.keyword;\n                                this.dflt = options.defaultValue;\n                                this.pr = options.priority || 0;\n                            }, _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n                                if (typeof options !== \"object\") {\n                                    options = {\n                                        parser: defaults\n                                    };\n                                }\n                                var a = p.split(\",\"), d = options.defaultValue, i, temp;\n                                defaults = defaults || [ d ];\n                                for (i = 0; i < a.length; i++) {\n                                    options.prefix = i === 0 && options.prefix;\n                                    options.defaultValue = defaults[i] || d;\n                                    temp = new SpecialProp(a[i], options);\n                                }\n                            }, _registerPluginProp = function(p) {\n                                if (!_specialProps[p]) {\n                                    var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n                                    _registerComplexSpecialProp(p, {\n                                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                            var pluginClass = _globals.com.greensock.plugins[pluginName];\n                                            if (!pluginClass) {\n                                                _log(\"Error: \" + pluginName + \" js file not loaded.\");\n                                                return pt;\n                                            }\n                                            pluginClass._cssRegister();\n                                            return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n                                        }\n                                    });\n                                }\n                            };\n                            p = SpecialProp.prototype;\n                            p.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n                                var kwd = this.keyword, i, ba, ea, l, bi, ei;\n                                if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n                                    ba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                    ea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                } else if (kwd) {\n                                    ba = [ b ];\n                                    ea = [ e ];\n                                }\n                                if (ea) {\n                                    l = ea.length > ba.length ? ea.length : ba.length;\n                                    for (i = 0; i < l; i++) {\n                                        b = ba[i] = ba[i] || this.dflt;\n                                        e = ea[i] = ea[i] || this.dflt;\n                                        if (kwd) {\n                                            bi = b.indexOf(kwd);\n                                            ei = e.indexOf(kwd);\n                                            if (bi !== ei) {\n                                                if (ei === -1) {\n                                                    ba[i] = ba[i].split(kwd).join(\"\");\n                                                } else if (bi === -1) {\n                                                    ba[i] += \" \" + kwd;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    b = ba.join(\", \");\n                                    e = ea.join(\", \");\n                                }\n                                return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n                            };\n                            p.parse = function(t, e, p, cssp, pt, plugin, vars) {\n                                return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n                            };\n                            CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n                                _registerComplexSpecialProp(name, {\n                                    parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                        var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n                                        rv.plugin = plugin;\n                                        rv.setRatio = onInitTween(t, e, cssp._tween, p);\n                                        return rv;\n                                    },\n                                    priority: priority\n                                });\n                            };\n                            CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox;\n                            var _transformProps = \"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"), _transformProp = _checkPropPrefix(\"transform\"), _transformPropCSS = _prefixCSS + \"transform\", _transformOriginProp = _checkPropPrefix(\"transformOrigin\"), _supports3D = _checkPropPrefix(\"perspective\") !== null, Transform = _internals.Transform = function() {\n                                this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n                                this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || \"auto\";\n                            }, _SVGElement = window.SVGElement, _useSVGTransformAttr, _createSVG = function(type, container, attributes) {\n                                var element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type), reg = /([a-z])([A-Z])/g, p;\n                                for (p in attributes) {\n                                    element.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n                                }\n                                container.appendChild(element);\n                                return element;\n                            }, _docElement = _doc.documentElement, _forceSVGTransformAttr = function() {\n                                var force = _ieVers || /Android/i.test(_agent) && !window.chrome, svg, rect, width;\n                                if (_doc.createElementNS && !force) {\n                                    svg = _createSVG(\"svg\", _docElement);\n                                    rect = _createSVG(\"rect\", svg, {\n                                        width: 100,\n                                        height: 50,\n                                        x: 100\n                                    });\n                                    width = rect.getBoundingClientRect().width;\n                                    rect.style[_transformOriginProp] = \"50% 50%\";\n                                    rect.style[_transformProp] = \"scaleX(0.5)\";\n                                    force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D);\n                                    _docElement.removeChild(svg);\n                                }\n                                return force;\n                            }(), _parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n                                var tm = e._gsTransform, m = _getMatrix(e, true), v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n                                if (tm) {\n                                    xOriginOld = tm.xOrigin;\n                                    yOriginOld = tm.yOrigin;\n                                }\n                                if (!absolute || (v = absolute.split(\" \")).length < 2) {\n                                    b = e.getBBox();\n                                    local = _parsePosition(local).split(\" \");\n                                    v = [ (local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y ];\n                                }\n                                decoratee.xOrigin = xOrigin = parseFloat(v[0]);\n                                decoratee.yOrigin = yOrigin = parseFloat(v[1]);\n                                if (absolute && m !== _identity2DMatrix) {\n                                    a = m[0];\n                                    b = m[1];\n                                    c = m[2];\n                                    d = m[3];\n                                    tx = m[4];\n                                    ty = m[5];\n                                    determinant = a * d - b * c;\n                                    x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n                                    y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n                                    xOrigin = decoratee.xOrigin = v[0] = x;\n                                    yOrigin = decoratee.yOrigin = v[1] = y;\n                                }\n                                if (tm) {\n                                    if (skipRecord) {\n                                        decoratee.xOffset = tm.xOffset;\n                                        decoratee.yOffset = tm.yOffset;\n                                        tm = decoratee;\n                                    }\n                                    if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {\n                                        x = xOrigin - xOriginOld;\n                                        y = yOrigin - yOriginOld;\n                                        tm.xOffset += x * m[0] + y * m[2] - x;\n                                        tm.yOffset += x * m[1] + y * m[3] - y;\n                                    } else {\n                                        tm.xOffset = tm.yOffset = 0;\n                                    }\n                                }\n                                if (!skipRecord) {\n                                    e.setAttribute(\"data-svg-origin\", v.join(\" \"));\n                                }\n                            }, _canGetBBox = function(e) {\n                                try {\n                                    return e.getBBox();\n                                } catch (e) {}\n                            }, _isSVG = function(e) {\n                                return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));\n                            }, _identity2DMatrix = [ 1, 0, 0, 1, 0, 0 ], _getMatrix = function(e, force2D) {\n                                var tm = e._gsTransform || new Transform(), rnd = 1e5, style = e.style, isDefault, s, m, n, dec, none;\n                                if (_transformProp) {\n                                    s = _getStyle(e, _transformPropCSS, null, true);\n                                } else if (e.currentStyle) {\n                                    s = e.currentStyle.filter.match(_ieGetMatrixExp);\n                                    s = s && s.length === 4 ? [ s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0 ].join(\",\") : \"\";\n                                }\n                                isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n                                if (isDefault && _transformProp && ((none = _getComputedStyle(e).display === \"none\") || !e.parentNode)) {\n                                    if (none) {\n                                        n = style.display;\n                                        style.display = \"block\";\n                                    }\n                                    if (!e.parentNode) {\n                                        dec = 1;\n                                        _docElement.appendChild(e);\n                                    }\n                                    s = _getStyle(e, _transformPropCSS, null, true);\n                                    isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n                                    if (n) {\n                                        style.display = n;\n                                    } else if (none) {\n                                        _removeProp(style, \"display\");\n                                    }\n                                    if (dec) {\n                                        _docElement.removeChild(e);\n                                    }\n                                }\n                                if (tm.svg || e.getBBox && _isSVG(e)) {\n                                    if (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) {\n                                        s = style[_transformProp];\n                                        isDefault = 0;\n                                    }\n                                    m = e.getAttribute(\"transform\");\n                                    if (isDefault && m) {\n                                        if (m.indexOf(\"matrix\") !== -1) {\n                                            s = m;\n                                            isDefault = 0;\n                                        } else if (m.indexOf(\"translate\") !== -1) {\n                                            s = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n                                            isDefault = 0;\n                                        }\n                                    }\n                                }\n                                if (isDefault) {\n                                    return _identity2DMatrix;\n                                }\n                                m = (s || \"\").match(_numExp) || [];\n                                i = m.length;\n                                while (--i > -1) {\n                                    n = Number(m[i]);\n                                    m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -.5 : .5) | 0) / rnd + n : n;\n                                }\n                                return force2D && m.length > 6 ? [ m[0], m[1], m[4], m[5], m[12], m[13] ] : m;\n                            }, _getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n                                if (t._gsTransform && rec && !parse) {\n                                    return t._gsTransform;\n                                }\n                                var tm = rec ? t._gsTransform || new Transform() : new Transform(), invX = tm.scaleX < 0, min = 2e-5, rnd = 1e5, zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin || 0 : 0, defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0, m, i, scaleX, scaleY, rotation, skewX;\n                                tm.svg = !!(t.getBBox && _isSVG(t));\n                                if (tm.svg) {\n                                    _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n                                    _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n                                }\n                                m = _getMatrix(t);\n                                if (m !== _identity2DMatrix) {\n                                    if (m.length === 16) {\n                                        var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3], a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7], a13 = m[8], a23 = m[9], a33 = m[10], a14 = m[12], a24 = m[13], a34 = m[14], a43 = m[11], angle = Math.atan2(a32, a33), t1, t2, t3, t4, cos, sin;\n                                        if (tm.zOrigin) {\n                                            a34 = -tm.zOrigin;\n                                            a14 = a13 * a34 - m[12];\n                                            a24 = a23 * a34 - m[13];\n                                            a34 = a33 * a34 + tm.zOrigin - m[14];\n                                        }\n                                        tm.rotationX = angle * _RAD2DEG;\n                                        if (angle) {\n                                            cos = Math.cos(-angle);\n                                            sin = Math.sin(-angle);\n                                            t1 = a12 * cos + a13 * sin;\n                                            t2 = a22 * cos + a23 * sin;\n                                            t3 = a32 * cos + a33 * sin;\n                                            a13 = a12 * -sin + a13 * cos;\n                                            a23 = a22 * -sin + a23 * cos;\n                                            a33 = a32 * -sin + a33 * cos;\n                                            a43 = a42 * -sin + a43 * cos;\n                                            a12 = t1;\n                                            a22 = t2;\n                                            a32 = t3;\n                                        }\n                                        angle = Math.atan2(-a31, a33);\n                                        tm.rotationY = angle * _RAD2DEG;\n                                        if (angle) {\n                                            cos = Math.cos(-angle);\n                                            sin = Math.sin(-angle);\n                                            t1 = a11 * cos - a13 * sin;\n                                            t2 = a21 * cos - a23 * sin;\n                                            t3 = a31 * cos - a33 * sin;\n                                            a23 = a21 * sin + a23 * cos;\n                                            a33 = a31 * sin + a33 * cos;\n                                            a43 = a41 * sin + a43 * cos;\n                                            a11 = t1;\n                                            a21 = t2;\n                                            a31 = t3;\n                                        }\n                                        angle = Math.atan2(a21, a11);\n                                        tm.rotation = angle * _RAD2DEG;\n                                        if (angle) {\n                                            cos = Math.cos(-angle);\n                                            sin = Math.sin(-angle);\n                                            a11 = a11 * cos + a12 * sin;\n                                            t2 = a21 * cos + a22 * sin;\n                                            a22 = a21 * -sin + a22 * cos;\n                                            a32 = a31 * -sin + a32 * cos;\n                                            a21 = t2;\n                                        }\n                                        if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {\n                                            tm.rotationX = tm.rotation = 0;\n                                            tm.rotationY = 180 - tm.rotationY;\n                                        }\n                                        tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21) * rnd + .5 | 0) / rnd;\n                                        tm.scaleY = (Math.sqrt(a22 * a22 + a23 * a23) * rnd + .5 | 0) / rnd;\n                                        tm.scaleZ = (Math.sqrt(a32 * a32 + a33 * a33) * rnd + .5 | 0) / rnd;\n                                        if (tm.rotationX || tm.rotationY) {\n                                            tm.skewX = 0;\n                                        } else {\n                                            tm.skewX = a12 || a22 ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n                                            if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n                                                if (invX) {\n                                                    tm.scaleX *= -1;\n                                                    tm.skewX += tm.rotation <= 0 ? 180 : -180;\n                                                    tm.rotation += tm.rotation <= 0 ? 180 : -180;\n                                                } else {\n                                                    tm.scaleY *= -1;\n                                                    tm.skewX += tm.skewX <= 0 ? 180 : -180;\n                                                }\n                                            }\n                                        }\n                                        tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n                                        tm.x = a14;\n                                        tm.y = a24;\n                                        tm.z = a34;\n                                        if (tm.svg) {\n                                            tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n                                            tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n                                        }\n                                    } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {\n                                        var k = m.length >= 6, a = k ? m[0] : 1, b = m[1] || 0, c = m[2] || 0, d = k ? m[3] : 1;\n                                        tm.x = m[4] || 0;\n                                        tm.y = m[5] || 0;\n                                        scaleX = Math.sqrt(a * a + b * b);\n                                        scaleY = Math.sqrt(d * d + c * c);\n                                        rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0;\n                                        skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n                                        if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n                                            if (invX) {\n                                                scaleX *= -1;\n                                                skewX += rotation <= 0 ? 180 : -180;\n                                                rotation += rotation <= 0 ? 180 : -180;\n                                            } else {\n                                                scaleY *= -1;\n                                                skewX += skewX <= 0 ? 180 : -180;\n                                            }\n                                        }\n                                        tm.scaleX = scaleX;\n                                        tm.scaleY = scaleY;\n                                        tm.rotation = rotation;\n                                        tm.skewX = skewX;\n                                        if (_supports3D) {\n                                            tm.rotationX = tm.rotationY = tm.z = 0;\n                                            tm.perspective = defaultTransformPerspective;\n                                            tm.scaleZ = 1;\n                                        }\n                                        if (tm.svg) {\n                                            tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n                                            tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n                                        }\n                                    }\n                                    tm.zOrigin = zOrigin;\n                                    for (i in tm) {\n                                        if (tm[i] < min) if (tm[i] > -min) {\n                                            tm[i] = 0;\n                                        }\n                                    }\n                                }\n                                if (rec) {\n                                    t._gsTransform = tm;\n                                    if (tm.svg) {\n                                        if (_useSVGTransformAttr && t.style[_transformProp]) {\n                                            TweenLite.delayedCall(.001, function() {\n                                                _removeProp(t.style, _transformProp);\n                                            });\n                                        } else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n                                            TweenLite.delayedCall(.001, function() {\n                                                t.removeAttribute(\"transform\");\n                                            });\n                                        }\n                                    }\n                                }\n                                return tm;\n                            }, _setIETransformRatio = function(v) {\n                                var t = this.data, ang = -t.rotation * _DEG2RAD, skew = ang + t.skewX * _DEG2RAD, rnd = 1e5, a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd, b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd, c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd, d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd, style = this.t.style, cs = this.t.currentStyle, filters, val;\n                                if (!cs) {\n                                    return;\n                                }\n                                val = b;\n                                b = -c;\n                                c = -val;\n                                filters = cs.filter;\n                                style.filter = \"\";\n                                var w = this.t.offsetWidth, h = this.t.offsetHeight, clip = cs.position !== \"absolute\", m = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d, ox = t.x + w * t.xPercent / 100, oy = t.y + h * t.yPercent / 100, dx, dy;\n                                if (t.ox != null) {\n                                    dx = (t.oxp ? w * t.ox * .01 : t.ox) - w / 2;\n                                    dy = (t.oyp ? h * t.oy * .01 : t.oy) - h / 2;\n                                    ox += dx - (dx * a + dy * b);\n                                    oy += dy - (dx * c + dy * d);\n                                }\n                                if (!clip) {\n                                    m += \", sizingMethod='auto expand')\";\n                                } else {\n                                    dx = w / 2;\n                                    dy = h / 2;\n                                    m += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n                                }\n                                if (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n                                    style.filter = filters.replace(_ieSetMatrixExp, m);\n                                } else {\n                                    style.filter = m + \" \" + filters;\n                                }\n                                if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n                                    style.removeAttribute(\"filter\");\n                                }\n                                if (!clip) {\n                                    var mult = _ieVers < 8 ? 1 : -1, marg, prop, dif;\n                                    dx = t.ieOffsetX || 0;\n                                    dy = t.ieOffsetY || 0;\n                                    t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n                                    t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n                                    for (i = 0; i < 4; i++) {\n                                        prop = _margins[i];\n                                        marg = cs[prop];\n                                        val = marg.indexOf(\"px\") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n                                        if (val !== t[prop]) {\n                                            dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY;\n                                        } else {\n                                            dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n                                        }\n                                        style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + \"px\";\n                                    }\n                                }\n                            }, _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n                                var t = this.data, style = this.t.style, angle = t.rotation, rotationX = t.rotationX, rotationY = t.rotationY, sx = t.scaleX, sy = t.scaleY, sz = t.scaleZ, x = t.x, y = t.y, z = t.z, isSVG = t.svg, perspective = t.perspective, force3D = t.force3D, a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43, zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;\n                                if (((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {\n                                    if (angle || t.skewX || isSVG) {\n                                        angle *= _DEG2RAD;\n                                        skew = t.skewX * _DEG2RAD;\n                                        rnd = 1e5;\n                                        a11 = Math.cos(angle) * sx;\n                                        a21 = Math.sin(angle) * sx;\n                                        a12 = Math.sin(angle - skew) * -sy;\n                                        a22 = Math.cos(angle - skew) * sy;\n                                        if (skew && t.skewType === \"simple\") {\n                                            t1 = Math.tan(skew);\n                                            t1 = Math.sqrt(1 + t1 * t1);\n                                            a12 *= t1;\n                                            a22 *= t1;\n                                            if (t.skewY) {\n                                                a11 *= t1;\n                                                a21 *= t1;\n                                            }\n                                        }\n                                        if (isSVG) {\n                                            x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n                                            y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n                                            if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {\n                                                min = this.t.getBBox();\n                                                x += t.xPercent * .01 * min.width;\n                                                y += t.yPercent * .01 * min.height;\n                                            }\n                                            min = 1e-6;\n                                            if (x < min) if (x > -min) {\n                                                x = 0;\n                                            }\n                                            if (y < min) if (y > -min) {\n                                                y = 0;\n                                            }\n                                        }\n                                        transform = (a11 * rnd | 0) / rnd + \",\" + (a21 * rnd | 0) / rnd + \",\" + (a12 * rnd | 0) / rnd + \",\" + (a22 * rnd | 0) / rnd + \",\" + x + \",\" + y + \")\";\n                                        if (isSVG && _useSVGTransformAttr) {\n                                            this.t.setAttribute(\"transform\", \"matrix(\" + transform);\n                                        } else {\n                                            style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n                                        }\n                                    } else {\n                                        style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n                                    }\n                                    return;\n                                }\n                                if (_isFirefox) {\n                                    min = 1e-4;\n                                    if (sx < min && sx > -min) {\n                                        sx = sz = 2e-5;\n                                    }\n                                    if (sy < min && sy > -min) {\n                                        sy = sz = 2e-5;\n                                    }\n                                    if (perspective && !t.z && !t.rotationX && !t.rotationY) {\n                                        perspective = 0;\n                                    }\n                                }\n                                if (angle || t.skewX) {\n                                    angle *= _DEG2RAD;\n                                    cos = a11 = Math.cos(angle);\n                                    sin = a21 = Math.sin(angle);\n                                    if (t.skewX) {\n                                        angle -= t.skewX * _DEG2RAD;\n                                        cos = Math.cos(angle);\n                                        sin = Math.sin(angle);\n                                        if (t.skewType === \"simple\") {\n                                            t1 = Math.tan(t.skewX * _DEG2RAD);\n                                            t1 = Math.sqrt(1 + t1 * t1);\n                                            cos *= t1;\n                                            sin *= t1;\n                                            if (t.skewY) {\n                                                a11 *= t1;\n                                                a21 *= t1;\n                                            }\n                                        }\n                                    }\n                                    a12 = -sin;\n                                    a22 = cos;\n                                } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {\n                                    style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z + \"px)\" + (sx !== 1 || sy !== 1 ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n                                    return;\n                                } else {\n                                    a11 = a22 = 1;\n                                    a12 = a21 = 0;\n                                }\n                                a33 = 1;\n                                a13 = a23 = a31 = a32 = a41 = a42 = 0;\n                                a43 = perspective ? -1 / perspective : 0;\n                                zOrigin = t.zOrigin;\n                                min = 1e-6;\n                                comma = \",\";\n                                zero = \"0\";\n                                angle = rotationY * _DEG2RAD;\n                                if (angle) {\n                                    cos = Math.cos(angle);\n                                    sin = Math.sin(angle);\n                                    a31 = -sin;\n                                    a41 = a43 * -sin;\n                                    a13 = a11 * sin;\n                                    a23 = a21 * sin;\n                                    a33 = cos;\n                                    a43 *= cos;\n                                    a11 *= cos;\n                                    a21 *= cos;\n                                }\n                                angle = rotationX * _DEG2RAD;\n                                if (angle) {\n                                    cos = Math.cos(angle);\n                                    sin = Math.sin(angle);\n                                    t1 = a12 * cos + a13 * sin;\n                                    t2 = a22 * cos + a23 * sin;\n                                    a32 = a33 * sin;\n                                    a42 = a43 * sin;\n                                    a13 = a12 * -sin + a13 * cos;\n                                    a23 = a22 * -sin + a23 * cos;\n                                    a33 = a33 * cos;\n                                    a43 = a43 * cos;\n                                    a12 = t1;\n                                    a22 = t2;\n                                }\n                                if (sz !== 1) {\n                                    a13 *= sz;\n                                    a23 *= sz;\n                                    a33 *= sz;\n                                    a43 *= sz;\n                                }\n                                if (sy !== 1) {\n                                    a12 *= sy;\n                                    a22 *= sy;\n                                    a32 *= sy;\n                                    a42 *= sy;\n                                }\n                                if (sx !== 1) {\n                                    a11 *= sx;\n                                    a21 *= sx;\n                                    a31 *= sx;\n                                    a41 *= sx;\n                                }\n                                if (zOrigin || isSVG) {\n                                    if (zOrigin) {\n                                        x += a13 * -zOrigin;\n                                        y += a23 * -zOrigin;\n                                        z += a33 * -zOrigin + zOrigin;\n                                    }\n                                    if (isSVG) {\n                                        x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n                                        y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n                                    }\n                                    if (x < min && x > -min) {\n                                        x = zero;\n                                    }\n                                    if (y < min && y > -min) {\n                                        y = zero;\n                                    }\n                                    if (z < min && z > -min) {\n                                        z = 0;\n                                    }\n                                }\n                                transform = t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\";\n                                transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);\n                                transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);\n                                if (rotationX || rotationY || sz !== 1) {\n                                    transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);\n                                    transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;\n                                } else {\n                                    transform += \",0,0,0,0,1,0,\";\n                                }\n                                transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + \")\";\n                                style[_transformProp] = transform;\n                            };\n                            p = Transform.prototype;\n                            p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n                            p.scaleX = p.scaleY = p.scaleZ = 1;\n                            _registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {\n                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                    if (cssp._lastParsedTransform === vars) {\n                                        return pt;\n                                    }\n                                    cssp._lastParsedTransform = vars;\n                                    var originalGSTransform = t._gsTransform, style = t.style, min = 1e-6, i = _transformProps.length, v = vars, endRotations = {}, transformOriginString = \"transformOrigin\", m1 = _getTransform(t, _cs, true, vars.parseTransform), m2, copy, orig, has3D, hasChange, dr, x, y, matrix;\n                                    cssp._transform = m1;\n                                    if (typeof v.transform === \"string\" && _transformProp) {\n                                        copy = _tempDiv.style;\n                                        copy[_transformProp] = v.transform;\n                                        copy.display = \"block\";\n                                        copy.position = \"absolute\";\n                                        _doc.body.appendChild(_tempDiv);\n                                        m2 = _getTransform(_tempDiv, null, false);\n                                        if (m1.svg) {\n                                            x = m1.xOrigin;\n                                            y = m1.yOrigin;\n                                            m2.x -= m1.xOffset;\n                                            m2.y -= m1.yOffset;\n                                            if (v.transformOrigin || v.svgOrigin) {\n                                                orig = {};\n                                                _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n                                                x = orig.xOrigin;\n                                                y = orig.yOrigin;\n                                                m2.x -= orig.xOffset - m1.xOffset;\n                                                m2.y -= orig.yOffset - m1.yOffset;\n                                            }\n                                            if (x || y) {\n                                                matrix = _getMatrix(_tempDiv, true);\n                                                m2.x -= x - (x * matrix[0] + y * matrix[2]);\n                                                m2.y -= y - (x * matrix[1] + y * matrix[3]);\n                                            }\n                                        }\n                                        _doc.body.removeChild(_tempDiv);\n                                        if (!m2.perspective) {\n                                            m2.perspective = m1.perspective;\n                                        }\n                                        if (v.xPercent != null) {\n                                            m2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n                                        }\n                                        if (v.yPercent != null) {\n                                            m2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n                                        }\n                                    } else if (typeof v === \"object\") {\n                                        m2 = {\n                                            scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),\n                                            scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),\n                                            scaleZ: _parseVal(v.scaleZ, m1.scaleZ),\n                                            x: _parseVal(v.x, m1.x),\n                                            y: _parseVal(v.y, m1.y),\n                                            z: _parseVal(v.z, m1.z),\n                                            xPercent: _parseVal(v.xPercent, m1.xPercent),\n                                            yPercent: _parseVal(v.yPercent, m1.yPercent),\n                                            perspective: _parseVal(v.transformPerspective, m1.perspective)\n                                        };\n                                        dr = v.directionalRotation;\n                                        if (dr != null) {\n                                            if (typeof dr === \"object\") {\n                                                for (copy in dr) {\n                                                    v[copy] = dr[copy];\n                                                }\n                                            } else {\n                                                v.rotation = dr;\n                                            }\n                                        }\n                                        if (typeof v.x === \"string\" && v.x.indexOf(\"%\") !== -1) {\n                                            m2.x = 0;\n                                            m2.xPercent = _parseVal(v.x, m1.xPercent);\n                                        }\n                                        if (typeof v.y === \"string\" && v.y.indexOf(\"%\") !== -1) {\n                                            m2.y = 0;\n                                            m2.yPercent = _parseVal(v.y, m1.yPercent);\n                                        }\n                                        m2.rotation = _parseAngle(\"rotation\" in v ? v.rotation : \"shortRotation\" in v ? v.shortRotation + \"_short\" : \"rotationZ\" in v ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, \"rotation\", endRotations);\n                                        if (_supports3D) {\n                                            m2.rotationX = _parseAngle(\"rotationX\" in v ? v.rotationX : \"shortRotationX\" in v ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n                                            m2.rotationY = _parseAngle(\"rotationY\" in v ? v.rotationY : \"shortRotationY\" in v ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n                                        }\n                                        m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY);\n                                        if (m2.skewY = _parseAngle(v.skewY, m1.skewY)) {\n                                            m2.skewX += m2.skewY;\n                                            m2.rotation += m2.skewY;\n                                        }\n                                    }\n                                    if (_supports3D && v.force3D != null) {\n                                        m1.force3D = v.force3D;\n                                        hasChange = true;\n                                    }\n                                    m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n                                    has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;\n                                    if (!has3D && v.scale != null) {\n                                        m2.scaleZ = 1;\n                                    }\n                                    while (--i > -1) {\n                                        p = _transformProps[i];\n                                        orig = m2[p] - m1[p];\n                                        if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n                                            hasChange = true;\n                                            pt = new CSSPropTween(m1, p, m1[p], orig, pt);\n                                            if (p in endRotations) {\n                                                pt.e = endRotations[p];\n                                            }\n                                            pt.xs0 = 0;\n                                            pt.plugin = plugin;\n                                            cssp._overwriteProps.push(pt.n);\n                                        }\n                                    }\n                                    orig = v.transformOrigin;\n                                    if (m1.svg && (orig || v.svgOrigin)) {\n                                        x = m1.xOffset;\n                                        y = m1.yOffset;\n                                        _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n                                        pt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString);\n                                        pt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n                                        if (x !== m1.xOffset || y !== m1.yOffset) {\n                                            pt = _addNonTweeningNumericPT(m1, \"xOffset\", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);\n                                            pt = _addNonTweeningNumericPT(m1, \"yOffset\", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);\n                                        }\n                                        orig = _useSVGTransformAttr ? null : \"0px 0px\";\n                                    }\n                                    if (orig || _supports3D && has3D && m1.zOrigin) {\n                                        if (_transformProp) {\n                                            hasChange = true;\n                                            p = _transformOriginProp;\n                                            orig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\";\n                                            pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n                                            pt.b = style[p];\n                                            pt.plugin = plugin;\n                                            if (_supports3D) {\n                                                copy = m1.zOrigin;\n                                                orig = orig.split(\" \");\n                                                m1.zOrigin = (orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\") ? parseFloat(orig[2]) : copy) || 0;\n                                                pt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\";\n                                                pt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n);\n                                                pt.b = copy;\n                                                pt.xs0 = pt.e = m1.zOrigin;\n                                            } else {\n                                                pt.xs0 = pt.e = orig;\n                                            }\n                                        } else {\n                                            _parsePosition(orig + \"\", m1);\n                                        }\n                                    }\n                                    if (hasChange) {\n                                        cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2;\n                                    }\n                                    return pt;\n                                },\n                                prefix: true\n                            });\n                            _registerComplexSpecialProp(\"boxShadow\", {\n                                defaultValue: \"0px 0px 0px 0px #999\",\n                                prefix: true,\n                                color: true,\n                                multi: true,\n                                keyword: \"inset\"\n                            });\n                            _registerComplexSpecialProp(\"borderRadius\", {\n                                defaultValue: \"0px\",\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    e = this.format(e);\n                                    var props = [ \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\" ], style = t.style, ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n                                    w = parseFloat(t.offsetWidth);\n                                    h = parseFloat(t.offsetHeight);\n                                    ea1 = e.split(\" \");\n                                    for (i = 0; i < props.length; i++) {\n                                        if (this.p.indexOf(\"border\")) {\n                                            props[i] = _checkPropPrefix(props[i]);\n                                        }\n                                        bs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n                                        if (bs.indexOf(\" \") !== -1) {\n                                            bs2 = bs.split(\" \");\n                                            bs = bs2[0];\n                                            bs2 = bs2[1];\n                                        }\n                                        es = es2 = ea1[i];\n                                        bn = parseFloat(bs);\n                                        bsfx = bs.substr((bn + \"\").length);\n                                        rel = es.charAt(1) === \"=\";\n                                        if (rel) {\n                                            en = parseInt(es.charAt(0) + \"1\", 10);\n                                            es = es.substr(2);\n                                            en *= parseFloat(es);\n                                            esfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n                                        } else {\n                                            en = parseFloat(es);\n                                            esfx = es.substr((en + \"\").length);\n                                        }\n                                        if (esfx === \"\") {\n                                            esfx = _suffixMap[p] || bsfx;\n                                        }\n                                        if (esfx !== bsfx) {\n                                            hn = _convertToPixels(t, \"borderLeft\", bn, bsfx);\n                                            vn = _convertToPixels(t, \"borderTop\", bn, bsfx);\n                                            if (esfx === \"%\") {\n                                                bs = hn / w * 100 + \"%\";\n                                                bs2 = vn / h * 100 + \"%\";\n                                            } else if (esfx === \"em\") {\n                                                em = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n                                                bs = hn / em + \"em\";\n                                                bs2 = vn / em + \"em\";\n                                            } else {\n                                                bs = hn + \"px\";\n                                                bs2 = vn + \"px\";\n                                            }\n                                            if (rel) {\n                                                es = parseFloat(bs) + en + esfx;\n                                                es2 = parseFloat(bs2) + en + esfx;\n                                            }\n                                        }\n                                        pt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n                                    }\n                                    return pt;\n                                },\n                                prefix: true,\n                                formatter: _getFormatter(\"0px 0px 0px 0px\", false, true)\n                            });\n                            _registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {\n                                defaultValue: \"0px\",\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n                                },\n                                prefix: true,\n                                formatter: _getFormatter(\"0px 0px\", false, true)\n                            });\n                            _registerComplexSpecialProp(\"backgroundPosition\", {\n                                defaultValue: \"0 0\",\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    var bp = \"background-position\", cs = _cs || _getComputedStyle(t, null), bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), es = this.format(e), ba, ea, i, pct, overlap, src;\n                                    if (bs.indexOf(\"%\") !== -1 !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n                                        src = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n                                        if (src && src !== \"none\") {\n                                            ba = bs.split(\" \");\n                                            ea = es.split(\" \");\n                                            _tempImg.setAttribute(\"src\", src);\n                                            i = 2;\n                                            while (--i > -1) {\n                                                bs = ba[i];\n                                                pct = bs.indexOf(\"%\") !== -1;\n                                                if (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n                                                    overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n                                                    ba[i] = pct ? parseFloat(bs) / 100 * overlap + \"px\" : parseFloat(bs) / overlap * 100 + \"%\";\n                                                }\n                                            }\n                                            bs = ba.join(\" \");\n                                        }\n                                    }\n                                    return this.parseComplex(t.style, bs, es, pt, plugin);\n                                },\n                                formatter: _parsePosition\n                            });\n                            _registerComplexSpecialProp(\"backgroundSize\", {\n                                defaultValue: \"0 0\",\n                                formatter: _parsePosition\n                            });\n                            _registerComplexSpecialProp(\"perspective\", {\n                                defaultValue: \"0px\",\n                                prefix: true\n                            });\n                            _registerComplexSpecialProp(\"perspectiveOrigin\", {\n                                defaultValue: \"50% 50%\",\n                                prefix: true\n                            });\n                            _registerComplexSpecialProp(\"transformStyle\", {\n                                prefix: true\n                            });\n                            _registerComplexSpecialProp(\"backfaceVisibility\", {\n                                prefix: true\n                            });\n                            _registerComplexSpecialProp(\"userSelect\", {\n                                prefix: true\n                            });\n                            _registerComplexSpecialProp(\"margin\", {\n                                parser: _getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")\n                            });\n                            _registerComplexSpecialProp(\"padding\", {\n                                parser: _getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")\n                            });\n                            _registerComplexSpecialProp(\"clip\", {\n                                defaultValue: \"rect(0px,0px,0px,0px)\",\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    var b, cs, delim;\n                                    if (_ieVers < 9) {\n                                        cs = t.currentStyle;\n                                        delim = _ieVers < 8 ? \" \" : \",\";\n                                        b = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n                                        e = this.format(e).split(\",\").join(delim);\n                                    } else {\n                                        b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n                                        e = this.format(e);\n                                    }\n                                    return this.parseComplex(t.style, b, e, pt, plugin);\n                                }\n                            });\n                            _registerComplexSpecialProp(\"textShadow\", {\n                                defaultValue: \"0px 0px 0px #999\",\n                                color: true,\n                                multi: true\n                            });\n                            _registerComplexSpecialProp(\"autoRound,strictUnits\", {\n                                parser: function(t, e, p, cssp, pt) {\n                                    return pt;\n                                }\n                            });\n                            _registerComplexSpecialProp(\"border\", {\n                                defaultValue: \"0px solid #000\",\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    var bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"), end = this.format(e).split(\" \"), esfx = end[0].replace(_suffixExp, \"\");\n                                    if (esfx !== \"px\") {\n                                        bw = parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx) + esfx;\n                                    }\n                                    return this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n                                },\n                                color: true,\n                                formatter: function(v) {\n                                    var a = v.split(\" \");\n                                    return a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [ \"#000\" ])[0];\n                                }\n                            });\n                            _registerComplexSpecialProp(\"borderWidth\", {\n                                parser: _getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")\n                            });\n                            _registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    var s = t.style, prop = \"cssFloat\" in s ? \"cssFloat\" : \"styleFloat\";\n                                    return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n                                }\n                            });\n                            var _setIEOpacityRatio = function(v) {\n                                var t = this.t, filters = t.filter || _getStyle(this.data, \"filter\") || \"\", val = this.s + this.c * v | 0, skip;\n                                if (val === 100) {\n                                    if (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n                                        t.removeAttribute(\"filter\");\n                                        skip = !_getStyle(this.data, \"filter\");\n                                    } else {\n                                        t.filter = filters.replace(_alphaFilterExp, \"\");\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    if (this.xn1) {\n                                        t.filter = filters = filters || \"alpha(opacity=\" + val + \")\";\n                                    }\n                                    if (filters.indexOf(\"pacity\") === -1) {\n                                        if (val !== 0 || !this.xn1) {\n                                            t.filter = filters + \" alpha(opacity=\" + val + \")\";\n                                        }\n                                    } else {\n                                        t.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n                                    }\n                                }\n                            };\n                            _registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {\n                                defaultValue: \"1\",\n                                parser: function(t, e, p, cssp, pt, plugin) {\n                                    var b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")), style = t.style, isAutoAlpha = p === \"autoAlpha\";\n                                    if (typeof e === \"string\" && e.charAt(1) === \"=\") {\n                                        e = (e.charAt(0) === \"-\" ? -1 : 1) * parseFloat(e.substr(2)) + b;\n                                    }\n                                    if (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) {\n                                        b = 0;\n                                    }\n                                    if (_supportsOpacity) {\n                                        pt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n                                    } else {\n                                        pt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n                                        pt.xn1 = isAutoAlpha ? 1 : 0;\n                                        style.zoom = 1;\n                                        pt.type = 2;\n                                        pt.b = \"alpha(opacity=\" + pt.s + \")\";\n                                        pt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n                                        pt.data = t;\n                                        pt.plugin = plugin;\n                                        pt.setRatio = _setIEOpacityRatio;\n                                    }\n                                    if (isAutoAlpha) {\n                                        pt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, b !== 0 ? \"inherit\" : \"hidden\", e === 0 ? \"hidden\" : \"inherit\");\n                                        pt.xs0 = \"inherit\";\n                                        cssp._overwriteProps.push(pt.n);\n                                        cssp._overwriteProps.push(p);\n                                    }\n                                    return pt;\n                                }\n                            });\n                            var _removeProp = function(s, p) {\n                                if (p) {\n                                    if (s.removeProperty) {\n                                        if (p.substr(0, 2) === \"ms\" || p.substr(0, 6) === \"webkit\") {\n                                            p = \"-\" + p;\n                                        }\n                                        s.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n                                    } else {\n                                        s.removeAttribute(p);\n                                    }\n                                }\n                            }, _setClassNameRatio = function(v) {\n                                this.t._gsClassPT = this;\n                                if (v === 1 || v === 0) {\n                                    this.t.setAttribute(\"class\", v === 0 ? this.b : this.e);\n                                    var mpt = this.data, s = this.t.style;\n                                    while (mpt) {\n                                        if (!mpt.v) {\n                                            _removeProp(s, mpt.p);\n                                        } else {\n                                            s[mpt.p] = mpt.v;\n                                        }\n                                        mpt = mpt._next;\n                                    }\n                                    if (v === 1 && this.t._gsClassPT === this) {\n                                        this.t._gsClassPT = null;\n                                    }\n                                } else if (this.t.getAttribute(\"class\") !== this.e) {\n                                    this.t.setAttribute(\"class\", this.e);\n                                }\n                            };\n                            _registerComplexSpecialProp(\"className\", {\n                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                    var b = t.getAttribute(\"class\") || \"\", cssText = t.style.cssText, difData, bs, cnpt, cnptLookup, mpt;\n                                    pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n                                    pt.setRatio = _setClassNameRatio;\n                                    pt.pr = -11;\n                                    _hasPriority = true;\n                                    pt.b = b;\n                                    bs = _getAllStyles(t, _cs);\n                                    cnpt = t._gsClassPT;\n                                    if (cnpt) {\n                                        cnptLookup = {};\n                                        mpt = cnpt.data;\n                                        while (mpt) {\n                                            cnptLookup[mpt.p] = 1;\n                                            mpt = mpt._next;\n                                        }\n                                        cnpt.setRatio(1);\n                                    }\n                                    t._gsClassPT = pt;\n                                    pt.e = e.charAt(1) !== \"=\" ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + (e.charAt(0) === \"+\" ? \" \" + e.substr(2) : \"\");\n                                    t.setAttribute(\"class\", pt.e);\n                                    difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n                                    t.setAttribute(\"class\", b);\n                                    pt.data = difData.firstMPT;\n                                    t.style.cssText = cssText;\n                                    pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin);\n                                    return pt;\n                                }\n                            });\n                            var _setClearPropsRatio = function(v) {\n                                if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") {\n                                    var s = this.t.style, transformParse = _specialProps.transform.parse, a, p, i, clearTransform, transform;\n                                    if (this.e === \"all\") {\n                                        s.cssText = \"\";\n                                        clearTransform = true;\n                                    } else {\n                                        a = this.e.split(\" \").join(\"\").split(\",\");\n                                        i = a.length;\n                                        while (--i > -1) {\n                                            p = a[i];\n                                            if (_specialProps[p]) {\n                                                if (_specialProps[p].parse === transformParse) {\n                                                    clearTransform = true;\n                                                } else {\n                                                    p = p === \"transformOrigin\" ? _transformOriginProp : _specialProps[p].p;\n                                                }\n                                            }\n                                            _removeProp(s, p);\n                                        }\n                                    }\n                                    if (clearTransform) {\n                                        _removeProp(s, _transformProp);\n                                        transform = this.t._gsTransform;\n                                        if (transform) {\n                                            if (transform.svg) {\n                                                this.t.removeAttribute(\"data-svg-origin\");\n                                                this.t.removeAttribute(\"transform\");\n                                            }\n                                            delete this.t._gsTransform;\n                                        }\n                                    }\n                                }\n                            };\n                            _registerComplexSpecialProp(\"clearProps\", {\n                                parser: function(t, e, p, cssp, pt) {\n                                    pt = new CSSPropTween(t, p, 0, 0, pt, 2);\n                                    pt.setRatio = _setClearPropsRatio;\n                                    pt.e = e;\n                                    pt.pr = -10;\n                                    pt.data = cssp._tween;\n                                    _hasPriority = true;\n                                    return pt;\n                                }\n                            });\n                            p = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n                            i = p.length;\n                            while (i--) {\n                                _registerPluginProp(p[i]);\n                            }\n                            p = CSSPlugin.prototype;\n                            p._firstPT = p._lastParsedTransform = p._transform = null;\n                            p._onInitTween = function(target, vars, tween) {\n                                if (!target.nodeType) {\n                                    return false;\n                                }\n                                this._target = target;\n                                this._tween = tween;\n                                this._vars = vars;\n                                _autoRound = vars.autoRound;\n                                _hasPriority = false;\n                                _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n                                _cs = _getComputedStyle(target, \"\");\n                                _overwriteProps = this._overwriteProps;\n                                var style = target.style, v, pt, pt2, first, last, next, zIndex, tpt, threeD;\n                                if (_reqSafariFix) if (style.zIndex === \"\") {\n                                    v = _getStyle(target, \"zIndex\", _cs);\n                                    if (v === \"auto\" || v === \"\") {\n                                        this._addLazySet(style, \"zIndex\", 0);\n                                    }\n                                }\n                                if (typeof vars === \"string\") {\n                                    first = style.cssText;\n                                    v = _getAllStyles(target, _cs);\n                                    style.cssText = first + \";\" + vars;\n                                    v = _cssDif(target, v, _getAllStyles(target)).difs;\n                                    if (!_supportsOpacity && _opacityValExp.test(vars)) {\n                                        v.opacity = parseFloat(RegExp.$1);\n                                    }\n                                    vars = v;\n                                    style.cssText = first;\n                                }\n                                if (vars.className) {\n                                    this._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n                                } else {\n                                    this._firstPT = pt = this.parse(target, vars, null);\n                                }\n                                if (this._transformType) {\n                                    threeD = this._transformType === 3;\n                                    if (!_transformProp) {\n                                        style.zoom = 1;\n                                    } else if (_isSafari) {\n                                        _reqSafariFix = true;\n                                        if (style.zIndex === \"\") {\n                                            zIndex = _getStyle(target, \"zIndex\", _cs);\n                                            if (zIndex === \"auto\" || zIndex === \"\") {\n                                                this._addLazySet(style, \"zIndex\", 0);\n                                            }\n                                        }\n                                        if (_isSafariLT6) {\n                                            this._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n                                        }\n                                    }\n                                    pt2 = pt;\n                                    while (pt2 && pt2._next) {\n                                        pt2 = pt2._next;\n                                    }\n                                    tpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n                                    this._linkCSSP(tpt, null, pt2);\n                                    tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n                                    tpt.data = this._transform || _getTransform(target, _cs, true);\n                                    tpt.tween = tween;\n                                    tpt.pr = -1;\n                                    _overwriteProps.pop();\n                                }\n                                if (_hasPriority) {\n                                    while (pt) {\n                                        next = pt._next;\n                                        pt2 = first;\n                                        while (pt2 && pt2.pr > pt.pr) {\n                                            pt2 = pt2._next;\n                                        }\n                                        if (pt._prev = pt2 ? pt2._prev : last) {\n                                            pt._prev._next = pt;\n                                        } else {\n                                            first = pt;\n                                        }\n                                        if (pt._next = pt2) {\n                                            pt2._prev = pt;\n                                        } else {\n                                            last = pt;\n                                        }\n                                        pt = next;\n                                    }\n                                    this._firstPT = first;\n                                }\n                                return true;\n                            };\n                            p.parse = function(target, vars, pt, plugin) {\n                                var style = target.style, p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n                                for (p in vars) {\n                                    es = vars[p];\n                                    sp = _specialProps[p];\n                                    if (sp) {\n                                        pt = sp.parse(target, es, p, this, pt, plugin, vars);\n                                    } else {\n                                        bs = _getStyle(target, p, _cs) + \"\";\n                                        isStr = typeof es === \"string\";\n                                        if (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || isStr && _rgbhslExp.test(es)) {\n                                            if (!isStr) {\n                                                es = _parseColor(es);\n                                                es = (es.length > 3 ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n                                            }\n                                            pt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n                                        } else if (isStr && _complexExp.test(es)) {\n                                            pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n                                        } else {\n                                            bn = parseFloat(bs);\n                                            bsfx = bn || bn === 0 ? bs.substr((bn + \"\").length) : \"\";\n                                            if (bs === \"\" || bs === \"auto\") {\n                                                if (p === \"width\" || p === \"height\") {\n                                                    bn = _getDimension(target, p, _cs);\n                                                    bsfx = \"px\";\n                                                } else if (p === \"left\" || p === \"top\") {\n                                                    bn = _calculateOffset(target, p, _cs);\n                                                    bsfx = \"px\";\n                                                } else {\n                                                    bn = p !== \"opacity\" ? 0 : 1;\n                                                    bsfx = \"\";\n                                                }\n                                            }\n                                            rel = isStr && es.charAt(1) === \"=\";\n                                            if (rel) {\n                                                en = parseInt(es.charAt(0) + \"1\", 10);\n                                                es = es.substr(2);\n                                                en *= parseFloat(es);\n                                                esfx = es.replace(_suffixExp, \"\");\n                                            } else {\n                                                en = parseFloat(es);\n                                                esfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n                                            }\n                                            if (esfx === \"\") {\n                                                esfx = p in _suffixMap ? _suffixMap[p] : bsfx;\n                                            }\n                                            es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p];\n                                            if (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) {\n                                                bn = _convertToPixels(target, p, bn, bsfx);\n                                                if (esfx === \"%\") {\n                                                    bn /= _convertToPixels(target, p, 100, \"%\") / 100;\n                                                    if (vars.strictUnits !== true) {\n                                                        bs = bn + \"%\";\n                                                    }\n                                                } else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n                                                    bn /= _convertToPixels(target, p, 1, esfx);\n                                                } else if (esfx !== \"px\") {\n                                                    en = _convertToPixels(target, p, en, esfx);\n                                                    esfx = \"px\";\n                                                }\n                                                if (rel) if (en || en === 0) {\n                                                    es = en + bn + esfx;\n                                                }\n                                            }\n                                            if (rel) {\n                                                en += bn;\n                                            }\n                                            if ((bn || bn === 0) && (en || en === 0)) {\n                                                pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === \"px\" || p === \"zIndex\"), 0, bs, es);\n                                                pt.xs0 = esfx;\n                                            } else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n                                                _log(\"invalid \" + p + \" tween value: \" + vars[p]);\n                                            } else {\n                                                pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n                                                pt.xs0 = es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1) ? bs : es;\n                                            }\n                                        }\n                                    }\n                                    if (plugin) if (pt && !pt.plugin) {\n                                        pt.plugin = plugin;\n                                    }\n                                }\n                                return pt;\n                            };\n                            p.setRatio = function(v) {\n                                var pt = this._firstPT, min = 1e-6, val, str, i;\n                                if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n                                    while (pt) {\n                                        if (pt.type !== 2) {\n                                            if (pt.r && pt.type !== -1) {\n                                                val = Math.round(pt.s + pt.c);\n                                                if (!pt.type) {\n                                                    pt.t[pt.p] = val + pt.xs0;\n                                                } else if (pt.type === 1) {\n                                                    i = pt.l;\n                                                    str = pt.xs0 + val + pt.xs1;\n                                                    for (i = 1; i < pt.l; i++) {\n                                                        str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                                    }\n                                                    pt.t[pt.p] = str;\n                                                }\n                                            } else {\n                                                pt.t[pt.p] = pt.e;\n                                            }\n                                        } else {\n                                            pt.setRatio(v);\n                                        }\n                                        pt = pt._next;\n                                    }\n                                } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -1e-6) {\n                                    while (pt) {\n                                        val = pt.c * v + pt.s;\n                                        if (pt.r) {\n                                            val = Math.round(val);\n                                        } else if (val < min) if (val > -min) {\n                                            val = 0;\n                                        }\n                                        if (!pt.type) {\n                                            pt.t[pt.p] = val + pt.xs0;\n                                        } else if (pt.type === 1) {\n                                            i = pt.l;\n                                            if (i === 2) {\n                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n                                            } else if (i === 3) {\n                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n                                            } else if (i === 4) {\n                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n                                            } else if (i === 5) {\n                                                pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n                                            } else {\n                                                str = pt.xs0 + val + pt.xs1;\n                                                for (i = 1; i < pt.l; i++) {\n                                                    str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                                }\n                                                pt.t[pt.p] = str;\n                                            }\n                                        } else if (pt.type === -1) {\n                                            pt.t[pt.p] = pt.xs0;\n                                        } else if (pt.setRatio) {\n                                            pt.setRatio(v);\n                                        }\n                                        pt = pt._next;\n                                    }\n                                } else {\n                                    while (pt) {\n                                        if (pt.type !== 2) {\n                                            pt.t[pt.p] = pt.b;\n                                        } else {\n                                            pt.setRatio(v);\n                                        }\n                                        pt = pt._next;\n                                    }\n                                }\n                            };\n                            p._enableTransforms = function(threeD) {\n                                this._transform = this._transform || _getTransform(this._target, _cs, true);\n                                this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;\n                            };\n                            var lazySet = function(v) {\n                                this.t[this.p] = this.e;\n                                this.data._linkCSSP(this, this._next, null, true);\n                            };\n                            p._addLazySet = function(t, p, v) {\n                                var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n                                pt.e = v;\n                                pt.setRatio = lazySet;\n                                pt.data = this;\n                            };\n                            p._linkCSSP = function(pt, next, prev, remove) {\n                                if (pt) {\n                                    if (next) {\n                                        next._prev = pt;\n                                    }\n                                    if (pt._next) {\n                                        pt._next._prev = pt._prev;\n                                    }\n                                    if (pt._prev) {\n                                        pt._prev._next = pt._next;\n                                    } else if (this._firstPT === pt) {\n                                        this._firstPT = pt._next;\n                                        remove = true;\n                                    }\n                                    if (prev) {\n                                        prev._next = pt;\n                                    } else if (!remove && this._firstPT === null) {\n                                        this._firstPT = pt;\n                                    }\n                                    pt._next = next;\n                                    pt._prev = prev;\n                                }\n                                return pt;\n                            };\n                            p._kill = function(lookup) {\n                                var copy = lookup, pt, p, xfirst;\n                                if (lookup.autoAlpha || lookup.alpha) {\n                                    copy = {};\n                                    for (p in lookup) {\n                                        copy[p] = lookup[p];\n                                    }\n                                    copy.opacity = 1;\n                                    if (copy.autoAlpha) {\n                                        copy.visibility = 1;\n                                    }\n                                }\n                                if (lookup.className && (pt = this._classNamePT)) {\n                                    xfirst = pt.xfirst;\n                                    if (xfirst && xfirst._prev) {\n                                        this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev);\n                                    } else if (xfirst === this._firstPT) {\n                                        this._firstPT = pt._next;\n                                    }\n                                    if (pt._next) {\n                                        this._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n                                    }\n                                    this._classNamePT = null;\n                                }\n                                return TweenPlugin.prototype._kill.call(this, copy);\n                            };\n                            var _getChildStyles = function(e, props, targets) {\n                                var children, i, child, type;\n                                if (e.slice) {\n                                    i = e.length;\n                                    while (--i > -1) {\n                                        _getChildStyles(e[i], props, targets);\n                                    }\n                                    return;\n                                }\n                                children = e.childNodes;\n                                i = children.length;\n                                while (--i > -1) {\n                                    child = children[i];\n                                    type = child.type;\n                                    if (child.style) {\n                                        props.push(_getAllStyles(child));\n                                        if (targets) {\n                                            targets.push(child);\n                                        }\n                                    }\n                                    if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n                                        _getChildStyles(child, props, targets);\n                                    }\n                                }\n                            };\n                            CSSPlugin.cascadeTo = function(target, duration, vars) {\n                                var tween = TweenLite.to(target, duration, vars), results = [ tween ], b = [], e = [], targets = [], _reservedProps = TweenLite._internals.reservedProps, i, difs, p, from;\n                                target = tween._targets || tween.target;\n                                _getChildStyles(target, b, targets);\n                                tween.render(duration, true, true);\n                                _getChildStyles(target, e);\n                                tween.render(0, true, true);\n                                tween._enabled(true);\n                                i = targets.length;\n                                while (--i > -1) {\n                                    difs = _cssDif(targets[i], b[i], e[i]);\n                                    if (difs.firstMPT) {\n                                        difs = difs.difs;\n                                        for (p in vars) {\n                                            if (_reservedProps[p]) {\n                                                difs[p] = vars[p];\n                                            }\n                                        }\n                                        from = {};\n                                        for (p in difs) {\n                                            from[p] = b[i][p];\n                                        }\n                                        results.push(TweenLite.fromTo(targets[i], duration, from, difs));\n                                    }\n                                }\n                                return results;\n                            };\n                            TweenPlugin.activate([ CSSPlugin ]);\n                            return CSSPlugin;\n                        }, true);\n                        (function() {\n                            var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n                                propName: \"roundProps\",\n                                version: \"1.5\",\n                                priority: -1,\n                                API: 2,\n                                init: function(target, value, tween) {\n                                    this._tween = tween;\n                                    return true;\n                                }\n                            }), _roundLinkedList = function(node) {\n                                while (node) {\n                                    if (!node.f && !node.blob) {\n                                        node.r = 1;\n                                    }\n                                    node = node._next;\n                                }\n                            }, p = RoundPropsPlugin.prototype;\n                            p._onInitAllProps = function() {\n                                var tween = this._tween, rp = tween.vars.roundProps.join ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"), i = rp.length, lookup = {}, rpt = tween._propLookup.roundProps, prop, pt, next;\n                                while (--i > -1) {\n                                    lookup[rp[i]] = 1;\n                                }\n                                i = rp.length;\n                                while (--i > -1) {\n                                    prop = rp[i];\n                                    pt = tween._firstPT;\n                                    while (pt) {\n                                        next = pt._next;\n                                        if (pt.pg) {\n                                            pt.t._roundProps(lookup, true);\n                                        } else if (pt.n === prop) {\n                                            if (pt.f === 2 && pt.t) {\n                                                _roundLinkedList(pt.t._firstPT);\n                                            } else {\n                                                this._add(pt.t, prop, pt.s, pt.c);\n                                                if (next) {\n                                                    next._prev = pt._prev;\n                                                }\n                                                if (pt._prev) {\n                                                    pt._prev._next = next;\n                                                } else if (tween._firstPT === pt) {\n                                                    tween._firstPT = next;\n                                                }\n                                                pt._next = pt._prev = null;\n                                                tween._propLookup[prop] = rpt;\n                                            }\n                                        }\n                                        pt = next;\n                                    }\n                                }\n                                return false;\n                            };\n                            p._add = function(target, p, s, c) {\n                                this._addTween(target, p, s, s + c, p, true);\n                                this._overwriteProps.push(p);\n                            };\n                        })();\n                        (function() {\n                            _gsScope._gsDefine.plugin({\n                                propName: \"attr\",\n                                API: 2,\n                                version: \"0.5.0\",\n                                init: function(target, value, tween) {\n                                    var p;\n                                    if (typeof target.setAttribute !== \"function\") {\n                                        return false;\n                                    }\n                                    for (p in value) {\n                                        this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", value[p] + \"\", p, false, p);\n                                        this._overwriteProps.push(p);\n                                    }\n                                    return true;\n                                }\n                            });\n                        })();\n                        _gsScope._gsDefine.plugin({\n                            propName: \"directionalRotation\",\n                            version: \"0.2.1\",\n                            API: 2,\n                            init: function(target, value, tween) {\n                                if (typeof value !== \"object\") {\n                                    value = {\n                                        rotation: value\n                                    };\n                                }\n                                this.finals = {};\n                                var cap = value.useRadians === true ? Math.PI * 2 : 360, min = 1e-6, p, v, start, end, dif, split;\n                                for (p in value) {\n                                    if (p !== \"useRadians\") {\n                                        split = (value[p] + \"\").split(\"_\");\n                                        v = split[0];\n                                        start = parseFloat(typeof target[p] !== \"function\" ? target[p] : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]());\n                                        end = this.finals[p] = typeof v === \"string\" && v.charAt(1) === \"=\" ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n                                        dif = end - start;\n                                        if (split.length) {\n                                            v = split.join(\"_\");\n                                            if (v.indexOf(\"short\") !== -1) {\n                                                dif = dif % cap;\n                                                if (dif !== dif % (cap / 2)) {\n                                                    dif = dif < 0 ? dif + cap : dif - cap;\n                                                }\n                                            }\n                                            if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n                                                dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                            } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n                                                dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                            }\n                                        }\n                                        if (dif > min || dif < -min) {\n                                            this._addTween(target, p, start, start + dif, p);\n                                            this._overwriteProps.push(p);\n                                        }\n                                    }\n                                }\n                                return true;\n                            },\n                            set: function(ratio) {\n                                var pt;\n                                if (ratio !== 1) {\n                                    this._super.setRatio.call(this, ratio);\n                                } else {\n                                    pt = this._firstPT;\n                                    while (pt) {\n                                        if (pt.f) {\n                                            pt.t[pt.p](this.finals[pt.p]);\n                                        } else {\n                                            pt.t[pt.p] = this.finals[pt.p];\n                                        }\n                                        pt = pt._next;\n                                    }\n                                }\n                            }\n                        })._autoCSS = true;\n                        _gsScope._gsDefine(\"easing.Back\", [ \"easing.Ease\" ], function(Ease) {\n                            var w = _gsScope.GreenSockGlobals || _gsScope, gs = w.com.greensock, _2PI = Math.PI * 2, _HALF_PI = Math.PI / 2, _class = gs._class, _create = function(n, f) {\n                                var C = _class(\"easing.\" + n, function() {}, true), p = C.prototype = new Ease();\n                                p.constructor = C;\n                                p.getRatio = f;\n                                return C;\n                            }, _easeReg = Ease.register || function() {}, _wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n                                var C = _class(\"easing.\" + name, {\n                                    easeOut: new EaseOut(),\n                                    easeIn: new EaseIn(),\n                                    easeInOut: new EaseInOut()\n                                }, true);\n                                _easeReg(C, name);\n                                return C;\n                            }, EasePoint = function(time, value, next) {\n                                this.t = time;\n                                this.v = value;\n                                if (next) {\n                                    this.next = next;\n                                    next.prev = this;\n                                    this.c = next.v - value;\n                                    this.gap = next.t - time;\n                                }\n                            }, _createBack = function(n, f) {\n                                var C = _class(\"easing.\" + n, function(overshoot) {\n                                    this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;\n                                    this._p2 = this._p1 * 1.525;\n                                }, true), p = C.prototype = new Ease();\n                                p.constructor = C;\n                                p.getRatio = f;\n                                p.config = function(overshoot) {\n                                    return new C(overshoot);\n                                };\n                                return C;\n                            }, Back = _wrap(\"Back\", _createBack(\"BackOut\", function(p) {\n                                return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;\n                            }), _createBack(\"BackIn\", function(p) {\n                                return p * p * ((this._p1 + 1) * p - this._p1);\n                            }), _createBack(\"BackInOut\", function(p) {\n                                return (p *= 2) < 1 ? .5 * p * p * ((this._p2 + 1) * p - this._p2) : .5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n                            })), SlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n                                power = power || power === 0 ? power : .7;\n                                if (linearRatio == null) {\n                                    linearRatio = .7;\n                                } else if (linearRatio > 1) {\n                                    linearRatio = 1;\n                                }\n                                this._p = linearRatio !== 1 ? power : 0;\n                                this._p1 = (1 - linearRatio) / 2;\n                                this._p2 = linearRatio;\n                                this._p3 = this._p1 + this._p2;\n                                this._calcEnd = yoyoMode === true;\n                            }, true), p = SlowMo.prototype = new Ease(), SteppedEase, RoughEase, _createElastic;\n                            p.constructor = SlowMo;\n                            p.getRatio = function(p) {\n                                var r = p + (.5 - p) * this._p;\n                                if (p < this._p1) {\n                                    return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;\n                                } else if (p > this._p3) {\n                                    return this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p;\n                                }\n                                return this._calcEnd ? 1 : r;\n                            };\n                            SlowMo.ease = new SlowMo(.7, .7);\n                            p.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n                                return new SlowMo(linearRatio, power, yoyoMode);\n                            };\n                            SteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n                                steps = steps || 1;\n                                this._p1 = 1 / steps;\n                                this._p2 = steps + 1;\n                            }, true);\n                            p = SteppedEase.prototype = new Ease();\n                            p.constructor = SteppedEase;\n                            p.getRatio = function(p) {\n                                if (p < 0) {\n                                    p = 0;\n                                } else if (p >= 1) {\n                                    p = .999999999;\n                                }\n                                return (this._p2 * p >> 0) * this._p1;\n                            };\n                            p.config = SteppedEase.config = function(steps) {\n                                return new SteppedEase(steps);\n                            };\n                            RoughEase = _class(\"easing.RoughEase\", function(vars) {\n                                vars = vars || {};\n                                var taper = vars.taper || \"none\", a = [], cnt = 0, points = (vars.points || 20) | 0, i = points, randomize = vars.randomize !== false, clamp = vars.clamp === true, template = vars.template instanceof Ease ? vars.template : null, strength = typeof vars.strength === \"number\" ? vars.strength * .4 : .4, x, y, bump, invX, obj, pnt;\n                                while (--i > -1) {\n                                    x = randomize ? Math.random() : 1 / points * i;\n                                    y = template ? template.getRatio(x) : x;\n                                    if (taper === \"none\") {\n                                        bump = strength;\n                                    } else if (taper === \"out\") {\n                                        invX = 1 - x;\n                                        bump = invX * invX * strength;\n                                    } else if (taper === \"in\") {\n                                        bump = x * x * strength;\n                                    } else if (x < .5) {\n                                        invX = x * 2;\n                                        bump = invX * invX * .5 * strength;\n                                    } else {\n                                        invX = (1 - x) * 2;\n                                        bump = invX * invX * .5 * strength;\n                                    }\n                                    if (randomize) {\n                                        y += Math.random() * bump - bump * .5;\n                                    } else if (i % 2) {\n                                        y += bump * .5;\n                                    } else {\n                                        y -= bump * .5;\n                                    }\n                                    if (clamp) {\n                                        if (y > 1) {\n                                            y = 1;\n                                        } else if (y < 0) {\n                                            y = 0;\n                                        }\n                                    }\n                                    a[cnt++] = {\n                                        x: x,\n                                        y: y\n                                    };\n                                }\n                                a.sort(function(a, b) {\n                                    return a.x - b.x;\n                                });\n                                pnt = new EasePoint(1, 1, null);\n                                i = points;\n                                while (--i > -1) {\n                                    obj = a[i];\n                                    pnt = new EasePoint(obj.x, obj.y, pnt);\n                                }\n                                this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);\n                            }, true);\n                            p = RoughEase.prototype = new Ease();\n                            p.constructor = RoughEase;\n                            p.getRatio = function(p) {\n                                var pnt = this._prev;\n                                if (p > pnt.t) {\n                                    while (pnt.next && p >= pnt.t) {\n                                        pnt = pnt.next;\n                                    }\n                                    pnt = pnt.prev;\n                                } else {\n                                    while (pnt.prev && p <= pnt.t) {\n                                        pnt = pnt.prev;\n                                    }\n                                }\n                                this._prev = pnt;\n                                return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;\n                            };\n                            p.config = function(vars) {\n                                return new RoughEase(vars);\n                            };\n                            RoughEase.ease = new RoughEase();\n                            _wrap(\"Bounce\", _create(\"BounceOut\", function(p) {\n                                if (p < 1 / 2.75) {\n                                    return 7.5625 * p * p;\n                                } else if (p < 2 / 2.75) {\n                                    return 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n                                } else if (p < 2.5 / 2.75) {\n                                    return 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n                                }\n                                return 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n                            }), _create(\"BounceIn\", function(p) {\n                                if ((p = 1 - p) < 1 / 2.75) {\n                                    return 1 - 7.5625 * p * p;\n                                } else if (p < 2 / 2.75) {\n                                    return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + .75);\n                                } else if (p < 2.5 / 2.75) {\n                                    return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + .9375);\n                                }\n                                return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + .984375);\n                            }), _create(\"BounceInOut\", function(p) {\n                                var invert = p < .5;\n                                if (invert) {\n                                    p = 1 - p * 2;\n                                } else {\n                                    p = p * 2 - 1;\n                                }\n                                if (p < 1 / 2.75) {\n                                    p = 7.5625 * p * p;\n                                } else if (p < 2 / 2.75) {\n                                    p = 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n                                } else if (p < 2.5 / 2.75) {\n                                    p = 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n                                } else {\n                                    p = 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n                                }\n                                return invert ? (1 - p) * .5 : p * .5 + .5;\n                            }));\n                            _wrap(\"Circ\", _create(\"CircOut\", function(p) {\n                                return Math.sqrt(1 - (p = p - 1) * p);\n                            }), _create(\"CircIn\", function(p) {\n                                return -(Math.sqrt(1 - p * p) - 1);\n                            }), _create(\"CircInOut\", function(p) {\n                                return (p *= 2) < 1 ? -.5 * (Math.sqrt(1 - p * p) - 1) : .5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n                            }));\n                            _createElastic = function(n, f, def) {\n                                var C = _class(\"easing.\" + n, function(amplitude, period) {\n                                    this._p1 = amplitude >= 1 ? amplitude : 1;\n                                    this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n                                    this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n                                    this._p2 = _2PI / this._p2;\n                                }, true), p = C.prototype = new Ease();\n                                p.constructor = C;\n                                p.getRatio = f;\n                                p.config = function(amplitude, period) {\n                                    return new C(amplitude, period);\n                                };\n                                return C;\n                            };\n                            _wrap(\"Elastic\", _createElastic(\"ElasticOut\", function(p) {\n                                return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;\n                            }, .3), _createElastic(\"ElasticIn\", function(p) {\n                                return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));\n                            }, .3), _createElastic(\"ElasticInOut\", function(p) {\n                                return (p *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * .5 + 1;\n                            }, .45));\n                            _wrap(\"Expo\", _create(\"ExpoOut\", function(p) {\n                                return 1 - Math.pow(2, -10 * p);\n                            }), _create(\"ExpoIn\", function(p) {\n                                return Math.pow(2, 10 * (p - 1)) - .001;\n                            }), _create(\"ExpoInOut\", function(p) {\n                                return (p *= 2) < 1 ? .5 * Math.pow(2, 10 * (p - 1)) : .5 * (2 - Math.pow(2, -10 * (p - 1)));\n                            }));\n                            _wrap(\"Sine\", _create(\"SineOut\", function(p) {\n                                return Math.sin(p * _HALF_PI);\n                            }), _create(\"SineIn\", function(p) {\n                                return -Math.cos(p * _HALF_PI) + 1;\n                            }), _create(\"SineInOut\", function(p) {\n                                return -.5 * (Math.cos(Math.PI * p) - 1);\n                            }));\n                            _class(\"easing.EaseLookup\", {\n                                find: function(s) {\n                                    return Ease.map[s];\n                                }\n                            }, true);\n                            _easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n                            _easeReg(RoughEase, \"RoughEase\", \"ease,\");\n                            _easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n                            return Back;\n                        }, true);\n                    });\n                    if (_gsScope._gsDefine) {\n                        _gsScope._gsQueue.pop()();\n                    }\n                    (function(window, moduleName) {\n                        \"use strict\";\n                        var _exports = {}, _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n                        if (_globals.TweenLite) {\n                            return;\n                        }\n                        var _namespace = function(ns) {\n                            var a = ns.split(\".\"), p = _globals, i;\n                            for (i = 0; i < a.length; i++) {\n                                p[a[i]] = p = p[a[i]] || {};\n                            }\n                            return p;\n                        }, gs = _namespace(\"com.greensock\"), _tinyNum = 1e-10, _slice = function(a) {\n                            var b = [], l = a.length, i;\n                            for (i = 0; i !== l; b.push(a[i++])) {}\n                            return b;\n                        }, _emptyFunc = function() {}, _isArray = function() {\n                            var toString = Object.prototype.toString, array = toString.call([]);\n                            return function(obj) {\n                                return obj != null && (obj instanceof Array || typeof obj === \"object\" && !!obj.push && toString.call(obj) === array);\n                            };\n                        }(), a, i, p, _ticker, _tickerActive, _defLookup = {}, Definition = function(ns, dependencies, func, global) {\n                            this.sc = _defLookup[ns] ? _defLookup[ns].sc : [];\n                            _defLookup[ns] = this;\n                            this.gsClass = null;\n                            this.func = func;\n                            var _classes = [];\n                            this.check = function(init) {\n                                var i = dependencies.length, missing = i, cur, a, n, cl, hasModule;\n                                while (--i > -1) {\n                                    if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n                                        _classes[i] = cur.gsClass;\n                                        missing--;\n                                    } else if (init) {\n                                        cur.sc.push(this);\n                                    }\n                                }\n                                if (missing === 0 && func) {\n                                    a = (\"com.greensock.\" + ns).split(\".\");\n                                    n = a.pop();\n                                    cl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n                                    if (global) {\n                                        _globals[n] = cl;\n                                        hasModule = typeof module !== \"undefined\" && module.exports;\n                                        if (!hasModule && \"function\" === \"function\" && __webpack_require__(6)) {\n                                            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                                                return cl;\n                                            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n                                        } else if (hasModule) {\n                                            if (ns === moduleName) {\n                                                module.exports = _exports[moduleName] = cl;\n                                                for (i in _exports) {\n                                                    cl[i] = _exports[i];\n                                                }\n                                            } else if (_exports[moduleName]) {\n                                                _exports[moduleName][n] = cl;\n                                            }\n                                        }\n                                    }\n                                    for (i = 0; i < this.sc.length; i++) {\n                                        this.sc[i].check();\n                                    }\n                                }\n                            };\n                            this.check(true);\n                        }, _gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n                            return new Definition(ns, dependencies, func, global);\n                        }, _class = gs._class = function(ns, func, global) {\n                            func = func || function() {};\n                            _gsDefine(ns, [], function() {\n                                return func;\n                            }, global);\n                            return func;\n                        };\n                        _gsDefine.globals = _globals;\n                        var _baseParams = [ 0, 0, 1, 1 ], _blankArray = [], Ease = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n                            this._func = func;\n                            this._type = type || 0;\n                            this._power = power || 0;\n                            this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n                        }, true), _easeMap = Ease.map = {}, _easeReg = Ease.register = function(ease, names, types, create) {\n                            var na = names.split(\",\"), i = na.length, ta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"), e, name, j, type;\n                            while (--i > -1) {\n                                name = na[i];\n                                e = create ? _class(\"easing.\" + name, null, true) : gs.easing[name] || {};\n                                j = ta.length;\n                                while (--j > -1) {\n                                    type = ta[j];\n                                    _easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n                                }\n                            }\n                        };\n                        p = Ease.prototype;\n                        p._calcEnd = false;\n                        p.getRatio = function(p) {\n                            if (this._func) {\n                                this._params[0] = p;\n                                return this._func.apply(null, this._params);\n                            }\n                            var t = this._type, pw = this._power, r = t === 1 ? 1 - p : t === 2 ? p : p < .5 ? p * 2 : (1 - p) * 2;\n                            if (pw === 1) {\n                                r *= r;\n                            } else if (pw === 2) {\n                                r *= r * r;\n                            } else if (pw === 3) {\n                                r *= r * r * r;\n                            } else if (pw === 4) {\n                                r *= r * r * r * r;\n                            }\n                            return t === 1 ? 1 - r : t === 2 ? r : p < .5 ? r / 2 : 1 - r / 2;\n                        };\n                        a = [ \"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\" ];\n                        i = a.length;\n                        while (--i > -1) {\n                            p = a[i] + \",Power\" + i;\n                            _easeReg(new Ease(null, null, 1, i), p, \"easeOut\", true);\n                            _easeReg(new Ease(null, null, 2, i), p, \"easeIn\" + (i === 0 ? \",easeNone\" : \"\"));\n                            _easeReg(new Ease(null, null, 3, i), p, \"easeInOut\");\n                        }\n                        _easeMap.linear = gs.easing.Linear.easeIn;\n                        _easeMap.swing = gs.easing.Quad.easeInOut;\n                        var EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n                            this._listeners = {};\n                            this._eventTarget = target || this;\n                        });\n                        p = EventDispatcher.prototype;\n                        p.addEventListener = function(type, callback, scope, useParam, priority) {\n                            priority = priority || 0;\n                            var list = this._listeners[type], index = 0, listener, i;\n                            if (this === _ticker && !_tickerActive) {\n                                _ticker.wake();\n                            }\n                            if (list == null) {\n                                this._listeners[type] = list = [];\n                            }\n                            i = list.length;\n                            while (--i > -1) {\n                                listener = list[i];\n                                if (listener.c === callback && listener.s === scope) {\n                                    list.splice(i, 1);\n                                } else if (index === 0 && listener.pr < priority) {\n                                    index = i + 1;\n                                }\n                            }\n                            list.splice(index, 0, {\n                                c: callback,\n                                s: scope,\n                                up: useParam,\n                                pr: priority\n                            });\n                        };\n                        p.removeEventListener = function(type, callback) {\n                            var list = this._listeners[type], i;\n                            if (list) {\n                                i = list.length;\n                                while (--i > -1) {\n                                    if (list[i].c === callback) {\n                                        list.splice(i, 1);\n                                        return;\n                                    }\n                                }\n                            }\n                        };\n                        p.dispatchEvent = function(type) {\n                            var list = this._listeners[type], i, t, listener;\n                            if (list) {\n                                i = list.length;\n                                t = this._eventTarget;\n                                while (--i > -1) {\n                                    listener = list[i];\n                                    if (listener) {\n                                        if (listener.up) {\n                                            listener.c.call(listener.s || t, {\n                                                type: type,\n                                                target: t\n                                            });\n                                        } else {\n                                            listener.c.call(listener.s || t);\n                                        }\n                                    }\n                                }\n                            }\n                        };\n                        var _reqAnimFrame = window.requestAnimationFrame, _cancelAnimFrame = window.cancelAnimationFrame, _getTime = Date.now || function() {\n                            return new Date().getTime();\n                        }, _lastUpdate = _getTime();\n                        a = [ \"ms\", \"moz\", \"webkit\", \"o\" ];\n                        i = a.length;\n                        while (--i > -1 && !_reqAnimFrame) {\n                            _reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n                            _cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n                        }\n                        _class(\"Ticker\", function(fps, useRAF) {\n                            var _self = this, _startTime = _getTime(), _useRAF = useRAF !== false && _reqAnimFrame ? \"auto\" : false, _lagThreshold = 500, _adjustedLag = 33, _tickWord = \"tick\", _fps, _req, _id, _gap, _nextTime, _tick = function(manual) {\n                                var elapsed = _getTime() - _lastUpdate, overlap, dispatch;\n                                if (elapsed > _lagThreshold) {\n                                    _startTime += elapsed - _adjustedLag;\n                                }\n                                _lastUpdate += elapsed;\n                                _self.time = (_lastUpdate - _startTime) / 1e3;\n                                overlap = _self.time - _nextTime;\n                                if (!_fps || overlap > 0 || manual === true) {\n                                    _self.frame++;\n                                    _nextTime += overlap + (overlap >= _gap ? .004 : _gap - overlap);\n                                    dispatch = true;\n                                }\n                                if (manual !== true) {\n                                    _id = _req(_tick);\n                                }\n                                if (dispatch) {\n                                    _self.dispatchEvent(_tickWord);\n                                }\n                            };\n                            EventDispatcher.call(_self);\n                            _self.time = _self.frame = 0;\n                            _self.tick = function() {\n                                _tick(true);\n                            };\n                            _self.lagSmoothing = function(threshold, adjustedLag) {\n                                _lagThreshold = threshold || 1 / _tinyNum;\n                                _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n                            };\n                            _self.sleep = function() {\n                                if (_id == null) {\n                                    return;\n                                }\n                                if (!_useRAF || !_cancelAnimFrame) {\n                                    clearTimeout(_id);\n                                } else {\n                                    _cancelAnimFrame(_id);\n                                }\n                                _req = _emptyFunc;\n                                _id = null;\n                                if (_self === _ticker) {\n                                    _tickerActive = false;\n                                }\n                            };\n                            _self.wake = function(seamless) {\n                                if (_id !== null) {\n                                    _self.sleep();\n                                } else if (seamless) {\n                                    _startTime += -_lastUpdate + (_lastUpdate = _getTime());\n                                } else if (_self.frame > 10) {\n                                    _lastUpdate = _getTime() - _lagThreshold + 5;\n                                }\n                                _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function(f) {\n                                    return setTimeout(f, (_nextTime - _self.time) * 1e3 + 1 | 0);\n                                } : _reqAnimFrame;\n                                if (_self === _ticker) {\n                                    _tickerActive = true;\n                                }\n                                _tick(2);\n                            };\n                            _self.fps = function(value) {\n                                if (!arguments.length) {\n                                    return _fps;\n                                }\n                                _fps = value;\n                                _gap = 1 / (_fps || 60);\n                                _nextTime = this.time + _gap;\n                                _self.wake();\n                            };\n                            _self.useRAF = function(value) {\n                                if (!arguments.length) {\n                                    return _useRAF;\n                                }\n                                _self.sleep();\n                                _useRAF = value;\n                                _self.fps(_fps);\n                            };\n                            _self.fps(fps);\n                            setTimeout(function() {\n                                if (_useRAF === \"auto\" && _self.frame < 5 && document.visibilityState !== \"hidden\") {\n                                    _self.useRAF(false);\n                                }\n                            }, 1500);\n                        });\n                        p = gs.Ticker.prototype = new gs.events.EventDispatcher();\n                        p.constructor = gs.Ticker;\n                        var Animation = _class(\"core.Animation\", function(duration, vars) {\n                            this.vars = vars = vars || {};\n                            this._duration = this._totalDuration = duration || 0;\n                            this._delay = Number(vars.delay) || 0;\n                            this._timeScale = 1;\n                            this._active = vars.immediateRender === true;\n                            this.data = vars.data;\n                            this._reversed = vars.reversed === true;\n                            if (!_rootTimeline) {\n                                return;\n                            }\n                            if (!_tickerActive) {\n                                _ticker.wake();\n                            }\n                            var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n                            tl.add(this, tl._time);\n                            if (this.vars.paused) {\n                                this.paused(true);\n                            }\n                        });\n                        _ticker = Animation.ticker = new gs.Ticker();\n                        p = Animation.prototype;\n                        p._dirty = p._gc = p._initted = p._paused = false;\n                        p._totalTime = p._time = 0;\n                        p._rawPrevTime = -1;\n                        p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n                        p._paused = false;\n                        var _checkTimeout = function() {\n                            if (_tickerActive && _getTime() - _lastUpdate > 2e3) {\n                                _ticker.wake();\n                            }\n                            setTimeout(_checkTimeout, 2e3);\n                        };\n                        _checkTimeout();\n                        p.play = function(from, suppressEvents) {\n                            if (from != null) {\n                                this.seek(from, suppressEvents);\n                            }\n                            return this.reversed(false).paused(false);\n                        };\n                        p.pause = function(atTime, suppressEvents) {\n                            if (atTime != null) {\n                                this.seek(atTime, suppressEvents);\n                            }\n                            return this.paused(true);\n                        };\n                        p.resume = function(from, suppressEvents) {\n                            if (from != null) {\n                                this.seek(from, suppressEvents);\n                            }\n                            return this.paused(false);\n                        };\n                        p.seek = function(time, suppressEvents) {\n                            return this.totalTime(Number(time), suppressEvents !== false);\n                        };\n                        p.restart = function(includeDelay, suppressEvents) {\n                            return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);\n                        };\n                        p.reverse = function(from, suppressEvents) {\n                            if (from != null) {\n                                this.seek(from || this.totalDuration(), suppressEvents);\n                            }\n                            return this.reversed(true).paused(false);\n                        };\n                        p.render = function(time, suppressEvents, force) {};\n                        p.invalidate = function() {\n                            this._time = this._totalTime = 0;\n                            this._initted = this._gc = false;\n                            this._rawPrevTime = -1;\n                            if (this._gc || !this.timeline) {\n                                this._enabled(true);\n                            }\n                            return this;\n                        };\n                        p.isActive = function() {\n                            var tl = this._timeline, startTime = this._startTime, rawTime;\n                            return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale;\n                        };\n                        p._enabled = function(enabled, ignoreTimeline) {\n                            if (!_tickerActive) {\n                                _ticker.wake();\n                            }\n                            this._gc = !enabled;\n                            this._active = this.isActive();\n                            if (ignoreTimeline !== true) {\n                                if (enabled && !this.timeline) {\n                                    this._timeline.add(this, this._startTime - this._delay);\n                                } else if (!enabled && this.timeline) {\n                                    this._timeline._remove(this, true);\n                                }\n                            }\n                            return false;\n                        };\n                        p._kill = function(vars, target) {\n                            return this._enabled(false, false);\n                        };\n                        p.kill = function(vars, target) {\n                            this._kill(vars, target);\n                            return this;\n                        };\n                        p._uncache = function(includeSelf) {\n                            var tween = includeSelf ? this : this.timeline;\n                            while (tween) {\n                                tween._dirty = true;\n                                tween = tween.timeline;\n                            }\n                            return this;\n                        };\n                        p._swapSelfInParams = function(params) {\n                            var i = params.length, copy = params.concat();\n                            while (--i > -1) {\n                                if (params[i] === \"{self}\") {\n                                    copy[i] = this;\n                                }\n                            }\n                            return copy;\n                        };\n                        p._callback = function(type) {\n                            var v = this.vars;\n                            v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n                        };\n                        p.eventCallback = function(type, callback, params, scope) {\n                            if ((type || \"\").substr(0, 2) === \"on\") {\n                                var v = this.vars;\n                                if (arguments.length === 1) {\n                                    return v[type];\n                                }\n                                if (callback == null) {\n                                    delete v[type];\n                                } else {\n                                    v[type] = callback;\n                                    v[type + \"Params\"] = _isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1 ? this._swapSelfInParams(params) : params;\n                                    v[type + \"Scope\"] = scope;\n                                }\n                                if (type === \"onUpdate\") {\n                                    this._onUpdate = callback;\n                                }\n                            }\n                            return this;\n                        };\n                        p.delay = function(value) {\n                            if (!arguments.length) {\n                                return this._delay;\n                            }\n                            if (this._timeline.smoothChildTiming) {\n                                this.startTime(this._startTime + value - this._delay);\n                            }\n                            this._delay = value;\n                            return this;\n                        };\n                        p.duration = function(value) {\n                            if (!arguments.length) {\n                                this._dirty = false;\n                                return this._duration;\n                            }\n                            this._duration = this._totalDuration = value;\n                            this._uncache(true);\n                            if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n                                this.totalTime(this._totalTime * (value / this._duration), true);\n                            }\n                            return this;\n                        };\n                        p.totalDuration = function(value) {\n                            this._dirty = false;\n                            return !arguments.length ? this._totalDuration : this.duration(value);\n                        };\n                        p.time = function(value, suppressEvents) {\n                            if (!arguments.length) {\n                                return this._time;\n                            }\n                            if (this._dirty) {\n                                this.totalDuration();\n                            }\n                            return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);\n                        };\n                        p.totalTime = function(time, suppressEvents, uncapped) {\n                            if (!_tickerActive) {\n                                _ticker.wake();\n                            }\n                            if (!arguments.length) {\n                                return this._totalTime;\n                            }\n                            if (this._timeline) {\n                                if (time < 0 && !uncapped) {\n                                    time += this.totalDuration();\n                                }\n                                if (this._timeline.smoothChildTiming) {\n                                    if (this._dirty) {\n                                        this.totalDuration();\n                                    }\n                                    var totalDuration = this._totalDuration, tl = this._timeline;\n                                    if (time > totalDuration && !uncapped) {\n                                        time = totalDuration;\n                                    }\n                                    this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;\n                                    if (!tl._dirty) {\n                                        this._uncache(false);\n                                    }\n                                    if (tl._timeline) {\n                                        while (tl._timeline) {\n                                            if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n                                                tl.totalTime(tl._totalTime, true);\n                                            }\n                                            tl = tl._timeline;\n                                        }\n                                    }\n                                }\n                                if (this._gc) {\n                                    this._enabled(true, false);\n                                }\n                                if (this._totalTime !== time || this._duration === 0) {\n                                    if (_lazyTweens.length) {\n                                        _lazyRender();\n                                    }\n                                    this.render(time, suppressEvents, false);\n                                    if (_lazyTweens.length) {\n                                        _lazyRender();\n                                    }\n                                }\n                            }\n                            return this;\n                        };\n                        p.progress = p.totalProgress = function(value, suppressEvents) {\n                            var duration = this.duration();\n                            return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);\n                        };\n                        p.startTime = function(value) {\n                            if (!arguments.length) {\n                                return this._startTime;\n                            }\n                            if (value !== this._startTime) {\n                                this._startTime = value;\n                                if (this.timeline) if (this.timeline._sortChildren) {\n                                    this.timeline.add(this, value - this._delay);\n                                }\n                            }\n                            return this;\n                        };\n                        p.endTime = function(includeRepeats) {\n                            return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;\n                        };\n                        p.timeScale = function(value) {\n                            if (!arguments.length) {\n                                return this._timeScale;\n                            }\n                            value = value || _tinyNum;\n                            if (this._timeline && this._timeline.smoothChildTiming) {\n                                var pauseTime = this._pauseTime, t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();\n                                this._startTime = t - (t - this._startTime) * this._timeScale / value;\n                            }\n                            this._timeScale = value;\n                            return this._uncache(false);\n                        };\n                        p.reversed = function(value) {\n                            if (!arguments.length) {\n                                return this._reversed;\n                            }\n                            if (value != this._reversed) {\n                                this._reversed = value;\n                                this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);\n                            }\n                            return this;\n                        };\n                        p.paused = function(value) {\n                            if (!arguments.length) {\n                                return this._paused;\n                            }\n                            var tl = this._timeline, raw, elapsed;\n                            if (value != this._paused) if (tl) {\n                                if (!_tickerActive && !value) {\n                                    _ticker.wake();\n                                }\n                                raw = tl.rawTime();\n                                elapsed = raw - this._pauseTime;\n                                if (!value && tl.smoothChildTiming) {\n                                    this._startTime += elapsed;\n                                    this._uncache(false);\n                                }\n                                this._pauseTime = value ? raw : null;\n                                this._paused = value;\n                                this._active = this.isActive();\n                                if (!value && elapsed !== 0 && this._initted && this.duration()) {\n                                    raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n                                    this.render(raw, raw === this._totalTime, true);\n                                }\n                            }\n                            if (this._gc && !value) {\n                                this._enabled(true, false);\n                            }\n                            return this;\n                        };\n                        var SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n                            Animation.call(this, 0, vars);\n                            this.autoRemoveChildren = this.smoothChildTiming = true;\n                        });\n                        p = SimpleTimeline.prototype = new Animation();\n                        p.constructor = SimpleTimeline;\n                        p.kill()._gc = false;\n                        p._first = p._last = p._recent = null;\n                        p._sortChildren = false;\n                        p.add = p.insert = function(child, position, align, stagger) {\n                            var prevTween, st;\n                            child._startTime = Number(position || 0) + child._delay;\n                            if (child._paused) if (this !== child._timeline) {\n                                child._pauseTime = child._startTime + (this.rawTime() - child._startTime) / child._timeScale;\n                            }\n                            if (child.timeline) {\n                                child.timeline._remove(child, true);\n                            }\n                            child.timeline = child._timeline = this;\n                            if (child._gc) {\n                                child._enabled(true, true);\n                            }\n                            prevTween = this._last;\n                            if (this._sortChildren) {\n                                st = child._startTime;\n                                while (prevTween && prevTween._startTime > st) {\n                                    prevTween = prevTween._prev;\n                                }\n                            }\n                            if (prevTween) {\n                                child._next = prevTween._next;\n                                prevTween._next = child;\n                            } else {\n                                child._next = this._first;\n                                this._first = child;\n                            }\n                            if (child._next) {\n                                child._next._prev = child;\n                            } else {\n                                this._last = child;\n                            }\n                            child._prev = prevTween;\n                            this._recent = child;\n                            if (this._timeline) {\n                                this._uncache(true);\n                            }\n                            return this;\n                        };\n                        p._remove = function(tween, skipDisable) {\n                            if (tween.timeline === this) {\n                                if (!skipDisable) {\n                                    tween._enabled(false, true);\n                                }\n                                if (tween._prev) {\n                                    tween._prev._next = tween._next;\n                                } else if (this._first === tween) {\n                                    this._first = tween._next;\n                                }\n                                if (tween._next) {\n                                    tween._next._prev = tween._prev;\n                                } else if (this._last === tween) {\n                                    this._last = tween._prev;\n                                }\n                                tween._next = tween._prev = tween.timeline = null;\n                                if (tween === this._recent) {\n                                    this._recent = this._last;\n                                }\n                                if (this._timeline) {\n                                    this._uncache(true);\n                                }\n                            }\n                            return this;\n                        };\n                        p.render = function(time, suppressEvents, force) {\n                            var tween = this._first, next;\n                            this._totalTime = this._time = this._rawPrevTime = time;\n                            while (tween) {\n                                next = tween._next;\n                                if (tween._active || time >= tween._startTime && !tween._paused) {\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        };\n                        p.rawTime = function() {\n                            if (!_tickerActive) {\n                                _ticker.wake();\n                            }\n                            return this._totalTime;\n                        };\n                        var TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n                            Animation.call(this, duration, vars);\n                            this.render = TweenLite.prototype.render;\n                            if (target == null) {\n                                throw \"Cannot tween a null target.\";\n                            }\n                            this.target = target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n                            var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType), overwrite = this.vars.overwrite, i, targ, targets;\n                            this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === \"number\" ? overwrite >> 0 : _overwriteLookup[overwrite];\n                            if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== \"number\") {\n                                this._targets = targets = _slice(target);\n                                this._propLookup = [];\n                                this._siblings = [];\n                                for (i = 0; i < targets.length; i++) {\n                                    targ = targets[i];\n                                    if (!targ) {\n                                        targets.splice(i--, 1);\n                                        continue;\n                                    } else if (typeof targ === \"string\") {\n                                        targ = targets[i--] = TweenLite.selector(targ);\n                                        if (typeof targ === \"string\") {\n                                            targets.splice(i + 1, 1);\n                                        }\n                                        continue;\n                                    } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {\n                                        targets.splice(i--, 1);\n                                        this._targets = targets = targets.concat(_slice(targ));\n                                        continue;\n                                    }\n                                    this._siblings[i] = _register(targ, this, false);\n                                    if (overwrite === 1) if (this._siblings[i].length > 1) {\n                                        _applyOverwrite(targ, this, null, 1, this._siblings[i]);\n                                    }\n                                }\n                            } else {\n                                this._propLookup = {};\n                                this._siblings = _register(target, this, false);\n                                if (overwrite === 1) if (this._siblings.length > 1) {\n                                    _applyOverwrite(target, this, null, 1, this._siblings);\n                                }\n                            }\n                            if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {\n                                this._time = -_tinyNum;\n                                this.render(Math.min(0, -this._delay));\n                            }\n                        }, true), _isSelector = function(v) {\n                            return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType);\n                        }, _autoCSS = function(vars, target) {\n                            var css = {}, p;\n                            for (p in vars) {\n                                if (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {\n                                    css[p] = vars[p];\n                                    delete vars[p];\n                                }\n                            }\n                            vars.css = css;\n                        };\n                        p = TweenLite.prototype = new Animation();\n                        p.constructor = TweenLite;\n                        p.kill()._gc = false;\n                        p.ratio = 0;\n                        p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n                        p._notifyPluginsOfEnabled = p._lazy = false;\n                        TweenLite.version = \"1.18.5\";\n                        TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n                        TweenLite.defaultOverwrite = \"auto\";\n                        TweenLite.ticker = _ticker;\n                        TweenLite.autoSleep = 120;\n                        TweenLite.lagSmoothing = function(threshold, adjustedLag) {\n                            _ticker.lagSmoothing(threshold, adjustedLag);\n                        };\n                        TweenLite.selector = window.$ || window.jQuery || function(e) {\n                            var selector = window.$ || window.jQuery;\n                            if (selector) {\n                                TweenLite.selector = selector;\n                                return selector(e);\n                            }\n                            return typeof document === \"undefined\" ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(e.charAt(0) === \"#\" ? e.substr(1) : e);\n                        };\n                        var _lazyTweens = [], _lazyLookup = {}, _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi, _setRatio = function(v) {\n                            var pt = this._firstPT, min = 1e-6, val;\n                            while (pt) {\n                                val = !pt.blob ? pt.c * v + pt.s : v ? this.join(\"\") : this.start;\n                                if (pt.r) {\n                                    val = Math.round(val);\n                                } else if (val < min) if (val > -min) {\n                                    val = 0;\n                                }\n                                if (!pt.f) {\n                                    pt.t[pt.p] = val;\n                                } else if (pt.fp) {\n                                    pt.t[pt.p](pt.fp, val);\n                                } else {\n                                    pt.t[pt.p](val);\n                                }\n                                pt = pt._next;\n                            }\n                        }, _blobDif = function(start, end, filter, pt) {\n                            var a = [ start, end ], charIndex = 0, s = \"\", color = 0, startNums, endNums, num, i, l, nonNumbers, currentNum;\n                            a.start = start;\n                            if (filter) {\n                                filter(a);\n                                start = a[0];\n                                end = a[1];\n                            }\n                            a.length = 0;\n                            startNums = start.match(_numbersExp) || [];\n                            endNums = end.match(_numbersExp) || [];\n                            if (pt) {\n                                pt._next = null;\n                                pt.blob = 1;\n                                a._firstPT = pt;\n                            }\n                            l = endNums.length;\n                            for (i = 0; i < l; i++) {\n                                currentNum = endNums[i];\n                                nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);\n                                s += nonNumbers || !i ? nonNumbers : \",\";\n                                charIndex += nonNumbers.length;\n                                if (color) {\n                                    color = (color + 1) % 5;\n                                } else if (nonNumbers.substr(-5) === \"rgba(\") {\n                                    color = 1;\n                                }\n                                if (currentNum === startNums[i] || startNums.length <= i) {\n                                    s += currentNum;\n                                } else {\n                                    if (s) {\n                                        a.push(s);\n                                        s = \"\";\n                                    }\n                                    num = parseFloat(startNums[i]);\n                                    a.push(num);\n                                    a._firstPT = {\n                                        _next: a._firstPT,\n                                        t: a,\n                                        p: a.length - 1,\n                                        s: num,\n                                        c: (currentNum.charAt(1) === \"=\" ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,\n                                        f: 0,\n                                        r: color && color < 4\n                                    };\n                                }\n                                charIndex += currentNum.length;\n                            }\n                            s += end.substr(charIndex);\n                            if (s) {\n                                a.push(s);\n                            }\n                            a.setRatio = _setRatio;\n                            return a;\n                        }, _addPropTween = function(target, prop, start, end, overwriteProp, round, funcParam, stringFilter) {\n                            var s = start === \"get\" ? target[prop] : start, type = typeof target[prop], isRelative = typeof end === \"string\" && end.charAt(1) === \"=\", pt = {\n                                t: target,\n                                p: prop,\n                                s: s,\n                                f: type === \"function\",\n                                pg: 0,\n                                n: overwriteProp || prop,\n                                r: round,\n                                pr: 0,\n                                c: isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0\n                            }, blob, getterName;\n                            if (type !== \"number\") {\n                                if (type === \"function\" && start === \"get\") {\n                                    getterName = prop.indexOf(\"set\") || typeof target[\"get\" + prop.substr(3)] !== \"function\" ? prop : \"get\" + prop.substr(3);\n                                    pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();\n                                }\n                                if (typeof s === \"string\" && (funcParam || isNaN(s))) {\n                                    pt.fp = funcParam;\n                                    blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);\n                                    pt = {\n                                        t: blob,\n                                        p: \"setRatio\",\n                                        s: 0,\n                                        c: 1,\n                                        f: 2,\n                                        pg: 0,\n                                        n: overwriteProp || prop,\n                                        pr: 0\n                                    };\n                                } else if (!isRelative) {\n                                    pt.s = parseFloat(s);\n                                    pt.c = parseFloat(end) - pt.s || 0;\n                                }\n                            }\n                            if (pt.c) {\n                                if (pt._next = this._firstPT) {\n                                    pt._next._prev = pt;\n                                }\n                                this._firstPT = pt;\n                                return pt;\n                            }\n                        }, _internals = TweenLite._internals = {\n                            isArray: _isArray,\n                            isSelector: _isSelector,\n                            lazyTweens: _lazyTweens,\n                            blobDif: _blobDif\n                        }, _plugins = TweenLite._plugins = {}, _tweenLookup = _internals.tweenLookup = {}, _tweenLookupNum = 0, _reservedProps = _internals.reservedProps = {\n                            ease: 1,\n                            delay: 1,\n                            overwrite: 1,\n                            onComplete: 1,\n                            onCompleteParams: 1,\n                            onCompleteScope: 1,\n                            useFrames: 1,\n                            runBackwards: 1,\n                            startAt: 1,\n                            onUpdate: 1,\n                            onUpdateParams: 1,\n                            onUpdateScope: 1,\n                            onStart: 1,\n                            onStartParams: 1,\n                            onStartScope: 1,\n                            onReverseComplete: 1,\n                            onReverseCompleteParams: 1,\n                            onReverseCompleteScope: 1,\n                            onRepeat: 1,\n                            onRepeatParams: 1,\n                            onRepeatScope: 1,\n                            easeParams: 1,\n                            yoyo: 1,\n                            immediateRender: 1,\n                            repeat: 1,\n                            repeatDelay: 1,\n                            data: 1,\n                            paused: 1,\n                            reversed: 1,\n                            autoCSS: 1,\n                            lazy: 1,\n                            onOverwrite: 1,\n                            callbackScope: 1,\n                            stringFilter: 1,\n                            id: 1\n                        }, _overwriteLookup = {\n                            none: 0,\n                            all: 1,\n                            auto: 2,\n                            concurrent: 3,\n                            allOnStart: 4,\n                            preexisting: 5,\n                            \"true\": 1,\n                            \"false\": 0\n                        }, _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(), _rootTimeline = Animation._rootTimeline = new SimpleTimeline(), _nextGCFrame = 30, _lazyRender = _internals.lazyRender = function() {\n                            var i = _lazyTweens.length, tween;\n                            _lazyLookup = {};\n                            while (--i > -1) {\n                                tween = _lazyTweens[i];\n                                if (tween && tween._lazy !== false) {\n                                    tween.render(tween._lazy[0], tween._lazy[1], true);\n                                    tween._lazy = false;\n                                }\n                            }\n                            _lazyTweens.length = 0;\n                        };\n                        _rootTimeline._startTime = _ticker.time;\n                        _rootFramesTimeline._startTime = _ticker.frame;\n                        _rootTimeline._active = _rootFramesTimeline._active = true;\n                        setTimeout(_lazyRender, 1);\n                        Animation._updateRoot = TweenLite.render = function() {\n                            var i, a, p;\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n                            _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            if (_ticker.frame >= _nextGCFrame) {\n                                _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n                                for (p in _tweenLookup) {\n                                    a = _tweenLookup[p].tweens;\n                                    i = a.length;\n                                    while (--i > -1) {\n                                        if (a[i]._gc) {\n                                            a.splice(i, 1);\n                                        }\n                                    }\n                                    if (a.length === 0) {\n                                        delete _tweenLookup[p];\n                                    }\n                                }\n                                p = _rootTimeline._first;\n                                if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n                                    while (p && p._paused) {\n                                        p = p._next;\n                                    }\n                                    if (!p) {\n                                        _ticker.sleep();\n                                    }\n                                }\n                            }\n                        };\n                        _ticker.addEventListener(\"tick\", Animation._updateRoot);\n                        var _register = function(target, tween, scrub) {\n                            var id = target._gsTweenID, a, i;\n                            if (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + _tweenLookupNum++)]) {\n                                _tweenLookup[id] = {\n                                    target: target,\n                                    tweens: []\n                                };\n                            }\n                            if (tween) {\n                                a = _tweenLookup[id].tweens;\n                                a[i = a.length] = tween;\n                                if (scrub) {\n                                    while (--i > -1) {\n                                        if (a[i] === tween) {\n                                            a.splice(i, 1);\n                                        }\n                                    }\n                                }\n                            }\n                            return _tweenLookup[id].tweens;\n                        }, _onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n                            var func = overwrittenTween.vars.onOverwrite, r1, r2;\n                            if (func) {\n                                r1 = func(overwrittenTween, overwritingTween, target, killedProps);\n                            }\n                            func = TweenLite.onOverwrite;\n                            if (func) {\n                                r2 = func(overwrittenTween, overwritingTween, target, killedProps);\n                            }\n                            return r1 !== false && r2 !== false;\n                        }, _applyOverwrite = function(target, tween, props, mode, siblings) {\n                            var i, changed, curTween, l;\n                            if (mode === 1 || mode >= 4) {\n                                l = siblings.length;\n                                for (i = 0; i < l; i++) {\n                                    if ((curTween = siblings[i]) !== tween) {\n                                        if (!curTween._gc) {\n                                            if (curTween._kill(null, target, tween)) {\n                                                changed = true;\n                                            }\n                                        }\n                                    } else if (mode === 5) {\n                                        break;\n                                    }\n                                }\n                                return changed;\n                            }\n                            var startTime = tween._startTime + _tinyNum, overlaps = [], oCount = 0, zeroDur = tween._duration === 0, globalStart;\n                            i = siblings.length;\n                            while (--i > -1) {\n                                if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {} else if (curTween._timeline !== tween._timeline) {\n                                    globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n                                    if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n                                        overlaps[oCount++] = curTween;\n                                    }\n                                } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 2e-10)) {\n                                    overlaps[oCount++] = curTween;\n                                }\n                            }\n                            i = oCount;\n                            while (--i > -1) {\n                                curTween = overlaps[i];\n                                if (mode === 2) if (curTween._kill(props, target, tween)) {\n                                    changed = true;\n                                }\n                                if (mode !== 2 || !curTween._firstPT && curTween._initted) {\n                                    if (mode !== 2 && !_onOverwrite(curTween, tween)) {\n                                        continue;\n                                    }\n                                    if (curTween._enabled(false, false)) {\n                                        changed = true;\n                                    }\n                                }\n                            }\n                            return changed;\n                        }, _checkOverlap = function(tween, reference, zeroDur) {\n                            var tl = tween._timeline, ts = tl._timeScale, t = tween._startTime;\n                            while (tl._timeline) {\n                                t += tl._startTime;\n                                ts *= tl._timeScale;\n                                if (tl._paused) {\n                                    return -100;\n                                }\n                                tl = tl._timeline;\n                            }\n                            t /= ts;\n                            return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;\n                        };\n                        p._init = function() {\n                            var v = this.vars, op = this._overwrittenProps, dur = this._duration, immediate = !!v.immediateRender, ease = v.ease, i, initPlugins, pt, p, startVars;\n                            if (v.startAt) {\n                                if (this._startAt) {\n                                    this._startAt.render(-1, true);\n                                    this._startAt.kill();\n                                }\n                                startVars = {};\n                                for (p in v.startAt) {\n                                    startVars[p] = v.startAt[p];\n                                }\n                                startVars.overwrite = false;\n                                startVars.immediateRender = true;\n                                startVars.lazy = immediate && v.lazy !== false;\n                                startVars.startAt = startVars.delay = null;\n                                this._startAt = TweenLite.to(this.target, 0, startVars);\n                                if (immediate) {\n                                    if (this._time > 0) {\n                                        this._startAt = null;\n                                    } else if (dur !== 0) {\n                                        return;\n                                    }\n                                }\n                            } else if (v.runBackwards && dur !== 0) {\n                                if (this._startAt) {\n                                    this._startAt.render(-1, true);\n                                    this._startAt.kill();\n                                    this._startAt = null;\n                                } else {\n                                    if (this._time !== 0) {\n                                        immediate = false;\n                                    }\n                                    pt = {};\n                                    for (p in v) {\n                                        if (!_reservedProps[p] || p === \"autoCSS\") {\n                                            pt[p] = v[p];\n                                        }\n                                    }\n                                    pt.overwrite = 0;\n                                    pt.data = \"isFromStart\";\n                                    pt.lazy = immediate && v.lazy !== false;\n                                    pt.immediateRender = immediate;\n                                    this._startAt = TweenLite.to(this.target, 0, pt);\n                                    if (!immediate) {\n                                        this._startAt._init();\n                                        this._startAt._enabled(false);\n                                        if (this.vars.immediateRender) {\n                                            this._startAt = null;\n                                        }\n                                    } else if (this._time === 0) {\n                                        return;\n                                    }\n                                }\n                            }\n                            this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === \"function\" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n                            if (v.easeParams instanceof Array && ease.config) {\n                                this._ease = ease.config.apply(ease, v.easeParams);\n                            }\n                            this._easeType = this._ease._type;\n                            this._easePower = this._ease._power;\n                            this._firstPT = null;\n                            if (this._targets) {\n                                i = this._targets.length;\n                                while (--i > -1) {\n                                    if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null)) {\n                                        initPlugins = true;\n                                    }\n                                }\n                            } else {\n                                initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n                            }\n                            if (initPlugins) {\n                                TweenLite._onPluginEvent(\"_onInitAllProps\", this);\n                            }\n                            if (op) if (!this._firstPT) if (typeof this.target !== \"function\") {\n                                this._enabled(false, false);\n                            }\n                            if (v.runBackwards) {\n                                pt = this._firstPT;\n                                while (pt) {\n                                    pt.s += pt.c;\n                                    pt.c = -pt.c;\n                                    pt = pt._next;\n                                }\n                            }\n                            this._onUpdate = v.onUpdate;\n                            this._initted = true;\n                        };\n                        p._initProps = function(target, propLookup, siblings, overwrittenProps) {\n                            var p, i, initPlugins, plugin, pt, v;\n                            if (target == null) {\n                                return false;\n                            }\n                            if (_lazyLookup[target._gsTweenID]) {\n                                _lazyRender();\n                            }\n                            if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {\n                                _autoCSS(this.vars, target);\n                            }\n                            for (p in this.vars) {\n                                v = this.vars[p];\n                                if (_reservedProps[p]) {\n                                    if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n                                        this.vars[p] = v = this._swapSelfInParams(v, this);\n                                    }\n                                } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n                                    this._firstPT = pt = {\n                                        _next: this._firstPT,\n                                        t: plugin,\n                                        p: \"setRatio\",\n                                        s: 0,\n                                        c: 1,\n                                        f: 1,\n                                        n: p,\n                                        pg: 1,\n                                        pr: plugin._priority\n                                    };\n                                    i = plugin._overwriteProps.length;\n                                    while (--i > -1) {\n                                        propLookup[plugin._overwriteProps[i]] = this._firstPT;\n                                    }\n                                    if (plugin._priority || plugin._onInitAllProps) {\n                                        initPlugins = true;\n                                    }\n                                    if (plugin._onDisable || plugin._onEnable) {\n                                        this._notifyPluginsOfEnabled = true;\n                                    }\n                                    if (pt._next) {\n                                        pt._next._prev = pt;\n                                    }\n                                } else {\n                                    propLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter);\n                                }\n                            }\n                            if (overwrittenProps) if (this._kill(overwrittenProps, target)) {\n                                return this._initProps(target, propLookup, siblings, overwrittenProps);\n                            }\n                            if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n                                this._kill(propLookup, target);\n                                return this._initProps(target, propLookup, siblings, overwrittenProps);\n                            }\n                            if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {\n                                _lazyLookup[target._gsTweenID] = true;\n                            }\n                            return initPlugins;\n                        };\n                        p.render = function(time, suppressEvents, force) {\n                            var prevTime = this._time, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, rawPrevTime;\n                            if (time >= duration - 1e-7) {\n                                this._totalTime = this._time = duration;\n                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n                                if (!this._reversed) {\n                                    isComplete = true;\n                                    callback = \"onComplete\";\n                                    force = force || this._timeline.autoRemoveChildren;\n                                }\n                                if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                    if (this._startTime === this._timeline._duration) {\n                                        time = 0;\n                                    }\n                                    if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n                                        force = true;\n                                        if (prevRawPrevTime > _tinyNum) {\n                                            callback = \"onReverseComplete\";\n                                        }\n                                    }\n                                    this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                                }\n                            } else if (time < 1e-7) {\n                                this._totalTime = this._time = 0;\n                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                                if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n                                    callback = \"onReverseComplete\";\n                                    isComplete = this._reversed;\n                                }\n                                if (time < 0) {\n                                    this._active = false;\n                                    if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                        if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n                                            force = true;\n                                        }\n                                        this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                                    }\n                                }\n                                if (!this._initted) {\n                                    force = true;\n                                }\n                            } else {\n                                this._totalTime = this._time = time;\n                                if (this._easeType) {\n                                    var r = time / duration, type = this._easeType, pow = this._easePower;\n                                    if (type === 1 || type === 3 && r >= .5) {\n                                        r = 1 - r;\n                                    }\n                                    if (type === 3) {\n                                        r *= 2;\n                                    }\n                                    if (pow === 1) {\n                                        r *= r;\n                                    } else if (pow === 2) {\n                                        r *= r * r;\n                                    } else if (pow === 3) {\n                                        r *= r * r * r;\n                                    } else if (pow === 4) {\n                                        r *= r * r * r * r;\n                                    }\n                                    if (type === 1) {\n                                        this.ratio = 1 - r;\n                                    } else if (type === 2) {\n                                        this.ratio = r;\n                                    } else if (time / duration < .5) {\n                                        this.ratio = r / 2;\n                                    } else {\n                                        this.ratio = 1 - r / 2;\n                                    }\n                                } else {\n                                    this.ratio = this._ease.getRatio(time / duration);\n                                }\n                            }\n                            if (this._time === prevTime && !force) {\n                                return;\n                            } else if (!this._initted) {\n                                this._init();\n                                if (!this._initted || this._gc) {\n                                    return;\n                                } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n                                    this._time = this._totalTime = prevTime;\n                                    this._rawPrevTime = prevRawPrevTime;\n                                    _lazyTweens.push(this);\n                                    this._lazy = [ time, suppressEvents ];\n                                    return;\n                                }\n                                if (this._time && !isComplete) {\n                                    this.ratio = this._ease.getRatio(this._time / duration);\n                                } else if (isComplete && this._ease._calcEnd) {\n                                    this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n                                }\n                            }\n                            if (this._lazy !== false) {\n                                this._lazy = false;\n                            }\n                            if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n                                this._active = true;\n                            }\n                            if (prevTime === 0) {\n                                if (this._startAt) {\n                                    if (time >= 0) {\n                                        this._startAt.render(time, suppressEvents, force);\n                                    } else if (!callback) {\n                                        callback = \"_dummyGS\";\n                                    }\n                                }\n                                if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n                                    this._callback(\"onStart\");\n                                }\n                            }\n                            pt = this._firstPT;\n                            while (pt) {\n                                if (pt.f) {\n                                    pt.t[pt.p](pt.c * this.ratio + pt.s);\n                                } else {\n                                    pt.t[pt.p] = pt.c * this.ratio + pt.s;\n                                }\n                                pt = pt._next;\n                            }\n                            if (this._onUpdate) {\n                                if (time < 0) if (this._startAt && time !== -1e-4) {\n                                    this._startAt.render(time, suppressEvents, force);\n                                }\n                                if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n                                    this._callback(\"onUpdate\");\n                                }\n                            }\n                            if (callback) if (!this._gc || force) {\n                                if (time < 0 && this._startAt && !this._onUpdate && time !== -1e-4) {\n                                    this._startAt.render(time, suppressEvents, force);\n                                }\n                                if (isComplete) {\n                                    if (this._timeline.autoRemoveChildren) {\n                                        this._enabled(false, false);\n                                    }\n                                    this._active = false;\n                                }\n                                if (!suppressEvents && this.vars[callback]) {\n                                    this._callback(callback);\n                                }\n                                if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n                                    this._rawPrevTime = 0;\n                                }\n                            }\n                        };\n                        p._kill = function(vars, target, overwritingTween) {\n                            if (vars === \"all\") {\n                                vars = null;\n                            }\n                            if (vars == null) if (target == null || target === this.target) {\n                                this._lazy = false;\n                                return this._enabled(false, false);\n                            }\n                            target = typeof target !== \"string\" ? target || this._targets || this.target : TweenLite.selector(target) || target;\n                            var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline, i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n                            if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n                                i = target.length;\n                                while (--i > -1) {\n                                    if (this._kill(vars, target[i], overwritingTween)) {\n                                        changed = true;\n                                    }\n                                }\n                            } else {\n                                if (this._targets) {\n                                    i = this._targets.length;\n                                    while (--i > -1) {\n                                        if (target === this._targets[i]) {\n                                            propLookup = this._propLookup[i] || {};\n                                            this._overwrittenProps = this._overwrittenProps || [];\n                                            overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n                                            break;\n                                        }\n                                    }\n                                } else if (target !== this.target) {\n                                    return false;\n                                } else {\n                                    propLookup = this._propLookup;\n                                    overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n                                }\n                                if (propLookup) {\n                                    killProps = vars || propLookup;\n                                    record = vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof vars !== \"object\" || !vars._tempKill);\n                                    if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n                                        for (p in killProps) {\n                                            if (propLookup[p]) {\n                                                if (!killed) {\n                                                    killed = [];\n                                                }\n                                                killed.push(p);\n                                            }\n                                        }\n                                        if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {\n                                            return false;\n                                        }\n                                    }\n                                    for (p in killProps) {\n                                        if (pt = propLookup[p]) {\n                                            if (simultaneousOverwrite) {\n                                                if (pt.f) {\n                                                    pt.t[pt.p](pt.s);\n                                                } else {\n                                                    pt.t[pt.p] = pt.s;\n                                                }\n                                                changed = true;\n                                            }\n                                            if (pt.pg && pt.t._kill(killProps)) {\n                                                changed = true;\n                                            }\n                                            if (!pt.pg || pt.t._overwriteProps.length === 0) {\n                                                if (pt._prev) {\n                                                    pt._prev._next = pt._next;\n                                                } else if (pt === this._firstPT) {\n                                                    this._firstPT = pt._next;\n                                                }\n                                                if (pt._next) {\n                                                    pt._next._prev = pt._prev;\n                                                }\n                                                pt._next = pt._prev = null;\n                                            }\n                                            delete propLookup[p];\n                                        }\n                                        if (record) {\n                                            overwrittenProps[p] = 1;\n                                        }\n                                    }\n                                    if (!this._firstPT && this._initted) {\n                                        this._enabled(false, false);\n                                    }\n                                }\n                            }\n                            return changed;\n                        };\n                        p.invalidate = function() {\n                            if (this._notifyPluginsOfEnabled) {\n                                TweenLite._onPluginEvent(\"_onDisable\", this);\n                            }\n                            this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n                            this._notifyPluginsOfEnabled = this._active = this._lazy = false;\n                            this._propLookup = this._targets ? {} : [];\n                            Animation.prototype.invalidate.call(this);\n                            if (this.vars.immediateRender) {\n                                this._time = -_tinyNum;\n                                this.render(Math.min(0, -this._delay));\n                            }\n                            return this;\n                        };\n                        p._enabled = function(enabled, ignoreTimeline) {\n                            if (!_tickerActive) {\n                                _ticker.wake();\n                            }\n                            if (enabled && this._gc) {\n                                var targets = this._targets, i;\n                                if (targets) {\n                                    i = targets.length;\n                                    while (--i > -1) {\n                                        this._siblings[i] = _register(targets[i], this, true);\n                                    }\n                                } else {\n                                    this._siblings = _register(this.target, this, true);\n                                }\n                            }\n                            Animation.prototype._enabled.call(this, enabled, ignoreTimeline);\n                            if (this._notifyPluginsOfEnabled) if (this._firstPT) {\n                                return TweenLite._onPluginEvent(enabled ? \"_onEnable\" : \"_onDisable\", this);\n                            }\n                            return false;\n                        };\n                        TweenLite.to = function(target, duration, vars) {\n                            return new TweenLite(target, duration, vars);\n                        };\n                        TweenLite.from = function(target, duration, vars) {\n                            vars.runBackwards = true;\n                            vars.immediateRender = vars.immediateRender != false;\n                            return new TweenLite(target, duration, vars);\n                        };\n                        TweenLite.fromTo = function(target, duration, fromVars, toVars) {\n                            toVars.startAt = fromVars;\n                            toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                            return new TweenLite(target, duration, toVars);\n                        };\n                        TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n                            return new TweenLite(callback, 0, {\n                                delay: delay,\n                                onComplete: callback,\n                                onCompleteParams: params,\n                                callbackScope: scope,\n                                onReverseComplete: callback,\n                                onReverseCompleteParams: params,\n                                immediateRender: false,\n                                lazy: false,\n                                useFrames: useFrames,\n                                overwrite: 0\n                            });\n                        };\n                        TweenLite.set = function(target, vars) {\n                            return new TweenLite(target, 0, vars);\n                        };\n                        TweenLite.getTweensOf = function(target, onlyActive) {\n                            if (target == null) {\n                                return [];\n                            }\n                            target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n                            var i, a, j, t;\n                            if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n                                i = target.length;\n                                a = [];\n                                while (--i > -1) {\n                                    a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n                                }\n                                i = a.length;\n                                while (--i > -1) {\n                                    t = a[i];\n                                    j = i;\n                                    while (--j > -1) {\n                                        if (t === a[j]) {\n                                            a.splice(i, 1);\n                                        }\n                                    }\n                                }\n                            } else {\n                                a = _register(target).concat();\n                                i = a.length;\n                                while (--i > -1) {\n                                    if (a[i]._gc || onlyActive && !a[i].isActive()) {\n                                        a.splice(i, 1);\n                                    }\n                                }\n                            }\n                            return a;\n                        };\n                        TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n                            if (typeof onlyActive === \"object\") {\n                                vars = onlyActive;\n                                onlyActive = false;\n                            }\n                            var a = TweenLite.getTweensOf(target, onlyActive), i = a.length;\n                            while (--i > -1) {\n                                a[i]._kill(vars, target);\n                            }\n                        };\n                        var TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n                            this._overwriteProps = (props || \"\").split(\",\");\n                            this._propName = this._overwriteProps[0];\n                            this._priority = priority || 0;\n                            this._super = TweenPlugin.prototype;\n                        }, true);\n                        p = TweenPlugin.prototype;\n                        TweenPlugin.version = \"1.18.0\";\n                        TweenPlugin.API = 2;\n                        p._firstPT = null;\n                        p._addTween = _addPropTween;\n                        p.setRatio = _setRatio;\n                        p._kill = function(lookup) {\n                            var a = this._overwriteProps, pt = this._firstPT, i;\n                            if (lookup[this._propName] != null) {\n                                this._overwriteProps = [];\n                            } else {\n                                i = a.length;\n                                while (--i > -1) {\n                                    if (lookup[a[i]] != null) {\n                                        a.splice(i, 1);\n                                    }\n                                }\n                            }\n                            while (pt) {\n                                if (lookup[pt.n] != null) {\n                                    if (pt._next) {\n                                        pt._next._prev = pt._prev;\n                                    }\n                                    if (pt._prev) {\n                                        pt._prev._next = pt._next;\n                                        pt._prev = null;\n                                    } else if (this._firstPT === pt) {\n                                        this._firstPT = pt._next;\n                                    }\n                                }\n                                pt = pt._next;\n                            }\n                            return false;\n                        };\n                        p._roundProps = function(lookup, value) {\n                            var pt = this._firstPT;\n                            while (pt) {\n                                if (lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + \"_\").join(\"\")]) {\n                                    pt.r = value;\n                                }\n                                pt = pt._next;\n                            }\n                        };\n                        TweenLite._onPluginEvent = function(type, tween) {\n                            var pt = tween._firstPT, changed, pt2, first, last, next;\n                            if (type === \"_onInitAllProps\") {\n                                while (pt) {\n                                    next = pt._next;\n                                    pt2 = first;\n                                    while (pt2 && pt2.pr > pt.pr) {\n                                        pt2 = pt2._next;\n                                    }\n                                    if (pt._prev = pt2 ? pt2._prev : last) {\n                                        pt._prev._next = pt;\n                                    } else {\n                                        first = pt;\n                                    }\n                                    if (pt._next = pt2) {\n                                        pt2._prev = pt;\n                                    } else {\n                                        last = pt;\n                                    }\n                                    pt = next;\n                                }\n                                pt = tween._firstPT = first;\n                            }\n                            while (pt) {\n                                if (pt.pg) if (typeof pt.t[type] === \"function\") if (pt.t[type]()) {\n                                    changed = true;\n                                }\n                                pt = pt._next;\n                            }\n                            return changed;\n                        };\n                        TweenPlugin.activate = function(plugins) {\n                            var i = plugins.length;\n                            while (--i > -1) {\n                                if (plugins[i].API === TweenPlugin.API) {\n                                    _plugins[new plugins[i]()._propName] = plugins[i];\n                                }\n                            }\n                            return true;\n                        };\n                        _gsDefine.plugin = function(config) {\n                            if (!config || !config.propName || !config.init || !config.API) {\n                                throw \"illegal plugin definition.\";\n                            }\n                            var propName = config.propName, priority = config.priority || 0, overwriteProps = config.overwriteProps, map = {\n                                init: \"_onInitTween\",\n                                set: \"setRatio\",\n                                kill: \"_kill\",\n                                round: \"_roundProps\",\n                                initAll: \"_onInitAllProps\"\n                            }, Plugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\", function() {\n                                TweenPlugin.call(this, propName, priority);\n                                this._overwriteProps = overwriteProps || [];\n                            }, config.global === true), p = Plugin.prototype = new TweenPlugin(propName), prop;\n                            p.constructor = Plugin;\n                            Plugin.API = config.API;\n                            for (prop in map) {\n                                if (typeof config[prop] === \"function\") {\n                                    p[map[prop]] = config[prop];\n                                }\n                            }\n                            Plugin.version = config.version;\n                            TweenPlugin.activate([ Plugin ]);\n                            return Plugin;\n                        };\n                        a = window._gsQueue;\n                        if (a) {\n                            for (i = 0; i < a.length; i++) {\n                                a[i]();\n                            }\n                            for (p in _defLookup) {\n                                if (!_defLookup[p].func) {\n                                    window.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n                                }\n                            }\n                        }\n                        _tickerActive = false;\n                    })(typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window, \"TweenMax\");\n                }).call(exports, function() {\n                    return this;\n                }());\n            }, function(module, exports) {\n                (function(__webpack_amd_options__) {\n                    module.exports = __webpack_amd_options__;\n                }).call(exports, {});\n            }, function(module, exports) {\n                THREE.SpriteCanvasMaterial = function(parameters) {\n                    THREE.Material.call(this);\n                    this.type = \"SpriteCanvasMaterial\";\n                    this.color = new THREE.Color(16777215);\n                    this.program = function(context, color) {};\n                    this.setValues(parameters);\n                };\n                THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n                THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n                THREE.SpriteCanvasMaterial.prototype.clone = function() {\n                    var material = new THREE.SpriteCanvasMaterial();\n                    material.copy(this);\n                    material.color.copy(this.color);\n                    material.program = this.program;\n                    return material;\n                };\n                THREE.CanvasRenderer = function(parameters) {\n                    console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n                    parameters = parameters || {};\n                    var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n                        alpha: parameters.alpha === true\n                    }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n                    if (_context.setLineDash === undefined) {\n                        _context.setLineDash = function() {};\n                    }\n                    this.domElement = _canvas;\n                    this.autoClear = true;\n                    this.sortObjects = true;\n                    this.sortElements = true;\n                    this.info = {\n                        render: {\n                            vertices: 0,\n                            faces: 0\n                        }\n                    };\n                    this.supportsVertexTextures = function() {};\n                    this.setFaceCulling = function() {};\n                    this.getContext = function() {\n                        return _context;\n                    };\n                    this.getContextAttributes = function() {\n                        return _context.getContextAttributes();\n                    };\n                    this.getPixelRatio = function() {\n                        return _pixelRatio;\n                    };\n                    this.setPixelRatio = function(value) {\n                        if (value !== undefined) _pixelRatio = value;\n                    };\n                    this.setSize = function(width, height, updateStyle) {\n                        _canvasWidth = width * _pixelRatio;\n                        _canvasHeight = height * _pixelRatio;\n                        _canvas.width = _canvasWidth;\n                        _canvas.height = _canvasHeight;\n                        _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n                        _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n                        if (updateStyle !== false) {\n                            _canvas.style.width = width + \"px\";\n                            _canvas.style.height = height + \"px\";\n                        }\n                        _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                        _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                        _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                        _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                        _contextGlobalAlpha = 1;\n                        _contextGlobalCompositeOperation = 0;\n                        _contextStrokeStyle = null;\n                        _contextFillStyle = null;\n                        _contextLineWidth = null;\n                        _contextLineCap = null;\n                        _contextLineJoin = null;\n                        this.setViewport(0, 0, width, height);\n                    };\n                    this.setViewport = function(x, y, width, height) {\n                        _viewportX = x * _pixelRatio;\n                        _viewportY = y * _pixelRatio;\n                        _viewportWidth = width * _pixelRatio;\n                        _viewportHeight = height * _pixelRatio;\n                    };\n                    this.setScissor = function() {};\n                    this.setScissorTest = function() {};\n                    this.setClearColor = function(color, alpha) {\n                        _clearColor.set(color);\n                        _clearAlpha = alpha !== undefined ? alpha : 1;\n                        _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                        _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                    };\n                    this.setClearColorHex = function(hex, alpha) {\n                        console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n                        this.setClearColor(hex, alpha);\n                    };\n                    this.getClearColor = function() {\n                        return _clearColor;\n                    };\n                    this.getClearAlpha = function() {\n                        return _clearAlpha;\n                    };\n                    this.getMaxAnisotropy = function() {\n                        return 0;\n                    };\n                    this.clear = function() {\n                        if (_clearBox.isEmpty() === false) {\n                            _clearBox.intersect(_clipBox);\n                            _clearBox.expandByScalar(2);\n                            _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n                            _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n                            _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n                            _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n                            if (_clearAlpha < 1) {\n                                _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                            }\n                            if (_clearAlpha > 0) {\n                                setBlending(THREE.NormalBlending);\n                                setOpacity(1);\n                                setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n                                _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                            }\n                            _clearBox.makeEmpty();\n                        }\n                    };\n                    this.clearColor = function() {};\n                    this.clearDepth = function() {};\n                    this.clearStencil = function() {};\n                    this.render = function(scene, camera) {\n                        if (camera instanceof THREE.Camera === false) {\n                            console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n                            return;\n                        }\n                        if (this.autoClear === true) this.clear();\n                        _this.info.render.vertices = 0;\n                        _this.info.render.faces = 0;\n                        _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n                        _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n                        _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n                        _elements = _renderData.elements;\n                        _lights = _renderData.lights;\n                        _camera = camera;\n                        _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n                        calculateLights();\n                        for (var e = 0, el = _elements.length; e < el; e++) {\n                            var element = _elements[e];\n                            var material = element.material;\n                            if (material === undefined || material.opacity === 0) continue;\n                            _elemBox.makeEmpty();\n                            if (element instanceof THREE.RenderableSprite) {\n                                _v1 = element;\n                                _v1.x *= _canvasWidthHalf;\n                                _v1.y *= _canvasHeightHalf;\n                                renderSprite(_v1, element, material);\n                            } else if (element instanceof THREE.RenderableLine) {\n                                _v1 = element.v1;\n                                _v2 = element.v2;\n                                _v1.positionScreen.x *= _canvasWidthHalf;\n                                _v1.positionScreen.y *= _canvasHeightHalf;\n                                _v2.positionScreen.x *= _canvasWidthHalf;\n                                _v2.positionScreen.y *= _canvasHeightHalf;\n                                _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n                                if (_clipBox.intersectsBox(_elemBox) === true) {\n                                    renderLine(_v1, _v2, element, material);\n                                }\n                            } else if (element instanceof THREE.RenderableFace) {\n                                _v1 = element.v1;\n                                _v2 = element.v2;\n                                _v3 = element.v3;\n                                if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n                                if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n                                if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n                                _v1.positionScreen.x *= _canvasWidthHalf;\n                                _v1.positionScreen.y *= _canvasHeightHalf;\n                                _v2.positionScreen.x *= _canvasWidthHalf;\n                                _v2.positionScreen.y *= _canvasHeightHalf;\n                                _v3.positionScreen.x *= _canvasWidthHalf;\n                                _v3.positionScreen.y *= _canvasHeightHalf;\n                                if (material.overdraw > 0) {\n                                    expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n                                    expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n                                    expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n                                }\n                                _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n                                if (_clipBox.intersectsBox(_elemBox) === true) {\n                                    renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n                                }\n                            }\n                            _clearBox.union(_elemBox);\n                        }\n                        _context.setTransform(1, 0, 0, 1, 0, 0);\n                    };\n                    function calculateLights() {\n                        _ambientLight.setRGB(0, 0, 0);\n                        _directionalLights.setRGB(0, 0, 0);\n                        _pointLights.setRGB(0, 0, 0);\n                        for (var l = 0, ll = _lights.length; l < ll; l++) {\n                            var light = _lights[l];\n                            var lightColor = light.color;\n                            if (light instanceof THREE.AmbientLight) {\n                                _ambientLight.add(lightColor);\n                            } else if (light instanceof THREE.DirectionalLight) {\n                                _directionalLights.add(lightColor);\n                            } else if (light instanceof THREE.PointLight) {\n                                _pointLights.add(lightColor);\n                            }\n                        }\n                    }\n                    function calculateLight(position, normal, color) {\n                        for (var l = 0, ll = _lights.length; l < ll; l++) {\n                            var light = _lights[l];\n                            _lightColor.copy(light.color);\n                            if (light instanceof THREE.DirectionalLight) {\n                                var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n                                var amount = normal.dot(lightPosition);\n                                if (amount <= 0) continue;\n                                amount *= light.intensity;\n                                color.add(_lightColor.multiplyScalar(amount));\n                            } else if (light instanceof THREE.PointLight) {\n                                var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n                                var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n                                if (amount <= 0) continue;\n                                amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n                                if (amount == 0) continue;\n                                amount *= light.intensity;\n                                color.add(_lightColor.multiplyScalar(amount));\n                            }\n                        }\n                    }\n                    function renderSprite(v1, element, material) {\n                        setOpacity(material.opacity);\n                        setBlending(material.blending);\n                        var scaleX = element.scale.x * _canvasWidthHalf;\n                        var scaleY = element.scale.y * _canvasHeightHalf;\n                        var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n                        _elemBox.min.set(v1.x - dist, v1.y - dist);\n                        _elemBox.max.set(v1.x + dist, v1.y + dist);\n                        if (material instanceof THREE.SpriteMaterial) {\n                            var texture = material.map;\n                            if (texture !== null) {\n                                var pattern = _patterns[texture.id];\n                                if (pattern === undefined || pattern.version !== texture.version) {\n                                    pattern = textureToPattern(texture);\n                                    _patterns[texture.id] = pattern;\n                                }\n                                if (pattern.canvas !== undefined) {\n                                    setFillStyle(pattern.canvas);\n                                    var bitmap = texture.image;\n                                    var ox = bitmap.width * texture.offset.x;\n                                    var oy = bitmap.height * texture.offset.y;\n                                    var sx = bitmap.width * texture.repeat.x;\n                                    var sy = bitmap.height * texture.repeat.y;\n                                    var cx = scaleX / sx;\n                                    var cy = scaleY / sy;\n                                    _context.save();\n                                    _context.translate(v1.x, v1.y);\n                                    if (material.rotation !== 0) _context.rotate(material.rotation);\n                                    _context.translate(-scaleX / 2, -scaleY / 2);\n                                    _context.scale(cx, cy);\n                                    _context.translate(-ox, -oy);\n                                    _context.fillRect(ox, oy, sx, sy);\n                                    _context.restore();\n                                }\n                            } else {\n                                setFillStyle(material.color.getStyle());\n                                _context.save();\n                                _context.translate(v1.x, v1.y);\n                                if (material.rotation !== 0) _context.rotate(material.rotation);\n                                _context.scale(scaleX, -scaleY);\n                                _context.fillRect(-.5, -.5, 1, 1);\n                                _context.restore();\n                            }\n                        } else if (material instanceof THREE.SpriteCanvasMaterial) {\n                            setStrokeStyle(material.color.getStyle());\n                            setFillStyle(material.color.getStyle());\n                            _context.save();\n                            _context.translate(v1.x, v1.y);\n                            if (material.rotation !== 0) _context.rotate(material.rotation);\n                            _context.scale(scaleX, scaleY);\n                            material.program(_context);\n                            _context.restore();\n                        }\n                    }\n                    function renderLine(v1, v2, element, material) {\n                        setOpacity(material.opacity);\n                        setBlending(material.blending);\n                        _context.beginPath();\n                        _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n                        _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n                        if (material instanceof THREE.LineBasicMaterial) {\n                            setLineWidth(material.linewidth);\n                            setLineCap(material.linecap);\n                            setLineJoin(material.linejoin);\n                            if (material.vertexColors !== THREE.VertexColors) {\n                                setStrokeStyle(material.color.getStyle());\n                            } else {\n                                var colorStyle1 = element.vertexColors[0].getStyle();\n                                var colorStyle2 = element.vertexColors[1].getStyle();\n                                if (colorStyle1 === colorStyle2) {\n                                    setStrokeStyle(colorStyle1);\n                                } else {\n                                    try {\n                                        var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n                                        grad.addColorStop(0, colorStyle1);\n                                        grad.addColorStop(1, colorStyle2);\n                                    } catch (exception) {\n                                        grad = colorStyle1;\n                                    }\n                                    setStrokeStyle(grad);\n                                }\n                            }\n                            _context.stroke();\n                            _elemBox.expandByScalar(material.linewidth * 2);\n                        } else if (material instanceof THREE.LineDashedMaterial) {\n                            setLineWidth(material.linewidth);\n                            setLineCap(material.linecap);\n                            setLineJoin(material.linejoin);\n                            setStrokeStyle(material.color.getStyle());\n                            setLineDash([ material.dashSize, material.gapSize ]);\n                            _context.stroke();\n                            _elemBox.expandByScalar(material.linewidth * 2);\n                            setLineDash([]);\n                        }\n                    }\n                    function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n                        _this.info.render.vertices += 3;\n                        _this.info.render.faces++;\n                        setOpacity(material.opacity);\n                        setBlending(material.blending);\n                        _v1x = v1.positionScreen.x;\n                        _v1y = v1.positionScreen.y;\n                        _v2x = v2.positionScreen.x;\n                        _v2y = v2.positionScreen.y;\n                        _v3x = v3.positionScreen.x;\n                        _v3y = v3.positionScreen.y;\n                        drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n                        if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n                            _diffuseColor.copy(material.color);\n                            _emissiveColor.copy(material.emissive);\n                            if (material.vertexColors === THREE.FaceColors) {\n                                _diffuseColor.multiply(element.color);\n                            }\n                            _color.copy(_ambientLight);\n                            _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n                            calculateLight(_centroid, element.normalModel, _color);\n                            _color.multiply(_diffuseColor).add(_emissiveColor);\n                            material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                        } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n                            if (material.map !== null) {\n                                var mapping = material.map.mapping;\n                                if (mapping === THREE.UVMapping) {\n                                    _uvs = element.uvs;\n                                    patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n                                }\n                            } else if (material.envMap !== null) {\n                                if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n                                    _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n                                    _uv1x = .5 * _normal.x + .5;\n                                    _uv1y = .5 * _normal.y + .5;\n                                    _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n                                    _uv2x = .5 * _normal.x + .5;\n                                    _uv2y = .5 * _normal.y + .5;\n                                    _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n                                    _uv3x = .5 * _normal.x + .5;\n                                    _uv3y = .5 * _normal.y + .5;\n                                    patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n                                }\n                            } else {\n                                _color.copy(material.color);\n                                if (material.vertexColors === THREE.FaceColors) {\n                                    _color.multiply(element.color);\n                                }\n                                material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                            }\n                        } else if (material instanceof THREE.MeshNormalMaterial) {\n                            _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n                            _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n                            material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                        } else {\n                            _color.setRGB(1, 1, 1);\n                            material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                        }\n                    }\n                    function drawTriangle(x0, y0, x1, y1, x2, y2) {\n                        _context.beginPath();\n                        _context.moveTo(x0, y0);\n                        _context.lineTo(x1, y1);\n                        _context.lineTo(x2, y2);\n                        _context.closePath();\n                    }\n                    function strokePath(color, linewidth, linecap, linejoin) {\n                        setLineWidth(linewidth);\n                        setLineCap(linecap);\n                        setLineJoin(linejoin);\n                        setStrokeStyle(color.getStyle());\n                        _context.stroke();\n                        _elemBox.expandByScalar(linewidth * 2);\n                    }\n                    function fillPath(color) {\n                        setFillStyle(color.getStyle());\n                        _context.fill();\n                    }\n                    function textureToPattern(texture) {\n                        if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n                            return {\n                                canvas: undefined,\n                                version: texture.version\n                            };\n                        }\n                        var image = texture.image;\n                        if (image.complete === false) {\n                            return {\n                                canvas: undefined,\n                                version: 0\n                            };\n                        }\n                        var canvas = document.createElement(\"canvas\");\n                        canvas.width = image.width;\n                        canvas.height = image.height;\n                        var context = canvas.getContext(\"2d\");\n                        context.setTransform(1, 0, 0, -1, 0, image.height);\n                        context.drawImage(image, 0, 0);\n                        var repeatX = texture.wrapS === THREE.RepeatWrapping;\n                        var repeatY = texture.wrapT === THREE.RepeatWrapping;\n                        var repeat = \"no-repeat\";\n                        if (repeatX === true && repeatY === true) {\n                            repeat = \"repeat\";\n                        } else if (repeatX === true) {\n                            repeat = \"repeat-x\";\n                        } else if (repeatY === true) {\n                            repeat = \"repeat-y\";\n                        }\n                        var pattern = _context.createPattern(canvas, repeat);\n                        if (texture.onUpdate) texture.onUpdate(texture);\n                        return {\n                            canvas: pattern,\n                            version: texture.version\n                        };\n                    }\n                    function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n                        var pattern = _patterns[texture.id];\n                        if (pattern === undefined || pattern.version !== texture.version) {\n                            pattern = textureToPattern(texture);\n                            _patterns[texture.id] = pattern;\n                        }\n                        if (pattern.canvas !== undefined) {\n                            setFillStyle(pattern.canvas);\n                        } else {\n                            setFillStyle(\"rgba( 0, 0, 0, 1)\");\n                            _context.fill();\n                            return;\n                        }\n                        var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n                        u0 = (u0 + offsetX) * width;\n                        v0 = (v0 + offsetY) * height;\n                        u1 = (u1 + offsetX) * width;\n                        v1 = (v1 + offsetY) * height;\n                        u2 = (u2 + offsetX) * width;\n                        v2 = (v2 + offsetY) * height;\n                        x1 -= x0;\n                        y1 -= y0;\n                        x2 -= x0;\n                        y2 -= y0;\n                        u1 -= u0;\n                        v1 -= v0;\n                        u2 -= u0;\n                        v2 -= v0;\n                        det = u1 * v2 - u2 * v1;\n                        if (det === 0) return;\n                        idet = 1 / det;\n                        a = (v2 * x1 - v1 * x2) * idet;\n                        b = (v2 * y1 - v1 * y2) * idet;\n                        c = (u1 * x2 - u2 * x1) * idet;\n                        d = (u1 * y2 - u2 * y1) * idet;\n                        e = x0 - a * u0 - c * v0;\n                        f = y0 - b * u0 - d * v0;\n                        _context.save();\n                        _context.transform(a, b, c, d, e, f);\n                        _context.fill();\n                        _context.restore();\n                    }\n                    function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n                        var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n                        u0 *= width;\n                        v0 *= height;\n                        u1 *= width;\n                        v1 *= height;\n                        u2 *= width;\n                        v2 *= height;\n                        x1 -= x0;\n                        y1 -= y0;\n                        x2 -= x0;\n                        y2 -= y0;\n                        u1 -= u0;\n                        v1 -= v0;\n                        u2 -= u0;\n                        v2 -= v0;\n                        det = u1 * v2 - u2 * v1;\n                        idet = 1 / det;\n                        a = (v2 * x1 - v1 * x2) * idet;\n                        b = (v2 * y1 - v1 * y2) * idet;\n                        c = (u1 * x2 - u2 * x1) * idet;\n                        d = (u1 * y2 - u2 * y1) * idet;\n                        e = x0 - a * u0 - c * v0;\n                        f = y0 - b * u0 - d * v0;\n                        _context.save();\n                        _context.transform(a, b, c, d, e, f);\n                        _context.clip();\n                        _context.drawImage(image, 0, 0);\n                        _context.restore();\n                    }\n                    function expand(v1, v2, pixels) {\n                        var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n                        if (det === 0) return;\n                        idet = pixels / Math.sqrt(det);\n                        x *= idet;\n                        y *= idet;\n                        v2.x += x;\n                        v2.y += y;\n                        v1.x -= x;\n                        v1.y -= y;\n                    }\n                    function setOpacity(value) {\n                        if (_contextGlobalAlpha !== value) {\n                            _context.globalAlpha = value;\n                            _contextGlobalAlpha = value;\n                        }\n                    }\n                    function setBlending(value) {\n                        if (_contextGlobalCompositeOperation !== value) {\n                            if (value === THREE.NormalBlending) {\n                                _context.globalCompositeOperation = \"source-over\";\n                            } else if (value === THREE.AdditiveBlending) {\n                                _context.globalCompositeOperation = \"lighter\";\n                            } else if (value === THREE.SubtractiveBlending) {\n                                _context.globalCompositeOperation = \"darker\";\n                            }\n                            _contextGlobalCompositeOperation = value;\n                        }\n                    }\n                    function setLineWidth(value) {\n                        if (_contextLineWidth !== value) {\n                            _context.lineWidth = value;\n                            _contextLineWidth = value;\n                        }\n                    }\n                    function setLineCap(value) {\n                        if (_contextLineCap !== value) {\n                            _context.lineCap = value;\n                            _contextLineCap = value;\n                        }\n                    }\n                    function setLineJoin(value) {\n                        if (_contextLineJoin !== value) {\n                            _context.lineJoin = value;\n                            _contextLineJoin = value;\n                        }\n                    }\n                    function setStrokeStyle(value) {\n                        if (_contextStrokeStyle !== value) {\n                            _context.strokeStyle = value;\n                            _contextStrokeStyle = value;\n                        }\n                    }\n                    function setFillStyle(value) {\n                        if (_contextFillStyle !== value) {\n                            _context.fillStyle = value;\n                            _contextFillStyle = value;\n                        }\n                    }\n                    function setLineDash(value) {\n                        if (_contextLineDash.length !== value.length) {\n                            _context.setLineDash(value);\n                            _contextLineDash = value;\n                        }\n                    }\n                };\n            }, function(module, exports) {\n                THREE.RenderableObject = function() {\n                    this.id = 0;\n                    this.object = null;\n                    this.z = 0;\n                    this.renderOrder = 0;\n                };\n                THREE.RenderableFace = function() {\n                    this.id = 0;\n                    this.v1 = new THREE.RenderableVertex();\n                    this.v2 = new THREE.RenderableVertex();\n                    this.v3 = new THREE.RenderableVertex();\n                    this.normalModel = new THREE.Vector3();\n                    this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n                    this.vertexNormalsLength = 0;\n                    this.color = new THREE.Color();\n                    this.material = null;\n                    this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n                    this.z = 0;\n                    this.renderOrder = 0;\n                };\n                THREE.RenderableVertex = function() {\n                    this.position = new THREE.Vector3();\n                    this.positionWorld = new THREE.Vector3();\n                    this.positionScreen = new THREE.Vector4();\n                    this.visible = true;\n                };\n                THREE.RenderableVertex.prototype.copy = function(vertex) {\n                    this.positionWorld.copy(vertex.positionWorld);\n                    this.positionScreen.copy(vertex.positionScreen);\n                };\n                THREE.RenderableLine = function() {\n                    this.id = 0;\n                    this.v1 = new THREE.RenderableVertex();\n                    this.v2 = new THREE.RenderableVertex();\n                    this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n                    this.material = null;\n                    this.z = 0;\n                    this.renderOrder = 0;\n                };\n                THREE.RenderableSprite = function() {\n                    this.id = 0;\n                    this.object = null;\n                    this.x = 0;\n                    this.y = 0;\n                    this.z = 0;\n                    this.rotation = 0;\n                    this.scale = new THREE.Vector2();\n                    this.material = null;\n                    this.renderOrder = 0;\n                };\n                THREE.Projector = function() {\n                    var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n                        objects: [],\n                        lights: [],\n                        elements: []\n                    }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n                    this.projectVector = function(vector, camera) {\n                        console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n                        vector.project(camera);\n                    };\n                    this.unprojectVector = function(vector, camera) {\n                        console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n                        vector.unproject(camera);\n                    };\n                    this.pickingRay = function(vector, camera) {\n                        console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n                    };\n                    var RenderList = function() {\n                        var normals = [];\n                        var uvs = [];\n                        var object = null;\n                        var material = null;\n                        var normalMatrix = new THREE.Matrix3();\n                        function setObject(value) {\n                            object = value;\n                            material = object.material;\n                            normalMatrix.getNormalMatrix(object.matrixWorld);\n                            normals.length = 0;\n                            uvs.length = 0;\n                        }\n                        function projectVertex(vertex) {\n                            var position = vertex.position;\n                            var positionWorld = vertex.positionWorld;\n                            var positionScreen = vertex.positionScreen;\n                            positionWorld.copy(position).applyMatrix4(_modelMatrix);\n                            positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n                            var invW = 1 / positionScreen.w;\n                            positionScreen.x *= invW;\n                            positionScreen.y *= invW;\n                            positionScreen.z *= invW;\n                            vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n                        }\n                        function pushVertex(x, y, z) {\n                            _vertex = getNextVertexInPool();\n                            _vertex.position.set(x, y, z);\n                            projectVertex(_vertex);\n                        }\n                        function pushNormal(x, y, z) {\n                            normals.push(x, y, z);\n                        }\n                        function pushUv(x, y) {\n                            uvs.push(x, y);\n                        }\n                        function checkTriangleVisibility(v1, v2, v3) {\n                            if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n                            _points3[0] = v1.positionScreen;\n                            _points3[1] = v2.positionScreen;\n                            _points3[2] = v3.positionScreen;\n                            return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n                        }\n                        function checkBackfaceCulling(v1, v2, v3) {\n                            return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n                        }\n                        function pushLine(a, b) {\n                            var v1 = _vertexPool[a];\n                            var v2 = _vertexPool[b];\n                            _line = getNextLineInPool();\n                            _line.id = object.id;\n                            _line.v1.copy(v1);\n                            _line.v2.copy(v2);\n                            _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n                            _line.renderOrder = object.renderOrder;\n                            _line.material = object.material;\n                            _renderData.elements.push(_line);\n                        }\n                        function pushTriangle(a, b, c) {\n                            var v1 = _vertexPool[a];\n                            var v2 = _vertexPool[b];\n                            var v3 = _vertexPool[c];\n                            if (checkTriangleVisibility(v1, v2, v3) === false) return;\n                            if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n                                _face = getNextFaceInPool();\n                                _face.id = object.id;\n                                _face.v1.copy(v1);\n                                _face.v2.copy(v2);\n                                _face.v3.copy(v3);\n                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                                _face.renderOrder = object.renderOrder;\n                                _face.normalModel.fromArray(normals, a * 3);\n                                _face.normalModel.applyMatrix3(normalMatrix).normalize();\n                                for (var i = 0; i < 3; i++) {\n                                    var normal = _face.vertexNormalsModel[i];\n                                    normal.fromArray(normals, arguments[i] * 3);\n                                    normal.applyMatrix3(normalMatrix).normalize();\n                                    var uv = _face.uvs[i];\n                                    uv.fromArray(uvs, arguments[i] * 2);\n                                }\n                                _face.vertexNormalsLength = 3;\n                                _face.material = object.material;\n                                _renderData.elements.push(_face);\n                            }\n                        }\n                        return {\n                            setObject: setObject,\n                            projectVertex: projectVertex,\n                            checkTriangleVisibility: checkTriangleVisibility,\n                            checkBackfaceCulling: checkBackfaceCulling,\n                            pushVertex: pushVertex,\n                            pushNormal: pushNormal,\n                            pushUv: pushUv,\n                            pushLine: pushLine,\n                            pushTriangle: pushTriangle\n                        };\n                    };\n                    var renderList = new RenderList();\n                    this.projectScene = function(scene, camera, sortObjects, sortElements) {\n                        _faceCount = 0;\n                        _lineCount = 0;\n                        _spriteCount = 0;\n                        _renderData.elements.length = 0;\n                        if (scene.autoUpdate === true) scene.updateMatrixWorld();\n                        if (camera.parent === null) camera.updateMatrixWorld();\n                        _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n                        _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n                        _frustum.setFromMatrix(_viewProjectionMatrix);\n                        _objectCount = 0;\n                        _renderData.objects.length = 0;\n                        _renderData.lights.length = 0;\n                        scene.traverseVisible(function(object) {\n                            if (object instanceof THREE.Light) {\n                                _renderData.lights.push(object);\n                            } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n                                var material = object.material;\n                                if (material.visible === false) return;\n                                if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n                                    _object = getNextObjectInPool();\n                                    _object.id = object.id;\n                                    _object.object = object;\n                                    _vector3.setFromMatrixPosition(object.matrixWorld);\n                                    _vector3.applyProjection(_viewProjectionMatrix);\n                                    _object.z = _vector3.z;\n                                    _object.renderOrder = object.renderOrder;\n                                    _renderData.objects.push(_object);\n                                }\n                            }\n                        });\n                        if (sortObjects === true) {\n                            _renderData.objects.sort(painterSort);\n                        }\n                        for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n                            var object = _renderData.objects[o].object;\n                            var geometry = object.geometry;\n                            renderList.setObject(object);\n                            _modelMatrix = object.matrixWorld;\n                            _vertexCount = 0;\n                            if (object instanceof THREE.Mesh) {\n                                if (geometry instanceof THREE.BufferGeometry) {\n                                    var attributes = geometry.attributes;\n                                    var groups = geometry.groups;\n                                    if (attributes.position === undefined) continue;\n                                    var positions = attributes.position.array;\n                                    for (var i = 0, l = positions.length; i < l; i += 3) {\n                                        renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                                    }\n                                    if (attributes.normal !== undefined) {\n                                        var normals = attributes.normal.array;\n                                        for (var i = 0, l = normals.length; i < l; i += 3) {\n                                            renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n                                        }\n                                    }\n                                    if (attributes.uv !== undefined) {\n                                        var uvs = attributes.uv.array;\n                                        for (var i = 0, l = uvs.length; i < l; i += 2) {\n                                            renderList.pushUv(uvs[i], uvs[i + 1]);\n                                        }\n                                    }\n                                    if (geometry.index !== null) {\n                                        var indices = geometry.index.array;\n                                        if (groups.length > 0) {\n                                            for (var o = 0; o < groups.length; o++) {\n                                                var group = groups[o];\n                                                for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n                                                    renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                                }\n                                            }\n                                        } else {\n                                            for (var i = 0, l = indices.length; i < l; i += 3) {\n                                                renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                            }\n                                        }\n                                    } else {\n                                        for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n                                            renderList.pushTriangle(i, i + 1, i + 2);\n                                        }\n                                    }\n                                } else if (geometry instanceof THREE.Geometry) {\n                                    var vertices = geometry.vertices;\n                                    var faces = geometry.faces;\n                                    var faceVertexUvs = geometry.faceVertexUvs[0];\n                                    _normalMatrix.getNormalMatrix(_modelMatrix);\n                                    var material = object.material;\n                                    var isFaceMaterial = material instanceof THREE.MultiMaterial;\n                                    var objectMaterials = isFaceMaterial === true ? object.material : null;\n                                    for (var v = 0, vl = vertices.length; v < vl; v++) {\n                                        var vertex = vertices[v];\n                                        _vector3.copy(vertex);\n                                        if (material.morphTargets === true) {\n                                            var morphTargets = geometry.morphTargets;\n                                            var morphInfluences = object.morphTargetInfluences;\n                                            for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                                                var influence = morphInfluences[t];\n                                                if (influence === 0) continue;\n                                                var target = morphTargets[t];\n                                                var targetVertex = target.vertices[v];\n                                                _vector3.x += (targetVertex.x - vertex.x) * influence;\n                                                _vector3.y += (targetVertex.y - vertex.y) * influence;\n                                                _vector3.z += (targetVertex.z - vertex.z) * influence;\n                                            }\n                                        }\n                                        renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n                                    }\n                                    for (var f = 0, fl = faces.length; f < fl; f++) {\n                                        var face = faces[f];\n                                        material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n                                        if (material === undefined) continue;\n                                        var side = material.side;\n                                        var v1 = _vertexPool[face.a];\n                                        var v2 = _vertexPool[face.b];\n                                        var v3 = _vertexPool[face.c];\n                                        if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n                                        var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n                                        if (side !== THREE.DoubleSide) {\n                                            if (side === THREE.FrontSide && visible === false) continue;\n                                            if (side === THREE.BackSide && visible === true) continue;\n                                        }\n                                        _face = getNextFaceInPool();\n                                        _face.id = object.id;\n                                        _face.v1.copy(v1);\n                                        _face.v2.copy(v2);\n                                        _face.v3.copy(v3);\n                                        _face.normalModel.copy(face.normal);\n                                        if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                            _face.normalModel.negate();\n                                        }\n                                        _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n                                        var faceVertexNormals = face.vertexNormals;\n                                        for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n                                            var normalModel = _face.vertexNormalsModel[n];\n                                            normalModel.copy(faceVertexNormals[n]);\n                                            if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                                normalModel.negate();\n                                            }\n                                            normalModel.applyMatrix3(_normalMatrix).normalize();\n                                        }\n                                        _face.vertexNormalsLength = faceVertexNormals.length;\n                                        var vertexUvs = faceVertexUvs[f];\n                                        if (vertexUvs !== undefined) {\n                                            for (var u = 0; u < 3; u++) {\n                                                _face.uvs[u].copy(vertexUvs[u]);\n                                            }\n                                        }\n                                        _face.color = face.color;\n                                        _face.material = material;\n                                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                                        _face.renderOrder = object.renderOrder;\n                                        _renderData.elements.push(_face);\n                                    }\n                                }\n                            } else if (object instanceof THREE.Line) {\n                                if (geometry instanceof THREE.BufferGeometry) {\n                                    var attributes = geometry.attributes;\n                                    if (attributes.position !== undefined) {\n                                        var positions = attributes.position.array;\n                                        for (var i = 0, l = positions.length; i < l; i += 3) {\n                                            renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                                        }\n                                        if (geometry.index !== null) {\n                                            var indices = geometry.index.array;\n                                            for (var i = 0, l = indices.length; i < l; i += 2) {\n                                                renderList.pushLine(indices[i], indices[i + 1]);\n                                            }\n                                        } else {\n                                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n                                            for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n                                                renderList.pushLine(i, i + 1);\n                                            }\n                                        }\n                                    }\n                                } else if (geometry instanceof THREE.Geometry) {\n                                    _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n                                    var vertices = object.geometry.vertices;\n                                    if (vertices.length === 0) continue;\n                                    v1 = getNextVertexInPool();\n                                    v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n                                    for (var v = 1, vl = vertices.length; v < vl; v++) {\n                                        v1 = getNextVertexInPool();\n                                        v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n                                        if ((v + 1) % step > 0) continue;\n                                        v2 = _vertexPool[_vertexCount - 2];\n                                        _clippedVertex1PositionScreen.copy(v1.positionScreen);\n                                        _clippedVertex2PositionScreen.copy(v2.positionScreen);\n                                        if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n                                            _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n                                            _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n                                            _line = getNextLineInPool();\n                                            _line.id = object.id;\n                                            _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n                                            _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n                                            _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n                                            _line.renderOrder = object.renderOrder;\n                                            _line.material = object.material;\n                                            if (object.material.vertexColors === THREE.VertexColors) {\n                                                _line.vertexColors[0].copy(object.geometry.colors[v]);\n                                                _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n                                            }\n                                            _renderData.elements.push(_line);\n                                        }\n                                    }\n                                }\n                            } else if (object instanceof THREE.Sprite) {\n                                _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n                                _vector4.applyMatrix4(_viewProjectionMatrix);\n                                var invW = 1 / _vector4.w;\n                                _vector4.z *= invW;\n                                if (_vector4.z >= -1 && _vector4.z <= 1) {\n                                    _sprite = getNextSpriteInPool();\n                                    _sprite.id = object.id;\n                                    _sprite.x = _vector4.x * invW;\n                                    _sprite.y = _vector4.y * invW;\n                                    _sprite.z = _vector4.z;\n                                    _sprite.renderOrder = object.renderOrder;\n                                    _sprite.object = object;\n                                    _sprite.rotation = object.rotation;\n                                    _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n                                    _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n                                    _sprite.material = object.material;\n                                    _renderData.elements.push(_sprite);\n                                }\n                            }\n                        }\n                        if (sortElements === true) {\n                            _renderData.elements.sort(painterSort);\n                        }\n                        return _renderData;\n                    };\n                    function getNextObjectInPool() {\n                        if (_objectCount === _objectPoolLength) {\n                            var object = new THREE.RenderableObject();\n                            _objectPool.push(object);\n                            _objectPoolLength++;\n                            _objectCount++;\n                            return object;\n                        }\n                        return _objectPool[_objectCount++];\n                    }\n                    function getNextVertexInPool() {\n                        if (_vertexCount === _vertexPoolLength) {\n                            var vertex = new THREE.RenderableVertex();\n                            _vertexPool.push(vertex);\n                            _vertexPoolLength++;\n                            _vertexCount++;\n                            return vertex;\n                        }\n                        return _vertexPool[_vertexCount++];\n                    }\n                    function getNextFaceInPool() {\n                        if (_faceCount === _facePoolLength) {\n                            var face = new THREE.RenderableFace();\n                            _facePool.push(face);\n                            _facePoolLength++;\n                            _faceCount++;\n                            return face;\n                        }\n                        return _facePool[_faceCount++];\n                    }\n                    function getNextLineInPool() {\n                        if (_lineCount === _linePoolLength) {\n                            var line = new THREE.RenderableLine();\n                            _linePool.push(line);\n                            _linePoolLength++;\n                            _lineCount++;\n                            return line;\n                        }\n                        return _linePool[_lineCount++];\n                    }\n                    function getNextSpriteInPool() {\n                        if (_spriteCount === _spritePoolLength) {\n                            var sprite = new THREE.RenderableSprite();\n                            _spritePool.push(sprite);\n                            _spritePoolLength++;\n                            _spriteCount++;\n                            return sprite;\n                        }\n                        return _spritePool[_spriteCount++];\n                    }\n                    function painterSort(a, b) {\n                        if (a.renderOrder !== b.renderOrder) {\n                            return a.renderOrder - b.renderOrder;\n                        } else if (a.z !== b.z) {\n                            return b.z - a.z;\n                        } else if (a.id !== b.id) {\n                            return a.id - b.id;\n                        } else {\n                            return 0;\n                        }\n                    }\n                    function clipLine(s1, s2) {\n                        var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n                        if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n                            return true;\n                        } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n                            return false;\n                        } else {\n                            if (bc1near < 0) {\n                                alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n                            } else if (bc2near < 0) {\n                                alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n                            }\n                            if (bc1far < 0) {\n                                alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n                            } else if (bc2far < 0) {\n                                alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n                            }\n                            if (alpha2 < alpha1) {\n                                return false;\n                            } else {\n                                s1.lerp(s2, alpha1);\n                                s2.lerp(s1, 1 - alpha2);\n                                return true;\n                            }\n                        }\n                    }\n                };\n            }, function(module, exports, __webpack_require__) {\n                /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n                \"use strict\";\n                var isObject = __webpack_require__(10);\n                function isObjectObject(o) {\n                    return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n                }\n                module.exports = function isPlainObject(o) {\n                    var ctor, prot;\n                    if (isObjectObject(o) === false) return false;\n                    ctor = o.constructor;\n                    if (typeof ctor !== \"function\") return false;\n                    prot = ctor.prototype;\n                    if (isObjectObject(prot) === false) return false;\n                    if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                        return false;\n                    }\n                    return true;\n                };\n            }, function(module, exports) {\n                /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n                \"use strict\";\n                module.exports = function isObject(val) {\n                    return val != null && typeof val === \"object\" && !Array.isArray(val);\n                };\n            }, function(module, exports, __webpack_require__) {\n                var __WEBPACK_AMD_DEFINE_RESULT__;\n                !function(undefined) {\n                    var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                        return Object.prototype.toString.call(obj) === \"[object Array]\";\n                    };\n                    var defaultMaxListeners = 10;\n                    function init() {\n                        this._events = {};\n                        if (this._conf) {\n                            configure.call(this, this._conf);\n                        }\n                    }\n                    function configure(conf) {\n                        if (conf) {\n                            this._conf = conf;\n                            conf.delimiter && (this.delimiter = conf.delimiter);\n                            conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                            conf.wildcard && (this.wildcard = conf.wildcard);\n                            conf.newListener && (this.newListener = conf.newListener);\n                            if (this.wildcard) {\n                                this.listenerTree = {};\n                            }\n                        }\n                    }\n                    function EventEmitter(conf) {\n                        this._events = {};\n                        this.newListener = false;\n                        configure.call(this, conf);\n                    }\n                    function searchListenerTree(handlers, type, tree, i) {\n                        if (!tree) {\n                            return [];\n                        }\n                        var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                        if (i === typeLength && tree._listeners) {\n                            if (typeof tree._listeners === \"function\") {\n                                handlers && handlers.push(tree._listeners);\n                                return [ tree ];\n                            } else {\n                                for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                                    handlers && handlers.push(tree._listeners[leaf]);\n                                }\n                                return [ tree ];\n                            }\n                        }\n                        if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                            if (currentType === \"*\") {\n                                for (branch in tree) {\n                                    if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                                    }\n                                }\n                                return listeners;\n                            } else if (currentType === \"**\") {\n                                endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                                if (endReached && tree._listeners) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                                }\n                                for (branch in tree) {\n                                    if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                        if (branch === \"*\" || branch === \"**\") {\n                                            if (tree[branch]._listeners && !endReached) {\n                                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                            }\n                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                        } else if (branch === nextType) {\n                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                        } else {\n                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                        }\n                                    }\n                                }\n                                return listeners;\n                            }\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                        }\n                        xTree = tree[\"*\"];\n                        if (xTree) {\n                            searchListenerTree(handlers, type, xTree, i + 1);\n                        }\n                        xxTree = tree[\"**\"];\n                        if (xxTree) {\n                            if (i < typeLength) {\n                                if (xxTree._listeners) {\n                                    searchListenerTree(handlers, type, xxTree, typeLength);\n                                }\n                                for (branch in xxTree) {\n                                    if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                        if (branch === nextType) {\n                                            searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                        } else if (branch === currentType) {\n                                            searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                        } else {\n                                            isolatedBranch = {};\n                                            isolatedBranch[branch] = xxTree[branch];\n                                            searchListenerTree(handlers, type, {\n                                                \"**\": isolatedBranch\n                                            }, i + 1);\n                                        }\n                                    }\n                                }\n                            } else if (xxTree._listeners) {\n                                searchListenerTree(handlers, type, xxTree, typeLength);\n                            } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                                searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                            }\n                        }\n                        return listeners;\n                    }\n                    function growListenerTree(type, listener) {\n                        type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                        for (var i = 0, len = type.length; i + 1 < len; i++) {\n                            if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                                return;\n                            }\n                        }\n                        var tree = this.listenerTree;\n                        var name = type.shift();\n                        while (name) {\n                            if (!tree[name]) {\n                                tree[name] = {};\n                            }\n                            tree = tree[name];\n                            if (type.length === 0) {\n                                if (!tree._listeners) {\n                                    tree._listeners = listener;\n                                } else if (typeof tree._listeners === \"function\") {\n                                    tree._listeners = [ tree._listeners, listener ];\n                                } else if (isArray(tree._listeners)) {\n                                    tree._listeners.push(listener);\n                                    if (!tree._listeners.warned) {\n                                        var m = defaultMaxListeners;\n                                        if (typeof this._events.maxListeners !== \"undefined\") {\n                                            m = this._events.maxListeners;\n                                        }\n                                        if (m > 0 && tree._listeners.length > m) {\n                                            tree._listeners.warned = true;\n                                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                            console.trace();\n                                        }\n                                    }\n                                }\n                                return true;\n                            }\n                            name = type.shift();\n                        }\n                        return true;\n                    }\n                    EventEmitter.prototype.delimiter = \".\";\n                    EventEmitter.prototype.setMaxListeners = function(n) {\n                        this._events || init.call(this);\n                        this._events.maxListeners = n;\n                        if (!this._conf) this._conf = {};\n                        this._conf.maxListeners = n;\n                    };\n                    EventEmitter.prototype.event = \"\";\n                    EventEmitter.prototype.once = function(event, fn) {\n                        this.many(event, 1, fn);\n                        return this;\n                    };\n                    EventEmitter.prototype.many = function(event, ttl, fn) {\n                        var self = this;\n                        if (typeof fn !== \"function\") {\n                            throw new Error(\"many only accepts instances of Function\");\n                        }\n                        function listener() {\n                            if (--ttl === 0) {\n                                self.off(event, listener);\n                            }\n                            fn.apply(this, arguments);\n                        }\n                        listener._origin = fn;\n                        this.on(event, listener);\n                        return self;\n                    };\n                    EventEmitter.prototype.emit = function() {\n                        this._events || init.call(this);\n                        var type = arguments[0];\n                        if (type === \"newListener\" && !this.newListener) {\n                            if (!this._events.newListener) {\n                                return false;\n                            }\n                        }\n                        if (this._all) {\n                            var l = arguments.length;\n                            var args = new Array(l - 1);\n                            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                            for (i = 0, l = this._all.length; i < l; i++) {\n                                this.event = type;\n                                this._all[i].apply(this, args);\n                            }\n                        }\n                        if (type === \"error\") {\n                            if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                                if (arguments[1] instanceof Error) {\n                                    throw arguments[1];\n                                } else {\n                                    throw new Error(\"Uncaught, unspecified 'error' event.\");\n                                }\n                                return false;\n                            }\n                        }\n                        var handler;\n                        if (this.wildcard) {\n                            handler = [];\n                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                            searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                        } else {\n                            handler = this._events[type];\n                        }\n                        if (typeof handler === \"function\") {\n                            this.event = type;\n                            if (arguments.length === 1) {\n                                handler.call(this);\n                            } else if (arguments.length > 1) switch (arguments.length) {\n                              case 2:\n                                handler.call(this, arguments[1]);\n                                break;\n\n                              case 3:\n                                handler.call(this, arguments[1], arguments[2]);\n                                break;\n\n                              default:\n                                var l = arguments.length;\n                                var args = new Array(l - 1);\n                                for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                                handler.apply(this, args);\n                            }\n                            return true;\n                        } else if (handler) {\n                            var l = arguments.length;\n                            var args = new Array(l - 1);\n                            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                            var listeners = handler.slice();\n                            for (var i = 0, l = listeners.length; i < l; i++) {\n                                this.event = type;\n                                listeners[i].apply(this, args);\n                            }\n                            return listeners.length > 0 || !!this._all;\n                        } else {\n                            return !!this._all;\n                        }\n                    };\n                    EventEmitter.prototype.on = function(type, listener) {\n                        if (typeof type === \"function\") {\n                            this.onAny(type);\n                            return this;\n                        }\n                        if (typeof listener !== \"function\") {\n                            throw new Error(\"on only accepts instances of Function\");\n                        }\n                        this._events || init.call(this);\n                        this.emit(\"newListener\", type, listener);\n                        if (this.wildcard) {\n                            growListenerTree.call(this, type, listener);\n                            return this;\n                        }\n                        if (!this._events[type]) {\n                            this._events[type] = listener;\n                        } else if (typeof this._events[type] === \"function\") {\n                            this._events[type] = [ this._events[type], listener ];\n                        } else if (isArray(this._events[type])) {\n                            this._events[type].push(listener);\n                            if (!this._events[type].warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && this._events[type].length > m) {\n                                    this._events[type].warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return this;\n                    };\n                    EventEmitter.prototype.onAny = function(fn) {\n                        if (typeof fn !== \"function\") {\n                            throw new Error(\"onAny only accepts instances of Function\");\n                        }\n                        if (!this._all) {\n                            this._all = [];\n                        }\n                        this._all.push(fn);\n                        return this;\n                    };\n                    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n                    EventEmitter.prototype.off = function(type, listener) {\n                        if (typeof listener !== \"function\") {\n                            throw new Error(\"removeListener only takes instances of Function\");\n                        }\n                        var handlers, leafs = [];\n                        if (this.wildcard) {\n                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                            leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                        } else {\n                            if (!this._events[type]) return this;\n                            handlers = this._events[type];\n                            leafs.push({\n                                _listeners: handlers\n                            });\n                        }\n                        for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                            var leaf = leafs[iLeaf];\n                            handlers = leaf._listeners;\n                            if (isArray(handlers)) {\n                                var position = -1;\n                                for (var i = 0, length = handlers.length; i < length; i++) {\n                                    if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                        position = i;\n                                        break;\n                                    }\n                                }\n                                if (position < 0) {\n                                    continue;\n                                }\n                                if (this.wildcard) {\n                                    leaf._listeners.splice(position, 1);\n                                } else {\n                                    this._events[type].splice(position, 1);\n                                }\n                                if (handlers.length === 0) {\n                                    if (this.wildcard) {\n                                        delete leaf._listeners;\n                                    } else {\n                                        delete this._events[type];\n                                    }\n                                }\n                                return this;\n                            } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                                if (this.wildcard) {\n                                    delete leaf._listeners;\n                                } else {\n                                    delete this._events[type];\n                                }\n                            }\n                        }\n                        return this;\n                    };\n                    EventEmitter.prototype.offAny = function(fn) {\n                        var i = 0, l = 0, fns;\n                        if (fn && this._all && this._all.length > 0) {\n                            fns = this._all;\n                            for (i = 0, l = fns.length; i < l; i++) {\n                                if (fn === fns[i]) {\n                                    fns.splice(i, 1);\n                                    return this;\n                                }\n                            }\n                        } else {\n                            this._all = [];\n                        }\n                        return this;\n                    };\n                    EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n                    EventEmitter.prototype.removeAllListeners = function(type) {\n                        if (arguments.length === 0) {\n                            !this._events || init.call(this);\n                            return this;\n                        }\n                        if (this.wildcard) {\n                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                            var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                            for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                                var leaf = leafs[iLeaf];\n                                leaf._listeners = null;\n                            }\n                        } else {\n                            if (!this._events[type]) return this;\n                            this._events[type] = null;\n                        }\n                        return this;\n                    };\n                    EventEmitter.prototype.listeners = function(type) {\n                        if (this.wildcard) {\n                            var handlers = [];\n                            var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                            searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                            return handlers;\n                        }\n                        this._events || init.call(this);\n                        if (!this._events[type]) this._events[type] = [];\n                        if (!isArray(this._events[type])) {\n                            this._events[type] = [ this._events[type] ];\n                        }\n                        return this._events[type];\n                    };\n                    EventEmitter.prototype.listenersAny = function() {\n                        if (this._all) {\n                            return this._all;\n                        } else {\n                            return [];\n                        }\n                    };\n                    if (true) {\n                        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                            return EventEmitter;\n                        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n                    } else if (typeof exports === \"object\") {\n                        exports.EventEmitter2 = EventEmitter;\n                    } else {\n                        window.EventEmitter2 = EventEmitter;\n                    }\n                }();\n            }, function(module, exports) {\n                module.exports = {\n                    Promise: window[\"Promise\"]\n                };\n            }, function(module, exports) {\n                (function() {\n                    var ResizeSensor = function(element, callback) {\n                        function EventQueue() {\n                            this.q = [];\n                            this.add = function(ev) {\n                                this.q.push(ev);\n                            };\n                            var i, j;\n                            this.call = function() {\n                                for (i = 0, j = this.q.length; i < j; i++) {\n                                    this.q[i].call();\n                                }\n                            };\n                        }\n                        function getComputedStyle(element, prop) {\n                            if (element.currentStyle) {\n                                return element.currentStyle[prop];\n                            } else if (window.getComputedStyle) {\n                                return window.getComputedStyle(element, null).getPropertyValue(prop);\n                            } else {\n                                return element.style[prop];\n                            }\n                        }\n                        function attachResizeEvent(element, resized) {\n                            if (!element.resizedAttached) {\n                                element.resizedAttached = new EventQueue();\n                                element.resizedAttached.add(resized);\n                            } else if (element.resizedAttached) {\n                                element.resizedAttached.add(resized);\n                                return;\n                            }\n                            element.resizeSensor = document.createElement(\"div\");\n                            element.resizeSensor.className = \"resize-sensor\";\n                            var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                            var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                            element.resizeSensor.style.cssText = style;\n                            element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                            element.appendChild(element.resizeSensor);\n                            if (!{\n                                fixed: 1,\n                                absolute: 1\n                            }[getComputedStyle(element, \"position\")]) {\n                                element.style.position = \"relative\";\n                            }\n                            var expand = element.resizeSensor.childNodes[0];\n                            var expandChild = expand.childNodes[0];\n                            var shrink = element.resizeSensor.childNodes[1];\n                            var shrinkChild = shrink.childNodes[0];\n                            var lastWidth, lastHeight;\n                            var reset = function() {\n                                expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                                expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                                expand.scrollLeft = expand.scrollWidth;\n                                expand.scrollTop = expand.scrollHeight;\n                                shrink.scrollLeft = shrink.scrollWidth;\n                                shrink.scrollTop = shrink.scrollHeight;\n                                lastWidth = element.offsetWidth;\n                                lastHeight = element.offsetHeight;\n                            };\n                            reset();\n                            var changed = function() {\n                                if (element.resizedAttached) {\n                                    element.resizedAttached.call();\n                                }\n                            };\n                            var addEvent = function(el, name, cb) {\n                                if (el.attachEvent) {\n                                    el.attachEvent(\"on\" + name, cb);\n                                } else {\n                                    el.addEventListener(name, cb);\n                                }\n                            };\n                            var onScroll = function() {\n                                if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                                    changed();\n                                }\n                                reset();\n                            };\n                            addEvent(expand, \"scroll\", onScroll);\n                            addEvent(shrink, \"scroll\", onScroll);\n                        }\n                        var elementType = Object.prototype.toString.call(element);\n                        var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                        if (isCollectionTyped) {\n                            var i = 0, j = element.length;\n                            for (;i < j; i++) {\n                                attachResizeEvent(element[i], callback);\n                            }\n                        } else {\n                            attachResizeEvent(element, callback);\n                        }\n                        this.detach = function() {\n                            if (isCollectionTyped) {\n                                var i = 0, j = element.length;\n                                for (;i < j; i++) {\n                                    ResizeSensor.detach(element[i]);\n                                }\n                            } else {\n                                ResizeSensor.detach(element);\n                            }\n                        };\n                    };\n                    ResizeSensor.detach = function(element) {\n                        if (element.resizeSensor) {\n                            element.removeChild(element.resizeSensor);\n                            delete element.resizeSensor;\n                            delete element.resizedAttached;\n                        }\n                    };\n                    if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                        module.exports = ResizeSensor;\n                    } else {\n                        window.ResizeSensor = ResizeSensor;\n                    }\n                })();\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var Vector3 = THREE.Vector3;\n                var EventEmmiter_1 = __webpack_require__(15);\n                var Utils_1 = __webpack_require__(16);\n                var Widget_1 = __webpack_require__(17);\n                var TrendsManager_1 = __webpack_require__(18);\n                var Screen_1 = __webpack_require__(21);\n                var AxisMarks_1 = __webpack_require__(22);\n                var interfaces_1 = __webpack_require__(23);\n                var deps_1 = __webpack_require__(3);\n                var CHART_STATE_EVENTS = {\n                    INITIAL_STATE_APPLIED: \"initialStateApplied\",\n                    READY: \"ready\",\n                    DESTROY: \"destroy\",\n                    CHANGE: \"change\",\n                    TREND_CHANGE: \"trendChange\",\n                    TRENDS_CHANGE: \"trendsChange\",\n                    ZOOM: \"zoom\",\n                    RESIZE: \"resize\",\n                    SCROLL: \"scroll\",\n                    SCROLL_STOP: \"scrollStop\",\n                    PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n                };\n                var ChartState = function() {\n                    function ChartState(initialState, widgetsClasses, plugins) {\n                        if (widgetsClasses === void 0) {\n                            widgetsClasses = {};\n                        }\n                        if (plugins === void 0) {\n                            plugins = [];\n                        }\n                        this.data = {\n                            prevState: {},\n                            $el: null,\n                            zoom: 0,\n                            xAxis: {\n                                range: {\n                                    type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                                    from: 0,\n                                    to: 0,\n                                    scroll: 0,\n                                    zoom: 1,\n                                    padding: {\n                                        start: 0,\n                                        end: 5\n                                    },\n                                    margin: {\n                                        start: 0,\n                                        end: 5\n                                    }\n                                },\n                                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                                gridMinSize: 100,\n                                autoScroll: true,\n                                marks: []\n                            },\n                            yAxis: {\n                                range: {\n                                    type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                                    from: 0,\n                                    to: 0,\n                                    zoom: 1,\n                                    padding: {\n                                        start: 5,\n                                        end: 5\n                                    },\n                                    margin: {\n                                        start: 5,\n                                        end: 5\n                                    }\n                                },\n                                dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                                gridMinSize: 50,\n                                marks: []\n                            },\n                            animations: {\n                                enabled: true,\n                                trendChangeSpeed: .5,\n                                trendChangeEase: void 0,\n                                zoomSpeed: .25,\n                                zoomEase: Linear.easeNone,\n                                scrollSpeed: .5,\n                                scrollEase: Linear.easeNone,\n                                autoScrollSpeed: 1,\n                                autoScrollEase: Linear.easeNone\n                            },\n                            autoRender: {\n                                enabled: true,\n                                fps: 0\n                            },\n                            autoResize: true,\n                            renderer: \"WebGLRenderer\",\n                            autoScroll: true,\n                            controls: {\n                                enabled: true\n                            },\n                            cursor: {\n                                dragMode: false,\n                                x: 0,\n                                y: 0\n                            },\n                            backgroundColor: 0,\n                            backgroundOpacity: 1,\n                            showStats: false,\n                            pluginsState: {},\n                            eventEmitterMaxListeners: 20\n                        };\n                        this.widgetsClasses = {};\n                        this.plugins = {};\n                        this.isReady = false;\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n                        this.widgetsClasses = widgetsClasses;\n                        this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                        initialState.trends = this.trendsManager.calculatedOptions;\n                        initialState = this.installPlugins(plugins, initialState);\n                        this.setState(initialState);\n                        this.setState({\n                            computedData: this.getComputedData()\n                        });\n                        this.savePrevState();\n                        this.screen = new Screen_1.Screen(this);\n                        this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                        this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                        this.initListeners();\n                        this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                        this.isReady = true;\n                        this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n                    }\n                    ChartState.prototype.destroy = function() {\n                        this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                        this.ee.removeAllListeners();\n                        this.data = {};\n                    };\n                    ChartState.prototype.onDestroy = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n                    };\n                    ChartState.prototype.onInitialStateApplied = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n                    };\n                    ChartState.prototype.onReady = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n                    };\n                    ChartState.prototype.onChange = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n                    };\n                    ChartState.prototype.onTrendChange = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n                    };\n                    ChartState.prototype.onTrendsChange = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n                    };\n                    ChartState.prototype.onScrollStop = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n                    };\n                    ChartState.prototype.onScroll = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n                    };\n                    ChartState.prototype.onZoom = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n                    };\n                    ChartState.prototype.onResize = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n                    };\n                    ChartState.prototype.onPluginsStateChange = function(cb) {\n                        return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n                    };\n                    ChartState.prototype.getTrend = function(trendName) {\n                        return this.trendsManager.getTrend(trendName);\n                    };\n                    ChartState.prototype.setState = function(newState, eventData, silent) {\n                        if (silent === void 0) {\n                            silent = false;\n                        }\n                        var stateData = this.data;\n                        var changedProps = {};\n                        for (var key in newState) {\n                            if (stateData[key] !== newState[key]) {\n                                changedProps[key] = newState[key];\n                            }\n                        }\n                        this.savePrevState(changedProps);\n                        var trendsData = {};\n                        if (newState.trends) for (var trendName in newState.trends) {\n                            var trendOptions = newState.trends[trendName];\n                            if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                            delete trendOptions.data;\n                        }\n                        var newStateContainsData = Object.keys(trendsData).length > 0;\n                        this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n                        if (newStateContainsData) for (var trendName in trendsData) {\n                            this.data.trends[trendName].data = trendsData[trendName];\n                        }\n                        if (silent) return;\n                        var recalculateResult = this.recalculateState(changedProps);\n                        changedProps = recalculateResult.changedProps;\n                        this.emitChangedStateEvents(changedProps, eventData);\n                    };\n                    ChartState.prototype.recalculateState = function(changedProps) {\n                        var data = this.data;\n                        var patch = {};\n                        var actualData = Utils_1.Utils.deepMerge({}, data);\n                        if (changedProps.widgets || !data.widgets) {\n                            patch.widgets = {};\n                            var widgetsOptions = data.widgets || {};\n                            for (var widgetName in this.widgetsClasses) {\n                                var WidgetClass = this.widgetsClasses[widgetName];\n                                var userOptions = widgetsOptions[widgetName] || {};\n                                var defaultOptions = WidgetClass.getDefaultOptions() || Widget_1.ChartWidget.getDefaultOptions();\n                                patch.widgets[widgetName] = Utils_1.Utils.deepMerge(defaultOptions, userOptions);\n                            }\n                        }\n                        var cursorOptions = changedProps.cursor;\n                        var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                        if (isMouseDrag) {\n                            var oldX = data.prevState.cursor.x;\n                            var currentX = cursorOptions.x;\n                            var currentScroll = data.xAxis.range.scroll;\n                            var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                            patch.xAxis = {\n                                range: {\n                                    scroll: currentScroll + deltaXVal\n                                }\n                            };\n                            actualData = Utils_1.Utils.deepMerge(actualData, {\n                                xAxis: patch.xAxis\n                            });\n                        }\n                        var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                        var scrollXChanged = false;\n                        var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n                        if (needToRecalculateXAxis) {\n                            var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                            if (xAxisPatch) {\n                                scrollXChanged = true;\n                                patch = Utils_1.Utils.deepMerge(patch, {\n                                    xAxis: xAxisPatch\n                                });\n                                actualData = Utils_1.Utils.deepMerge(actualData, {\n                                    xAxis: xAxisPatch\n                                });\n                            }\n                        }\n                        var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n                        if (needToRecalculateYAxis) {\n                            var yAxisPatch = this.recalculateYAxis(actualData);\n                            if (yAxisPatch) {\n                                patch = Utils_1.Utils.deepMerge(patch, {\n                                    yAxis: yAxisPatch\n                                });\n                                actualData = Utils_1.Utils.deepMerge(actualData, {\n                                    yAxis: yAxisPatch\n                                });\n                            }\n                        }\n                        this.savePrevState(patch);\n                        var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                        patch.computedData = this.getComputedData(allChangedProps);\n                        this.savePrevState(patch);\n                        this.data = Utils_1.Utils.deepMerge(this.data, patch);\n                        return {\n                            changedProps: allChangedProps,\n                            patch: patch\n                        };\n                    };\n                    ChartState.prototype.getComputedData = function(changedProps) {\n                        var computeAll = !changedProps;\n                        var computedData = {};\n                        if (computeAll || changedProps.trends && this.trendsManager) {\n                            computedData.trends = {\n                                maxXVal: this.trendsManager.getEndXVal(),\n                                minXVal: this.trendsManager.getStartXVal()\n                            };\n                        }\n                        return computedData;\n                    };\n                    ChartState.prototype.savePrevState = function(changedProps) {\n                        if (!changedProps) changedProps = this.data;\n                        var prevState = this.data.prevState;\n                        Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n                    };\n                    ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                        var prevState = this.data.prevState;\n                        this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                        for (var key in changedProps) {\n                            this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                        }\n                        if (!this.isReady) return;\n                        var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                        scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                        var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                        scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                        var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                        zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                        var resizeEventNeeded = changedProps.width || changedProps.height;\n                        resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                        var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                        pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n                    };\n                    ChartState.prototype.installPlugins = function(plugins, initialState) {\n                        var _this = this;\n                        initialState.pluginsState = {};\n                        plugins.forEach(function(plugin) {\n                            var PluginClass = plugin.constructor;\n                            var pluginName = PluginClass.NAME;\n                            PluginClass.pluginWidgets.forEach(function(PluginWidget) {\n                                return _this.widgetsClasses[PluginWidget.widgetName] = PluginWidget;\n                            });\n                            initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                            _this.plugins[pluginName] = plugin;\n                            plugin.setupChartState(_this);\n                        });\n                        return initialState;\n                    };\n                    ChartState.prototype.getPlugin = function(pluginName) {\n                        return this.plugins[pluginName];\n                    };\n                    ChartState.prototype.initListeners = function() {\n                        var _this = this;\n                        this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                            _this.handleTrendsChange(changedTrends, newData);\n                        });\n                    };\n                    ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n                        for (var trendName in changedTrends) {\n                            this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                        }\n                    };\n                    ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n                        var axisRange = actualData.xAxis.range;\n                        var patch = {\n                            range: {}\n                        };\n                        var isInitialize = axisRange.zeroVal == void 0;\n                        var zeroVal, scaleFactor;\n                        var zoom = axisRange.zoom;\n                        if (axisRange.isMirrorMode) {\n                            Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                        }\n                        if (isInitialize) {\n                            zeroVal = axisRange.from;\n                            scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                            patch = {\n                                range: {\n                                    zeroVal: zeroVal,\n                                    scaleFactor: scaleFactor\n                                }\n                            };\n                        } else {\n                            zeroVal = axisRange.zeroVal;\n                            scaleFactor = axisRange.scaleFactor;\n                            if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                                if (changedProps.xAxis.range.zoom) {\n                                    Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                                }\n                                var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                                patch.range.scroll = axisRange.from - zeroVal;\n                                patch.range.zoom = currentScaleFactor / scaleFactor;\n                                return patch;\n                            }\n                        }\n                        do {\n                            var from = zeroVal + axisRange.scroll;\n                            var to = from + actualData.width / (scaleFactor * zoom);\n                            var rangeLength = to - from;\n                            var needToRecalculateZoom = false;\n                            var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                            var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                            needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                            if (needToRecalculateZoom) {\n                                var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                                var zoom = zoom * fixScale;\n                                patch.range.zoom = zoom;\n                            }\n                        } while (needToRecalculateZoom);\n                        patch.range.from = from;\n                        patch.range.to = to;\n                        return patch;\n                    };\n                    ChartState.prototype.recalculateYAxis = function(actualData) {\n                        var patch = {\n                            range: {}\n                        };\n                        var yAxisRange = actualData.yAxis.range;\n                        var isInitialize = yAxisRange.scaleFactor == void 0;\n                        var trends = this.trendsManager;\n                        var trendsEndXVal = trends.getEndXVal();\n                        var trendsStartXVal = trends.getStartXVal();\n                        var xRange = actualData.xAxis.range;\n                        var xFrom = xRange.from, xTo = xRange.to;\n                        var xRangeLength = xTo - xFrom;\n                        var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                        if (xTo > trendsEndXVal) {\n                            xTo = trendsEndXVal;\n                            xFrom = xTo - xRangeLength;\n                        } else if (xFrom < trendsStartXVal) {\n                            xFrom = trendsStartXVal;\n                            xTo = xFrom + xRangeLength;\n                        }\n                        var maxY = trends.getMaxYVal(xFrom, xTo);\n                        var minY = trends.getMinYVal(xFrom, xTo);\n                        var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                        if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                            if (trendLastY > maxY) maxY = trendLastY;\n                            if (trendLastY < minY) minY = trendLastY;\n                        }\n                        if (yAxisRange.isMirrorMode) {\n                            if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                            var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                            var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                            var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                            maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                            minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                        }\n                        var margin = yAxisRange.margin;\n                        var padding = {\n                            start: yAxisRange.padding.start + margin.start,\n                            end: yAxisRange.padding.end + margin.end\n                        };\n                        if (padding.end + padding.start >= actualData.height) {\n                            Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n                        }\n                        var rangeLength = maxY - minY;\n                        var paddingTopInPercents = padding.end / actualData.height;\n                        var paddingBottomInPercents = padding.start / actualData.height;\n                        var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                        var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                        var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                        var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                        if (isInitialize) {\n                            zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                            scaleFactor = actualData.height / (toVal - fromVal);\n                            patch = {\n                                range: {\n                                    zeroVal: zeroVal,\n                                    scaleFactor: scaleFactor\n                                }\n                            };\n                            needToZoom = true;\n                        } else {\n                            scaleFactor = yAxisRange.scaleFactor;\n                            zeroVal = yAxisRange.zeroVal;\n                            var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                            var minScreenY = Math.round(this.getScreenYByValue(minY));\n                            needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                        }\n                        if (!needToZoom) return null;\n                        scroll = fromVal - zeroVal;\n                        zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                        var currentAxisRange = this.data.yAxis.range;\n                        if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                        if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                        if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                        if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                        return patch;\n                    };\n                    ChartState.prototype.zoom = function(zoomValue, origin) {\n                        var _this = this;\n                        if (origin === void 0) {\n                            origin = .5;\n                        }\n                        var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                        var newZoom = zoom * zoomValue;\n                        var currentRange = this.data.width / (scaleFactor * zoom);\n                        var nextRange = this.data.width / (scaleFactor * newZoom);\n                        var newScroll = scroll + (currentRange - nextRange) * origin;\n                        this.setState({\n                            xAxis: {\n                                range: {\n                                    zoom: newZoom,\n                                    scroll: newScroll\n                                }\n                            }\n                        });\n                        return new deps_1.Promise(function(resolve) {\n                            var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n                            setTimeout(resolve, animationTime * 1e3);\n                        });\n                    };\n                    ChartState.prototype.zoomToRange = function(range, origin) {\n                        var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                        var currentRange = this.data.width / (scaleFactor * zoom);\n                        return this.zoom(currentRange / range, origin);\n                    };\n                    ChartState.prototype.scrollToEnd = function() {\n                        var _this = this;\n                        var state = this.data;\n                        var endXVal = this.trendsManager.getEndXVal();\n                        var range = state.xAxis.range;\n                        var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                        this.setState({\n                            xAxis: {\n                                range: {\n                                    scroll: scroll\n                                }\n                            }\n                        });\n                        return new deps_1.Promise(function(resolve) {\n                            var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n                            setTimeout(resolve, animationTime * 1e3);\n                        });\n                    };\n                    ChartState.prototype.getPointOnXAxis = function(xVal) {\n                        var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                        return (xVal - zeroVal) * scaleFactor * zoom;\n                    };\n                    ChartState.prototype.getPointOnYAxis = function(yVal) {\n                        var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                        return (yVal - zeroVal) * scaleFactor * zoom;\n                    };\n                    ChartState.prototype.getValueOnXAxis = function(x) {\n                        return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n                    };\n                    ChartState.prototype.valueToPxByXAxis = function(xVal) {\n                        return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n                    };\n                    ChartState.prototype.valueToPxByYAxis = function(yVal) {\n                        return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n                    };\n                    ChartState.prototype.pxToValueByXAxis = function(xVal) {\n                        return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n                    };\n                    ChartState.prototype.pxToValueByYAxis = function(yVal) {\n                        return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n                    };\n                    ChartState.prototype.getValueByScreenX = function(x) {\n                        var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                        return zeroVal + scroll + this.pxToValueByXAxis(x);\n                    };\n                    ChartState.prototype.getValueByScreenY = function(y) {\n                        var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                        return zeroVal + scroll + this.pxToValueByYAxis(y);\n                    };\n                    ChartState.prototype.getScreenXByValue = function(xVal) {\n                        var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                        return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n                    };\n                    ChartState.prototype.getScreenYByValue = function(yVal) {\n                        var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                        return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n                    };\n                    ChartState.prototype.getScreenXByPoint = function(xVal) {\n                        return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n                    };\n                    ChartState.prototype.getPointByScreenX = function(screenX) {\n                        return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n                    };\n                    ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n                        return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n                    };\n                    ChartState.prototype.getScreenLeftVal = function() {\n                        return this.getValueByScreenX(0);\n                    };\n                    ChartState.prototype.getScreenRightVal = function() {\n                        return this.getValueByScreenX(this.data.width);\n                    };\n                    ChartState.prototype.getPaddingRight = function() {\n                        return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n                    };\n                    return ChartState;\n                }();\n                exports.ChartState = ChartState;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var deps_1 = __webpack_require__(3);\n                var EventEmitter = function() {\n                    function EventEmitter() {\n                        this.ee = new deps_1.EE2();\n                    }\n                    EventEmitter.prototype.emit = function(eventName) {\n                        var args = [];\n                        for (var _i = 1; _i < arguments.length; _i++) {\n                            args[_i - 1] = arguments[_i];\n                        }\n                        (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                        var _a;\n                    };\n                    EventEmitter.prototype.on = function(eventName, callback) {\n                        return this.ee.on(eventName, callback);\n                    };\n                    EventEmitter.prototype.off = function(eventName, callback) {\n                        return this.ee.off(eventName, callback);\n                    };\n                    EventEmitter.prototype.subscribe = function(eventName, callback) {\n                        var _this = this;\n                        this.on(eventName, callback);\n                        return function() {\n                            return _this.off(eventName, callback);\n                        };\n                    };\n                    EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                        this.ee.setMaxListeners(listenersCount);\n                    };\n                    EventEmitter.prototype.removeAllListeners = function(eventName) {\n                        this.ee.removeAllListeners(eventName);\n                    };\n                    return EventEmitter;\n                }();\n                exports.EventEmitter = EventEmitter;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var deps_1 = __webpack_require__(3);\n                function deepmerge(target, src, mergeArrays) {\n                    if (mergeArrays === void 0) {\n                        mergeArrays = true;\n                    }\n                    var array = Array.isArray(src);\n                    var dst = array && [] || {};\n                    if (array) {\n                        target = target || [];\n                        if (mergeArrays) {\n                            dst = dst.concat(target);\n                        }\n                        src.forEach(function(e, i) {\n                            if (typeof dst[i] === \"undefined\") {\n                                dst[i] = e;\n                            } else if (typeof e === \"object\") {\n                                dst[i] = deepmerge(target[i], e, mergeArrays);\n                            } else {\n                                if (target.indexOf(e) === -1) {\n                                    dst.push(e);\n                                }\n                            }\n                        });\n                    } else {\n                        if (target && typeof target === \"object\") {\n                            Object.keys(target).forEach(function(key) {\n                                dst[key] = target[key];\n                            });\n                        }\n                        Object.keys(src).forEach(function(key) {\n                            if (typeof src[key] !== \"object\" || !src[key]) {\n                                dst[key] = src[key];\n                            } else {\n                                if (!target[key]) {\n                                    dst[key] = src[key];\n                                } else {\n                                    dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                                }\n                            }\n                        });\n                    }\n                    return dst;\n                }\n                var Utils = function() {\n                    function Utils() {}\n                    Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                        return deepmerge(obj1, obj2, mergeArrays);\n                    };\n                    Utils.deepCopy = function(obj) {\n                        return JSON.parse(JSON.stringify(obj));\n                    };\n                    Utils.toFixed = function(num, digitsCount) {\n                        var maxDigits = 15;\n                        var result = \"\";\n                        var intVal = Math.floor(num);\n                        var intStr = intVal.toString();\n                        var lengthDiff = digitsCount - intStr.length;\n                        if (lengthDiff > 0) {\n                            result = \"0\".repeat(lengthDiff) + intStr;\n                        } else {\n                            result = intStr;\n                        }\n                        var afterPointDigitsCount = maxDigits - intStr.length;\n                        var afterPointStr = num.toString().split(\".\")[1];\n                        if (afterPointStr) {\n                            result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                        }\n                        return result;\n                    };\n                    Utils.bindEvent = function() {};\n                    Utils.createTexture = function(width, height, fn) {\n                        var canvas = document.createElement(\"canvas\");\n                        canvas.width = width;\n                        canvas.height = height;\n                        var ctx = canvas.getContext(\"2d\");\n                        fn(ctx);\n                        var texture = new THREE.Texture(canvas);\n                        texture.needsUpdate = true;\n                        return texture;\n                    };\n                    Utils.createPixelPerfectTexture = function(width, height, fn) {\n                        var texture = this.createTexture(width, height, fn);\n                        texture.minFilter = THREE.NearestFilter;\n                        return texture;\n                    };\n                    Utils.error = function(msg) {\n                        console.error(\"Chart error: \" + msg);\n                        throw \"Chart: \" + msg;\n                    };\n                    Utils.warn = function(msg) {\n                        console.warn(\"Chart warning: \" + msg);\n                    };\n                    Utils.getUid = function() {\n                        return this.currentId++;\n                    };\n                    Utils.getDistance = function(num1, num2) {\n                        return Math.max(num1, num2) - Math.min(num1, num2);\n                    };\n                    Utils.binarySearchClosestInd = function(arr, num, key) {\n                        var mid;\n                        var lo = 0;\n                        var hi = arr.length - 1;\n                        while (hi - lo > 1) {\n                            mid = Math.floor((lo + hi) / 2);\n                            if (arr[mid][key] < num) {\n                                lo = mid;\n                            } else {\n                                hi = mid;\n                            }\n                        }\n                        if (num - arr[lo][key] <= arr[hi][key] - num) {\n                            return lo;\n                        }\n                        return hi;\n                    };\n                    Utils.binarySearchClosest = function(arr, num, key) {\n                        var ind = this.binarySearchClosestInd(arr, num, key);\n                        return arr[ind];\n                    };\n                    Utils.rectsIntersect = function(r1, r2) {\n                        var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                        var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                        var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                        return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n                    };\n                    /**!\r\n\t\t     * @preserve $.parseColor\r\n\t\t     * Copyright 2011 THEtheChad Elliott\r\n\t\t     * Released under the MIT and GPL licenses.\r\n\t\t     */\n                    Utils.parseColor = function(color) {\n                        var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                        if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by $.parseColor\");\n                        isNaN(cache[3]) && (cache[3] = 1);\n                        return cache;\n                    };\n                    Utils.getHexColor = function(str) {\n                        var rgb = this.parseColor(str);\n                        return (rgb[0] << 8 * 2) + (rgb[1] << 8) + rgb[2];\n                    };\n                    Utils.throttle = function(func, ms) {\n                        var isThrottled = false, savedArgs, savedThis;\n                        function wrapper() {\n                            if (isThrottled) {\n                                savedArgs = arguments;\n                                savedThis = this;\n                                return;\n                            }\n                            func.apply(this, arguments);\n                            isThrottled = true;\n                            setTimeout(function() {\n                                isThrottled = false;\n                                if (savedArgs) {\n                                    wrapper.apply(savedThis, savedArgs);\n                                    savedArgs = savedThis = null;\n                                }\n                            }, ms);\n                        }\n                        return wrapper;\n                    };\n                    Utils.msToTimeString = function(timestamp) {\n                        var h = Math.floor(timestamp / 36e4);\n                        var m = Math.floor(timestamp / 6e4);\n                        var s = Math.floor(timestamp / 1e3);\n                        return h + \":\" + m + \":\" + s;\n                    };\n                    Utils.getRandomItem = function(arr) {\n                        var ind = Math.floor(Math.random() * arr.length);\n                        return arr[ind];\n                    };\n                    Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                        if (excludeProps === void 0) {\n                            excludeProps = [];\n                        }\n                        for (var key in props) {\n                            if (excludeProps.indexOf(key) !== -1) continue;\n                            if (srcObject[key] == void 0) continue;\n                            if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                                this.copyProps(srcObject[key], dstObject[key], props[key]);\n                            } else {\n                                dstObject[key] = this.deepCopy(srcObject[key]);\n                            }\n                        }\n                    };\n                    Utils.currentId = 1;\n                    return Utils;\n                }();\n                exports.Utils = Utils;\n            }, function(module, exports) {\n                \"use strict\";\n                var ChartWidget = function() {\n                    function ChartWidget(chartState) {\n                        this.unsubscribers = [];\n                        this.chartState = chartState;\n                        this.bindEvents();\n                    }\n                    ChartWidget.prototype.bindEvents = function() {};\n                    ChartWidget.prototype.bindEvent = function() {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i - 0] = arguments[_i];\n                        }\n                        var unsubscribers = [];\n                        if (!Array.isArray(args[0])) {\n                            unsubscribers.push(args[0]);\n                        } else {\n                            unsubscribers.push.apply(unsubscribers, args);\n                        }\n                        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                        var _a;\n                    };\n                    ChartWidget.prototype.unbindEvents = function() {\n                        this.unsubscribers.forEach(function(unsubscriber) {\n                            return unsubscriber();\n                        });\n                        this.unsubscribers.length = 0;\n                    };\n                    ChartWidget.getDefaultOptions = function() {\n                        return {\n                            enabled: true\n                        };\n                    };\n                    ChartWidget.widgetName = \"\";\n                    return ChartWidget;\n                }();\n                exports.ChartWidget = ChartWidget;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var Trend_1 = __webpack_require__(19);\n                var EventEmmiter_1 = __webpack_require__(15);\n                var EVENTS = {\n                    SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n                };\n                var TrendsManager = function() {\n                    function TrendsManager(state, initialState) {\n                        this.trends = {};\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.chartState = state;\n                        var trendsCalculatedOptions = {};\n                        for (var trendName in initialState.trends) {\n                            var trend = this.createTrend(state, trendName, initialState);\n                            trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                        }\n                        this.calculatedOptions = trendsCalculatedOptions;\n                        this.bindEvents();\n                    }\n                    TrendsManager.prototype.getTrend = function(trendName) {\n                        return this.trends[trendName];\n                    };\n                    TrendsManager.prototype.getEnabledTrends = function() {\n                        var enabledTrends = [];\n                        var allTrends = this.trends;\n                        for (var trendName in allTrends) {\n                            var trend = allTrends[trendName];\n                            trend.getOptions().enabled && enabledTrends.push(trend);\n                        }\n                        return enabledTrends;\n                    };\n                    TrendsManager.prototype.getStartXVal = function() {\n                        var trends = this.getEnabledTrends();\n                        return trends[0].getData()[0].xVal;\n                    };\n                    TrendsManager.prototype.getEndXVal = function() {\n                        var trends = this.getEnabledTrends();\n                        var firstTrendData = trends[0].getData();\n                        return firstTrendData[firstTrendData.length - 1].xVal;\n                    };\n                    TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                        var trends = this.getEnabledTrends();\n                        var compareFn;\n                        var result;\n                        if (extremumIsMax) {\n                            result = -Infinity;\n                            compareFn = Math.max;\n                        } else {\n                            result = Infinity;\n                            compareFn = Math.min;\n                        }\n                        for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                            var trend = trends_1[_i];\n                            var trendData = trend.getData(fromX, toX);\n                            var trendYValues = trendData.map(function(dataItem) {\n                                return dataItem.yVal;\n                            });\n                            result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                        }\n                        if (result == Infinity || result == -Infinity) result = NaN;\n                        return result;\n                    };\n                    TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                        return this.getExtremumYVal(true, fromX, toX);\n                    };\n                    TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                        return this.getExtremumYVal(false, fromX, toX);\n                    };\n                    TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                        return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n                    };\n                    TrendsManager.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.chartState.onInitialStateApplied(function() {\n                            return _this.onInitialStateAppliedHandler();\n                        });\n                    };\n                    TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                        var _this = this;\n                        var _loop_1 = function(trendName) {\n                            this_1.trends[trendName].segments.onRebuild(function() {\n                                return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                            });\n                        };\n                        var this_1 = this;\n                        for (var trendName in this.trends) {\n                            _loop_1(trendName);\n                        }\n                    };\n                    TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                        var trend = new Trend_1.Trend(state, trendName, initialState);\n                        this.trends[trendName] = trend;\n                        return trend;\n                    };\n                    return TrendsManager;\n                }();\n                exports.TrendsManager = TrendsManager;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var Utils_1 = __webpack_require__(16);\n                var TrendSegments_1 = __webpack_require__(20);\n                var EventEmmiter_1 = __webpack_require__(15);\n                var deps_1 = __webpack_require__(3);\n                var EVENTS = {\n                    CHANGE: \"Change\",\n                    PREPEND_REQUEST: \"prependRequest\"\n                };\n                (function(TREND_TYPE) {\n                    TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n                    TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n                })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n                var TREND_TYPE = exports.TREND_TYPE;\n                var DEFAULT_OPTIONS = {\n                    enabled: true,\n                    type: TREND_TYPE.LINE,\n                    data: [],\n                    maxSegmentLength: 1e3,\n                    lineWidth: 2,\n                    lineColor: 16777215,\n                    hasGradient: true,\n                    hasBeacon: false,\n                    settingsForTypes: {\n                        CANDLE: {\n                            minSegmentLengthInPx: 20,\n                            maxSegmentLengthInPx: 40\n                        },\n                        LINE: {\n                            minSegmentLengthInPx: 2,\n                            maxSegmentLengthInPx: 10\n                        }\n                    }\n                };\n                var Trend = function() {\n                    function Trend(chartState, trendName, initialState) {\n                        this.minXVal = Infinity;\n                        this.minYVal = Infinity;\n                        this.maxXVal = -Infinity;\n                        this.maxYVal = -Infinity;\n                        var options = initialState.trends[trendName];\n                        this.name = trendName;\n                        this.chartState = chartState;\n                        this.calculatedOptions = Utils_1.Utils.deepMerge(DEFAULT_OPTIONS, options);\n                        this.calculatedOptions.name = trendName;\n                        if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                        this.calculatedOptions.dataset = [];\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.bindEvents();\n                    }\n                    Trend.prototype.onInitialStateApplied = function() {\n                        this.segments = new TrendSegments_1.TrendSegments(this.chartState, this);\n                    };\n                    Trend.prototype.bindEvents = function() {\n                        var _this = this;\n                        var chartState = this.chartState;\n                        chartState.onInitialStateApplied(function() {\n                            return _this.onInitialStateApplied();\n                        });\n                        chartState.onScrollStop(function() {\n                            return _this.checkForPrependRequest();\n                        });\n                        chartState.onZoom(function() {\n                            return _this.checkForPrependRequest();\n                        });\n                        chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                            return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                        });\n                        chartState.onDestroy(function() {\n                            return _this.ee.removeAllListeners();\n                        });\n                    };\n                    Trend.prototype.getCalculatedOptions = function() {\n                        return this.calculatedOptions;\n                    };\n                    Trend.prototype.appendData = function(rawData) {\n                        var options = this.getOptions();\n                        var newData = Trend.prepareData(rawData, this.getData());\n                        var updatedTrendData = options.data.concat(newData);\n                        this.changeData(updatedTrendData, newData);\n                    };\n                    Trend.prototype.prependData = function(rawData) {\n                        var options = this.getOptions();\n                        var newData = Trend.prepareData(rawData, this.getData(), true);\n                        var updatedTrendData = newData.concat(options.data);\n                        this.changeData(updatedTrendData, newData);\n                    };\n                    Trend.prototype.changeData = function(allData, newData) {\n                        for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                            var item = newData_1[_i];\n                            if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                            if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                            if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                            if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                        }\n                        var options = this.getOptions();\n                        var statePatch = {\n                            trends: (_a = {}, _a[options.name] = {\n                                data: allData\n                            }, _a)\n                        };\n                        this.chartState.setState(statePatch, newData);\n                        var _a;\n                    };\n                    Trend.prototype.getData = function(fromX, toX) {\n                        var data = this.getOptions().data;\n                        if (fromX == void 0 && toX == void 0) return data;\n                        fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                        toX = toX !== void 0 ? toX : data[data.length].xVal;\n                        var filteredData = [];\n                        for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                            var item = data_1[_i];\n                            if (item.xVal < fromX) continue;\n                            if (item.xVal > toX) break;\n                            filteredData.push(item);\n                        }\n                        return filteredData;\n                    };\n                    Trend.prototype.getFirstItem = function() {\n                        return this.getOptions().data[0];\n                    };\n                    Trend.prototype.getLastItem = function() {\n                        var data = this.getOptions().data;\n                        return data[data.length - 1];\n                    };\n                    Trend.prototype.getOptions = function() {\n                        return this.chartState.data.trends[this.name];\n                    };\n                    Trend.prototype.setOptions = function(options) {\n                        this.chartState.setState({\n                            trends: (_a = {}, _a[this.name] = options, _a)\n                        });\n                        var _a;\n                    };\n                    Trend.prototype.onPrependRequest = function(cb) {\n                        var _this = this;\n                        this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                        return function() {\n                            _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                        };\n                    };\n                    Trend.prototype.onChange = function(cb) {\n                        var _this = this;\n                        this.ee.on(EVENTS.CHANGE, cb);\n                        return function() {\n                            _this.ee.off(EVENTS.CHANGE, cb);\n                        };\n                    };\n                    Trend.prototype.onDataChange = function(cb) {\n                        var _this = this;\n                        var onChangeCb = function(changedOptions, newData) {\n                            if (newData) cb(newData);\n                        };\n                        this.ee.on(EVENTS.CHANGE, onChangeCb);\n                        return function() {\n                            _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                        };\n                    };\n                    Trend.prototype.checkForPrependRequest = function() {\n                        var _this = this;\n                        if (this.prependRequest) return;\n                        var chartState = this.chartState;\n                        var minXVal = chartState.data.computedData.trends.minXVal;\n                        var minScreenX = chartState.getScreenXByValue(minXVal);\n                        var needToRequest = minScreenX > 0;\n                        var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                        var requestedDataLength = to - from;\n                        if (!needToRequest) return;\n                        this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                            _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                        });\n                        this.prependRequest.then(function(newData) {\n                            _this.prependData(newData);\n                            _this.prependRequest = null;\n                        }, function() {\n                            _this.prependRequest = null;\n                        });\n                    };\n                    Trend.prepareData = function(newData, currentData, isPrepend) {\n                        if (isPrepend === void 0) {\n                            isPrepend = false;\n                        }\n                        var data = [];\n                        if (typeof newData[0] == \"number\") {\n                            currentData = currentData || [];\n                            var initialItem = void 0;\n                            var xVal = void 0;\n                            if (isPrepend) {\n                                initialItem = currentData[0];\n                                xVal = initialItem.xVal - newData.length;\n                            } else {\n                                initialItem = currentData[currentData.length - 1];\n                                xVal = initialItem ? initialItem.xVal + 1 : 0;\n                            }\n                            for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                                var yVal = _a[_i];\n                                data.push({\n                                    xVal: xVal,\n                                    yVal: yVal,\n                                    id: Utils_1.Utils.getUid()\n                                });\n                                xVal++;\n                            }\n                        } else {\n                            data = newData;\n                        }\n                        return data;\n                    };\n                    return Trend;\n                }();\n                exports.Trend = Trend;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var EventEmmiter_1 = __webpack_require__(15);\n                var Vector3 = THREE.Vector3;\n                var Trend_1 = __webpack_require__(19);\n                var Utils_1 = __webpack_require__(16);\n                var MAX_ANIMATED_SEGMENTS = 100;\n                var EVENTS = {\n                    REBUILD: \"rebuild\",\n                    DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n                    ANIMATION_FRAME: \"animationFrame\"\n                };\n                var TrendSegments = function() {\n                    function TrendSegments(chartState, trend) {\n                        this.segmentsById = {};\n                        this.segments = [];\n                        this.animatedSegmentsIds = [];\n                        this.segmentsLength = 0;\n                        this.animatedSegmentsForAppend = [];\n                        this.animatedSegmentsForPrepend = [];\n                        this.nextEmptyId = 0;\n                        this.startSegmentId = 0;\n                        this.endSegmentId = 0;\n                        this.chartState = chartState;\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.trend = trend;\n                        this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                        this.tryToRebuildSegments();\n                        this.bindEvents();\n                    }\n                    TrendSegments.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.trend.onChange(function(changedOptions, newData) {\n                            return _this.onTrendChangeHandler(changedOptions, newData);\n                        });\n                        this.chartState.onZoom(function() {\n                            return _this.onZoomHandler();\n                        });\n                        this.chartState.onScroll(function() {\n                            return _this.recalculateDisplayedRange();\n                        });\n                        this.chartState.onDestroy(function() {\n                            return _this.onDestroyHandler();\n                        });\n                    };\n                    TrendSegments.prototype.onDestroyHandler = function() {\n                        this.ee.removeAllListeners();\n                        this.appendAnimation && this.appendAnimation.kill();\n                        this.prependAnimation && this.prependAnimation.kill();\n                    };\n                    TrendSegments.prototype.onZoomHandler = function() {\n                        var segmentsRebuilded = this.tryToRebuildSegments();\n                        if (!segmentsRebuilded) {\n                            this.recalculateDisplayedRange();\n                        }\n                    };\n                    TrendSegments.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                        var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                        if (needToRebuildSegments) {\n                            this.tryToRebuildSegments(true);\n                            return;\n                        }\n                        if (!newData) return;\n                        var data = this.trend.getData();\n                        var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                        isAppend ? this.appendData(newData) : this.prependData(newData);\n                        this.recalculateDisplayedRange();\n                    };\n                    TrendSegments.prototype.getEndSegment = function() {\n                        return this.segmentsById[this.endSegmentId];\n                    };\n                    TrendSegments.prototype.getStartSegment = function() {\n                        return this.segmentsById[this.startSegmentId];\n                    };\n                    TrendSegments.prototype.tryToRebuildSegments = function(force) {\n                        if (force === void 0) {\n                            force = false;\n                        }\n                        var options = this.trend.getOptions();\n                        var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                        var trendTypesSettings = options.settingsForTypes;\n                        var trendTypeSettings = trendTypesSettings[trendTypeName];\n                        var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                        var needToRebuild = this.segments.length === 0 || force;\n                        var segmentLength = this.maxSegmentLength;\n                        var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                        var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                        if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                            needToRebuild = true;\n                            segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                        } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                            needToRebuild = true;\n                            segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                        }\n                        if (!needToRebuild) return false;\n                        this.maxSegmentLength = segmentLength;\n                        this.segmentsById = {};\n                        this.segments = [];\n                        this.nextEmptyId = 0;\n                        this.startSegmentId = 0;\n                        this.endSegmentId = 0;\n                        this.segmentsLength = 0;\n                        this.stopAllAnimations();\n                        this.appendData(null, true);\n                        this.recalculateDisplayedRange(true);\n                        this.ee.emit(EVENTS.REBUILD);\n                    };\n                    TrendSegments.prototype.stopAllAnimations = function() {\n                        this.animatedSegmentsIds = [];\n                        this.animatedSegmentsForAppend = [];\n                        this.animatedSegmentsForAppend = [];\n                        if (this.prependAnimation) this.prependAnimation.kill();\n                        if (this.appendAnimation) this.appendAnimation.kill();\n                    };\n                    TrendSegments.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                        if (segmentsAreRebuilded === void 0) {\n                            segmentsAreRebuilded = false;\n                        }\n                        var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                        var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                        var displayedRange = to - from;\n                        this.firstDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, from - displayedRange, \"startXVal\");\n                        this.lastDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, to + displayedRange, \"endXVal\");\n                        if (segmentsAreRebuilded) return;\n                        var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                        if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n                    };\n                    TrendSegments.prototype.getSegmentsForXValues = function(values) {\n                        var valueInd = 0;\n                        var value = values[valueInd];\n                        var lastValueInd = values.length - 1;\n                        var results = [];\n                        var segment = this.getStartSegment();\n                        if (!segment.hasValue) return [];\n                        while (segment) {\n                            while (value < segment.startXVal) {\n                                results.push(void 0);\n                                value = values[++valueInd];\n                            }\n                            while (value > segment.endXVal) {\n                                segment = segment.getNext();\n                                if (!segment) break;\n                            }\n                            var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                            if (valueInPoint) {\n                                results.push(segment);\n                                value = values[++valueInd];\n                            }\n                            if (valueInd > lastValueInd) break;\n                        }\n                        return results;\n                    };\n                    TrendSegments.prototype.onAnimationFrame = function(cb) {\n                        return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n                    };\n                    TrendSegments.prototype.onRebuild = function(cb) {\n                        return this.ee.subscribe(EVENTS.REBUILD, cb);\n                    };\n                    TrendSegments.prototype.onDisplayedRangeChanged = function(cb) {\n                        return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n                    };\n                    TrendSegments.prototype.allocateNextSegment = function() {\n                        var id = this.nextEmptyId++;\n                        var segment = new TrendSegment(this, id);\n                        var prevSegment = this.segmentsById[this.endSegmentId];\n                        if (prevSegment && prevSegment.hasValue) {\n                            prevSegment.nextId = id;\n                            segment.prevId = prevSegment.id;\n                        }\n                        this.endSegmentId = id;\n                        this.segmentsLength++;\n                        this.segmentsById[id] = segment;\n                        this.segments.push(segment);\n                        return segment;\n                    };\n                    TrendSegments.prototype.allocatePrevSegment = function() {\n                        var id = this.nextEmptyId++;\n                        var segment = new TrendSegment(this, id);\n                        var nextSegment = this.segmentsById[this.startSegmentId];\n                        if (nextSegment && nextSegment.hasValue) {\n                            nextSegment.prevId = id;\n                            segment.nextId = nextSegment.id;\n                        }\n                        this.startSegmentId = id;\n                        this.segmentsLength++;\n                        this.segmentsById[id] = segment;\n                        this.segments.unshift(segment);\n                        return segment;\n                    };\n                    TrendSegments.prototype.appendData = function(newData, needRebuildSegments) {\n                        if (needRebuildSegments === void 0) {\n                            needRebuildSegments = false;\n                        }\n                        var trendData = this.trend.getData();\n                        if (needRebuildSegments) {\n                            newData = trendData;\n                            this.animatedSegmentsForAppend = [];\n                        }\n                        var startItemInd = trendData.length - newData.length;\n                        var segment = this.getEndSegment() || this.allocateNextSegment();\n                        var initialSegment = segment.hasValue ? segment : null;\n                        var initialAnimationState = segment.createAnimationState();\n                        var itemInd = 0;\n                        while (itemInd < newData.length) {\n                            var item = newData[itemInd];\n                            var itemIsInserted = segment.appendItem(item);\n                            var isLastItem = itemInd == newData.length - 1;\n                            if (itemIsInserted) {\n                                if (!isLastItem) itemInd++;\n                            } else {\n                                if (!segment.isCompleted) segment.complete();\n                            }\n                            if (isLastItem && itemIsInserted) {\n                                segment.recalculateItems();\n                            }\n                            var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                            if (segmentIsReadyForAnimate) {\n                                var id = segment.id;\n                                if (!initialSegment) initialSegment = segment;\n                                if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                                if (this.animatedSegmentsForAppend.length > 0) {\n                                    segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                                    segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                                }\n                                segment.targetAnimationState = segment.createAnimationState();\n                                this.animatedSegmentsForAppend.push(id);\n                            }\n                            if (isLastItem && itemIsInserted) break;\n                            if (!segment.isCompleted) continue;\n                            segment = this.allocateNextSegment();\n                            var prevItem = trendData[startItemInd + itemInd - 1];\n                            segment.appendItem(prevItem);\n                        }\n                        var animationsOptions = this.chartState.data.animations;\n                        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                        if (needRebuildSegments) {\n                            for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                                var segmentId = _a[_i];\n                                var segment_1 = this.segmentsById[segmentId];\n                                segment_1.currentAnimationState = segment_1.createAnimationState();\n                            }\n                            this.animatedSegmentsForAppend = [];\n                            return;\n                        }\n                        if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                        this.animate(time);\n                    };\n                    TrendSegments.prototype.prependData = function(newData) {\n                        var trendData = this.trend.getData();\n                        var segment = this.getStartSegment() || this.segmentsById[0];\n                        var initialSegment = segment.hasValue ? segment : null;\n                        var itemInd = newData.length - 1;\n                        var initialAnimationState = segment.createAnimationState();\n                        while (itemInd >= 0) {\n                            var item = newData[itemInd];\n                            var itemIsInserted = segment.prependItem(item);\n                            var isLastItem = itemInd == 0;\n                            if (itemIsInserted) {\n                                if (!isLastItem) itemInd--;\n                            } else {\n                                if (!segment.isCompleted) segment.complete();\n                            }\n                            if (isLastItem && itemIsInserted) {\n                                segment.recalculateItems();\n                            }\n                            var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                            if (segmentIsReadyForAnimate) {\n                                var id = segment.id;\n                                if (!initialSegment) initialSegment = segment;\n                                if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                                segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                                if (this.animatedSegmentsForPrepend.length > 0) {\n                                    segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                                    segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                                }\n                                segment.targetAnimationState = segment.createAnimationState();\n                                this.animatedSegmentsForPrepend.push(id);\n                            }\n                            if (isLastItem && itemIsInserted) break;\n                            if (!segment.isCompleted) continue;\n                            segment = this.allocatePrevSegment();\n                            var nextItem = trendData[itemInd + 1];\n                            segment.prependItem(nextItem);\n                        }\n                        var animationsOptions = this.chartState.data.animations;\n                        var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                        if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                        this.animate(time, true);\n                    };\n                    TrendSegments.prototype.animate = function(time, isPrepend) {\n                        var _this = this;\n                        if (isPrepend === void 0) {\n                            isPrepend = false;\n                        }\n                        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                        var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                        if (animation && animation.isActive() || time == 0) {\n                            if (animation) animation.kill();\n                            this.onAnimationFrameHandler(1, isPrepend);\n                            animatedSegmentsIds.length = 0;\n                            return;\n                        }\n                        var animationsOptions = this.chartState.data.animations;\n                        var ease = animationsOptions.trendChangeEase;\n                        var objectToAnimate = {\n                            animationValue: 0\n                        };\n                        animation = TweenLite.to(objectToAnimate, time, {\n                            animationValue: 1,\n                            ease: ease\n                        });\n                        animation.eventCallback(\"onUpdate\", function() {\n                            return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                        });\n                        animation.eventCallback(\"onComplete\", function() {\n                            animatedSegmentsIds.length = 0;\n                            _this.appendAnimation = null;\n                        });\n                        if (isPrepend) {\n                            this.prependAnimation = animation;\n                        } else {\n                            this.appendAnimation = animation;\n                        }\n                    };\n                    TrendSegments.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                        if (isPrepend === void 0) {\n                            isPrepend = false;\n                        }\n                        var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                        for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                            var segmentId = animatedSegmentsIds_1[_i];\n                            var segment = this.segmentsById[segmentId];\n                            for (var key in segment.targetAnimationState) {\n                                var targetValue = segment.targetAnimationState[key];\n                                var initialValue = segment.initialAnimationState[key];\n                                var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                                segment.currentAnimationState[key] = currentValue;\n                            }\n                        }\n                        this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                        this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n                    };\n                    return TrendSegments;\n                }();\n                exports.TrendSegments = TrendSegments;\n                var TrendSegment = function() {\n                    function TrendSegment(trendPoints, id) {\n                        this.isCompleted = false;\n                        this.items = [];\n                        this.initialAnimationState = {};\n                        this.targetAnimationState = {};\n                        this.currentAnimationState = {};\n                        this.trendSegments = trendPoints;\n                        this.id = id;\n                        this.maxLength = trendPoints.maxSegmentLength;\n                    }\n                    TrendSegment.prototype.createAnimationState = function() {\n                        var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                        return {\n                            xVal: xVal,\n                            yVal: yVal,\n                            startXVal: startXVal,\n                            startYVal: startYVal,\n                            endXVal: endXVal,\n                            endYVal: endYVal,\n                            maxYVal: maxYVal,\n                            minYVal: minYVal,\n                            maxLength: maxLength\n                        };\n                    };\n                    TrendSegment.prototype.appendItem = function(item) {\n                        if (this.isCompleted) return false;\n                        var items = this.items;\n                        if (items.length < 2) {\n                            this.items.push(item);\n                            this.hasValue = true;\n                            return true;\n                        }\n                        var startXVal = items[0].xVal;\n                        if (item.xVal - startXVal > this.maxLength) return false;\n                        items.push(item);\n                        return true;\n                    };\n                    TrendSegment.prototype.prependItem = function(item) {\n                        if (this.isCompleted) return false;\n                        var items = this.items;\n                        if (items.length < 2) {\n                            this.items.unshift(item);\n                            this.hasValue = true;\n                            return true;\n                        }\n                        var endXVal = items[items.length - 1].xVal;\n                        if (endXVal - item.xVal > this.maxLength) return false;\n                        items.unshift(item);\n                        return true;\n                    };\n                    TrendSegment.prototype.complete = function() {\n                        this.isCompleted = true;\n                        this.recalculateItems();\n                        this.items = [];\n                    };\n                    TrendSegment.prototype.recalculateItems = function() {\n                        var items = this.items;\n                        var itemsLength = items.length;\n                        if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                        var endItem = items[itemsLength - 1];\n                        var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                        var startXVal, startYVal;\n                        var startItem = items[0];\n                        startXVal = startItem.xVal;\n                        startYVal = startItem.yVal;\n                        var minX = Math.min(startXVal, endXVal);\n                        var maxX = Math.max(startXVal, endXVal);\n                        var middleXVal = minX + (maxX - minX) / 2;\n                        var minY = Math.min(startYVal, endYVal);\n                        var maxY = Math.max(startYVal, endYVal);\n                        var middleYVal = minY + (maxY - minY) / 2;\n                        var yVals = items.map(function(item) {\n                            return item.yVal;\n                        });\n                        this.startXVal = startXVal;\n                        this.startYVal = startYVal;\n                        this.endXVal = endXVal;\n                        this.endYVal = endYVal;\n                        this.xVal = middleXVal;\n                        this.yVal = middleYVal;\n                        this.maxYVal = Math.max.apply(Math, yVals);\n                        this.minYVal = Math.min.apply(Math, yVals);\n                        if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n                    };\n                    TrendSegment.prototype.getNext = function() {\n                        var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                        return nextPoint && nextPoint.hasValue ? nextPoint : null;\n                    };\n                    TrendSegment.prototype.getPrev = function() {\n                        var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                        return prevPoint && prevPoint.hasValue ? prevPoint : null;\n                    };\n                    TrendSegment.prototype.getFrameVal = function() {\n                        var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                        return new Vector3(xVal, yVal, 0);\n                    };\n                    TrendSegment.prototype.getFramePoint = function() {\n                        var frameVal = this.getFrameVal();\n                        return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n                    };\n                    return TrendSegment;\n                }();\n                exports.TrendSegment = TrendSegment;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var Vector3 = THREE.Vector3;\n                var EventEmmiter_1 = __webpack_require__(15);\n                var Screen = function() {\n                    function Screen(chartState) {\n                        this.options = {\n                            scrollXVal: 0,\n                            scrollX: 0,\n                            scrollYVal: 0,\n                            scrollY: 0,\n                            zoomX: 1,\n                            zoomY: 1\n                        };\n                        this.currentScrollX = {\n                            x: 0\n                        };\n                        this.currentScrollY = {\n                            y: 0\n                        };\n                        this.currentZoomX = {\n                            val: 1\n                        };\n                        this.currentZoomY = {\n                            val: 1\n                        };\n                        this.chartState = chartState;\n                        var _a = chartState.data, w = _a.width, h = _a.height;\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.transform({\n                            scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n                            zoomY: 1\n                        });\n                        this.bindEvents();\n                    }\n                    Screen.prototype.getCameraSettings = function() {\n                        var _a = this.chartState.data, w = _a.width, h = _a.height;\n                        var FOV = 75;\n                        var vFOV = FOV * (Math.PI / 180);\n                        return {\n                            FOV: FOV,\n                            aspect: w / h,\n                            near: .1,\n                            far: 5e3,\n                            z: h / (2 * Math.tan(vFOV / 2)),\n                            x: w / 2,\n                            y: h / 2\n                        };\n                    };\n                    Screen.prototype.onZoomFrame = function(cb) {\n                        var _this = this;\n                        var eventName = \"zoomFrame\";\n                        this.ee.on(eventName, cb);\n                        return function() {\n                            _this.ee.off(eventName, cb);\n                        };\n                    };\n                    Screen.prototype.onScrollFrame = function(cb) {\n                        var _this = this;\n                        var eventName = \"scrollFrame\";\n                        this.ee.on(eventName, cb);\n                        return function() {\n                            _this.ee.off(eventName, cb);\n                        };\n                    };\n                    Screen.prototype.onTransformationFrame = function(cb) {\n                        var _this = this;\n                        var eventName = \"transformationFrame\";\n                        this.ee.on(eventName, cb);\n                        return function() {\n                            _this.ee.off(eventName, cb);\n                        };\n                    };\n                    Screen.prototype.cameraIsMoving = function() {\n                        return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n                    };\n                    Screen.prototype.transform = function(options, silent) {\n                        if (silent === void 0) {\n                            silent = false;\n                        }\n                        var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                        if (scrollX != void 0) this.options.scrollX = scrollX;\n                        if (scrollY != void 0) this.options.scrollY = scrollY;\n                        if (zoomX != void 0) this.options.zoomX = zoomX;\n                        if (zoomY != void 0) this.options.zoomY = zoomY;\n                        if (scrollX != void 0 || zoomX) {\n                            options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                            this.options.scrollXVal = options.scrollXVal;\n                        }\n                        if (scrollY != void 0 || zoomY) {\n                            options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                            this.options.scrollYVal = options.scrollYVal;\n                        }\n                        if (silent) return;\n                        this.ee.emit(\"transformationFrame\", options);\n                        if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n                            this.ee.emit(\"scrollFrame\", options);\n                        }\n                        if (options.zoomX != void 0 || options.zoomY != void 0) {\n                            this.ee.emit(\"zoomFrame\", options);\n                        }\n                    };\n                    Screen.prototype.bindEvents = function() {\n                        var _this = this;\n                        var state = this.chartState;\n                        state.onChange(function(changedProps) {\n                            if (changedProps.xAxis && changedProps.xAxis.range) {\n                                if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                                if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                            }\n                            if (changedProps.yAxis && changedProps.yAxis.range) {\n                                if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                                if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                            }\n                        });\n                        state.onDestroy(function() {\n                            return _this.onDestroyHandler();\n                        });\n                    };\n                    Screen.prototype.onDestroyHandler = function() {\n                        this.ee.removeAllListeners();\n                        this.scrollXAnimation && this.scrollXAnimation.kill();\n                        this.scrollYAnimation && this.scrollYAnimation.kill();\n                        this.zoomXAnimation && this.zoomXAnimation.kill();\n                        this.zoomYAnimation && this.zoomYAnimation.kill();\n                    };\n                    Screen.prototype.onScrollXHandler = function(changedProps) {\n                        var _this = this;\n                        var state = this.chartState;\n                        var isDragMode = state.data.cursor.dragMode;\n                        var animations = state.data.animations;\n                        var canAnimate = animations.enabled && !isDragMode;\n                        var zoomXChanged = changedProps.xAxis.range.zoom;\n                        var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n                        var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                        var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                        if (this.scrollXAnimation) this.scrollXAnimation.pause();\n                        var range = state.data.xAxis.range;\n                        var targetX = range.scroll * range.scaleFactor * range.zoom;\n                        this.currentScrollX.x = this.options.scrollX;\n                        var cb = function() {\n                            _this.transform({\n                                scrollX: _this.currentScrollX.x\n                            });\n                        };\n                        if (canAnimate) {\n                            this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n                                x: targetX,\n                                ease: ease\n                            });\n                            this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n                        } else {\n                            this.currentScrollX.x = targetX;\n                            cb();\n                        }\n                    };\n                    Screen.prototype.onScrollYHandler = function() {\n                        var _this = this;\n                        var state = this.chartState;\n                        var animations = state.data.animations;\n                        var canAnimate = animations.enabled;\n                        var time = animations.zoomSpeed;\n                        if (this.scrollYAnimation) this.scrollYAnimation.pause();\n                        var range = state.data.yAxis.range;\n                        var targetY = range.scroll * range.scaleFactor * range.zoom;\n                        this.currentScrollY.y = this.options.scrollY;\n                        var cb = function() {\n                            _this.transform({\n                                scrollY: _this.currentScrollY.y\n                            });\n                        };\n                        if (canAnimate) {\n                            this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n                                y: targetY,\n                                ease: animations.zoomEase\n                            });\n                            this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n                        } else {\n                            this.currentScrollY.y = targetY;\n                            cb();\n                        }\n                    };\n                    Screen.prototype.onZoomXHandler = function() {\n                        var _this = this;\n                        var state = this.chartState;\n                        var animations = state.data.animations;\n                        var canAnimate = animations.enabled;\n                        var time = animations.zoomSpeed;\n                        var targetZoom = state.data.xAxis.range.zoom;\n                        if (this.zoomXAnimation) this.zoomXAnimation.pause();\n                        var cb = function() {\n                            _this.transform({\n                                zoomX: _this.currentZoomX.val\n                            });\n                        };\n                        if (canAnimate) {\n                            this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n                                val: targetZoom,\n                                ease: animations.zoomEase\n                            });\n                            this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n                        } else {\n                            this.currentZoomX.val = targetZoom;\n                            cb();\n                        }\n                    };\n                    Screen.prototype.onZoomYHandler = function() {\n                        var _this = this;\n                        var state = this.chartState;\n                        var animations = state.data.animations;\n                        var canAnimate = animations.enabled;\n                        var time = animations.zoomSpeed;\n                        var targetZoom = state.data.yAxis.range.zoom;\n                        if (this.zoomYAnimation) this.zoomYAnimation.pause();\n                        var cb = function() {\n                            _this.transform({\n                                zoomY: _this.currentZoomY.val\n                            });\n                        };\n                        if (canAnimate) {\n                            this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n                                val: targetZoom,\n                                ease: animations.zoomEase\n                            });\n                            this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n                        } else {\n                            this.currentZoomY.val = targetZoom;\n                            cb();\n                        }\n                    };\n                    Screen.prototype.getPointOnXAxis = function(xVal) {\n                        var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                        var zoom = this.options.zoomX;\n                        return (xVal - zeroVal) * scaleFactor * zoom;\n                    };\n                    Screen.prototype.getPointOnYAxis = function(yVal) {\n                        var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                        var zoom = this.options.zoomY;\n                        return (yVal - zeroVal) * scaleFactor * zoom;\n                    };\n                    Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                        return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n                    };\n                    Screen.prototype.getValueOnXAxis = function(x) {\n                        return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n                    };\n                    Screen.prototype.valueToPxByXAxis = function(xVal) {\n                        return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n                    };\n                    Screen.prototype.valueToPxByYAxis = function(yVal) {\n                        return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n                    };\n                    Screen.prototype.pxToValueByXAxis = function(xVal) {\n                        return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n                    };\n                    Screen.prototype.pxToValueByYAxis = function(yVal) {\n                        return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n                    };\n                    Screen.prototype.getValueByScreenX = function(x) {\n                        return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n                    };\n                    Screen.prototype.getValueByScreenY = function(y) {\n                        return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n                    };\n                    Screen.prototype.getScreenXByValue = function(xVal) {\n                        var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                        return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n                    };\n                    Screen.prototype.getScreenXByPoint = function(xVal) {\n                        return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n                    };\n                    Screen.prototype.getPointByScreenX = function(screenX) {\n                        return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n                    };\n                    Screen.prototype.getPointByScreenY = function(screenY) {\n                        return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n                    };\n                    Screen.prototype.getTop = function() {\n                        return this.getPointByScreenY(this.chartState.data.height);\n                    };\n                    Screen.prototype.getBottom = function() {\n                        return this.getPointByScreenY(0);\n                    };\n                    Screen.prototype.getLeft = function() {\n                        return this.getPointByScreenX(0);\n                    };\n                    Screen.prototype.getScreenRightVal = function() {\n                        return this.getValueByScreenX(this.chartState.data.width);\n                    };\n                    Screen.prototype.getTopVal = function() {\n                        return this.getValueByScreenY(this.chartState.data.height);\n                    };\n                    Screen.prototype.getBottomVal = function() {\n                        return this.getValueByScreenY(0);\n                    };\n                    Screen.prototype.getCenterYVal = function() {\n                        return this.getValueByScreenY(this.chartState.data.height / 2);\n                    };\n                    return Screen;\n                }();\n                exports.Screen = Screen;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Utils_1 = __webpack_require__(16);\n                var interfaces_1 = __webpack_require__(23);\n                var EventEmmiter_1 = __webpack_require__(15);\n                var AXIS_MARK_DEFAULT_OPTIONS = {\n                    type: \"simple\",\n                    lineWidth: 1,\n                    value: 0,\n                    showValue: false,\n                    stickToEdges: false,\n                    lineColor: \"#FFFFFF\",\n                    title: \"\"\n                };\n                var AxisMarks = function() {\n                    function AxisMarks(chartState, axisType) {\n                        this.items = {};\n                        this.chartState = chartState;\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.axisType = axisType;\n                        var marks = this.items;\n                        var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n                        for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                            var options = axisMarksOptions_1[_i];\n                            var axisMark = void 0;\n                            options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                            if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                            if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                            if (options.type == \"timeleft\") {\n                                axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                            } else {\n                                axisMark = new AxisMark(chartState, axisType, options);\n                            }\n                            marks[options.name] = axisMark;\n                        }\n                        this.bindEvents();\n                    }\n                    AxisMarks.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                            _this.onTrendChange(trendName, newData);\n                        });\n                        this.chartState.onDestroy(function() {\n                            return _this.ee.removeAllListeners();\n                        });\n                    };\n                    AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                        if (!newData) return;\n                        var startVal = newData[0].xVal;\n                        var endVal = newData[newData.length - 1].xVal;\n                        var marks = this.items;\n                        for (var markName in marks) {\n                            var mark = marks[markName];\n                            var markVal = mark.options.value;\n                            var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                            if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                        }\n                    };\n                    AxisMarks.prototype.getItems = function() {\n                        return this.items;\n                    };\n                    AxisMarks.prototype.getItem = function(markName) {\n                        return this.items[markName];\n                    };\n                    return AxisMarks;\n                }();\n                exports.AxisMarks = AxisMarks;\n                var AxisMark = function() {\n                    function AxisMark(chartState, axisType, options) {\n                        this.renderOnTrendsChange = false;\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.options = options;\n                        this.axisType = axisType;\n                        this.chartState = chartState;\n                        this.bindEvents();\n                    }\n                    AxisMark.prototype.bindEvents = function() {};\n                    AxisMark.prototype.setOptions = function(newOptions) {\n                        var value = this.options.value;\n                        this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                        if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                        this.ee.emit(\"onDisplayedValueChange\");\n                    };\n                    AxisMark.prototype.getDisplayedVal = function() {\n                        var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                        return String(displayedValue !== void 0 ? displayedValue : value);\n                    };\n                    AxisMark.prototype.onMarkCrossed = function(cb) {\n                        var _this = this;\n                        this.ee.on(\"markCrossed\", cb);\n                        return function() {\n                            _this.ee.off(\"markCrossed\", cb);\n                        };\n                    };\n                    AxisMark.prototype.onValueChange = function(cb) {\n                        var _this = this;\n                        this.ee.on(\"valueChange\", cb);\n                        return function() {\n                            _this.ee.off(\"valueChange\", cb);\n                        };\n                    };\n                    AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                        var _this = this;\n                        this.ee.on(\"onDisplayedValueChange\", cb);\n                        return function() {\n                            _this.ee.off(\"onDisplayedValueChange\", cb);\n                        };\n                    };\n                    AxisMark.typeName = \"simple\";\n                    return AxisMark;\n                }();\n                exports.AxisMark = AxisMark;\n                var AxisTimeleftMark = function(_super) {\n                    __extends(AxisTimeleftMark, _super);\n                    function AxisTimeleftMark() {\n                        _super.apply(this, arguments);\n                        this.renderOnTrendsChange = true;\n                    }\n                    AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                        var markVal = this.options.value;\n                        var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n                        var time = markVal - maxXVal;\n                        if (time < 0) time = 0;\n                        return Utils_1.Utils.msToTimeString(time);\n                    };\n                    AxisTimeleftMark.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.chartState.onTrendsChange(function() {\n                            return _this.onTrendsChange();\n                        });\n                    };\n                    AxisTimeleftMark.prototype.onTrendsChange = function() {\n                        this.ee.emit(\"onDisplayedValueChange\");\n                    };\n                    AxisTimeleftMark.typeName = \"timeleft\";\n                    return AxisTimeleftMark;\n                }(AxisMark);\n                exports.AxisTimeleftMark = AxisTimeleftMark;\n            }, function(module, exports) {\n                \"use strict\";\n                (function(AXIS_RANGE_TYPE) {\n                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n                    AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n                })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n                var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n                (function(AXIS_TYPE) {\n                    AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n                    AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n                })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n                var AXIS_TYPE = exports.AXIS_TYPE;\n                (function(AXIS_DATA_TYPE) {\n                    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n                    AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n                })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n                var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Mesh = THREE.Mesh;\n                var Object3D = THREE.Object3D;\n                var Widget_1 = __webpack_require__(17);\n                var GridWidget_1 = __webpack_require__(25);\n                var Utils_1 = __webpack_require__(16);\n                var interfaces_1 = __webpack_require__(23);\n                var AxisWidget = function(_super) {\n                    __extends(AxisWidget, _super);\n                    function AxisWidget(state) {\n                        var _this = this;\n                        _super.call(this, state);\n                        this.isDestroyed = false;\n                        this.object3D = new Object3D();\n                        this.axisXObject = new Object3D();\n                        this.axisYObject = new Object3D();\n                        this.object3D.add(this.axisXObject);\n                        this.object3D.add(this.axisYObject);\n                        this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                        this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                            return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                        }, 1e3);\n                        this.onScrollChange(state.screen.options.scrollX, state.screen.options.scrollY);\n                    }\n                    AxisWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        var state = this.chartState;\n                        this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                            _this.onScrollChange(options.scrollX, options.scrollY);\n                        }), state.screen.onZoomFrame(function(options) {\n                            _this.onZoomFrame(options);\n                        }), state.onDestroy(function() {\n                            return _this.onDestroy();\n                        }), state.onResize(function() {\n                            return _this.onResize();\n                        }));\n                    };\n                    AxisWidget.prototype.onDestroy = function() {\n                        this.isDestroyed = true;\n                        this.unbindEvents();\n                    };\n                    AxisWidget.prototype.onScrollChange = function(x, y) {\n                        if (y != void 0) {\n                            this.axisYObject.position.y = y;\n                            this.axisXObject.position.y = y;\n                        }\n                        if (x != void 0) {\n                            this.axisYObject.position.x = x;\n                            this.updateAxisXRequest();\n                        }\n                    };\n                    AxisWidget.prototype.onResize = function() {\n                        this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                        this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                    };\n                    AxisWidget.prototype.setupAxis = function(orientation) {\n                        var _this = this;\n                        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                        var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                        var canvasWidth = 0, canvasHeight = 0;\n                        if (isXAxis) {\n                            this.axisXObject.traverse(function(obj) {\n                                return _this.axisXObject.remove(obj);\n                            });\n                            canvasWidth = visibleWidth * 3;\n                            canvasHeight = 50;\n                        } else {\n                            this.axisYObject.traverse(function(obj) {\n                                return _this.axisYObject.remove(obj);\n                            });\n                            canvasWidth = 50;\n                            canvasHeight = visibleHeight * 3;\n                        }\n                        var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                            ctx.beginPath();\n                            ctx.font = \"10px Arial\";\n                            ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n                            ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n                        });\n                        var material = new THREE.MeshBasicMaterial({\n                            map: texture,\n                            side: THREE.FrontSide\n                        });\n                        material.transparent = true;\n                        var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                        if (isXAxis) {\n                            axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                            this.axisXObject.add(axisMesh);\n                        } else {\n                            axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                            this.axisYObject.add(axisMesh);\n                        }\n                        this.updateAxis(orientation);\n                    };\n                    AxisWidget.prototype.getObject3D = function() {\n                        return this.object3D;\n                    };\n                    AxisWidget.prototype.updateAxis = function(orientation) {\n                        if (this.isDestroyed) return;\n                        var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                        var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                        var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                        var axisOptions;\n                        var axisMesh;\n                        var axisGridParams;\n                        if (isXAxis) {\n                            axisMesh = this.axisXObject.children[0];\n                            axisOptions = this.chartState.data.xAxis;\n                            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                        } else {\n                            axisMesh = this.axisYObject.children[0];\n                            axisOptions = this.chartState.data.yAxis;\n                            axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                        }\n                        var geometry = axisMesh.geometry;\n                        var canvasWidth = geometry.parameters.width;\n                        var canvasHeight = geometry.parameters.height;\n                        var texture = axisMesh.material.map;\n                        var ctx = texture.image.getContext(\"2d\");\n                        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                        if (isXAxis) {\n                            axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                        }\n                        var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                        var startVal = axisGridParams.start - edgeOffset;\n                        var endVal = axisGridParams.end + edgeOffset;\n                        ctx.beginPath();\n                        for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                            var displayedValue = \"\";\n                            if (isXAxis) {\n                                var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                                ctx.textAlign = \"center\";\n                                if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                                    displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                                } else {\n                                    displayedValue = Number(val.toFixed(14)).toString();\n                                }\n                                ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                            } else {\n                                var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n                                ctx.textAlign = \"right\";\n                                displayedValue = Number(val.toFixed(14)).toString();\n                                ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                            }\n                            ctx.stroke();\n                        }\n                        ctx.stroke();\n                        ctx.closePath();\n                        texture.needsUpdate = true;\n                    };\n                    AxisWidget.prototype.onZoomFrame = function(options) {\n                        if (options.zoomX) {\n                            this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                        }\n                        if (options.zoomY) {\n                            this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                        }\n                    };\n                    AxisWidget.getDateStr = function(timestamp, gridParams) {\n                        var sec = 1e3;\n                        var min = sec * 60;\n                        var hour = min * 60;\n                        var day = hour * 60;\n                        var step = gridParams.step;\n                        var d = new Date(timestamp);\n                        var tf = function(num) {\n                            return Utils_1.Utils.toFixed(num, 2);\n                        };\n                        return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n                    };\n                    AxisWidget.widgetName = \"Axis\";\n                    return AxisWidget;\n                }(Widget_1.ChartWidget);\n                exports.AxisWidget = AxisWidget;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Vector3 = THREE.Vector3;\n                var Widget_1 = __webpack_require__(17);\n                var LineSegments = THREE.LineSegments;\n                var Utils_1 = __webpack_require__(16);\n                var GridWidget = function(_super) {\n                    __extends(GridWidget, _super);\n                    function GridWidget(chartState) {\n                        _super.call(this, chartState);\n                        this.isDestroyed = false;\n                        var _a = chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                        this.gridSizeH = Math.floor(width / xAxis.gridMinSize) * 3;\n                        this.gridSizeV = Math.floor(height / yAxis.gridMinSize) * 3;\n                        this.initGrid();\n                        this.updateGrid();\n                    }\n                    GridWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                            return _this.updateGrid();\n                        }, 1e3);\n                        this.bindEvent(this.chartState.onScroll(function() {\n                            return updateGridThrottled();\n                        }), this.chartState.screen.onZoomFrame(function(options) {\n                            updateGridThrottled();\n                            _this.onZoomFrame(options);\n                        }), this.chartState.onDestroy(function() {\n                            _this.isDestroyed = true;\n                            _this.unbindEvents();\n                        }), this.chartState.onResize(function() {\n                            _this.updateGrid();\n                        }));\n                    };\n                    GridWidget.prototype.initGrid = function() {\n                        var geometry = new THREE.Geometry();\n                        var material = new THREE.LineBasicMaterial({\n                            linewidth: 1,\n                            opacity: .1,\n                            transparent: true\n                        });\n                        var xLinesCount = this.gridSizeH;\n                        var yLinesCount = this.gridSizeV;\n                        while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                        while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                        this.lineSegments = new LineSegments(geometry, material);\n                        this.lineSegments.position.setZ(-1);\n                        this.lineSegments.frustumCulled = false;\n                    };\n                    GridWidget.prototype.updateGrid = function() {\n                        if (this.isDestroyed) return;\n                        var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                        var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                        var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                        var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                        var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                        var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                        var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                        var startXVal = axisXGrid.start + gridScrollXVal;\n                        var startYVal = axisYGrid.start + gridScrollYVal;\n                        var geometry = this.lineSegments.geometry;\n                        var vertices = geometry.vertices;\n                        var lineInd = 0;\n                        for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                            var value = startXVal + i * axisXGrid.step;\n                            var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                            lineInd++;\n                        }\n                        for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                            var value = startYVal + i * axisYGrid.step;\n                            var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                            vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                            vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                            lineInd++;\n                        }\n                        geometry.verticesNeedUpdate = true;\n                        this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n                    };\n                    GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                        var chartState = this.chartState;\n                        var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n                        var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n                        return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n                    };\n                    GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                        var chartState = this.chartState;\n                        var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n                        var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n                        return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n                    };\n                    GridWidget.prototype.onZoomFrame = function(options) {\n                        var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                        if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                        if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n                    };\n                    GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                        var axisRange = axisOptions.range;\n                        var from = axisRange.from;\n                        var to = axisRange.to;\n                        var axisLength = to - from;\n                        var gridStep = 0;\n                        var gridStepInPixels = 0;\n                        var minGridStepInPixels = axisOptions.gridMinSize;\n                        var axisLengthStr = String(axisLength);\n                        var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                        var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                        var gridStepFound = false;\n                        var digitPos = 0;\n                        while (!gridStepFound) {\n                            var power = intPartLength - digitPos - 1;\n                            var multiplier = Math.pow(10, power) || 1;\n                            var dividers = [ 1, 2, 5 ];\n                            for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                                var nextGridStep = multiplier / dividers[dividerInd];\n                                var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                                if (nextGridStepInPixels >= minGridStepInPixels) {\n                                    gridStep = nextGridStep;\n                                    gridStepInPixels = nextGridStepInPixels;\n                                } else {\n                                    gridStepFound = true;\n                                    if (gridStep === 0) {\n                                        gridStep = nextGridStep;\n                                        gridStepInPixels = nextGridStepInPixels;\n                                    }\n                                    break;\n                                }\n                            }\n                            if (!gridStepFound) digitPos++;\n                        }\n                        var gridStart = Math.floor(from / gridStep) * gridStep;\n                        var gridEnd = Math.floor(to / gridStep) * gridStep;\n                        return {\n                            start: gridStart,\n                            end: gridEnd,\n                            step: gridStep,\n                            stepInPx: gridStepInPixels,\n                            length: gridEnd - gridStart,\n                            segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                        };\n                    };\n                    GridWidget.prototype.getObject3D = function() {\n                        return this.lineSegments;\n                    };\n                    GridWidget.widgetName = \"Grid\";\n                    return GridWidget;\n                }(Widget_1.ChartWidget);\n                exports.GridWidget = GridWidget;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Utils_1 = __webpack_require__(16);\n                var Mesh = THREE.Mesh;\n                var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n                var MeshBasicMaterial = THREE.MeshBasicMaterial;\n                var TrendsWidget_1 = __webpack_require__(27);\n                var Trend_1 = __webpack_require__(19);\n                var TrendsLoadingWidget = function(_super) {\n                    __extends(TrendsLoadingWidget, _super);\n                    function TrendsLoadingWidget() {\n                        _super.apply(this, arguments);\n                    }\n                    TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                        return TrendLoading;\n                    };\n                    TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n                    return TrendsLoadingWidget;\n                }(TrendsWidget_1.TrendsWidget);\n                exports.TrendsLoadingWidget = TrendsLoadingWidget;\n                var TrendLoading = function(_super) {\n                    __extends(TrendLoading, _super);\n                    function TrendLoading(state, trendName) {\n                        _super.call(this, state, trendName);\n                        this.isActive = false;\n                        this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                            map: TrendLoading.createTexture(),\n                            transparent: true\n                        }));\n                        this.deactivate();\n                    }\n                    TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n                        return trendOptions.enabled && chartState.data.animations.enabled;\n                    };\n                    TrendLoading.prototype.getObject3D = function() {\n                        return this.mesh;\n                    };\n                    TrendLoading.prototype.bindEvents = function() {\n                        var _this = this;\n                        _super.prototype.bindEvents.call(this);\n                        this.bindEvent(this.trend.onPrependRequest(function() {\n                            return _this.activate();\n                        }));\n                    };\n                    TrendLoading.prototype.prependData = function() {\n                        this.deactivate();\n                    };\n                    TrendLoading.prototype.activate = function() {\n                        var mesh = this.mesh;\n                        mesh.material.opacity = 1;\n                        mesh.rotation.z = 0;\n                        var animation = TweenLite.to(this.mesh.rotation, .5, {\n                            z: Math.PI * 2\n                        });\n                        animation.eventCallback(\"onComplete\", function() {\n                            animation.restart();\n                        });\n                        this.animation = animation;\n                        this.isActive = true;\n                        this.updatePosition();\n                    };\n                    TrendLoading.prototype.deactivate = function() {\n                        this.animation && this.animation.kill();\n                        this.mesh.material.opacity = 0;\n                        this.isActive = false;\n                    };\n                    TrendLoading.createTexture = function() {\n                        var h = 64, w = 64;\n                        return Utils_1.Utils.createTexture(h, w, function(ctx) {\n                            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                            ctx.lineWidth = 5;\n                            var center = h / 2;\n                            ctx.beginPath();\n                            ctx.arc(center, center, 22, 0, Math.PI / 2);\n                            ctx.stroke();\n                            ctx.beginPath();\n                            ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                            ctx.stroke();\n                            ctx.beginPath();\n                            ctx.arc(center, center, 3, 0, Math.PI * 2);\n                            ctx.stroke();\n                        });\n                    };\n                    TrendLoading.prototype.onZoomFrame = function() {\n                        this.updatePosition();\n                    };\n                    TrendLoading.prototype.updatePosition = function() {\n                        if (!this.isActive) return;\n                        var trend = this.trend;\n                        var segment = trend.segments.getStartSegment();\n                        var x, y;\n                        if (trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n                            x = segment.currentAnimationState.startXVal;\n                            y = segment.currentAnimationState.startYVal;\n                        } else {\n                            x = segment.currentAnimationState.xVal - segment.maxLength;\n                            y = segment.currentAnimationState.yVal;\n                        }\n                        var pointVector = this.chartState.screen.getPointOnChart(x, y);\n                        this.mesh.position.set(pointVector.x, pointVector.y, 0);\n                    };\n                    return TrendLoading;\n                }(TrendsWidget_1.TrendWidget);\n                exports.TrendLoading = TrendLoading;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Widget_1 = __webpack_require__(17);\n                var Object3D = THREE.Object3D;\n                var TrendsWidget = function(_super) {\n                    __extends(TrendsWidget, _super);\n                    function TrendsWidget(state) {\n                        _super.call(this, state);\n                        this.widgets = {};\n                        this.object3D = new Object3D();\n                        this.onTrendsChange();\n                    }\n                    TrendsWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        var state = this.chartState;\n                        state.onTrendsChange(function() {\n                            return _this.onTrendsChange();\n                        });\n                        state.onTrendChange(function(trendName, changedOptions, newData) {\n                            _this.onTrendChange(trendName, changedOptions, newData);\n                        });\n                    };\n                    TrendsWidget.prototype.onTrendsChange = function() {\n                        var trendsOptions = this.chartState.data.trends;\n                        var TrendWidgetClass = this.getTrendWidgetClass();\n                        for (var trendName in trendsOptions) {\n                            var trendOptions = trendsOptions[trendName];\n                            var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n                            if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                                this.createTrendWidget(trendName);\n                            } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                                this.destroyTrendWidget(trendName);\n                            }\n                        }\n                    };\n                    TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                        var widget = this.widgets[trendName];\n                        if (!widget) return;\n                        widget.onTrendChange(changedOptions);\n                        if (newData) {\n                            var data = this.chartState.getTrend(trendName).getData();\n                            var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                            isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                        }\n                    };\n                    TrendsWidget.prototype.getObject3D = function() {\n                        return this.object3D;\n                    };\n                    TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                        var WidgetConstructor = this.getTrendWidgetClass();\n                        var widget = new WidgetConstructor(this.chartState, trendName);\n                        this.widgets[trendName] = widget;\n                        var widgetObject = widget.getObject3D();\n                        widgetObject.name = trendName;\n                        this.object3D.add(widget.getObject3D());\n                    };\n                    TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                        this.widgets[trendName].onDestroy();\n                        delete this.widgets[trendName];\n                        var widgetObject = this.object3D.getObjectByName(trendName);\n                        this.object3D.remove(widgetObject);\n                    };\n                    return TrendsWidget;\n                }(Widget_1.ChartWidget);\n                exports.TrendsWidget = TrendsWidget;\n                var TrendWidget = function() {\n                    function TrendWidget(chartState, trendName) {\n                        this.chartState = chartState;\n                        this.trendName = trendName;\n                        this.unsubscribers = [];\n                        this.trend = chartState.trendsManager.getTrend(trendName);\n                        this.chartState = chartState;\n                        this.bindEvents();\n                    }\n                    TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n                        return trendOptions.enabled;\n                    };\n                    TrendWidget.prototype.appendData = function(newData) {};\n                    TrendWidget.prototype.prependData = function(newData) {};\n                    TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n                    TrendWidget.prototype.onDestroy = function() {\n                        for (var _i = 0, _a = this.unsubscribers; _i < _a.length; _i++) {\n                            var unsubscriber = _a[_i];\n                            unsubscriber();\n                        }\n                    };\n                    TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n                    TrendWidget.prototype.onZoomFrame = function(options) {};\n                    TrendWidget.prototype.onTransformationFrame = function(options) {};\n                    TrendWidget.prototype.onZoom = function() {};\n                    TrendWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.bindEvent(this.trend.segments.onAnimationFrame(function(trendPoints) {\n                            return _this.onSegmentsAnimate(trendPoints);\n                        }));\n                        this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n                            return _this.onTransformationFrame(options);\n                        }));\n                        this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n                            return _this.onZoomFrame(options);\n                        }));\n                        this.bindEvent(this.chartState.onZoom(function() {\n                            return _this.onZoom();\n                        }));\n                    };\n                    TrendWidget.prototype.bindEvent = function(unsubscriber) {\n                        this.unsubscribers.push(unsubscriber);\n                    };\n                    return TrendWidget;\n                }();\n                exports.TrendWidget = TrendWidget;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Widget_1 = __webpack_require__(17);\n                var Object3D = THREE.Object3D;\n                var Geometry = THREE.Geometry;\n                var LineBasicMaterial = THREE.LineBasicMaterial;\n                var Vector3 = THREE.Vector3;\n                var Utils_1 = __webpack_require__(16);\n                var Line = THREE.Line;\n                var Mesh = THREE.Mesh;\n                var interfaces_1 = __webpack_require__(23);\n                var AxisMarksWidget = function(_super) {\n                    __extends(AxisMarksWidget, _super);\n                    function AxisMarksWidget(chartState) {\n                        _super.call(this, chartState);\n                        this.axisMarksWidgets = [];\n                        this.object3D = new Object3D();\n                        var xAxisMarks = chartState.xAxisMarks, yAxisMarks = chartState.yAxisMarks;\n                        var items = xAxisMarks.getItems();\n                        for (var markName in items) {\n                            this.createAxisMark(items[markName]);\n                        }\n                        items = yAxisMarks.getItems();\n                        for (var markName in items) {\n                            this.createAxisMark(items[markName]);\n                        }\n                    }\n                    AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n                        var axisMarkWidget = new AxisMarkWidget(this.chartState, axisMark);\n                        this.axisMarksWidgets.push(axisMarkWidget);\n                        this.object3D.add(axisMarkWidget.getObject3D());\n                    };\n                    AxisMarksWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.bindEvent(this.chartState.screen.onTransformationFrame(function() {\n                            return _this.updateMarksPositions();\n                        }), this.chartState.onResize(function() {\n                            return _this.updateMarksPositions();\n                        }));\n                    };\n                    AxisMarksWidget.prototype.updateMarksPositions = function() {\n                        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n                            var widget = _a[_i];\n                            widget.updatePosition();\n                        }\n                    };\n                    AxisMarksWidget.prototype.getObject3D = function() {\n                        return this.object3D;\n                    };\n                    AxisMarksWidget.widgetName = \"AxisMarks\";\n                    return AxisMarksWidget;\n                }(Widget_1.ChartWidget);\n                exports.AxisMarksWidget = AxisMarksWidget;\n                var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n                    var axisMark = axisMarkWidget.axisMark;\n                    ctx.fillStyle = axisMark.options.lineColor;\n                    ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n                    var xCoord = 15;\n                    if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n                        ctx.textAlign = \"end\";\n                        xCoord = axisMarkWidget.indicatorWidth;\n                    }\n                    ctx.fillText(axisMark.options.title, xCoord, 20);\n                    if (!axisMark.options.showValue) return;\n                    ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n                    ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n                };\n                var INDICATOR_POS_Z = .1;\n                var AxisMarkWidget = function() {\n                    function AxisMarkWidget(chartState, axisMark) {\n                        this.indicatorWidth = 128;\n                        this.indicatorHeight = 64;\n                        this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n                        this.chartState = chartState;\n                        this.axisMark = axisMark;\n                        this.axisType = axisMark.axisType;\n                        this.frameValue = axisMark.options.value;\n                        this.object3D = new Object3D();\n                        this.object3D.position.setZ(-.1);\n                        this.line = this.createLine();\n                        this.object3D.add(this.line);\n                        this.indicator = this.createIndicator();\n                        this.object3D.add(this.indicator);\n                        this.renderIndicator();\n                        this.updatePosition();\n                        this.bindEvents();\n                    }\n                    AxisMarkWidget.prototype.getObject3D = function() {\n                        return this.object3D;\n                    };\n                    AxisMarkWidget.prototype.createLine = function() {\n                        var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n                        var lineGeometry = new Geometry();\n                        lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n                        return new Line(lineGeometry, new LineBasicMaterial({\n                            color: Utils_1.Utils.getHexColor(lineColor),\n                            linewidth: lineWidth\n                        }));\n                    };\n                    AxisMarkWidget.prototype.createIndicator = function() {\n                        var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n                        var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n                            ctx.beginPath();\n                            ctx.font = \"10px Arial\";\n                        });\n                        var material = new THREE.MeshBasicMaterial({\n                            map: texture,\n                            side: THREE.FrontSide\n                        });\n                        material.transparent = true;\n                        return new Mesh(new THREE.PlaneGeometry(width, height), material);\n                    };\n                    AxisMarkWidget.prototype.renderIndicator = function() {\n                        var texture = this.indicator.material.map;\n                        var ctx = texture.image.getContext(\"2d\");\n                        DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n                        texture.needsUpdate = true;\n                    };\n                    AxisMarkWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        this.axisMark.onDisplayedValueChange(function() {\n                            return _this.renderIndicator();\n                        });\n                        this.axisMark.onValueChange(function() {\n                            return _this.onValueChangeHandler();\n                        });\n                    };\n                    AxisMarkWidget.prototype.onValueChangeHandler = function() {\n                        var _this = this;\n                        if (this.moveAnimation) this.moveAnimation.kill();\n                        var animations = this.chartState.data.animations;\n                        var targetValue = this.axisMark.options.value;\n                        var cb = function() {\n                            _this.updatePosition();\n                        };\n                        if (animations.enabled) {\n                            this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n                                frameValue: targetValue,\n                                ease: animations.trendChangeEase\n                            });\n                            this.moveAnimation.eventCallback(\"onUpdate\", cb);\n                        } else {\n                            this.frameValue = targetValue;\n                            cb();\n                        }\n                    };\n                    AxisMarkWidget.prototype.updatePosition = function() {\n                        var chartState = this.chartState;\n                        var screen = chartState.screen;\n                        var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n                        var lineGeometry = this.line.geometry;\n                        var hasStickMode = this.axisMark.options.stickToEdges;\n                        var _a = this.chartState.data, width = _a.width, height = _a.height;\n                        if (isXAxis) {\n                            this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n                            this.object3D.position.y = screen.getBottom();\n                            lineGeometry.vertices[1].setY(height);\n                            this.indicator.position.set(this.indicatorWidth / 2, chartState.data.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n                        } else {\n                            var val = this.frameValue;\n                            var bottomVal = screen.getBottomVal();\n                            var topVal = screen.getTopVal();\n                            var needToStickOnTop = hasStickMode && val > topVal;\n                            var needToStickOnBottom = hasStickMode && val < bottomVal;\n                            var centerYVal = screen.getCenterYVal();\n                            this.object3D.position.x = screen.getLeft();\n                            if (needToStickOnTop) {\n                                this.object3D.position.y = screen.getTop();\n                            } else if (needToStickOnBottom) {\n                                this.object3D.position.y = screen.getBottom();\n                            } else {\n                                this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n                            }\n                            lineGeometry.vertices[1].setX(width);\n                            var indicatorPosY = val > centerYVal ? -35 : 10;\n                            this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n                        }\n                        lineGeometry.verticesNeedUpdate = true;\n                    };\n                    AxisMarkWidget.typeName = \"simple\";\n                    return AxisMarkWidget;\n                }();\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Widget_1 = __webpack_require__(17);\n                var LineSegments = THREE.LineSegments;\n                var Vector3 = THREE.Vector3;\n                var BorderWidget = function(_super) {\n                    __extends(BorderWidget, _super);\n                    function BorderWidget(chartState) {\n                        _super.call(this, chartState);\n                        var _a = chartState.data, width = _a.width, height = _a.height;\n                        var geometry = new THREE.Geometry();\n                        var material = new THREE.LineBasicMaterial({\n                            linewidth: 1,\n                            opacity: 0,\n                            transparent: true\n                        });\n                        geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, height, 0), new Vector3(0, height, 0), new Vector3(width, height, 0), new Vector3(width, height, 0), new Vector3(width, 0, 0), new Vector3(width, 0, 0), new Vector3(0, 0, 0), new Vector3(width / 2, height, 0), new Vector3(width / 2, 0, 0));\n                        this.lineSegments = new LineSegments(geometry, material);\n                    }\n                    BorderWidget.prototype.getObject3D = function() {\n                        return this.lineSegments;\n                    };\n                    BorderWidget.widgetName = \"Border\";\n                    return BorderWidget;\n                }(Widget_1.ChartWidget);\n                exports.BorderWidget = BorderWidget;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Utils_1 = __webpack_require__(16);\n                var Mesh = THREE.Mesh;\n                var TrendsWidget_1 = __webpack_require__(27);\n                var Color = THREE.Color;\n                var CANVAS_WIDTH = 128;\n                var CANVAS_HEIGHT = 64;\n                var OFFSET_X = 15;\n                var TrendsIndicatorWidget = function(_super) {\n                    __extends(TrendsIndicatorWidget, _super);\n                    function TrendsIndicatorWidget() {\n                        _super.apply(this, arguments);\n                    }\n                    TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                        return TrendIndicator;\n                    };\n                    TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n                    return TrendsIndicatorWidget;\n                }(TrendsWidget_1.TrendsWidget);\n                exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n                var TrendIndicator = function(_super) {\n                    __extends(TrendIndicator, _super);\n                    function TrendIndicator(state, trendName) {\n                        _super.call(this, state, trendName);\n                        this.initObject();\n                        this.onTrendChange();\n                    }\n                    TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                        return trendOptions.enabled && trendOptions.hasIndicator;\n                    };\n                    TrendIndicator.prototype.getObject3D = function() {\n                        return this.mesh;\n                    };\n                    TrendIndicator.prototype.onTrendChange = function() {\n                        var trendData = this.trend.getData();\n                        var lastItem = trendData[trendData.length - 1];\n                        var texture = this.mesh.material.map;\n                        var ctx = texture.image.getContext(\"2d\");\n                        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                        ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                        texture.needsUpdate = true;\n                    };\n                    TrendIndicator.prototype.initObject = function() {\n                        var color = new Color(this.trend.getOptions().lineColor);\n                        var texture = Utils_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                            ctx.beginPath();\n                            ctx.font = \"15px Arial\";\n                            ctx.fillStyle = color.getStyle();\n                            ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                        });\n                        var material = new THREE.MeshBasicMaterial({\n                            map: texture,\n                            side: THREE.FrontSide\n                        });\n                        material.transparent = true;\n                        this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n                    };\n                    TrendIndicator.prototype.onTransformationFrame = function() {\n                        this.segment = this.trend.segments.getEndSegment();\n                        this.updatePosition();\n                    };\n                    TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                        this.segment = segments.getEndSegment();\n                        this.updatePosition();\n                    };\n                    TrendIndicator.prototype.updatePosition = function() {\n                        var state = this.chartState;\n                        var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                        var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                        var screenWidth = state.data.width;\n                        var x = endPointVector.x + OFFSET_X;\n                        var y = endPointVector.y;\n                        var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                        var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                        if (indicatorIsOutOfScreen) {\n                            if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n                            if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                            y -= 25;\n                        }\n                        this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n                    };\n                    return TrendIndicator;\n                }(TrendsWidget_1.TrendWidget);\n                exports.TrendIndicator = TrendIndicator;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Geometry = THREE.Geometry;\n                var LineBasicMaterial = THREE.LineBasicMaterial;\n                var Vector3 = THREE.Vector3;\n                var TrendsWidget_1 = __webpack_require__(27);\n                var LineSegments = THREE.LineSegments;\n                var Trend_1 = __webpack_require__(19);\n                var Utils_1 = __webpack_require__(16);\n                var MAX_DISPLAYED_SEGMENTS = 2e3;\n                var TrendsLineWidget = function(_super) {\n                    __extends(TrendsLineWidget, _super);\n                    function TrendsLineWidget() {\n                        _super.apply(this, arguments);\n                    }\n                    TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                        return TrendLine;\n                    };\n                    TrendsLineWidget.widgetName = \"TrendsLine\";\n                    return TrendsLineWidget;\n                }(TrendsWidget_1.TrendsWidget);\n                exports.TrendsLineWidget = TrendsLineWidget;\n                var TrendLine = function(_super) {\n                    __extends(TrendLine, _super);\n                    function TrendLine(chartState, trendName) {\n                        _super.call(this, chartState, trendName);\n                        this.freeSegmentsInds = [];\n                        this.displayedSegments = {};\n                        var options = this.trend.getOptions();\n                        this.material = new LineBasicMaterial({\n                            color: options.lineColor,\n                            linewidth: options.lineWidth\n                        });\n                        this.initLine();\n                    }\n                    TrendLine.widgetIsEnabled = function(trendOptions) {\n                        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n                    };\n                    TrendLine.prototype.getObject3D = function() {\n                        return this.lineSegments;\n                    };\n                    TrendLine.prototype.bindEvents = function() {\n                        var _this = this;\n                        _super.prototype.bindEvents.call(this);\n                        this.bindEvent(this.trend.segments.onRebuild(function() {\n                            _this.destroySegments();\n                            _this.setupSegments();\n                        }));\n                        this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n                            _this.setupSegments();\n                        }));\n                    };\n                    TrendLine.prototype.initLine = function() {\n                        var geometry = new Geometry();\n                        var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                        var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                        this.scaleXFactor = scaleXFactor;\n                        this.scaleYFactor = scaleYFactor;\n                        this.lineSegments = new LineSegments(geometry, this.material);\n                        this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                        this.lineSegments.frustumCulled = false;\n                        for (var i = 0; i < MAX_DISPLAYED_SEGMENTS; i++) {\n                            geometry.vertices.push(new Vector3(), new Vector3());\n                            this.freeSegmentsInds.push(i);\n                        }\n                        this.vertices = geometry.vertices;\n                        this.setupSegments();\n                    };\n                    TrendLine.prototype.setupSegments = function() {\n                        var geometry = this.lineSegments.geometry;\n                        var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                        for (var segmentId in this.displayedSegments) {\n                            var lineSegment = this.displayedSegments[segmentId];\n                            var segment_1 = this.trend.segments.segments[lineSegment.segmentId];\n                            var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                            if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                        }\n                        var segment = firstDisplayedSegment;\n                        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                            this.setupSegment(segment.id, segment.currentAnimationState);\n                            segment = segment.getNext();\n                        }\n                        geometry.verticesNeedUpdate = true;\n                    };\n                    TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                        var lineSegment = this.displayedSegments[segmentId];\n                        if (!lineSegment) {\n                            if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                            var ind = this.freeSegmentsInds.pop();\n                            lineSegment = this.displayedSegments[segmentId] = {\n                                segmentId: segmentId,\n                                ind: ind\n                            };\n                        }\n                        var segmentInd = lineSegment.ind;\n                        var lineStartVertex = this.vertices[segmentInd * 2];\n                        var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                        lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                        lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n                    };\n                    TrendLine.prototype.destroySegments = function() {\n                        for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n                    };\n                    TrendLine.prototype.destroySegment = function(segmentId) {\n                        var lineSegment = this.displayedSegments[segmentId];\n                        var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                        var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                        lineStartVertex.set(0, 0, 0);\n                        lineEndVertex.set(0, 0, 0);\n                        delete this.displayedSegments[segmentId];\n                        this.freeSegmentsInds.push(lineSegment.ind);\n                    };\n                    TrendLine.prototype.onZoomFrame = function(options) {\n                        var currentScale = this.lineSegments.scale;\n                        if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                        if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n                    };\n                    TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                        var geometry = this.lineSegments.geometry;\n                        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                            var segmentId = _a[_i];\n                            if (!this.displayedSegments[segmentId]) continue;\n                            this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                        }\n                        geometry.verticesNeedUpdate = true;\n                    };\n                    TrendLine.prototype.toLocalX = function(xVal) {\n                        return xVal - this.chartState.data.xAxis.range.zeroVal;\n                    };\n                    TrendLine.prototype.toLocalY = function(yVal) {\n                        return yVal - this.chartState.data.yAxis.range.zeroVal;\n                    };\n                    TrendLine.prototype.toLocalVec = function(vec) {\n                        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n                    };\n                    return TrendLine;\n                }(TrendsWidget_1.TrendWidget);\n                exports.TrendLine = TrendLine;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var TrendsWidget_1 = __webpack_require__(27);\n                var Object3D = THREE.Object3D;\n                var Geometry = THREE.Geometry;\n                var Vector3 = THREE.Vector3;\n                var Mesh = THREE.Mesh;\n                var Line = THREE.Line;\n                var MeshBasicMaterial = THREE.MeshBasicMaterial;\n                var PlaneGeometry = THREE.PlaneGeometry;\n                var Trend_1 = __webpack_require__(19);\n                var LineBasicMaterial = THREE.LineBasicMaterial;\n                var Utils_1 = __webpack_require__(16);\n                var RISE_COLOR = 2927680;\n                var FALL_COLOR = 15619379;\n                var MARGIN_PERCENT = .3;\n                var MAX_CANDLES = 100;\n                var TrendsCandlesWidget = function(_super) {\n                    __extends(TrendsCandlesWidget, _super);\n                    function TrendsCandlesWidget() {\n                        _super.apply(this, arguments);\n                    }\n                    TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                        return TrendCandlesWidget;\n                    };\n                    TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n                    return TrendsCandlesWidget;\n                }(TrendsWidget_1.TrendsWidget);\n                exports.TrendsCandlesWidget = TrendsCandlesWidget;\n                var TrendCandlesWidget = function(_super) {\n                    __extends(TrendCandlesWidget, _super);\n                    function TrendCandlesWidget(chartState, trendName) {\n                        _super.call(this, chartState, trendName);\n                        this.freeCandlesInds = [];\n                        this.candlesPool = [];\n                        this.candles = {};\n                        this.initObject();\n                    }\n                    TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                        return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n                    };\n                    TrendCandlesWidget.prototype.getObject3D = function() {\n                        return this.object3D;\n                    };\n                    TrendCandlesWidget.prototype.bindEvents = function() {\n                        var _this = this;\n                        _super.prototype.bindEvents.call(this);\n                        this.bindEvent(this.trend.segments.onRebuild(function() {\n                            _this.destroyCandles();\n                            _this.setupCandles();\n                        }));\n                        this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n                            _this.setupCandles();\n                        }));\n                    };\n                    TrendCandlesWidget.prototype.initObject = function() {\n                        var stateData = this.chartState.data;\n                        var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                        var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                        this.scaleXFactor = scaleXFactor;\n                        this.scaleYFactor = scaleYFactor;\n                        this.object3D = new Object3D();\n                        this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                        this.object3D.frustumCulled = false;\n                        for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                        this.setupCandles();\n                    };\n                    TrendCandlesWidget.prototype.setupCandles = function() {\n                        var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                        for (var segmentId in this.candles) {\n                            var segment_1 = this.candles[segmentId].segment;\n                            var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                            if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                        }\n                        var segment = firstDisplayedSegment;\n                        while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                            this.setupCandle(segment.id, segment.currentAnimationState);\n                            segment = segment.getNext();\n                        }\n                    };\n                    TrendCandlesWidget.prototype.destroyCandles = function() {\n                        for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n                    };\n                    TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                        var candle = this.candles[segmentId];\n                        this.object3D.remove(candle.getObject3D());\n                        delete this.candles[segmentId];\n                    };\n                    TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                        var currentScale = this.object3D.scale;\n                        if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                        if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n                    };\n                    TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                        for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                            var segmentId = _a[_i];\n                            if (!this.candles[segmentId]) continue;\n                            var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                            this.setupCandle(segmentId, segmentState);\n                        }\n                    };\n                    TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                        var candleInd = candleId % MAX_CANDLES;\n                        var candle = this.candlesPool[candleInd];\n                        if (!candle) {\n                            candle = this.candlesPool[candleInd] = new CandleWidget();\n                        }\n                        if (!this.candles[candleId]) {\n                            this.candles[candleId] = candle;\n                            this.object3D.add(candle.getObject3D());\n                        }\n                        candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                        candle.setSegment(segmentState);\n                    };\n                    TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                        return xVal - this.chartState.data.xAxis.range.zeroVal;\n                    };\n                    TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                        return yVal - this.chartState.data.yAxis.range.zeroVal;\n                    };\n                    TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                        return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n                    };\n                    return TrendCandlesWidget;\n                }(TrendsWidget_1.TrendWidget);\n                exports.TrendCandlesWidget = TrendCandlesWidget;\n                var CandleWidget = function() {\n                    function CandleWidget() {\n                        this.initObject();\n                    }\n                    CandleWidget.prototype.getObject3D = function() {\n                        return this.rect;\n                    };\n                    CandleWidget.prototype.setSegment = function(segment) {\n                        this.segment = segment;\n                        var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                        var geometry = this.rect.geometry;\n                        var material = this.rect.material;\n                        var width = segment.endXVal - segment.startXVal;\n                        width -= width * MARGIN_PERCENT;\n                        var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                        var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                        leftTop.set(-width / 2, height / 2, 0);\n                        rightTop.set(width / 2, height / 2, 0);\n                        leftBottom.set(-width / 2, -height / 2, 0);\n                        rightBottom.set(width / 2, -height / 2, 0);\n                        if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                            leftBottom.setY(leftBottom.y + 1);\n                            rightBottom.setY(rightBottom.y + 1);\n                        }\n                        material.color.set(color);\n                        geometry.verticesNeedUpdate = true;\n                        var vLineGeometry = this.vLine.geometry;\n                        var vLineMaterial = this.vLine.material;\n                        var lineTop = segment.maxYVal - segment.yVal;\n                        var lineBottom = segment.minYVal - segment.yVal;\n                        vLineGeometry.vertices[0].set(0, lineTop, 0);\n                        vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                        vLineMaterial.color.set(color);\n                        vLineGeometry.verticesNeedUpdate = true;\n                        var hLineGeometry = this.hLine.geometry;\n                        var hLineMaterial = this.hLine.material;\n                        var lineLeft = -width / 2;\n                        var lineRight = width / 2;\n                        hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                        hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                        hLineMaterial.color.set(color);\n                        hLineGeometry.verticesNeedUpdate = true;\n                    };\n                    CandleWidget.prototype.initObject = function() {\n                        this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                        var vLineGeometry = new Geometry();\n                        var hLineGeometry = new Geometry();\n                        vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                        hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                        this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                            linewidth: 1\n                        }));\n                        this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                            linewidth: 1\n                        }));\n                        this.rect.add(this.vLine);\n                        this.rect.add(this.hLine);\n                    };\n                    return CandleWidget;\n                }();\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var __extends = this && this.__extends || function(d, b) {\n                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n                var Utils_1 = __webpack_require__(16);\n                var Mesh = THREE.Mesh;\n                var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n                var MeshBasicMaterial = THREE.MeshBasicMaterial;\n                var TrendsWidget_1 = __webpack_require__(27);\n                var Trend_1 = __webpack_require__(19);\n                var TrendsBeaconWidget = function(_super) {\n                    __extends(TrendsBeaconWidget, _super);\n                    function TrendsBeaconWidget() {\n                        _super.apply(this, arguments);\n                    }\n                    TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                        return TrendBeacon;\n                    };\n                    TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n                    return TrendsBeaconWidget;\n                }(TrendsWidget_1.TrendsWidget);\n                exports.TrendsBeaconWidget = TrendsBeaconWidget;\n                var TrendBeacon = function(_super) {\n                    __extends(TrendBeacon, _super);\n                    function TrendBeacon(state, trendName) {\n                        _super.call(this, state, trendName);\n                        this.initObject();\n                        if (state.data.animations.enabled) {\n                            this.animate();\n                        }\n                        this.updatePosition();\n                    }\n                    TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                        return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n                    };\n                    TrendBeacon.prototype.getObject3D = function() {\n                        return this.mesh;\n                    };\n                    TrendBeacon.prototype.onTrendChange = function() {\n                        this.updatePosition();\n                    };\n                    TrendBeacon.prototype.bindEvents = function() {\n                        var _this = this;\n                        _super.prototype.bindEvents.call(this);\n                        this.bindEvent(this.chartState.onScroll(function() {\n                            return _this.updatePosition();\n                        }));\n                        this.bindEvent(this.chartState.onChange(function(changedProps) {\n                            return _this.onStateChange(changedProps);\n                        }));\n                        this.bindEvent(this.chartState.onDestroy(function() {\n                            return _this.stopAnimation();\n                        }));\n                    };\n                    TrendBeacon.prototype.initObject = function() {\n                        var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                            map: TrendBeacon.createTexture(),\n                            transparent: true\n                        }));\n                        light.scale.set(.2, .2, 1);\n                        light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                            map: TrendBeacon.createTexture()\n                        })));\n                        this.segment = this.trend.segments.getEndSegment();\n                    };\n                    TrendBeacon.prototype.animate = function() {\n                        var _this = this;\n                        this.animated = true;\n                        var object = this.mesh;\n                        var animationObject = {\n                            scale: object.scale.x,\n                            opacity: object.material.opacity\n                        };\n                        this.mesh.scale.set(.1, .1, 1);\n                        setTimeout(function() {\n                            var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                                scale: 1,\n                                opacity: 0\n                            });\n                            animation.eventCallback(\"onUpdate\", function() {\n                                object.scale.set(animationObject.scale, animationObject.scale, 1);\n                                object.material.opacity = animationObject.opacity;\n                            }).eventCallback(\"onComplete\", function() {\n                                _this.animation && animation.restart();\n                            });\n                        }, 500);\n                    };\n                    TrendBeacon.prototype.stopAnimation = function() {\n                        this.animated = false;\n                        this.animation && this.animation.kill();\n                        this.animation = null;\n                    };\n                    TrendBeacon.createTexture = function() {\n                        var h = 32, w = 32;\n                        return Utils_1.Utils.createTexture(h, w, function(ctx) {\n                            ctx.beginPath();\n                            ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                            ctx.fillStyle = \"white\";\n                            ctx.fill();\n                        });\n                    };\n                    TrendBeacon.prototype.onTransformationFrame = function() {\n                        this.segment = this.trend.segments.getEndSegment();\n                        this.updatePosition();\n                    };\n                    TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                        this.segment = trendsSegments.getEndSegment();\n                        this.updatePosition();\n                    };\n                    TrendBeacon.prototype.onStateChange = function(changedProps) {\n                        if (!changedProps.animations) return;\n                        if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                        if (changedProps.animations.enabled) {\n                            this.animate();\n                        } else {\n                            this.stopAnimation();\n                        }\n                    };\n                    TrendBeacon.prototype.updatePosition = function() {\n                        var state = this.chartState;\n                        var xVal, yVal;\n                        var currentAnimationState = this.segment.currentAnimationState;\n                        if (this.trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n                            xVal = currentAnimationState.endXVal;\n                            yVal = currentAnimationState.endYVal;\n                        } else {\n                            xVal = currentAnimationState.xVal;\n                            yVal = currentAnimationState.endYVal;\n                        }\n                        var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n                        var screenWidth = state.data.width;\n                        var x = endPointVector.x;\n                        var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                        if (screenX < 0) x = state.screen.getPointByScreenX(0);\n                        if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n                        this.mesh.position.set(x, endPointVector.y, .1);\n                    };\n                    return TrendBeacon;\n                }(TrendsWidget_1.TrendWidget);\n                exports.TrendBeacon = TrendBeacon;\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                function __export(m) {\n                    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n                }\n                __export(__webpack_require__(3));\n            }, function(module, exports, __webpack_require__) {\n                \"use strict\";\n                var Utils_1 = __webpack_require__(16);\n                var EventEmmiter_1 = __webpack_require__(15);\n                exports.DEFAULT_CONFIG = {\n                    installPluginWidgets: true\n                };\n                var ChartPlugin = function() {\n                    function ChartPlugin(options, config) {\n                        if (config === void 0) {\n                            config = {};\n                        }\n                        this.unsubscribers = [];\n                        this.initialState = options;\n                        this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                        this.name = this.constructor.NAME;\n                        if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n                    }\n                    ChartPlugin.prototype.setupChartState = function(chartState) {\n                        var _this = this;\n                        this.chartState = chartState;\n                        this.ee = new EventEmmiter_1.EventEmitter();\n                        this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n                            return _this.onInitialStateAppliedHandler(initialState);\n                        }), this.chartState.onReady(function() {\n                            return _this.onChartReadyHandler();\n                        }), this.chartState.onDestroy(function() {\n                            return _this.onDestroyHandler();\n                        }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n                            return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                        }));\n                    };\n                    ChartPlugin.prototype.getOptions = function() {\n                        return this.chartState.data.pluginsState[this.name];\n                    };\n                    ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n                    ChartPlugin.prototype.onChartReadyHandler = function() {};\n                    ChartPlugin.prototype.onStateChanged = function(changedState) {};\n                    ChartPlugin.prototype.onDestroyHandler = function() {\n                        this.ee.removeAllListeners();\n                    };\n                    ChartPlugin.prototype.bindEvent = function() {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i - 0] = arguments[_i];\n                        }\n                        var unsubscribers = [];\n                        if (!Array.isArray(args[0])) {\n                            unsubscribers.push(args[0]);\n                        } else {\n                            unsubscribers.push.apply(unsubscribers, args);\n                        }\n                        (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                        var _a;\n                    };\n                    ChartPlugin.prototype.unbindEvents = function() {\n                        this.unsubscribers.forEach(function(unsubscriber) {\n                            return unsubscriber();\n                        });\n                        this.unsubscribers.length = 0;\n                    };\n                    ChartPlugin.NAME = \"\";\n                    ChartPlugin.pluginWidgets = [];\n                    return ChartPlugin;\n                }();\n                exports.ChartPlugin = ChartPlugin;\n            } ]);\n        });\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var three_chart_1 = __webpack_require__(2);\n        var Geometry = THREE.Geometry;\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var TrendsMarksPlugin_1 = __webpack_require__(1);\n        var MAX_MARKS_IN_ROW = 3;\n        var TrendsMarksWidget = function(_super) {\n            __extends(TrendsMarksWidget, _super);\n            function TrendsMarksWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsMarksWidget.prototype.getTrendWidgetClass = function() {\n                return TrendMarksWidget;\n            };\n            TrendsMarksWidget.widgetName = \"TrendsMarks\";\n            return TrendsMarksWidget;\n        }(three_chart_1.TrendsWidget);\n        exports.TrendsMarksWidget = TrendsMarksWidget;\n        var TrendMarksWidget = function(_super) {\n            __extends(TrendMarksWidget, _super);\n            function TrendMarksWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.marksWidgets = {};\n                this.object3D = new Object3D();\n                this.onMarksChange();\n            }\n            TrendMarksWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendMarksWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.getTrendsMarksPlugin().onChange(function() {\n                    return _this.onMarksChange();\n                });\n            };\n            TrendMarksWidget.prototype.getTrendsMarksPlugin = function() {\n                return this.chartState.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\n            };\n            TrendMarksWidget.prototype.onMarksChange = function() {\n                var marksItems = this.getTrendsMarksPlugin().getItems();\n                var widgets = this.marksWidgets;\n                var actualMarksNames = [];\n                for (var markName in marksItems) {\n                    actualMarksNames.push(markName);\n                    if (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n                }\n                for (var markName in this.marksWidgets) {\n                    if (actualMarksNames.indexOf(markName) !== -1) continue;\n                    this.destroyMarkWidget(markName);\n                }\n            };\n            TrendMarksWidget.prototype.createMarkWidget = function(mark) {\n                if (!mark.segment) return;\n                var markWidget = new TrendMarkWidget(this.chartState, mark);\n                this.marksWidgets[mark.options.name] = markWidget;\n                this.object3D.add(markWidget.getObject3D());\n            };\n            TrendMarksWidget.prototype.destroyMarkWidget = function(markName) {\n                this.object3D.remove(this.marksWidgets[markName].getObject3D());\n                delete this.marksWidgets[markName];\n            };\n            TrendMarksWidget.prototype.onZoomFrame = function() {\n                var widgets = this.marksWidgets;\n                for (var markName in widgets) {\n                    widgets[markName].onZoomFrameHandler();\n                }\n            };\n            TrendMarksWidget.prototype.onSegmentsAnimate = function() {\n                var widgets = this.marksWidgets;\n                for (var markName in widgets) {\n                    widgets[markName].onSegmentsAnimate();\n                }\n            };\n            return TrendMarksWidget;\n        }(three_chart_1.TrendWidget);\n        exports.TrendMarksWidget = TrendMarksWidget;\n        var TrendMarkWidget = function() {\n            function TrendMarkWidget(chartState, trendMark) {\n                this.markHeight = 74;\n                this.markWidth = 150;\n                this.position = {\n                    lineHeight: 30,\n                    x: 0,\n                    y: 0\n                };\n                this.chartState = chartState;\n                this.mark = trendMark;\n                this.initObject();\n                this.show();\n            }\n            TrendMarkWidget.prototype.initObject = function() {\n                this.object3D = new Object3D();\n                this.markMesh = this.createMarkMesh();\n                this.line = this.createMarkLine();\n                this.object3D.add(this.markMesh);\n                this.object3D.add(this.line);\n            };\n            TrendMarkWidget.prototype.createMarkMesh = function() {\n                var _a = this, markHeight = _a.markHeight, markWidth = _a.markWidth;\n                var mark = this.mark.options;\n                var isTopSide = mark.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\n                var texture = three_chart_1.Utils.createPixelPerfectTexture(markWidth, markHeight, function(ctx) {\n                    var circleOffset = isTopSide ? 30 : 0;\n                    var circleR = 22;\n                    var circleX = markWidth / 2;\n                    var circleY = circleOffset + circleR;\n                    var textOffset = isTopSide ? 10 : circleR * 2 + 15;\n                    ctx.beginPath();\n                    ctx.textAlign = \"center\";\n                    ctx.font = \"11px Arial\";\n                    ctx.fillStyle = \"rgba(255,255,255, 0.6)\";\n                    ctx.fillText(mark.title, circleX, textOffset);\n                    ctx.fillStyle = mark.descriptionColor;\n                    ctx.fillText(mark.description, circleX, textOffset + 12);\n                    ctx.beginPath();\n                    ctx.fillStyle = mark.iconColor;\n                    ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n                    ctx.fill();\n                    ctx.font = \"19px Arial\";\n                    ctx.fillStyle = \"rgb(255, 255, 255)\";\n                    ctx.fillText(mark.icon, circleX, circleY + 7);\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var mesh = new Mesh(new THREE.PlaneGeometry(markWidth, markHeight), material);\n                var offset = this.mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP ? this.mark.offset : -this.mark.offset;\n                return mesh;\n            };\n            TrendMarkWidget.prototype.createMarkLine = function() {\n                var lineGeometry = new Geometry();\n                lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, this.mark.offset, 0));\n                lineGeometry.computeLineDistances();\n                var lineMaterial = new THREE.LineDashedMaterial({\n                    dashSize: 1,\n                    gapSize: 4,\n                    transparent: true,\n                    opacity: .6\n                });\n                var line = new THREE.Line(lineGeometry, lineMaterial);\n                line.position.setZ(-.1);\n                return line;\n            };\n            TrendMarkWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendMarkWidget.prototype.onSegmentsAnimate = function() {\n                this.updatePosition();\n            };\n            TrendMarkWidget.prototype.onZoomFrameHandler = function() {\n                this.updatePosition();\n            };\n            TrendMarkWidget.prototype.updatePosition = function() {\n                if (!this.mark.segment) return;\n                var mark = this.mark;\n                var meshMaterial = this.markMesh.material;\n                var lineMaterial = this.line.material;\n                if (mark.row >= MAX_MARKS_IN_ROW - 1) {\n                    meshMaterial.opacity = 0;\n                    lineMaterial.opacity = 0;\n                } else {\n                    meshMaterial.opacity = 1;\n                    lineMaterial.opacity = 1;\n                }\n                var screen = this.chartState.screen;\n                var posX = screen.getPointOnXAxis(mark.xVal);\n                var posY = screen.getPointOnYAxis(mark.yVal);\n                var lineGeometry = this.line.geometry;\n                if (mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP) {\n                    this.markMesh.position.setY(this.markHeight / 2 + mark.offset);\n                    lineGeometry.vertices[1].setY(mark.offset);\n                } else {\n                    this.markMesh.position.setY(-mark.offset - this.markHeight / 2);\n                    lineGeometry.vertices[1].setY(-mark.offset);\n                }\n                lineGeometry.verticesNeedUpdate = true;\n                lineGeometry.lineDistancesNeedUpdate = true;\n                lineGeometry.computeLineDistances();\n                this.object3D.position.set(posX, posY, 0);\n            };\n            TrendMarkWidget.prototype.show = function() {\n                if (!this.mark.segment) return;\n                this.updatePosition();\n                var animations = this.chartState.data.animations;\n                var time = animations.enabled ? 1 : 0;\n                this.object3D.scale.set(.01, .01, 1);\n                TweenLite.to(this.object3D.scale, time, {\n                    x: 1,\n                    y: 1,\n                    ease: Elastic.easeOut\n                });\n            };\n            return TrendMarkWidget;\n        }();\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsMarksPlugin.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.js\n ** module id = 36\n ** module chunks = 1\n **/"],"sourceRoot":""}