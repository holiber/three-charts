{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap 7dfde94b86da4dbff473?7cc5","webpack:///./demo/demoApp.ts","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/build/TrendsMarksPlugin/index.js","webpack:///./plugins/build/TrendsMarksPlugin/TrendsMarksPlugin.js","webpack:///./plugins/build/TrendsBeaconWidget/index.js","webpack:///./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js","webpack:///./plugins/build/TrendsLoadingWidget/index.js","webpack:///./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js","webpack:///./plugins/build/TrendsIndicatorWidget/index.js","webpack:///./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","three_charts_1","TrendsMarksPlugin_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","ChartView","preinstalledWidgets","push","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","chartView","DataSourse","data","sec","val","startTime","Date","now","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","MarksSource","generate","descriptionColor","orientation","getRandomItem","TREND_MARK_SIDE","TOP","BOTTOM","trendName","value","title","description","icon","iconColor","window","onload","initListeners","dsMain","dsRed","dsBlue","yAxis","marks","name","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","minSegmentLengthInPx","document","querySelector","TrendsMarksPlugin","items","setState","animations","enabled","mainTrend","getTrend","deadlineMark","chart","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","markOptions","setTimeout","trendsMarks","getPlugin","NAME","createMark","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setInterval","appendData","$checkboxMaintrend","addEventListener","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","state","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","__export","hasOwnProperty","Plugin_1","PerspectiveCamera","THREE","Chart_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","deps_1","Color_1","$container","pluginsAndWidgets","_this","widgets","REVISION","error","style","getComputedStyle","width","parseInt","height","plugins","filter","pluginOrWidget","ChartPlugin","Chart","zoomThrottled","throttle","zoomValue","origin","zoom","init","_a","w","h","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","backgroundColor","ChartColor","setSize","setPixelRatio","devicePixelRatio","setClearColor","a","appendChild","domElement","$el","display","stats","Stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","constructor","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","apply","concat","map","WidgetClass","widget","setupChart","onReadyHandler","add","getObject3D","isDestroyed","begin","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","ev","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","resizeSensor","ResizeSensor","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","onTrendsChange","autoscroll","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","detach","e","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","position","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","preventDefault","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","min","max","autoScrollIsEnabled","CanvasRenderer","WebGLRenderer","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","ee","EventEmitter","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChanged","getOptions","pluginsState","changedState","removeAllListeners","args","_i","arguments","Array","isArray","unsubscriber","deepmerge","target","src","mergeArrays","array","dst","indexOf","Object","keys","key","obj1","obj2","obj","JSON","parse","stringify","toFixed","num","digitsCount","maxDigits","result","intVal","floor","intStr","toString","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","split","substr","createTexture","fn","canvas","createElement","ctx","getContext","texture","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","console","warn","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","s","copyProps","srcObject","dstObject","props","excludeProps","isPlainObject","TweenLite","TweenMax","EE2","es6_promise_1","Promise","dom","k","d","children","l","cssText","g","performance","r","Panel","f","self","memory","t","addPanel","showPanel","update","usedJSHeapSize","jsHeapSizeLimit","setMode","Infinity","u","n","q","b","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","drawImage","isObject","isObjectObject","o","ctor","prot","__WEBPACK_AMD_DEFINE_RESULT__","undefined","_isArray","defaultMaxListeners","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","**","growListenerTree","listener","slice","shift","warned","trace","setMaxListeners","event","once","many","ttl","Error","off","_origin","on","emit","_all","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","listenersAny","EventEmitter2","element","callback","EventQueue","j","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","className","styleChild","innerHTML","fixed","absolute","expand","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","el","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","removeChild","eventName","subscribe","listenersCount","Vector3","Trend_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","LIGHT_BLUE","ALL","NUMBER","grid","minSizePx","color","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","zoomEase","scrollSpeed","scrollEase","Linear","easeNone","autoScrollSpeed","autoScrollEase","maxSegmentLength","lineWidth","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onChange","onTrendChange","onZoom","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","changedTrends","newData","handleTrendsChange","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","abs","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","chartState","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","complete","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","_loop_1","this_1","scrollXVal","scrollYVal","zoomX","zoomY","currentScrollX","currentScrollY","currentZoomX","currentZoomY","transform","vFOV","PI","tan","onZoomFrame","onScrollFrame","log","cameraIsMoving","scrollXAnimation","zoomXAnimation","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","scrollYAnimation","zoomYAnimation","isDragMode","canAnimate","zoomXChanged","isAutoscroll","pause","targetX","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","__extends","__","create","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","_super","unbindList","unbindEvent","widgetName","Mesh","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","axisOptions","traverse","beginPath","rgbaStr","strokeStyle","material","MeshBasicMaterial","side","FrontSide","transparent","axisMesh","PlaneGeometry","axisGridParams","getGridParamsForAxis","geometry","parameters","image","clearRect","edgeOffset","segmentsCount","step","pxVal","textAlign","getDateStr","stroke","closePath","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","LineSegments","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","Geometry","LineBasicMaterial","linewidth","opacity","xLinesCount","yLinesCount","vertices","lineSegments","setZ","frustumCulled","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","scale","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","pow","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","parseColor","cache","replace","exec","isNaN","colorStr","rgba","hexStr","TrendsWidget_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","faces","Face3","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","unbind","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","Line","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","require","__WEBPACK_EXTERNAL_MODULE_2__","TrendsMarksWidget_1","offset","trendsMarksPluginOptions","rects","onMarksChangeHandler","marksOptions","newMarkOptions","updateMarksSegments","calclulateMarksPositions","trendsMarksOptions","actualMarksNames","trendsMarksOptions_1","TrendMark","createMarkRect","left","top","isTopSideMark","newOffset","row","markRect","hasIntersection","_setOffset","_setRow","getTrendMarks","marksArr","xVals","_setSegment","sort","points","markInd","trendMarks","TrendsMarksWidget","MAX_MARKS_IN_ROW","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onZoomFrameHandler","trendMark","markHeight","markWidth","lineHeight","show","markMesh","createMarkMesh","line","createMarkLine","isTopSide","circleOffset","circleR","circleX","circleY","textOffset","arc","fill","mesh","lineGeometry","computeLineDistances","lineMaterial","LineDashedMaterial","dashSize","gapSize","updatePosition","meshMaterial","posX","posY","lineDistancesNeedUpdate","Elastic","easeOut","PlaneBufferGeometry","TrendBeacon","onStateChange","stopAnimation","light","animated","object","animationObject","restart","trendsSegments","endPointVector","screenWidth","TrendLoading","deactivate","activate","rotation","center","pointVector","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(31);\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(33);\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(35);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(37);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(39);\r\n\tthree_charts_1.ChartView.preinstalledWidgets.push(TrendsLoadingWidget_1.TrendsLoadingWidget, TrendsBeaconWidget_1.TrendsBeaconWidget, TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\tvar chartView;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\tvar MarksSource = (function () {\r\n\t    function MarksSource() {\r\n\t    }\r\n\t    MarksSource.getNext = function (val) {\r\n\t        if (Math.random() > 0.2)\r\n\t            return null;\r\n\t        return this.generate(val);\r\n\t    };\r\n\t    MarksSource.generate = function (val) {\r\n\t        var descriptionColor = 'rgb(40,136,75)';\r\n\t        var orientation = three_charts_1.Utils.getRandomItem([TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP, TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM]);\r\n\t        if (orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.BOTTOM) {\r\n\t            descriptionColor = 'rgb(219,73,49)';\r\n\t        }\r\n\t        return {\r\n\t            trendName: 'main',\r\n\t            value: val,\r\n\t            title: three_charts_1.Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\r\n\t            description: three_charts_1.Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t            icon: three_charts_1.Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t            iconColor: three_charts_1.Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\r\n\t            orientation: orientation,\r\n\t            descriptionColor: descriptionColor\r\n\t        };\r\n\t    };\r\n\t    return MarksSource;\r\n\t}());\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    chartView = new three_charts_1.ChartView({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 200, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {\r\n\t                    minSegmentLengthInPx: 10\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'), [\r\n\t        new TrendsMarksPlugin_1.TrendsMarksPlugin({ items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)] })\r\n\t    ]);\r\n\t    chartView.setState({ animations: { enabled: false } });\r\n\t    chartView.setState({ animations: { enabled: true } });\r\n\t    window['chartView'] = chartView;\r\n\t    var mainTrend = chartView.getTrend('main');\r\n\t    var deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chartView.chart.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        if (markOptions)\r\n\t            setTimeout(function () {\r\n\t                var trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t                trendsMarks.createMark(markOptions);\r\n\t            }, 500);\r\n\t    });\r\n\t    // var previewChart1 = ChartView.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-state')[0],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.state, hasBeacon: true}\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart2 = ChartView.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-state')[1],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.state, hasBeacon: true}\r\n\t    // \t},\r\n\t    //\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart3 = ChartView.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-state')[2],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.state, hasBeacon: true},\r\n\t    // \t\t'red': {dataset: dsRed.state, lineColor: 0xFF2222},\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    var i = 0;\r\n\t    chartView.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chartView.getTrend('main').appendData([val]);\r\n\t        // state.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\r\n\t        // state.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // state.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // state.getTrend('red').appendData([val + 10 + Math.random() * 20]);\r\n\t        // state.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.getTrend('main').appendData([val]);\r\n\t        // previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\r\n\t        // previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.appendData(dataToAppend1);\r\n\t        //\r\n\t        // var chartData2 = previewChart2.state.state.trends[0].state;\r\n\t        // var lastItem2 = chartData2[chartData.length - 1];\r\n\t        // var dataToAppend2 = [\r\n\t        // \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\r\n\t        // ];\r\n\t        // previewChart2.appendData(dataToAppend2);\r\n\t        // previewChart3.appendData(dataToAppend2);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chartView.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chartView.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chartView.chart.state.xAxis.range;\r\n\t        chartView.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chartView.chart.setState({ autoScroll: false });\r\n\t            chartView.chart.zoomToRange(range);\r\n\t            chartView.chart.scrollToEnd().then(function () {\r\n\t                chartView.chart.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(32)\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(13));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(4));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(3));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(29));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Plugin_1 = __webpack_require__(3);\n\t        __webpack_require__(5);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var Chart_1 = __webpack_require__(13);\n\t        var Widget_1 = __webpack_require__(20);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var AxisWidget_1 = __webpack_require__(21);\n\t        var GridWidget_1 = __webpack_require__(22);\n\t        var TrendsGradientWidget_1 = __webpack_require__(24);\n\t        var TrendsLineWidget_1 = __webpack_require__(26);\n\t        var TrendsCandleWidget_1 = __webpack_require__(27);\n\t        var deps_1 = __webpack_require__(28);\n\t        var Color_1 = __webpack_require__(23);\n\t        var ChartView = function() {\n\t            function ChartView(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.chart = new Chart_1.Chart(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            ChartView.prototype.init = function($container) {\n\t                var chart = this.chart;\n\t                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                var backgroundColor = new Color_1.ChartColor(chart.state.backgroundColor);\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(ChartView.devicePixelRatio);\n\t                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            ChartView.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChart(_this.chart);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            ChartView.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.chart.state.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            ChartView.prototype.render = function() {\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            ChartView.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            ChartView.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            ChartView.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.chart.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            ChartView.prototype.getState = function() {\n\t                return this.chart.state;\n\t            };\n\t            ChartView.prototype.getTrend = function(trendName) {\n\t                return this.chart.getTrend(trendName);\n\t            };\n\t            ChartView.prototype.setState = function(state) {\n\t                return this.chart.setState(state);\n\t            };\n\t            ChartView.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.chart.state.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.chart.state.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.chart.onTrendsChange(function() {\n\t                    return _this.autoscroll();\n\t                }), this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.chart.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            ChartView.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            ChartView.prototype.setupCamera = function() {\n\t                var camSettings = this.chart.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.chart.screen.options);\n\t            };\n\t            ChartView.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            ChartView.prototype.autoscroll = function() {\n\t                var state = this.chart;\n\t                if (!state.state.autoScroll) return;\n\t                var oldTrendsMaxX = state.state.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.state.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleX = this.chart.screen.getScreenRightVal();\n\t                    var paddingRightX = this.chart.getPaddingRight();\n\t                    var currentScroll = state.state.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = trendsMaxXDelta;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartView.prototype.onScrollStop = function() {};\n\t            ChartView.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onMouseMove = function(ev) {\n\t                if (this.chart.state.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            ChartView.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.chart.state.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            ChartView.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            ChartView.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            ChartView.prototype.onChartResize = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            ChartView.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var _this = this;\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                var autoScrollIsEnabled = this.chart.state.autoScroll;\n\t                if (autoScrollIsEnabled) this.chart.setState({\n\t                    autoScroll: false\n\t                });\n\t                this.chart.zoom(zoomValue, zoomOrigin).then(function() {\n\t                    if (autoScrollIsEnabled) _this.setState({\n\t                        autoScroll: true\n\t                    });\n\t                });\n\t            };\n\t            ChartView.devicePixelRatio = window.devicePixelRatio;\n\t            ChartView.preinstalledWidgets = [];\n\t            ChartView.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return ChartView;\n\t        }();\n\t        exports.ChartView = ChartView;\n\t        ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(4);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChart = function(chart) {\n\t                var _this = this;\n\t                this.chart = chart;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chart.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chart.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chart.state.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(5);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(6);\n\t        exports.isPlainObject = __webpack_require__(7);\n\t        exports.EE2 = __webpack_require__(9);\n\t        var es6_promise_1 = __webpack_require__(10);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(11);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(8);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(5);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsManager_1 = __webpack_require__(16);\n\t        var Screen_1 = __webpack_require__(17);\n\t        var AxisMarks_1 = __webpack_require__(18);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var deps_1 = __webpack_require__(5);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            SCROLL_STOP: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var LIGHT_BLUE = \"#5273bd\";\n\t        var Chart = function() {\n\t            function Chart(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.state = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        autoScroll: true,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50,\n\t                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        marks: [],\n\t                        color: LIGHT_BLUE\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: .25,\n\t                        zoomEase: void 0,\n\t                        scrollSpeed: .5,\n\t                        scrollEase: Linear.easeNone,\n\t                        autoScrollSpeed: 1,\n\t                        autoScrollEase: Linear.easeNone\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: true,\n\t                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    font: {\n\t                        s: \"11px Arial\",\n\t                        m: \"12px Arial\",\n\t                        l: \"13px Arial\"\n\t                    },\n\t                    backgroundColor: 3114,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.initListeners();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            Chart.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.state = {};\n\t            };\n\t            Chart.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            Chart.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            Chart.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            Chart.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            Chart.prototype.onScrollStop = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t            };\n\t            Chart.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            Chart.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            Chart.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            Chart.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            Chart.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var stateData = this.state;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (stateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.state.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            Chart.prototype.recalculateState = function(changedProps) {\n\t                var data = this.state;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            Chart.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            Chart.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.state;\n\t                var prevState = this.state.prevState;\n\t                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.state.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            Chart.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChart(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            Chart.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            Chart.prototype.initListeners = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t            };\n\t            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t            };\n\t            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            Chart.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.state.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                var nextRange = this.state.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.state.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            Chart.prototype.scrollToEnd = function() {\n\t                var _this = this;\n\t                var state = this.state;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.state.animations.enabled ? _this.state.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            Chart.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Chart.prototype.getValueOnXAxis = function(x) {\n\t                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n\t            };\n\t            Chart.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n\t            };\n\t            Chart.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            Chart.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            Chart.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            Chart.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Chart.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Chart.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            Chart.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.state.width);\n\t            };\n\t            Chart.prototype.getPaddingRight = function() {\n\t                return this.getValueByScreenX(this.state.width - this.state.xAxis.range.padding.end);\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendSegmentsManager_1 = __webpack_require__(15);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var deps_1 = __webpack_require__(5);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chartState = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.state.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.onInitialStateApplied = function() {\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\n\t            };\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chartState;\n\t                chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateApplied();\n\t                });\n\t                chartState.onScrollStop(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chartState.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chartState.state.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chartState.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chartState;\n\t                var minXVal = chartState.state.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chartState, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.chartState.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                });\n\t                this.chartState.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chartState.state.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chartState.state.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(14);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t                this.bindEvents();\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                });\n\t            };\n\t            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                var _this = this;\n\t                var _loop_1 = function(trendName) {\n\t                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n\t                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                    });\n\t                };\n\t                var this_1 = this;\n\t                for (var trendName in this.trends) {\n\t                    _loop_1(trendName);\n\t                }\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.currentScrollX = {\n\t                    x: 0\n\t                };\n\t                this.currentScrollY = {\n\t                    y: 0\n\t                };\n\t                this.currentZoomX = {\n\t                    val: 1\n\t                };\n\t                this.currentZoomY = {\n\t                    val: 1\n\t                };\n\t                this.chartState = chartState;\n\t                var _a = chartState.state, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chartState.state.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chartState.state, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"zoomFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"scrollFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t\t\t\t\tconsole.log(cb.toString());\n\t                var _this = this;\n\t                var eventName = \"transformationFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                this.ee.emit(\"transformationFrame\", options);\n\t                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t                    this.ee.emit(\"scrollFrame\", options);\n\t                }\n\t                if (options.zoomX != void 0 || options.zoomY != void 0) {\n\t                    this.ee.emit(\"zoomFrame\", options);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.scrollXAnimation && this.scrollXAnimation.kill();\n\t                this.scrollYAnimation && this.scrollYAnimation.kill();\n\t                this.zoomXAnimation && this.zoomXAnimation.kill();\n\t                this.zoomYAnimation && this.zoomYAnimation.kill();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var isDragMode = state.state.cursor.dragMode;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled && !isDragMode;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = state.state.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n\t                var range = state.state.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollX.x = this.options.scrollX;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollX: _this.currentScrollX.x\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t                        x: targetX,\n\t                        ease: ease\n\t                    });\n\t                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollX.x = targetX;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t                var range = state.state.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollY.y = this.options.scrollY;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollY: _this.currentScrollY.y\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t                        y: targetY,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollY.y = targetY;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.state.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomX: _this.currentZoomX.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomX.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.state.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.state.yAxis.range.zoom;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomY: _this.currentZoomY.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomY.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chartState.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chartState.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chartState.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chartState.state.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chartState.state.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chartState.state.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chartState.state.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chartState.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chartState.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chartState.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chartState.state.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chartState.state.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chartState.state.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chartState.state.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(4);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var EventEmmiter_1 = __webpack_require__(12);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChart = function(chart) {\n\t                this.chart = chart;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(20);\n\t        var GridWidget_1 = __webpack_require__(22);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var interfaces_1 = __webpack_require__(19);\n\t        var Color_1 = __webpack_require__(23);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                var axisOptions;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                    axisOptions = this.chart.state.xAxis;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                    axisOptions = this.chart.state.yAxis;\n\t                }\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    var color = new Color_1.ChartColor(axisOptions.color);\n\t                    ctx.beginPath();\n\t                    ctx.font = _this.chart.state.font.m;\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = color.rgbaStr;\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chart.state.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chart.state.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(20);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var Color_1 = __webpack_require__(23);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chart.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chart.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chart.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var color = new Color_1.ChartColor(this.chart.state.xAxis.grid.color);\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    color: color.value,\n\t                    opacity: color.a,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chart;\n\t                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartColor = function() {\n\t            function ChartColor(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            ChartColor.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            ChartColor.prototype.set = function(color) {\n\t                if (typeof color == \"number\") {\n\t                    color = color.toString(16);\n\t                    color = \"#\" + \"0\".repeat(6 - color.length) + color;\n\t                }\n\t                var colorStr = color;\n\t                var rgba = ChartColor.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = \"#\" + this.value.toString(16);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            return ChartColor;\n\t        }();\n\t        exports.ChartColor = ChartColor;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsWidget_1 = __webpack_require__(25);\n\t        var Color_1 = __webpack_require__(23);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(20);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chart;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chart.state.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chart.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chart, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chart, trendName) {\n\t                this.chart = chart;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chart.trendsManager.getTrend(trendName);\n\t                this.chart = chart;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chart.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(25);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chart.state;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(25);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(14);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chart.state;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chart.state.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chart.state.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(5));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(25));\n\t        __export(__webpack_require__(26));\n\t        __export(__webpack_require__(24));\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(34)\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(31)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsMarksPlugin\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsMarksPlugin\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(5));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, , , function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsMarksWidget_1 = __webpack_require__(6);\n\t        (function(TREND_MARK_SIDE) {\n\t            TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\n\t            TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\n\t        })(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\n\t        var TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\n\t        (function(EVENTS) {\n\t            EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\n\t        })(exports.EVENTS || (exports.EVENTS = {}));\n\t        var EVENTS = exports.EVENTS;\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            trendName: \"\",\n\t            title: \"\",\n\t            description: \"\",\n\t            descriptionColor: \"rgb(40,136,75)\",\n\t            value: 0,\n\t            iconColor: \"rgb(255, 102, 217)\",\n\t            orientation: TREND_MARK_SIDE.TOP,\n\t            width: 65,\n\t            height: 80,\n\t            offset: 40,\n\t            margin: 20\n\t        };\n\t        var TrendsMarksPlugin = function(_super) {\n\t            __extends(TrendsMarksPlugin, _super);\n\t            function TrendsMarksPlugin(trendsMarksPluginOptions) {\n\t                _super.call(this, trendsMarksPluginOptions);\n\t                this.items = {};\n\t                this.rects = {};\n\t            }\n\t            TrendsMarksPlugin.prototype.onInitialStateApplied = function() {\n\t                this.bindEvents();\n\t                this.onMarksChangeHandler();\n\t            };\n\t            TrendsMarksPlugin.prototype.onStateChanged = function() {\n\t                this.onMarksChangeHandler();\n\t            };\n\t            TrendsMarksPlugin.prototype.getOptions = function() {\n\t                return _super.prototype.getOptions.call(this);\n\t            };\n\t            TrendsMarksPlugin.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            TrendsMarksPlugin.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            TrendsMarksPlugin.prototype.createMark = function(options) {\n\t                var marksOptions = this.getOptions().items;\n\t                var newMarkOptions = marksOptions.concat([ options ]);\n\t                this.chart.setState({\n\t                    pluginsState: (_a = {}, _a[this.name] = {\n\t                        items: newMarkOptions\n\t                    }, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            TrendsMarksPlugin.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t            };\n\t            TrendsMarksPlugin.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chart.trendsManager.onSegmentsRebuilded(function() {\n\t                    return _this.updateMarksSegments();\n\t                });\n\t                this.chart.screen.onZoomFrame(function() {\n\t                    return _this.calclulateMarksPositions();\n\t                });\n\t            };\n\t            TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function() {\n\t                this.onMarksChangeHandler();\n\t            };\n\t            TrendsMarksPlugin.prototype.onMarksChangeHandler = function() {\n\t                var trendsMarksOptions = this.getOptions().items;\n\t                var actualMarksNames = [];\n\t                for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\n\t                    var options = trendsMarksOptions_1[_i];\n\t                    var marks = this.items;\n\t                    if (!options.name) {\n\t                        options.name = three_charts_1.Utils.getUid().toString();\n\t                        actualMarksNames.push(options.name);\n\t                        if (marks[options.name]) three_charts_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    } else if (marks[options.name]) {\n\t                        actualMarksNames.push(options.name);\n\t                        continue;\n\t                    }\n\t                    options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    var mark = new TrendMark(this.chart, options);\n\t                    marks[options.name] = mark;\n\t                }\n\t                for (var markName in this.items) {\n\t                    if (actualMarksNames.indexOf(markName) != -1) continue;\n\t                    delete this.items[markName];\n\t                }\n\t                this.updateMarksSegments();\n\t                this.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t            };\n\t            TrendsMarksPlugin.prototype.calclulateMarksPositions = function() {\n\t                this.rects = {};\n\t                for (var markName in this.items) {\n\t                    this.createMarkRect(this.items[markName]);\n\t                }\n\t            };\n\t            TrendsMarksPlugin.prototype.createMarkRect = function(mark) {\n\t                if (!mark.segment) return;\n\t                var chart = this.chart;\n\t                var options = mark.options;\n\t                var width = options.width, height = options.height, offset = options.offset, name = options.name;\n\t                var left = chart.getPointOnXAxis(mark.xVal) - width / 2;\n\t                var top = chart.getPointOnYAxis(mark.yVal);\n\t                var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t                var newOffset;\n\t                var row = 0;\n\t                if (isTopSideMark) {\n\t                    top += offset + height;\n\t                } else {\n\t                    top -= offset;\n\t                }\n\t                var markRect = [ left, top, width, height ];\n\t                var hasIntersection = false;\n\t                do {\n\t                    for (var markName in this.rects) {\n\t                        var rect = this.rects[markName];\n\t                        hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\n\t                        if (!hasIntersection) continue;\n\t                        if (isTopSideMark) {\n\t                            markRect[1] = rect[1] + markRect[3] + options.margin;\n\t                        } else {\n\t                            markRect[1] = rect[1] - rect[3] - options.margin;\n\t                        }\n\t                        row++;\n\t                        break;\n\t                    }\n\t                } while (hasIntersection);\n\t                if (isTopSideMark) {\n\t                    newOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\n\t                } else {\n\t                    newOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\n\t                }\n\t                mark._setOffset(newOffset);\n\t                mark._setRow(row);\n\t                this.rects[name] = markRect;\n\t            };\n\t            TrendsMarksPlugin.prototype.updateMarksSegments = function() {\n\t                var chart = this.chart;\n\t                var trends = chart.trendsManager.trends;\n\t                for (var trendName in trends) {\n\t                    var marks = this.getTrendMarks(trendName);\n\t                    var marksArr = [];\n\t                    var xVals = [];\n\t                    for (var markName in marks) {\n\t                        var mark = marks[markName];\n\t                        xVals.push(mark.options.value);\n\t                        marksArr.push(mark);\n\t                        mark._setSegment(null);\n\t                    }\n\t                    marksArr.sort(function(a, b) {\n\t                        return a.options.value - b.options.value;\n\t                    });\n\t                    var trend = chart.getTrend(trendName);\n\t                    var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function(a, b) {\n\t                        return a - b;\n\t                    }));\n\t                    for (var markInd = 0; markInd < marksArr.length; markInd++) {\n\t                        marksArr[markInd]._setSegment(points[markInd]);\n\t                    }\n\t                }\n\t                this.calclulateMarksPositions();\n\t            };\n\t            TrendsMarksPlugin.prototype.getTrendMarks = function(trendName) {\n\t                var trendMarks = [];\n\t                for (var markName in this.items) {\n\t                    if (this.items[markName].options.trendName != trendName) continue;\n\t                    trendMarks.push(this.items[markName]);\n\t                }\n\t                return trendMarks;\n\t            };\n\t            TrendsMarksPlugin.NAME = \"TrendsMarks\";\n\t            TrendsMarksPlugin.providedWidgets = [ TrendsMarksWidget_1.TrendsMarksWidget ];\n\t            return TrendsMarksPlugin;\n\t        }(three_charts_1.ChartPlugin);\n\t        exports.TrendsMarksPlugin = TrendsMarksPlugin;\n\t        var TrendMark = function() {\n\t            function TrendMark(chart, options) {\n\t                this.row = 0;\n\t                this.options = options;\n\t                this.chart = chart;\n\t            }\n\t            TrendMark.prototype._setSegment = function(segment) {\n\t                this.segment = segment;\n\t                if (!segment) return;\n\t                var trend = this.chart.getTrend(this.options.trendName);\n\t                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    this.xVal = segment.endXVal;\n\t                    this.yVal = segment.endYVal;\n\t                } else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t                    this.xVal = segment.xVal;\n\t                    this.yVal = segment.maxYVal;\n\t                } else {\n\t                    this.xVal = segment.xVal;\n\t                    this.yVal = segment.minYVal;\n\t                }\n\t            };\n\t            TrendMark.prototype._setOffset = function(offset) {\n\t                this.offset = offset;\n\t            };\n\t            TrendMark.prototype._setRow = function(row) {\n\t                this.row = row;\n\t            };\n\t            return TrendMark;\n\t        }();\n\t        exports.TrendMark = TrendMark;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var Geometry = THREE.Geometry;\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsMarksPlugin_1 = __webpack_require__(5);\n\t        var MAX_MARKS_IN_ROW = 3;\n\t        var TrendsMarksWidget = function(_super) {\n\t            __extends(TrendsMarksWidget, _super);\n\t            function TrendsMarksWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsMarksWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendMarksWidget;\n\t            };\n\t            TrendsMarksWidget.widgetName = \"TrendsMarks\";\n\t            return TrendsMarksWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsMarksWidget = TrendsMarksWidget;\n\t        var TrendMarksWidget = function(_super) {\n\t            __extends(TrendMarksWidget, _super);\n\t            function TrendMarksWidget(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.marksWidgets = {};\n\t                this.object3D = new Object3D();\n\t                this.onMarksChange();\n\t            }\n\t            TrendMarksWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendMarksWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.getTrendsMarksPlugin().onChange(function() {\n\t                    return _this.onMarksChange();\n\t                });\n\t            };\n\t            TrendMarksWidget.prototype.getTrendsMarksPlugin = function() {\n\t                return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\n\t            };\n\t            TrendMarksWidget.prototype.onMarksChange = function() {\n\t                var marksItems = this.getTrendsMarksPlugin().getItems();\n\t                var widgets = this.marksWidgets;\n\t                var actualMarksNames = [];\n\t                for (var markName in marksItems) {\n\t                    actualMarksNames.push(markName);\n\t                    if (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t                }\n\t                for (var markName in this.marksWidgets) {\n\t                    if (actualMarksNames.indexOf(markName) !== -1) continue;\n\t                    this.destroyMarkWidget(markName);\n\t                }\n\t            };\n\t            TrendMarksWidget.prototype.createMarkWidget = function(mark) {\n\t                if (!mark.segment) return;\n\t                var markWidget = new TrendMarkWidget(this.chart, mark);\n\t                this.marksWidgets[mark.options.name] = markWidget;\n\t                this.object3D.add(markWidget.getObject3D());\n\t            };\n\t            TrendMarksWidget.prototype.destroyMarkWidget = function(markName) {\n\t                this.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t                delete this.marksWidgets[markName];\n\t            };\n\t            TrendMarksWidget.prototype.onZoomFrame = function() {\n\t                var widgets = this.marksWidgets;\n\t                for (var markName in widgets) {\n\t                    widgets[markName].onZoomFrameHandler();\n\t                }\n\t            };\n\t            TrendMarksWidget.prototype.onSegmentsAnimate = function() {\n\t                var widgets = this.marksWidgets;\n\t                for (var markName in widgets) {\n\t                    widgets[markName].onSegmentsAnimate();\n\t                }\n\t            };\n\t            return TrendMarksWidget;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendMarksWidget = TrendMarksWidget;\n\t        var TrendMarkWidget = function() {\n\t            function TrendMarkWidget(chart, trendMark) {\n\t                this.markHeight = 74;\n\t                this.markWidth = 150;\n\t                this.position = {\n\t                    lineHeight: 30,\n\t                    x: 0,\n\t                    y: 0\n\t                };\n\t                this.chart = chart;\n\t                this.mark = trendMark;\n\t                this.initObject();\n\t                this.show();\n\t            }\n\t            TrendMarkWidget.prototype.initObject = function() {\n\t                this.object3D = new Object3D();\n\t                this.markMesh = this.createMarkMesh();\n\t                this.line = this.createMarkLine();\n\t                this.object3D.add(this.markMesh);\n\t                this.object3D.add(this.line);\n\t            };\n\t            TrendMarkWidget.prototype.createMarkMesh = function() {\n\t                var _a = this, markHeight = _a.markHeight, markWidth = _a.markWidth;\n\t                var mark = this.mark.options;\n\t                var isTopSide = mark.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\n\t                var texture = three_charts_1.Utils.createPixelPerfectTexture(markWidth, markHeight, function(ctx) {\n\t                    var circleOffset = isTopSide ? 30 : 0;\n\t                    var circleR = 22;\n\t                    var circleX = markWidth / 2;\n\t                    var circleY = circleOffset + circleR;\n\t                    var textOffset = isTopSide ? 10 : circleR * 2 + 15;\n\t                    ctx.beginPath();\n\t                    ctx.textAlign = \"center\";\n\t                    ctx.font = \"11px Arial\";\n\t                    ctx.fillStyle = \"rgba(255,255,255, 0.6)\";\n\t                    ctx.fillText(mark.title, circleX, textOffset);\n\t                    ctx.fillStyle = mark.descriptionColor;\n\t                    ctx.fillText(mark.description, circleX, textOffset + 12);\n\t                    ctx.beginPath();\n\t                    ctx.fillStyle = mark.iconColor;\n\t                    ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n\t                    ctx.fill();\n\t                    ctx.font = \"19px Arial\";\n\t                    ctx.fillStyle = \"rgb(255, 255, 255)\";\n\t                    ctx.fillText(mark.icon, circleX, circleY + 7);\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var mesh = new Mesh(new THREE.PlaneGeometry(markWidth, markHeight), material);\n\t                var offset = this.mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP ? this.mark.offset : -this.mark.offset;\n\t                return mesh;\n\t            };\n\t            TrendMarkWidget.prototype.createMarkLine = function() {\n\t                var lineGeometry = new Geometry();\n\t                lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, this.mark.offset, 0));\n\t                lineGeometry.computeLineDistances();\n\t                var lineMaterial = new THREE.LineDashedMaterial({\n\t                    dashSize: 1,\n\t                    gapSize: 4,\n\t                    transparent: true,\n\t                    opacity: .6\n\t                });\n\t                var line = new THREE.Line(lineGeometry, lineMaterial);\n\t                line.position.setZ(-.1);\n\t                return line;\n\t            };\n\t            TrendMarkWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendMarkWidget.prototype.onSegmentsAnimate = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendMarkWidget.prototype.onZoomFrameHandler = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendMarkWidget.prototype.updatePosition = function() {\n\t                if (!this.mark.segment) return;\n\t                var mark = this.mark;\n\t                var meshMaterial = this.markMesh.material;\n\t                var lineMaterial = this.line.material;\n\t                if (mark.row >= MAX_MARKS_IN_ROW - 1) {\n\t                    meshMaterial.opacity = 0;\n\t                    lineMaterial.opacity = 0;\n\t                } else {\n\t                    meshMaterial.opacity = 1;\n\t                    lineMaterial.opacity = 1;\n\t                }\n\t                var screen = this.chart.screen;\n\t                var posX = screen.getPointOnXAxis(mark.xVal);\n\t                var posY = screen.getPointOnYAxis(mark.yVal);\n\t                var lineGeometry = this.line.geometry;\n\t                if (mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP) {\n\t                    this.markMesh.position.setY(this.markHeight / 2 + mark.offset);\n\t                    lineGeometry.vertices[1].setY(mark.offset);\n\t                } else {\n\t                    this.markMesh.position.setY(-mark.offset - this.markHeight / 2);\n\t                    lineGeometry.vertices[1].setY(-mark.offset);\n\t                }\n\t                lineGeometry.verticesNeedUpdate = true;\n\t                lineGeometry.lineDistancesNeedUpdate = true;\n\t                lineGeometry.computeLineDistances();\n\t                this.object3D.position.set(posX, posY, 0);\n\t            };\n\t            TrendMarkWidget.prototype.show = function() {\n\t                if (!this.mark.segment) return;\n\t                this.updatePosition();\n\t                var animations = this.chart.state.animations;\n\t                var time = animations.enabled ? 1 : 0;\n\t                this.object3D.scale.set(.01, .01, 1);\n\t                TweenLite.to(this.object3D.scale, time, {\n\t                    x: 1,\n\t                    y: 1,\n\t                    ease: Elastic.easeOut\n\t                });\n\t            };\n\t            return TrendMarkWidget;\n\t        }();\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsMarksPlugin.js.map\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(36)\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(31)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsBeaconWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsBeaconWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsBeaconWidget = function(_super) {\n\t            __extends(TrendsBeaconWidget, _super);\n\t            function TrendsBeaconWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendBeacon;\n\t            };\n\t            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t            return TrendsBeaconWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t        var TrendBeacon = function(_super) {\n\t            __extends(TrendBeacon, _super);\n\t            function TrendBeacon(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.initObject();\n\t                if (chart.state.animations.enabled) {\n\t                    this.animate();\n\t                }\n\t                this.updatePosition();\n\t            }\n\t            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendBeacon.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendBeacon.prototype.onTrendChange = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.chart.onScroll(function() {\n\t                    return _this.updatePosition();\n\t                }));\n\t                this.bindEvent(this.chart.onChange(function(changedProps) {\n\t                    return _this.onStateChange(changedProps);\n\t                }));\n\t                this.bindEvent(this.chart.onDestroy(function() {\n\t                    return _this.stopAnimation();\n\t                }));\n\t            };\n\t            TrendBeacon.prototype.initObject = function() {\n\t                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                light.scale.set(.2, .2, 1);\n\t                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture()\n\t                })));\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t            };\n\t            TrendBeacon.prototype.animate = function() {\n\t                var _this = this;\n\t                this.animated = true;\n\t                var object = this.mesh;\n\t                var animationObject = {\n\t                    scale: object.scale.x,\n\t                    opacity: object.material.opacity\n\t                };\n\t                this.mesh.scale.set(.1, .1, 1);\n\t                setTimeout(function() {\n\t                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                        scale: 1,\n\t                        opacity: 0\n\t                    });\n\t                    animation.eventCallback(\"onUpdate\", function() {\n\t                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                        object.material.opacity = animationObject.opacity;\n\t                    }).eventCallback(\"onComplete\", function() {\n\t                        _this.animation && animation.restart();\n\t                    });\n\t                }, 500);\n\t            };\n\t            TrendBeacon.prototype.stopAnimation = function() {\n\t                this.animated = false;\n\t                this.animation && this.animation.kill();\n\t                this.animation = null;\n\t            };\n\t            TrendBeacon.createTexture = function() {\n\t                var h = 32, w = 32;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                    ctx.fillStyle = \"white\";\n\t                    ctx.fill();\n\t                });\n\t            };\n\t            TrendBeacon.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                this.segment = trendsSegments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                if (!changedProps.animations) return;\n\t                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                if (changedProps.animations.enabled) {\n\t                    this.animate();\n\t                } else {\n\t                    this.stopAnimation();\n\t                }\n\t            };\n\t            TrendBeacon.prototype.updatePosition = function() {\n\t                var chart = this.chart;\n\t                var xVal, yVal;\n\t                var currentAnimationState = this.segment.currentAnimationState;\n\t                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    xVal = currentAnimationState.endXVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                } else {\n\t                    xVal = currentAnimationState.xVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                }\n\t                var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n\t                var screenWidth = chart.state.width;\n\t                var x = endPointVector.x;\n\t                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t                if (screenX < 0) x = chart.screen.getPointByScreenX(0);\n\t                if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n\t                this.mesh.position.set(x, endPointVector.y, .1);\n\t            };\n\t            return TrendBeacon;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendBeacon = TrendBeacon;\n\t    }, function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(38)\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(31)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsLoadingWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsLoadingWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(4));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, , function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsLoadingWidget = function(_super) {\n\t            __extends(TrendsLoadingWidget, _super);\n\t            function TrendsLoadingWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLoading;\n\t            };\n\t            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t            return TrendsLoadingWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t        var TrendLoading = function(_super) {\n\t            __extends(TrendLoading, _super);\n\t            function TrendLoading(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.isActive = false;\n\t                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendLoading.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                this.deactivate();\n\t            }\n\t            TrendLoading.widgetIsEnabled = function(trendOptions, chart) {\n\t                return trendOptions.enabled && chart.state.animations.enabled;\n\t            };\n\t            TrendLoading.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendLoading.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.onPrependRequest(function() {\n\t                    return _this.activate();\n\t                }));\n\t            };\n\t            TrendLoading.prototype.prependData = function() {\n\t                this.deactivate();\n\t            };\n\t            TrendLoading.prototype.activate = function() {\n\t                var mesh = this.mesh;\n\t                mesh.material.opacity = 1;\n\t                mesh.rotation.z = 0;\n\t                var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                    z: Math.PI * 2\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animation.restart();\n\t                });\n\t                this.animation = animation;\n\t                this.isActive = true;\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.deactivate = function() {\n\t                this.animation && this.animation.kill();\n\t                this.mesh.material.opacity = 0;\n\t                this.isActive = false;\n\t            };\n\t            TrendLoading.createTexture = function() {\n\t                var h = 64, w = 64;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                    ctx.lineWidth = 5;\n\t                    var center = h / 2;\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                    ctx.stroke();\n\t                });\n\t            };\n\t            TrendLoading.prototype.onZoomFrame = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.updatePosition = function() {\n\t                if (!this.isActive) return;\n\t                var trend = this.trend;\n\t                var segment = trend.segmentsManager.getStartSegment();\n\t                var x, y;\n\t                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    x = segment.currentAnimationState.startXVal;\n\t                    y = segment.currentAnimationState.startYVal;\n\t                } else {\n\t                    x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                    y = segment.currentAnimationState.yVal;\n\t                }\n\t                var pointVector = this.chart.screen.getPointOnChart(x, y);\n\t                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t            };\n\t            return TrendLoading;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendLoading = TrendLoading;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(40)\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(31)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsIndicatorWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n\t    root[\"THREE_CHARTS\"][\"TrendsIndicatorWidget\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(3));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var CANVAS_WIDTH = 128;\n\t        var CANVAS_HEIGHT = 64;\n\t        var OFFSET_X = 15;\n\t        var TrendsIndicatorWidget = function(_super) {\n\t            __extends(TrendsIndicatorWidget, _super);\n\t            function TrendsIndicatorWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendIndicator;\n\t            };\n\t            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t            return TrendsIndicatorWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t        var TrendIndicator = function(_super) {\n\t            __extends(TrendIndicator, _super);\n\t            function TrendIndicator(chart, trendName) {\n\t                _super.call(this, chart, trendName);\n\t                this.initObject();\n\t                this.onTrendChange();\n\t            }\n\t            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasIndicator;\n\t            };\n\t            TrendIndicator.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendIndicator.prototype.onTrendChange = function() {\n\t                var trendData = this.trend.getData();\n\t                var lastItem = trendData[trendData.length - 1];\n\t                var texture = this.mesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                texture.needsUpdate = true;\n\t            };\n\t            TrendIndicator.prototype.initObject = function() {\n\t                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n\t                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"15px Arial\";\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t            };\n\t            TrendIndicator.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                this.segment = segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.updatePosition = function() {\n\t                var chart = this.chart;\n\t                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                var screenWidth = chart.state.width;\n\t                var x = endPointVector.x + OFFSET_X;\n\t                var y = endPointVector.y;\n\t                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n\t                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                if (indicatorIsOutOfScreen) {\n\t                    if (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n\t                    if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                    y -= 25;\n\t                }\n\t                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t            };\n\t            return TrendIndicator;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendIndicator = TrendIndicator;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7dfde94b86da4dbff473\n **/","\n//import { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n\nimport { ChartView, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from 'three-charts';\nimport { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/build/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/build/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/build/TrendsIndicatorWidget';\nChartView.preinstalledWidgets.push(TrendsLoadingWidget, TrendsBeaconWidget, TrendsIndicatorWidget);\n\nvar chartView: ChartView;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\nclass MarksSource {\n\tstatic getNext(val: number): ITrendMarkOptions {\n\t\tif (Math.random() > 0.2) return null;\n\t\treturn this.generate(val);\n\t}\n\n\tstatic generate(val: number): ITrendMarkOptions {\n\t\tlet descriptionColor = 'rgb(40,136,75)';\n\t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n\t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n\t\t\tdescriptionColor = 'rgb(219,73,49)';\n\t\t}\n\n\t\treturn {\n\t\t\ttrendName: 'main',\n\t\t\tvalue: val,\n\t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\n\t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n\t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n\t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\n\t\t\torientation: orientation,\n\t\t\tdescriptionColor: descriptionColor\n\t\t}\n\t}\n}\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\n\tchartView = new ChartView({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 200, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.state, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.state, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t\t,\n\t[\n\t\tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t]\n\t);\n\n\tchartView.setState({animations: {enabled: false}});\n\tchartView.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chartView'] = chartView;\n\n\tvar mainTrend = chartView.getTrend('main');\n\tvar deadlineMark = chartView.chart.xAxisMarks.getItem('deadline');\n\tvar closeMark = chartView.chart.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\tvar markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\tif (markOptions) setTimeout(() => {\n\t\t\tlet trendsMarks = chartView.chart.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t\ttrendsMarks.createMark(markOptions);\n\t\t}, 500);\n\t});\n\n\n\t// var previewChart1 = ChartView.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-state')[0],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.state, hasBeacon: true}\n\t// \t}\n\t// });\n\t//\n\t// var previewChart2 = ChartView.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-state')[1],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.state, hasBeacon: true}\n\t// \t},\n\t//\n\t// });\n\t//\n\t// var previewChart3 = ChartView.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-state')[2],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.state, hasBeacon: true},\n\t// \t\t'red': {dataset: dsRed.state, lineColor: 0xFF2222},\n\t// \t}\n\t// });\n\t//\n\n\tvar i = 0;\n\n\tchartView.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chartView.getTrend('main').appendData([val]);\n\t\t// state.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\n\t\t// state.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// state.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// state.getTrend('red').appendData([val + 10 + Math.random() * 20]);\n\t\t// state.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\n\n\n\n\t\t// previewChart1.getTrend('main').appendData([val]);\n\t\t// previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\n\t\t// previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\n\t\t\n\t\t// previewChart1.appendData(dataToAppend1);\n\t\t//\n\t\t// var chartData2 = previewChart2.state.state.trends[0].state;\n\t\t// var lastItem2 = chartData2[chartData.length - 1];\n\t\t// var dataToAppend2 = [\n\t\t// \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\n\t\t// ];\n\t\t// previewChart2.appendData(dataToAppend2);\n\t\t// previewChart3.appendData(dataToAppend2);\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchartView.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchartView.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chartView.chart.state.xAxis.range;\n\t\tchartView.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchartView.chart.setState({autoScroll: false});\n\t\t\tchartView.chart.zoomToRange(range);\n\t\t\tchartView.chart.scrollToEnd().then(() => {\n\t\t\t\tchartView.chart.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 31\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(13));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(4));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(3));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(29));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Plugin_1 = __webpack_require__(3);\n        __webpack_require__(5);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var Chart_1 = __webpack_require__(13);\n        var Widget_1 = __webpack_require__(20);\n        var Utils_1 = __webpack_require__(4);\n        var AxisWidget_1 = __webpack_require__(21);\n        var GridWidget_1 = __webpack_require__(22);\n        var TrendsGradientWidget_1 = __webpack_require__(24);\n        var TrendsLineWidget_1 = __webpack_require__(26);\n        var TrendsCandleWidget_1 = __webpack_require__(27);\n        var deps_1 = __webpack_require__(28);\n        var Color_1 = __webpack_require__(23);\n        var ChartView = function() {\n            function ChartView(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.chart = new Chart_1.Chart(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            ChartView.prototype.init = function($container) {\n                var chart = this.chart;\n                var _a = chart.state, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new ChartView.renderers[this.chart.state.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                var backgroundColor = new Color_1.ChartColor(chart.state.backgroundColor);\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(ChartView.devicePixelRatio);\n                renderer.setClearColor(backgroundColor.value, backgroundColor.a);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            ChartView.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChart(_this.chart);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            ChartView.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.chart.state.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            ChartView.prototype.render = function() {\n                this.renderer.render(this.scene, this.camera);\n            };\n            ChartView.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            ChartView.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            ChartView.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.chart.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            ChartView.prototype.getState = function() {\n                return this.chart.state;\n            };\n            ChartView.prototype.getTrend = function(trendName) {\n                return this.chart.getTrend(trendName);\n            };\n            ChartView.prototype.setState = function(state) {\n                return this.chart.setState(state);\n            };\n            ChartView.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.chart.state.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.chart.state.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.chart.onTrendsChange(function() {\n                    return _this.autoscroll();\n                }), this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.chart.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            ChartView.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            ChartView.prototype.setupCamera = function() {\n                var camSettings = this.chart.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.chart.screen.options);\n            };\n            ChartView.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            ChartView.prototype.autoscroll = function() {\n                var state = this.chart;\n                if (!state.state.autoScroll) return;\n                var oldTrendsMaxX = state.state.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.state.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleX = this.chart.screen.getScreenRightVal();\n                    var paddingRightX = this.chart.getPaddingRight();\n                    var currentScroll = state.state.xAxis.range.scroll;\n                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                        return;\n                    }\n                    var scrollDelta = trendsMaxXDelta;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            ChartView.prototype.onScrollStop = function() {};\n            ChartView.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            ChartView.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartView.prototype.onMouseMove = function(ev) {\n                if (this.chart.state.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            ChartView.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.chart.state.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            ChartView.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            ChartView.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            ChartView.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            ChartView.prototype.onChartResize = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            ChartView.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var _this = this;\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                var autoScrollIsEnabled = this.chart.state.autoScroll;\n                if (autoScrollIsEnabled) this.chart.setState({\n                    autoScroll: false\n                });\n                this.chart.zoom(zoomValue, zoomOrigin).then(function() {\n                    if (autoScrollIsEnabled) _this.setState({\n                        autoScroll: true\n                    });\n                });\n            };\n            ChartView.devicePixelRatio = window.devicePixelRatio;\n            ChartView.preinstalledWidgets = [];\n            ChartView.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return ChartView;\n        }();\n        exports.ChartView = ChartView;\n        ChartView.preinstalledWidgets = [ TrendsLineWidget_1.TrendsLineWidget, TrendsCandleWidget_1.TrendsCandlesWidget, AxisWidget_1.AxisWidget, GridWidget_1.GridWidget, TrendsGradientWidget_1.TrendsGradientWidget ];\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(4);\n        var EventEmmiter_1 = __webpack_require__(12);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChart = function(chart) {\n                var _this = this;\n                this.chart = chart;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chart.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chart.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chart.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chart.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chart.state.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(5);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(6);\n        exports.isPlainObject = __webpack_require__(7);\n        exports.EE2 = __webpack_require__(9);\n        var es6_promise_1 = __webpack_require__(10);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(11);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(8);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(5);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(14);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Utils_1 = __webpack_require__(4);\n        var TrendsManager_1 = __webpack_require__(16);\n        var Screen_1 = __webpack_require__(17);\n        var AxisMarks_1 = __webpack_require__(18);\n        var interfaces_1 = __webpack_require__(19);\n        var deps_1 = __webpack_require__(5);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            SCROLL_STOP: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var LIGHT_BLUE = \"#5273bd\";\n        var Chart = function() {\n            function Chart(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.state = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        autoScroll: true,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50,\n                            color: \"rgba(\" + LIGHT_BLUE + \", 0.12)\"\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        marks: [],\n                        color: LIGHT_BLUE\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: .25,\n                        zoomEase: void 0,\n                        scrollSpeed: .5,\n                        scrollEase: Linear.easeNone,\n                        autoScrollSpeed: 1,\n                        autoScrollEase: Linear.easeNone\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: true,\n                        backgroundColor: \"rgba(#FFFFFF, 0.07)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    font: {\n                        s: \"11px Arial\",\n                        m: \"12px Arial\",\n                        l: \"13px Arial\"\n                    },\n                    backgroundColor: 3114,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.state.eventEmitterMaxListeners);\n                this.state = Utils_1.Utils.deepMerge(this.state, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.initListeners();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            Chart.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.state = {};\n            };\n            Chart.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            Chart.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            Chart.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            Chart.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            Chart.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            Chart.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            Chart.prototype.onScrollStop = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n            };\n            Chart.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            Chart.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            Chart.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            Chart.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            Chart.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var stateData = this.state;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (stateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.state = Utils_1.Utils.deepMerge(this.state, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.state.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            Chart.prototype.recalculateState = function(changedProps) {\n                var data = this.state;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.state.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.state.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.state = Utils_1.Utils.deepMerge(this.state, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            Chart.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            Chart.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.state;\n                var prevState = this.state.prevState;\n                Utils_1.Utils.copyProps(this.state, prevState, changedProps, [ \"trends\" ]);\n            };\n            Chart.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.state.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            Chart.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChart(_this);\n                });\n                return initialState;\n            };\n            Chart.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            Chart.prototype.initListeners = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n            };\n            Chart.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n            };\n            Chart.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            Chart.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available state height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.state.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            Chart.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.state.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                var nextRange = this.state.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.zoomToRange = function(range, origin) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.state.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            Chart.prototype.scrollToEnd = function() {\n                var _this = this;\n                var state = this.state;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.state.animations.enabled ? _this.state.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            Chart.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.state.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.state.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Chart.prototype.getValueOnXAxis = function(x) {\n                return this.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.state.xAxis.range.scaleFactor * this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.state.yAxis.range.scaleFactor * this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.state.xAxis.range.scaleFactor / this.state.xAxis.range.zoom;\n            };\n            Chart.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.state.yAxis.range.scaleFactor / this.state.yAxis.range.zoom;\n            };\n            Chart.prototype.getValueByScreenX = function(x) {\n                var _a = this.state.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            Chart.prototype.getValueByScreenY = function(y) {\n                var _a = this.state.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            Chart.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.state.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            Chart.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Chart.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Chart.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Chart.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            Chart.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.state.width);\n            };\n            Chart.prototype.getPaddingRight = function() {\n                return this.getValueByScreenX(this.state.width - this.state.xAxis.range.padding.end);\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(4);\n        var TrendSegmentsManager_1 = __webpack_require__(15);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var deps_1 = __webpack_require__(5);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chartState = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.state.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvents();\n            }\n            Trend.prototype.onInitialStateApplied = function() {\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\n            };\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chartState;\n                chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateApplied();\n                });\n                chartState.onScrollStop(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chartState.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chartState.state.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chartState.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chartState;\n                var minXVal = chartState.state.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(4);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chartState, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.chartState.onZoom(function() {\n                    return _this.onZoomHandler();\n                });\n                this.chartState.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chartState.state.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chartState.state.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(14);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n                this.bindEvents();\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                });\n            };\n            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                var _this = this;\n                var _loop_1 = function(trendName) {\n                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                    });\n                };\n                var this_1 = this;\n                for (var trendName in this.trends) {\n                    _loop_1(trendName);\n                }\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(12);\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.currentScrollX = {\n                    x: 0\n                };\n                this.currentScrollY = {\n                    y: 0\n                };\n                this.currentZoomX = {\n                    val: 1\n                };\n                this.currentZoomY = {\n                    val: 1\n                };\n                this.chartState = chartState;\n                var _a = chartState.state, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chartState.state.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chartState.state, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                var _this = this;\n                var eventName = \"zoomFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                var _this = this;\n                var eventName = \"scrollFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n\t\t\t\tconsole.log(cb.toString());\n                var _this = this;\n                var eventName = \"transformationFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                this.ee.emit(\"transformationFrame\", options);\n                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n                    this.ee.emit(\"scrollFrame\", options);\n                }\n                if (options.zoomX != void 0 || options.zoomY != void 0) {\n                    this.ee.emit(\"zoomFrame\", options);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.scrollXAnimation && this.scrollXAnimation.kill();\n                this.scrollYAnimation && this.scrollYAnimation.kill();\n                this.zoomXAnimation && this.zoomXAnimation.kill();\n                this.zoomYAnimation && this.zoomYAnimation.kill();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var state = this.chartState;\n                var isDragMode = state.state.cursor.dragMode;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled && !isDragMode;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = state.state.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n                var range = state.state.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollX.x = this.options.scrollX;\n                var cb = function() {\n                    _this.transform({\n                        scrollX: _this.currentScrollX.x\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n                        x: targetX,\n                        ease: ease\n                    });\n                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollX.x = targetX;\n                    cb();\n                }\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n                var range = state.state.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollY.y = this.options.scrollY;\n                var cb = function() {\n                    _this.transform({\n                        scrollY: _this.currentScrollY.y\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n                        y: targetY,\n                        ease: animations.zoomEase\n                    });\n                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollY.y = targetY;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.state.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomX: _this.currentZoomX.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomX.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.state.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.state.yAxis.range.zoom;\n                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomY: _this.currentZoomY.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomY.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chartState.state.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chartState.state.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chartState.state.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chartState.state.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chartState.state.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chartState.state.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chartState.state.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chartState.state.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chartState.state.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chartState.state.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chartState.state.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chartState.state.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chartState.state.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chartState.state.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(4);\n        var interfaces_1 = __webpack_require__(19);\n        var EventEmmiter_1 = __webpack_require__(12);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.state.xAxis.marks : chartState.state.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.state.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChart = function(chart) {\n                this.chart = chart;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(20);\n        var GridWidget_1 = __webpack_require__(22);\n        var Utils_1 = __webpack_require__(4);\n        var interfaces_1 = __webpack_require__(19);\n        var Color_1 = __webpack_require__(23);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chart.screen.options.scrollX, this.chart.screen.options.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                var axisOptions;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                    axisOptions = this.chart.state.xAxis;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                    axisOptions = this.chart.state.yAxis;\n                }\n                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                    var color = new Color_1.ChartColor(axisOptions.color);\n                    ctx.beginPath();\n                    ctx.font = _this.chart.state.font.m;\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = color.rgbaStr;\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chart.state, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chart.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chart.state.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chart.state.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chart.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chart.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(20);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(4);\n        var Color_1 = __webpack_require__(23);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chart.state, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chart.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chart.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chart.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var color = new Color_1.ChartColor(this.chart.state.xAxis.grid.color);\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    color: color.value,\n                    opacity: color.a,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chart.state, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localYVal = yVal - chartState.state.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.state.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chart;\n                var localXVal = xVal - chartState.state.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.state.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chart.state, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartColor = function() {\n            function ChartColor(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            ChartColor.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            ChartColor.prototype.set = function(color) {\n                if (typeof color == \"number\") {\n                    color = color.toString(16);\n                    color = \"#\" + \"0\".repeat(6 - color.length) + color;\n                }\n                var colorStr = color;\n                var rgba = ChartColor.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = \"#\" + this.value.toString(16);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            return ChartColor;\n        }();\n        exports.ChartColor = ChartColor;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(4);\n        var TrendsWidget_1 = __webpack_require__(25);\n        var Color_1 = __webpack_require__(23);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.state.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chart.pxToValueByYAxis(this.chart.state.height), this.chart.screen.pxToValueByYAxis(this.chart.state.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(20);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chart;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chart.state.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chart);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chart.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chart, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chart, trendName) {\n                this.chart = chart;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chart.trendsManager.getTrend(trendName);\n                this.chart = chart;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chart.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chart.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chart.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(25);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(4);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chart.state.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chart.state.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chart.state.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chart.state;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(25);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(14);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(4);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chart.state;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chart.state.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chart.state.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(5));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(25));\n        __export(__webpack_require__(26));\n        __export(__webpack_require__(24));\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 32\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsMarksPlugin\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsMarksPlugin/index.js\n ** module id = 33\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsMarksPlugin\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsMarksPlugin\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(5));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, , , function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsMarksWidget_1 = __webpack_require__(6);\n        (function(TREND_MARK_SIDE) {\n            TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\n            TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\n        })(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\n        var TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\n        (function(EVENTS) {\n            EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\n        })(exports.EVENTS || (exports.EVENTS = {}));\n        var EVENTS = exports.EVENTS;\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            trendName: \"\",\n            title: \"\",\n            description: \"\",\n            descriptionColor: \"rgb(40,136,75)\",\n            value: 0,\n            iconColor: \"rgb(255, 102, 217)\",\n            orientation: TREND_MARK_SIDE.TOP,\n            width: 65,\n            height: 80,\n            offset: 40,\n            margin: 20\n        };\n        var TrendsMarksPlugin = function(_super) {\n            __extends(TrendsMarksPlugin, _super);\n            function TrendsMarksPlugin(trendsMarksPluginOptions) {\n                _super.call(this, trendsMarksPluginOptions);\n                this.items = {};\n                this.rects = {};\n            }\n            TrendsMarksPlugin.prototype.onInitialStateApplied = function() {\n                this.bindEvents();\n                this.onMarksChangeHandler();\n            };\n            TrendsMarksPlugin.prototype.onStateChanged = function() {\n                this.onMarksChangeHandler();\n            };\n            TrendsMarksPlugin.prototype.getOptions = function() {\n                return _super.prototype.getOptions.call(this);\n            };\n            TrendsMarksPlugin.prototype.getItems = function() {\n                return this.items;\n            };\n            TrendsMarksPlugin.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            TrendsMarksPlugin.prototype.createMark = function(options) {\n                var marksOptions = this.getOptions().items;\n                var newMarkOptions = marksOptions.concat([ options ]);\n                this.chart.setState({\n                    pluginsState: (_a = {}, _a[this.name] = {\n                        items: newMarkOptions\n                    }, _a)\n                });\n                var _a;\n            };\n            TrendsMarksPlugin.prototype.onChange = function(cb) {\n                return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n            };\n            TrendsMarksPlugin.prototype.bindEvents = function() {\n                var _this = this;\n                this.chart.trendsManager.onSegmentsRebuilded(function() {\n                    return _this.updateMarksSegments();\n                });\n                this.chart.screen.onZoomFrame(function() {\n                    return _this.calclulateMarksPositions();\n                });\n            };\n            TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function() {\n                this.onMarksChangeHandler();\n            };\n            TrendsMarksPlugin.prototype.onMarksChangeHandler = function() {\n                var trendsMarksOptions = this.getOptions().items;\n                var actualMarksNames = [];\n                for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\n                    var options = trendsMarksOptions_1[_i];\n                    var marks = this.items;\n                    if (!options.name) {\n                        options.name = three_charts_1.Utils.getUid().toString();\n                        actualMarksNames.push(options.name);\n                        if (marks[options.name]) three_charts_1.Utils.error(\"duplicated mark name \" + options.name);\n                    } else if (marks[options.name]) {\n                        actualMarksNames.push(options.name);\n                        continue;\n                    }\n                    options = three_charts_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    var mark = new TrendMark(this.chart, options);\n                    marks[options.name] = mark;\n                }\n                for (var markName in this.items) {\n                    if (actualMarksNames.indexOf(markName) != -1) continue;\n                    delete this.items[markName];\n                }\n                this.updateMarksSegments();\n                this.ee.emit(EVENTS[EVENTS.CHANGE]);\n            };\n            TrendsMarksPlugin.prototype.calclulateMarksPositions = function() {\n                this.rects = {};\n                for (var markName in this.items) {\n                    this.createMarkRect(this.items[markName]);\n                }\n            };\n            TrendsMarksPlugin.prototype.createMarkRect = function(mark) {\n                if (!mark.segment) return;\n                var chart = this.chart;\n                var options = mark.options;\n                var width = options.width, height = options.height, offset = options.offset, name = options.name;\n                var left = chart.getPointOnXAxis(mark.xVal) - width / 2;\n                var top = chart.getPointOnYAxis(mark.yVal);\n                var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n                var newOffset;\n                var row = 0;\n                if (isTopSideMark) {\n                    top += offset + height;\n                } else {\n                    top -= offset;\n                }\n                var markRect = [ left, top, width, height ];\n                var hasIntersection = false;\n                do {\n                    for (var markName in this.rects) {\n                        var rect = this.rects[markName];\n                        hasIntersection = three_charts_1.Utils.rectsIntersect(rect, markRect);\n                        if (!hasIntersection) continue;\n                        if (isTopSideMark) {\n                            markRect[1] = rect[1] + markRect[3] + options.margin;\n                        } else {\n                            markRect[1] = rect[1] - rect[3] - options.margin;\n                        }\n                        row++;\n                        break;\n                    }\n                } while (hasIntersection);\n                if (isTopSideMark) {\n                    newOffset = markRect[1] - markRect[3] - chart.getPointOnYAxis(mark.yVal);\n                } else {\n                    newOffset = chart.getPointOnYAxis(mark.yVal) - markRect[1];\n                }\n                mark._setOffset(newOffset);\n                mark._setRow(row);\n                this.rects[name] = markRect;\n            };\n            TrendsMarksPlugin.prototype.updateMarksSegments = function() {\n                var chart = this.chart;\n                var trends = chart.trendsManager.trends;\n                for (var trendName in trends) {\n                    var marks = this.getTrendMarks(trendName);\n                    var marksArr = [];\n                    var xVals = [];\n                    for (var markName in marks) {\n                        var mark = marks[markName];\n                        xVals.push(mark.options.value);\n                        marksArr.push(mark);\n                        mark._setSegment(null);\n                    }\n                    marksArr.sort(function(a, b) {\n                        return a.options.value - b.options.value;\n                    });\n                    var trend = chart.getTrend(trendName);\n                    var points = trend.segmentsManager.getSegmentsForXValues(xVals.sort(function(a, b) {\n                        return a - b;\n                    }));\n                    for (var markInd = 0; markInd < marksArr.length; markInd++) {\n                        marksArr[markInd]._setSegment(points[markInd]);\n                    }\n                }\n                this.calclulateMarksPositions();\n            };\n            TrendsMarksPlugin.prototype.getTrendMarks = function(trendName) {\n                var trendMarks = [];\n                for (var markName in this.items) {\n                    if (this.items[markName].options.trendName != trendName) continue;\n                    trendMarks.push(this.items[markName]);\n                }\n                return trendMarks;\n            };\n            TrendsMarksPlugin.NAME = \"TrendsMarks\";\n            TrendsMarksPlugin.providedWidgets = [ TrendsMarksWidget_1.TrendsMarksWidget ];\n            return TrendsMarksPlugin;\n        }(three_charts_1.ChartPlugin);\n        exports.TrendsMarksPlugin = TrendsMarksPlugin;\n        var TrendMark = function() {\n            function TrendMark(chart, options) {\n                this.row = 0;\n                this.options = options;\n                this.chart = chart;\n            }\n            TrendMark.prototype._setSegment = function(segment) {\n                this.segment = segment;\n                if (!segment) return;\n                var trend = this.chart.getTrend(this.options.trendName);\n                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    this.xVal = segment.endXVal;\n                    this.yVal = segment.endYVal;\n                } else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n                    this.xVal = segment.xVal;\n                    this.yVal = segment.maxYVal;\n                } else {\n                    this.xVal = segment.xVal;\n                    this.yVal = segment.minYVal;\n                }\n            };\n            TrendMark.prototype._setOffset = function(offset) {\n                this.offset = offset;\n            };\n            TrendMark.prototype._setRow = function(row) {\n                this.row = row;\n            };\n            return TrendMark;\n        }();\n        exports.TrendMark = TrendMark;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var three_charts_1 = __webpack_require__(2);\n        var Geometry = THREE.Geometry;\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var TrendsMarksPlugin_1 = __webpack_require__(5);\n        var MAX_MARKS_IN_ROW = 3;\n        var TrendsMarksWidget = function(_super) {\n            __extends(TrendsMarksWidget, _super);\n            function TrendsMarksWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsMarksWidget.prototype.getTrendWidgetClass = function() {\n                return TrendMarksWidget;\n            };\n            TrendsMarksWidget.widgetName = \"TrendsMarks\";\n            return TrendsMarksWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsMarksWidget = TrendsMarksWidget;\n        var TrendMarksWidget = function(_super) {\n            __extends(TrendMarksWidget, _super);\n            function TrendMarksWidget(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.marksWidgets = {};\n                this.object3D = new Object3D();\n                this.onMarksChange();\n            }\n            TrendMarksWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendMarksWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.getTrendsMarksPlugin().onChange(function() {\n                    return _this.onMarksChange();\n                });\n            };\n            TrendMarksWidget.prototype.getTrendsMarksPlugin = function() {\n                return this.chart.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\n            };\n            TrendMarksWidget.prototype.onMarksChange = function() {\n                var marksItems = this.getTrendsMarksPlugin().getItems();\n                var widgets = this.marksWidgets;\n                var actualMarksNames = [];\n                for (var markName in marksItems) {\n                    actualMarksNames.push(markName);\n                    if (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n                }\n                for (var markName in this.marksWidgets) {\n                    if (actualMarksNames.indexOf(markName) !== -1) continue;\n                    this.destroyMarkWidget(markName);\n                }\n            };\n            TrendMarksWidget.prototype.createMarkWidget = function(mark) {\n                if (!mark.segment) return;\n                var markWidget = new TrendMarkWidget(this.chart, mark);\n                this.marksWidgets[mark.options.name] = markWidget;\n                this.object3D.add(markWidget.getObject3D());\n            };\n            TrendMarksWidget.prototype.destroyMarkWidget = function(markName) {\n                this.object3D.remove(this.marksWidgets[markName].getObject3D());\n                delete this.marksWidgets[markName];\n            };\n            TrendMarksWidget.prototype.onZoomFrame = function() {\n                var widgets = this.marksWidgets;\n                for (var markName in widgets) {\n                    widgets[markName].onZoomFrameHandler();\n                }\n            };\n            TrendMarksWidget.prototype.onSegmentsAnimate = function() {\n                var widgets = this.marksWidgets;\n                for (var markName in widgets) {\n                    widgets[markName].onSegmentsAnimate();\n                }\n            };\n            return TrendMarksWidget;\n        }(three_charts_1.TrendWidget);\n        exports.TrendMarksWidget = TrendMarksWidget;\n        var TrendMarkWidget = function() {\n            function TrendMarkWidget(chart, trendMark) {\n                this.markHeight = 74;\n                this.markWidth = 150;\n                this.position = {\n                    lineHeight: 30,\n                    x: 0,\n                    y: 0\n                };\n                this.chart = chart;\n                this.mark = trendMark;\n                this.initObject();\n                this.show();\n            }\n            TrendMarkWidget.prototype.initObject = function() {\n                this.object3D = new Object3D();\n                this.markMesh = this.createMarkMesh();\n                this.line = this.createMarkLine();\n                this.object3D.add(this.markMesh);\n                this.object3D.add(this.line);\n            };\n            TrendMarkWidget.prototype.createMarkMesh = function() {\n                var _a = this, markHeight = _a.markHeight, markWidth = _a.markWidth;\n                var mark = this.mark.options;\n                var isTopSide = mark.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\n                var texture = three_charts_1.Utils.createPixelPerfectTexture(markWidth, markHeight, function(ctx) {\n                    var circleOffset = isTopSide ? 30 : 0;\n                    var circleR = 22;\n                    var circleX = markWidth / 2;\n                    var circleY = circleOffset + circleR;\n                    var textOffset = isTopSide ? 10 : circleR * 2 + 15;\n                    ctx.beginPath();\n                    ctx.textAlign = \"center\";\n                    ctx.font = \"11px Arial\";\n                    ctx.fillStyle = \"rgba(255,255,255, 0.6)\";\n                    ctx.fillText(mark.title, circleX, textOffset);\n                    ctx.fillStyle = mark.descriptionColor;\n                    ctx.fillText(mark.description, circleX, textOffset + 12);\n                    ctx.beginPath();\n                    ctx.fillStyle = mark.iconColor;\n                    ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n                    ctx.fill();\n                    ctx.font = \"19px Arial\";\n                    ctx.fillStyle = \"rgb(255, 255, 255)\";\n                    ctx.fillText(mark.icon, circleX, circleY + 7);\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var mesh = new Mesh(new THREE.PlaneGeometry(markWidth, markHeight), material);\n                var offset = this.mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP ? this.mark.offset : -this.mark.offset;\n                return mesh;\n            };\n            TrendMarkWidget.prototype.createMarkLine = function() {\n                var lineGeometry = new Geometry();\n                lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, this.mark.offset, 0));\n                lineGeometry.computeLineDistances();\n                var lineMaterial = new THREE.LineDashedMaterial({\n                    dashSize: 1,\n                    gapSize: 4,\n                    transparent: true,\n                    opacity: .6\n                });\n                var line = new THREE.Line(lineGeometry, lineMaterial);\n                line.position.setZ(-.1);\n                return line;\n            };\n            TrendMarkWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendMarkWidget.prototype.onSegmentsAnimate = function() {\n                this.updatePosition();\n            };\n            TrendMarkWidget.prototype.onZoomFrameHandler = function() {\n                this.updatePosition();\n            };\n            TrendMarkWidget.prototype.updatePosition = function() {\n                if (!this.mark.segment) return;\n                var mark = this.mark;\n                var meshMaterial = this.markMesh.material;\n                var lineMaterial = this.line.material;\n                if (mark.row >= MAX_MARKS_IN_ROW - 1) {\n                    meshMaterial.opacity = 0;\n                    lineMaterial.opacity = 0;\n                } else {\n                    meshMaterial.opacity = 1;\n                    lineMaterial.opacity = 1;\n                }\n                var screen = this.chart.screen;\n                var posX = screen.getPointOnXAxis(mark.xVal);\n                var posY = screen.getPointOnYAxis(mark.yVal);\n                var lineGeometry = this.line.geometry;\n                if (mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP) {\n                    this.markMesh.position.setY(this.markHeight / 2 + mark.offset);\n                    lineGeometry.vertices[1].setY(mark.offset);\n                } else {\n                    this.markMesh.position.setY(-mark.offset - this.markHeight / 2);\n                    lineGeometry.vertices[1].setY(-mark.offset);\n                }\n                lineGeometry.verticesNeedUpdate = true;\n                lineGeometry.lineDistancesNeedUpdate = true;\n                lineGeometry.computeLineDistances();\n                this.object3D.position.set(posX, posY, 0);\n            };\n            TrendMarkWidget.prototype.show = function() {\n                if (!this.mark.segment) return;\n                this.updatePosition();\n                var animations = this.chart.state.animations;\n                var time = animations.enabled ? 1 : 0;\n                this.object3D.scale.set(.01, .01, 1);\n                TweenLite.to(this.object3D.scale, time, {\n                    x: 1,\n                    y: 1,\n                    ease: Elastic.easeOut\n                });\n            };\n            return TrendMarkWidget;\n        }();\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsMarksPlugin.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsMarksPlugin/TrendsMarksPlugin.js\n ** module id = 34\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsBeaconWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/index.js\n ** module id = 35\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsBeaconWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsBeaconWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsBeaconWidget = function(_super) {\n            __extends(TrendsBeaconWidget, _super);\n            function TrendsBeaconWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                return TrendBeacon;\n            };\n            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n            return TrendsBeaconWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n        var TrendBeacon = function(_super) {\n            __extends(TrendBeacon, _super);\n            function TrendBeacon(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.initObject();\n                if (chart.state.animations.enabled) {\n                    this.animate();\n                }\n                this.updatePosition();\n            }\n            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n            };\n            TrendBeacon.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendBeacon.prototype.onTrendChange = function() {\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.chart.onScroll(function() {\n                    return _this.updatePosition();\n                }));\n                this.bindEvent(this.chart.onChange(function(changedProps) {\n                    return _this.onStateChange(changedProps);\n                }));\n                this.bindEvent(this.chart.onDestroy(function() {\n                    return _this.stopAnimation();\n                }));\n            };\n            TrendBeacon.prototype.initObject = function() {\n                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture(),\n                    transparent: true\n                }));\n                light.scale.set(.2, .2, 1);\n                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture()\n                })));\n                this.segment = this.trend.segmentsManager.getEndSegment();\n            };\n            TrendBeacon.prototype.animate = function() {\n                var _this = this;\n                this.animated = true;\n                var object = this.mesh;\n                var animationObject = {\n                    scale: object.scale.x,\n                    opacity: object.material.opacity\n                };\n                this.mesh.scale.set(.1, .1, 1);\n                setTimeout(function() {\n                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                        scale: 1,\n                        opacity: 0\n                    });\n                    animation.eventCallback(\"onUpdate\", function() {\n                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n                        object.material.opacity = animationObject.opacity;\n                    }).eventCallback(\"onComplete\", function() {\n                        _this.animation && animation.restart();\n                    });\n                }, 500);\n            };\n            TrendBeacon.prototype.stopAnimation = function() {\n                this.animated = false;\n                this.animation && this.animation.kill();\n                this.animation = null;\n            };\n            TrendBeacon.createTexture = function() {\n                var h = 32, w = 32;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.beginPath();\n                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                });\n            };\n            TrendBeacon.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                this.segment = trendsSegments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onStateChange = function(changedProps) {\n                if (!changedProps.animations) return;\n                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                if (changedProps.animations.enabled) {\n                    this.animate();\n                } else {\n                    this.stopAnimation();\n                }\n            };\n            TrendBeacon.prototype.updatePosition = function() {\n                var chart = this.chart;\n                var xVal, yVal;\n                var currentAnimationState = this.segment.currentAnimationState;\n                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    xVal = currentAnimationState.endXVal;\n                    yVal = currentAnimationState.endYVal;\n                } else {\n                    xVal = currentAnimationState.xVal;\n                    yVal = currentAnimationState.endYVal;\n                }\n                var endPointVector = chart.screen.getPointOnChart(xVal, yVal);\n                var screenWidth = chart.state.width;\n                var x = endPointVector.x;\n                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n                if (screenX < 0) x = chart.screen.getPointByScreenX(0);\n                if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth);\n                this.mesh.position.set(x, endPointVector.y, .1);\n            };\n            return TrendBeacon;\n        }(three_charts_1.TrendWidget);\n        exports.TrendBeacon = TrendBeacon;\n    }, function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js\n ** module id = 36\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsLoadingWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/index.js\n ** module id = 37\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsLoadingWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsLoadingWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(4));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, , function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsLoadingWidget = function(_super) {\n            __extends(TrendsLoadingWidget, _super);\n            function TrendsLoadingWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLoading;\n            };\n            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n            return TrendsLoadingWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n        var TrendLoading = function(_super) {\n            __extends(TrendLoading, _super);\n            function TrendLoading(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.isActive = false;\n                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendLoading.createTexture(),\n                    transparent: true\n                }));\n                this.deactivate();\n            }\n            TrendLoading.widgetIsEnabled = function(trendOptions, chart) {\n                return trendOptions.enabled && chart.state.animations.enabled;\n            };\n            TrendLoading.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendLoading.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.onPrependRequest(function() {\n                    return _this.activate();\n                }));\n            };\n            TrendLoading.prototype.prependData = function() {\n                this.deactivate();\n            };\n            TrendLoading.prototype.activate = function() {\n                var mesh = this.mesh;\n                mesh.material.opacity = 1;\n                mesh.rotation.z = 0;\n                var animation = TweenLite.to(this.mesh.rotation, .5, {\n                    z: Math.PI * 2\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animation.restart();\n                });\n                this.animation = animation;\n                this.isActive = true;\n                this.updatePosition();\n            };\n            TrendLoading.prototype.deactivate = function() {\n                this.animation && this.animation.kill();\n                this.mesh.material.opacity = 0;\n                this.isActive = false;\n            };\n            TrendLoading.createTexture = function() {\n                var h = 64, w = 64;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                    ctx.lineWidth = 5;\n                    var center = h / 2;\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n                    ctx.stroke();\n                });\n            };\n            TrendLoading.prototype.onZoomFrame = function() {\n                this.updatePosition();\n            };\n            TrendLoading.prototype.updatePosition = function() {\n                if (!this.isActive) return;\n                var trend = this.trend;\n                var segment = trend.segmentsManager.getStartSegment();\n                var x, y;\n                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    x = segment.currentAnimationState.startXVal;\n                    y = segment.currentAnimationState.startYVal;\n                } else {\n                    x = segment.currentAnimationState.xVal - segment.maxLength;\n                    y = segment.currentAnimationState.yVal;\n                }\n                var pointVector = this.chart.screen.getPointOnChart(x, y);\n                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n            };\n            return TrendLoading;\n        }(three_charts_1.TrendWidget);\n        exports.TrendLoading = TrendLoading;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js\n ** module id = 38\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsIndicatorWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/index.js\n ** module id = 39\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"TrendsIndicatorWidget\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, \n    root[\"THREE_CHARTS\"][\"TrendsIndicatorWidget\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(3));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var three_charts_1 = __webpack_require__(2);\n        var CANVAS_WIDTH = 128;\n        var CANVAS_HEIGHT = 64;\n        var OFFSET_X = 15;\n        var TrendsIndicatorWidget = function(_super) {\n            __extends(TrendsIndicatorWidget, _super);\n            function TrendsIndicatorWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                return TrendIndicator;\n            };\n            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n            return TrendsIndicatorWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n        var TrendIndicator = function(_super) {\n            __extends(TrendIndicator, _super);\n            function TrendIndicator(chart, trendName) {\n                _super.call(this, chart, trendName);\n                this.initObject();\n                this.onTrendChange();\n            }\n            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasIndicator;\n            };\n            TrendIndicator.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendIndicator.prototype.onTrendChange = function() {\n                var trendData = this.trend.getData();\n                var lastItem = trendData[trendData.length - 1];\n                var texture = this.mesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                texture.needsUpdate = true;\n            };\n            TrendIndicator.prototype.initObject = function() {\n                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"15px Arial\";\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n            };\n            TrendIndicator.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                this.segment = segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.updatePosition = function() {\n                var chart = this.chart;\n                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                var endPointVector = chart.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                var screenWidth = chart.state.width;\n                var x = endPointVector.x + OFFSET_X;\n                var y = endPointVector.y;\n                var screenX = chart.screen.getScreenXByPoint(endPointVector.x);\n                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                if (indicatorIsOutOfScreen) {\n                    if (screenX < 0) x = chart.screen.getPointByScreenX(0) + 20;\n                    if (screenX > screenWidth) x = chart.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                    y -= 25;\n                }\n                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n            };\n            return TrendIndicator;\n        }(three_charts_1.TrendWidget);\n        exports.TrendIndicator = TrendIndicator;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js\n ** module id = 40\n ** module chunks = 1\n **/"],"sourceRoot":""}