{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///demoApp.js","webpack:///webpack/bootstrap c12ac9494aeca1d93560?7475","webpack:///./demo/demoApp.ts","webpack:///./~/three-charts/build/index.js","webpack:///./~/three-charts/build/ThreeChart.js","webpack:///./plugins/build/TrendsBeaconWidget/index.js","webpack:///./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js","webpack:///./plugins/build/TrendsLoadingWidget/index.js","webpack:///./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js","webpack:///./plugins/build/TrendsIndicatorWidget/index.js","webpack:///./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","0","three_charts_1","TrendsBeaconWidget_1","TrendsLoadingWidget_1","TrendsIndicatorWidget_1","chart","DataSourse","data","sec","val","startTime","Date","now","push","xVal","yVal","Math","random","endTime","length","prototype","getData","Utils","deepCopy","getNext","lastVal","item","getPrev","firstVal","unshift","window","onload","initListeners","dsMain","dsRed","dsBlue","Chart","installWidget","TrendsLoadingWidget","TrendsBeaconWidget","TrendsIndicatorWidget","yAxis","marks","value","name","title","lineColor","stickToEdges","range","padding","end","start","margin","zeroVal","xAxis","dataType","AXIS_DATA_TYPE","DATE","type","AXIS_RANGE_TYPE","FIXED","from","to","maxLength","minLength","showValue","trends","main","TREND_TYPE","LINE","dataset","hasBeacon","hasIndicator","hasBackground","showStats","trendDefaultState","settingsForTypes","minSegmentLengthInPx","document","querySelector","setState","animations","enabled","mainTrend","getTrend","deadlineMark","state","xAxisMarks","getItem","closeMark","onDataChange","closeValue","options","getLastItem","setOptions","i","onPrependRequest","requestedLength","resolve","reject","responseData","ticksCount","round","setTimeout","setInterval","appendData","$checkboxMaintrend","addEventListener","checked","$checkboxRedtrend","red","$checkboxBluetrend","blue","$switchLineBtn","$switchBarsBtn","CANDLE","currentRange","timeframeButtons","querySelectorAll","Number","getAttribute","segmentLength","autoScroll","zoomToRange","scrollToEnd","then","29","30","__export","hasOwnProperty","Plugin_1","PerspectiveCamera","THREE","State_1","Widget_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsGradientWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","$container","pluginsAndWidgets","_this","widgets","REVISION","error","style","getComputedStyle","width","parseInt","height","plugins","filter","pluginOrWidget","ChartPlugin","ChartState","zoomThrottled","throttle","zoomValue","origin","zoom","init","Widget","widgetName","preinstalledWidgets","_a","w","h","autoRender","scene","Scene","isStopped","renderer","renderers","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","setClearColor","backgroundColor","backgroundOpacity","appendChild","domElement","$el","display","stats","Stats","setupCamera","initWidgets","bindEvents","renderLoop","preinstalledWidgetsClasses","constructor","customWidgets","forEach","ChartWidget","pluginWidgetClasses","providedWidgets","apply","concat","map","WidgetClass","widget","setupChartState","onReadyHandler","add","getObject3D","isDestroyed","begin","render","fpsLimit","fps","delay_1","requestAnimationFrame","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","trendName","controls","ev","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","unsubscribers","onTrendsChange","autoscroll","screen","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","resizeSensor","detach","e","remove","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","position","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","preventDefault","zoomOrigin","layerX","wheelDeltaY","touches","onChartContainerResizeHandler","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","min","max","autoScrollIsEnabled","CanvasRenderer","WebGLRenderer","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsGradientWidget","EventEmmiter_1","DEFAULT_CONFIG","installPluginWidgets","config","initialState","deepMerge","NAME","chartState","ee","EventEmitter","bindEvent","onInitialStateApplied","onInitialStateAppliedHandler","onReady","onDestroy","onDestroyHandler","onPluginsStateChange","changedPluginsStates","onStateChanged","getOptions","pluginsState","changedState","removeAllListeners","args","_i","arguments","Array","isArray","unsubscriber","deps_1","deepmerge","target","src","mergeArrays","array","dst","indexOf","Object","keys","key","obj1","obj2","obj","JSON","parse","stringify","toFixed","num","digitsCount","maxDigits","result","intVal","floor","intStr","toString","lengthDiff","repeat","afterPointDigitsCount","afterPointStr","split","substr","createTexture","fn","canvas","createElement","ctx","getContext","texture","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","console","warn","getUid","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","rectsIntersect","r1","r2","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","func","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","s","getRandomItem","copyProps","srcObject","dstObject","props","excludeProps","isPlainObject","TweenLite","TweenMax","EE2","es6_promise_1","Promise","ResizeSensor","a","dom","k","d","children","l","cssText","g","performance","r","Panel","f","self","memory","t","addPanel","showPanel","update","usedJSHeapSize","jsHeapSizeLimit","setMode","Infinity","u","n","q","b","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","drawImage","SpriteCanvasMaterial","parameters","Material","color","Color","program","setValues","create","material","copy","log","_renderData","_elements","_lights","_projector","Projector","_canvas","undefined","_canvasWidth","_canvasHeight","_canvasWidthHalf","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_context","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_camera","_v1","_v2","_v3","_v4","_v5","RenderableVertex","_v6","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_v4x","_v4y","_v5x","_v5y","_v6x","_v6y","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_clipBox","Box2","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_vector3","Vector3","_centroid","_normal","_normalViewMatrix","Matrix3","setLineDash","autoClear","sortObjects","sortElements","info","vertices","faces","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","updateStyle","setViewport","setScissor","setScissorTest","setClearColorHex","hex","getClearColor","getClearAlpha","getMaxAnisotropy","clear","isEmpty","intersect","expandByScalar","clearRect","setBlending","NormalBlending","setOpacity","setFillStyle","makeEmpty","clearColor","clearDepth","clearStencil","Camera","setTransform","translate","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","calculateLights","el","element","opacity","RenderableSprite","renderSprite","RenderableLine","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","RenderableFace","v3","overdraw","expand","renderFace3","union","setRGB","ll","light","lightColor","AmbientLight","DirectionalLight","PointLight","calculateLight","normal","lightPosition","setFromMatrixPosition","matrixWorld","normalize","amount","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","blending","scaleX","scale","scaleY","dist","sqrt","SpriteMaterial","pattern","version","textureToPattern","bitmap","image","ox","offset","oy","sx","sy","cx","cy","save","rotation","rotate","restore","getStyle","setStrokeStyle","beginPath","moveTo","lineTo","LineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","LineDashedMaterial","dashSize","gapSize","uv1","uv2","uv3","drawTriangle","MeshLambertMaterial","MeshPhongMaterial","emissive","FaceColors","multiply","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","MeshBasicMaterial","mapping","UVMapping","uvs","patternPath","envMap","SphericalReflectionMapping","vertexNormalsModel","applyMatrix3","MeshNormalMaterial","addScalar","x0","y0","x1","y1","x2","y2","closePath","fill","CompressedTexture","DataTexture","complete","repeatX","wrapS","RepeatWrapping","repeatY","wrapT","createPattern","onUpdate","u0","v0","u1","u2","det","idet","offsetX","offsetY","transform","clipImage","clip","pixels","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","MultiplyBlending","lineWidth","lineCap","lineJoin","strokeStyle","RenderableObject","object","renderOrder","vertexNormalsLength","Vector2","Vector4","visible","vertex","_object","_objectCount","_objectPool","_objectPoolLength","_vertex","_vertexCount","_vertexPool","_vertexPoolLength","_face","_faceCount","_facePool","_facePoolLength","_line","_lineCount","_linePool","_linePoolLength","_sprite","_spriteCount","_spritePool","_spritePoolLength","objects","_vector4","Box3","_boundingBox","_points3","_points4","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","project","unprojectVector","unproject","pickingRay","RenderList","normals","normalMatrix","setObject","projectVertex","applyMatrix4","invW","pushVertex","getNextVertexInPool","pushNormal","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","getNextLineInPool","pushTriangle","side","DoubleSide","getNextFaceInPool","fromArray","uv","renderList","autoUpdate","updateMatrixWorld","parent","getInverse","multiplyMatrices","projectionMatrix","setFromMatrix","addObject","getNextObjectInPool","applyProjection","traverseVisible","Light","Mesh","Line","frustumCulled","intersectsObject","Sprite","intersectsSprite","sort","painterSort","o","ol","geometry","BufferGeometry","attributes","groups","positions","index","indices","group","count","Geometry","faceVertexUvs","isFaceMaterial","MultiMaterial","objectMaterials","vl","morphTargets","morphInfluences","morphTargetInfluences","tl","influence","targetVertex","fl","face","materials","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","clipLine","colors","getNextSpriteInPool","abs","line","sprite","s1","s2","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","isObject","isObjectObject","ctor","prot","__WEBPACK_AMD_DEFINE_RESULT__","_isArray","defaultMaxListeners","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","_listeners","**","growListenerTree","listener","slice","shift","warned","trace","setMaxListeners","event","once","many","ttl","Error","off","_origin","on","emit","_all","handler","ns","onAny","addListener","leafs","iLeaf","splice","offAny","fns","removeListener","listenersAny","EventEmitter2","callback","EventQueue","j","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","className","styleChild","innerHTML","fixed","absolute","childNodes","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","changed","addEvent","cb","attachEvent","onScroll","elementType","isCollectionTyped","jQuery","Elements","removeChild","eventName","subscribe","listenersCount","Trend_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","CHANGE","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","ALL","NUMBER","grid","minSizePx","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","zoomEase","scrollSpeed","scrollEase","Linear","easeNone","autoScrollSpeed","autoScrollEase","maxSegmentLength","maxSegmentLengthInPx","eventEmitterMaxListeners","maxVisibleSegments","isReady","trendsManager","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","onChange","onTrendChange","onZoom","newState","eventData","silent","stateData","newStateObj","changedProps","trendsData","trendOptions","newStateContainsData","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","plugin","PluginClass","pluginName","getPlugin","changedTrends","newData","handleTrendsChange","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","rangeLessThenMinValue","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","nextRange","newScroll","animationTime","endXVal","getPointOnXAxis","getPointOnYAxis","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","TrendSegmentsManager_1","EVENTS","PREPEND_REQUEST","Trend","minYVal","maxYVal","prepareData","segmentsManager","TrendSegmentsManager","checkForPrependRequest","changedOptions","getCalculatedOptions","rawData","updatedTrendData","changeData","prependData","allData","newData_1","statePatch","fromX","toX","filteredData","data_1","getFirstItem","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","trend","segmentsById","segments","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","appendAnimation","kill","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getSegment","getEndSegment","getStartSegment","force","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","firstDisplayedSegmentInd","lastDisplayedSegmentInd","displayedRangeChanged","getSegmentsForXValues","values","valueInd","lastValueInd","results","segment","hasValue","startXVal","valueInPoint","onAnimationFrame","onRebuild","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","trendData","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","recalculateItems","segmentIsReadyForAnimate","startYVal","endYVal","targetAnimationState","prevItem","animationsOptions","time","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","isActive","onAnimationFrameHandler","ease","objectToAnimate","animationValue","eventCallback","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","items","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","prevPoint","getFrameVal","getFramePoint","frameVal","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getEnabledTrends","enabledTrends","allTrends","firstTrendData","getExtremumYVal","extremumIsMax","compareFn","trends_1","trendYValues","dataItem","NaN","onSegmentsRebuilded","_loop_1","this_1","scrollXVal","scrollYVal","zoomX","zoomY","currentScrollX","currentScrollY","currentZoomX","currentZoomY","vFOV","PI","tan","onZoomFrame","onScrollFrame","cameraIsMoving","scrollXAnimation","zoomXAnimation","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","scrollYAnimation","zoomYAnimation","isDragMode","canAnimate","zoomXChanged","isAutoscroll","pause","targetX","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","__extends","__","AXIS_MARK_DEFAULT_OPTIONS","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markName","mark","markVal","markWasCrossed","getItems","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","_super","unbindList","unbindEvent","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","orientation","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","traverse","transparent","axisMesh","PlaneGeometry","axisOptions","axisGridParams","getGridParamsForAxis","edgeOffset","segmentsCount","pxVal","textAlign","getDateStr","gridParams","hour","day","tf","getHours","getMinutes","getSeconds","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","xLinesCount","yLinesCount","lineSegments","setZ","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","power","multiplier","pow","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","TrendsWidget_1","Color_1","getTrendWidgetClass","TrendGradient","TrendsWidget","visibleSegmentsCnt","segmentsIds","Uint16Array","initGradient","updateSegments","widgetIsEnabled","gradient","Face3","ChartColor","scaleXFactor","scaleYFactor","currentScale","onSegmentsAnimate","trendSegmentsManager","includes","setupSegmentVertices","segmentInd","prevVisibleSegmentsCnt","segmentsToProcessCnt","segmentState","gradientSegmentInd","topLeft","bottomLeft","bottomRight","topRight","screenHeightVal","startX","toLocalX","startY","toLocalY","endX","endY","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","WidgetConstructor","widgetObject","getObjectByName","unbind","parseColor","cache","replace","exec","isNaN","colorStr","rgba","hexStr","rgbaStr","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","segmentIsNotDisplayed","destroySegment","setupSegment","pop","lineStartVertex","lineEndVertex","toLocalVec","vec","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","initObject","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","rect","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","31","32","require","__WEBPACK_EXTERNAL_MODULE_2__","PlaneBufferGeometry","TrendBeacon","updatePosition","mesh","onStateChange","stopAnimation","animated","animationObject","restart","arc","trendsSegments","endPointVector","screenWidth","33","34","TrendLoading","deactivate","activate","center","pointVector","35","36","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","lastItem","segmentEndXVal","segmentEndYVal","indicatorIsOutOfScreen"],"mappings":"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","file":"demoApp.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"THREE_CHARTS\"] = factory();\n\telse\n\t\troot[\"THREE_CHARTS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar three_charts_1 = __webpack_require__(29);\r\n\t//import { Chart, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\r\n\t// import { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/TrendsMarksPlugin';\r\n\tvar TrendsBeaconWidget_1 = __webpack_require__(31);\r\n\tvar TrendsLoadingWidget_1 = __webpack_require__(33);\r\n\tvar TrendsIndicatorWidget_1 = __webpack_require__(35);\r\n\tvar chart;\r\n\tvar DataSourse = (function () {\r\n\t    function DataSourse() {\r\n\t        this.data = [];\r\n\t        var sec = 0;\r\n\t        var val = 70;\r\n\t        this.startTime = Date.now();\r\n\t        while (sec < 100) {\r\n\t            this.data.push({\r\n\t                xVal: this.startTime + sec * 1000,\r\n\t                yVal: val\r\n\t            });\r\n\t            val += Math.random() * 14 - 7;\r\n\t            sec++;\r\n\t        }\r\n\t        this.endTime = this.data[this.data.length - 1].xVal;\r\n\t    }\r\n\t    DataSourse.prototype.getData = function () {\r\n\t        return three_charts_1.Utils.deepCopy(this.data);\r\n\t    };\r\n\t    DataSourse.prototype.getNext = function () {\r\n\t        var lastVal = this.data[this.data.length - 1];\r\n\t        var yVal = lastVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.endTime + 1000;\r\n\t        this.endTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.push(item);\r\n\t        return item;\r\n\t    };\r\n\t    DataSourse.prototype.getPrev = function () {\r\n\t        var firstVal = this.data[0];\r\n\t        var yVal = firstVal.yVal + Math.random() * 14 - 7;\r\n\t        var xVal = this.startTime - 1000;\r\n\t        this.startTime = xVal;\r\n\t        var item = {\r\n\t            xVal: xVal,\r\n\t            yVal: yVal\r\n\t        };\r\n\t        this.data.unshift(item);\r\n\t        return item;\r\n\t    };\r\n\t    return DataSourse;\r\n\t}());\r\n\t// class MarksSource {\r\n\t// \tstatic getNext(val: number): ITrendMarkOptions {\r\n\t// \t\tif (Math.random() > 0.2) return null;\r\n\t// \t\treturn this.generate(val);\r\n\t// \t}\r\n\t//\r\n\t// \tstatic generate(val: number): ITrendMarkOptions {\r\n\t// \t\tlet descriptionColor = 'rgb(40,136,75)';\r\n\t// \t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\r\n\t// \t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\r\n\t// \t\t\tdescriptionColor = 'rgb(219,73,49)';\r\n\t// \t\t}\r\n\t//\r\n\t// \t\treturn {\r\n\t// \t\t\ttrendName: 'main',\r\n\t// \t\t\tvalue: val,\r\n\t// \t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\r\n\t// \t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\r\n\t// \t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\r\n\t// \t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\r\n\t// \t\t\torientation: orientation,\r\n\t// \t\t\tdescriptionColor: descriptionColor\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\twindow.onload = function () {\r\n\t    initListeners();\r\n\t    var dsMain = new DataSourse();\r\n\t    var dsRed = new DataSourse();\r\n\t    var dsBlue = new DataSourse();\r\n\t    var now = Date.now();\r\n\t    three_charts_1.Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\r\n\t    three_charts_1.Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\r\n\t    three_charts_1.Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\r\n\t    chart = new three_charts_1.Chart({\r\n\t        yAxis: {\r\n\t            marks: [\r\n\t                { value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true },\r\n\t            ],\r\n\t            range: {\r\n\t                padding: { end: 100, start: 100 },\r\n\t                margin: { end: 50, start: 50 },\r\n\t                zeroVal: 70\r\n\t            }\r\n\t        },\r\n\t        xAxis: {\r\n\t            //range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\r\n\t            dataType: three_charts_1.AXIS_DATA_TYPE.DATE,\r\n\t            range: {\r\n\t                type: three_charts_1.AXIS_RANGE_TYPE.FIXED,\r\n\t                from: Date.now(),\r\n\t                to: Date.now() + 20000,\r\n\t                padding: { end: 200, start: 0 },\r\n\t                maxLength: 5000000,\r\n\t                minLength: 5000\r\n\t            },\r\n\t            marks: [\r\n\t                { value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true },\r\n\t                { value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true }\r\n\t            ]\r\n\t        },\r\n\t        trends: {\r\n\t            'main': {\r\n\t                type: three_charts_1.TREND_TYPE.LINE,\r\n\t                dataset: dsMain.getData(),\r\n\t                hasBeacon: true,\r\n\t                hasIndicator: true,\r\n\t                hasBackground: true,\r\n\t            },\r\n\t        },\r\n\t        showStats: true,\r\n\t        // autoRender: {fps: 100},\r\n\t        // animations: {enabled: false},\r\n\t        trendDefaultState: {\r\n\t            settingsForTypes: {\r\n\t                LINE: {\r\n\t                    minSegmentLengthInPx: 10\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    }, document.querySelector('.chart'));\r\n\t    chart.setState({ animations: { enabled: false } });\r\n\t    chart.setState({ animations: { enabled: true } });\r\n\t    window['chart'] = chart;\r\n\t    var mainTrend = chart.getTrend('main');\r\n\t    var deadlineMark = chart.state.xAxisMarks.getItem('deadline');\r\n\t    var closeMark = chart.state.xAxisMarks.getItem('close');\r\n\t    mainTrend.onDataChange(function () {\r\n\t        var closeValue = closeMark.options.value;\r\n\t        if (mainTrend.getLastItem().xVal >= closeValue) {\r\n\t            deadlineMark.setOptions({ value: closeValue + 10000 });\r\n\t            closeMark.setOptions({ value: closeValue + 20000 });\r\n\t        }\r\n\t        // var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\r\n\t        // if (markOptions) setTimeout(() => {\r\n\t        // \tlet trendsMarks = chart.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\r\n\t        // \ttrendsMarks.createMark(markOptions);\r\n\t        // }, 500);\r\n\t    });\r\n\t    // var previewChart1 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[0],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true}\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart2 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[1],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true}\r\n\t    // \t},\r\n\t    //\r\n\t    // });\r\n\t    //\r\n\t    // var previewChart3 = Chart.createPreviewChart({\r\n\t    // \t$el: document.querySelectorAll('.preview-chart')[2],\r\n\t    // \tyAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\r\n\t    // \t},\r\n\t    // \txAxis: {\r\n\t    // \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\r\n\t    // \t},\r\n\t    // \ttrends: {\r\n\t    // \t\t'main': {dataset: dsMain.data, hasBeacon: true},\r\n\t    // \t\t'red': {dataset: dsRed.data, lineColor: 0xFF2222},\r\n\t    // \t}\r\n\t    // });\r\n\t    //\r\n\t    var i = 0;\r\n\t    chart.getTrend('main').onPrependRequest(function (requestedLength, resolve, reject) {\r\n\t        var responseData = [];\r\n\t        var ticksCount = Math.round(requestedLength / 1000);\r\n\t        while (ticksCount--)\r\n\t            responseData.unshift(dsMain.getPrev());\r\n\t        setTimeout(function () {\r\n\t            resolve(responseData);\r\n\t        }, 2000);\r\n\t    });\r\n\t    setInterval(function () {\r\n\t        i++;\r\n\t        var val = dsMain.getNext();\r\n\t        // [i % 2 ? 10 : 20]\r\n\t        chart.getTrend('main').appendData([val]);\r\n\t        // chart.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\r\n\t        // chart.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // chart.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\r\n\t        // chart.getTrend('red').appendData([val + 10 + Math.random() * 20]);\r\n\t        // chart.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.getTrend('main').appendData([val]);\r\n\t        // previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\r\n\t        // previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\r\n\t        // previewChart1.appendData(dataToAppend1);\r\n\t        //\r\n\t        // var chartData2 = previewChart2.state.data.trends[0].data;\r\n\t        // var lastItem2 = chartData2[chartData.length - 1];\r\n\t        // var dataToAppend2 = [\r\n\t        // \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\r\n\t        // ];\r\n\t        // previewChart2.appendData(dataToAppend2);\r\n\t        // previewChart3.appendData(dataToAppend2);\r\n\t    }, 1000);\r\n\t};\r\n\tfunction initListeners() {\r\n\t    var $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]');\r\n\t    $checkboxMaintrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { main: { enabled: $checkboxMaintrend.checked } } });\r\n\t    });\r\n\t    var $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]');\r\n\t    $checkboxRedtrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { red: { enabled: $checkboxRedtrend.checked } } });\r\n\t    });\r\n\t    var $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]');\r\n\t    $checkboxBluetrend.addEventListener('change', function () {\r\n\t        chart.setState({ trends: { blue: { enabled: $checkboxBluetrend.checked } } });\r\n\t    });\r\n\t    var $switchLineBtn = document.querySelector('[name=\"switch-line\"]');\r\n\t    $switchLineBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.LINE });\r\n\t    });\r\n\t    var $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]');\r\n\t    $switchBarsBtn.addEventListener('click', function () {\r\n\t        chart.getTrend('main').setOptions({ type: three_charts_1.TREND_TYPE.CANDLE });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-left\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.state.data.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { from: currentRange.from - 2000 } } });\r\n\t    });\r\n\t    document.querySelector('[name=\"move-right\"]').addEventListener('click', function () {\r\n\t        var currentRange = chart.state.data.xAxis.range;\r\n\t        chart.setState({ xAxis: { range: { to: currentRange.to + 2000 } } });\r\n\t    });\r\n\t    var timeframeButtons = document.querySelectorAll(\".timeframe\");\r\n\t    for (var i = 0; i < timeframeButtons.length; i++) {\r\n\t        timeframeButtons[i].addEventListener(\"click\", function () {\r\n\t            var range = Number(this.getAttribute('data-range'));\r\n\t            var segmentLength = Number(this.getAttribute('data-segment-length'));\r\n\t            chart.state.setState({ autoScroll: false });\r\n\t            chart.state.zoomToRange(range);\r\n\t            chart.state.scrollToEnd().then(function () {\r\n\t                chart.state.setState({ autoScroll: true });\r\n\t            });\r\n\t        });\r\n\t    }\r\n\t}\r\n\n\n/***/ },\n\n/***/ 29:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(30)\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(15));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(4));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(3));\n\t        __export(__webpack_require__(27));\n\t        __export(__webpack_require__(26));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Plugin_1 = __webpack_require__(3);\n\t        __webpack_require__(5);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var State_1 = __webpack_require__(15);\n\t        var Widget_1 = __webpack_require__(22);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var AxisWidget_1 = __webpack_require__(23);\n\t        var GridWidget_1 = __webpack_require__(24);\n\t        var TrendsGradientWidget_1 = __webpack_require__(25);\n\t        var TrendsLineWidget_1 = __webpack_require__(28);\n\t        var TrendsCandleWidget_1 = __webpack_require__(29);\n\t        var Chart = function() {\n\t            function Chart(state, $container, pluginsAndWidgets) {\n\t                var _this = this;\n\t                if (pluginsAndWidgets === void 0) {\n\t                    pluginsAndWidgets = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n\t                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n\t                });\n\t                this.state = new State_1.ChartState(state, plugins);\n\t                this.pluginsAndWidgets = pluginsAndWidgets;\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            Chart.installWidget = function(Widget) {\n\t                if (!Widget.widgetName) Utils_1.Utils.error(\"unnamed widget\");\n\t                this.preinstalledWidgets.push(Widget);\n\t            };\n\t            Chart.prototype.init = function($container) {\n\t                var state = this.state;\n\t                var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                renderer.setSize(w, h);\n\t                renderer.setPixelRatio(Chart.devicePixelRatio);\n\t                renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                this.initWidgets();\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            Chart.prototype.initWidgets = function() {\n\t                var _this = this;\n\t                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\n\t                var customWidgets = [];\n\t                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n\t                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n\t                        customWidgets.push(pluginOrWidget);\n\t                        return;\n\t                    }\n\t                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n\t                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n\t                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n\t                });\n\t                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n\t                    return new WidgetClass();\n\t                }));\n\t                this.widgets.forEach(function(widget) {\n\t                    widget.setupChartState(_this.state);\n\t                    widget.onReadyHandler();\n\t                    _this.scene.add(widget.getObject3D());\n\t                });\n\t            };\n\t            Chart.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.state.data.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay_1 = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay_1);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            Chart.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Chart.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            Chart.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.state.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            Chart.prototype.getState = function() {\n\t                return this.state.data;\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.state.getTrend(trendName);\n\t            };\n\t            Chart.prototype.setState = function(state) {\n\t                return this.state.setState(state);\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.state.data.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.state.data.autoResize) {}\n\t                this.unsubscribers = [ this.state.onTrendsChange(function() {\n\t                    return _this.autoscroll();\n\t                }), this.state.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.state.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            Chart.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            Chart.prototype.setupCamera = function() {\n\t                var camSettings = this.state.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.state.screen.options);\n\t            };\n\t            Chart.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            Chart.prototype.autoscroll = function() {\n\t                var state = this.state;\n\t                if (!state.data.autoScroll) return;\n\t                var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleX = this.state.screen.getScreenRightVal();\n\t                    var paddingRightX = this.state.getPaddingRight();\n\t                    var currentScroll = state.data.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = trendsMaxXDelta;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onScrollStop = function() {};\n\t            Chart.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onMouseMove = function(ev) {\n\t                if (this.state.data.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.state.data.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            Chart.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            Chart.prototype.onChartResize = function() {\n\t                var _a = this.state.data, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var _this = this;\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                var autoScrollIsEnabled = this.state.data.autoScroll;\n\t                if (autoScrollIsEnabled) this.state.setState({\n\t                    autoScroll: false\n\t                });\n\t                this.state.zoom(zoomValue, zoomOrigin).then(function() {\n\t                    if (autoScrollIsEnabled) _this.setState({\n\t                        autoScroll: true\n\t                    });\n\t                });\n\t            };\n\t            Chart.devicePixelRatio = window.devicePixelRatio;\n\t            Chart.preinstalledWidgets = [];\n\t            Chart.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t        Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n\t        Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n\t        Chart.installWidget(AxisWidget_1.AxisWidget);\n\t        Chart.installWidget(GridWidget_1.GridWidget);\n\t        Chart.installWidget(TrendsGradientWidget_1.TrendsGradientWidget);\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(4);\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChartState = function(chartState) {\n\t                var _this = this;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chartState.onReady(function() {\n\t                    return _this.onReadyHandler();\n\t                }), this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chartState.data.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.providedWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(5);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.TweenLite = TweenMax;\n\t        window.Stats = __webpack_require__(6);\n\t        __webpack_require__(7);\n\t        __webpack_require__(8);\n\t        exports.isPlainObject = __webpack_require__(9);\n\t        exports.EE2 = __webpack_require__(11);\n\t        var es6_promise_1 = __webpack_require__(12);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(13);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports) {\n\t        THREE.SpriteCanvasMaterial = function(parameters) {\n\t            THREE.Material.call(this);\n\t            this.type = \"SpriteCanvasMaterial\";\n\t            this.color = new THREE.Color(16777215);\n\t            this.program = function(context, color) {};\n\t            this.setValues(parameters);\n\t        };\n\t        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n\t        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n\t            var material = new THREE.SpriteCanvasMaterial();\n\t            material.copy(this);\n\t            material.color.copy(this.color);\n\t            material.program = this.program;\n\t            return material;\n\t        };\n\t        THREE.CanvasRenderer = function(parameters) {\n\t            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n\t            parameters = parameters || {};\n\t            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n\t                alpha: parameters.alpha === true\n\t            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n\t            if (_context.setLineDash === undefined) {\n\t                _context.setLineDash = function() {};\n\t            }\n\t            this.domElement = _canvas;\n\t            this.autoClear = true;\n\t            this.sortObjects = true;\n\t            this.sortElements = true;\n\t            this.info = {\n\t                render: {\n\t                    vertices: 0,\n\t                    faces: 0\n\t                }\n\t            };\n\t            this.supportsVertexTextures = function() {};\n\t            this.setFaceCulling = function() {};\n\t            this.getContext = function() {\n\t                return _context;\n\t            };\n\t            this.getContextAttributes = function() {\n\t                return _context.getContextAttributes();\n\t            };\n\t            this.getPixelRatio = function() {\n\t                return _pixelRatio;\n\t            };\n\t            this.setPixelRatio = function(value) {\n\t                if (value !== undefined) _pixelRatio = value;\n\t            };\n\t            this.setSize = function(width, height, updateStyle) {\n\t                _canvasWidth = width * _pixelRatio;\n\t                _canvasHeight = height * _pixelRatio;\n\t                _canvas.width = _canvasWidth;\n\t                _canvas.height = _canvasHeight;\n\t                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n\t                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n\t                if (updateStyle !== false) {\n\t                    _canvas.style.width = width + \"px\";\n\t                    _canvas.style.height = height + \"px\";\n\t                }\n\t                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _contextGlobalAlpha = 1;\n\t                _contextGlobalCompositeOperation = 0;\n\t                _contextStrokeStyle = null;\n\t                _contextFillStyle = null;\n\t                _contextLineWidth = null;\n\t                _contextLineCap = null;\n\t                _contextLineJoin = null;\n\t                this.setViewport(0, 0, width, height);\n\t            };\n\t            this.setViewport = function(x, y, width, height) {\n\t                _viewportX = x * _pixelRatio;\n\t                _viewportY = y * _pixelRatio;\n\t                _viewportWidth = width * _pixelRatio;\n\t                _viewportHeight = height * _pixelRatio;\n\t            };\n\t            this.setScissor = function() {};\n\t            this.setScissorTest = function() {};\n\t            this.setClearColor = function(color, alpha) {\n\t                _clearColor.set(color);\n\t                _clearAlpha = alpha !== undefined ? alpha : 1;\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t            };\n\t            this.setClearColorHex = function(hex, alpha) {\n\t                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n\t                this.setClearColor(hex, alpha);\n\t            };\n\t            this.getClearColor = function() {\n\t                return _clearColor;\n\t            };\n\t            this.getClearAlpha = function() {\n\t                return _clearAlpha;\n\t            };\n\t            this.getMaxAnisotropy = function() {\n\t                return 0;\n\t            };\n\t            this.clear = function() {\n\t                if (_clearBox.isEmpty() === false) {\n\t                    _clearBox.intersect(_clipBox);\n\t                    _clearBox.expandByScalar(2);\n\t                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n\t                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n\t                    if (_clearAlpha < 1) {\n\t                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    if (_clearAlpha > 0) {\n\t                        setBlending(THREE.NormalBlending);\n\t                        setOpacity(1);\n\t                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n\t                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    _clearBox.makeEmpty();\n\t                }\n\t            };\n\t            this.clearColor = function() {};\n\t            this.clearDepth = function() {};\n\t            this.clearStencil = function() {};\n\t            this.render = function(scene, camera) {\n\t                if (camera instanceof THREE.Camera === false) {\n\t                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n\t                    return;\n\t                }\n\t                if (this.autoClear === true) this.clear();\n\t                _this.info.render.vertices = 0;\n\t                _this.info.render.faces = 0;\n\t                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n\t                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n\t                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n\t                _elements = _renderData.elements;\n\t                _lights = _renderData.lights;\n\t                _camera = camera;\n\t                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\t                calculateLights();\n\t                for (var e = 0, el = _elements.length; e < el; e++) {\n\t                    var element = _elements[e];\n\t                    var material = element.material;\n\t                    if (material === undefined || material.opacity === 0) continue;\n\t                    _elemBox.makeEmpty();\n\t                    if (element instanceof THREE.RenderableSprite) {\n\t                        _v1 = element;\n\t                        _v1.x *= _canvasWidthHalf;\n\t                        _v1.y *= _canvasHeightHalf;\n\t                        renderSprite(_v1, element, material);\n\t                    } else if (element instanceof THREE.RenderableLine) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderLine(_v1, _v2, element, material);\n\t                        }\n\t                    } else if (element instanceof THREE.RenderableFace) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v3 = element.v3;\n\t                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n\t                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n\t                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _v3.positionScreen.x *= _canvasWidthHalf;\n\t                        _v3.positionScreen.y *= _canvasHeightHalf;\n\t                        if (material.overdraw > 0) {\n\t                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n\t                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n\t                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n\t                        }\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n\t                        }\n\t                    }\n\t                    _clearBox.union(_elemBox);\n\t                }\n\t                _context.setTransform(1, 0, 0, 1, 0, 0);\n\t            };\n\t            function calculateLights() {\n\t                _ambientLight.setRGB(0, 0, 0);\n\t                _directionalLights.setRGB(0, 0, 0);\n\t                _pointLights.setRGB(0, 0, 0);\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    var lightColor = light.color;\n\t                    if (light instanceof THREE.AmbientLight) {\n\t                        _ambientLight.add(lightColor);\n\t                    } else if (light instanceof THREE.DirectionalLight) {\n\t                        _directionalLights.add(lightColor);\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        _pointLights.add(lightColor);\n\t                    }\n\t                }\n\t            }\n\t            function calculateLight(position, normal, color) {\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    _lightColor.copy(light.color);\n\t                    if (light instanceof THREE.DirectionalLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\t                        var amount = normal.dot(lightPosition);\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\t                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n\t                        if (amount == 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    }\n\t                }\n\t            }\n\t            function renderSprite(v1, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                var scaleX = element.scale.x * _canvasWidthHalf;\n\t                var scaleY = element.scale.y * _canvasHeightHalf;\n\t                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n\t                _elemBox.min.set(v1.x - dist, v1.y - dist);\n\t                _elemBox.max.set(v1.x + dist, v1.y + dist);\n\t                if (material instanceof THREE.SpriteMaterial) {\n\t                    var texture = material.map;\n\t                    if (texture !== null) {\n\t                        var pattern = _patterns[texture.id];\n\t                        if (pattern === undefined || pattern.version !== texture.version) {\n\t                            pattern = textureToPattern(texture);\n\t                            _patterns[texture.id] = pattern;\n\t                        }\n\t                        if (pattern.canvas !== undefined) {\n\t                            setFillStyle(pattern.canvas);\n\t                            var bitmap = texture.image;\n\t                            var ox = bitmap.width * texture.offset.x;\n\t                            var oy = bitmap.height * texture.offset.y;\n\t                            var sx = bitmap.width * texture.repeat.x;\n\t                            var sy = bitmap.height * texture.repeat.y;\n\t                            var cx = scaleX / sx;\n\t                            var cy = scaleY / sy;\n\t                            _context.save();\n\t                            _context.translate(v1.x, v1.y);\n\t                            if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                            _context.translate(-scaleX / 2, -scaleY / 2);\n\t                            _context.scale(cx, cy);\n\t                            _context.translate(-ox, -oy);\n\t                            _context.fillRect(ox, oy, sx, sy);\n\t                            _context.restore();\n\t                        }\n\t                    } else {\n\t                        setFillStyle(material.color.getStyle());\n\t                        _context.save();\n\t                        _context.translate(v1.x, v1.y);\n\t                        if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                        _context.scale(scaleX, -scaleY);\n\t                        _context.fillRect(-.5, -.5, 1, 1);\n\t                        _context.restore();\n\t                    }\n\t                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setFillStyle(material.color.getStyle());\n\t                    _context.save();\n\t                    _context.translate(v1.x, v1.y);\n\t                    if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                    _context.scale(scaleX, scaleY);\n\t                    material.program(_context);\n\t                    _context.restore();\n\t                }\n\t            }\n\t            function renderLine(v1, v2, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _context.beginPath();\n\t                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n\t                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n\t                if (material instanceof THREE.LineBasicMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    if (material.vertexColors !== THREE.VertexColors) {\n\t                        setStrokeStyle(material.color.getStyle());\n\t                    } else {\n\t                        var colorStyle1 = element.vertexColors[0].getStyle();\n\t                        var colorStyle2 = element.vertexColors[1].getStyle();\n\t                        if (colorStyle1 === colorStyle2) {\n\t                            setStrokeStyle(colorStyle1);\n\t                        } else {\n\t                            try {\n\t                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n\t                                grad.addColorStop(0, colorStyle1);\n\t                                grad.addColorStop(1, colorStyle2);\n\t                            } catch (exception) {\n\t                                grad = colorStyle1;\n\t                            }\n\t                            setStrokeStyle(grad);\n\t                        }\n\t                    }\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                } else if (material instanceof THREE.LineDashedMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setLineDash([ material.dashSize, material.gapSize ]);\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                    setLineDash([]);\n\t                }\n\t            }\n\t            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n\t                _this.info.render.vertices += 3;\n\t                _this.info.render.faces++;\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _v1x = v1.positionScreen.x;\n\t                _v1y = v1.positionScreen.y;\n\t                _v2x = v2.positionScreen.x;\n\t                _v2y = v2.positionScreen.y;\n\t                _v3x = v3.positionScreen.x;\n\t                _v3y = v3.positionScreen.y;\n\t                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n\t                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n\t                    _diffuseColor.copy(material.color);\n\t                    _emissiveColor.copy(material.emissive);\n\t                    if (material.vertexColors === THREE.FaceColors) {\n\t                        _diffuseColor.multiply(element.color);\n\t                    }\n\t                    _color.copy(_ambientLight);\n\t                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\t                    calculateLight(_centroid, element.normalModel, _color);\n\t                    _color.multiply(_diffuseColor).add(_emissiveColor);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n\t                    if (material.map !== null) {\n\t                        var mapping = material.map.mapping;\n\t                        if (mapping === THREE.UVMapping) {\n\t                            _uvs = element.uvs;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n\t                        }\n\t                    } else if (material.envMap !== null) {\n\t                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n\t                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n\t                            _uv1x = .5 * _normal.x + .5;\n\t                            _uv1y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n\t                            _uv2x = .5 * _normal.x + .5;\n\t                            _uv2y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n\t                            _uv3x = .5 * _normal.x + .5;\n\t                            _uv3y = .5 * _normal.y + .5;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n\t                        }\n\t                    } else {\n\t                        _color.copy(material.color);\n\t                        if (material.vertexColors === THREE.FaceColors) {\n\t                            _color.multiply(element.color);\n\t                        }\n\t                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                    }\n\t                } else if (material instanceof THREE.MeshNormalMaterial) {\n\t                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n\t                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else {\n\t                    _color.setRGB(1, 1, 1);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                }\n\t            }\n\t            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n\t                _context.beginPath();\n\t                _context.moveTo(x0, y0);\n\t                _context.lineTo(x1, y1);\n\t                _context.lineTo(x2, y2);\n\t                _context.closePath();\n\t            }\n\t            function strokePath(color, linewidth, linecap, linejoin) {\n\t                setLineWidth(linewidth);\n\t                setLineCap(linecap);\n\t                setLineJoin(linejoin);\n\t                setStrokeStyle(color.getStyle());\n\t                _context.stroke();\n\t                _elemBox.expandByScalar(linewidth * 2);\n\t            }\n\t            function fillPath(color) {\n\t                setFillStyle(color.getStyle());\n\t                _context.fill();\n\t            }\n\t            function textureToPattern(texture) {\n\t                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: texture.version\n\t                    };\n\t                }\n\t                var image = texture.image;\n\t                if (image.complete === false) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: 0\n\t                    };\n\t                }\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = image.width;\n\t                canvas.height = image.height;\n\t                var context = canvas.getContext(\"2d\");\n\t                context.setTransform(1, 0, 0, -1, 0, image.height);\n\t                context.drawImage(image, 0, 0);\n\t                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t                var repeat = \"no-repeat\";\n\t                if (repeatX === true && repeatY === true) {\n\t                    repeat = \"repeat\";\n\t                } else if (repeatX === true) {\n\t                    repeat = \"repeat-x\";\n\t                } else if (repeatY === true) {\n\t                    repeat = \"repeat-y\";\n\t                }\n\t                var pattern = _context.createPattern(canvas, repeat);\n\t                if (texture.onUpdate) texture.onUpdate(texture);\n\t                return {\n\t                    canvas: pattern,\n\t                    version: texture.version\n\t                };\n\t            }\n\t            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n\t                var pattern = _patterns[texture.id];\n\t                if (pattern === undefined || pattern.version !== texture.version) {\n\t                    pattern = textureToPattern(texture);\n\t                    _patterns[texture.id] = pattern;\n\t                }\n\t                if (pattern.canvas !== undefined) {\n\t                    setFillStyle(pattern.canvas);\n\t                } else {\n\t                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n\t                    _context.fill();\n\t                    return;\n\t                }\n\t                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n\t                u0 = (u0 + offsetX) * width;\n\t                v0 = (v0 + offsetY) * height;\n\t                u1 = (u1 + offsetX) * width;\n\t                v1 = (v1 + offsetY) * height;\n\t                u2 = (u2 + offsetX) * width;\n\t                v2 = (v2 + offsetY) * height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                if (det === 0) return;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.fill();\n\t                _context.restore();\n\t            }\n\t            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n\t                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n\t                u0 *= width;\n\t                v0 *= height;\n\t                u1 *= width;\n\t                v1 *= height;\n\t                u2 *= width;\n\t                v2 *= height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.clip();\n\t                _context.drawImage(image, 0, 0);\n\t                _context.restore();\n\t            }\n\t            function expand(v1, v2, pixels) {\n\t                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n\t                if (det === 0) return;\n\t                idet = pixels / Math.sqrt(det);\n\t                x *= idet;\n\t                y *= idet;\n\t                v2.x += x;\n\t                v2.y += y;\n\t                v1.x -= x;\n\t                v1.y -= y;\n\t            }\n\t            function setOpacity(value) {\n\t                if (_contextGlobalAlpha !== value) {\n\t                    _context.globalAlpha = value;\n\t                    _contextGlobalAlpha = value;\n\t                }\n\t            }\n\t            function setBlending(value) {\n\t                if (_contextGlobalCompositeOperation !== value) {\n\t                    if (value === THREE.NormalBlending) {\n\t                        _context.globalCompositeOperation = \"source-over\";\n\t                    } else if (value === THREE.AdditiveBlending) {\n\t                        _context.globalCompositeOperation = \"lighter\";\n\t                    } else if (value === THREE.SubtractiveBlending) {\n\t                        _context.globalCompositeOperation = \"darker\";\n\t                    } else if (value === THREE.MultiplyBlending) {\n\t                        _context.globalCompositeOperation = \"multiply\";\n\t                    }\n\t                    _contextGlobalCompositeOperation = value;\n\t                }\n\t            }\n\t            function setLineWidth(value) {\n\t                if (_contextLineWidth !== value) {\n\t                    _context.lineWidth = value;\n\t                    _contextLineWidth = value;\n\t                }\n\t            }\n\t            function setLineCap(value) {\n\t                if (_contextLineCap !== value) {\n\t                    _context.lineCap = value;\n\t                    _contextLineCap = value;\n\t                }\n\t            }\n\t            function setLineJoin(value) {\n\t                if (_contextLineJoin !== value) {\n\t                    _context.lineJoin = value;\n\t                    _contextLineJoin = value;\n\t                }\n\t            }\n\t            function setStrokeStyle(value) {\n\t                if (_contextStrokeStyle !== value) {\n\t                    _context.strokeStyle = value;\n\t                    _contextStrokeStyle = value;\n\t                }\n\t            }\n\t            function setFillStyle(value) {\n\t                if (_contextFillStyle !== value) {\n\t                    _context.fillStyle = value;\n\t                    _contextFillStyle = value;\n\t                }\n\t            }\n\t            function setLineDash(value) {\n\t                if (_contextLineDash.length !== value.length) {\n\t                    _context.setLineDash(value);\n\t                    _contextLineDash = value;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        THREE.RenderableObject = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableFace = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.v3 = new THREE.RenderableVertex();\n\t            this.normalModel = new THREE.Vector3();\n\t            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t            this.vertexNormalsLength = 0;\n\t            this.color = new THREE.Color();\n\t            this.material = null;\n\t            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableVertex = function() {\n\t            this.position = new THREE.Vector3();\n\t            this.positionWorld = new THREE.Vector3();\n\t            this.positionScreen = new THREE.Vector4();\n\t            this.visible = true;\n\t        };\n\t        THREE.RenderableVertex.prototype.copy = function(vertex) {\n\t            this.positionWorld.copy(vertex.positionWorld);\n\t            this.positionScreen.copy(vertex.positionScreen);\n\t        };\n\t        THREE.RenderableLine = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t            this.material = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableSprite = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.x = 0;\n\t            this.y = 0;\n\t            this.z = 0;\n\t            this.rotation = 0;\n\t            this.scale = new THREE.Vector2();\n\t            this.material = null;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.Projector = function() {\n\t            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n\t                objects: [],\n\t                lights: [],\n\t                elements: []\n\t            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3((-1), (-1), (-1)), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n\t            this.projectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n\t                vector.project(camera);\n\t            };\n\t            this.unprojectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n\t                vector.unproject(camera);\n\t            };\n\t            this.pickingRay = function(vector, camera) {\n\t                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n\t            };\n\t            var RenderList = function() {\n\t                var normals = [];\n\t                var uvs = [];\n\t                var object = null;\n\t                var material = null;\n\t                var normalMatrix = new THREE.Matrix3();\n\t                function setObject(value) {\n\t                    object = value;\n\t                    material = object.material;\n\t                    normalMatrix.getNormalMatrix(object.matrixWorld);\n\t                    normals.length = 0;\n\t                    uvs.length = 0;\n\t                }\n\t                function projectVertex(vertex) {\n\t                    var position = vertex.position;\n\t                    var positionWorld = vertex.positionWorld;\n\t                    var positionScreen = vertex.positionScreen;\n\t                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n\t                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n\t                    var invW = 1 / positionScreen.w;\n\t                    positionScreen.x *= invW;\n\t                    positionScreen.y *= invW;\n\t                    positionScreen.z *= invW;\n\t                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n\t                }\n\t                function pushVertex(x, y, z) {\n\t                    _vertex = getNextVertexInPool();\n\t                    _vertex.position.set(x, y, z);\n\t                    projectVertex(_vertex);\n\t                }\n\t                function pushNormal(x, y, z) {\n\t                    normals.push(x, y, z);\n\t                }\n\t                function pushUv(x, y) {\n\t                    uvs.push(x, y);\n\t                }\n\t                function checkTriangleVisibility(v1, v2, v3) {\n\t                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n\t                    _points3[0] = v1.positionScreen;\n\t                    _points3[1] = v2.positionScreen;\n\t                    _points3[2] = v3.positionScreen;\n\t                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n\t                }\n\t                function checkBackfaceCulling(v1, v2, v3) {\n\t                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n\t                }\n\t                function pushLine(a, b) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    _line = getNextLineInPool();\n\t                    _line.id = object.id;\n\t                    _line.v1.copy(v1);\n\t                    _line.v2.copy(v2);\n\t                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n\t                    _line.renderOrder = object.renderOrder;\n\t                    _line.material = object.material;\n\t                    _renderData.elements.push(_line);\n\t                }\n\t                function pushTriangle(a, b, c) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    var v3 = _vertexPool[c];\n\t                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n\t                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n\t                        _face = getNextFaceInPool();\n\t                        _face.id = object.id;\n\t                        _face.v1.copy(v1);\n\t                        _face.v2.copy(v2);\n\t                        _face.v3.copy(v3);\n\t                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                        _face.renderOrder = object.renderOrder;\n\t                        _face.normalModel.fromArray(normals, a * 3);\n\t                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n\t                        for (var i = 0; i < 3; i++) {\n\t                            var normal = _face.vertexNormalsModel[i];\n\t                            normal.fromArray(normals, arguments[i] * 3);\n\t                            normal.applyMatrix3(normalMatrix).normalize();\n\t                            var uv = _face.uvs[i];\n\t                            uv.fromArray(uvs, arguments[i] * 2);\n\t                        }\n\t                        _face.vertexNormalsLength = 3;\n\t                        _face.material = object.material;\n\t                        _renderData.elements.push(_face);\n\t                    }\n\t                }\n\t                return {\n\t                    setObject: setObject,\n\t                    projectVertex: projectVertex,\n\t                    checkTriangleVisibility: checkTriangleVisibility,\n\t                    checkBackfaceCulling: checkBackfaceCulling,\n\t                    pushVertex: pushVertex,\n\t                    pushNormal: pushNormal,\n\t                    pushUv: pushUv,\n\t                    pushLine: pushLine,\n\t                    pushTriangle: pushTriangle\n\t                };\n\t            };\n\t            var renderList = new RenderList();\n\t            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n\t                _faceCount = 0;\n\t                _lineCount = 0;\n\t                _spriteCount = 0;\n\t                _renderData.elements.length = 0;\n\t                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n\t                if (camera.parent === null) camera.updateMatrixWorld();\n\t                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n\t                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\t                _frustum.setFromMatrix(_viewProjectionMatrix);\n\t                _objectCount = 0;\n\t                _renderData.objects.length = 0;\n\t                _renderData.lights.length = 0;\n\t                function addObject(object) {\n\t                    _object = getNextObjectInPool();\n\t                    _object.id = object.id;\n\t                    _object.object = object;\n\t                    _vector3.setFromMatrixPosition(object.matrixWorld);\n\t                    _vector3.applyProjection(_viewProjectionMatrix);\n\t                    _object.z = _vector3.z;\n\t                    _object.renderOrder = object.renderOrder;\n\t                    _renderData.objects.push(_object);\n\t                }\n\t                scene.traverseVisible(function(object) {\n\t                    if (object instanceof THREE.Light) {\n\t                        _renderData.lights.push(object);\n\t                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line) {\n\t                        if (object.material.visible === false) return;\n\t                        if (object.frustumCulled === true && _frustum.intersectsObject(object) === false) return;\n\t                        addObject(object);\n\t                    } else if (object instanceof THREE.Sprite) {\n\t                        if (object.material.visible === false) return;\n\t                        if (object.frustumCulled === true && _frustum.intersectsSprite(object) === false) return;\n\t                        addObject(object);\n\t                    }\n\t                });\n\t                if (sortObjects === true) {\n\t                    _renderData.objects.sort(painterSort);\n\t                }\n\t                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n\t                    var object = _renderData.objects[o].object;\n\t                    var geometry = object.geometry;\n\t                    renderList.setObject(object);\n\t                    _modelMatrix = object.matrixWorld;\n\t                    _vertexCount = 0;\n\t                    if (object instanceof THREE.Mesh) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            var groups = geometry.groups;\n\t                            if (attributes.position === undefined) continue;\n\t                            var positions = attributes.position.array;\n\t                            for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                            }\n\t                            if (attributes.normal !== undefined) {\n\t                                var normals = attributes.normal.array;\n\t                                for (var i = 0, l = normals.length; i < l; i += 3) {\n\t                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n\t                                }\n\t                            }\n\t                            if (attributes.uv !== undefined) {\n\t                                var uvs = attributes.uv.array;\n\t                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n\t                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n\t                                }\n\t                            }\n\t                            if (geometry.index !== null) {\n\t                                var indices = geometry.index.array;\n\t                                if (groups.length > 0) {\n\t                                    for (var o = 0; o < groups.length; o++) {\n\t                                        var group = groups[o];\n\t                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n\t                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n\t                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n\t                                    renderList.pushTriangle(i, i + 1, i + 2);\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            var vertices = geometry.vertices;\n\t                            var faces = geometry.faces;\n\t                            var faceVertexUvs = geometry.faceVertexUvs[0];\n\t                            _normalMatrix.getNormalMatrix(_modelMatrix);\n\t                            var material = object.material;\n\t                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n\t                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n\t                                var vertex = vertices[v];\n\t                                _vector3.copy(vertex);\n\t                                if (material.morphTargets === true) {\n\t                                    var morphTargets = geometry.morphTargets;\n\t                                    var morphInfluences = object.morphTargetInfluences;\n\t                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n\t                                        var influence = morphInfluences[t];\n\t                                        if (influence === 0) continue;\n\t                                        var target = morphTargets[t];\n\t                                        var targetVertex = target.vertices[v];\n\t                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n\t                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n\t                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n\t                                    }\n\t                                }\n\t                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n\t                            }\n\t                            for (var f = 0, fl = faces.length; f < fl; f++) {\n\t                                var face = faces[f];\n\t                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n\t                                if (material === undefined) continue;\n\t                                var side = material.side;\n\t                                var v1 = _vertexPool[face.a];\n\t                                var v2 = _vertexPool[face.b];\n\t                                var v3 = _vertexPool[face.c];\n\t                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n\t                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n\t                                if (side !== THREE.DoubleSide) {\n\t                                    if (side === THREE.FrontSide && visible === false) continue;\n\t                                    if (side === THREE.BackSide && visible === true) continue;\n\t                                }\n\t                                _face = getNextFaceInPool();\n\t                                _face.id = object.id;\n\t                                _face.v1.copy(v1);\n\t                                _face.v2.copy(v2);\n\t                                _face.v3.copy(v3);\n\t                                _face.normalModel.copy(face.normal);\n\t                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                    _face.normalModel.negate();\n\t                                }\n\t                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                var faceVertexNormals = face.vertexNormals;\n\t                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n\t                                    var normalModel = _face.vertexNormalsModel[n];\n\t                                    normalModel.copy(faceVertexNormals[n]);\n\t                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                        normalModel.negate();\n\t                                    }\n\t                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                }\n\t                                _face.vertexNormalsLength = faceVertexNormals.length;\n\t                                var vertexUvs = faceVertexUvs[f];\n\t                                if (vertexUvs !== undefined) {\n\t                                    for (var u = 0; u < 3; u++) {\n\t                                        _face.uvs[u].copy(vertexUvs[u]);\n\t                                    }\n\t                                }\n\t                                _face.color = face.color;\n\t                                _face.material = material;\n\t                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                                _face.renderOrder = object.renderOrder;\n\t                                _renderData.elements.push(_face);\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Line) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            if (attributes.position !== undefined) {\n\t                                var positions = attributes.position.array;\n\t                                for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                                }\n\t                                if (geometry.index !== null) {\n\t                                    var indices = geometry.index.array;\n\t                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n\t                                        renderList.pushLine(indices[i], indices[i + 1]);\n\t                                    }\n\t                                } else {\n\t                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n\t                                        renderList.pushLine(i, i + 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n\t                            var vertices = object.geometry.vertices;\n\t                            if (vertices.length === 0) continue;\n\t                            v1 = getNextVertexInPool();\n\t                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n\t                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n\t                                v1 = getNextVertexInPool();\n\t                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n\t                                if ((v + 1) % step > 0) continue;\n\t                                v2 = _vertexPool[_vertexCount - 2];\n\t                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n\t                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n\t                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n\t                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n\t                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n\t                                    _line = getNextLineInPool();\n\t                                    _line.id = object.id;\n\t                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n\t                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n\t                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n\t                                    _line.renderOrder = object.renderOrder;\n\t                                    _line.material = object.material;\n\t                                    if (object.material.vertexColors === THREE.VertexColors) {\n\t                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n\t                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n\t                                    }\n\t                                    _renderData.elements.push(_line);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Sprite) {\n\t                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n\t                        _vector4.applyMatrix4(_viewProjectionMatrix);\n\t                        var invW = 1 / _vector4.w;\n\t                        _vector4.z *= invW;\n\t                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n\t                            _sprite = getNextSpriteInPool();\n\t                            _sprite.id = object.id;\n\t                            _sprite.x = _vector4.x * invW;\n\t                            _sprite.y = _vector4.y * invW;\n\t                            _sprite.z = _vector4.z;\n\t                            _sprite.renderOrder = object.renderOrder;\n\t                            _sprite.object = object;\n\t                            _sprite.rotation = object.rotation;\n\t                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n\t                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n\t                            _sprite.material = object.material;\n\t                            _renderData.elements.push(_sprite);\n\t                        }\n\t                    }\n\t                }\n\t                if (sortElements === true) {\n\t                    _renderData.elements.sort(painterSort);\n\t                }\n\t                return _renderData;\n\t            };\n\t            function getNextObjectInPool() {\n\t                if (_objectCount === _objectPoolLength) {\n\t                    var object = new THREE.RenderableObject();\n\t                    _objectPool.push(object);\n\t                    _objectPoolLength++;\n\t                    _objectCount++;\n\t                    return object;\n\t                }\n\t                return _objectPool[_objectCount++];\n\t            }\n\t            function getNextVertexInPool() {\n\t                if (_vertexCount === _vertexPoolLength) {\n\t                    var vertex = new THREE.RenderableVertex();\n\t                    _vertexPool.push(vertex);\n\t                    _vertexPoolLength++;\n\t                    _vertexCount++;\n\t                    return vertex;\n\t                }\n\t                return _vertexPool[_vertexCount++];\n\t            }\n\t            function getNextFaceInPool() {\n\t                if (_faceCount === _facePoolLength) {\n\t                    var face = new THREE.RenderableFace();\n\t                    _facePool.push(face);\n\t                    _facePoolLength++;\n\t                    _faceCount++;\n\t                    return face;\n\t                }\n\t                return _facePool[_faceCount++];\n\t            }\n\t            function getNextLineInPool() {\n\t                if (_lineCount === _linePoolLength) {\n\t                    var line = new THREE.RenderableLine();\n\t                    _linePool.push(line);\n\t                    _linePoolLength++;\n\t                    _lineCount++;\n\t                    return line;\n\t                }\n\t                return _linePool[_lineCount++];\n\t            }\n\t            function getNextSpriteInPool() {\n\t                if (_spriteCount === _spritePoolLength) {\n\t                    var sprite = new THREE.RenderableSprite();\n\t                    _spritePool.push(sprite);\n\t                    _spritePoolLength++;\n\t                    _spriteCount++;\n\t                    return sprite;\n\t                }\n\t                return _spritePool[_spriteCount++];\n\t            }\n\t            function painterSort(a, b) {\n\t                if (a.renderOrder !== b.renderOrder) {\n\t                    return a.renderOrder - b.renderOrder;\n\t                } else if (a.z !== b.z) {\n\t                    return b.z - a.z;\n\t                } else if (a.id !== b.id) {\n\t                    return a.id - b.id;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            }\n\t            function clipLine(s1, s2) {\n\t                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n\t                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n\t                    return true;\n\t                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n\t                    return false;\n\t                } else {\n\t                    if (bc1near < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n\t                    } else if (bc2near < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n\t                    }\n\t                    if (bc1far < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n\t                    } else if (bc2far < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n\t                    }\n\t                    if (alpha2 < alpha1) {\n\t                        return false;\n\t                    } else {\n\t                        s1.lerp(s2, alpha1);\n\t                        s2.lerp(s1, 1 - alpha2);\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(10);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(5);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsManager_1 = __webpack_require__(18);\n\t        var Screen_1 = __webpack_require__(19);\n\t        var AxisMarks_1 = __webpack_require__(20);\n\t        var interfaces_1 = __webpack_require__(21);\n\t        var deps_1 = __webpack_require__(5);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            SCROLL_STOP: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var ChartState = function() {\n\t            function ChartState(initialState, plugins) {\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.data = {\n\t                    prevState: {},\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 100\n\t                        },\n\t                        autoScroll: true,\n\t                        marks: []\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        grid: {\n\t                            enabled: true,\n\t                            minSizePx: 50\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        marks: []\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: .25,\n\t                        zoomEase: void 0,\n\t                        scrollSpeed: .5,\n\t                        scrollEase: Linear.easeNone,\n\t                        autoScrollSpeed: 1,\n\t                        autoScrollEase: Linear.easeNone\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    trendDefaultState: {\n\t                        enabled: true,\n\t                        type: Trend_1.TREND_TYPE.LINE,\n\t                        data: [],\n\t                        maxSegmentLength: 1e3,\n\t                        lineWidth: 2,\n\t                        lineColor: 16777215,\n\t                        hasBackground: false,\n\t                        backgroundColor: \"rgba(#5273BD, 0.15)\",\n\t                        hasBeacon: false,\n\t                        settingsForTypes: {\n\t                            CANDLE: {\n\t                                minSegmentLengthInPx: 20,\n\t                                maxSegmentLengthInPx: 40\n\t                            },\n\t                            LINE: {\n\t                                minSegmentLengthInPx: 2,\n\t                                maxSegmentLengthInPx: 10\n\t                            }\n\t                        }\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    backgroundColor: 0,\n\t                    backgroundOpacity: 1,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20,\n\t                    maxVisibleSegments: 1280\n\t                };\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n\t                this.data = Utils_1.Utils.deepMerge(this.data, initialState);\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.initListeners();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            ChartState.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.data = {};\n\t            };\n\t            ChartState.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            ChartState.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            ChartState.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            ChartState.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onScrollStop = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t            };\n\t            ChartState.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            ChartState.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            ChartState.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            ChartState.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            ChartState.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            ChartState.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var stateData = this.data;\n\t                var newStateObj = newState;\n\t                var changedProps = {};\n\t                for (var key in newStateObj) {\n\t                    if (stateData[key] !== newStateObj[key]) {\n\t                        changedProps[key] = newStateObj[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.data.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            ChartState.prototype.recalculateState = function(changedProps) {\n\t                var data = this.data;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.data = Utils_1.Utils.deepMerge(this.data, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            ChartState.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            ChartState.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.data;\n\t                var prevState = this.data.prevState;\n\t                Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.data.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            ChartState.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChartState(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            ChartState.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            ChartState.prototype.initListeners = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t            };\n\t            ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t            };\n\t            ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            ChartState.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.data.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            ChartState.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.data.width / (scaleFactor * zoom);\n\t                var nextRange = this.data.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            ChartState.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.data.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            ChartState.prototype.scrollToEnd = function() {\n\t                var _this = this;\n\t                var state = this.data;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            ChartState.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            ChartState.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            ChartState.prototype.getValueOnXAxis = function(x) {\n\t                return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            ChartState.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            ChartState.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            ChartState.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            ChartState.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            ChartState.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            ChartState.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            ChartState.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            ChartState.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.data.width);\n\t            };\n\t            ChartState.prototype.getPaddingRight = function() {\n\t                return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n\t            };\n\t            return ChartState;\n\t        }();\n\t        exports.ChartState = ChartState;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendSegmentsManager_1 = __webpack_require__(17);\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        var deps_1 = __webpack_require__(5);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chartState = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.data.trendDefaultState, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.onInitialStateApplied = function() {\n\t                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\n\t            };\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chartState;\n\t                chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateApplied();\n\t                });\n\t                chartState.onScrollStop(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chartState.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chartState.data.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chartState.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chartState;\n\t                var minXVal = chartState.data.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(16);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegmentsManager = function() {\n\t            function TrendSegmentsManager(chartState, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t                this.bindEvents();\n\t            }\n\t            TrendSegmentsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.chartState.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                });\n\t                this.chartState.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegmentsManager.prototype.getSegment = function(id) {\n\t                return this.segmentsById[id];\n\t            };\n\t            TrendSegmentsManager.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n\t                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n\t                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n\t                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegmentsManager.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegmentsManager;\n\t        }();\n\t        exports.TrendSegmentsManager = TrendSegmentsManager;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t                this.bindEvents();\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                });\n\t            };\n\t            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                var _this = this;\n\t                var _loop_1 = function(trendName) {\n\t                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n\t                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                    });\n\t                };\n\t                var this_1 = this;\n\t                for (var trendName in this.trends) {\n\t                    _loop_1(trendName);\n\t                }\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.currentScrollX = {\n\t                    x: 0\n\t                };\n\t                this.currentScrollY = {\n\t                    y: 0\n\t                };\n\t                this.currentZoomX = {\n\t                    val: 1\n\t                };\n\t                this.currentZoomY = {\n\t                    val: 1\n\t                };\n\t                this.chartState = chartState;\n\t                var _a = chartState.data, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chartState.data, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"zoomFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"scrollFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"transformationFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                this.ee.emit(\"transformationFrame\", options);\n\t                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t                    this.ee.emit(\"scrollFrame\", options);\n\t                }\n\t                if (options.zoomX != void 0 || options.zoomY != void 0) {\n\t                    this.ee.emit(\"zoomFrame\", options);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.scrollXAnimation && this.scrollXAnimation.kill();\n\t                this.scrollYAnimation && this.scrollYAnimation.kill();\n\t                this.zoomXAnimation && this.zoomXAnimation.kill();\n\t                this.zoomYAnimation && this.zoomYAnimation.kill();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var isDragMode = state.data.cursor.dragMode;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled && !isDragMode;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n\t                var range = state.data.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollX.x = this.options.scrollX;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollX: _this.currentScrollX.x\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t                        x: targetX,\n\t                        ease: ease\n\t                    });\n\t                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollX.x = targetX;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t                var range = state.data.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollY.y = this.options.scrollY;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollY: _this.currentScrollY.y\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t                        y: targetY,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollY.y = targetY;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.data.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomX: _this.currentZoomX.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomX.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.data.yAxis.range.zoom;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomY: _this.currentZoomY.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomY.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chartState.data.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chartState.data.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chartState.data.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chartState.data.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(4);\n\t        var interfaces_1 = __webpack_require__(21);\n\t        var EventEmmiter_1 = __webpack_require__(14);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget() {\n\t                this.unbindList = [];\n\t            }\n\t            ChartWidget.prototype.setupChartState = function(chartState) {\n\t                this.chartState = chartState;\n\t            };\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unbindList = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unbindList.push(args[0]);\n\t                } else {\n\t                    unbindList.push.apply(unbindList, args);\n\t                }\n\t                (_a = this.unbindList).push.apply(_a, unbindList);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unbindList.forEach(function(unbindEvent) {\n\t                    return unbindEvent();\n\t                });\n\t                this.unbindList.length = 0;\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(22);\n\t        var GridWidget_1 = __webpack_require__(24);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var interfaces_1 = __webpack_require__(21);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            AxisWidget.prototype.onReadyHandler = function() {\n\t                var _this = this;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(this.chartState.screen.options.scrollX, this.chartState.screen.options.scrollY);\n\t                this.bindEvents();\n\t            };\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                }\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                    ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chartState.data.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chartState.data.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(22);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget() {\n\t                _super.apply(this, arguments);\n\t                this.isDestroyed = false;\n\t            }\n\t            GridWidget.prototype.onReadyHandler = function() {\n\t                var _a = this.chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t                this.bindEvents();\n\t            };\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chartState.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chartState.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chartState.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chartState.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    opacity: .1,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chartState;\n\t                var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chartState;\n\t                var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.grid.minSizePx;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsWidget_1 = __webpack_require__(26);\n\t        var Color_1 = __webpack_require__(27);\n\t        var TrendsGradientWidget = function(_super) {\n\t            __extends(TrendsGradientWidget, _super);\n\t            function TrendsGradientWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendGradient;\n\t            };\n\t            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n\t            return TrendsGradientWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsGradientWidget = TrendsGradientWidget;\n\t        var TrendGradient = function(_super) {\n\t            __extends(TrendGradient, _super);\n\t            function TrendGradient(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.visibleSegmentsCnt = 0;\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.segmentsIds = new Uint16Array(chartState.data.maxVisibleSegments);\n\t                this.initGradient();\n\t                this.updateSegments();\n\t            }\n\t            TrendGradient.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBackground;\n\t            };\n\t            TrendGradient.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t                this.bindEvent(this.chartState.onZoom(function() {\n\t                    _this.updateSegments();\n\t                }));\n\t            };\n\t            TrendGradient.prototype.getObject3D = function() {\n\t                return this.gradient;\n\t            };\n\t            TrendGradient.prototype.initGradient = function() {\n\t                var geometry = new Geometry();\n\t                for (var i = 0; i < this.segmentsIds.length; i++) {\n\t                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n\t                    var ind = i * 4;\n\t                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n\t                }\n\t                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n\t                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n\t                    color: color.value,\n\t                    transparent: true,\n\t                    opacity: color.a\n\t                }));\n\t                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.gradient.frustumCulled = false;\n\t            };\n\t            TrendGradient.prototype.onZoomFrame = function(options) {\n\t                var state = this.chartState.data;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                var currentScale = this.gradient.scale;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n\t                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n\t                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n\t                    var segmentId = this.segmentsIds[i];\n\t                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n\t                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n\t                }\n\t                this.gradient.geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.updateSegments = function() {\n\t                var geometry = this.gradient.geometry;\n\t                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n\t                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n\t                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n\t                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n\t                if (segmentsToProcessCnt > this.segmentsIds.length) {\n\t                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n\t                }\n\t                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n\t                    if (segmentInd <= lastDisplayedSegmentInd) {\n\t                        var segment = trendSegments[segmentInd];\n\t                        this.setupSegmentVertices(i, segment.currentAnimationState);\n\t                        this.segmentsIds[i] = segment.id;\n\t                        segmentInd++;\n\t                    } else {\n\t                        this.setupSegmentVertices(i);\n\t                    }\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n\t                var gradientSegmentInd = segmentInd * 4;\n\t                var vertices = this.gradient.geometry.vertices;\n\t                var topLeft = vertices[gradientSegmentInd];\n\t                var bottomLeft = vertices[gradientSegmentInd + 1];\n\t                var bottomRight = vertices[gradientSegmentInd + 2];\n\t                var topRight = vertices[gradientSegmentInd + 3];\n\t                var screenHeightVal = Math.max(this.chartState.pxToValueByYAxis(this.chartState.data.height), this.chartState.screen.pxToValueByYAxis(this.chartState.data.height));\n\t                if (segmentState) {\n\t                    var startX = this.toLocalX(segmentState.startXVal);\n\t                    var startY = this.toLocalY(segmentState.startYVal);\n\t                    var endX = this.toLocalX(segmentState.endXVal);\n\t                    var endY = this.toLocalY(segmentState.endYVal);\n\t                    topLeft.set(startX, startY, 0);\n\t                    topRight.set(endX, endY, 0);\n\t                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n\t                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n\t                } else {\n\t                    topLeft.set(0, 0, 0);\n\t                    topRight.set(0, 0, 0);\n\t                    bottomLeft.set(0, 0, 0);\n\t                    bottomRight.set(0, 0, 0);\n\t                }\n\t            };\n\t            TrendGradient.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendGradient.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            return TrendGradient;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendGradient = TrendGradient;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(22);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget() {\n\t                _super.apply(this, arguments);\n\t                this.widgets = {};\n\t            }\n\t            TrendsWidget.prototype.onReadyHandler = function() {\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t                this.bindEvents();\n\t            };\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chartState.data.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chartState.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chartState, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chartState, trendName) {\n\t                this.chartState = chartState;\n\t                this.trendName = trendName;\n\t                this.unbindList = [];\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chartState.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unbind) {\n\t                this.unbindList.push(unbind);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartColor = function() {\n\t            function ChartColor(color) {\n\t                this.set(color);\n\t            }\n\t            /**!\n\t\t     * @preserve $.parseColor\n\t\t     * Copyright 2011 THEtheChad Elliott\n\t\t     * Released under the MIT and GPL licenses.\n\t\t     */\n\t            ChartColor.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            ChartColor.prototype.set = function(color) {\n\t                if (typeof color == \"number\") color = \"#\" + color.toString(16);\n\t                var colorStr = color;\n\t                var rgba = ChartColor.parseColor(colorStr);\n\t                this.r = rgba[0];\n\t                this.g = rgba[1];\n\t                this.b = rgba[2];\n\t                this.a = rgba[3];\n\t                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n\t                this.hexStr = \"#\" + this.value.toString(16);\n\t                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n\t            };\n\t            return ChartColor;\n\t        }();\n\t        exports.ChartColor = ChartColor;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(26);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(16);\n\t        var Utils_1 = __webpack_require__(4);\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < this.chartState.data.maxVisibleSegments; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                var state = this.chartState.data;\n\t                var scaleXFactor = state.xAxis.range.scaleFactor;\n\t                var scaleYFactor = state.yAxis.range.scaleFactor;\n\t                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(26);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(16);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(4);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chartState.data;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(32)\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(29)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsBeaconWidget = function(_super) {\n\t            __extends(TrendsBeaconWidget, _super);\n\t            function TrendsBeaconWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendBeacon;\n\t            };\n\t            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t            return TrendsBeaconWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t        var TrendBeacon = function(_super) {\n\t            __extends(TrendBeacon, _super);\n\t            function TrendBeacon(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.initObject();\n\t                if (state.data.animations.enabled) {\n\t                    this.animate();\n\t                }\n\t                this.updatePosition();\n\t            }\n\t            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendBeacon.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendBeacon.prototype.onTrendChange = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.chartState.onScroll(function() {\n\t                    return _this.updatePosition();\n\t                }));\n\t                this.bindEvent(this.chartState.onChange(function(changedProps) {\n\t                    return _this.onStateChange(changedProps);\n\t                }));\n\t                this.bindEvent(this.chartState.onDestroy(function() {\n\t                    return _this.stopAnimation();\n\t                }));\n\t            };\n\t            TrendBeacon.prototype.initObject = function() {\n\t                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                light.scale.set(.2, .2, 1);\n\t                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture()\n\t                })));\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t            };\n\t            TrendBeacon.prototype.animate = function() {\n\t                var _this = this;\n\t                this.animated = true;\n\t                var object = this.mesh;\n\t                var animationObject = {\n\t                    scale: object.scale.x,\n\t                    opacity: object.material.opacity\n\t                };\n\t                this.mesh.scale.set(.1, .1, 1);\n\t                setTimeout(function() {\n\t                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                        scale: 1,\n\t                        opacity: 0\n\t                    });\n\t                    animation.eventCallback(\"onUpdate\", function() {\n\t                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                        object.material.opacity = animationObject.opacity;\n\t                    }).eventCallback(\"onComplete\", function() {\n\t                        _this.animation && animation.restart();\n\t                    });\n\t                }, 500);\n\t            };\n\t            TrendBeacon.prototype.stopAnimation = function() {\n\t                this.animated = false;\n\t                this.animation && this.animation.kill();\n\t                this.animation = null;\n\t            };\n\t            TrendBeacon.createTexture = function() {\n\t                var h = 32, w = 32;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                    ctx.fillStyle = \"white\";\n\t                    ctx.fill();\n\t                });\n\t            };\n\t            TrendBeacon.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                this.segment = trendsSegments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                if (!changedProps.animations) return;\n\t                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                if (changedProps.animations.enabled) {\n\t                    this.animate();\n\t                } else {\n\t                    this.stopAnimation();\n\t                }\n\t            };\n\t            TrendBeacon.prototype.updatePosition = function() {\n\t                var state = this.chartState;\n\t                var xVal, yVal;\n\t                var currentAnimationState = this.segment.currentAnimationState;\n\t                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    xVal = currentAnimationState.endXVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                } else {\n\t                    xVal = currentAnimationState.xVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                }\n\t                var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n\t                var screenWidth = state.data.width;\n\t                var x = endPointVector.x;\n\t                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                if (screenX < 0) x = state.screen.getPointByScreenX(0);\n\t                if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n\t                this.mesh.position.set(x, endPointVector.y, .1);\n\t            };\n\t            return TrendBeacon;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendBeacon = TrendBeacon;\n\t    }, function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(34)\n\n/***/ },\n\n/***/ 34:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(29)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(4));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, , function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var TrendsLoadingWidget = function(_super) {\n\t            __extends(TrendsLoadingWidget, _super);\n\t            function TrendsLoadingWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLoading;\n\t            };\n\t            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t            return TrendsLoadingWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t        var TrendLoading = function(_super) {\n\t            __extends(TrendLoading, _super);\n\t            function TrendLoading(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.isActive = false;\n\t                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendLoading.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                this.deactivate();\n\t            }\n\t            TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n\t                return trendOptions.enabled && chartState.data.animations.enabled;\n\t            };\n\t            TrendLoading.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendLoading.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.onPrependRequest(function() {\n\t                    return _this.activate();\n\t                }));\n\t            };\n\t            TrendLoading.prototype.prependData = function() {\n\t                this.deactivate();\n\t            };\n\t            TrendLoading.prototype.activate = function() {\n\t                var mesh = this.mesh;\n\t                mesh.material.opacity = 1;\n\t                mesh.rotation.z = 0;\n\t                var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                    z: Math.PI * 2\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animation.restart();\n\t                });\n\t                this.animation = animation;\n\t                this.isActive = true;\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.deactivate = function() {\n\t                this.animation && this.animation.kill();\n\t                this.mesh.material.opacity = 0;\n\t                this.isActive = false;\n\t            };\n\t            TrendLoading.createTexture = function() {\n\t                var h = 64, w = 64;\n\t                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                    ctx.lineWidth = 5;\n\t                    var center = h / 2;\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                    ctx.stroke();\n\t                });\n\t            };\n\t            TrendLoading.prototype.onZoomFrame = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.updatePosition = function() {\n\t                if (!this.isActive) return;\n\t                var trend = this.trend;\n\t                var segment = trend.segmentsManager.getStartSegment();\n\t                var x, y;\n\t                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n\t                    x = segment.currentAnimationState.startXVal;\n\t                    y = segment.currentAnimationState.startYVal;\n\t                } else {\n\t                    x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                    y = segment.currentAnimationState.yVal;\n\t                }\n\t                var pointVector = this.chartState.screen.getPointOnChart(x, y);\n\t                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t            };\n\t            return TrendLoading;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendLoading = TrendLoading;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n/***/ },\n\n/***/ 35:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(36)\n\n/***/ },\n\n/***/ 36:\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(__webpack_require__(29)); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = factory(root[\"three-charts\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(3));\n\t    }, , function(module, exports) {\n\t        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var three_charts_1 = __webpack_require__(2);\n\t        var CANVAS_WIDTH = 128;\n\t        var CANVAS_HEIGHT = 64;\n\t        var OFFSET_X = 15;\n\t        var TrendsIndicatorWidget = function(_super) {\n\t            __extends(TrendsIndicatorWidget, _super);\n\t            function TrendsIndicatorWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendIndicator;\n\t            };\n\t            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t            return TrendsIndicatorWidget;\n\t        }(three_charts_1.TrendsWidget);\n\t        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t        var TrendIndicator = function(_super) {\n\t            __extends(TrendIndicator, _super);\n\t            function TrendIndicator(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.initObject();\n\t                this.onTrendChange();\n\t            }\n\t            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasIndicator;\n\t            };\n\t            TrendIndicator.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendIndicator.prototype.onTrendChange = function() {\n\t                var trendData = this.trend.getData();\n\t                var lastItem = trendData[trendData.length - 1];\n\t                var texture = this.mesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                texture.needsUpdate = true;\n\t            };\n\t            TrendIndicator.prototype.initObject = function() {\n\t                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n\t                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"15px Arial\";\n\t                    ctx.fillStyle = color.rgbaStr;\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t            };\n\t            TrendIndicator.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segmentsManager.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                this.segment = segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.updatePosition = function() {\n\t                var state = this.chartState;\n\t                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                var screenWidth = state.data.width;\n\t                var x = endPointVector.x + OFFSET_X;\n\t                var y = endPointVector.y;\n\t                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                if (indicatorIsOutOfScreen) {\n\t                    if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n\t                    if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                    y -= 25;\n\t                }\n\t                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t            };\n\t            return TrendIndicator;\n\t        }(three_charts_1.TrendWidget);\n\t        exports.TrendIndicator = TrendIndicator;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n/***/ }\n\n/******/ })\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** demoApp.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c12ac9494aeca1d93560\n **/","import { Chart, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from 'three-charts';\n//import { Chart, AXIS_RANGE_TYPE, ITrendItem, Utils, AXIS_DATA_TYPE, TREND_TYPE } from '../src';\n// import { TREND_MARK_SIDE, ITrendMarkOptions, TrendsMarksPlugin } from '../plugins/build/TrendsMarksPlugin';\nimport { TrendsBeaconWidget } from '../plugins/build/TrendsBeaconWidget';\nimport { TrendsLoadingWidget } from '../plugins/build/TrendsLoadingWidget';\nimport { TrendsIndicatorWidget } from '../plugins/build/TrendsIndicatorWidget';\n\nvar chart: Chart;\n\nclass DataSourse {\n\tdata: ITrendItem[] = [];\n\tstartTime: number;\n\tendTime: number;\n\n\tconstructor() {\n\t\tlet sec = 0;\n\t\tlet val = 70;\n\t\tthis.startTime = Date.now();\n\n\t\twhile (sec < 100) { //2592000\n\t\t\tthis.data.push({\n\t\t\t\txVal: this.startTime + sec * 1000,\n\t\t\t\tyVal: val\n\t\t\t});\n\t\t\tval += Math.random() * 14 - 7;\n\t\t\tsec++;\n\t\t}\n\t\tthis.endTime = this.data[this.data.length - 1].xVal;\n\t}\n\n\tgetData() {\n\t\treturn Utils.deepCopy(this.data);\n\t}\n\n\tgetNext() {\n\t\tvar lastVal = this.data[this.data.length - 1];\n\t\tvar yVal = lastVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.endTime + 1000;\n\t\tthis.endTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.push(item);\n\t\treturn item;\n\t}\n\n\tgetPrev() {\n\t\tvar firstVal = this.data[0];\n\t\tvar yVal = firstVal.yVal + Math.random() * 14 - 7;\n\t\tvar xVal = this.startTime - 1000;\n\t\tthis.startTime = xVal;\n\t\tvar item = {\n\t\t\txVal: xVal,\n\t\t\tyVal: yVal\n\t\t};\n\t\tthis.data.unshift(item);\n\t\treturn item;\n\t}\n}\n\n// class MarksSource {\n// \tstatic getNext(val: number): ITrendMarkOptions {\n// \t\tif (Math.random() > 0.2) return null;\n// \t\treturn this.generate(val);\n// \t}\n//\n// \tstatic generate(val: number): ITrendMarkOptions {\n// \t\tlet descriptionColor = 'rgb(40,136,75)';\n// \t\tlet orientation =  Utils.getRandomItem([TREND_MARK_SIDE.TOP, TREND_MARK_SIDE.BOTTOM]);\n// \t\tif (orientation == TREND_MARK_SIDE.BOTTOM) {\n// \t\t\tdescriptionColor = 'rgb(219,73,49)';\n// \t\t}\n//\n// \t\treturn {\n// \t\t\ttrendName: 'main',\n// \t\t\tvalue: val,\n// \t\t\ttitle: Utils.getRandomItem(['Alex Malcon', 'Serg Morrs', 'Harry Potter']),\n// \t\t\tdescription: Utils.getRandomItem(['$10 -> 20$', '$15 -> 30$', '40$ -> 80$']),\n// \t\t\ticon: Utils.getRandomItem(['AM', 'SM', 'HP']),\n// \t\t\ticonColor: Utils.getRandomItem(['rgb(69,67,130)', 'rgb(124,39,122)']),\n// \t\t\torientation: orientation,\n// \t\t\tdescriptionColor: descriptionColor\n// \t\t}\n// \t}\n// }\n\nwindow.onload = function () {\n\n\tinitListeners();\n\n\tvar dsMain = new DataSourse();\n\tvar dsRed = new DataSourse();\n\tvar dsBlue = new DataSourse();\n\tvar now = Date.now();\n\n\n\tChart.installWidget(TrendsLoadingWidget);\n\tChart.installWidget(TrendsBeaconWidget);\n\tChart.installWidget(TrendsIndicatorWidget);\n\n\tchart = new Chart({\n\t\tyAxis: {\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.data[0].yVal, name: 'openprice', title: 'OPEN PRICE', lineColor: '#29874b', stickToEdges: true},\n\t\t\t],\n\t\t\trange: {\n\n\t\t\t\tpadding: {end: 100, start: 100},\n\t\t\t\tmargin: {end: 50, start: 50},\n\t\t\t\tzeroVal: 70\n\t\t\t}\n\t\t},\n\t\txAxis: {\n\t\t\t//range: {type: AXIS_RANGE_TYPE.FIXED, from: 10, to: 30},\n\t\t\tdataType: AXIS_DATA_TYPE.DATE,\n\t\t\trange: {\n\t\t\t\ttype: AXIS_RANGE_TYPE.FIXED,\n\t\t\t\tfrom: Date.now(),\n\t\t\t\tto: Date.now() + 20000,\n\t\t\t\tpadding: {end: 200, start: 0},\n\t\t\t\tmaxLength: 5000000,\n\t\t\t\tminLength: 5000\n\t\t\t},\n\t\t\tmarks: [\n\t\t\t\t{value: dsMain.endTime + 30000, name: 'deadline', title: 'DEADLINE', lineColor: '#ff6600', type: 'timeleft', showValue: true},\n\t\t\t\t{value: dsMain.endTime + 40000, name: 'close', title: 'CLOSE', lineColor: '#005187', type: 'timeleft', showValue: true}\n\t\t\t]\n\t\t\t// range: {\n\t\t\t// \tfrom: 80,\n\t\t\t// \tto: 90\n\t\t\t// }\n\t\t},\n\t\ttrends: {\n\t\t\t'main': {\n\t\t\t\ttype: TREND_TYPE.LINE,\n\t\t\t\tdataset: dsMain.getData(),\n\t\t\t\thasBeacon: true,\n\t\t\t\thasIndicator: true,\n\t\t\t\thasBackground: true,\n\t\t\t},\n\t\t\t// 'red': {dataset: dsRed.data, lineColor: 0xFF2222, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t\t// 'blue': {dataset: dsBlue.data, lineColor: 0x2222FF, lineWidth: 2, hasGradient: false, hasIndicator: true, enabled: false},\n\t\t},\n\t\tshowStats: true,\n\t\t// autoRender: {fps: 100},\n\t\t// animations: {enabled: false},\n\n\t\ttrendDefaultState: {\n\t\t\tsettingsForTypes: {\n\t\t\t\tLINE: {\n\t\t\t\t\tminSegmentLengthInPx: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdocument.querySelector('.chart')\n\t// \t,\n\t// [\n\t// \tnew TrendsMarksPlugin({items: [MarksSource.generate(now + 3000), MarksSource.generate(now + 3000), MarksSource.generate(now + 4000)]})\n\t// ]\n\t);\n\n\tchart.setState({animations: {enabled: false}});\n\tchart.setState({animations: {enabled: true}});\n\t\n\t(<any>window)['chart'] = chart;\n\n\tvar mainTrend = chart.getTrend('main');\n\tvar deadlineMark = chart.state.xAxisMarks.getItem('deadline');\n\tvar closeMark = chart.state.xAxisMarks.getItem('close');\n\n\tmainTrend.onDataChange(() => {\n\t\tvar closeValue = closeMark.options.value;\n\t\tif (mainTrend.getLastItem().xVal >= closeValue) {\n\t\t\tdeadlineMark.setOptions({value: closeValue + 10000});\n\t\t\tcloseMark.setOptions({value: closeValue + 20000})\n\t\t}\n\t\t// var markOptions = MarksSource.getNext(mainTrend.getLastItem().xVal);\n\t\t// if (markOptions) setTimeout(() => {\n\t\t// \tlet trendsMarks = chart.state.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t\t// \ttrendsMarks.createMark(markOptions);\n\t\t// }, 500);\n\t});\n\n\n\t// var previewChart1 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[0],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 20, to: 150}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true}\n\t// \t}\n\t// });\n\t//\n\t// var previewChart2 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[1],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 200}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true}\n\t// \t},\n\t//\n\t// });\n\t//\n\t// var previewChart3 = Chart.createPreviewChart({\n\t// \t$el: document.querySelectorAll('.preview-chart')[2],\n\t// \tyAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 100}\n\t// \t},\n\t// \txAxis: {\n\t// \t\trange: {type: AXIS_RANGE_TYPE.FIXED, from: 0, to: 80}\n\t// \t},\n\t// \ttrends: {\n\t// \t\t'main': {dataset: dsMain.data, hasBeacon: true},\n\t// \t\t'red': {dataset: dsRed.data, lineColor: 0xFF2222},\n\t// \t}\n\t// });\n\t//\n\n\tvar i = 0;\n\n\tchart.getTrend('main').onPrependRequest((requestedLength, resolve, reject) => {\n\t\tvar responseData: ITrendItem[] = [];\n\t\tvar ticksCount = Math.round(requestedLength / 1000) ;\n\t\twhile (ticksCount--) responseData.unshift(dsMain.getPrev());\n\t\tsetTimeout(() => {\n\t\t\tresolve(responseData);\n\t\t}, 2000)\n\t});\n\n\tsetInterval(() => {\n\t\ti++;\n\t\tvar val = dsMain.getNext();\n\n\t\t// [i % 2 ? 10 : 20]\n\n\t\t chart.getTrend('main').appendData([val]);\n\t\t// chart.getTrend('main').prependData([dsMain.getPrev(), dsMain.getPrev()].reverse());\n\t\t// chart.getTrend('main').appendData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// chart.getTrend('main').prependData([val, dsMain.getNext(), dsMain.getNext(), dsMain.getNext()]);\n\t\t// chart.getTrend('red').appendData([val + 10 + Math.random() * 20]);\n\t\t// chart.getTrend('blue').appendData([val + 20 + Math.random() * 20]);\n\n\n\n\t\t// previewChart1.getTrend('main').appendData([val]);\n\t\t// previewChart2.getTrend('main').appendData([val + 10 + Math.random() * 20]);\n\t\t// previewChart3.getTrend('red').appendData([val + 20 + Math.random() * 20]);\n\t\t\n\t\t// previewChart1.appendData(dataToAppend1);\n\t\t//\n\t\t// var chartData2 = previewChart2.state.data.trends[0].data;\n\t\t// var lastItem2 = chartData2[chartData.length - 1];\n\t\t// var dataToAppend2 = [\n\t\t// \t{xVal: lastItem2.xVal + 1, yVal: lastItem2.yVal + Math.random() * 14 - 7 },\n\t\t// ];\n\t\t// previewChart2.appendData(dataToAppend2);\n\t\t// previewChart3.appendData(dataToAppend2);\n\t}, 1000);\n};\n\n\nfunction initListeners() {\n\tvar $checkboxMaintrend = document.querySelector('input[name=\"maintrend\"]') as HTMLInputElement;\n\t$checkboxMaintrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {main: {enabled: $checkboxMaintrend.checked}}});\n\t});\n\tvar $checkboxRedtrend = document.querySelector('input[name=\"redtrend\"]') as HTMLInputElement;\n\t$checkboxRedtrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {red: {enabled: $checkboxRedtrend.checked}}});\n\t});\n\tvar $checkboxBluetrend = document.querySelector('input[name=\"bluetrend\"]') as HTMLInputElement;\n\t$checkboxBluetrend.addEventListener('change', () => {\n\t\tchart.setState({trends: {blue: {enabled: $checkboxBluetrend.checked}}});\n\t});\n\n\tvar $switchLineBtn = document.querySelector('[name=\"switch-line\"]') as HTMLInputElement;\n\t$switchLineBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.LINE});\n\t});\n\n\tvar $switchBarsBtn = document.querySelector('[name=\"switch-bars\"]') as HTMLInputElement;\n\t$switchBarsBtn.addEventListener('click', () => {\n\t\tchart.getTrend('main').setOptions({type: TREND_TYPE.CANDLE});\n\t});\n\n\tdocument.querySelector('[name=\"move-left\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.state.data.xAxis.range;\n\t\tchart.setState({xAxis: {range: {from: currentRange.from - 2000}}});\n\t});\n\n\tdocument.querySelector('[name=\"move-right\"]').addEventListener('click', () => {\n\t\tlet currentRange = chart.state.data.xAxis.range;\n\t\tchart.setState({xAxis: {range: {to: currentRange.to + 2000}}});\n\t});\n\t\n\tvar timeframeButtons = document.querySelectorAll(\".timeframe\");\n\tfor (var i = 0; i < timeframeButtons.length; i++) {\n\t\ttimeframeButtons[i].addEventListener(\"click\", function() {\n\t\t\tvar range = Number(this.getAttribute('data-range'));\n\t\t\tvar segmentLength = Number(this.getAttribute('data-segment-length'));\n\n\n\t\t\tchart.state.setState({autoScroll: false});\n\t\t\tchart.state.zoomToRange(range);\n\t\t\tchart.state.scrollToEnd().then(() => {\n\t\t\t\tchart.state.setState({autoScroll: true});\n\t\t\t});\n\t\t});\n\t}\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/demoApp.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/index.js\n ** module id = 29\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(); else root[\"THREE_CHARTS\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(15));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(4));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(3));\n        __export(__webpack_require__(27));\n        __export(__webpack_require__(26));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Plugin_1 = __webpack_require__(3);\n        __webpack_require__(5);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var State_1 = __webpack_require__(15);\n        var Widget_1 = __webpack_require__(22);\n        var Utils_1 = __webpack_require__(4);\n        var AxisWidget_1 = __webpack_require__(23);\n        var GridWidget_1 = __webpack_require__(24);\n        var TrendsGradientWidget_1 = __webpack_require__(25);\n        var TrendsLineWidget_1 = __webpack_require__(28);\n        var TrendsCandleWidget_1 = __webpack_require__(29);\n        var Chart = function() {\n            function Chart(state, $container, pluginsAndWidgets) {\n                var _this = this;\n                if (pluginsAndWidgets === void 0) {\n                    pluginsAndWidgets = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                var plugins = pluginsAndWidgets.filter(function(pluginOrWidget) {\n                    return pluginOrWidget instanceof Plugin_1.ChartPlugin;\n                });\n                this.state = new State_1.ChartState(state, plugins);\n                this.pluginsAndWidgets = pluginsAndWidgets;\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            Chart.installWidget = function(Widget) {\n                if (!Widget.widgetName) Utils_1.Utils.error(\"unnamed widget\");\n                this.preinstalledWidgets.push(Widget);\n            };\n            Chart.prototype.init = function($container) {\n                var state = this.state;\n                var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                renderer.setSize(w, h);\n                renderer.setPixelRatio(Chart.devicePixelRatio);\n                renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                this.initWidgets();\n                this.bindEvents();\n                this.renderLoop();\n            };\n            Chart.prototype.initWidgets = function() {\n                var _this = this;\n                var preinstalledWidgetsClasses = this.constructor.preinstalledWidgets;\n                var customWidgets = [];\n                this.pluginsAndWidgets.forEach(function(pluginOrWidget) {\n                    if (pluginOrWidget instanceof Widget_1.ChartWidget) {\n                        customWidgets.push(pluginOrWidget);\n                        return;\n                    }\n                    if (!(pluginOrWidget instanceof Plugin_1.ChartPlugin)) return;\n                    var pluginWidgetClasses = pluginOrWidget.constructor.providedWidgets;\n                    preinstalledWidgetsClasses.push.apply(preinstalledWidgetsClasses, pluginWidgetClasses);\n                });\n                this.widgets = customWidgets.concat(preinstalledWidgetsClasses.map(function(WidgetClass) {\n                    return new WidgetClass();\n                }));\n                this.widgets.forEach(function(widget) {\n                    widget.setupChartState(_this.state);\n                    widget.onReadyHandler();\n                    _this.scene.add(widget.getObject3D());\n                });\n            };\n            Chart.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.state.data.autoRender.fps;\n                if (fpsLimit) {\n                    var delay_1 = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay_1);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            Chart.prototype.render = function() {\n                this.renderer.render(this.scene, this.camera);\n            };\n            Chart.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Chart.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            Chart.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.state.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            Chart.prototype.getState = function() {\n                return this.state.data;\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.state.getTrend(trendName);\n            };\n            Chart.prototype.setState = function(state) {\n                return this.state.setState(state);\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.state.data.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.state.data.autoResize) {}\n                this.unsubscribers = [ this.state.onTrendsChange(function() {\n                    return _this.autoscroll();\n                }), this.state.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.state.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            Chart.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            Chart.prototype.setupCamera = function() {\n                var camSettings = this.state.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.state.screen.options);\n            };\n            Chart.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            Chart.prototype.autoscroll = function() {\n                var state = this.state;\n                if (!state.data.autoScroll) return;\n                var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleX = this.state.screen.getScreenRightVal();\n                    var paddingRightX = this.state.getPaddingRight();\n                    var currentScroll = state.data.xAxis.range.scroll;\n                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                        return;\n                    }\n                    var scrollDelta = trendsMaxXDelta;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onScrollStop = function() {};\n            Chart.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            Chart.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            Chart.prototype.onMouseMove = function(ev) {\n                if (this.state.data.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.state.data.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            Chart.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            Chart.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            Chart.prototype.onChartResize = function() {\n                var _a = this.state.data, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var _this = this;\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                var autoScrollIsEnabled = this.state.data.autoScroll;\n                if (autoScrollIsEnabled) this.state.setState({\n                    autoScroll: false\n                });\n                this.state.zoom(zoomValue, zoomOrigin).then(function() {\n                    if (autoScrollIsEnabled) _this.setState({\n                        autoScroll: true\n                    });\n                });\n            };\n            Chart.devicePixelRatio = window.devicePixelRatio;\n            Chart.preinstalledWidgets = [];\n            Chart.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n        Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n        Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n        Chart.installWidget(AxisWidget_1.AxisWidget);\n        Chart.installWidget(GridWidget_1.GridWidget);\n        Chart.installWidget(TrendsGradientWidget_1.TrendsGradientWidget);\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(4);\n        var EventEmmiter_1 = __webpack_require__(14);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChartState = function(chartState) {\n                var _this = this;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chartState.onReady(function() {\n                    return _this.onReadyHandler();\n                }), this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chartState.data.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.providedWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(5);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.TweenLite = TweenMax;\n        window.Stats = __webpack_require__(6);\n        __webpack_require__(7);\n        __webpack_require__(8);\n        exports.isPlainObject = __webpack_require__(9);\n        exports.EE2 = __webpack_require__(11);\n        var es6_promise_1 = __webpack_require__(12);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(13);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports) {\n        THREE.SpriteCanvasMaterial = function(parameters) {\n            THREE.Material.call(this);\n            this.type = \"SpriteCanvasMaterial\";\n            this.color = new THREE.Color(16777215);\n            this.program = function(context, color) {};\n            this.setValues(parameters);\n        };\n        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n            var material = new THREE.SpriteCanvasMaterial();\n            material.copy(this);\n            material.color.copy(this.color);\n            material.program = this.program;\n            return material;\n        };\n        THREE.CanvasRenderer = function(parameters) {\n            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n            parameters = parameters || {};\n            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n                alpha: parameters.alpha === true\n            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n            if (_context.setLineDash === undefined) {\n                _context.setLineDash = function() {};\n            }\n            this.domElement = _canvas;\n            this.autoClear = true;\n            this.sortObjects = true;\n            this.sortElements = true;\n            this.info = {\n                render: {\n                    vertices: 0,\n                    faces: 0\n                }\n            };\n            this.supportsVertexTextures = function() {};\n            this.setFaceCulling = function() {};\n            this.getContext = function() {\n                return _context;\n            };\n            this.getContextAttributes = function() {\n                return _context.getContextAttributes();\n            };\n            this.getPixelRatio = function() {\n                return _pixelRatio;\n            };\n            this.setPixelRatio = function(value) {\n                if (value !== undefined) _pixelRatio = value;\n            };\n            this.setSize = function(width, height, updateStyle) {\n                _canvasWidth = width * _pixelRatio;\n                _canvasHeight = height * _pixelRatio;\n                _canvas.width = _canvasWidth;\n                _canvas.height = _canvasHeight;\n                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n                if (updateStyle !== false) {\n                    _canvas.style.width = width + \"px\";\n                    _canvas.style.height = height + \"px\";\n                }\n                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _contextGlobalAlpha = 1;\n                _contextGlobalCompositeOperation = 0;\n                _contextStrokeStyle = null;\n                _contextFillStyle = null;\n                _contextLineWidth = null;\n                _contextLineCap = null;\n                _contextLineJoin = null;\n                this.setViewport(0, 0, width, height);\n            };\n            this.setViewport = function(x, y, width, height) {\n                _viewportX = x * _pixelRatio;\n                _viewportY = y * _pixelRatio;\n                _viewportWidth = width * _pixelRatio;\n                _viewportHeight = height * _pixelRatio;\n            };\n            this.setScissor = function() {};\n            this.setScissorTest = function() {};\n            this.setClearColor = function(color, alpha) {\n                _clearColor.set(color);\n                _clearAlpha = alpha !== undefined ? alpha : 1;\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n            };\n            this.setClearColorHex = function(hex, alpha) {\n                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n                this.setClearColor(hex, alpha);\n            };\n            this.getClearColor = function() {\n                return _clearColor;\n            };\n            this.getClearAlpha = function() {\n                return _clearAlpha;\n            };\n            this.getMaxAnisotropy = function() {\n                return 0;\n            };\n            this.clear = function() {\n                if (_clearBox.isEmpty() === false) {\n                    _clearBox.intersect(_clipBox);\n                    _clearBox.expandByScalar(2);\n                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n                    if (_clearAlpha < 1) {\n                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    if (_clearAlpha > 0) {\n                        setBlending(THREE.NormalBlending);\n                        setOpacity(1);\n                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    _clearBox.makeEmpty();\n                }\n            };\n            this.clearColor = function() {};\n            this.clearDepth = function() {};\n            this.clearStencil = function() {};\n            this.render = function(scene, camera) {\n                if (camera instanceof THREE.Camera === false) {\n                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n                    return;\n                }\n                if (this.autoClear === true) this.clear();\n                _this.info.render.vertices = 0;\n                _this.info.render.faces = 0;\n                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n                _elements = _renderData.elements;\n                _lights = _renderData.lights;\n                _camera = camera;\n                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n                calculateLights();\n                for (var e = 0, el = _elements.length; e < el; e++) {\n                    var element = _elements[e];\n                    var material = element.material;\n                    if (material === undefined || material.opacity === 0) continue;\n                    _elemBox.makeEmpty();\n                    if (element instanceof THREE.RenderableSprite) {\n                        _v1 = element;\n                        _v1.x *= _canvasWidthHalf;\n                        _v1.y *= _canvasHeightHalf;\n                        renderSprite(_v1, element, material);\n                    } else if (element instanceof THREE.RenderableLine) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderLine(_v1, _v2, element, material);\n                        }\n                    } else if (element instanceof THREE.RenderableFace) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v3 = element.v3;\n                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _v3.positionScreen.x *= _canvasWidthHalf;\n                        _v3.positionScreen.y *= _canvasHeightHalf;\n                        if (material.overdraw > 0) {\n                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n                        }\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n                        }\n                    }\n                    _clearBox.union(_elemBox);\n                }\n                _context.setTransform(1, 0, 0, 1, 0, 0);\n            };\n            function calculateLights() {\n                _ambientLight.setRGB(0, 0, 0);\n                _directionalLights.setRGB(0, 0, 0);\n                _pointLights.setRGB(0, 0, 0);\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    var lightColor = light.color;\n                    if (light instanceof THREE.AmbientLight) {\n                        _ambientLight.add(lightColor);\n                    } else if (light instanceof THREE.DirectionalLight) {\n                        _directionalLights.add(lightColor);\n                    } else if (light instanceof THREE.PointLight) {\n                        _pointLights.add(lightColor);\n                    }\n                }\n            }\n            function calculateLight(position, normal, color) {\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    _lightColor.copy(light.color);\n                    if (light instanceof THREE.DirectionalLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n                        var amount = normal.dot(lightPosition);\n                        if (amount <= 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    } else if (light instanceof THREE.PointLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n                        if (amount <= 0) continue;\n                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n                        if (amount == 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    }\n                }\n            }\n            function renderSprite(v1, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                var scaleX = element.scale.x * _canvasWidthHalf;\n                var scaleY = element.scale.y * _canvasHeightHalf;\n                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n                _elemBox.min.set(v1.x - dist, v1.y - dist);\n                _elemBox.max.set(v1.x + dist, v1.y + dist);\n                if (material instanceof THREE.SpriteMaterial) {\n                    var texture = material.map;\n                    if (texture !== null) {\n                        var pattern = _patterns[texture.id];\n                        if (pattern === undefined || pattern.version !== texture.version) {\n                            pattern = textureToPattern(texture);\n                            _patterns[texture.id] = pattern;\n                        }\n                        if (pattern.canvas !== undefined) {\n                            setFillStyle(pattern.canvas);\n                            var bitmap = texture.image;\n                            var ox = bitmap.width * texture.offset.x;\n                            var oy = bitmap.height * texture.offset.y;\n                            var sx = bitmap.width * texture.repeat.x;\n                            var sy = bitmap.height * texture.repeat.y;\n                            var cx = scaleX / sx;\n                            var cy = scaleY / sy;\n                            _context.save();\n                            _context.translate(v1.x, v1.y);\n                            if (material.rotation !== 0) _context.rotate(material.rotation);\n                            _context.translate(-scaleX / 2, -scaleY / 2);\n                            _context.scale(cx, cy);\n                            _context.translate(-ox, -oy);\n                            _context.fillRect(ox, oy, sx, sy);\n                            _context.restore();\n                        }\n                    } else {\n                        setFillStyle(material.color.getStyle());\n                        _context.save();\n                        _context.translate(v1.x, v1.y);\n                        if (material.rotation !== 0) _context.rotate(material.rotation);\n                        _context.scale(scaleX, -scaleY);\n                        _context.fillRect(-.5, -.5, 1, 1);\n                        _context.restore();\n                    }\n                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n                    setStrokeStyle(material.color.getStyle());\n                    setFillStyle(material.color.getStyle());\n                    _context.save();\n                    _context.translate(v1.x, v1.y);\n                    if (material.rotation !== 0) _context.rotate(material.rotation);\n                    _context.scale(scaleX, scaleY);\n                    material.program(_context);\n                    _context.restore();\n                }\n            }\n            function renderLine(v1, v2, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _context.beginPath();\n                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n                if (material instanceof THREE.LineBasicMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    if (material.vertexColors !== THREE.VertexColors) {\n                        setStrokeStyle(material.color.getStyle());\n                    } else {\n                        var colorStyle1 = element.vertexColors[0].getStyle();\n                        var colorStyle2 = element.vertexColors[1].getStyle();\n                        if (colorStyle1 === colorStyle2) {\n                            setStrokeStyle(colorStyle1);\n                        } else {\n                            try {\n                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n                                grad.addColorStop(0, colorStyle1);\n                                grad.addColorStop(1, colorStyle2);\n                            } catch (exception) {\n                                grad = colorStyle1;\n                            }\n                            setStrokeStyle(grad);\n                        }\n                    }\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                } else if (material instanceof THREE.LineDashedMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    setStrokeStyle(material.color.getStyle());\n                    setLineDash([ material.dashSize, material.gapSize ]);\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                    setLineDash([]);\n                }\n            }\n            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n                _this.info.render.vertices += 3;\n                _this.info.render.faces++;\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _v1x = v1.positionScreen.x;\n                _v1y = v1.positionScreen.y;\n                _v2x = v2.positionScreen.x;\n                _v2y = v2.positionScreen.y;\n                _v3x = v3.positionScreen.x;\n                _v3y = v3.positionScreen.y;\n                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n                    _diffuseColor.copy(material.color);\n                    _emissiveColor.copy(material.emissive);\n                    if (material.vertexColors === THREE.FaceColors) {\n                        _diffuseColor.multiply(element.color);\n                    }\n                    _color.copy(_ambientLight);\n                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n                    calculateLight(_centroid, element.normalModel, _color);\n                    _color.multiply(_diffuseColor).add(_emissiveColor);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n                    if (material.map !== null) {\n                        var mapping = material.map.mapping;\n                        if (mapping === THREE.UVMapping) {\n                            _uvs = element.uvs;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n                        }\n                    } else if (material.envMap !== null) {\n                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n                            _uv1x = .5 * _normal.x + .5;\n                            _uv1y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n                            _uv2x = .5 * _normal.x + .5;\n                            _uv2y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n                            _uv3x = .5 * _normal.x + .5;\n                            _uv3y = .5 * _normal.y + .5;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n                        }\n                    } else {\n                        _color.copy(material.color);\n                        if (material.vertexColors === THREE.FaceColors) {\n                            _color.multiply(element.color);\n                        }\n                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                    }\n                } else if (material instanceof THREE.MeshNormalMaterial) {\n                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else {\n                    _color.setRGB(1, 1, 1);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                }\n            }\n            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n                _context.beginPath();\n                _context.moveTo(x0, y0);\n                _context.lineTo(x1, y1);\n                _context.lineTo(x2, y2);\n                _context.closePath();\n            }\n            function strokePath(color, linewidth, linecap, linejoin) {\n                setLineWidth(linewidth);\n                setLineCap(linecap);\n                setLineJoin(linejoin);\n                setStrokeStyle(color.getStyle());\n                _context.stroke();\n                _elemBox.expandByScalar(linewidth * 2);\n            }\n            function fillPath(color) {\n                setFillStyle(color.getStyle());\n                _context.fill();\n            }\n            function textureToPattern(texture) {\n                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n                    return {\n                        canvas: undefined,\n                        version: texture.version\n                    };\n                }\n                var image = texture.image;\n                if (image.complete === false) {\n                    return {\n                        canvas: undefined,\n                        version: 0\n                    };\n                }\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                var context = canvas.getContext(\"2d\");\n                context.setTransform(1, 0, 0, -1, 0, image.height);\n                context.drawImage(image, 0, 0);\n                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n                var repeat = \"no-repeat\";\n                if (repeatX === true && repeatY === true) {\n                    repeat = \"repeat\";\n                } else if (repeatX === true) {\n                    repeat = \"repeat-x\";\n                } else if (repeatY === true) {\n                    repeat = \"repeat-y\";\n                }\n                var pattern = _context.createPattern(canvas, repeat);\n                if (texture.onUpdate) texture.onUpdate(texture);\n                return {\n                    canvas: pattern,\n                    version: texture.version\n                };\n            }\n            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n                var pattern = _patterns[texture.id];\n                if (pattern === undefined || pattern.version !== texture.version) {\n                    pattern = textureToPattern(texture);\n                    _patterns[texture.id] = pattern;\n                }\n                if (pattern.canvas !== undefined) {\n                    setFillStyle(pattern.canvas);\n                } else {\n                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n                    _context.fill();\n                    return;\n                }\n                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n                u0 = (u0 + offsetX) * width;\n                v0 = (v0 + offsetY) * height;\n                u1 = (u1 + offsetX) * width;\n                v1 = (v1 + offsetY) * height;\n                u2 = (u2 + offsetX) * width;\n                v2 = (v2 + offsetY) * height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                if (det === 0) return;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.fill();\n                _context.restore();\n            }\n            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n                u0 *= width;\n                v0 *= height;\n                u1 *= width;\n                v1 *= height;\n                u2 *= width;\n                v2 *= height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.clip();\n                _context.drawImage(image, 0, 0);\n                _context.restore();\n            }\n            function expand(v1, v2, pixels) {\n                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n                if (det === 0) return;\n                idet = pixels / Math.sqrt(det);\n                x *= idet;\n                y *= idet;\n                v2.x += x;\n                v2.y += y;\n                v1.x -= x;\n                v1.y -= y;\n            }\n            function setOpacity(value) {\n                if (_contextGlobalAlpha !== value) {\n                    _context.globalAlpha = value;\n                    _contextGlobalAlpha = value;\n                }\n            }\n            function setBlending(value) {\n                if (_contextGlobalCompositeOperation !== value) {\n                    if (value === THREE.NormalBlending) {\n                        _context.globalCompositeOperation = \"source-over\";\n                    } else if (value === THREE.AdditiveBlending) {\n                        _context.globalCompositeOperation = \"lighter\";\n                    } else if (value === THREE.SubtractiveBlending) {\n                        _context.globalCompositeOperation = \"darker\";\n                    } else if (value === THREE.MultiplyBlending) {\n                        _context.globalCompositeOperation = \"multiply\";\n                    }\n                    _contextGlobalCompositeOperation = value;\n                }\n            }\n            function setLineWidth(value) {\n                if (_contextLineWidth !== value) {\n                    _context.lineWidth = value;\n                    _contextLineWidth = value;\n                }\n            }\n            function setLineCap(value) {\n                if (_contextLineCap !== value) {\n                    _context.lineCap = value;\n                    _contextLineCap = value;\n                }\n            }\n            function setLineJoin(value) {\n                if (_contextLineJoin !== value) {\n                    _context.lineJoin = value;\n                    _contextLineJoin = value;\n                }\n            }\n            function setStrokeStyle(value) {\n                if (_contextStrokeStyle !== value) {\n                    _context.strokeStyle = value;\n                    _contextStrokeStyle = value;\n                }\n            }\n            function setFillStyle(value) {\n                if (_contextFillStyle !== value) {\n                    _context.fillStyle = value;\n                    _contextFillStyle = value;\n                }\n            }\n            function setLineDash(value) {\n                if (_contextLineDash.length !== value.length) {\n                    _context.setLineDash(value);\n                    _contextLineDash = value;\n                }\n            }\n        };\n    }, function(module, exports) {\n        THREE.RenderableObject = function() {\n            this.id = 0;\n            this.object = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableFace = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.v3 = new THREE.RenderableVertex();\n            this.normalModel = new THREE.Vector3();\n            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n            this.vertexNormalsLength = 0;\n            this.color = new THREE.Color();\n            this.material = null;\n            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableVertex = function() {\n            this.position = new THREE.Vector3();\n            this.positionWorld = new THREE.Vector3();\n            this.positionScreen = new THREE.Vector4();\n            this.visible = true;\n        };\n        THREE.RenderableVertex.prototype.copy = function(vertex) {\n            this.positionWorld.copy(vertex.positionWorld);\n            this.positionScreen.copy(vertex.positionScreen);\n        };\n        THREE.RenderableLine = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n            this.material = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableSprite = function() {\n            this.id = 0;\n            this.object = null;\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.rotation = 0;\n            this.scale = new THREE.Vector2();\n            this.material = null;\n            this.renderOrder = 0;\n        };\n        THREE.Projector = function() {\n            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n                objects: [],\n                lights: [],\n                elements: []\n            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3((-1), (-1), (-1)), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n            this.projectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n                vector.project(camera);\n            };\n            this.unprojectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n                vector.unproject(camera);\n            };\n            this.pickingRay = function(vector, camera) {\n                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n            };\n            var RenderList = function() {\n                var normals = [];\n                var uvs = [];\n                var object = null;\n                var material = null;\n                var normalMatrix = new THREE.Matrix3();\n                function setObject(value) {\n                    object = value;\n                    material = object.material;\n                    normalMatrix.getNormalMatrix(object.matrixWorld);\n                    normals.length = 0;\n                    uvs.length = 0;\n                }\n                function projectVertex(vertex) {\n                    var position = vertex.position;\n                    var positionWorld = vertex.positionWorld;\n                    var positionScreen = vertex.positionScreen;\n                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n                    var invW = 1 / positionScreen.w;\n                    positionScreen.x *= invW;\n                    positionScreen.y *= invW;\n                    positionScreen.z *= invW;\n                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n                }\n                function pushVertex(x, y, z) {\n                    _vertex = getNextVertexInPool();\n                    _vertex.position.set(x, y, z);\n                    projectVertex(_vertex);\n                }\n                function pushNormal(x, y, z) {\n                    normals.push(x, y, z);\n                }\n                function pushUv(x, y) {\n                    uvs.push(x, y);\n                }\n                function checkTriangleVisibility(v1, v2, v3) {\n                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n                    _points3[0] = v1.positionScreen;\n                    _points3[1] = v2.positionScreen;\n                    _points3[2] = v3.positionScreen;\n                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n                }\n                function checkBackfaceCulling(v1, v2, v3) {\n                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n                }\n                function pushLine(a, b) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    _line = getNextLineInPool();\n                    _line.id = object.id;\n                    _line.v1.copy(v1);\n                    _line.v2.copy(v2);\n                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n                    _line.renderOrder = object.renderOrder;\n                    _line.material = object.material;\n                    _renderData.elements.push(_line);\n                }\n                function pushTriangle(a, b, c) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    var v3 = _vertexPool[c];\n                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n                        _face = getNextFaceInPool();\n                        _face.id = object.id;\n                        _face.v1.copy(v1);\n                        _face.v2.copy(v2);\n                        _face.v3.copy(v3);\n                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                        _face.renderOrder = object.renderOrder;\n                        _face.normalModel.fromArray(normals, a * 3);\n                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n                        for (var i = 0; i < 3; i++) {\n                            var normal = _face.vertexNormalsModel[i];\n                            normal.fromArray(normals, arguments[i] * 3);\n                            normal.applyMatrix3(normalMatrix).normalize();\n                            var uv = _face.uvs[i];\n                            uv.fromArray(uvs, arguments[i] * 2);\n                        }\n                        _face.vertexNormalsLength = 3;\n                        _face.material = object.material;\n                        _renderData.elements.push(_face);\n                    }\n                }\n                return {\n                    setObject: setObject,\n                    projectVertex: projectVertex,\n                    checkTriangleVisibility: checkTriangleVisibility,\n                    checkBackfaceCulling: checkBackfaceCulling,\n                    pushVertex: pushVertex,\n                    pushNormal: pushNormal,\n                    pushUv: pushUv,\n                    pushLine: pushLine,\n                    pushTriangle: pushTriangle\n                };\n            };\n            var renderList = new RenderList();\n            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n                _faceCount = 0;\n                _lineCount = 0;\n                _spriteCount = 0;\n                _renderData.elements.length = 0;\n                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n                if (camera.parent === null) camera.updateMatrixWorld();\n                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n                _frustum.setFromMatrix(_viewProjectionMatrix);\n                _objectCount = 0;\n                _renderData.objects.length = 0;\n                _renderData.lights.length = 0;\n                function addObject(object) {\n                    _object = getNextObjectInPool();\n                    _object.id = object.id;\n                    _object.object = object;\n                    _vector3.setFromMatrixPosition(object.matrixWorld);\n                    _vector3.applyProjection(_viewProjectionMatrix);\n                    _object.z = _vector3.z;\n                    _object.renderOrder = object.renderOrder;\n                    _renderData.objects.push(_object);\n                }\n                scene.traverseVisible(function(object) {\n                    if (object instanceof THREE.Light) {\n                        _renderData.lights.push(object);\n                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line) {\n                        if (object.material.visible === false) return;\n                        if (object.frustumCulled === true && _frustum.intersectsObject(object) === false) return;\n                        addObject(object);\n                    } else if (object instanceof THREE.Sprite) {\n                        if (object.material.visible === false) return;\n                        if (object.frustumCulled === true && _frustum.intersectsSprite(object) === false) return;\n                        addObject(object);\n                    }\n                });\n                if (sortObjects === true) {\n                    _renderData.objects.sort(painterSort);\n                }\n                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n                    var object = _renderData.objects[o].object;\n                    var geometry = object.geometry;\n                    renderList.setObject(object);\n                    _modelMatrix = object.matrixWorld;\n                    _vertexCount = 0;\n                    if (object instanceof THREE.Mesh) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            var groups = geometry.groups;\n                            if (attributes.position === undefined) continue;\n                            var positions = attributes.position.array;\n                            for (var i = 0, l = positions.length; i < l; i += 3) {\n                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                            }\n                            if (attributes.normal !== undefined) {\n                                var normals = attributes.normal.array;\n                                for (var i = 0, l = normals.length; i < l; i += 3) {\n                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n                                }\n                            }\n                            if (attributes.uv !== undefined) {\n                                var uvs = attributes.uv.array;\n                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n                                }\n                            }\n                            if (geometry.index !== null) {\n                                var indices = geometry.index.array;\n                                if (groups.length > 0) {\n                                    for (var o = 0; o < groups.length; o++) {\n                                        var group = groups[o];\n                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                        }\n                                    }\n                                } else {\n                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                    }\n                                }\n                            } else {\n                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n                                    renderList.pushTriangle(i, i + 1, i + 2);\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            var vertices = geometry.vertices;\n                            var faces = geometry.faces;\n                            var faceVertexUvs = geometry.faceVertexUvs[0];\n                            _normalMatrix.getNormalMatrix(_modelMatrix);\n                            var material = object.material;\n                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n                                var vertex = vertices[v];\n                                _vector3.copy(vertex);\n                                if (material.morphTargets === true) {\n                                    var morphTargets = geometry.morphTargets;\n                                    var morphInfluences = object.morphTargetInfluences;\n                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                                        var influence = morphInfluences[t];\n                                        if (influence === 0) continue;\n                                        var target = morphTargets[t];\n                                        var targetVertex = target.vertices[v];\n                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n                                    }\n                                }\n                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n                            }\n                            for (var f = 0, fl = faces.length; f < fl; f++) {\n                                var face = faces[f];\n                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n                                if (material === undefined) continue;\n                                var side = material.side;\n                                var v1 = _vertexPool[face.a];\n                                var v2 = _vertexPool[face.b];\n                                var v3 = _vertexPool[face.c];\n                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n                                if (side !== THREE.DoubleSide) {\n                                    if (side === THREE.FrontSide && visible === false) continue;\n                                    if (side === THREE.BackSide && visible === true) continue;\n                                }\n                                _face = getNextFaceInPool();\n                                _face.id = object.id;\n                                _face.v1.copy(v1);\n                                _face.v2.copy(v2);\n                                _face.v3.copy(v3);\n                                _face.normalModel.copy(face.normal);\n                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                    _face.normalModel.negate();\n                                }\n                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n                                var faceVertexNormals = face.vertexNormals;\n                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n                                    var normalModel = _face.vertexNormalsModel[n];\n                                    normalModel.copy(faceVertexNormals[n]);\n                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                        normalModel.negate();\n                                    }\n                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n                                }\n                                _face.vertexNormalsLength = faceVertexNormals.length;\n                                var vertexUvs = faceVertexUvs[f];\n                                if (vertexUvs !== undefined) {\n                                    for (var u = 0; u < 3; u++) {\n                                        _face.uvs[u].copy(vertexUvs[u]);\n                                    }\n                                }\n                                _face.color = face.color;\n                                _face.material = material;\n                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                                _face.renderOrder = object.renderOrder;\n                                _renderData.elements.push(_face);\n                            }\n                        }\n                    } else if (object instanceof THREE.Line) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            if (attributes.position !== undefined) {\n                                var positions = attributes.position.array;\n                                for (var i = 0, l = positions.length; i < l; i += 3) {\n                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                                }\n                                if (geometry.index !== null) {\n                                    var indices = geometry.index.array;\n                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n                                        renderList.pushLine(indices[i], indices[i + 1]);\n                                    }\n                                } else {\n                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n                                        renderList.pushLine(i, i + 1);\n                                    }\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n                            var vertices = object.geometry.vertices;\n                            if (vertices.length === 0) continue;\n                            v1 = getNextVertexInPool();\n                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n                                v1 = getNextVertexInPool();\n                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n                                if ((v + 1) % step > 0) continue;\n                                v2 = _vertexPool[_vertexCount - 2];\n                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n                                    _line = getNextLineInPool();\n                                    _line.id = object.id;\n                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n                                    _line.renderOrder = object.renderOrder;\n                                    _line.material = object.material;\n                                    if (object.material.vertexColors === THREE.VertexColors) {\n                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n                                    }\n                                    _renderData.elements.push(_line);\n                                }\n                            }\n                        }\n                    } else if (object instanceof THREE.Sprite) {\n                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n                        _vector4.applyMatrix4(_viewProjectionMatrix);\n                        var invW = 1 / _vector4.w;\n                        _vector4.z *= invW;\n                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n                            _sprite = getNextSpriteInPool();\n                            _sprite.id = object.id;\n                            _sprite.x = _vector4.x * invW;\n                            _sprite.y = _vector4.y * invW;\n                            _sprite.z = _vector4.z;\n                            _sprite.renderOrder = object.renderOrder;\n                            _sprite.object = object;\n                            _sprite.rotation = object.rotation;\n                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n                            _sprite.material = object.material;\n                            _renderData.elements.push(_sprite);\n                        }\n                    }\n                }\n                if (sortElements === true) {\n                    _renderData.elements.sort(painterSort);\n                }\n                return _renderData;\n            };\n            function getNextObjectInPool() {\n                if (_objectCount === _objectPoolLength) {\n                    var object = new THREE.RenderableObject();\n                    _objectPool.push(object);\n                    _objectPoolLength++;\n                    _objectCount++;\n                    return object;\n                }\n                return _objectPool[_objectCount++];\n            }\n            function getNextVertexInPool() {\n                if (_vertexCount === _vertexPoolLength) {\n                    var vertex = new THREE.RenderableVertex();\n                    _vertexPool.push(vertex);\n                    _vertexPoolLength++;\n                    _vertexCount++;\n                    return vertex;\n                }\n                return _vertexPool[_vertexCount++];\n            }\n            function getNextFaceInPool() {\n                if (_faceCount === _facePoolLength) {\n                    var face = new THREE.RenderableFace();\n                    _facePool.push(face);\n                    _facePoolLength++;\n                    _faceCount++;\n                    return face;\n                }\n                return _facePool[_faceCount++];\n            }\n            function getNextLineInPool() {\n                if (_lineCount === _linePoolLength) {\n                    var line = new THREE.RenderableLine();\n                    _linePool.push(line);\n                    _linePoolLength++;\n                    _lineCount++;\n                    return line;\n                }\n                return _linePool[_lineCount++];\n            }\n            function getNextSpriteInPool() {\n                if (_spriteCount === _spritePoolLength) {\n                    var sprite = new THREE.RenderableSprite();\n                    _spritePool.push(sprite);\n                    _spritePoolLength++;\n                    _spriteCount++;\n                    return sprite;\n                }\n                return _spritePool[_spriteCount++];\n            }\n            function painterSort(a, b) {\n                if (a.renderOrder !== b.renderOrder) {\n                    return a.renderOrder - b.renderOrder;\n                } else if (a.z !== b.z) {\n                    return b.z - a.z;\n                } else if (a.id !== b.id) {\n                    return a.id - b.id;\n                } else {\n                    return 0;\n                }\n            }\n            function clipLine(s1, s2) {\n                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n                    return true;\n                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n                    return false;\n                } else {\n                    if (bc1near < 0) {\n                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n                    } else if (bc2near < 0) {\n                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n                    }\n                    if (bc1far < 0) {\n                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n                    } else if (bc2far < 0) {\n                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n                    }\n                    if (alpha2 < alpha1) {\n                        return false;\n                    } else {\n                        s1.lerp(s2, alpha1);\n                        s2.lerp(s1, 1 - alpha2);\n                        return true;\n                    }\n                }\n            }\n        };\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(10);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(5);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(4);\n        var TrendsManager_1 = __webpack_require__(18);\n        var Screen_1 = __webpack_require__(19);\n        var AxisMarks_1 = __webpack_require__(20);\n        var interfaces_1 = __webpack_require__(21);\n        var deps_1 = __webpack_require__(5);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            SCROLL_STOP: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var ChartState = function() {\n            function ChartState(initialState, plugins) {\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.data = {\n                    prevState: {},\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        grid: {\n                            enabled: true,\n                            minSizePx: 100\n                        },\n                        autoScroll: true,\n                        marks: []\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        grid: {\n                            enabled: true,\n                            minSizePx: 50\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        marks: []\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: .25,\n                        zoomEase: void 0,\n                        scrollSpeed: .5,\n                        scrollEase: Linear.easeNone,\n                        autoScrollSpeed: 1,\n                        autoScrollEase: Linear.easeNone\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    trendDefaultState: {\n                        enabled: true,\n                        type: Trend_1.TREND_TYPE.LINE,\n                        data: [],\n                        maxSegmentLength: 1e3,\n                        lineWidth: 2,\n                        lineColor: 16777215,\n                        hasBackground: false,\n                        backgroundColor: \"rgba(#5273BD, 0.15)\",\n                        hasBeacon: false,\n                        settingsForTypes: {\n                            CANDLE: {\n                                minSegmentLengthInPx: 20,\n                                maxSegmentLengthInPx: 40\n                            },\n                            LINE: {\n                                minSegmentLengthInPx: 2,\n                                maxSegmentLengthInPx: 10\n                            }\n                        }\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    backgroundColor: 0,\n                    backgroundOpacity: 1,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20,\n                    maxVisibleSegments: 1280\n                };\n                this.plugins = {};\n                this.isReady = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n                this.data = Utils_1.Utils.deepMerge(this.data, initialState);\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.initListeners();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            ChartState.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.data = {};\n            };\n            ChartState.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            ChartState.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            ChartState.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            ChartState.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            ChartState.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            ChartState.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            ChartState.prototype.onScrollStop = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n            };\n            ChartState.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            ChartState.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            ChartState.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            ChartState.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            ChartState.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            ChartState.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var stateData = this.data;\n                var newStateObj = newState;\n                var changedProps = {};\n                for (var key in newStateObj) {\n                    if (stateData[key] !== newStateObj[key]) {\n                        changedProps[key] = newStateObj[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.data.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            ChartState.prototype.recalculateState = function(changedProps) {\n                var data = this.data;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.data = Utils_1.Utils.deepMerge(this.data, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            ChartState.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            ChartState.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.data;\n                var prevState = this.data.prevState;\n                Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n            };\n            ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.data.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            ChartState.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChartState(_this);\n                });\n                return initialState;\n            };\n            ChartState.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            ChartState.prototype.initListeners = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n            };\n            ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n            };\n            ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            ChartState.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.data.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            ChartState.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.data.width / (scaleFactor * zoom);\n                var nextRange = this.data.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            ChartState.prototype.zoomToRange = function(range, origin) {\n                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.data.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            ChartState.prototype.scrollToEnd = function() {\n                var _this = this;\n                var state = this.data;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            ChartState.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            ChartState.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            ChartState.prototype.getValueOnXAxis = function(x) {\n                return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            ChartState.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n            };\n            ChartState.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n            };\n            ChartState.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n            };\n            ChartState.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n            };\n            ChartState.prototype.getValueByScreenX = function(x) {\n                var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            ChartState.prototype.getValueByScreenY = function(y) {\n                var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            ChartState.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            ChartState.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            ChartState.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            ChartState.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            ChartState.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            ChartState.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.data.width);\n            };\n            ChartState.prototype.getPaddingRight = function() {\n                return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n            };\n            return ChartState;\n        }();\n        exports.ChartState = ChartState;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(4);\n        var TrendSegmentsManager_1 = __webpack_require__(17);\n        var EventEmmiter_1 = __webpack_require__(14);\n        var deps_1 = __webpack_require__(5);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chartState = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(this.chartState.data.trendDefaultState, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvents();\n            }\n            Trend.prototype.onInitialStateApplied = function() {\n                this.segmentsManager = new TrendSegmentsManager_1.TrendSegmentsManager(this.chartState, this);\n            };\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chartState;\n                chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateApplied();\n                });\n                chartState.onScrollStop(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chartState.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chartState.data.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chartState.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chartState;\n                var minXVal = chartState.data.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(14);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(16);\n        var Utils_1 = __webpack_require__(4);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegmentsManager = function() {\n            function TrendSegmentsManager(chartState, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n                this.bindEvents();\n            }\n            TrendSegmentsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.chartState.onZoom(function() {\n                    return _this.onZoomHandler();\n                });\n                this.chartState.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            TrendSegmentsManager.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegmentsManager.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegmentsManager.prototype.getSegment = function(id) {\n                return this.segmentsById[id];\n            };\n            TrendSegmentsManager.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegmentsManager.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegmentsManager.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegmentsManager.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegmentsManager.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, from - displayedRange, \"startXVal\");\n                this.firstDisplayedSegment = this.segments[this.firstDisplayedSegmentInd];\n                this.lastDisplayedSegmentInd = Utils_1.Utils.binarySearchClosestInd(this.segments, to + displayedRange, \"endXVal\");\n                this.lastDisplayedSegment = this.segments[this.lastDisplayedSegmentInd];\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegmentsManager.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegmentsManager.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegmentsManager.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegmentsManager.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegmentsManager.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegmentsManager.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegmentsManager.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegmentsManager.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegmentsManager.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegmentsManager;\n        }();\n        exports.TrendSegmentsManager = TrendSegmentsManager;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(14);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n                this.bindEvents();\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                });\n            };\n            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                var _this = this;\n                var _loop_1 = function(trendName) {\n                    this_1.trends[trendName].segmentsManager.onRebuild(function() {\n                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                    });\n                };\n                var this_1 = this;\n                for (var trendName in this.trends) {\n                    _loop_1(trendName);\n                }\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(14);\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.currentScrollX = {\n                    x: 0\n                };\n                this.currentScrollY = {\n                    y: 0\n                };\n                this.currentZoomX = {\n                    val: 1\n                };\n                this.currentZoomY = {\n                    val: 1\n                };\n                this.chartState = chartState;\n                var _a = chartState.data, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chartState.data, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                var _this = this;\n                var eventName = \"zoomFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                var _this = this;\n                var eventName = \"scrollFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                var _this = this;\n                var eventName = \"transformationFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                this.ee.emit(\"transformationFrame\", options);\n                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n                    this.ee.emit(\"scrollFrame\", options);\n                }\n                if (options.zoomX != void 0 || options.zoomY != void 0) {\n                    this.ee.emit(\"zoomFrame\", options);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.scrollXAnimation && this.scrollXAnimation.kill();\n                this.scrollYAnimation && this.scrollYAnimation.kill();\n                this.zoomXAnimation && this.zoomXAnimation.kill();\n                this.zoomYAnimation && this.zoomYAnimation.kill();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var state = this.chartState;\n                var isDragMode = state.data.cursor.dragMode;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled && !isDragMode;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n                var range = state.data.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollX.x = this.options.scrollX;\n                var cb = function() {\n                    _this.transform({\n                        scrollX: _this.currentScrollX.x\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n                        x: targetX,\n                        ease: ease\n                    });\n                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollX.x = targetX;\n                    cb();\n                }\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n                var range = state.data.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollY.y = this.options.scrollY;\n                var cb = function() {\n                    _this.transform({\n                        scrollY: _this.currentScrollY.y\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n                        y: targetY,\n                        ease: animations.zoomEase\n                    });\n                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollY.y = targetY;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.data.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomX: _this.currentZoomX.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomX.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.data.yAxis.range.zoom;\n                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomY: _this.currentZoomY.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomY.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chartState.data.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chartState.data.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chartState.data.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chartState.data.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(4);\n        var interfaces_1 = __webpack_require__(21);\n        var EventEmmiter_1 = __webpack_require__(14);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget() {\n                this.unbindList = [];\n            }\n            ChartWidget.prototype.setupChartState = function(chartState) {\n                this.chartState = chartState;\n            };\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unbindList = [];\n                if (!Array.isArray(args[0])) {\n                    unbindList.push(args[0]);\n                } else {\n                    unbindList.push.apply(unbindList, args);\n                }\n                (_a = this.unbindList).push.apply(_a, unbindList);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unbindList.forEach(function(unbindEvent) {\n                    return unbindEvent();\n                });\n                this.unbindList.length = 0;\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(22);\n        var GridWidget_1 = __webpack_require__(24);\n        var Utils_1 = __webpack_require__(4);\n        var interfaces_1 = __webpack_require__(21);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            AxisWidget.prototype.onReadyHandler = function() {\n                var _this = this;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(this.chartState.screen.options.scrollX, this.chartState.screen.options.scrollY);\n                this.bindEvents();\n            };\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                }\n                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                    ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n                    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chartState.data.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chartState.data.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(22);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(4);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget() {\n                _super.apply(this, arguments);\n                this.isDestroyed = false;\n            }\n            GridWidget.prototype.onReadyHandler = function() {\n                var _a = this.chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.grid.minSizePx) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.grid.minSizePx) * 3;\n                this.initGrid();\n                this.updateGrid();\n                this.bindEvents();\n            };\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chartState.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chartState.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chartState.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chartState.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    opacity: .1,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chartState;\n                var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chartState;\n                var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.grid.minSizePx;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var Utils_1 = __webpack_require__(4);\n        var TrendsWidget_1 = __webpack_require__(26);\n        var Color_1 = __webpack_require__(27);\n        var TrendsGradientWidget = function(_super) {\n            __extends(TrendsGradientWidget, _super);\n            function TrendsGradientWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsGradientWidget.prototype.getTrendWidgetClass = function() {\n                return TrendGradient;\n            };\n            TrendsGradientWidget.widgetName = \"TrendsGradient\";\n            return TrendsGradientWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsGradientWidget = TrendsGradientWidget;\n        var TrendGradient = function(_super) {\n            __extends(TrendGradient, _super);\n            function TrendGradient(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.visibleSegmentsCnt = 0;\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.segmentsIds = new Uint16Array(chartState.data.maxVisibleSegments);\n                this.initGradient();\n                this.updateSegments();\n            }\n            TrendGradient.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBackground;\n            };\n            TrendGradient.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.updateSegments();\n                }));\n                this.bindEvent(this.chartState.onZoom(function() {\n                    _this.updateSegments();\n                }));\n            };\n            TrendGradient.prototype.getObject3D = function() {\n                return this.gradient;\n            };\n            TrendGradient.prototype.initGradient = function() {\n                var geometry = new Geometry();\n                for (var i = 0; i < this.segmentsIds.length; i++) {\n                    geometry.vertices.push(new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3());\n                    var ind = i * 4;\n                    geometry.faces.push(new THREE.Face3(ind, ind + 1, ind + 2), new THREE.Face3(ind + 3, ind, ind + 2));\n                }\n                var color = new Color_1.ChartColor(this.trend.getOptions().backgroundColor);\n                this.gradient = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({\n                    color: color.value,\n                    transparent: true,\n                    opacity: color.a\n                }));\n                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.gradient.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.gradient.frustumCulled = false;\n            };\n            TrendGradient.prototype.onZoomFrame = function(options) {\n                var state = this.chartState.data;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                var currentScale = this.gradient.scale;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendGradient.prototype.onSegmentsAnimate = function(trendSegmentsManager) {\n                var animatedSegmentsIds = trendSegmentsManager.animatedSegmentsIds;\n                for (var i = 0; i < this.visibleSegmentsCnt; i++) {\n                    var segmentId = this.segmentsIds[i];\n                    if (!animatedSegmentsIds.includes(segmentId)) continue;\n                    this.setupSegmentVertices(i, trendSegmentsManager.getSegment(segmentId).currentAnimationState);\n                }\n                this.gradient.geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.updateSegments = function() {\n                var geometry = this.gradient.geometry;\n                var _a = this.trend.segmentsManager, trendSegments = _a.segments, segmentInd = _a.firstDisplayedSegmentInd, lastDisplayedSegmentInd = _a.lastDisplayedSegmentInd;\n                var prevVisibleSegmentsCnt = this.visibleSegmentsCnt;\n                this.visibleSegmentsCnt = lastDisplayedSegmentInd - segmentInd + 1;\n                var segmentsToProcessCnt = Math.max(prevVisibleSegmentsCnt, this.visibleSegmentsCnt);\n                if (segmentsToProcessCnt > this.segmentsIds.length) {\n                    Utils_1.Utils.error(TrendsGradientWidget.widgetName + \": MAX_SEGMENTS reached\");\n                }\n                for (var i = 0; i <= segmentsToProcessCnt; i++) {\n                    if (segmentInd <= lastDisplayedSegmentInd) {\n                        var segment = trendSegments[segmentInd];\n                        this.setupSegmentVertices(i, segment.currentAnimationState);\n                        this.segmentsIds[i] = segment.id;\n                        segmentInd++;\n                    } else {\n                        this.setupSegmentVertices(i);\n                    }\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendGradient.prototype.setupSegmentVertices = function(segmentInd, segmentState) {\n                var gradientSegmentInd = segmentInd * 4;\n                var vertices = this.gradient.geometry.vertices;\n                var topLeft = vertices[gradientSegmentInd];\n                var bottomLeft = vertices[gradientSegmentInd + 1];\n                var bottomRight = vertices[gradientSegmentInd + 2];\n                var topRight = vertices[gradientSegmentInd + 3];\n                var screenHeightVal = Math.max(this.chartState.pxToValueByYAxis(this.chartState.data.height), this.chartState.screen.pxToValueByYAxis(this.chartState.data.height));\n                if (segmentState) {\n                    var startX = this.toLocalX(segmentState.startXVal);\n                    var startY = this.toLocalY(segmentState.startYVal);\n                    var endX = this.toLocalX(segmentState.endXVal);\n                    var endY = this.toLocalY(segmentState.endYVal);\n                    topLeft.set(startX, startY, 0);\n                    topRight.set(endX, endY, 0);\n                    bottomLeft.set(topLeft.x, topLeft.y - screenHeightVal, 0);\n                    bottomRight.set(topRight.x, topRight.y - screenHeightVal, 0);\n                } else {\n                    topLeft.set(0, 0, 0);\n                    topRight.set(0, 0, 0);\n                    bottomLeft.set(0, 0, 0);\n                    bottomRight.set(0, 0, 0);\n                }\n            };\n            TrendGradient.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendGradient.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            return TrendGradient;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendGradient = TrendGradient;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(22);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget() {\n                _super.apply(this, arguments);\n                this.widgets = {};\n            }\n            TrendsWidget.prototype.onReadyHandler = function() {\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n                this.bindEvents();\n            };\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chartState.data.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chartState.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chartState, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chartState, trendName) {\n                this.chartState = chartState;\n                this.trendName = trendName;\n                this.unbindList = [];\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unbindList; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segmentsManager.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chartState.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unbind) {\n                this.unbindList.push(unbind);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartColor = function() {\n            function ChartColor(color) {\n                this.set(color);\n            }\n            /**!\n\t     * @preserve $.parseColor\n\t     * Copyright 2011 THEtheChad Elliott\n\t     * Released under the MIT and GPL licenses.\n\t     */\n            ChartColor.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2}),(([0-9]*[.])?[0-9]+)/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16), +cache[4] ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            ChartColor.prototype.set = function(color) {\n                if (typeof color == \"number\") color = \"#\" + color.toString(16);\n                var colorStr = color;\n                var rgba = ChartColor.parseColor(colorStr);\n                this.r = rgba[0];\n                this.g = rgba[1];\n                this.b = rgba[2];\n                this.a = rgba[3];\n                this.value = (rgba[0] << 8 * 2) + (rgba[1] << 8) + rgba[2];\n                this.hexStr = \"#\" + this.value.toString(16);\n                this.rgbaStr = \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + this.a + \")\";\n            };\n            return ChartColor;\n        }();\n        exports.ChartColor = ChartColor;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(26);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(16);\n        var Utils_1 = __webpack_require__(4);\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < this.chartState.data.maxVisibleSegments; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segmentsManager.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                var state = this.chartState.data;\n                var scaleXFactor = state.xAxis.range.scaleFactor;\n                var scaleYFactor = state.yAxis.range.scaleFactor;\n                if (options.zoomX) currentScale.setX(scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(26);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(16);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(4);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segmentsManager.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segmentsManager.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chartState.data;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segmentsManager, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-charts/build/ThreeChart.js\n ** module id = 30\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsBeaconWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/index.js\n ** module id = 31\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsBeaconWidget = function(_super) {\n            __extends(TrendsBeaconWidget, _super);\n            function TrendsBeaconWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                return TrendBeacon;\n            };\n            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n            return TrendsBeaconWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n        var TrendBeacon = function(_super) {\n            __extends(TrendBeacon, _super);\n            function TrendBeacon(state, trendName) {\n                _super.call(this, state, trendName);\n                this.initObject();\n                if (state.data.animations.enabled) {\n                    this.animate();\n                }\n                this.updatePosition();\n            }\n            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == three_charts_1.TREND_TYPE.LINE;\n            };\n            TrendBeacon.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendBeacon.prototype.onTrendChange = function() {\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.chartState.onScroll(function() {\n                    return _this.updatePosition();\n                }));\n                this.bindEvent(this.chartState.onChange(function(changedProps) {\n                    return _this.onStateChange(changedProps);\n                }));\n                this.bindEvent(this.chartState.onDestroy(function() {\n                    return _this.stopAnimation();\n                }));\n            };\n            TrendBeacon.prototype.initObject = function() {\n                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture(),\n                    transparent: true\n                }));\n                light.scale.set(.2, .2, 1);\n                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture()\n                })));\n                this.segment = this.trend.segmentsManager.getEndSegment();\n            };\n            TrendBeacon.prototype.animate = function() {\n                var _this = this;\n                this.animated = true;\n                var object = this.mesh;\n                var animationObject = {\n                    scale: object.scale.x,\n                    opacity: object.material.opacity\n                };\n                this.mesh.scale.set(.1, .1, 1);\n                setTimeout(function() {\n                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                        scale: 1,\n                        opacity: 0\n                    });\n                    animation.eventCallback(\"onUpdate\", function() {\n                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n                        object.material.opacity = animationObject.opacity;\n                    }).eventCallback(\"onComplete\", function() {\n                        _this.animation && animation.restart();\n                    });\n                }, 500);\n            };\n            TrendBeacon.prototype.stopAnimation = function() {\n                this.animated = false;\n                this.animation && this.animation.kill();\n                this.animation = null;\n            };\n            TrendBeacon.createTexture = function() {\n                var h = 32, w = 32;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.beginPath();\n                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                });\n            };\n            TrendBeacon.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                this.segment = trendsSegments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onStateChange = function(changedProps) {\n                if (!changedProps.animations) return;\n                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                if (changedProps.animations.enabled) {\n                    this.animate();\n                } else {\n                    this.stopAnimation();\n                }\n            };\n            TrendBeacon.prototype.updatePosition = function() {\n                var state = this.chartState;\n                var xVal, yVal;\n                var currentAnimationState = this.segment.currentAnimationState;\n                if (this.trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    xVal = currentAnimationState.endXVal;\n                    yVal = currentAnimationState.endYVal;\n                } else {\n                    xVal = currentAnimationState.xVal;\n                    yVal = currentAnimationState.endYVal;\n                }\n                var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n                var screenWidth = state.data.width;\n                var x = endPointVector.x;\n                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                if (screenX < 0) x = state.screen.getPointByScreenX(0);\n                if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n                this.mesh.position.set(x, endPointVector.y, .1);\n            };\n            return TrendBeacon;\n        }(three_charts_1.TrendWidget);\n        exports.TrendBeacon = TrendBeacon;\n    }, function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsBeaconWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsBeaconWidget/TrendsBeaconWidget.js\n ** module id = 32\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsLoadingWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/index.js\n ** module id = 33\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(4));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, , function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var three_charts_1 = __webpack_require__(2);\n        var TrendsLoadingWidget = function(_super) {\n            __extends(TrendsLoadingWidget, _super);\n            function TrendsLoadingWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLoading;\n            };\n            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n            return TrendsLoadingWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n        var TrendLoading = function(_super) {\n            __extends(TrendLoading, _super);\n            function TrendLoading(state, trendName) {\n                _super.call(this, state, trendName);\n                this.isActive = false;\n                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendLoading.createTexture(),\n                    transparent: true\n                }));\n                this.deactivate();\n            }\n            TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n                return trendOptions.enabled && chartState.data.animations.enabled;\n            };\n            TrendLoading.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendLoading.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.onPrependRequest(function() {\n                    return _this.activate();\n                }));\n            };\n            TrendLoading.prototype.prependData = function() {\n                this.deactivate();\n            };\n            TrendLoading.prototype.activate = function() {\n                var mesh = this.mesh;\n                mesh.material.opacity = 1;\n                mesh.rotation.z = 0;\n                var animation = TweenLite.to(this.mesh.rotation, .5, {\n                    z: Math.PI * 2\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animation.restart();\n                });\n                this.animation = animation;\n                this.isActive = true;\n                this.updatePosition();\n            };\n            TrendLoading.prototype.deactivate = function() {\n                this.animation && this.animation.kill();\n                this.mesh.material.opacity = 0;\n                this.isActive = false;\n            };\n            TrendLoading.createTexture = function() {\n                var h = 64, w = 64;\n                return three_charts_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                    ctx.lineWidth = 5;\n                    var center = h / 2;\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n                    ctx.stroke();\n                });\n            };\n            TrendLoading.prototype.onZoomFrame = function() {\n                this.updatePosition();\n            };\n            TrendLoading.prototype.updatePosition = function() {\n                if (!this.isActive) return;\n                var trend = this.trend;\n                var segment = trend.segmentsManager.getStartSegment();\n                var x, y;\n                if (trend.getOptions().type == three_charts_1.TREND_TYPE.LINE) {\n                    x = segment.currentAnimationState.startXVal;\n                    y = segment.currentAnimationState.startYVal;\n                } else {\n                    x = segment.currentAnimationState.xVal - segment.maxLength;\n                    y = segment.currentAnimationState.yVal;\n                }\n                var pointVector = this.chartState.screen.getPointOnChart(x, y);\n                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n            };\n            return TrendLoading;\n        }(three_charts_1.TrendWidget);\n        exports.TrendLoading = TrendLoading;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsLoadingWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsLoadingWidget/TrendsLoadingWidget.js\n ** module id = 34\n ** module chunks = 1\n **/","module.exports = require(\"./TrendsIndicatorWidget\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/index.js\n ** module id = 35\n ** module chunks = 1\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(require(\"three-charts\")); else if (typeof define === \"function\" && define.amd) define([ \"three-charts\" ], factory); else if (typeof exports === \"object\") exports[\"THREE_CHARTS\"] = factory(require(\"three-charts\")); else root[\"THREE_CHARTS\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(3));\n    }, , function(module, exports) {\n        module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var three_charts_1 = __webpack_require__(2);\n        var CANVAS_WIDTH = 128;\n        var CANVAS_HEIGHT = 64;\n        var OFFSET_X = 15;\n        var TrendsIndicatorWidget = function(_super) {\n            __extends(TrendsIndicatorWidget, _super);\n            function TrendsIndicatorWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                return TrendIndicator;\n            };\n            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n            return TrendsIndicatorWidget;\n        }(three_charts_1.TrendsWidget);\n        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n        var TrendIndicator = function(_super) {\n            __extends(TrendIndicator, _super);\n            function TrendIndicator(state, trendName) {\n                _super.call(this, state, trendName);\n                this.initObject();\n                this.onTrendChange();\n            }\n            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasIndicator;\n            };\n            TrendIndicator.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendIndicator.prototype.onTrendChange = function() {\n                var trendData = this.trend.getData();\n                var lastItem = trendData[trendData.length - 1];\n                var texture = this.mesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                texture.needsUpdate = true;\n            };\n            TrendIndicator.prototype.initObject = function() {\n                var color = new three_charts_1.ChartColor(this.trend.getOptions().lineColor);\n                var texture = three_charts_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"15px Arial\";\n                    ctx.fillStyle = color.rgbaStr;\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n            };\n            TrendIndicator.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segmentsManager.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                this.segment = segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.updatePosition = function() {\n                var state = this.chartState;\n                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                var screenWidth = state.data.width;\n                var x = endPointVector.x + OFFSET_X;\n                var y = endPointVector.y;\n                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                if (indicatorIsOutOfScreen) {\n                    if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n                    if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                    y -= 25;\n                }\n                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n            };\n            return TrendIndicator;\n        }(three_charts_1.TrendWidget);\n        exports.TrendIndicator = TrendIndicator;\n    } ]);\n});\n\n\n//# sourceMappingURL=TrendsIndicatorWidget.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./plugins/build/TrendsIndicatorWidget/TrendsIndicatorWidget.js\n ** module id = 36\n ** module chunks = 1\n **/"],"sourceRoot":""}