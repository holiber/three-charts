{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///plugins/src/AxisMarksPlugin/AxisMarksPlugin.js","webpack:///webpack/bootstrap 4b867252af44e1a8fdfc","webpack:///./plugins/src/AxisMarksPlugin/index.ts","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts","webpack:///external \"three-charts\"","webpack:///./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","__export","hasOwnProperty","__extends","d","b","__","constructor","prototype","Object","create","three_charts_1","AxisMarksWidget_1","AXIS_MARK_DEFAULT_OPTIONS","lineWidth","width","value","stickToEdges","color","title","ease","EASING","Quadratic","Out","easeSpeed","opacity","AxisMark","_super","axisMarkPlugin","chart","Utils","patch","remove","setState","pluginsState","_a","AxisMarksPlugin","NAME","_id","getId","update","newOptions","options","deepMerge","UniqCollectionItem","axisMarksPluginOptions","_this","marksCollection","UniqCollection","createInstance","onInitialStateAppliedHandler","onStateChangedHandler","getOptions","axisMarksOptions","createMark","markOptions","name","getLast","providedWidgets","AxisMarksWidget","ChartPlugin","Object3D","THREE","Mesh","MeshBasicMaterial","AxisMarksPlugin_1","apply","arguments","axisMarksWidgets","onReadyHandler","object3D","axisMarksPlugin","getPlugin","forEach","mark","createAxisMarkWidget","bindEvents","axisMark","axisMarkWidget","AxisMarkWidget","push","add","getObject3D","bindEvent","screen","onTransformationFrame","updateMarksPositions","onResize","onResizeHandler","onChange","changedProps","onStateChangeHandler","onCreate","onUpdate","changedOptions","onMarkUpdateHandler","onRemove","onMarkRemoveHandler","widget","find","ind","findIndex","splice","updatePosition","resize","fn","_i","length","widgetName","ChartWidget","DEFAULT_AXIS_MARK_RENDERER","ctx","height","Color","font","state","l","offset","parseInt","clearRect","beginPath","strokeStyle","rgbaStr","fillStyle","axisType","AXIS_TYPE","X","moveTo","lineTo","stroke","fillText","isStickOnBottom","isStickOnTop","displayedValue","frameValue","frameOpacity","initObject","texture","createNearestTexture","mesh","PlaneGeometry","map","transparent","render","needRender","material","image","getContext","renderer","needsUpdate","animation","stop","animationManager","animate","from","to","onTick","arr","isXAxis","hasStickMode","val","opactity","position","x","getPointOnXAxis","y","scrollY","bottomVal","getBottomVal","topVal","getTopVal","needToStickOnTop","needToStickOnBottom","centerYVal","getCenterYVal","scrollX","getTop","getBottom","getPointOnYAxis"],"mappings":"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","file":"plugins/src/AxisMarksPlugin/AxisMarksPlugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"three-charts\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"three-charts\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AxisMarksPlugin\"] = factory(require(\"three-charts\"));\n\telse\n\t\troot[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, root[\"THREE_CHARTS\"][\"AxisMarksPlugin\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"three-charts\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"three-charts\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AxisMarksPlugin\"] = factory(require(\"three-charts\"));\n\telse\n\t\troot[\"THREE_CHARTS\"] = root[\"THREE_CHARTS\"] || {}, root[\"THREE_CHARTS\"][\"AxisMarksPlugin\"] = factory(root[\"three-charts\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1));\r\n\t__export(__webpack_require__(3));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_charts_1 = __webpack_require__(2);\r\n\tvar AxisMarksWidget_1 = __webpack_require__(3);\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    lineWidth: 3,\r\n\t    width: 200,\r\n\t    value: 0,\r\n\t    stickToEdges: false,\r\n\t    color: 'rgba(#45a9e1, 0.6)',\r\n\t    title: '',\r\n\t    ease: three_charts_1.EASING.Quadratic.Out,\r\n\t    easeSpeed: 500,\r\n\t    opacity: 1\r\n\t};\r\n\tvar AxisMark = (function (_super) {\r\n\t    __extends(AxisMark, _super);\r\n\t    function AxisMark(axisMarkPlugin, chart) {\r\n\t        _super.call(this);\r\n\t        this.axisMarkPlugin = axisMarkPlugin;\r\n\t        this.chart = chart;\r\n\t        three_charts_1.Utils.patch(this, AXIS_MARK_DEFAULT_OPTIONS);\r\n\t    }\r\n\t    AxisMark.prototype.remove = function () {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [{ _id: this.getId() }], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMark.prototype.update = function (newOptions) {\r\n\t        var options = three_charts_1.Utils.deepMerge({ _id: this.getId() }, newOptions);\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[AxisMarksPlugin.NAME] = [options], _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    return AxisMark;\r\n\t}(three_charts_1.UniqCollectionItem));\r\n\texports.AxisMark = AxisMark;\r\n\tvar AxisMarksPlugin = (function (_super) {\r\n\t    __extends(AxisMarksPlugin, _super);\r\n\t    function AxisMarksPlugin(axisMarksPluginOptions) {\r\n\t        var _this = this;\r\n\t        _super.call(this, axisMarksPluginOptions);\r\n\t        this.marksCollection = new three_charts_1.UniqCollection({\r\n\t            createInstance: function () { return new AxisMark(_this, _this.chart); }\r\n\t        });\r\n\t    }\r\n\t    AxisMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onStateChangedHandler(this.getOptions());\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.onStateChangedHandler = function (axisMarksOptions) {\r\n\t        this.marksCollection.patch(axisMarksOptions);\r\n\t    };\r\n\t    AxisMarksPlugin.prototype.createMark = function (markOptions) {\r\n\t        this.chart.setState({ pluginsState: (_a = {}, _a[this.name] = [markOptions], _a) });\r\n\t        return this.marksCollection.getLast();\r\n\t        var _a;\r\n\t    };\r\n\t    AxisMarksPlugin.NAME = 'AxisMarks';\r\n\t    AxisMarksPlugin.providedWidgets = [AxisMarksWidget_1.AxisMarksWidget];\r\n\t    return AxisMarksPlugin;\r\n\t}(three_charts_1.ChartPlugin));\r\n\texports.AxisMarksPlugin = AxisMarksPlugin;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar MeshBasicMaterial = THREE.MeshBasicMaterial;\r\n\tvar three_charts_1 = __webpack_require__(2);\r\n\tvar AxisMarksPlugin_1 = __webpack_require__(1);\r\n\t/**\r\n\t * widget for shows marks on axis\r\n\t */\r\n\tvar AxisMarksWidget = (function (_super) {\r\n\t    __extends(AxisMarksWidget, _super);\r\n\t    function AxisMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.axisMarksWidgets = [];\r\n\t    }\r\n\t    AxisMarksWidget.prototype.onReadyHandler = function () {\r\n\t        var _this = this;\r\n\t        this.object3D = new Object3D();\r\n\t        this.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin_1.AxisMarksPlugin.NAME);\r\n\t        this.axisMarksPlugin.marksCollection.forEach(function (mark) { return _this.createAxisMarkWidget(mark); });\r\n\t        this.bindEvents();\r\n\t    };\r\n\t    AxisMarksWidget.prototype.createAxisMarkWidget = function (axisMark) {\r\n\t        var axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\r\n\t        this.axisMarksWidgets.push(axisMarkWidget);\r\n\t        this.object3D.add(axisMarkWidget.getObject3D());\r\n\t    };\r\n\t    AxisMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        var marksCollection = this.axisMarksPlugin.marksCollection;\r\n\t        this.bindEvent(this.chart.screen.onTransformationFrame(function () { return _this.updateMarksPositions(); }), this.chart.onResize(function () { return _this.onResizeHandler(); }), this.chart.onChange(function (changedProps) { return _this.onStateChangeHandler(changedProps); }), marksCollection.onCreate(function (mark) { return _this.createAxisMarkWidget(mark); }), marksCollection.onUpdate(function (mark, changedOptions) { return _this.onMarkUpdateHandler(mark, changedOptions); }), marksCollection.onRemove(function (mark) { return _this.onMarkRemoveHandler(mark); }));\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkUpdateHandler = function (mark, changedOptions) {\r\n\t        var widget = this.axisMarksWidgets.find(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        widget.update(changedOptions);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onMarkRemoveHandler = function (mark) {\r\n\t        var ind = this.axisMarksWidgets.findIndex(function (widget) { return widget.axisMark.getId() == mark.getId(); });\r\n\t        var widget = this.axisMarksWidgets[ind];\r\n\t        this.object3D.remove(widget.getObject3D());\r\n\t        this.axisMarksWidgets.splice(ind, 1);\r\n\t    };\r\n\t    AxisMarksWidget.prototype.updateMarksPositions = function () {\r\n\t        this.forEach(function (widget) { return widget.updatePosition(); });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        this.forEach(function (widget) { return widget.onStateChangeHandler(changedProps); });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.onResizeHandler = function () {\r\n\t        this.forEach(function (widget) {\r\n\t            widget.resize();\r\n\t            widget.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarksWidget.prototype.forEach = function (fn) {\r\n\t        for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\r\n\t            var widget = _a[_i];\r\n\t            fn(widget);\r\n\t        }\r\n\t    };\r\n\t    AxisMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarksWidget.widgetName = 'AxisMarks';\r\n\t    return AxisMarksWidget;\r\n\t}(three_charts_1.ChartWidget));\r\n\texports.AxisMarksWidget = AxisMarksWidget;\r\n\texports.DEFAULT_AXIS_MARK_RENDERER = function (axisMarkWidget, ctx, width, height, chart) {\r\n\t    var markOptions = axisMarkWidget.axisMark;\r\n\t    var color = new three_charts_1.Color(markOptions.color);\r\n\t    var font = chart.state.font.l;\r\n\t    var offset = parseInt(font);\r\n\t    ctx.clearRect(0, 0, width, height);\r\n\t    ctx.beginPath();\r\n\t    ctx.strokeStyle = color.rgbaStr;\r\n\t    ctx.fillStyle = color.rgbaStr;\r\n\t    ctx.lineWidth = markOptions.lineWidth;\r\n\t    ctx.font = font;\r\n\t    if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t        ctx.moveTo(width / 2, 0);\r\n\t        ctx.lineTo(width / 2, height);\r\n\t        ctx.stroke();\r\n\t        ctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\r\n\t    }\r\n\t    else {\r\n\t        ctx.moveTo(0, height / 2);\r\n\t        ctx.lineTo(width, height / 2);\r\n\t        ctx.stroke();\r\n\t        ctx.fillText(markOptions.title, offset, height / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2));\r\n\t    }\r\n\t};\r\n\tvar AxisMarkWidget = (function () {\r\n\t    function AxisMarkWidget(chart, axisMark) {\r\n\t        this.isStickOnTop = false;\r\n\t        this.isStickOnBottom = false;\r\n\t        this.displayedValue = '';\r\n\t        this.height = 0;\r\n\t        this.width = 0;\r\n\t        this.frameValue = 0;\r\n\t        this.frameOpacity = 0;\r\n\t        this.chart = chart;\r\n\t        this.axisMark = axisMark;\r\n\t        this.frameOpacity = axisMark.opacity;\r\n\t        this.frameValue = axisMark.value;\r\n\t        this.object3D = new Object3D();\r\n\t        this.initObject();\r\n\t        this.updatePosition();\r\n\t    }\r\n\t    AxisMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.initObject = function () {\r\n\t        this.width = this.chart.state.width;\r\n\t        this.height = this.chart.state.height;\r\n\t        var markOptions = this.axisMark;\r\n\t        if (markOptions.axisType == three_charts_1.AXIS_TYPE.X) {\r\n\t            this.width = markOptions.width;\r\n\t        }\r\n\t        else {\r\n\t            this.height = markOptions.width;\r\n\t        }\r\n\t        var texture = three_charts_1.Utils.createNearestTexture(this.width, this.height);\r\n\t        this.mesh = new Mesh(new THREE.PlaneGeometry(this.width, this.height), new MeshBasicMaterial({ map: texture, transparent: true }));\r\n\t        this.object3D.add(this.mesh);\r\n\t        this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.onStateChangeHandler = function (changedProps) {\r\n\t        var needRender = this.axisMark.needRender && this.axisMark.needRender(this, this.chart, changedProps);\r\n\t        needRender && this.render();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.render = function () {\r\n\t        var markOptions = this.axisMark;\r\n\t        var mesh = this.mesh;\r\n\t        var texture = mesh.material.map;\r\n\t        var ctx = texture.image.getContext('2d');\r\n\t        var renderer = markOptions.renderer ? markOptions.renderer : exports.DEFAULT_AXIS_MARK_RENDERER;\r\n\t        if (markOptions.displayedValue)\r\n\t            this.displayedValue = markOptions.displayedValue(this, this.chart);\r\n\t        renderer(this, ctx, this.width, this.height, this.chart);\r\n\t        texture.needsUpdate = true;\r\n\t    };\r\n\t    AxisMarkWidget.prototype.resize = function () {\r\n\t        this.object3D.remove(this.mesh);\r\n\t        this.initObject();\r\n\t    };\r\n\t    AxisMarkWidget.prototype.update = function (options) {\r\n\t        var _this = this;\r\n\t        var mark = this.axisMark;\r\n\t        this.animation && this.animation.stop();\r\n\t        this.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\r\n\t            .from([this.frameValue, this.frameOpacity])\r\n\t            .to([mark.value, mark.opacity])\r\n\t            .onTick(function (arr) {\r\n\t            _this.frameValue = arr[0];\r\n\t            _this.frameOpacity = arr[1];\r\n\t            _this.updatePosition();\r\n\t        });\r\n\t    };\r\n\t    AxisMarkWidget.prototype.updatePosition = function () {\r\n\t        var chart = this.chart;\r\n\t        var screen = chart.screen;\r\n\t        var mark = this.axisMark;\r\n\t        var isXAxis = mark.axisType == three_charts_1.AXIS_TYPE.X;\r\n\t        var hasStickMode = mark.stickToEdges;\r\n\t        var _a = chart.state, width = _a.width, height = _a.height;\r\n\t        var val = this.frameValue;\r\n\t        var opactity = this.frameOpacity;\r\n\t        var material = this.mesh.material;\r\n\t        material.opacity = opactity;\r\n\t        if (isXAxis) {\r\n\t            // TODO: make stickToEdges mode for AXIS_TYPE.X\r\n\t            this.mesh.position.x = screen.getPointOnXAxis(val);\r\n\t            this.mesh.position.y = screen.options.scrollY + height / 2;\r\n\t        }\r\n\t        else {\r\n\t            var bottomVal = screen.getBottomVal();\r\n\t            var topVal = screen.getTopVal();\r\n\t            var needToStickOnTop = hasStickMode && val > topVal;\r\n\t            var needToStickOnBottom = hasStickMode && val < bottomVal;\r\n\t            var centerYVal = screen.getCenterYVal();\r\n\t            this.mesh.position.x = screen.options.scrollX + width / 2;\r\n\t            if (needToStickOnTop) {\r\n\t                this.isStickOnTop = true;\r\n\t                this.mesh.position.y = screen.getTop();\r\n\t            }\r\n\t            else if (needToStickOnBottom) {\r\n\t                this.isStickOnBottom = true;\r\n\t                this.mesh.position.y = screen.getBottom();\r\n\t            }\r\n\t            else {\r\n\t                this.isStickOnBottom = this.isStickOnTop = false;\r\n\t                this.mesh.position.y = screen.getPointOnYAxis(val);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return AxisMarkWidget;\r\n\t}());\r\n\texports.AxisMarkWidget = AxisMarkWidget;\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** plugins/src/AxisMarksPlugin/AxisMarksPlugin.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4b867252af44e1a8fdfc\n **/","export * from './AxisMarksPlugin';\nexport * from './AxisMarksWidget';\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/index.ts\n **/","\nimport {\n\tChartPlugin, ChartWidget, AXIS_TYPE, Utils, Chart, TColor, IChartState, UniqCollection,\n\tUniqCollectionItem, IIteralable, TEase, EASING\n} from 'three-charts';\nimport { AxisMarksWidget, AxisMarkWidget } from './AxisMarksWidget';\n\nexport declare type TAxisMarksPluginOptions = IAxisMarkOptions[];\n\nexport interface IAxisMarkOptions {\n\tname?: string;\n\ttitle?: string;\n\tdescription?: string;\n\taxisType?: AXIS_TYPE;\n\tcolor?: TColor;\n\tlineWidth?: number;\n\twidth?: number;\n\tstickToEdges?: boolean;\n\tvalue?: number;\n\tdisplayedValue?: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData?: any;\n\tneedRender?: (axisMarkWidget: AxisMarkWidget, chart: Chart, changedProps?: IChartState) => boolean,\n\tease?: TEase;\n\teaseSpeed?: number;\n\topacity?: number;\n\trenderer?: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: IAxisMarkOptions = {\n\tlineWidth: 3,\n\twidth: 200,\n\tvalue: 0,\n\tstickToEdges: false,\n\tcolor: 'rgba(#45a9e1, 0.6)',\n\ttitle: '',\n\tease: EASING.Quadratic.Out,\n\teaseSpeed: 500,\n\topacity: 1\n};\n\nexport class AxisMark extends UniqCollectionItem implements IAxisMarkOptions {\n\tname: string;\n\ttitle: string;\n\tdescription: string;\n\taxisType: AXIS_TYPE;\n\tcolor: TColor;\n\tlineWidth: number;\n\twidth: number;\n\tstickToEdges: boolean;\n\tvalue: number;\n\topacity: number;\n\tdisplayedValue: (axisMarkWidget: AxisMarkWidget, chart: Chart) => string;\n\tuserData: any;\n\tneedRender: (axisMarkWidget: AxisMarkWidget, chart: Chart, changedProps?: IChartState) => boolean;\n\tease?: TEase;\n\teaseSpeed?: number;\n\trenderer: (\n\t\taxisMarkWidget: AxisMarkWidget,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number,\n\t\tchart: Chart\n\t) => any;\n\n\tconstructor (private axisMarkPlugin: AxisMarksPlugin, private chart: Chart) {\n\t\tsuper();\n\t\tUtils.patch(this as IIteralable, AXIS_MARK_DEFAULT_OPTIONS);\n\t}\n\n\tremove() {\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [{_id: this.getId()}]}});\n\t}\n\n\tupdate(newOptions: IAxisMarkOptions) {\n\t\tlet options = Utils.deepMerge({_id: this.getId()} as IAxisMarkOptions, newOptions);\n\t\tthis.chart.setState({pluginsState: {[AxisMarksPlugin.NAME]: [options]}});\n\t}\n}\n\n\n\nexport class AxisMarksPlugin extends ChartPlugin<TAxisMarksPluginOptions> {\n\tstatic NAME = 'AxisMarks';\n\tstatic providedWidgets: typeof ChartWidget[] = [AxisMarksWidget];\n\n\tmarksCollection = new UniqCollection<AxisMark, IAxisMarkOptions>({\n\t\tcreateInstance: () => new AxisMark(this, this.chart)\n\t});\n\n\tconstructor(axisMarksPluginOptions: TAxisMarksPluginOptions) {\n\t\tsuper(axisMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onStateChangedHandler(this.getOptions());\n\t}\n\n\tprotected onStateChangedHandler(axisMarksOptions: IAxisMarkOptions[]) {\n\t\tthis.marksCollection.patch(axisMarksOptions);\n\t}\n\n\tcreateMark(markOptions: IAxisMarkOptions): AxisMark {\n\t\tthis.chart.setState({pluginsState: {[this.name]: [markOptions]}});\n\t\treturn this.marksCollection.getLast();\n\t}\n\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksPlugin.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"three-charts\"\n ** module id = 2\n ** module chunks = 0 1 2 3 4 5\n **/","import Object3D = THREE.Object3D;\nimport Geometry = THREE.Geometry;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Mesh = THREE.Mesh;\nimport Texture = THREE.Texture;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\n\nimport { ChartWidget, Chart, Color, AXIS_TYPE, Utils, IChartState, Animation } from 'three-charts';\nimport { AxisMark, AxisMarksPlugin, IAxisMarkOptions } from \"./AxisMarksPlugin\";\nimport BufferGeometry = THREE.BufferGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\n\n/**\n * widget for shows marks on axis\n */\nexport class AxisMarksWidget extends ChartWidget {\n\tstatic widgetName = 'AxisMarks';\n\n\tprotected object3D: Object3D;\n\tprotected axisMarksWidgets: AxisMarkWidget[] = [];\n\tprotected axisMarksPlugin: AxisMarksPlugin;\n\n\tonReadyHandler() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.axisMarksPlugin = this.chart.getPlugin(AxisMarksPlugin.NAME) as AxisMarksPlugin;\n\t\tthis.axisMarksPlugin.marksCollection.forEach(mark => this.createAxisMarkWidget(mark));\n\t\tthis.bindEvents();\n\t}\n\n\tprotected createAxisMarkWidget(axisMark: AxisMark) {\n\t\tvar axisMarkWidget = new AxisMarkWidget(this.chart, axisMark);\n\t\tthis.axisMarksWidgets.push(axisMarkWidget);\n\t\tthis.object3D.add(axisMarkWidget.getObject3D());\n\t}\n\n\tprotected bindEvents() {\n\t\tlet marksCollection = this.axisMarksPlugin.marksCollection;\n\t\tthis.bindEvent(\n\t\t\tthis.chart.screen.onTransformationFrame(() => this.updateMarksPositions()),\n\t\t\tthis.chart.onResize(() => this.onResizeHandler()),\n\t\t\tthis.chart.onChange((changedProps) => this.onStateChangeHandler(changedProps)),\n\t\t\tmarksCollection.onCreate((mark) => this.createAxisMarkWidget(mark)),\n\t\t\tmarksCollection.onUpdate((mark, changedOptions) => this.onMarkUpdateHandler(mark, changedOptions)),\n\t\t\tmarksCollection.onRemove((mark) => this.onMarkRemoveHandler(mark))\n\t\t);\n\t}\n\n\tprotected onMarkUpdateHandler(mark: AxisMark, changedOptions: IAxisMarkOptions) {\n\t\tlet widget = this.axisMarksWidgets.find(widget => widget.axisMark.getId() == mark.getId());\n\t\twidget.update(changedOptions);\n\t}\n\n\tprotected onMarkRemoveHandler(mark: AxisMark) {\n\t\tlet ind = this.axisMarksWidgets.findIndex(widget => widget.axisMark.getId() == mark.getId());\n\t\tlet widget = this.axisMarksWidgets[ind];\n\t\tthis.object3D.remove(widget.getObject3D());\n\t\tthis.axisMarksWidgets.splice(ind, 1);\n\t}\n\n\tprotected updateMarksPositions() {\n\t\tthis.forEach(widget => widget.updatePosition());\n\t}\n\n\tprotected onStateChangeHandler(changedProps: IChartState) {\n\t\tthis.forEach(widget => widget.onStateChangeHandler(changedProps));\n\t}\n\n\tprotected onResizeHandler() {\n\t\tthis.forEach(widget => {\n\t\t\twidget.resize();\n\t\t\twidget.updatePosition();\n\t\t});\n\t}\n\n\tforEach(fn: (widget: AxisMarkWidget) => any) {\n\t\tfor (let widget of this.axisMarksWidgets) fn(widget);\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n}\n\n\n\nexport const DEFAULT_AXIS_MARK_RENDERER = (\n\taxisMarkWidget: AxisMarkWidget,\n\tctx: CanvasRenderingContext2D,\n\twidth: number,\n\theight: number,\n\tchart: Chart\n) => {\n\tlet markOptions = axisMarkWidget.axisMark;\n\tlet color = new Color(markOptions.color);\n\tlet font = chart.state.font.l;\n\tlet offset = parseInt(font);\n\tctx.clearRect(0,0, width, height);\n\tctx.beginPath();\n\tctx.strokeStyle = color.rgbaStr;\n\tctx.fillStyle = color.rgbaStr;\n\tctx.lineWidth = markOptions.lineWidth;\n\tctx.font = font;\n\n\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\tctx.moveTo(width / 2, 0);\n\t\tctx.lineTo(width / 2, height);\n\t\tctx.stroke();\n\t\tctx.fillText(markOptions.title, width / 2 + offset, offset * 2);\n\t} else {\n\t\tctx.moveTo(0, height / 2);\n\t\tctx.lineTo(width, height / 2);\n\t\tctx.stroke();\n\t\tctx.fillText(markOptions.title, offset,\n\t\t\theight / 2 + (axisMarkWidget.isStickOnBottom ? -offset * 2 : offset * 2)\n\t\t);\n\t}\n};\n\n\nexport class AxisMarkWidget {\n\taxisMark: AxisMark;\n\tisStickOnTop = false;\n\tisStickOnBottom = false;\n\tdisplayedValue = '';\n\theight = 0;\n\twidth = 0;\n\tframeValue = 0;\n\tframeOpacity = 0;\n\tanimation: Animation<number[]>;\n\tprotected object3D: Object3D;\n\tprotected mesh: Mesh;\n\tprotected chart: Chart;\n\n\n\tconstructor(chart: Chart, axisMark: AxisMark) {\n\t\tthis.chart = chart;\n\t\tthis.axisMark = axisMark;\n\t\tthis.frameOpacity = axisMark.opacity;\n\t\tthis.frameValue = axisMark.value;\n\t\tthis.object3D = new Object3D();\n\t\tthis.initObject();\n\t\tthis.updatePosition();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tinitObject() {\n\t\tthis.width = this.chart.state.width;\n\t\tthis.height = this.chart.state.height;\n\t\tlet markOptions = this.axisMark;\n\t\tif (markOptions.axisType == AXIS_TYPE.X) {\n\t\t\tthis.width = markOptions.width;\n\t\t} else {\n\t\t\tthis.height = markOptions.width;\n\t\t}\n\t\tlet texture = Utils.createNearestTexture(this.width, this.height);\n\n\t\tthis.mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(this.width, this.height),\n\t\t\tnew MeshBasicMaterial({map: texture, transparent: true})\n\t\t);\n\t\tthis.object3D.add(this.mesh);\n\t\tthis.render();\n\t}\n\n\tonStateChangeHandler(changedProps: IChartState) {\n\t\tlet needRender = this.axisMark.needRender && this.axisMark.needRender(this, this.chart, changedProps);\n\t\tneedRender && this.render();\n\t}\n\n\trender() {\n\t\tlet markOptions = this.axisMark;\n\t\tlet mesh = this.mesh\n\t\tlet texture = (mesh.material as MeshBasicMaterial).map;\n\t\tlet ctx = (texture.image as HTMLCanvasElement).getContext('2d');\n\t\tlet renderer = markOptions.renderer ? markOptions.renderer : DEFAULT_AXIS_MARK_RENDERER;\n\t\tif (markOptions.displayedValue) this.displayedValue = markOptions.displayedValue(this, this.chart);\n\t\trenderer(this, ctx, this.width, this.height, this.chart);\n\t\ttexture.needsUpdate = true;\n\t}\n\n\tresize() {\n\t\tthis.object3D.remove(this.mesh);\n\t\tthis.initObject();\n\t}\n\n\tupdate(options: IAxisMarkOptions) {\n\t\tlet mark = this.axisMark;\n\t\tthis.animation && this.animation.stop();\n\t\tthis.animation = this.chart.animationManager.animate(mark.easeSpeed, mark.ease)\n\t\t\t.from([this.frameValue, this.frameOpacity])\n\t\t\t.to([mark.value, mark.opacity])\n\t\t\t.onTick((arr) => {\n\t\t\t\tthis.frameValue = arr[0];\n\t\t\t\tthis.frameOpacity = arr[1];\n\t\t\t\tthis.updatePosition();\n\t\t\t});\n\t}\n\n\tupdatePosition()  {\n\t\tlet chart = this.chart;\n\t\tlet screen = chart.screen;\n\t\tlet mark = this.axisMark;\n\t\tlet isXAxis = mark.axisType == AXIS_TYPE.X;\n\t\tlet hasStickMode = mark.stickToEdges;\n\t\tlet {width, height} = chart.state;\n\t\tlet val = this.frameValue;\n\t\tlet opactity = this.frameOpacity;\n\t\tlet material = (this.mesh as Mesh).material;\n\n\t\tmaterial.opacity = opactity;\n\n\t\tif (isXAxis) {\n\t\t\t// TODO: make stickToEdges mode for AXIS_TYPE.X\n\t\t\tthis.mesh.position.x = screen.getPointOnXAxis(val);\n\t\t\tthis.mesh.position.y = screen.options.scrollY + height / 2;\n\t\t} else {\n\t\t\tlet bottomVal = screen.getBottomVal();\n\t\t\tlet topVal = screen.getTopVal();\n\t\t\tlet needToStickOnTop = hasStickMode && val > topVal;\n\t\t\tlet needToStickOnBottom = hasStickMode && val < bottomVal;\n\t\t\tlet centerYVal = screen.getCenterYVal();\n\t\t\tthis.mesh.position.x = screen.options.scrollX + width / 2;\n\t\t\tif (needToStickOnTop) {\n\t\t\t\tthis.isStickOnTop = true;\n\t\t\t\tthis.mesh.position.y = screen.getTop();\n\t\t\t} else if (needToStickOnBottom) {\n\t\t\t\tthis.isStickOnBottom = true;\n\t\t\t\tthis.mesh.position.y = screen.getBottom();\n\t\t\t} else {\n\t\t\t\tthis.isStickOnBottom = this.isStickOnTop = false;\n\t\t\t\tthis.mesh.position.y = screen.getPointOnYAxis(val);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/AxisMarksPlugin/AxisMarksWidget.ts\n **/"],"sourceRoot":""}